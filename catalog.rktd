#hash(("1d6"
  .
  #hasheq((author . "jesse@lisp.sh")
          (authors . ("jesse@lisp.sh"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "1d6" "doc/1d6@1d6/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/1d6.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/1d6.txt")))
          (checksum . "767902aafb9d466a30f1fa6938c3a50f5fe35bdf")
          (checksum-error . #f)
          (conflicts . ())
          (date-added . 1553839150)
          (dependencies
           .
           ("base"
            "brag"
            "beautiful-racket-lib"
            "scribble-lib"
            "rackunit-lib"
            "racket-doc"
            "beautiful-racket-lib"))
          (dependency-names
           .
           ("base"
            "brag"
            "beautiful-racket-lib"
            "scribble-lib"
            "rackunit-lib"
            "racket-doc"
            "beautiful-racket-lib"))
          (description
           .
           "A partial implementation of the Troll dice-rolling language in Racket.")
          (implies . ())
          (last-checked . 1557343091)
          (last-edit . 1553839150)
          (last-updated . 1553839150)
          (modules
           .
           ((lib "1d6/expander.rkt")
            (lib "1d6/tokenizer.rkt")
            (lib "1d6/reader.rkt")
            (lib "1d6/main.rkt")
            (lib "1d6/parser.rkt")
            (lib "1d6/grammar.rkt")
            (lib "1d6/scribblings/1d6.scrbl")))
          (name . "1d6")
          (nix-sha256
           .
           "1jzbr5y4kcwb1i2nf7ayjc1j7g4ymcfx33ydnchx3zqplpmaqbvm")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:jesse@lisp.sh . #t)
                   (game . #t)
                   (lang . #t)
                   (random . #t)
                   (ring:2 . #t)))
          (source . "https://github.com/jessealama/1d6.git")
          (tags . ("game" "lang" "random"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "767902aafb9d466a30f1fa6938c3a50f5fe35bdf")
                          (source . "https://github.com/jessealama/1d6.git")
                          (source_url
                           .
                           "https://github.com/jessealama/1d6.git")))))))
 ("2d"
  .
  #hash((author . "robby@racket-lang.org")
        (checksum . "fdaf085417cc18404e9cf8f9fb4f9f9b694aa64b")
        (dependencies . ("2d-lib" "2d-doc"))
        (dependency-names . ("2d-lib" "2d-doc"))
        (description . "robby@racket-lang.org")
        (modules . ())
        (name . "2d")
        (source . "https://download.racket-lang.org/releases/7.2/pkgs/2d.zip")
        (tags . ())))
 ("2d-doc"
  .
  #hash((author . "robby@racket-lang.org")
        (checksum . "80bc8365ba8f7d7b88ded856c2d75fe2adc2ad65")
        (dependencies
         .
         ("base"
          "2d-lib"
          "scribble-lib"
          "racket-doc"
          "syntax-color-doc"
          "syntax-color-lib"))
        (dependency-names
         .
         ("base"
          "2d-lib"
          "scribble-lib"
          "racket-doc"
          "syntax-color-doc"
          "syntax-color-lib"))
        (description . "robby@racket-lang.org")
        (modules . ())
        (name . "2d-doc")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/2d-doc.zip")
        (tags . ())))
 ("2d-lib"
  .
  #hash((author . "robby@racket-lang.org")
        (checksum . "2191d5db2b816a0b1b0256323ca746527d949430")
        (dependencies
         .
         (("base" #:version "6.90.0.19") "scribble-lib" "syntax-color-lib"))
        (dependency-names . ("base" "scribble-lib" "syntax-color-lib"))
        (description . "robby@racket-lang.org")
        (modules . ())
        (name . "2d-lib")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/2d-lib.zip")
        (tags . ())))
 ("2d-test"
  .
  #hash((author . "robby@racket-lang.org")
        (checksum . "947d6e3944cd335082d0d18719fc40e3b9b539a0")
        (dependencies
         .
         ("base"
          "2d-lib"
          "racket-index"
          "rackunit-lib"
          "option-contract-lib"
          "at-exp-lib"
          "gui-lib"
          "syntax-color-lib"))
        (dependency-names
         .
         ("base"
          "2d-lib"
          "racket-index"
          "rackunit-lib"
          "option-contract-lib"
          "at-exp-lib"
          "gui-lib"
          "syntax-color-lib"))
        (description . "robby@racket-lang.org")
        (modules . ())
        (name . "2d-test")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/2d-test.zip")
        (tags . ())))
 ("2htdp-typed"
  .
  #hasheq((author . "lexi.lambda@gmail.com")
          (authors . ("lexi.lambda@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "2htdp-typed"
                    "doc/2htdp-typed@2htdp-typed/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/2htdp-typed.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/2htdp-typed.txt")))
          (checksum . "b46c957f0ad7490bc7b0f01da0e80380f34cac2d")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "draw-lib"
            "htdp-lib"
            "typed-racket-lib"
            "typed-racket-more"
            "unstable-list-lib"
            "unstable-contract-lib"
            "scribble-lib"
            "racket-doc"
            "htdp-doc"
            "typed-racket-doc"))
          (dependency-names
           .
           ("base"
            "draw-lib"
            "htdp-lib"
            "typed-racket-lib"
            "typed-racket-more"
            "unstable-list-lib"
            "unstable-contract-lib"
            "scribble-lib"
            "racket-doc"
            "htdp-doc"
            "typed-racket-doc"))
          (description . "A partial version of 2htdp for Typed Racket")
          (implies . ())
          (last-checked . 1557343092)
          (last-edit . 1493076385)
          (last-updated . 1502815863)
          (modules
           .
           ((lib "typed/scribblings/2htdp-typed.scrbl")
            (lib "typed/2htdp/batch-io.rkt")
            (lib "typed/2htdp/image.rkt")
            (lib "typed/2htdp/private/big-bang-wrapper.rkt")
            (lib "typed/lang/posn.rkt")
            (lib "typed/2htdp/universe.rkt")))
          (name . "2htdp-typed")
          (nix-sha256
           .
           "0kdrbxmy2bx9rj9is7nk168nc3rx77yig2b8kpyv1cjgmfhk53za")
          (ring . 1)
          (search-terms
           .
           #hasheq((2htdp . #t)
                   (:build-success: . #t)
                   (:docs: . #t)
                   (author:lexi.lambda@gmail.com . #t)
                   (big-bang . #t)
                   (gui . #t)
                   (ring:1 . #t)
                   (typed-racket . #t)))
          (source . "git://github.com/lexi-lambda/racket-2htdp-typed")
          (tags . ("2htdp" "big-bang" "gui" "typed-racket"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "b46c957f0ad7490bc7b0f01da0e80380f34cac2d")
                          (source
                           .
                           "git://github.com/lexi-lambda/racket-2htdp-typed")
                          (source_url
                           .
                           "http://github.com/lexi-lambda/racket-2htdp-typed/tree/master")))
                 ("6.1.1"
                  .
                  #hasheq((checksum
                           .
                           "4f3d46b80f59f5a4dd47d3384c68f6c07c923329")
                          (source
                           .
                           "git://github.com/lexi-lambda/racket-2htdp-typed#v6.1.1")
                          (source_url
                           .
                           "http://github.com/lexi-lambda/racket-2htdp-typed/tree/master#v6.1.1")))))))
 ("3d-model"
  .
  #hasheq((author . "code_man@cybnet.ch")
          (authors . ("code_man@cybnet.ch"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . "server/built/deps/3d-model.txt")
                 (docs
                  .
                  (("main" "3d-model" "doc/3d-model@3d-model/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/3d-model.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/3d-model.txt")))
          (checksum . "078e2dcd4a62eb026dedbdf3fdeaef3efc8e9925")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ())
          (dependency-names . ())
          (description . "3d-model vertex/tri representaion library")
          (implies . ())
          (last-checked . 1557343092)
          (last-edit . 1396428048)
          (last-updated . 1502812262)
          (modules
           .
           ((lib "3d-model/3d-model.scrbl") (lib "3d-model/3d-model.rkt")))
          (name . "3d-model")
          (ring . 1)
          (search-terms
           .
           #hasheq((3d . #t)
                   (:build-dep-fail: . #t)
                   (:build-success: . #t)
                   (:docs: . #t)
                   (author:code_man@cybnet.ch . #t)
                   (model . #t)
                   (ring:1 . #t)))
          (source . "http://code_man.cybnet.ch/racket/3d-model.zip")
          (tags . ("3d" "model"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "078e2dcd4a62eb026dedbdf3fdeaef3efc8e9925")
                          (source
                           .
                           "http://code_man.cybnet.ch/racket/3d-model.zip")
                          (source_url
                           .
                           "http://code_man.cybnet.ch/racket/3d-model.zip")))))))
 ("3s"
  .
  #hasheq((author . "jay.mccarthy@gmail.com")
          (authors . ("jay.mccarthy@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("salvage" "3s" "doc/3s@3s/index.html")))
                 (failure-log . "server/built/fail/3s.txt")
                 (min-failure-log . #f)
                 (success-log . #f)
                 (test-failure-log . #f)
                 (test-success-log . #f)))
          (checksum . "b84991a59ced42303420c58d71702ed9db6a2644")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("lux" "base" "openal" "racket-doc" "scribble-lib"))
          (dependency-names
           .
           ("lux" "base" "openal" "racket-doc" "scribble-lib"))
          (description
           .
           "positional sound and mixing for lux and other programs")
          (implies . ())
          (last-checked . 1557343093)
          (last-edit . 1447778167)
          (last-updated . 1527813719)
          (modules
           .
           ((lib "3s/tests/example.rkt")
            (lib "3s/main.rkt")
            (lib "3s/3s.scrbl")
            (lib "lux/chaos/3s.rkt")))
          (name . "3s")
          (nix-sha256
           .
           "16cbdgflydjqg24zgwgspa4w8ga8k07gph6ydc5hhllmnilmpi4z")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-fail: . #t)
                   (:docs-error: . #t)
                   (:docs: . #t)
                   (audio . #t)
                   (author:jay.mccarthy@gmail.com . #t)
                   (games . #t)
                   (k . #t)
                   (ring:1 . #t)
                   (s . #t)))
          (source . "git://github.com/jeapostrophe/3s")
          (tags . ("audio" "games" "k" "s"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "b84991a59ced42303420c58d71702ed9db6a2644")
                          (source . "git://github.com/jeapostrophe/3s")
                          (source_url
                           .
                           "http://github.com/jeapostrophe/3s/tree/master")))))))
 ("Adapton"
  .
  #hasheq((author . "cwolfmentzer@gmail.com hammer@cs.umd.edu")
          (authors . ("cwolfmentzer@gmail.com" "hammer@cs.umd.edu"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "adapton" "doc/adapton@Adapton/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/Adapton.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/Adapton.txt")))
          (checksum . "9ddfec8a22809cfb37fbbd8871a088fc3bd51787")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "rackunit-lib" "scribble-lib" "racket-doc"))
          (dependency-names
           .
           ("base" "rackunit-lib" "scribble-lib" "racket-doc"))
          (description
           .
           "Adapton: Composable, Demand-Driven Incremental Computation")
          (implies . ())
          (last-checked . 1557339494)
          (last-edit . 1440430256)
          (last-updated . 1513628061)
          (modules
           .
           ((lib "adapton/graphing.rkt")
            (lib "adapton/main.rkt")
            (lib "adapton/adapton.rkt")
            (lib "adapton/tools-for-testing.rkt")
            (lib "adapton/tests.rkt")
            (lib "adapton/adapton.scrbl")
            (lib "adapton/data-structures.rkt")
            (lib "adapton/merge-sort.rkt")
            (lib "adapton/memo-table-modification-tools.rkt")))
          (name . "Adapton")
          (nix-sha256
           .
           "1bzazr6gfm220an2xhrig379rhanw9ayllig6wbifi9qfdziyl4f")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:cwolfmentzer@gmail.com . #t)
                   (author:hammer@cs.umd.edu . #t)
                   (memoization . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/plum-umd/adapton.racket")
          (tags . ("memoization"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "9ddfec8a22809cfb37fbbd8871a088fc3bd51787")
                          (source
                           .
                           "git://github.com/plum-umd/adapton.racket")
                          (source_url
                           .
                           "http://github.com/plum-umd/adapton.racket/tree/master")))))))
 ("DrRacketTheme"
  .
  #hasheq((author . "1227847322@qq.com")
          (authors . ("1227847322@qq.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/DrRacketTheme.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/DrRacketTheme.txt")))
          (checksum . "6ee86a2b2824f755bdaf771c788559d9cab7639c")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "drracket" "gui-lib" "pict-lib" "draw-lib"))
          (dependency-names
           .
           ("base" "drracket" "gui-lib" "pict-lib" "draw-lib"))
          (description
           .
           "set the background image for DrRacket\r\nView -> Set Background")
          (implies . ())
          (last-checked . 1557339544)
          (last-edit . 1530784261)
          (last-updated . 1530841362)
          (modules . ((lib "DrRacketTheme/theme.rkt")))
          (name . "DrRacketTheme")
          (nix-sha256
           .
           "09p0aqw054i178pz60z3xglpnhbm2ns4j42z34gsci5y2grlzkz5")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:1227847322@qq.com . #t)
                   (plugin . #t)
                   (ring:2 . #t)))
          (source . "https://github.com/Syntacticlosure/DrRacketTheme.git")
          (tags . ("plugin"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "6ee86a2b2824f755bdaf771c788559d9cab7639c")
                          (source
                           .
                           "https://github.com/Syntacticlosure/DrRacketTheme.git")
                          (source_url
                           .
                           "https://github.com/Syntacticlosure/DrRacketTheme.git")))))))
 ("Drrackgit"
  .
  #hasheq((author . "bradley.busching@gmail.com")
          (authors . ("bradley.busching@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . "server/built/deps/Drrackgit.txt")
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/Drrackgit.txt")
                 (test-failure-log . "server/built/test-fail/Drrackgit.txt")
                 (test-success-log . #f)))
          (checksum . "7c2836bf5a08858eca7d32959d8ae3fd90a5defe")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("libgit2"))
          (dependency-names . ("libgit2"))
          (description . "A git plugin for DrRacket.")
          (implies . ())
          (last-checked . 1557339544)
          (last-edit . 1497302902)
          (last-updated . 1513894499)
          (modules . ((lib "Drrackgit/drrackgit.rkt")))
          (name . "Drrackgit")
          (nix-sha256
           .
           "0590q06amx6slxmnfzban64q4x98vpnsr8fr023fkhs0rs97cfn6")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-dep-fail: . #t)
                   (:build-success: . #t)
                   (author:bradley.busching@gmail.com . #t)
                   (git . #t)
                   (github . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/bbusching/drrackgit")
          (tags . ("git" "github"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "7c2836bf5a08858eca7d32959d8ae3fd90a5defe")
                          (source . "git://github.com/bbusching/drrackgit")
                          (source_url
                           .
                           "http://github.com/bbusching/drrackgit/tree/master")))))))
 ("Fairylog"
  .
  #hasheq((author . "pezi_pink@pinksquirrellabs.com")
          (authors . ("pezi_pink@pinksquirrellabs.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "fairylog" "doc/fairylog@Fairylog/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/Fairylog.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/Fairylog.txt")))
          (checksum . "f0c1d0d82e2ed9ff02486ddd91a0ede5c5483ef7")
          (checksum-error . #f)
          (conflicts . ())
          (date-added . 1549919081)
          (dependencies . ("base" "scribble-lib" "racket-doc"))
          (dependency-names . ("base" "scribble-lib" "racket-doc"))
          (description
           .
           "A Verilog dialect and source-to-source compiler, with various compile time features and macros.")
          (implies . ())
          (last-checked . 1557339548)
          (last-edit . 1549919081)
          (last-updated . 1556553954)
          (modules
           .
           ((lib "fairylog/lang/language-info.rkt")
            (lib "fairylog/reader.rkt")
            (lib "fairylog/lang/reader.rkt")
            (lib "fairylog/main.rkt")
            (lib "fairylog/expander.rkt")
            (lib "fairylog/scribblings/fairylog.scrbl")
            (lib "fairylog/lang/runtime-config.rkt")))
          (name . "Fairylog")
          (nix-sha256
           .
           "10m9y8qp71qd7njwsigl23w1v5zxs1ysirmflwqgdmi3vnp8969c")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:pezi_pink@pinksquirrellabs.com . #t)
                   (fpga . #t)
                   (ring:2 . #t)
                   (verilog . #t)))
          (source . "https://github.com/pezipink/fairylog.git")
          (tags . ("fpga" "verilog"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "f0c1d0d82e2ed9ff02486ddd91a0ede5c5483ef7")
                          (source
                           .
                           "https://github.com/pezipink/fairylog.git")
                          (source_url
                           .
                           "https://github.com/pezipink/fairylog.git")))))))
 ("Funktionuckelt"
  .
  #hasheq((author . "coluckenbach@adct.com")
          (authors . ("coluckenbach@adct.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/Funktionuckelt.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/Funktionuckelt.txt")))
          (checksum . "c465bd2afced654c4bf08b70740cd2be6a383a62")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base"))
          (dependency-names . ("base"))
          (description . "A dark eye-friendly color scheme for Racket")
          (implies . ())
          (last-checked . 1557339592)
          (last-edit . 1544213076)
          (last-updated . 1544218978)
          (modules . ())
          (name . "Funktionuckelt")
          (nix-sha256
           .
           "1xsw2ls5671mc3n8kxpv8in6x1bfdbww8jgb6w6xaxd45qnv3s6c")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:coluckenbach@adct.com . #t)
                   (colorscheme . #t)
                   (ring:2 . #t)))
          (source . "https://github.com/DondiBronson/Funktionuckelt.git")
          (tags . ("colorscheme"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "c465bd2afced654c4bf08b70740cd2be6a383a62")
                          (source
                           .
                           "https://github.com/DondiBronson/Funktionuckelt.git")
                          (source_url
                           .
                           "https://github.com/DondiBronson/Funktionuckelt.git")))))))
 ("GLPK"
  .
  #hasheq((author . "clements@racket-lang.org")
          (authors . ("clements@racket-lang.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "glpk" "doc/glpk@GLPK/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/GLPK.txt")
                 (test-failure-log . "server/built/test-fail/GLPK.txt")
                 (test-success-log . #f)))
          (checksum . "b53bad9507090646f3b27844c813f4e2b82ef2b4")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "typed-racket-lib"
            "racket-doc"
            "scribble-lib"
            "scribble-math"
            "typed-racket-more"))
          (dependency-names
           .
           ("base"
            "typed-racket-lib"
            "racket-doc"
            "scribble-lib"
            "scribble-math"
            "typed-racket-more"))
          (description
           .
           "An interface to the Gnu Linear Programming Kit (GLPK)")
          (implies . ())
          (last-checked . 1557339596)
          (last-edit . 1498178980)
          (last-updated . 1550346630)
          (modules
           .
           ((lib "glpk/lp-solve.rkt")
            (lib "glpk/chicken-example.rkt")
            (lib "glpk/tests/use-lib.rkt")
            (lib "glpk/tests/tests.rkt")
            (lib "glpk/glpk.scrbl")
            (lib "glpk/main.rkt")
            (lib "glpk/lib.rkt")))
          (name . "GLPK")
          (nix-sha256
           .
           "0pjxfk265dfhpxlfyglrmxxa4sbw158h1zx3wpyjb6dghvps0r92")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:clements@racket-lang.org . #t)
                   (linear-programming . #t)
                   (math . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/jbclements/glpk")
          (tags . ("linear-programming" "math"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "b53bad9507090646f3b27844c813f4e2b82ef2b4")
                          (source . "git://github.com/jbclements/glpk")
                          (source_url
                           .
                           "http://github.com/jbclements/glpk/tree/master")))))))
 ("HoLy"
  .
  #hasheq((author . "anihirash@gmail.com")
          (authors . ("anihirash@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . "server/built/deps/HoLy.txt")
                 (docs . (("main" "HoLy" "doc/HoLy@HoLy/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/HoLy.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/HoLy.txt")))
          (checksum . "e6574beb88937357cb73e834dacf10ceb1805495")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("web-server" "scribble-lib" "racket-doc"))
          (dependency-names . ("web-server" "scribble-lib" "racket-doc"))
          (description
           .
           "HoLy is simple http library for creating your web-applications and rest api's easier.\r\n\r\nThis library covers only http-server layer(url-dispatching, cookies, parameters). \r\n\r\nLibrary in aplha state - api unstable. \r\nPull requests are welcome!")
          (implies . ())
          (last-checked . 1557339607)
          (last-edit . 1510304428)
          (last-updated . 1509616900)
          (modules
           .
           ((lib "HoLy/scribblings/HoLy.scrbl") (lib "HoLy/main.rkt")))
          (name . "HoLy")
          (nix-sha256
           .
           "0xk9dxwslqg371k0xh6my557vzskgcsi8zv543hk0bzpivn6b8yx")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-dep-fail: . #t)
                   (:build-success: . #t)
                   (:docs: . #t)
                   (api . #t)
                   (author:anihirash@gmail.com . #t)
                   (framework . #t)
                   (http . #t)
                   (rest . #t)
                   (ring:2 . #t)
                   (web . #t)))
          (source . "https://github.com/nihirash/holy.git")
          (tags . ("api" "framework" "http" "rest" "web"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "e6574beb88937357cb73e834dacf10ceb1805495")
                          (source . "https://github.com/nihirash/holy.git")
                          (source_url
                           .
                           "https://github.com/nihirash/holy.git")))))))
 ("Quaternion"
  .
  #hasheq((author . "andreas8001@hotmail.com")
          (authors . ("andreas8001@hotmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "quaternion"
                    "doc/quaternion@Quaternion/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/Quaternion.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/Quaternion.txt")))
          (checksum . "96591d338f423f741f712150d0e20da93500f1e8")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "scribble-lib"
            "typed-racket-lib"
            "typed-racket-more"
            "math-lib"
            "typed-racket-doc"
            "racket-doc"
            "math-doc"))
          (dependency-names
           .
           ("base"
            "scribble-lib"
            "typed-racket-lib"
            "typed-racket-more"
            "math-lib"
            "typed-racket-doc"
            "racket-doc"
            "math-doc"))
          (description
           .
           "Quaternion procedures for rotation of vectors and koordinates, avoids gimbal-lock.")
          (implies . ())
          (last-checked . 1557339739)
          (last-edit . 1507668291)
          (last-updated . 1507879815)
          (modules
           .
           ((lib "quaternion/quaternion.scrbl")
            (lib "quaternion/main.rkt")
            (lib "quaternion/quaternion.rkt")))
          (name . "Quaternion")
          (nix-sha256
           .
           "03pr0fk9lyyizdzxc7ilvgcdjcrccbnkb8jnhx0z9x0wyyv7cgmx")
          (ring . 2)
          (search-terms
           .
           #hasheq((3D . #t)
                   (:build-success: . #t)
                   (:docs: . #t)
                   (author:andreas8001@hotmail.com . #t)
                   (math . #t)
                   (pict3d . #t)
                   (quaternion . #t)
                   (ring:2 . #t)))
          (source . "git://github.com/APOS80/Quaternion")
          (tags . ("3D" "math" "pict3d" "quaternion"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "96591d338f423f741f712150d0e20da93500f1e8")
                          (source . "git://github.com/APOS80/Quaternion")
                          (source_url
                           .
                           "http://github.com/APOS80/Quaternion/tree/master")))))))
 ("SAT"
  .
  #hasheq((author . "guannanwei@outlook.com")
          (authors . ("guannanwei@outlook.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "SAT" "doc/SAT@SAT/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/SAT.txt")
                 (test-failure-log . "server/built/test-fail/SAT.txt")
                 (test-success-log . #f)))
          (checksum . "f7d02e94bea4e5d2e1efcdf5678fc297b23957f5")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "rackunit-lib" "scribble-lib" "racket-doc"))
          (dependency-names
           .
           ("base" "rackunit-lib" "scribble-lib" "racket-doc"))
          (description . "A simple SAT solver based on DPLL.")
          (implies . ())
          (last-checked . 1557339770)
          (last-edit . 1507859818)
          (last-updated . 1537477173)
          (modules
           .
           ((lib "SAT/test.rkt")
            (lib "SAT/main.rkt")
            (lib "SAT/lib/dpll.rkt")
            (lib "SAT/lib/parser.rkt")
            (lib "SAT/scribblings/SAT.scrbl")))
          (name . "SAT")
          (nix-sha256
           .
           "1bxbl98g1c57gxkrm29xbr9pkkl5spmj202h3prn1dhwc1wy8j6r")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (:no-tag: . #t)
                   (author:guannanwei@outlook.com . #t)
                   (ring:2 . #t)))
          (source . "git://github.com/Kraks/SAT.rkt")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "f7d02e94bea4e5d2e1efcdf5678fc297b23957f5")
                          (source . "git://github.com/Kraks/SAT.rkt")
                          (source_url
                           .
                           "http://github.com/Kraks/SAT.rkt/tree/master")))))))
 ("SSE"
  .
  #hasheq((author . "qxacur@use.startmail.com")
          (authors . ("qxacur@use.startmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "SSE" "doc/SSE@SSE/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/SSE.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/SSE.txt")))
          (checksum . "b03b5cbfea7836a18b31267459a409a23cf5de6e")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "scribble-lib" "racket-doc" "rackunit-lib"))
          (dependency-names
           .
           ("base" "scribble-lib" "racket-doc" "rackunit-lib"))
          (description . "Server Sent Events for Racket")
          (implies . ())
          (last-checked . 1557339784)
          (last-edit . 1519615696)
          (last-updated . 1519615696)
          (modules
           .
           ((lib "SSE/sse.rkt")
            (lib "SSE/scribblings/SSE.scrbl")
            (lib "SSE/main.rkt")))
          (name . "SSE")
          (nix-sha256
           .
           "0gkw4iy1a1l1x23fzsfr7jgzna62n1kghl7klgclsb750v4d54bj")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (:no-tag: . #t)
                   (author:qxacur@use.startmail.com . #t)
                   (ring:2 . #t)))
          (source . "https://github.com/quxo/SSE.git")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "b03b5cbfea7836a18b31267459a409a23cf5de6e")
                          (source . "https://github.com/quxo/SSE.git")
                          (source_url
                           .
                           "https://github.com/quxo/SSE.git")))))))
 ("_"
  .
  #hasheq((author . "leif@leifandersen.net")
          (authors . ("leif@leifandersen.net"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "_" "doc/_@_/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/_.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/_.txt")))
          (checksum . "e687a8eaf4ef62b97ad5d37f6fd09cb684c7d101")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "rackunit-lib" "scribble-lib" "racket-doc"))
          (dependency-names
           .
           ("base" "rackunit-lib" "scribble-lib" "racket-doc"))
          (description . "")
          (implies . ())
          (last-checked . 1557343093)
          (last-edit . 1469570302)
          (last-updated . 1502812264)
          (modules . ((lib "_/scribblings/_.scrbl") (lib "_/main.rkt")))
          (name . "_")
          (nix-sha256
           .
           "0dkyj3np4w5wxyv940lv26myra3fw94dzvyp0v5265qlspmfpsjj")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (:no-desc: . #t)
                   (:no-tag: . #t)
                   (author:leif@leifandersen.net . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/LeifAndersen/racket-_")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "e687a8eaf4ef62b97ad5d37f6fd09cb684c7d101")
                          (source . "git://github.com/LeifAndersen/racket-_")
                          (source_url
                           .
                           "http://github.com/LeifAndersen/racket-_/tree/master")))))))
 ("_-exp"
  .
  #hasheq((author . "philip@philipmcgrath.com")
          (authors . ("philip@philipmcgrath.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "_-exp" "doc/_-exp@_-exp/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/_-exp.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/_-exp.txt")))
          (checksum . "2837b8292a538d5daf04d9afc30fb9f44ee41de3")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           (("base" #:version "6.12")
            "rackunit-lib"
            "at-exp-lib"
            "syntax-color-lib"
            "scribble-lib"
            "racket-doc"
            "scribble-doc"
            "web-server-doc"
            "adjutor"))
          (dependency-names
           .
           ("base"
            "rackunit-lib"
            "at-exp-lib"
            "syntax-color-lib"
            "scribble-lib"
            "racket-doc"
            "scribble-doc"
            "web-server-doc"
            "adjutor"))
          (description
           .
           "A  metalanguage similar to #lang at-exp, but with a configurable command character")
          (implies . ())
          (last-checked . 1557343093)
          (last-edit . 1513066025)
          (last-updated . 1543390840)
          (modules
           .
           ((lib "_-exp/main.rkt")
            (lib "_-exp/runtime-config.rkt")
            (lib "_-exp/language-info.rkt")
            (lib "_-exp/current-command-char.rkt")
            (lib "_-exp/scribblings/_-exp.scrbl")))
          (name . "_-exp")
          (nix-sha256
           .
           "1y71kx1z4fcf800i6kqnzsvfzn84iqkzi48adhjy4pvxm770fcql")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:philip@philipmcgrath.com . #t)
                   (lang . #t)
                   (lang-extension . #t)
                   (language . #t)
                   (ring:1 . #t)))
          (source . "https://github.com/LiberalArtist/_-exp.git")
          (tags . ("lang" "lang-extension" "language"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "2837b8292a538d5daf04d9afc30fb9f44ee41de3")
                          (source
                           .
                           "https://github.com/LiberalArtist/_-exp.git")
                          (source_url
                           .
                           "https://github.com/LiberalArtist/_-exp.git")))))))
 ("abnf"
  .
  #hasheq((author . "samth@ccs.neu.edu")
          (authors . ("samth@ccs.neu.edu"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/abnf.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/abnf.txt")))
          (checksum . "71bc4739a0b2aa22aa42ad905ba7de5c3e2c7f79")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "scribble-lib" "at-exp-lib"))
          (dependency-names . ("base" "scribble-lib" "at-exp-lib"))
          (description . "Attributed BNFs for Scribble")
          (implies . ())
          (last-checked . 1557343093)
          (last-edit . 1380725571)
          (last-updated . 1502812264)
          (modules . ((lib "scribble/abnf.rkt")))
          (name . "abnf")
          (nix-sha256
           .
           "11ji0kkdcgmz8790rbrjx5s4a0gnbqbfay2gqv8svjw1g8c2886j")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:samth@ccs.neu.edu . #t)
                   (bnf . #t)
                   (ring:1 . #t)
                   (scribble . #t)))
          (source . "git://github.com/samth/abnf")
          (tags . ("bnf" "scribble"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "71bc4739a0b2aa22aa42ad905ba7de5c3e2c7f79")
                          (source . "git://github.com/samth/abnf")
                          (source_url
                           .
                           "http://github.com/samth/abnf/tree/master")))))))
 ("abstract-compilation"
  .
  #hasheq((author . "pcn@cs.umd.edu")
          (authors . ("pcn@cs.umd.edu"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log
                  .
                  "server/built/deps/abstract-compilation.txt")
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log
                  .
                  "server/built/install/abstract-compilation.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/abstract-compilation.txt")))
          (checksum . "f87b66602671f31c8546ebb6d0c2e9fad6f959ef")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base"))
          (dependency-names . ("base"))
          (description
           .
           "DSL reducing boiler plates for doing abstract compilation")
          (implies . ())
          (last-checked . 1557343093)
          (last-edit . 1520373555)
          (last-updated . 1520394786)
          (modules
           .
           ((lib "abstract-compilation/main.rkt")
            (lib "abstract-compilation/tests.rkt")))
          (name . "abstract-compilation")
          (nix-sha256
           .
           "1siz84ndxk7wvzr57qbj2n3k4l509g1a7ga94ij649lp68gpvl1m")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-dep-fail: . #t)
                   (:build-success: . #t)
                   (author:pcn@cs.umd.edu . #t)
                   (compiler . #t)
                   (interpreter . #t)
                   (programming-languages . #t)
                   (ring:2 . #t)))
          (source
           .
           "https://github.com/philnguyen/abstract-compilation.git?path=abstract-compilation")
          (tags . ("compiler" "interpreter" "programming-languages"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "f87b66602671f31c8546ebb6d0c2e9fad6f959ef")
                          (source
                           .
                           "https://github.com/philnguyen/abstract-compilation.git?path=abstract-compilation")
                          (source_url
                           .
                           "https://github.com/philnguyen/abstract-compilation.git?path=abstract-compilation")))))))
 ("acl2s-scribblings"
  .
  #hasheq((author . "alexander@knauth.org")
          (authors . ("alexander@knauth.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "acl2s" "doc/acl2s@acl2s-scribblings/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/acl2s-scribblings.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/acl2s-scribblings.txt")))
          (checksum . "d9bc351774707765f6829a606bc535120787fffa")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "rackunit-lib"
            "syntax-classes-lib"
            "syntax-class-or"
            "racket-doc"
            "scribble-lib"))
          (dependency-names
           .
           ("base"
            "rackunit-lib"
            "syntax-classes-lib"
            "syntax-class-or"
            "racket-doc"
            "scribble-lib"))
          (description . "a scribble document for beginner mode of ACL2s")
          (implies . ())
          (last-checked . 1557339494)
          (last-edit . 1516894228)
          (last-updated . 1536814500)
          (modules
           .
           ((lib "acl2s-scribblings/util/stx.rkt")
            (lib "acl2s-scribblings/util/branch-conditions.rkt")
            (lib "acl2s-scribblings/scribblings/acl2s.scrbl")
            (lib "acl2s-scribblings/acl2s-placeholder.rkt")
            (lib "acl2s-scribblings/util/check-generator-predicate.rkt")
            (lib "acl2s-scribblings/acl2s-printer.rkt")))
          (name . "acl2s-scribblings")
          (nix-sha256
           .
           "0dl5ma3kic19kgwmm3i7zxiayi9619b0lr6qdnm0pmyhka05kia2")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (:no-tag: . #t)
                   (author:alexander@knauth.org . #t)
                   (ring:2 . #t)))
          (source . "https://github.com/AlexKnauth/acl2s-scribblings.git")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "d9bc351774707765f6829a606bc535120787fffa")
                          (source
                           .
                           "https://github.com/AlexKnauth/acl2s-scribblings.git")
                          (source_url
                           .
                           "https://github.com/AlexKnauth/acl2s-scribblings.git")))))))
 ("acmart"
  .
  #hasheq((author . "leif@leifandersen.net Fare")
          (authors . ("leif@leifandersen.net" "Fare"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . "server/built/fail/acmart.txt")
                 (min-failure-log . #f)
                 (success-log . #f)
                 (test-failure-log . #f)
                 (test-success-log . #f)))
          (checksum . "4a88753757201c030f3db4c939280bf7f5b59fb9")
          (checksum-error . #f)
          (conflicts . ("scribble-lib"))
          (dependencies
           .
           ("scheme-lib"
            "base"
            "compatibility-lib"
            "scribble-text-lib"
            "scribble-html-lib"
            "planet-lib"
            "net-lib"
            "at-exp-lib"
            "draw-lib"
            "syntax-color-lib"
            "sandbox-lib"
            "typed-racket-lib"
            "rackunit-lib"))
          (dependency-names
           .
           ("scheme-lib"
            "base"
            "compatibility-lib"
            "scribble-text-lib"
            "scribble-html-lib"
            "planet-lib"
            "net-lib"
            "at-exp-lib"
            "draw-lib"
            "syntax-color-lib"
            "sandbox-lib"
            "typed-racket-lib"
            "rackunit-lib"))
          (description . "#lang for the acmart paper format")
          (implies . ("scribble-html-lib"))
          (last-checked . 1557339494)
          (last-edit . 1493908591)
          (last-updated . 1556769755)
          (modules
           .
           ((lib "scribble/lp/lang/common.rkt")
            (lib "scribble/private/manual-bib.rkt")
            (lib "scribble/private/manual-unit.rkt")
            (lib "help/search.rkt")
            (lib "scriblib/private/counter.rkt")
            (lib "scribble/render-struct.rkt")
            (lib "scribble/private/manual-class-struct.rkt")
            (lib "scribble/markdown-render.rkt")
            (lib "scribble/private/manual-code.rkt")
            (lib "scribble/private/manual-tech.rkt")
            (lib "scribble/private/manual-vars.rkt")
            (lib "scribble/private/manual-bind.rkt")
            (lib "scribble/comment-reader.rkt")
            (lib "scribble/manual/lang/reader.rkt")
            (lib "scribble/lp/lang/lang.rkt")
            (lib "scribble/latex-render.rkt")
            (lib "scribble/private/provide-structs.rkt")
            (lib "scribble/private/manual-history.rkt")
            (lib "scribble/html-render.rkt")
            (lib "scribble/elsarticle/lang.rkt")
            (lib "scribble/urls.rkt")
            (lib "scribble/book/lang/reader.rkt")
            (lib "scribble/examples.rkt")
            (lib "scribble/elsarticle/lang/reader.rkt")
            (lib "scribble/private/on-demand.rkt")
            (lib "scribble/doc/reader.rkt")
            (lib "scribble/private/manual-form.rkt")
            (lib "scribble/contract-render.rkt")
            (lib "scribble/render.rkt")
            (lib "scribble/pdf-render.rkt")
            (lib "scribble/jfp/lang.rkt")
            (lib "scribble/private/manual-proc.rkt")
            (lib "scribble/private/render-utils.rkt")
            (lib "scribble/core.rkt")
            (lib "scribble/racket.rkt")
            (lib "scribble/base.rkt")
            (lib "scribble/manual-struct.rkt")
            (lib "scribble/private/manual-method.rkt")
            (lib "scribble/search.rkt")
            (lib "scribble/lp-include.rkt")
            (lib "scribble/private/lang-parameters.rkt")
            (lib "scribble/manual.rkt")
            (lib "scriblib/private/gui-eval-exn.rkt")
            (lib "scribble/sigplan/lang.rkt")
            (lib "scribble/srcdoc.rkt")
            (lib "scribble/private/manual-utils.rkt")
            (lib "scribble/struct.rkt")
            (lib "scribble/example.rkt")
            (lib "scribble/base/lang.rkt")
            (lib "scribble/run.rkt")
            (lib "scribble/xref.rkt")
            (lib "scribble/private/manual-defaults.rkt")
            (lib "scribble/provide-doc-transform.rkt")
            (lib "scriblib/autobib.rkt")
            (lib "scribble/private/manual-class.rkt")
            (lib "scribble/private/serialize.rkt")
            (lib "scriblib/figure.rkt")
            (lib "scribble/html-properties.rkt")
            (lib "scribble/lp/lang/reader.rkt")
            (lib "scribble/private/manual-scheme.rkt")
            (lib "scribble/private/manual-mod.rkt")
            (lib "scribble/tag.rkt")
            (lib "scribble/private/defaults.rkt")
            (lib "scribble/jfp.rkt")
            (lib "scriblib/gui-eval.rkt")
            (lib "scribble/doc/main.rkt")
            (lib "scribble/latex-prefix.rkt")
            (lib "scribble/lp/lang/lang2.rkt")
            (lib "scribble/base/lang/reader.rkt")
            (lib "scribble/manual/lang.rkt")
            (lib "scriblib/footnote.rkt")
            (lib "scribble/extract.rkt")
            (lib "scribble/decode-struct.rkt")
            (lib "scribble/valid-blueboxes-info.rkt")
            (lib "scribble/doclang2.rkt")
            (lib "scriblib/render-cond.rkt")
            (lib "scribble/private/manual-sprop.rkt")
            (lib "scribble/private/manual-style.rkt")
            (lib "scribble/config.rkt")
            (lib "scribble/decode.rkt")
            (lib "scribble/eval.rkt")
            (lib "scriblib/bibtex.rkt")
            (lib "scribble/acmart.rkt")
            (lib "scribble/acmart/lang/reader.rkt")
            (lib "scribble/private/tag.rkt")
            (lib "scribble/lp2.rkt")
            (lib "scribble/report/lang/reader.rkt")
            (lib "scribble/jfp/lang/reader.rkt")
            (lib "scribble/private/run-pdflatex.rkt")
            (lib "scribble/bnf.rkt")
            (lib "scribble/book/lang.rkt")
            (lib "scribble/private/latex-index.rkt")
            (lib "scribble/sigplan.rkt")
            (lib "scribble/report/lang.rkt")
            (lib "scribble/lncs/lang/reader.rkt")
            (lib "scribble/blueboxes.rkt")
            (lib "scribble/scheme.rkt")
            (lib "scribble/lncs/lang.rkt")
            (lib "scribble/acmart/lang.rkt")
            (lib "scribble/sigplan/lang/reader.rkt")
            (lib "scribble/text-render.rkt")
            (lib "scribble/private/literal-anchor.rkt")
            (lib "scribble/private/indirect-renderer.rkt")
            (lib "scribble/latex-properties.rkt")
            (lib "scribble/private/qsloc.rkt")
            (lib "scribble/base-render.rkt")
            (lib "scriblib/book-index.rkt")
            (lib "help/help.rkt")
            (lib "scribble/doclang.rkt")
            (lib "scribble/lp.rkt")
            (lib "scribble/basic.rkt")
            (lib "scribble/private/manual-ex.rkt")
            (lib "scribble/private/lp.rkt")
            (lib "scribble/doc/lang/reader.rkt")))
          (name . "acmart")
          (nix-sha256
           .
           "0z8nzj64cydlli884rnjs1k0h4p0qalwmn7bfn3q07xvxxr048s1")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-fail: . #t)
                   (:conflicts: . #t)
                   (:no-tag: . #t)
                   (author:Fare . #t)
                   (author:leif@leifandersen.net . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/racket/scribble?path=scribble-lib")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "4a88753757201c030f3db4c939280bf7f5b59fb9")
                          (source
                           .
                           "git://github.com/racket/scribble?path=scribble-lib")
                          (source_url
                           .
                           "http://github.com/racket/scribble/tree/master?path=scribble-lib")))
                 ("6.8"
                  .
                  #hasheq((checksum
                           .
                           "ce6738818e79515e57e2d554b801806b8b2833ae")
                          (source . "git://github.com/fare/acmart")
                          (source_url
                           .
                           "http://github.com/fare/acmart/tree/master")))))))
 ("acmsmall"
  .
  #hasheq((author . "stamourv@racket-lang.org")
          (authors . ("stamourv@racket-lang.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "acmsmall" "doc/acmsmall@acmsmall/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/acmsmall.txt")
                 (test-failure-log . "server/built/test-fail/acmsmall.txt")
                 (test-success-log . #f)))
          (checksum . "15a951e4dff06856862d2a87afd032b983a705be")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base" "scribble-lib" "at-exp-lib" "racket-doc" "scribble-doc"))
          (dependency-names
           .
           ("base" "scribble-lib" "at-exp-lib" "racket-doc" "scribble-doc"))
          (description . "Port of the acmsmall style to Scribble")
          (implies . ())
          (last-checked . 1557339494)
          (last-edit . 1454101079)
          (last-updated . 1504309903)
          (modules
           .
           ((lib "scribble/example-bib.rkt")
            (lib "scribble/acmsmall.scrbl")
            (lib "scribble/download.rkt")
            (lib "scribble/example.scrbl")
            (lib "scribble/acmsmall.rkt")))
          (name . "acmsmall")
          (nix-sha256
           .
           "0vikhn7ijdgj313m8nnx8j90w94hada2vhiv8yj785i4h45rfqlw")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:stamourv@racket-lang.org . #t)
                   (ring:1 . #t)
                   (scribble . #t)))
          (source . "git://github.com/stamourv/acmsmall-scribble")
          (tags . ("scribble"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "15a951e4dff06856862d2a87afd032b983a705be")
                          (source
                           .
                           "git://github.com/stamourv/acmsmall-scribble")
                          (source_url
                           .
                           "http://github.com/stamourv/acmsmall-scribble/tree/master")))))))
 ("adjutor"
  .
  #hasheq((author . "philip@philipmcgrath.com")
          (authors . ("philip@philipmcgrath.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "adjutor" "doc/adjutor@adjutor/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/adjutor.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/adjutor.txt")))
          (checksum . "67d4d7cc7718aa421ed4ed7f396547bb81bf187b")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           (("base" #:version "6.12")
            "rackunit-lib"
            "static-rename-lib"
            "scribble-lib"
            "racket-doc"
            "rackunit-spec"
            "scribble-doc"))
          (dependency-names
           .
           ("base"
            "rackunit-lib"
            "static-rename-lib"
            "scribble-lib"
            "racket-doc"
            "rackunit-spec"
            "scribble-doc"))
          (description . "A helper library")
          (implies . ())
          (last-checked . 1557339494)
          (last-edit . 1509151638)
          (last-updated . 1543390840)
          (modules
           .
           ((lib "adjutor/scribblings/find-executable-path.scrbl")
            (lib "adjutor/todo.rkt")
            (lib "adjutor/link-change-evt.rkt")
            (lib "adjutor/serialize.rkt")
            (lib "adjutor/define-star.rkt")
            (lib "adjutor/scribblings/utils.rkt")
            (lib "adjutor/rx.rkt")
            (lib "adjutor/test.rkt")
            (lib "adjutor/scribblings/stable.scrbl")
            (lib "adjutor/find-executable-path.rkt")
            (lib "adjutor/main.rkt")
            (lib "adjutor/scribblings/adjutor.scrbl")
            (lib "adjutor/scribblings/experimental.scrbl")
            (lib "adjutor/misc.rkt")
            (lib "adjutor/check-args.rkt")
            (lib "adjutor/in-value-star.rkt")
            (lib "adjutor/scribblings/todo.scrbl")
            (lib "adjutor/require-provide.rkt")
            (lib "adjutor/scribblings/link-change-evt.scrbl")
            (lib "adjutor/kernel.rkt")
            (lib "adjutor/structure.rkt")
            (lib "adjutor/test-link-change-evt.rkt")))
          (name . "adjutor")
          (nix-sha256
           .
           "08nc4kvr5lqz6r9zfr3mwhlcrymjxq0cvyz67hkpgnxhiklaw6yi")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:philip@philipmcgrath.com . #t)
                   (ring:1 . #t)
                   (sugar . #t)
                   (util . #t)
                   (utility . #t)))
          (source . "https://github.com/LiberalArtist/adjutor.git")
          (tags . ("sugar" "util" "utility"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "67d4d7cc7718aa421ed4ed7f396547bb81bf187b")
                          (source
                           .
                           "https://github.com/LiberalArtist/adjutor.git")
                          (source_url
                           .
                           "https://github.com/LiberalArtist/adjutor.git")))))))
 ("admiral-edu-server"
  .
  #hasheq((author . "clements@racket-lang.org josephmcollard@gmail.com")
          (authors . ("clements@racket-lang.org" "josephmcollard@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/admiral-edu-server.txt")
                 (test-failure-log
                  .
                  "server/built/test-fail/admiral-edu-server.txt")
                 (test-success-log . #f)))
          (checksum . "79c2778dd43d07e92ab02fb75955ec6060ed6861")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("aws"
            "base"
            "db-lib"
            "net-lib"
            "typed-racket-lib"
            "web-server-lib"
            "yaml"
            "rackunit-lib"
            "typed-racket-more"))
          (dependency-names
           .
           ("aws"
            "base"
            "db-lib"
            "net-lib"
            "typed-racket-lib"
            "web-server-lib"
            "yaml"
            "rackunit-lib"
            "typed-racket-more"))
          (description
           .
           "The Racket code associated with the Captain Teach server")
          (implies . ())
          (last-checked . 1557339494)
          (last-edit . 1466969603)
          (last-updated . 1502812266)
          (modules
           .
           ((lib "admiral-edu/pages/file-container-helpers.rkt")
            (lib "admiral-edu/storage/local-storage.rkt")
            (lib "admiral-edu/pages/errors.rkt")
            (lib "admiral-edu/database/mysql/migrate-1-2.rkt")
            (lib "admiral-edu/pages/assignments/dashboard.rkt")
            (lib "admiral-edu/authoring/assignment-structs.rkt")
            (lib "admiral-edu/database/mysql/migrate-2-3.rkt")
            (lib "admiral-edu/database/mysql/assignment.rkt")
            (lib "admiral-edu/pages/path-xexprs.rkt")
            (lib "admiral-edu/dispatch.rkt")
            (lib "admiral-edu/ct-session.rkt")
            (lib "admiral-edu/base.rkt")
            (lib "admiral-edu/storage/cloud-storage.rkt")
            (lib "admiral-edu/pages/feedback.rkt")
            (lib "admiral-edu/storage/storage.rkt")
            (lib "admiral-edu/database/mysql/class.rkt")
            (lib "admiral-edu/database/mysql.rkt")
            (lib "admiral-edu/logging.rkt")
            (lib "admiral-edu/auth/google-openidc.rkt")
            (lib "admiral-edu/email/email.rkt")
            (lib "admiral-edu/util/file-extension-type.rkt")
            (lib "admiral-edu/database/mysql/common.rkt")
            (lib "admiral-edu/database/mysql/system.rkt")
            (lib "admiral-edu/pages/assignments/action.rkt")
            (lib "admiral-edu/authoring/hold-for-review-handler.rkt")
            (lib "admiral-edu/paths.rkt")
            (lib "admiral-edu/util/basic-types.rkt")
            (lib "admiral-edu/database/mysql/review.rkt")
            (lib "admiral-edu/dispatch-typed.rkt")
            (lib "admiral-edu/pages/assignments/status.rkt")
            (lib "admiral-edu/pages/roster.rkt")
            (lib "admiral-edu/pages/submit.rkt")
            (lib "admiral-edu/authoring/assignment-parser.rkt")
            (lib "admiral-edu/pages/browse.rkt")
            (lib "admiral-edu/pages/assignments.rkt")
            (lib "admiral-edu/pages/author.rkt")
            (lib "admiral-edu/pages/export.rkt")
            (lib "admiral-edu/database/mysql/migrate.rkt")
            (lib "admiral-edu/authoring/typed-yaml.rkt")
            (lib "admiral-edu/util/failure.rkt")
            (lib "admiral-edu/database/mysql/role.rkt")
            (lib "admiral-edu/database/mysql/migrate-0-1.rkt")
            (lib "admiral-edu/pages/index.rkt")
            (lib "admiral-edu/database/mysql/submission.rkt")
            (lib "admiral-edu/pages/responses.rkt")
            (lib "admiral-edu/pages/dependencies.rkt")
            (lib "admiral-edu/database/mysql/typed-db.rkt")
            (lib "admiral-edu/util/roster.rkt")
            (lib "admiral-edu/authoring/util.rkt")
            (lib "admiral-edu/pages/next.rkt")
            (lib "admiral-edu/util/authorized.rkt")
            (lib "admiral-edu/util/common.rkt")
            (lib "admiral-edu/util/failure-untyped.rkt")
            (lib "admiral-edu/database/mysql/roles.rkt")
            (lib "admiral-edu/database/mysql/untyped-db.rkt")
            (lib "admiral-edu/temporary-hacks.rkt")
            (lib "admiral-edu/database/mysql/user.rkt")
            (lib "admiral-edu/pages/review.rkt")
            (lib "admiral-edu/tests/test-configuration.rkt")
            (lib "admiral-edu/configuration.rkt")
            (lib "admiral-edu/pages/assignments/list.rkt")
            (lib "admiral-edu/authoring/three-condition-study.rkt")
            (lib "admiral-edu/util/config-file-reader.rkt")
            (lib "admiral-edu/pages/templates.rkt")
            (lib "admiral-edu/pages/assignments/student-view.rkt")
            (lib "admiral-edu/pages/typed-xml.rkt")
            (lib "admiral-edu/pages/download.rkt")
            (lib "admiral-edu/authoring/assignment.rkt")
            (lib "admiral-edu/storage/storage-basic-tr.rkt")
            (lib "admiral-edu/captain-teach.rkt")
            (lib "admiral-edu/authoring/next-action.rkt")))
          (name . "admiral-edu-server")
          (nix-sha256
           .
           "14d5wh3d8z4lbny34bs6mbk3ghw735mrxbxnv42d44cz2hyfba15")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:clements@racket-lang.org . #t)
                   (author:josephmcollard@gmail.com . #t)
                   (captain-teach . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/jbclements/admiral-edu-server")
          (tags . ("captain-teach"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "79c2778dd43d07e92ab02fb75955ec6060ed6861")
                          (source
                           .
                           "git://github.com/jbclements/admiral-edu-server")
                          (source_url
                           .
                           "http://github.com/jbclements/admiral-edu-server/tree/master")))))))
 ("affix"
  .
  #hasheq((author . "hello@morcmarc.com")
          (authors . ("hello@morcmarc.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "affix" "doc/affix@affix/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/affix.txt")
                 (test-failure-log . "server/built/test-fail/affix.txt")
                 (test-success-log . #f)))
          (checksum . "32a8e88e8547227d473013d8f90f41f6b5665b69")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base" ("racket" "6.0") "rackunit-lib" "scribble-lib"))
          (dependency-names . ("base" "rackunit-lib" "scribble-lib"))
          (description . "Managing Racket application state")
          (implies . ())
          (last-checked . 1557339494)
          (last-edit . 1540830421)
          (last-updated . 1540830421)
          (modules
           .
           ((lib "affix/base.rkt")
            (lib "affix/affix.scrbl")
            (lib "example/server.rkt")
            (lib "affix/main.rkt")
            (lib "example/config.rkt")
            (lib "example/main.rkt")
            (lib "affix/state.rkt")))
          (name . "affix")
          (nix-sha256
           .
           "08a6jbfadfd1iiapyz9xbkhp1ix74mxls7byflfdl33y3khhmh65")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:hello@morcmarc.com . #t)
                   (components . #t)
                   (lifecycle . #t)
                   (mount . #t)
                   (ring:2 . #t)
                   (state . #t)))
          (source . "https://github.com/morcmarc/affix.git")
          (tags . ("components" "lifecycle" "mount" "state"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "32a8e88e8547227d473013d8f90f41f6b5665b69")
                          (source . "https://github.com/morcmarc/affix.git")
                          (source_url
                           .
                           "https://github.com/morcmarc/affix.git")))))))
 ("afl"
  .
  #hasheq((author . "alexander@knauth.org")
          (authors . ("alexander@knauth.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "afl" "doc/afl@afl/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/afl.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/afl.txt")))
          (checksum . "13b5f8c6c71f0eb66a4f1e71f295bfda88f526bb")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "hygienic-reader-extension"
            "at-exp-lib"
            "rackjure"
            "rackunit-lib"
            "scribble-lib"
            "racket-doc"
            "scribble-doc"
            "scribble-code-examples"))
          (dependency-names
           .
           ("base"
            "hygienic-reader-extension"
            "at-exp-lib"
            "rackjure"
            "rackunit-lib"
            "scribble-lib"
            "racket-doc"
            "scribble-doc"
            "scribble-code-examples"))
          (description
           .
           "a lang-extension that provides rackjure-like anonymous function literals")
          (implies . ())
          (last-checked . 1557339494)
          (last-edit . 1466340886)
          (last-updated . 1539411147)
          (modules
           .
           ((lib "afl/lang/language-info.rkt")
            (lib "afl/lang/reader.rkt")
            (lib "afl/tests/test-afl-at-exp-racket.rkt")
            (lib "afl/reader.rkt")
            (lib "afl/tests/test-afl-scribble.rkt")
            (lib "afl/tests/test-afl-racket.rkt")
            (lib "afl/docs/afl.scrbl")
            (lib "afl/lang/runtime-config.rkt")))
          (name . "afl")
          (nix-sha256
           .
           "0wq88cxahrbk614dl2ylsy84pq2as08s96xwivx6wrqn5pcjwrwq")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:alexander@knauth.org . #t)
                   (lambda . #t)
                   (lang-extension . #t)
                   (ring:1 . #t)
                   (syntax . #t)))
          (source . "git://github.com/AlexKnauth/afl")
          (tags . ("lambda" "lang-extension" "syntax"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "13b5f8c6c71f0eb66a4f1e71f295bfda88f526bb")
                          (source . "git://github.com/AlexKnauth/afl")
                          (source_url
                           .
                           "http://github.com/AlexKnauth/afl/tree/master")))
                 ("6.0"
                  .
                  #hasheq((checksum
                           .
                           "40cf274d9274456f3059cc8275f77982c61710bd")
                          (source
                           .
                           "git://github.com/AlexKnauth/afl#for-v-up-to-6.1")
                          (source_url
                           .
                           "http://github.com/AlexKnauth/afl/tree/master#for-v-up-to-6.1")))
                 ("6.0.1"
                  .
                  #hasheq((checksum
                           .
                           "40cf274d9274456f3059cc8275f77982c61710bd")
                          (source
                           .
                           "git://github.com/AlexKnauth/afl#for-v-up-to-6.1")
                          (source_url
                           .
                           "http://github.com/AlexKnauth/afl/tree/master#for-v-up-to-6.1")))
                 ("6.1"
                  .
                  #hasheq((checksum
                           .
                           "40cf274d9274456f3059cc8275f77982c61710bd")
                          (source
                           .
                           "git://github.com/AlexKnauth/afl#for-v-up-to-6.1")
                          (source_url
                           .
                           "http://github.com/AlexKnauth/afl/tree/master#for-v-up-to-6.1")))))))
 ("aful"
  .
  #hasheq((author . "georges.duperon@gmail.com")
          (authors . ("georges.duperon@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "aful" "doc/aful@aful/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/aful.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/aful.txt")))
          (checksum . "bbdf6dcc6ed8787eb85c3a7938604879a361b9f8")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "hygienic-reader-extension"
            "at-exp-lib"
            "rackjure"
            "rackunit-lib"
            "phc-toolkit"
            "scribble-enhanced"
            "scribble-lib"
            "scribble-lib"
            "racket-doc"
            "scribble-doc"
            "scribble-code-examples"
            "scribble-doc"))
          (dependency-names
           .
           ("base"
            "hygienic-reader-extension"
            "at-exp-lib"
            "rackjure"
            "rackunit-lib"
            "phc-toolkit"
            "scribble-enhanced"
            "scribble-lib"
            "scribble-lib"
            "racket-doc"
            "scribble-doc"
            "scribble-code-examples"
            "scribble-doc"))
          (description
           .
           "A fork of #lang afl which also supports #lang aflu/unhygienic.")
          (implies . ())
          (last-checked . 1557339495)
          (last-edit . 1500984999)
          (last-updated . 1556193755)
          (modules
           .
           ((lib "aful/unhygienic/lang/reader.rkt")
            (lib
             "aful/unhygienic/hygienic-reader-extension--extend-reader--unhygienic.rkt")
            (lib "aful/unhygienic/lang/language-info.rkt")
            (lib "aful/reader.rkt")
            (lib "aful/lang/runtime-config.rkt")
            (lib "aful/tests/test-aful-scribble.rkt")
            (lib "aful/lang/reader.rkt")
            (lib "aful/tests/test-aful-racket.rkt")
            (lib "aful/unhygienic/lang/runtime-config.rkt")
            (lib "aful/docs/aful.scrbl")
            (lib "aful/scribble-enhanced.rkt")
            (lib "aful/tests/test-aful-at-exp-racket.rkt")
            (lib "aful/lang/language-info.rkt")))
          (name . "aful")
          (nix-sha256
           .
           "1ipfn1bpz5pp3mfbxp9r8fkvpb7qydsmr7p6vnadva6kiggk70iq")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:georges.duperon@gmail.com . #t)
                   (lambda . #t)
                   (lang-extension . #t)
                   (ring:1 . #t)
                   (syntax . #t)))
          (source . "https://github.com/jsmaniac/aful.git#unhygienic")
          (tags . ("lambda" "lang-extension" "syntax"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "bbdf6dcc6ed8787eb85c3a7938604879a361b9f8")
                          (source
                           .
                           "https://github.com/jsmaniac/aful.git#unhygienic")
                          (source_url
                           .
                           "https://github.com/jsmaniac/aful.git#unhygienic")))
                 ("6.0"
                  .
                  #hasheq((checksum
                           .
                           "78b507dd1d02efad8196bcdeb855fce568e575dc")
                          (source
                           .
                           "https://github.com/jsmaniac/aful.git#before-6.3")
                          (source_url
                           .
                           "https://github.com/jsmaniac/aful.git#before-6.3")))
                 ("6.1"
                  .
                  #hasheq((checksum
                           .
                           "78b507dd1d02efad8196bcdeb855fce568e575dc")
                          (source
                           .
                           "https://github.com/jsmaniac/aful.git#before-6.3")
                          (source_url
                           .
                           "https://github.com/jsmaniac/aful.git#before-6.3")))
                 ("6.1.1"
                  .
                  #hasheq((checksum
                           .
                           "78b507dd1d02efad8196bcdeb855fce568e575dc")
                          (source
                           .
                           "https://github.com/jsmaniac/aful.git#before-6.3")
                          (source_url
                           .
                           "https://github.com/jsmaniac/aful.git#before-6.3")))
                 ("6.2"
                  .
                  #hasheq((checksum
                           .
                           "78b507dd1d02efad8196bcdeb855fce568e575dc")
                          (source
                           .
                           "https://github.com/jsmaniac/aful.git#before-6.3")
                          (source_url
                           .
                           "https://github.com/jsmaniac/aful.git#before-6.3")))
                 ("6.3"
                  .
                  #hasheq((checksum
                           .
                           "78b507dd1d02efad8196bcdeb855fce568e575dc")
                          (source
                           .
                           "https://github.com/jsmaniac/aful.git#before-6.3")
                          (source_url
                           .
                           "https://github.com/jsmaniac/aful.git#before-6.3")))))))
 ("agile"
  .
  #hasheq((author . "types@ccs.neu.edu")
          (authors . ("types@ccs.neu.edu"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "agile" "doc/agile@agile/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/agile.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/agile.txt")))
          (checksum . "7b46f0cf247d57acc5b161a16865b7d148307bd5")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "racket-doc" "scribble-lib"))
          (dependency-names . ("base" "racket-doc" "scribble-lib"))
          (description
           .
           "#lang agile ;; == (require (for-syntax racket/base syntax/parse))")
          (implies . ())
          (last-checked . 1557339495)
          (last-edit . 1461953087)
          (last-updated . 1552748551)
          (modules
           .
           ((lib "agile/main.rkt")
            (lib "agile/scribblings/agile.scrbl")
            (lib "agile/lang/reader.rkt")))
          (name . "agile")
          (nix-sha256
           .
           "0yq7cd42kfc3y5ny6w8nfi75hkcd44bka4nf33b61nckzgrb02j0")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (agile . #t)
                   (author:types@ccs.neu.edu . #t)
                   (ring:1 . #t)))
          (source . "https://github.com/bennn/agile.git")
          (tags . ("agile"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "7b46f0cf247d57acc5b161a16865b7d148307bd5")
                          (source . "https://github.com/bennn/agile.git")
                          (source_url
                           .
                           "https://github.com/bennn/agile.git")))))))
 ("alexis-collection-lens"
  .
  #hasheq((author . "lexi.lambda@gmail.com")
          (authors . ("lexi.lambda@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log
                  .
                  "server/built/deps/alexis-collection-lens.txt")
                 (docs
                  .
                  (("main"
                    "alexis-collection-lens"
                    "doc/alexis-collection-lens@alexis-collection-lens/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log
                  .
                  "server/built/install/alexis-collection-lens.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/alexis-collection-lens.txt")))
          (checksum . "4f91587e8a5728b02c1ea9af9ac7476baf39b928")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("alexis-collections"
            "base"
            "curly-fn"
            "lens"
            "scribble-lib"
            "at-exp-lib"
            "cover"
            "cover-coveralls"
            "doc-coverage"
            "rackunit-lib"
            "racket-doc"))
          (dependency-names
           .
           ("alexis-collections"
            "base"
            "curly-fn"
            "lens"
            "scribble-lib"
            "at-exp-lib"
            "cover"
            "cover-coveralls"
            "doc-coverage"
            "rackunit-lib"
            "racket-doc"))
          (description
           .
           "Deprecated. Use the collections-lens package instead.")
          (implies . ())
          (last-checked . 1557339495)
          (last-edit . 1451874470)
          (last-updated . 1502812267)
          (modules
           .
           ((lib "alexis/scribblings/main.scrbl")
            (lib "alexis/collection/lens/private/sandbox.rkt")
            (lib "alexis/collection/lens/private/test/doc-coverage.rkt")
            (lib "alexis/collection/lens.rkt")))
          (name . "alexis-collection-lens")
          (nix-sha256
           .
           "0qbvy3sc7miwf2bicxd1lqfc1adrykpajpjcfpmmsjdwqvhkq8sy")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-dep-fail: . #t)
                   (:build-success: . #t)
                   (:docs: . #t)
                   (author:lexi.lambda@gmail.com . #t)
                   (deprecated . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/lexi-lambda/alexis-collection-lens.git")
          (tags . ("deprecated"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "4f91587e8a5728b02c1ea9af9ac7476baf39b928")
                          (source
                           .
                           "git://github.com/lexi-lambda/alexis-collection-lens.git")
                          (source_url
                           .
                           "http://github.com/lexi-lambda/alexis-collection-lens.git/tree/master")))
                 ("6.2"
                  .
                  #hasheq((checksum
                           .
                           "42544c413a1b6c0d6b0c5cbeac93502d5f5e4857")
                          (source
                           .
                           "git://github.com/lexi-lambda/alexis-collection-lens.git#v6.2")
                          (source_url
                           .
                           "http://github.com/lexi-lambda/alexis-collection-lens.git/tree/master#v6.2")))))))
 ("alexis-collections"
  .
  #hasheq((author . "lexi.lambda@gmail.com")
          (authors . ("lexi.lambda@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "alexis-collections"
                    "doc/alexis-collections@alexis-collections/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/alexis-collections.txt")
                 (test-failure-log
                  .
                  "server/built/test-fail/alexis-collections.txt")
                 (test-success-log . #f)))
          (checksum . "997c8642d9b2adb28728d609202618bc8ffbd750")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("alexis-util"
            "base"
            "collections"
            "rackunit-lib"
            "racket-doc"
            "scribble-lib"))
          (dependency-names
           .
           ("alexis-util"
            "base"
            "collections"
            "rackunit-lib"
            "racket-doc"
            "scribble-lib"))
          (description . "Deprecated. Use the collections package instead.")
          (implies . ("collections"))
          (last-checked . 1557339495)
          (last-edit . 1449345408)
          (last-updated . 1502812268)
          (modules
           .
           ((lib "alexis/collection/private/test/dict.rkt")
            (lib "alexis/collection.rkt")
            (lib "alexis/collection/private/test/sequence-lib.rkt")
            (lib "alexis/scribblings/alexis-collections.scrbl")
            (lib "alexis/collection/private/test/match.rkt")
            (lib "alexis/collection/private/test/contract.rkt")
            (lib "alexis/collection/private/test/collection.rkt")
            (lib "alexis/collection/private/test/sequence.rkt")))
          (name . "alexis-collections")
          (nix-sha256
           .
           "0ix48pb0i72a5p1cniyp7g7h8v8c1zhpdm9lrrcjwwvvsb8rz2l3")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:lexi.lambda@gmail.com . #t)
                   (deprecated . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/lexi-lambda/racket-alexis-collections")
          (tags . ("deprecated"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "997c8642d9b2adb28728d609202618bc8ffbd750")
                          (source
                           .
                           "git://github.com/lexi-lambda/racket-alexis-collections")
                          (source_url
                           .
                           "http://github.com/lexi-lambda/racket-alexis-collections/tree/master")))
                 ("6.1.1"
                  .
                  #hasheq((checksum
                           .
                           "7f1f4283abfb728ba2e53b37badef8c678711665")
                          (source
                           .
                           "git://github.com/lexi-lambda/racket-alexis-collections#v6.1.1")
                          (source_url
                           .
                           "http://github.com/lexi-lambda/racket-alexis-collections/tree/master#v6.1.1")))
                 ("6.2"
                  .
                  #hasheq((checksum
                           .
                           "6ad999385c1251e727baa667d3fbba601d924c8b")
                          (source
                           .
                           "git://github.com/lexi-lambda/racket-alexis-collections#v6.2")
                          (source_url
                           .
                           "http://github.com/lexi-lambda/racket-alexis-collections/tree/master#v6.2")))
                 ("6.2.1"
                  .
                  #hasheq((checksum
                           .
                           "6ad999385c1251e727baa667d3fbba601d924c8b")
                          (source
                           .
                           "git://github.com/lexi-lambda/racket-alexis-collections#v6.2")
                          (source_url
                           .
                           "http://github.com/lexi-lambda/racket-alexis-collections/tree/master#v6.2")))))))
 ("alexis-multicast"
  .
  #hasheq((author . "lexi.lambda@gmail.com")
          (authors . ("lexi.lambda@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "alexis-multicast"
                    "doc/alexis-multicast@alexis-multicast/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/alexis-multicast.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/alexis-multicast.txt")))
          (checksum . "0268afb688231e0d6d76ded3291538dd5d3db37c")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "alexis-util"
            "rackunit-lib"
            "cover"
            "cover-coveralls"
            "racket-doc"
            "scribble-lib"))
          (dependency-names
           .
           ("base"
            "alexis-util"
            "rackunit-lib"
            "cover"
            "cover-coveralls"
            "racket-doc"
            "scribble-lib"))
          (description . "One-to-many buffered  asynchronous channels")
          (implies . ())
          (last-checked . 1557339496)
          (last-edit . 1462746919)
          (last-updated . 1502812268)
          (modules
           .
           ((lib "alexis/scribblings/alexis-multicast.scrbl")
            (lib "alexis/private/test/multicast.rkt")
            (lib "alexis/multicast.rkt")))
          (name . "alexis-multicast")
          (nix-sha256
           .
           "076bpg6fxd914wjnb6dym729gcmysxxhrriy3fw6z54n55hmc3nl")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (:no-tag: . #t)
                   (author:lexi.lambda@gmail.com . #t)
                   (ring:1 . #t)))
          (source
           .
           "git://github.com/lexi-lambda/racket-alexis.git?path=alexis-multicast")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "0268afb688231e0d6d76ded3291538dd5d3db37c")
                          (source
                           .
                           "git://github.com/lexi-lambda/racket-alexis.git?path=alexis-multicast")
                          (source_url
                           .
                           "http://github.com/lexi-lambda/racket-alexis.git/tree/master?path=alexis-multicast")))
                 ("6.1.1"
                  .
                  #hasheq((checksum
                           .
                           "947a07993c7927376e858bb6e573795aa5633007")
                          (source
                           .
                           "git://github.com/lexi-lambda/racket-alexis.git?path=alexis-multicast#multicast-v6.1.1")
                          (source_url
                           .
                           "http://github.com/lexi-lambda/racket-alexis.git/tree/master?path=alexis-multicast#multicast-v6.1.1")))
                 ("6.2"
                  .
                  #hasheq((checksum
                           .
                           "f5e3cbad14ba951a302bc45d1b0e1c554a13b523")
                          (source
                           .
                           "git://github.com/lexi-lambda/racket-alexis.git?path=alexis-multicast#v6.2")
                          (source_url
                           .
                           "http://github.com/lexi-lambda/racket-alexis.git/tree/master?path=alexis-multicast#v6.2")))))))
 ("alexis-pvector"
  .
  #hasheq((author . "lexi.lambda@gmail.com")
          (authors . ("lexi.lambda@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "alexis-pvector"
                    "doc/alexis-pvector@alexis-pvector/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/alexis-pvector.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/alexis-pvector.txt")))
          (checksum . "f03b60714a0fd35ca61dd41307701074a2253d87")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("alexis-collections"
            "base"
            "pvector"
            "rackunit-lib"
            "racket-doc"
            "scribble-lib"))
          (dependency-names
           .
           ("alexis-collections"
            "base"
            "pvector"
            "rackunit-lib"
            "racket-doc"
            "scribble-lib"))
          (description . "Deprecated. Use the pvector package instead.")
          (implies . ("pvector"))
          (last-checked . 1557339496)
          (last-edit . 1449355974)
          (last-updated . 1502812268)
          (modules
           .
           ((lib "alexis/pvector.rkt")
            (lib "alexis/scribblings/alexis-pvector.scrbl")
            (lib "alexis/private/test/main.rkt")))
          (name . "alexis-pvector")
          (nix-sha256
           .
           "1ghjx2pwzhbnh24xdcazipr7bh731z730iar21vz6lvqy30m1mnk")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:lexi.lambda@gmail.com . #t)
                   (deprecated . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/lexi-lambda/racket-alexis-pvector")
          (tags . ("deprecated"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "f03b60714a0fd35ca61dd41307701074a2253d87")
                          (source
                           .
                           "git://github.com/lexi-lambda/racket-alexis-pvector")
                          (source_url
                           .
                           "http://github.com/lexi-lambda/racket-alexis-pvector/tree/master")))
                 ("6.1.1"
                  .
                  #hasheq((checksum
                           .
                           "10301802ae13956a1163b4b3ee5436680d796dc8")
                          (source
                           .
                           "git://github.com/lexi-lambda/racket-alexis-pvector#v6.1.1")
                          (source_url
                           .
                           "http://github.com/lexi-lambda/racket-alexis-pvector/tree/master#v6.1.1")))))))
 ("alexis-util"
  .
  #hasheq((author . "lexi.lambda@gmail.com")
          (authors . ("lexi.lambda@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "alexis-util"
                    "doc/alexis-util@alexis-util/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/alexis-util.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/alexis-util.txt")))
          (checksum . "0268afb688231e0d6d76ded3291538dd5d3db37c")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "match-plus"
            "scribble-lib"
            "static-rename"
            "threading"
            "typed-racket-lib"
            "rackunit-lib"
            "at-exp-lib"
            "racket-doc"
            "typed-racket-doc"
            "sandbox-lib"))
          (dependency-names
           .
           ("base"
            "match-plus"
            "scribble-lib"
            "static-rename"
            "threading"
            "typed-racket-lib"
            "rackunit-lib"
            "at-exp-lib"
            "racket-doc"
            "typed-racket-doc"
            "sandbox-lib"))
          (description
           .
           "Various utilities and helper functions I've found useful")
          (implies . ())
          (last-checked . 1557339496)
          (last-edit . 1423075905)
          (last-updated . 1502812269)
          (modules
           .
           ((lib "alexis/util/struct.rkt")
            (lib "alexis/util/abbreviations.rkt")
            (lib "alexis/scribblings/alexis-util-typed.scrbl")
            (lib "alexis/util/threading.rkt")
            (lib "alexis/private/test/comparator.rkt")
            (lib "alexis/scribblings/alexis-util-untyped.scrbl")
            (lib "alexis/scribblings/alexis-util.scrbl")
            (lib "alexis/scribblings/alexis-util-extras.scrbl")
            (lib "alexis/private/test/struct.rkt")
            (lib "alexis/util/wrap.rkt")
            (lib "alexis/bool.rkt")
            (lib "alexis/util/renamed.rkt")
            (lib "typed/alexis/bool.rkt")
            (lib "typed/alexis/util/comparator.rkt")
            (lib "alexis/util/comparator.rkt")
            (lib "alexis/util/match.rkt")))
          (name . "alexis-util")
          (nix-sha256
           .
           "076bpg6fxd914wjnb6dym729gcmysxxhrriy3fw6z54n55hmc3nl")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:lexi.lambda@gmail.com . #t)
                   (ring:1 . #t)
                   (typed-racket . #t)))
          (source
           .
           "git://github.com/lexi-lambda/racket-alexis.git?path=alexis-util")
          (tags . ("typed-racket"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "0268afb688231e0d6d76ded3291538dd5d3db37c")
                          (source
                           .
                           "git://github.com/lexi-lambda/racket-alexis.git?path=alexis-util")
                          (source_url
                           .
                           "http://github.com/lexi-lambda/racket-alexis.git/tree/master?path=alexis-util")))
                 ("6.0"
                  .
                  #hasheq((checksum
                           .
                           "c6baadb3668067eefc1b16eaf4cf97b0180aa13c")
                          (source
                           .
                           "git://github.com/lexi-lambda/racket-alexis.git?path=alexis-util#util-v6.1.1")
                          (source_url
                           .
                           "http://github.com/lexi-lambda/racket-alexis.git/tree/master?path=alexis-util#util-v6.1.1")))
                 ("6.0.1"
                  .
                  #hasheq((checksum
                           .
                           "c6baadb3668067eefc1b16eaf4cf97b0180aa13c")
                          (source
                           .
                           "git://github.com/lexi-lambda/racket-alexis.git?path=alexis-util#util-v6.1.1")
                          (source_url
                           .
                           "http://github.com/lexi-lambda/racket-alexis.git/tree/master?path=alexis-util#util-v6.1.1")))
                 ("6.1"
                  .
                  #hasheq((checksum
                           .
                           "c6baadb3668067eefc1b16eaf4cf97b0180aa13c")
                          (source
                           .
                           "git://github.com/lexi-lambda/racket-alexis.git?path=alexis-util#util-v6.1.1")
                          (source_url
                           .
                           "http://github.com/lexi-lambda/racket-alexis.git/tree/master?path=alexis-util#util-v6.1.1")))
                 ("6.1.1"
                  .
                  #hasheq((checksum
                           .
                           "c6baadb3668067eefc1b16eaf4cf97b0180aa13c")
                          (source
                           .
                           "git://github.com/lexi-lambda/racket-alexis.git?path=alexis-util#util-v6.1.1")
                          (source_url
                           .
                           "http://github.com/lexi-lambda/racket-alexis.git/tree/master?path=alexis-util#util-v6.1.1")))
                 ("6.2"
                  .
                  #hasheq((checksum
                           .
                           "f5e3cbad14ba951a302bc45d1b0e1c554a13b523")
                          (source
                           .
                           "git://github.com/lexi-lambda/racket-alexis.git?path=alexis-util#v6.2")
                          (source_url
                           .
                           "http://github.com/lexi-lambda/racket-alexis.git/tree/master?path=alexis-util#v6.2")))
                 ("6.2.1"
                  .
                  #hasheq((checksum
                           .
                           "f5e3cbad14ba951a302bc45d1b0e1c554a13b523")
                          (source
                           .
                           "git://github.com/lexi-lambda/racket-alexis.git?path=alexis-util#v6.2")
                          (source_url
                           .
                           "http://github.com/lexi-lambda/racket-alexis.git/tree/master?path=alexis-util#v6.2")))))))
 ("alexknauth-music"
  .
  #hasheq((author . "alexander@knauth.org")
          (authors . ("alexander@knauth.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/alexknauth-music.txt")
                 (test-failure-log
                  .
                  "server/built/test-fail/alexknauth-music.txt")
                 (test-success-log . #f)))
          (checksum . "b4489c27d7c0f7116d769344c787fa76b479e5fa")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "agile"
            "collections-lib"
            "htdp-lib"
            "math-lib"
            "graph"
            "txexpr"
            "reprovide-lang"
            "rsound"
            "unstable-lib"
            "at-exp-lib"
            "rackunit-lib"))
          (dependency-names
           .
           ("base"
            "agile"
            "collections-lib"
            "htdp-lib"
            "math-lib"
            "graph"
            "txexpr"
            "reprovide-lang"
            "rsound"
            "unstable-lib"
            "at-exp-lib"
            "rackunit-lib"))
          (description . "Some stuff for representing music and music theory")
          (implies . ())
          (last-checked . 1557339497)
          (last-edit . 1522445270)
          (last-updated . 1522592073)
          (modules
           .
           ((lib "music/data/score/key-signature.rkt")
            (lib "music/data/chord/infer-chord.rkt")
            (lib "music/notation/rsound/scale-tuning.rkt")
            (lib "music/notation/musicxml/musicxml-file.rkt")
            (lib "music/util/filter-maximal.rkt")
            (lib "music/data/time/position.rkt")
            (lib "music/data/score/clef.rkt")
            (lib "music/data/instrument/string-spec.rkt")
            (lib "music/data/musical-set-theory/forte-number.rkt")
            (lib "music/util/define-product-combinations.rkt")
            (lib "music/data/instrument/chord-fingering.rkt")
            (lib "music/notation/musicxml/harmony-element.rkt")
            (lib "music/notation/musicxml/score.rkt")
            (lib "music/notation/musicxml/metadata.rkt")
            (lib "music/data/time/time-signature.rkt")
            (lib "music/data/chord/partition-point.rkt")
            (lib "music/notation/lilypond/lilypond-file.rkt")
            (lib "music/data/note/note-class.rkt")
            (lib "music/data/score/score.rkt")
            (lib "music/example/Bach-Goldberg-Canone-alla-Quarta.rkt")
            (lib "music/data/scale/main.rkt")
            (lib "music/notation/musicxml/read/score.rkt")
            (lib "music/data/score/main.rkt")
            (lib "music/data/chord/infer-segment-chord.rkt")
            (lib "music/data/time/main.rkt")
            (lib "music/data/time/measures.rkt")
            (lib "music/data/musical-set-theory/pitch-class-set.rkt")
            (lib "music/data/score/metadata.rkt")
            (lib "music/util/defs.rkt")
            (lib "music/data/chord/main.rkt")
            (lib "music/data/scale/scale.rkt")
            (lib "music/data/time/tempo.rkt")
            (lib "music/notation/musicxml/voice-assign.rkt")
            (lib "music/data/instrument/add-guitar-part.rkt")
            (lib "music/data/time/duration.rkt")
            (lib "music/notation/musicxml/clef.rkt")
            (lib "music/util/txexpr.rkt")
            (lib "music/data/scale/scale-note-held.rkt")
            (lib "music/notation/image/chord-chart.rkt")
            (lib "music/notation/musicxml/read/musicxml-file.rkt")
            (lib "music/data/note/note-held.rkt")
            (lib "music/data/instrument/fingering.rkt")
            (lib "music/data/chord/infer-segmentation.rkt")
            (lib "music/data/note/note-there.rkt")
            (lib "music/data/time/time-period.rkt")
            (lib "music/notation/musicxml/read/metadata.rkt")
            (lib "music/demo/Bach-Goldberg-Canone-alla-Quarta.rkt")
            (lib "music/notation/rsound/frequency.rkt")
            (lib "music/data/musical-set-theory/pitch-class.rkt")
            (lib "music/data/instrument/main.rkt")
            (lib "music/data/note/note.rkt")
            (lib "music/data/chord/chord.rkt")
            (lib "music/data/chord/chord-symbol.rkt")
            (lib "music/data/scale/scale-note.rkt")
            (lib "music/data/tuning/scale-tuning.rkt")
            (lib "music/data/note/main.rkt")))
          (name . "alexknauth-music")
          (nix-sha256
           .
           "0sr10h22byw6544k668p85xas4fk1mjvgf25jyw30q0ys29gspwx")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:no-tag: . #t)
                   (author:alexander@knauth.org . #t)
                   (ring:2 . #t)))
          (source . "https://github.com/AlexKnauth/music.git")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "b4489c27d7c0f7116d769344c787fa76b479e5fa")
                          (source . "https://github.com/AlexKnauth/music.git")
                          (source_url
                           .
                           "https://github.com/AlexKnauth/music.git")))))))
 ("alexknauth-my-object"
  .
  #hasheq((author . "alexander@knauth.org")
          (authors . ("alexander@knauth.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "my-object"
                    "doc/my-object@alexknauth-my-object/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log
                  .
                  "server/built/install/alexknauth-my-object.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/alexknauth-my-object.txt")))
          (checksum . "5a6ee970bad2ab86d2d69e1dbf2f7bb158e88963")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "lens"
            "hash-lambda"
            "kw-utils"
            "unstable-lib"
            "rackunit-lib"
            "scribble-lib"
            "racket-doc"
            "heresy"))
          (dependency-names
           .
           ("base"
            "lens"
            "hash-lambda"
            "kw-utils"
            "unstable-lib"
            "rackunit-lib"
            "scribble-lib"
            "racket-doc"
            "heresy"))
          (description
           .
           "my version of objects, inspired by \"things\" from heresy")
          (implies . ())
          (last-checked . 1557339497)
          (last-edit . 1498356339)
          (last-updated . 1502812269)
          (modules
           .
           ((lib "my-object/main.rkt")
            (lib "my-object/stuff.rkt")
            (lib "my-object/my-object.rkt")
            (lib "my-object/docs/my-object.scrbl")))
          (name . "alexknauth-my-object")
          (nix-sha256
           .
           "0i64kqs6s49z61wlkcz1zxznvzmlibjvy6pylnbyz3dwshnfcrpy")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:alexander@knauth.org . #t)
                   (deprecated . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/AlexKnauth/my-object")
          (tags . ("deprecated"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "5a6ee970bad2ab86d2d69e1dbf2f7bb158e88963")
                          (source . "git://github.com/AlexKnauth/my-object")
                          (source_url
                           .
                           "http://github.com/AlexKnauth/my-object/tree/master")))))))
 ("algebraic"
  .
  #hasheq((author . "dedbox@gmail.com")
          (authors . ("dedbox@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "algebraic" "doc/algebraic@algebraic/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/algebraic.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/algebraic.txt")))
          (checksum . "955c69f9fdb0c25ba2dc5b80b4476fc878141d61")
          (checksum-error . #f)
          (conflicts . ())
          (date-added . 1549106222)
          (dependencies
           .
           ("base"
            "draw-lib"
            "pict-lib"
            "racket-doc"
            "rackunit-lib"
            "sandbox-lib"
            "scribble-lib"
            "texmath"))
          (dependency-names
           .
           ("base"
            "draw-lib"
            "pict-lib"
            "racket-doc"
            "rackunit-lib"
            "sandbox-lib"
            "scribble-lib"
            "texmath"))
          (description . "Algebraic structures for untyped Racket")
          (implies . ())
          (last-checked . 1557339497)
          (last-edit . 1550007256)
          (last-updated . 1557166696)
          (modules
           .
           ((lib "algebraic/scribblings/algebraic-tutorials.scrbl")
            (lib "algebraic/racket/base.rkt")
            (lib "algebraic/scribblings/algebraic-tutorial-core.scrbl")
            (lib "algebraic/scribblings/algebraic-includes.rkt")
            (lib "algebraic/data.rkt")
            (lib "algebraic/racket/base/lang.rkt")
            (lib "algebraic/scribblings/algebraic-tutorial-host.scrbl")
            (lib "algebraic/macro-tests.rkt")
            (lib "algebraic/model/ext.rkt")
            (lib "algebraic/data/sum.rkt")
            (lib "algebraic/model/core.rkt")
            (lib "algebraic/model/host.rkt")
            (lib "algebraic/data/product.rkt")
            (lib "algebraic/syntax.rkt")
            (lib "algebraic/macro.rkt")
            (lib "algebraic/scribblings/algebraic-tutorial-ext.scrbl")
            (lib "algebraic/function.rkt")
            (lib "algebraic/scribblings/algebraic.scrbl")))
          (name . "algebraic")
          (nix-sha256
           .
           "0h9apdga95kk228h7gqig86c06859b5sm8m5f3cl0v0cm049yv73")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:dedbox@gmail.com . #t)
                   (data-structures . #t)
                   (functional . #t)
                   (ring:2 . #t)))
          (source . "https://github.com/dedbox/racket-algebraic.git")
          (tags . ("data-structures" "functional"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "955c69f9fdb0c25ba2dc5b80b4476fc878141d61")
                          (source
                           .
                           "https://github.com/dedbox/racket-algebraic.git")
                          (source_url
                           .
                           "https://github.com/dedbox/racket-algebraic.git")))))))
 ("algol60"
  .
  #hash((author . "mflatt@racket-lang.org robby@racket-lang.org")
        (checksum . "3288be870d95d0053beb8d7eb46d4c53f8e50acb")
        (dependencies
         .
         ("base"
          "compatibility-lib"
          "drracket-plugin-lib"
          "errortrace-lib"
          "gui-lib"
          "parser-tools-lib"
          "string-constants-lib"
          "at-exp-lib"
          "rackunit-lib"
          "racket-doc"
          "scribble-doc"
          "scribble-lib"
          "drracket-tool-lib"
          "drracket-plugin-lib"))
        (dependency-names
         .
         ("base"
          "compatibility-lib"
          "drracket-plugin-lib"
          "errortrace-lib"
          "gui-lib"
          "parser-tools-lib"
          "string-constants-lib"
          "at-exp-lib"
          "rackunit-lib"
          "racket-doc"
          "scribble-doc"
          "scribble-lib"
          "drracket-tool-lib"
          "drracket-plugin-lib"))
        (description . "mflatt@racket-lang.org robby@racket-lang.org")
        (modules . ())
        (name . "algol60")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/algol60.zip")
        (tags . ())))
 ("anaphoric"
  .
  #hasheq((author . "georges.duperon@gmail.com ")
          (authors . ("georges.duperon@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "anaphoric" "doc/anaphoric@anaphoric/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/anaphoric.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/anaphoric.txt")))
          (checksum . "2c21a489cb522549869e2c482299123544e47c78")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "rackunit-lib" "scribble-lib" "racket-doc"))
          (dependency-names
           .
           ("base" "rackunit-lib" "scribble-lib" "racket-doc"))
          (description
           .
           "Anaphoric versions of `if`, `when` and `cond`. They bind the value of the condition expression to `it`.")
          (implies . ())
          (last-checked . 1557339497)
          (last-edit . 1460111353)
          (last-updated . 1555884157)
          (modules
           .
           ((lib "anaphoric/test/if-let-test.rkt")
            (lib "anaphoric/scribblings/anaphoric.scrbl")
            (lib "anaphoric/test/when-let-test.rkt")
            (lib "anaphoric/awhen.rkt")
            (lib "anaphoric/acond.rkt")
            (lib "anaphoric/test/aif-test.rkt")
            (lib "anaphoric/aand.rkt")
            (lib "anaphoric/test/cond-let-test.rkt")
            (lib "anaphoric/cond-let.rkt")
            (lib "anaphoric/and-let.rkt")
            (lib "anaphoric/test/and-let-test.rkt")
            (lib "anaphoric/test/acond-test.rkt")
            (lib "anaphoric/it.rkt")
            (lib "anaphoric/test/awhen-test.rkt")
            (lib "anaphoric/if-let.rkt")
            (lib "anaphoric/main.rkt")
            (lib "anaphoric/aif.rkt")
            (lib "anaphoric/when-let.rkt")
            (lib "anaphoric/test/aand-test.rkt")))
          (name . "anaphoric")
          (nix-sha256
           .
           "118pw3fjjh0b0blw8h2jnn9zzmy844dsjz2mmbk4vyy2ihnwldxz")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:georges.duperon@gmail.com . #t)
                   (ring:1 . #t)
                   (utility . #t)))
          (source . "git://github.com/jsmaniac/anaphoric")
          (tags . ("utility"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "2c21a489cb522549869e2c482299123544e47c78")
                          (source . "git://github.com/jsmaniac/anaphoric")
                          (source_url
                           .
                           "http://github.com/jsmaniac/anaphoric/tree/master")))))))
 ("anarki"
  .
  #hasheq((author
           .
           "rokitna@hotmail.com arc.racket@akkartik.com zkanfer@gmail.com")
          (authors
           .
           ("rokitna@hotmail.com"
            "arc.racket@akkartik.com"
            "zkanfer@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "anarki" "doc/anarki@anarki/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/anarki.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/anarki.txt")))
          (checksum . "4efd111740b3c725da8e891d8d6afe1c9ea26140")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "sha" "racket-doc" "scribble-lib"))
          (dependency-names . ("base" "sha" "racket-doc" "scribble-lib"))
          (description
           .
           "Community-managed variant of the Arc dialect of Lisp")
          (implies . ())
          (last-checked . 1557339497)
          (last-edit . 1457860748)
          (last-updated . 1555646559)
          (modules
           .
           ((lib "anarki/lib/racket-lang-demo/lang-anarki-application.rkt")
            (lib "anarki/lang/module-begin.rkt")
            (lib "anarki/lib/racket-lang-demo/racket-application.rkt")
            (lib "anarki/lib/uuid.rkt")
            (lib "anarki/ac.rkt")
            (lib "anarki/lib/ns.rkt")
            (lib "anarki/lang/reader.rkt")
            (lib "anarki/main.rkt")
            (lib "anarki/lib/racket-lang-demo/racket-deep-dependency.rkt")
            (lib "anarki/lib/racket-lang-demo/lang-anarki-library.rkt")
            (lib "anarki/scribblings/anarki.scrbl")
            (lib "anarki/brackets.rkt")
            (lib
             "anarki/lib/racket-lang-demo/lang-anarki-deep-dependency.rkt")
            (lib "anarki/boot.rkt")))
          (name . "anarki")
          (nix-sha256
           .
           "121g9wdjfr7b4h5c9kimqbbcrkkwbpax6jvfhdsvkhjm3ck45nrk")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:arc.racket@akkartik.com . #t)
                   (author:rokitna@hotmail.com . #t)
                   (author:zkanfer@gmail.com . #t)
                   (language . #t)
                   (ring:1 . #t)
                   (unstable . #t)
                   (web . #t)))
          (source . "git://github.com/arclanguage/anarki")
          (tags . ("language" "unstable" "web"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "4efd111740b3c725da8e891d8d6afe1c9ea26140")
                          (source . "git://github.com/arclanguage/anarki")
                          (source_url
                           .
                           "http://github.com/arclanguage/anarki/tree/master")))))))
 ("ansi"
  .
  #hasheq((author . "tonygarnockjones@gmail.com")
          (authors . ("tonygarnockjones@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . "server/built/min-fail/ansi.txt")
                 (success-log . "server/built/install/ansi.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/ansi.txt")))
          (checksum . "1e64b8efc0d731f06a672620b0fccfda01c03735")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "dynext-lib" "make" "rackunit-lib"))
          (dependency-names . ("base" "dynext-lib" "make" "rackunit-lib"))
          (description . "ANSI and VT10x escape sequences for Racket.")
          (implies . ())
          (last-checked . 1557339497)
          (last-edit . 1443044744)
          (last-updated . 1553446956)
          (modules
           .
           ((lib "ansi/test-screen-size.rkt")
            (lib "ansi/ansi.rkt")
            (lib "ansi/main.rkt")
            (lib "ansi/private/install.rkt")
            (lib "ansi/test-ansi.rkt")
            (lib "ansi/test-raw.rkt")
            (lib "ansi/lcd-terminal.rkt")
            (lib "ansi/test-modes.rkt")))
          (name . "ansi")
          (nix-sha256
           .
           "0d4904kpasw2sd2gq989y3hadjkrhgbmlfdrd48pl2fnz1315b7x")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:tonygarnockjones@gmail.com . #t)
                   (ring:1 . #t)
                   (terminal . #t)))
          (source . "github://github.com/tonyg/racket-ansi/master")
          (tags . ("terminal"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "1e64b8efc0d731f06a672620b0fccfda01c03735")
                          (source
                           .
                           "github://github.com/tonyg/racket-ansi/master")
                          (source_url
                           .
                           "http://github.com/tonyg/racket-ansi/tree/master")))))))
 ("ansi-color"
  .
  #hasheq((author . "renato@athaydes.com")
          (authors . ("renato@athaydes.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "ansi-color"
                    "doc/ansi-color@ansi-color/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/ansi-color.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/ansi-color.txt")))
          (checksum . "18c4c04d03deec096e35ae37edf01e69b1e5e24b")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "scribble-lib" "racket-doc" "rackunit-lib"))
          (dependency-names
           .
           ("base" "scribble-lib" "racket-doc" "rackunit-lib"))
          (description
           .
           "A library to make it easy to write colorized and styled output in terminals that support ANSI escape codes (most command lines).")
          (implies . ())
          (last-checked . 1557339497)
          (last-edit . 1542614558)
          (last-updated . 1542750042)
          (modules
           .
           ((lib "ansi-color/scribblings/ansi-color.scrbl")
            (lib "ansi-color/display.rkt")
            (lib "ansi-color/main.rkt")
            (lib "ansi-color/demo.rkt")))
          (name . "ansi-color")
          (nix-sha256
           .
           "1vsya9xy5naqgnva8vjaxxivqbxj7bq63bjnw678s849gy3b4jb4")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (ansi . #t)
                   (author:renato@athaydes.com . #t)
                   (cli . #t)
                   (ring:2 . #t)
                   (terminal . #t)))
          (source . "https://github.com/renatoathaydes/ansi-color.git")
          (tags . ("ansi" "cli" "terminal"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "18c4c04d03deec096e35ae37edf01e69b1e5e24b")
                          (source
                           .
                           "https://github.com/renatoathaydes/ansi-color.git")
                          (source_url
                           .
                           "https://github.com/renatoathaydes/ansi-color.git")))))))
 ("aoc-racket"
  .
  #hasheq((author . "mb@mbtype.com")
          (authors . ("mb@mbtype.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("salvage"
                    "aoc-racket"
                    "doc/aoc-racket@aoc-racket/index.html")))
                 (failure-log . "server/built/fail/aoc-racket.txt")
                 (min-failure-log . #f)
                 (success-log . #f)
                 (test-failure-log . #f)
                 (test-success-log . #f)))
          (checksum . "f3a159e555ad1c96c507be642f19d79cbfd94063")
          (checksum-error . #f)
          (conflicts . ())
          (date-added . 1556661319)
          (dependencies
           .
           ("graph"
            "base"
            "scribble-lib"
            ("sugar" #:version "0.3")
            "rackunit-lib"
            "math-lib"
            "beautiful-racket-lib"
            "rackunit-lib"
            "racket-doc"
            "scribble-doc"
            "rackunit-doc"
            "at-exp-lib"
            "math-doc"))
          (dependency-names
           .
           ("graph"
            "base"
            "scribble-lib"
            "sugar"
            "rackunit-lib"
            "math-lib"
            "beautiful-racket-lib"
            "rackunit-lib"
            "racket-doc"
            "scribble-doc"
            "rackunit-doc"
            "at-exp-lib"
            "math-doc"))
          (description
           .
           "Solutions & explanations — in Racket, of course — for the Advent of Code puzzles")
          (implies . ())
          (last-checked . 1557339497)
          (last-edit . 1556661319)
          (last-updated . 1545374441)
          (modules
           .
           ((lib "aoc-racket/2017/d08/test2.rkt")
            (lib "aoc-racket/2017/d01/star2.rkt")
            (lib "aoc-racket/2017/d22/main.rkt")
            (lib "aoc-racket/2016/day06/input.rkt")
            (lib "aoc-racket/2017/d01/test1.rkt")
            (lib "aoc-racket/2016/day16/test-b.rkt")
            (lib "aoc-racket/2017/d10/star2.rkt")
            (lib "aoc-racket/day07.rkt")
            (lib "aoc-racket/2017/d10/test2.rkt")
            (lib "aoc-racket/2018/02.rkt")
            (lib "aoc-racket/2017/d20/star1.rkt")
            (lib "aoc-racket/2017/d24/test2.rkt")
            (lib "aoc-racket/2017/d12/main.rkt")
            (lib "aoc-racket/2017/d13/main.rkt")
            (lib "aoc-racket/2017/d05/star1.rkt")
            (lib "aoc-racket/2017/d22/test1.rkt")
            (lib "aoc-racket/2017/d16/star2.rkt")
            (lib "aoc-racket/2017/d07/star1.rkt")
            (lib "aoc-racket/2017/d09/test2.rkt")
            (lib "aoc-racket/2016/day19/test.rkt")
            (lib "aoc-racket/2016/day16/test.rkt")
            (lib "aoc-racket/2017/d10/star1.rkt")
            (lib "aoc-racket/2017/d08/star1.rkt")
            (lib "aoc-racket/2017/d02/test1.rkt")
            (lib "aoc-racket/2016/day02/lang-b.rkt")
            (lib "aoc-racket/2017/d03/test2.rkt")
            (lib "aoc-racket/2016/day21/lang.rkt")
            (lib "aoc-racket/day10.rkt")
            (lib "aoc-racket/2017/d13/test1.rkt")
            (lib "aoc-racket/2016/day10/lang.rkt")
            (lib "aoc-racket/day01.rkt")
            (lib "aoc-racket/2016/day24/lang.rkt")
            (lib "aoc-racket/2017/d20/test1.rkt")
            (lib "aoc-racket/2016/day23/input.rkt")
            (lib "aoc-racket/2018/06.rkt")
            (lib "aoc-racket/2017/d05/main.rkt")
            (lib "aoc-racket/2017/d04/test1.rkt")
            (lib "aoc-racket/2017/d10/main.rkt")
            (lib "aoc-racket/day24.rkt")
            (lib "aoc-racket/2017/d11/test2.rkt")
            (lib "aoc-racket/2016/day20/test.rkt")
            (lib "aoc-racket/2016/day14/lang.rkt")
            (lib "aoc-racket/day09.rkt")
            (lib "aoc-racket/2017/d11/test1.rkt")
            (lib "aoc-racket/2017/d04/star2.rkt")
            (lib "aoc-racket/2016/day18/lang.rkt")
            (lib "aoc-racket/2016/day16/input-b.rkt")
            (lib "aoc-racket/2016/day16/lang.rkt")
            (lib "aoc-racket/2017/d25/star1.rkt")
            (lib "aoc-racket/day22.rkt")
            (lib "aoc-racket/2016/day07/lang.rkt")
            (lib "aoc-racket/2017/d14/test1.rkt")
            (lib "aoc-racket/aoc-racket.scrbl")
            (lib "aoc-racket/2016/day04/lang.rkt")
            (lib "aoc-racket/2016/day06/lang.rkt")
            (lib "aoc-racket/2018/11.rkt")
            (lib "aoc-racket/2017/d25/test1.rkt")
            (lib "aoc-racket/2016/day16/input.rkt")
            (lib "aoc-racket/day11.rkt")
            (lib "aoc-racket/day16.rkt")
            (lib "aoc-racket/2016/day12/test.rkt")
            (lib "aoc-racket/2017/d12/star2.rkt")
            (lib "aoc-racket/2016/day01/lang.rkt")
            (lib "aoc-racket/2016/day15/lang.rkt")
            (lib "aoc-racket/2017/d05/test2.rkt")
            (lib "aoc-racket/2016/day05/lang.rkt")
            (lib "aoc-racket/2016/day20/lang.rkt")
            (lib "aoc-racket/2016/day22/lang.rkt")
            (lib "aoc-racket/2017/d03/star2.rkt")
            (lib "aoc-racket/2017/d15/star2.rkt")
            (lib "aoc-racket/2017/d11/main.rkt")
            (lib "aoc-racket/2016/day04/input.rkt")
            (lib "aoc-racket/2016/day25/lang.rkt")
            (lib "aoc-racket/2017/d14/main.rkt")
            (lib "aoc-racket/2016/day03/test-b.rkt")
            (lib "aoc-racket/2017/d09/test1.rkt")
            (lib "aoc-racket/2017/d20/star2.rkt")
            (lib "aoc-racket/2017/d01/test2.rkt")
            (lib "aoc-racket/2017/d16/star1.rkt")
            (lib "aoc-racket/2017/d03/star1.rkt")
            (lib "aoc-racket/2017/d13/test2.rkt")
            (lib "aoc-racket/2017/aoc-lang.rkt")
            (lib "aoc-racket/2017/d24/main.rkt")
            (lib "aoc-racket/2017/d05/star2.rkt")
            (lib "aoc-racket/2017/d01/star1.rkt")
            (lib "aoc-racket/2017/d04/test2.rkt")
            (lib "aoc-racket/day08.rkt")
            (lib "aoc-racket/day13.rkt")
            (lib "aoc-racket/day05.rkt")
            (lib "aoc-racket/2017/d14/star2.rkt")
            (lib "aoc-racket/2017/d11/star2.rkt")
            (lib "aoc-racket/day15.rkt")
            (lib "aoc-racket/2017/d25/main.rkt")
            (lib "aoc-racket/2017/d01/main.rkt")
            (lib "aoc-racket/2017/d14/test2.rkt")
            (lib "aoc-racket/helper.rkt")
            (lib "aoc-racket/2016/day02/lang.rkt")
            (lib "aoc-racket/2017/d15/test1.rkt")
            (lib "aoc-racket/2017/d07/star2.rkt")
            (lib "aoc-racket/2017/d20/main.rkt")
            (lib "aoc-racket/2016/day09/lang.rkt")
            (lib "aoc-racket/2016/day02/test.rkt")
            (lib "aoc-racket/day02.rkt")
            (lib "aoc-racket/2017/d23/main.rkt")
            (lib "aoc-racket/day06.rkt")
            (lib "aoc-racket/2016/day23/test.rkt")
            (lib "aoc-racket/2018/07.rkt")
            (lib "aoc-racket/2016/day14/test.rkt")
            (lib "aoc-racket/day14.rkt")
            (lib "aoc-racket/day19.rkt")
            (lib "aoc-racket/2017/d22/star1.rkt")
            (lib "aoc-racket/2017/d14/star1.rkt")
            (lib "aoc-racket/2016/day19/lang.rkt")
            (lib "aoc-racket/2016/day03/test.rkt")
            (lib "aoc-racket/2016/day12/input.rkt")
            (lib "aoc-racket/2017/d21/star2.rkt")
            (lib "aoc-racket/2017/d07/test2.rkt")
            (lib "aoc-racket/2016/day09/input.rkt")
            (lib "aoc-racket/2017/d06/test1.rkt")
            (lib "aoc-racket/2017/d04/main.rkt")
            (lib "aoc-racket/2017/d21/test1.rkt")
            (lib "aoc-racket/2016/day03/lang-b.rkt")
            (lib "aoc-racket/2017/d03/main.rkt")
            (lib "aoc-racket/2017/d09/main.rkt")
            (lib "aoc-racket/2017/d19/test1.rkt")
            (lib "aoc-racket/2017/d12/star1.rkt")
            (lib "aoc-racket/2017/d24/star1.rkt")
            (lib "aoc-racket/day03.rkt")
            (lib "aoc-racket/2016/day22/test.rkt")
            (lib "aoc-racket/2017/d06/star2.rkt")
            (lib "aoc-racket/2016/day15/test.rkt")
            (lib "aoc-racket/2016/day04/test.rkt")
            (lib "aoc-racket/2017/d17/star1.rkt")
            (lib "aoc-racket/2016/day24/input.rkt")
            (lib "aoc-racket/2017/d02/star1.rkt")
            (lib "aoc-racket/2017/d08/test1.rkt")
            (lib "aoc-racket/2017/d07/main.rkt")
            (lib "aoc-racket/2017/d06/test2.rkt")
            (lib "aoc-racket/day18.rkt")
            (lib "aoc-racket/2017/d03/test1.rkt")
            (lib "aoc-racket/2016/day23/lang.rkt")
            (lib "aoc-racket/2016/day10/input.rkt")
            (lib "aoc-racket/2016/day18/input.rkt")
            (lib "aoc-racket/2017/d02/test2.rkt")
            (lib "aoc-racket/2016/day12/lang.rkt")
            (lib "aoc-racket/2016/day19/input.rkt")
            (lib "aoc-racket/2017/d21/main.rkt")
            (lib "aoc-racket/2016/day01/test.rkt")
            (lib "aoc-racket/2016/day20/input.rkt")
            (lib "aoc-racket/2017/d23/star1.rkt")
            (lib "aoc-racket/2017/d22/test2.rkt")
            (lib "aoc-racket/2016/day08/input.rkt")
            (lib "aoc-racket/2016/day05/input.rkt")
            (lib "aoc-racket/2017/d07/test1.rkt")
            (lib "aoc-racket/day12.rkt")
            (lib "aoc-racket/2017/d20/test2.rkt")
            (lib "aoc-racket/2016/day03/lang.rkt")
            (lib "aoc-racket/2018/04.rkt")
            (lib "aoc-racket/2018/01.rkt")
            (lib "aoc-racket/2017/d11/star1.rkt")
            (lib "aoc-racket/2017/d16/test1.rkt")
            (lib "aoc-racket/2017/d12/test2.rkt")
            (lib "aoc-racket/2017/d12/test1.rkt")
            (lib "aoc-racket/2017/d17/main.rkt")
            (lib "aoc-racket/2017/d19/main.rkt")
            (lib "aoc-racket/2016/day15/input.rkt")
            (lib "aoc-racket/2017/d06/main.rkt")
            (lib "aoc-racket/day20.rkt")
            (lib "aoc-racket/2017/d15/main.rkt")
            (lib "aoc-racket/2017/d19/test2.rkt")
            (lib "aoc-racket/2016/day13/input.rkt")
            (lib "aoc-racket/2017/d09/star2.rkt")
            (lib "aoc-racket/2017/d18/main.rkt")
            (lib "aoc-racket/2016/day06/test.rkt")
            (lib "aoc-racket/2016/day08/test.rkt")
            (lib "aoc-racket/2017/d16/test2.rkt")
            (lib "aoc-racket/day23.rkt")
            (lib "aoc-racket/day25.rkt")
            (lib "aoc-racket/2017/d13/star1.rkt")
            (lib "aoc-racket/2017/d16/main.rkt")
            (lib "aoc-racket/2016/day09/test.rkt")
            (lib "aoc-racket/2017/d19/star1.rkt")
            (lib "aoc-racket/2017/d06/star1.rkt")
            (lib "aoc-racket/2017/d10/test1.rkt")
            (lib "aoc-racket/day21.rkt")
            (lib "aoc-racket/2016/day25/input.rkt")
            (lib "aoc-racket/2016/day18/test.rkt")
            (lib "aoc-racket/day04.rkt")
            (lib "aoc-racket/2017/d05/test1.rkt")
            (lib "aoc-racket/2016/day10/test.rkt")
            (lib "aoc-racket/2017/d18/star1.rkt")
            (lib "aoc-racket/2017/d18/main2.rkt")
            (lib "aoc-racket/2017/d08/star2.rkt")
            (lib "aoc-racket/2016/day21/input.rkt")
            (lib "aoc-racket/main.rkt")
            (lib "aoc-racket/2017/d24/star2.rkt")
            (lib "aoc-racket/2017/d18/test2.rkt")
            (lib "aoc-racket/2016/day15/input-b.rkt")
            (lib "aoc-racket/2016/day13/lang.rkt")
            (lib "aoc-racket/2016/day17/lang.rkt")
            (lib "aoc-racket/2018/03.rkt")
            (lib "aoc-racket/2017/d08/main.rkt")
            (lib "aoc-racket/2017/d13/star2.rkt")
            (lib "aoc-racket/2017/d02/star2.rkt")
            (lib "aoc-racket/2018/10.rkt")
            (lib "aoc-racket/2017/d15/star1.rkt")
            (lib "aoc-racket/2017/d22/star2.rkt")
            (lib "aoc-racket/2017/d15/test2.rkt")
            (lib "aoc-racket/2017/d24/test1.rkt")
            (lib "aoc-racket/2017/d17/star2.rkt")
            (lib "aoc-racket/2016/day14/input.rkt")
            (lib "aoc-racket/2017/d23/star2.rkt")
            (lib "aoc-racket/2016/day22/input.rkt")
            (lib "aoc-racket/2017/d18/test1.rkt")
            (lib "aoc-racket/2016/day08/lang.rkt")
            (lib "aoc-racket/2016/day02/test-b.rkt")
            (lib "aoc-racket/2017/d09/star1.rkt")
            (lib "aoc-racket/2016/day21/test.rkt")
            (lib "aoc-racket/2018/09.rkt")
            (lib "aoc-racket/2018/stub.rkt")
            (lib "aoc-racket/2016/day07/input.rkt")
            (lib "aoc-racket/2017/d19/star2.rkt")
            (lib "aoc-racket/2016/day07/test.rkt")
            (lib "aoc-racket/2017/d18/star2.rkt")
            (lib "aoc-racket/2017/d17/test1.rkt")
            (lib "aoc-racket/2016/day13/test.rkt")
            (lib "aoc-racket/2016/day17/test.rkt")
            (lib "aoc-racket/2016/day24/test.rkt")
            (lib "aoc-racket/2017/d04/star1.rkt")
            (lib "aoc-racket/2017/helper.rkt")
            (lib "aoc-racket/2017/d02/main.rkt")
            (lib "aoc-racket/day17.rkt")
            (lib "aoc-racket/2017/d21/star1.rkt")
            (lib "aoc-racket/2016/day17/input.rkt")
            (lib "aoc-racket/2018/08.rkt")
            (lib "aoc-racket/2018/05.rkt")))
          (name . "aoc-racket")
          (nix-sha256
           .
           "00xv1ivw4ja18y0wci7n996k317wmgqr772lr3hkkncj3sl0ip3x")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-fail: . #t)
                   (:docs-error: . #t)
                   (:docs: . #t)
                   (author:mb@mbtype.com . #t)
                   (puzzles . #t)
                   (ring:1 . #t)))
          (source . "https://github.com/mbutterick/aoc-racket.git")
          (tags . ("puzzles"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "f3a159e555ad1c96c507be642f19d79cbfd94063")
                          (source
                           .
                           "https://github.com/mbutterick/aoc-racket.git")
                          (source_url
                           .
                           "https://github.com/mbutterick/aoc-racket.git")))))))
 ("aosd"
  .
  #hasheq((author . "asumu@ccs.neu.edu")
          (authors . ("asumu@ccs.neu.edu"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/aosd.txt")
                 (test-failure-log . "server/built/test-fail/aosd.txt")
                 (test-success-log . #f)))
          (checksum . "7ab51262a256a324b062d7b407cb5341d1f41f69")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "draw-lib" "x11"))
          (dependency-names . ("base" "draw-lib" "x11"))
          (description . "FFI bindings to the Atheme Project's libaosd")
          (implies . ())
          (last-checked . 1557339497)
          (last-edit . 1418738230)
          (last-updated . 1502812271)
          (modules
           .
           ((lib "aosd/main.rkt")
            (lib "aosd/aosd.rkt")
            (lib "aosd/aosd-dc.rkt")))
          (name . "aosd")
          (nix-sha256
           .
           "0wnickk2axhprdjx1dihvg226f4l6pmky8pafgsc55gkj8pj1jx6")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:asumu@ccs.neu.edu . #t)
                   (ffi . #t)
                   (graphics . #t)
                   (ring:1 . #t)))
          (source . "github://github.com/takikawa/racket-aosd/master")
          (tags . ("ffi" "graphics"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "7ab51262a256a324b062d7b407cb5341d1f41f69")
                          (source
                           .
                           "github://github.com/takikawa/racket-aosd/master")
                          (source_url
                           .
                           "http://github.com/takikawa/racket-aosd/tree/master")))))))
 ("apply"
  .
  #hasheq((author . "zaomir@outlook.com")
          (authors . ("zaomir@outlook.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . "server/built/deps/apply.txt")
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/apply.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/apply.txt")))
          (checksum . "1d7d138179cd02e2b10eab29748d08b76d91c69d")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("racket"))
          (dependency-names . ())
          (description . "應用序語言")
          (implies . ())
          (last-checked . 1557339497)
          (last-edit . 1516523856)
          (last-updated . 1516544174)
          (modules . ((lib "apply/lang/reader.rkt") (lib "apply/main.rkt")))
          (name . "apply")
          (nix-sha256
           .
           "05yvlajmg50493lp8vv53vgd607f5206ybjmc3v334jaarsz8r7f")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-dep-fail: . #t)
                   (:build-success: . #t)
                   (author:zaomir@outlook.com . #t)
                   (chinese . #t)
                   (compiler . #t)
                   (lang . #t)
                   (language . #t)
                   (programming-languages . #t)
                   (ring:2 . #t)))
          (source . "https://github.com/zaoqil/apply.git?path=apply")
          (tags
           .
           ("chinese" "compiler" "lang" "language" "programming-languages"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "1d7d138179cd02e2b10eab29748d08b76d91c69d")
                          (source
                           .
                           "https://github.com/zaoqil/apply.git?path=apply")
                          (source_url
                           .
                           "https://github.com/zaoqil/apply.git?path=apply")))))))
 ("appveyor-racket"
  .
  #hasheq((author . "philip@philipmcgrath.com")
          (authors . ("philip@philipmcgrath.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "appveyor-racket"
                    "doc/appveyor-racket@appveyor-racket/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/appveyor-racket.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/appveyor-racket.txt")))
          (checksum . "21f21d99160a0edefd7ceeb001210c88a8af1099")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "scribble-lib" "rackunit-lib"))
          (dependency-names . ("base" "scribble-lib" "rackunit-lib"))
          (description . "Help for using AppVeyor with Racket projects")
          (implies . ())
          (last-checked . 1557339497)
          (last-edit . 1543378719)
          (last-updated . 1549985931)
          (modules
           .
           ((lib "appveyor-racket/main.rkt")
            (lib "appveyor-racket/scribblings/appveyor-racket.scrbl")))
          (name . "appveyor-racket")
          (nix-sha256
           .
           "1qzhjr195z3idgf8a8r62dmwhs766i74lcm7bhhli8lgihdil7wp")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:philip@philipmcgrath.com . #t)
                   (ring:2 . #t)
                   (testing . #t)))
          (source . "https://github.com/liberalartist/appveyor-racket.git")
          (tags . ("testing"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "21f21d99160a0edefd7ceeb001210c88a8af1099")
                          (source
                           .
                           "https://github.com/liberalartist/appveyor-racket.git")
                          (source_url
                           .
                           "https://github.com/liberalartist/appveyor-racket.git")))))))
 ("apse"
  .
  #hasheq((author . "jay.mccarthy@gmail.com")
          (authors . ("jay.mccarthy@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/apse.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/apse.txt")))
          (checksum . "b02dfe2de3f7ae1a1edf931c9555408e6354a5bc")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "lux" "mode-lambda"))
          (dependency-names . ("base" "lux" "mode-lambda"))
          (description
           .
           "a pixel-based sprite editor (good with mode-lambda)")
          (implies . ())
          (last-checked . 1557339497)
          (last-edit . 1504535462)
          (last-updated . 1502895067)
          (modules
           .
           ((lib "apse/core.rkt")
            (lib "apse/main.rkt")
            (lib "apse/tool.rkt")))
          (name . "apse")
          (nix-sha256
           .
           "1pvxvzsy99gn74qa8qm5cbr21xxqy2nbvd1bw4v0arlwps01bgg6")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (app . #t)
                   (author:jay.mccarthy@gmail.com . #t)
                   (games . #t)
                   (graphics . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/jeapostrophe/apse")
          (tags . ("app" "games" "graphics"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "b02dfe2de3f7ae1a1edf931c9555408e6354a5bc")
                          (source . "git://github.com/jeapostrophe/apse")
                          (source_url
                           .
                           "http://github.com/jeapostrophe/apse/tree/master")))))))
 ("argo"
  .
  #hasheq((author . "jesse@lisp.sh")
          (authors . ("jesse@lisp.sh"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "argo" "doc/argo@argo/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/argo.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/argo.txt")))
          (checksum . "aa2e14608dffa648719b3fa6725862a88e1b2477")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "rackunit-lib"
            "http"
            "sugar"
            "beautiful-racket-lib"
            "web-server-lib"
            "json-pointer"
            "uri-template"
            "ejs"
            "brag"
            "scribble-lib"
            "racket-doc"
            "rackunit-lib"
            "beautiful-racket-lib"))
          (dependency-names
           .
           ("base"
            "rackunit-lib"
            "http"
            "sugar"
            "beautiful-racket-lib"
            "web-server-lib"
            "json-pointer"
            "uri-template"
            "ejs"
            "brag"
            "scribble-lib"
            "racket-doc"
            "rackunit-lib"
            "beautiful-racket-lib"))
          (description . "Validate JSON data using JSON Schema.")
          (implies . ())
          (last-checked . 1557339498)
          (last-edit . 1503942758)
          (last-updated . 1539951149)
          (modules
           .
           ((lib "argo/scribblings/command-oneline.scrbl")
            (lib "argo/pp.rkt")
            (lib "argo/evaluator.rkt")
            (lib "argo/regexp.rkt")
            (lib "argo/scribblings/interface.scrbl")
            (lib "argo/scribblings/command-schema.scrbl")
            (lib "argo/test.rkt")
            (lib "argo/parameters.rkt")
            (lib "argo/equal.rkt")
            (lib "argo/scribblings/command-point.scrbl")
            (lib "argo/format.rkt")
            (lib "argo/scribblings/command-equal.scrbl")
            (lib "argo/parse.rkt")
            (lib "argo/expander.rkt")
            (lib "argo/tokenizer.rkt")
            (lib "argo/json.rkt")
            (lib "argo/ip.rkt")
            (lib "argo/scribblings/command-validate.scrbl")
            (lib "argo/schema.rkt")
            (lib "argo/main.rkt")
            (lib "argo/scribblings/command-pp.scrbl")
            (lib "argo/scribblings/limitations.scrbl")
            (lib "argo/scribblings/installation.scrbl")
            (lib "argo/validate.rkt")
            (lib "argo/reader.rkt")
            (lib "argo/command.rkt")
            (lib "argo/resolve.rkt")
            (lib "argo/scribblings/references.scrbl")
            (lib "argo/scribblings/running.scrbl")
            (lib "argo/util.rkt")
            (lib "argo/oneline.rkt")
            (lib "argo/grammar.rkt")
            (lib "argo/scribblings/technical.scrbl")
            (lib "argo/tests/schema/negative/test.rkt")
            (lib "argo/scribblings/argo.scrbl")))
          (name . "argo")
          (nix-sha256
           .
           "03cy91xfn8fh8ajmn0dgkrisah022p2kmhv6hlnqnhi2np80vfaf")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:jesse@lisp.sh . #t)
                   (data . #t)
                   (json . #t)
                   (ring:1 . #t)
                   (validation . #t)))
          (source . "git://github.com/jessealama/argo")
          (tags . ("data" "json" "validation"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "aa2e14608dffa648719b3fa6725862a88e1b2477")
                          (source . "git://github.com/jessealama/argo")
                          (source_url
                           .
                           "http://github.com/jessealama/argo/tree/master")))))))
 ("arguments"
  .
  #hasheq((author . "jackhfirth@gmail.com")
          (authors . ("jackhfirth@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "arguments" "doc/arguments@arguments/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/arguments.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/arguments.txt")))
          (checksum . "1a27bb7a1444effc034bf8b2df4ba1845f51478f")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "racket-doc" "rackunit-lib" "scribble-lib"))
          (dependency-names
           .
           ("base" "racket-doc" "rackunit-lib" "scribble-lib"))
          (description
           .
           "A simple data structure for a group of function arguments. Used by the mock package.")
          (implies . ())
          (last-checked . 1557339498)
          (last-edit . 1500074225)
          (last-updated . 1508914852)
          (modules
           .
           ((lib "arguments/main.scrbl")
            (lib "arguments/tests/syntax.rkt")
            (lib "arguments/main.rkt")))
          (name . "arguments")
          (nix-sha256
           .
           "1d7y7f08ys0lg3m89zy66whkzpd7vdn4xhkp5nv99vg0pdl2zilm")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:jackhfirth@gmail.com . #t)
                   (data . #t)
                   (reflection . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/jackfirth/racket-mock?path=arguments")
          (tags . ("data" "reflection"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "1a27bb7a1444effc034bf8b2df4ba1845f51478f")
                          (source
                           .
                           "git://github.com/jackfirth/racket-mock?path=arguments")
                          (source_url
                           .
                           "http://github.com/jackfirth/racket-mock/tree/master?path=arguments")))))))
 ("arroy"
  .
  #hasheq((author . "jay.mccarthy@gmail.com")
          (authors . ("jay.mccarthy@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/arroy.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/arroy.txt")))
          (checksum . "487b8cbacc5f1f9a4600f55b8c0f7f148f7c2747")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "web-server-lib"))
          (dependency-names . ("base" "web-server-lib"))
          (description
           .
           "A little library for modeling labeled transition systems with a collaborative Web stepper.")
          (implies . ())
          (last-checked . 1557339498)
          (last-edit . 1385589159)
          (last-updated . 1502812272)
          (modules
           .
           ((lib "arroy/main.rkt")
            (lib "arroy/lts.rkt")
            (lib "arroy/games/ttt.rkt")
            (lib "arroy/games/ghost.rkt")
            (lib "arroy/games/guess.rkt")))
          (name . "arroy")
          (nix-sha256
           .
           "0spb6km181d9lkn0qzv1iwwahwg9wgdwx73ims32makq8mb4f1y6")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (app . #t)
                   (author:jay.mccarthy@gmail.com . #t)
                   (games . #t)
                   (ring:1 . #t)
                   (web . #t)))
          (source . "github://github.com/jeapostrophe/arroy/master")
          (tags . ("app" "games" "web"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "487b8cbacc5f1f9a4600f55b8c0f7f148f7c2747")
                          (source
                           .
                           "github://github.com/jeapostrophe/arroy/master")
                          (source_url
                           .
                           "http://github.com/jeapostrophe/arroy/tree/master")))))))
 ("asi64"
  .
  #hasheq((author . "pezi_pink@pinksquirrellabs.com")
          (authors . ("pezi_pink@pinksquirrellabs.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "asi64" "doc/asi64@asi64/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/asi64.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/asi64.txt")))
          (checksum . "81e61a25a6f35e137df6326353b9c54f50f2d829")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "scribble-lib" "racket-doc"))
          (dependency-names . ("base" "scribble-lib" "racket-doc"))
          (description . "The Racket based 6502 assembler")
          (implies . ())
          (last-checked . 1557339498)
          (last-edit . 1540895098)
          (last-updated . 1546435213)
          (modules
           .
           ((lib "asi64/expander.rkt")
            (lib "asi64/lang/language-info.rkt")
            (lib "asi64/samples/starfield.rkt")
            (lib "asi64/lang/reader.rkt")
            (lib "asi64/main.rkt")
            (lib "asi64/reader.rkt")
            (lib "asi64/lang/runtime-config.rkt")
            (lib "asi64/scribblings/asi64.scrbl")))
          (name . "asi64")
          (nix-sha256
           .
           "0y0yii2yj6bsm44sd10i2d3yb6mxdbc9bja55zra76ibwfpzxvd5")
          (ring . 1)
          (search-terms
           .
           #hasheq((|6502| . #t)
                   (:build-success: . #t)
                   (:docs: . #t)
                   (C64 . #t)
                   (author:pezi_pink@pinksquirrellabs.com . #t)
                   (ring:1 . #t)))
          (source . "https://github.com/pezipink/asi64.git")
          (tags . ("6502" "C64"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "81e61a25a6f35e137df6326353b9c54f50f2d829")
                          (source . "https://github.com/pezipink/asi64.git")
                          (source_url
                           .
                           "https://github.com/pezipink/asi64.git")))))))
 ("asm"
  .
  #hasheq((author . "leo@lwh.jp")
          (authors . ("leo@lwh.jp"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "asm" "doc/asm@asm/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/asm.txt")
                 (test-failure-log . "server/built/test-fail/asm.txt")
                 (test-success-log . #f)))
          (checksum . "d5194143d9ba47d00ca8e366a71bc39b897eb318")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "binutils"
            "data-lib"
            "racket-doc"
            "rackunit-lib"
            "scribble-lib"))
          (dependency-names
           .
           ("base"
            "binutils"
            "data-lib"
            "racket-doc"
            "rackunit-lib"
            "scribble-lib"))
          (description
           .
           "A multi-platform assembler for Racket (supports x64 and generic instruction sets)")
          (implies . ())
          (last-checked . 1557339498)
          (last-edit . 1466498787)
          (last-updated . 1524907106)
          (modules
           .
           ((lib "asm/scribblings/assembler.scrbl")
            (lib "asm/scribblings/generic.scrbl")
            (lib "asm/private/assembler.rkt")
            (lib "asm/main.rkt")
            (lib "asm/x86/private/mode.rkt")
            (lib "asm/x86/private/encode.rkt")
            (lib "asm/x86/private/opcode-map-stx.rkt")
            (lib "asm/x86/op.rkt")
            (lib "asm/scribblings/asm.scrbl")
            (lib "asm/example/incr.rkt")
            (lib "asm/x86/ndisasm.rkt")
            (lib "asm/x86/private/opcode-map.rkt")
            (lib "asm/base.rkt")
            (lib "asm/example/rpn.rkt")
            (lib "asm/x86/private/instructions.rkt")
            (lib "asm/scribblings/x86.scrbl")
            (lib "asm/x86/register.rkt")
            (lib "asm/ffi.rkt")
            (lib "asm/x86/kernel.rkt")
            (lib "asm/scribblings/ffi.scrbl")
            (lib "asm/example/fibonacci.rkt")
            (lib "asm/x86/private/prefix.rkt")
            (lib "asm/example/ifib.rkt")
            (lib "asm/generic/generic-asm-sig.rkt")
            (lib "asm/x86/private/operand.rkt")
            (lib "asm/generic/generic-x86-unit.rkt")
            (lib "asm/x86.rkt")
            (lib "asm/generic.rkt")
            (lib "asm/example/rfib.rkt")))
          (name . "asm")
          (nix-sha256
           .
           "0aj95a31c4cmns38ryp0g1mm186sp2vm8lyc04j2l3cy8mxxs0qp")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (assembler . #t)
                   (author:leo@lwh.jp . #t)
                   (ffi . #t)
                   (ring:1 . #t)
                   (unstable . #t)))
          (source . "git://github.com/lwhjp/racket-asm")
          (tags . ("assembler" "ffi" "unstable"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "d5194143d9ba47d00ca8e366a71bc39b897eb318")
                          (source . "git://github.com/lwhjp/racket-asm")
                          (source_url
                           .
                           "http://github.com/lwhjp/racket-asm/tree/master")))))))
 ("asn1"
  .
  #hasheq((author . "ryanc@racket-lang.org")
          (authors . ("ryanc@racket-lang.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/asn1.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/asn1.txt")))
          (checksum . "2921d5953deeea33413cfd358bb4768cc775277b")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "asn1-lib" "asn1-doc"))
          (dependency-names . ("base" "asn1-lib" "asn1-doc"))
          (description . "ASN.1 library")
          (implies . ("asn1-lib" "asn1-doc"))
          (last-checked . 1557339498)
          (last-edit . 1518435156)
          (last-updated . 1551805353)
          (modules . ())
          (name . "asn1")
          (nix-sha256
           .
           "0z4dy45qdygnyjlfhhs21s52jcjihg7hjx72lga20m9i59jl4a69")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:ryanc@racket-lang.org . #t)
                   (io . #t)
                   (net . #t)
                   (parser . #t)
                   (parsing . #t)
                   (ring:2 . #t)))
          (source . "https://github.com/rmculpepper/asn1.git?path=asn1")
          (tags . ("io" "net" "parser" "parsing"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "2921d5953deeea33413cfd358bb4768cc775277b")
                          (source
                           .
                           "https://github.com/rmculpepper/asn1.git?path=asn1")
                          (source_url
                           .
                           "https://github.com/rmculpepper/asn1.git?path=asn1")))))))
 ("asn1-doc"
  .
  #hasheq((author . "ryanc@racket-lang.org")
          (authors . ("ryanc@racket-lang.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "asn1" "doc/asn1@asn1-doc/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/asn1-doc.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/asn1-doc.txt")))
          (checksum . "2921d5953deeea33413cfd358bb4768cc775277b")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "racket-doc" "scribble-lib" "asn1-lib"))
          (dependency-names . ("base" "racket-doc" "scribble-lib" "asn1-lib"))
          (description . "ASN.1 library")
          (implies . ())
          (last-checked . 1557339498)
          (last-edit . 1518435052)
          (last-updated . 1551805353)
          (modules
           .
           ((lib "asn1/scribblings/translating.scrbl")
            (lib "asn1/scribblings/intro.scrbl")
            (lib "asn1/scribblings/asn1.scrbl")
            (lib "asn1/scribblings/types.scrbl")
            (lib "asn1/scribblings/codec.scrbl")))
          (name . "asn1-doc")
          (nix-sha256
           .
           "0z4dy45qdygnyjlfhhs21s52jcjihg7hjx72lga20m9i59jl4a69")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:ryanc@racket-lang.org . #t)
                   (io . #t)
                   (net . #t)
                   (parser . #t)
                   (parsing . #t)
                   (ring:2 . #t)))
          (source . "https://github.com/rmculpepper/asn1.git?path=asn1-doc")
          (tags . ("io" "net" "parser" "parsing"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "2921d5953deeea33413cfd358bb4768cc775277b")
                          (source
                           .
                           "https://github.com/rmculpepper/asn1.git?path=asn1-doc")
                          (source_url
                           .
                           "https://github.com/rmculpepper/asn1.git?path=asn1-doc")))))))
 ("asn1-lib"
  .
  #hasheq((author . "ryanc@racket-lang.org")
          (authors . ("ryanc@racket-lang.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/asn1-lib.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/asn1-lib.txt")))
          (checksum . "2921d5953deeea33413cfd358bb4768cc775277b")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" ("binaryio-lib" #:version "1.1")))
          (dependency-names . ("base" "binaryio-lib"))
          (description . "ASN.1 library")
          (implies . ())
          (last-checked . 1557339498)
          (last-edit . 1518435001)
          (last-updated . 1551805354)
          (modules
           .
           ((lib "asn1/private/base256.rkt")
            (lib "asn1/ber.rkt")
            (lib "asn1/private/base.rkt")
            (lib "asn1/private/ber-frame.rkt")
            (lib "asn1/main.rkt")
            (lib "asn1/private/ber.rkt")
            (lib "asn1/private/types.rkt")))
          (name . "asn1-lib")
          (nix-sha256
           .
           "0z4dy45qdygnyjlfhhs21s52jcjihg7hjx72lga20m9i59jl4a69")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:ryanc@racket-lang.org . #t)
                   (io . #t)
                   (net . #t)
                   (parser . #t)
                   (parsing . #t)
                   (ring:2 . #t)))
          (source . "https://github.com/rmculpepper/asn1.git?path=asn1-lib")
          (tags . ("io" "net" "parser" "parsing"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "2921d5953deeea33413cfd358bb4768cc775277b")
                          (source
                           .
                           "https://github.com/rmculpepper/asn1.git?path=asn1-lib")
                          (source_url
                           .
                           "https://github.com/rmculpepper/asn1.git?path=asn1-lib")))))))
 ("asn1-test"
  .
  #hasheq((author . "ryanc@racket-lang.org")
          (authors . ("ryanc@racket-lang.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/asn1-test.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/asn1-test.txt")))
          (checksum . "2921d5953deeea33413cfd358bb4768cc775277b")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "rackunit-lib" "asn1-lib"))
          (dependency-names . ("base" "rackunit-lib" "asn1-lib"))
          (description . "ASN.1 library")
          (implies . ())
          (last-checked . 1557339498)
          (last-edit . 1518435118)
          (last-updated . 1551805354)
          (modules
           .
           ((lib "asn1/examples/crypto.rkt")
            (lib "asn1/write-benchmark.rkt")
            (lib "asn1/read-benchmark.rkt")
            (lib "asn1/basic.rkt")
            (lib "asn1/fuzz.rkt")
            (lib "asn1/examples/sec1.rkt")
            (lib "asn1/examples/crypto-test.rkt")
            (lib "asn1/examples/pkcs1.rkt")))
          (name . "asn1-test")
          (nix-sha256
           .
           "0z4dy45qdygnyjlfhhs21s52jcjihg7hjx72lga20m9i59jl4a69")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:ryanc@racket-lang.org . #t)
                   (io . #t)
                   (net . #t)
                   (parser . #t)
                   (parsing . #t)
                   (ring:2 . #t)))
          (source . "https://github.com/rmculpepper/asn1.git?path=asn1-test")
          (tags . ("io" "net" "parser" "parsing"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "2921d5953deeea33413cfd358bb4768cc775277b")
                          (source
                           .
                           "https://github.com/rmculpepper/asn1.git?path=asn1-test")
                          (source_url
                           .
                           "https://github.com/rmculpepper/asn1.git?path=asn1-test")))))))
 ("asyncunit"
  .
  #hasheq((author . "schuster@ccs.neu.edu")
          (authors . ("schuster@ccs.neu.edu"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "asyncunit" "doc/asyncunit@asyncunit/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/asyncunit.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/asyncunit.txt")))
          (checksum . "ef9e5c45e83a6f44539d45c8ac52935a463a9659")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "rackunit-lib" "scribble-lib"))
          (dependency-names . ("base" "rackunit-lib" "scribble-lib"))
          (description
           .
           "RackUnit helper functions for asynchronous channels")
          (implies . ())
          (last-checked . 1557339498)
          (last-edit . 1418836111)
          (last-updated . 1502812273)
          (modules
           .
           ((lib "asyncunit/main.rkt")
            (lib "asyncunit/tests.rkt")
            (lib "asyncunit/asyncunit.scrbl")))
          (name . "asyncunit")
          (nix-sha256
           .
           "1s038g6sjy4f9abk5pafczbjrh2bhhp32xhiz197va705p8hcivr")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:schuster@ccs.neu.edu . #t)
                   (concurrency . #t)
                   (ring:1 . #t)
                   (testing . #t)))
          (source . "git://github.com/schuster/asyncunit")
          (tags . ("concurrency" "testing"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "ef9e5c45e83a6f44539d45c8ac52935a463a9659")
                          (source . "git://github.com/schuster/asyncunit")
                          (source_url
                           .
                           "http://github.com/schuster/asyncunit/tree/master")))))))
 ("at-exp-lib"
  .
  #hash((author . "eli@racket-lang.org mflatt@racket-lang.org")
        (checksum . "6e4e7cf05e3eac47f1e6e976a150ff77c0f87fe6")
        (dependencies . ("base"))
        (dependency-names . ("base"))
        (description . "eli@racket-lang.org mflatt@racket-lang.org")
        (modules . ())
        (name . "at-exp-lib")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/at-exp-lib.zip")
        (tags . ())))
 ("auto-syntax-e"
  .
  #hasheq((author . "georges.duperon@gmail.com")
          (authors . ("georges.duperon@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "auto-syntax-e"
                    "doc/auto-syntax-e@auto-syntax-e/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/auto-syntax-e.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/auto-syntax-e.txt")))
          (checksum . "2b64df7050b6b0c4f6568e765434bb2786453a5b")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "rackunit-lib" "scribble-lib" "racket-doc"))
          (dependency-names
           .
           ("base" "rackunit-lib" "scribble-lib" "racket-doc"))
          (description
           .
           "For syntax pattern variables: instead of raising an error, x is roughly equivalent to (syntax->datum #'x).")
          (implies . ())
          (last-checked . 1557339499)
          (last-edit . 1476919818)
          (last-updated . 1555923759)
          (modules
           .
           ((lib "auto-syntax-e/test/test-meta.rkt")
            (lib "auto-syntax-e/scribblings/auto-syntax-e.scrbl")
            (lib "auto-syntax-e/utils.rkt")
            (lib "auto-syntax-e/main.rkt")
            (lib "auto-syntax-e/test/test-auto-syntax-e.rkt")))
          (name . "auto-syntax-e")
          (nix-sha256
           .
           "0jdl4npp95y39nxvaqkr840lisyc6sl6sn5xi82zqp83099h0fnq")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:georges.duperon@gmail.com . #t)
                   (ring:1 . #t)
                   (syntax . #t)))
          (source . "https://github.com/jsmaniac/auto-syntax-e.git")
          (tags . ("syntax"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "2b64df7050b6b0c4f6568e765434bb2786453a5b")
                          (source
                           .
                           "https://github.com/jsmaniac/auto-syntax-e.git")
                          (source_url
                           .
                           "https://github.com/jsmaniac/auto-syntax-e.git")))))))
 ("autoffi"
  .
  #hasheq((author . "vervaeck.sam@skynet.be")
          (authors . ("vervaeck.sam@skynet.be"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . "server/built/deps/autoffi.txt")
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/autoffi.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/autoffi.txt")))
          (checksum . "c324b3b0d2b4e848782fc509856ddc82eaee9e36")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . (("ddict" "0.1")))
          (dependency-names . ("ddict"))
          (description . "Automatically generating FFI bindings for Racket")
          (implies . ())
          (last-checked . 1557339499)
          (last-edit . 1488374430)
          (last-updated . 1544974846)
          (modules
           .
           ((lib "autoffi/util.rkt")
            (lib "autoffi/runtime.rkt")
            (lib "autoffi/main.rkt")
            (lib "autoffi/parse.rkt")
            (lib "autoffi/syntax.rkt")))
          (name . "autoffi")
          (nix-sha256
           .
           "1z5prvd0y1z6dkjaxxsivxy8sm15ki75l5mbikr947pjbwjvkdwd")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-dep-fail: . #t)
                   (:build-success: . #t)
                   (author:vervaeck.sam@skynet.be . #t)
                   (code-generator . #t)
                   (ffi . #t)
                   (ring:1 . #t)
                   (syntax . #t)))
          (source . "git://github.com/AutoFFI/racket-autoffi")
          (tags . ("code-generator" "ffi" "syntax"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "c324b3b0d2b4e848782fc509856ddc82eaee9e36")
                          (source . "git://github.com/AutoFFI/racket-autoffi")
                          (source_url
                           .
                           "http://github.com/AutoFFI/racket-autoffi/tree/master")))))))
 ("automata"
  .
  #hasheq((author . "jay.mccarthy@gmail.com")
          (authors . ("jay.mccarthy@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/automata.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/automata.txt")))
          (checksum . "a82d4d3c94f55c6560ec14f76300811658ed05a6")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("automata-lib" "automata-doc"))
          (dependency-names . ("automata-lib" "automata-doc"))
          (description
           .
           "a library for defining efficient automata using match patterns")
          (implies . ("automata-lib" "automata-doc"))
          (last-checked . 1557339499)
          (last-edit . 1438288079)
          (last-updated . 1502812274)
          (modules . ())
          (name . "automata")
          (nix-sha256
           .
           "06gwyy6zyz3p3rcq6vl893pg0ksz2pyn6a1la67d5an3hmkikj04")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:jay.mccarthy@gmail.com . #t)
                   (automata . #t)
                   (match . #t)
                   (regex . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/jeapostrophe/automata/?path=automata")
          (tags . ("automata" "match" "regex"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "a82d4d3c94f55c6560ec14f76300811658ed05a6")
                          (source
                           .
                           "git://github.com/jeapostrophe/automata/?path=automata")
                          (source_url
                           .
                           "git://github.com/jeapostrophe/automata/?path=automata")))
                 ("6.2"
                  .
                  #hasheq((checksum
                           .
                           "9f098dddde7f217879070816090c1e8e74d49432")
                          (source
                           .
                           "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")
                          (source_url
                           .
                           "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")))))))
 ("automata-doc"
  .
  #hasheq((author . "jay.mccarthy@gmail.com")
          (authors . ("jay.mccarthy@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "automata"
                    "doc/automata@automata-doc/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/automata-doc.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/automata-doc.txt")))
          (checksum . "a82d4d3c94f55c6560ec14f76300811658ed05a6")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           (("base" #:version "6.2.900.4")
            "automata-lib"
            "scribble-lib"
            "racket-doc"))
          (dependency-names
           .
           ("base" "automata-lib" "scribble-lib" "racket-doc"))
          (description
           .
           "a library for defining efficient automata using match patterns")
          (implies . ())
          (last-checked . 1557339499)
          (last-edit . 1504535586)
          (last-updated . 1502812274)
          (modules
           .
           ((lib "automata/scribblings/automata.scrbl")
            (lib "automata/scribblings/re.scrbl")))
          (name . "automata-doc")
          (nix-sha256
           .
           "06gwyy6zyz3p3rcq6vl893pg0ksz2pyn6a1la67d5an3hmkikj04")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:jay.mccarthy@gmail.com . #t)
                   (automata . #t)
                   (match . #t)
                   (regex . #t)
                   (ring:1 . #t)))
          (source
           .
           "git://github.com/jeapostrophe/automata?path=automata-doc")
          (tags . ("automata" "match" "regex"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "a82d4d3c94f55c6560ec14f76300811658ed05a6")
                          (source
                           .
                           "git://github.com/jeapostrophe/automata?path=automata-doc")
                          (source_url
                           .
                           "http://github.com/jeapostrophe/automata/tree/master?path=automata-doc")))
                 ("6.2"
                  .
                  #hasheq((checksum
                           .
                           "9f098dddde7f217879070816090c1e8e74d49432")
                          (source
                           .
                           "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")
                          (source_url
                           .
                           "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")))))))
 ("automata-lib"
  .
  #hasheq((author . "jay.mccarthy@gmail.com")
          (authors . ("jay.mccarthy@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/automata-lib.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/automata-lib.txt")))
          (checksum . "a82d4d3c94f55c6560ec14f76300811658ed05a6")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . (("base" #:version "6.2.900.6")))
          (dependency-names . ("base"))
          (description
           .
           "a library for defining efficient automata using match patterns")
          (implies . ())
          (last-checked . 1557339499)
          (last-edit . 1504535500)
          (last-updated . 1502812274)
          (modules
           .
           ((lib "automata/nfa-star.rkt")
            (lib "automata/machine.rkt")
            (lib "automata/dfa.rkt")
            (lib "automata/nfa.rkt")
            (lib "automata/re-ext.rkt")
            (lib "automata/re.rkt")
            (lib "automata/re-help.rkt")
            (lib "automata/re-compile.rkt")
            (lib "automata/nfa-ep.rkt")))
          (name . "automata-lib")
          (nix-sha256
           .
           "06gwyy6zyz3p3rcq6vl893pg0ksz2pyn6a1la67d5an3hmkikj04")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:jay.mccarthy@gmail.com . #t)
                   (automata . #t)
                   (match . #t)
                   (regex . #t)
                   (ring:1 . #t)))
          (source
           .
           "git://github.com/jeapostrophe/automata?path=automata-lib")
          (tags . ("automata" "match" "regex"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "a82d4d3c94f55c6560ec14f76300811658ed05a6")
                          (source
                           .
                           "git://github.com/jeapostrophe/automata?path=automata-lib")
                          (source_url
                           .
                           "http://github.com/jeapostrophe/automata/tree/master?path=automata-lib")))
                 ("6.2"
                  .
                  #hasheq((checksum
                           .
                           "9f098dddde7f217879070816090c1e8e74d49432")
                          (source
                           .
                           "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")
                          (source_url
                           .
                           "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")))))))
 ("automata-test"
  .
  #hasheq((author . "jay.mccarthy@gmail.com")
          (authors . ("jay.mccarthy@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/automata-test.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/automata-test.txt")))
          (checksum . "a82d4d3c94f55c6560ec14f76300811658ed05a6")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           (("base" #:version "6.2.900.4") "automata-lib" "eli-tester"))
          (dependency-names . ("base" "automata-lib" "eli-tester"))
          (description
           .
           "a library for defining efficient automata using match patterns")
          (implies . ())
          (last-checked . 1557339499)
          (last-edit . 1504535506)
          (last-updated . 1502812275)
          (modules
           .
           ((lib "automata/tests/dfa-test.rkt")
            (lib "automata/tests/nfa-ep-test.rkt")
            (lib "automata/tests/nfa-test.rkt")
            (lib "automata/tests/nfa-star-test.rkt")
            (lib "automata/tests/re-test.rkt")
            (lib "automata/tests/explain.rkt")))
          (name . "automata-test")
          (nix-sha256
           .
           "06gwyy6zyz3p3rcq6vl893pg0ksz2pyn6a1la67d5an3hmkikj04")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:jay.mccarthy@gmail.com . #t)
                   (automata . #t)
                   (match . #t)
                   (regex . #t)
                   (ring:1 . #t)))
          (source
           .
           "git://github.com/jeapostrophe/automata?path=automata-test")
          (tags . ("automata" "match" "regex"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "a82d4d3c94f55c6560ec14f76300811658ed05a6")
                          (source
                           .
                           "git://github.com/jeapostrophe/automata?path=automata-test")
                          (source_url
                           .
                           "http://github.com/jeapostrophe/automata/tree/master?path=automata-test")))
                 ("6.2"
                  .
                  #hasheq((checksum
                           .
                           "9f098dddde7f217879070816090c1e8e74d49432")
                          (source
                           .
                           "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")
                          (source_url
                           .
                           "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")))))))
 ("auxiliary-macro-context"
  .
  #hasheq((author . "tonygarnockjones@gmail.com")
          (authors . ("tonygarnockjones@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log
                  .
                  "server/built/install/auxiliary-macro-context.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/auxiliary-macro-context.txt")))
          (checksum . "52d3df7f937700bcea5b4d200903cfb6575afdc6")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "rackunit-lib"))
          (dependency-names . ("base" "rackunit-lib"))
          (description
           .
           "Match-expander-style syntactic extensibility outside expressions.")
          (implies . ())
          (last-checked . 1557339499)
          (last-edit . 1469297561)
          (last-updated . 1502812275)
          (modules
           .
           ((lib
             "auxiliary-macro-context/test/test-auxiliary-macro-context.rkt")
            (lib "auxiliary-macro-context/main.rkt")
            (lib
             "auxiliary-macro-context/test/test-auxiliary-macro-context2.rkt")))
          (name . "auxiliary-macro-context")
          (nix-sha256
           .
           "0rdw9dxyywa3n32ljchjj12p163n951ck698ph0vwjx0aam4mxyn")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:no-tag: . #t)
                   (author:tonygarnockjones@gmail.com . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/tonyg/racket-auxiliary-macro-context")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "52d3df7f937700bcea5b4d200903cfb6575afdc6")
                          (source
                           .
                           "git://github.com/tonyg/racket-auxiliary-macro-context")
                          (source_url
                           .
                           "http://github.com/tonyg/racket-auxiliary-macro-context/tree/master")))))))
 ("avl"
  .
  #hasheq((author . "mordae@anilinux.org")
          (authors . ("mordae@anilinux.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "avl" "doc/avl@avl/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/avl.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/avl.txt")))
          (checksum . "e981880a7d4c202368cdd74c94cf11cbac42a29e")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "scribble-lib" "racket-doc"))
          (dependency-names . ("base" "scribble-lib" "racket-doc"))
          (description . "AVL Trees for Racket")
          (implies . ())
          (last-checked . 1557339499)
          (last-edit . 1409755055)
          (last-updated . 1515366974)
          (modules . ((lib "avl/main.rkt") (lib "avl/avl.scrbl")))
          (name . "avl")
          (nix-sha256
           .
           "1pmpv988kgki68vr3q6ylpb8495vswmq3n6g8jymyjx2bhj99p39")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (:no-tag: . #t)
                   (author:mordae@anilinux.org . #t)
                   (ring:1 . #t)))
          (source . "github://github.com/mordae/racket-avl/master")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "e981880a7d4c202368cdd74c94cf11cbac42a29e")
                          (source
                           .
                           "github://github.com/mordae/racket-avl/master")
                          (source_url
                           .
                           "http://github.com/mordae/racket-avl/tree/master")))))))
 ("aws"
  .
  #hasheq((author . "greghendershott@gmail.com")
          (authors . ("greghendershott@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "aws" "doc/aws@aws/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/aws.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/aws.txt")))
          (checksum . "4aaf88e448b3e57203f1a9b1f177218c5b5aa6c3")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           (("base" #:version "6.2")
            ("http" #:version "0.3")
            "sha"
            "rackunit-lib"
            "at-exp-lib"
            "racket-doc"
            "rackunit-lib"
            "scribble-lib"))
          (dependency-names
           .
           ("base"
            "http"
            "sha"
            "rackunit-lib"
            "at-exp-lib"
            "racket-doc"
            "rackunit-lib"
            "scribble-lib"))
          (description
           .
           "Amazon Web Services including S3, SDB, SES, SNS, SQS, CloudWatch, Glacier, Dynamo, and Route 53.")
          (implies . ())
          (last-checked . 1557339499)
          (last-edit . 1396443660)
          (last-updated . 1555599759)
          (modules
           .
           ((lib "aws/cw.rkt")
            (lib "aws/r53.rkt")
            (lib "aws/sqs.rkt")
            (lib "aws/s3.rkt")
            (lib "examples/examples.rkt")
            (lib "aws/post.rkt")
            (lib "aws/glacier.rkt")
            (lib "aws/sns.rkt")
            (lib "aws/sigv4.rkt")
            (lib "aws/take.rkt")
            (lib "aws/xml-path.rkt")
            (lib "aws/sdb.rkt")
            (lib "examples/backup.rkt")
            (lib "aws/pool.rkt")
            (lib "aws/main.rkt")
            (lib "aws/dynamo.rkt")
            (lib "aws/aws.scrbl")
            (lib "aws/tests/data.rkt")
            (lib "aws/util.rkt")
            (lib "aws/ses.rkt")
            (lib "aws/exn.rkt")
            (lib "aws/keys.rkt")))
          (name . "aws")
          (nix-sha256
           .
           "0jd43z75wqn9n98q25a3cphck1rk6ix6wdc4dqhhb8d3rw07kdwz")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (AWS . #t)
                   (author:greghendershott@gmail.com . #t)
                   (ring:1 . #t)
                   (web . #t)))
          (source . "github://github.com/greghendershott/aws/master")
          (tags . ("AWS" "web"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "4aaf88e448b3e57203f1a9b1f177218c5b5aa6c3")
                          (source
                           .
                           "github://github.com/greghendershott/aws/master")
                          (source_url
                           .
                           "http://github.com/greghendershott/aws/tree/master")))))))
 ("aws-cloudformation-deploy"
  .
  #hasheq((author . "michaelaarnold@gmail.com")
          (authors . ("michaelaarnold@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log
                  .
                  "server/built/fail/aws-cloudformation-deploy.txt")
                 (min-failure-log . #f)
                 (success-log . #f)
                 (test-failure-log . #f)
                 (test-success-log . #f)))
          (checksum . "00d1107fe8c08712d9011c9bb46d3f4ab9d0cc70")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ())
          (dependency-names . ())
          (description
           .
           "core AWS Cloudformation deployment scripting library")
          (implies . ())
          (last-checked . 1557339499)
          (last-edit . 1496699628)
          (last-updated . 1497036810)
          (modules
           .
           ((lib "aws-cloudformation-deploy/main.rkt")
            (lib "aws-cloudformation-deploy/test/test-core.rkt")
            (lib "aws-cloudformation-deploy/src/core.rkt")))
          (name . "aws-cloudformation-deploy")
          (nix-sha256
           .
           "0w30j4zz3lzb8r4qh45371z3p5rm7gfqpnk8n8h2cd434vvzq4yx")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-fail: . #t)
                   (author:michaelaarnold@gmail.com . #t)
                   (aws . #t)
                   (cloudformation . #t)
                   (deploy . #t)
                   (ring:1 . #t)
                   (script . #t)))
          (source . "git://github.com/cjdev/aws-cloudformation-deploy")
          (tags . ("aws" "cloudformation" "deploy" "script"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "00d1107fe8c08712d9011c9bb46d3f4ab9d0cc70")
                          (source
                           .
                           "git://github.com/cjdev/aws-cloudformation-deploy")
                          (source_url
                           .
                           "http://github.com/cjdev/aws-cloudformation-deploy/tree/master")))))))
 ("aws-cloudformation-template"
  .
  #hasheq((author . "lexi.lambda@gmail.com")
          (authors . ("lexi.lambda@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log
                  .
                  "server/built/fail/aws-cloudformation-template.txt")
                 (min-failure-log . #f)
                 (success-log . #f)
                 (test-failure-log . #f)
                 (test-success-log . #f)))
          (checksum . "00f52274a5bfc03f23c9dd511db0c87e35cf80e5")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("aws-cloudformation-template-doc"
            "aws-cloudformation-template-lib"))
          (dependency-names
           .
           ("aws-cloudformation-template-doc"
            "aws-cloudformation-template-lib"))
          (description
           .
           "statically typed DSL for writing AWS CloudFormation templates")
          (implies
           .
           ("aws-cloudformation-template-doc"
            "aws-cloudformation-template-lib"))
          (last-checked . 1557339499)
          (last-edit . 1485193291)
          (last-updated . 1502812276)
          (modules . ())
          (name . "aws-cloudformation-template")
          (nix-sha256
           .
           "0ndzv098xfx10a9dc1mp10kqwlhfngxj2i44nyrs0y4myz14wh0v")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-fail: . #t)
                   (:no-tag: . #t)
                   (author:lexi.lambda@gmail.com . #t)
                   (ring:1 . #t)))
          (source
           .
           "git://github.com/lexi-lambda/aws-cloudformation-template?path=aws-cloudformation-template")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "00f52274a5bfc03f23c9dd511db0c87e35cf80e5")
                          (source
                           .
                           "git://github.com/lexi-lambda/aws-cloudformation-template?path=aws-cloudformation-template")
                          (source_url
                           .
                           "http://github.com/lexi-lambda/aws-cloudformation-template/tree/master?path=aws-cloudformation-template")))))))
 ("aws-cloudformation-template-doc"
  .
  #hasheq((author . "lexi.lambda@gmail.com")
          (authors . ("lexi.lambda@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("none" "aws-cloudformation-template")))
                 (failure-log
                  .
                  "server/built/fail/aws-cloudformation-template-doc.txt")
                 (min-failure-log . #f)
                 (success-log . #f)
                 (test-failure-log . #f)
                 (test-success-log . #f)))
          (checksum . "00f52274a5bfc03f23c9dd511db0c87e35cf80e5")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("aws-cloudformation-template-lib"
            "base"
            "racket-doc"
            ("scribble-lib" #:version "1.16")
            "threading-lib"
            "turnstile"))
          (dependency-names
           .
           ("aws-cloudformation-template-lib"
            "base"
            "racket-doc"
            "scribble-lib"
            "threading-lib"
            "turnstile"))
          (description
           .
           "documentation (no implementation) for “aws-cloudformation-template”")
          (implies . ())
          (last-checked . 1557339499)
          (last-edit . 1485193282)
          (last-updated . 1502812276)
          (modules . ((lib "scribblings/aws/cloudformation/template.scrbl")))
          (name . "aws-cloudformation-template-doc")
          (nix-sha256
           .
           "0ndzv098xfx10a9dc1mp10kqwlhfngxj2i44nyrs0y4myz14wh0v")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-fail: . #t)
                   (:docs-error: . #t)
                   (:no-tag: . #t)
                   (author:lexi.lambda@gmail.com . #t)
                   (ring:1 . #t)))
          (source
           .
           "git://github.com/lexi-lambda/aws-cloudformation-template?path=aws-cloudformation-template-doc")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "00f52274a5bfc03f23c9dd511db0c87e35cf80e5")
                          (source
                           .
                           "git://github.com/lexi-lambda/aws-cloudformation-template?path=aws-cloudformation-template-doc")
                          (source_url
                           .
                           "http://github.com/lexi-lambda/aws-cloudformation-template/tree/master?path=aws-cloudformation-template-doc")))))))
 ("aws-cloudformation-template-lib"
  .
  #hasheq((author . "lexi.lambda@gmail.com")
          (authors . ("lexi.lambda@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log
                  .
                  "server/built/fail/aws-cloudformation-template-lib.txt")
                 (min-failure-log . #f)
                 (success-log . #f)
                 (test-failure-log . #f)
                 (test-success-log . #f)))
          (checksum . "00f52274a5bfc03f23c9dd511db0c87e35cf80e5")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "curly-fn-lib"
            "syntax-classes-lib"
            "threading-lib"
            "turnstile"))
          (dependency-names
           .
           ("base"
            "curly-fn-lib"
            "syntax-classes-lib"
            "threading-lib"
            "turnstile"))
          (description
           .
           "implementation (no documentation) for “aws-cloudformation-template”")
          (implies . ())
          (last-checked . 1557339499)
          (last-edit . 1485193257)
          (last-updated . 1502812276)
          (modules
           .
           ((lib "aws/cloudformation/template.rkt")
            (lib "aws/cloudformation/template/resources.rkt")
            (lib "aws/cloudformation/template/base.rkt")))
          (name . "aws-cloudformation-template-lib")
          (nix-sha256
           .
           "0ndzv098xfx10a9dc1mp10kqwlhfngxj2i44nyrs0y4myz14wh0v")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-fail: . #t)
                   (:no-tag: . #t)
                   (author:lexi.lambda@gmail.com . #t)
                   (ring:1 . #t)))
          (source
           .
           "git://github.com/lexi-lambda/aws-cloudformation-template?path=aws-cloudformation-template-lib")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "00f52274a5bfc03f23c9dd511db0c87e35cf80e5")
                          (source
                           .
                           "git://github.com/lexi-lambda/aws-cloudformation-template?path=aws-cloudformation-template-lib")
                          (source_url
                           .
                           "http://github.com/lexi-lambda/aws-cloudformation-template/tree/master?path=aws-cloudformation-template-lib")))))))
 ("axe"
  .
  #hasheq((author . "lotabout@gmail.com")
          (authors . ("lotabout@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "axe" "doc/axe@axe/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/axe.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/axe.txt")))
          (checksum . "234c2d1f6849f3719c3fc3c2354a4d257e53943b")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "collections"
            "rackunit-lib"
            "scribble-lib"
            "racket-doc"
            "scribble-code-examples"
            "scribble-doc"))
          (dependency-names
           .
           ("base"
            "collections"
            "rackunit-lib"
            "scribble-lib"
            "racket-doc"
            "scribble-code-examples"
            "scribble-doc"))
          (description . "Handy utilities(macros/functions) for racket")
          (implies . ())
          (last-checked . 1557339500)
          (last-edit . 1493200577)
          (last-updated . 1502812277)
          (modules
           .
           ((lib "axe/lang/reader.rkt")
            (lib "axe/app.rkt")
            (lib "axe/main.rkt")
            (lib "axe/test.rkt")
            (lib "axe/base/lang/reader-no-wrap.rkt")
            (lib "axe/base/lang/runtime-config.rkt")
            (lib "axe/scribblings/axe.scrbl")
            (lib "axe/threading.rkt")
            (lib "axe/escape.rkt")
            (lib "axe/base/lang/language-info.rkt")
            (lib "axe/lang/reader-no-wrap.rkt")
            (lib "axe/base/axe-reader.rkt")
            (lib "axe/conditionals.rkt")
            (lib "axe/base.rkt")
            (lib "axe/dict.rkt")
            (lib "axe/base/lang/reader.rkt")))
          (name . "axe")
          (nix-sha256
           .
           "1d5d37x79igyl3kcg1z88ip2mlpq4llmwwawg7qfa4zcr7h2gdrp")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:lotabout@gmail.com . #t)
                   (ring:1 . #t)
                   (utility . #t)))
          (source . "git://github.com/lotabout/axe")
          (tags . ("utility"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "234c2d1f6849f3719c3fc3c2354a4d257e53943b")
                          (source . "git://github.com/lotabout/axe")
                          (source_url
                           .
                           "http://github.com/lotabout/axe/tree/master")))))))
 ("backport-template-pr1514"
  .
  #hasheq((author . "georges.duperon@gmail.com")
          (authors . ("georges.duperon@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "backport-template-pr1514"
                    "doc/backport-template-pr1514@backport-template-pr1514/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log
                  .
                  "server/built/install/backport-template-pr1514.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/backport-template-pr1514.txt")))
          (checksum . "d7d74f5af236a26b38b94f59623b8b6e02b9e5ba")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base" "rackunit-lib" "version-case" "scribble-lib" "racket-doc"))
          (dependency-names
           .
           ("base" "rackunit-lib" "version-case" "scribble-lib" "racket-doc"))
          (description
           .
           "Backports syntax-local-template-metafunction-introduce as a package, so that it can be used in older versions. Require backport-template-pr1514/experimental/template instead of syntax/parse/experimental/template to use it.")
          (implies . ())
          (last-checked . 1557339500)
          (last-edit . 1500985887)
          (last-updated . 1556193760)
          (modules
           .
           ((lib
             "backport-template-pr1514/scribblings/backport-template-pr1514.scrbl")
            (lib "backport-template-pr1514/main.rkt")
            (lib "backport-template-pr1514/experimental/template.rkt")
            (lib "backport-template-pr1514/experimental/dset.rkt")
            (lib
             "backport-template-pr1514/experimental/private/substitute.rkt")))
          (name . "backport-template-pr1514")
          (nix-sha256
           .
           "0k9qrwx5ny398bszwvf1d7xgp1nxilwszmzaz0akawkv3852caxm")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:georges.duperon@gmail.com . #t)
                   (backport . #t)
                   (ring:1 . #t)
                   (syntax-parse . #t)))
          (source
           .
           "https://github.com/jsmaniac/backport-template-pr1514.git")
          (tags . ("backport" "syntax-parse"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "d7d74f5af236a26b38b94f59623b8b6e02b9e5ba")
                          (source
                           .
                           "https://github.com/jsmaniac/backport-template-pr1514.git")
                          (source_url
                           .
                           "https://github.com/jsmaniac/backport-template-pr1514.git")))))))
 ("base"
  .
  #hash((author . "mflatt@racket-lang.org")
        (checksum . "a406bc74d583ac7a61f651e5331bcfd0ecc1f73b")
        (dependencies . ("racket-lib" ("racket" #:version "7.1.0.11")))
        (dependency-names . ("racket-lib"))
        (description . "mflatt@racket-lang.org")
        (modules . ())
        (name . "base")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/base.zip")
        (tags . ())))
 ("base32"
  .
  #hasheq((author . "alex@fldcr.com")
          (authors . ("alex@fldcr.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "base32-manual"
                    "doc/base32-manual@base32/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/base32.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/base32.txt")))
          (checksum . "ea130f84dbac547d40f5bd27d1be53df811b4fd7")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base" "racket-doc" "rackunit" "sandbox-lib" "scribble-lib"))
          (dependency-names
           .
           ("base" "racket-doc" "rackunit" "sandbox-lib" "scribble-lib"))
          (description
           .
           "Provides encoding to and from Crockford's Base32 encoding.")
          (implies . ())
          (last-checked . 1557339500)
          (last-edit . 1546369301)
          (last-updated . 1547859410)
          (modules
           .
           ((lib "base32/main.rkt") (lib "base32/base32-manual.scrbl")))
          (name . "base32")
          (nix-sha256
           .
           "1n6m4nwj03640bg7rc0dyps54p82k1arnjxfxbgsqjkshsqprnki")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:alex@fldcr.com . #t)
                   (codec . #t)
                   (ring:2 . #t)))
          (source . "https://github.com/afldcr/racket-base32.git")
          (tags . ("codec"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "ea130f84dbac547d40f5bd27d1be53df811b4fd7")
                          (source
                           .
                           "https://github.com/afldcr/racket-base32.git")
                          (source_url
                           .
                           "https://github.com/afldcr/racket-base32.git")))
                 ("0.3"
                  .
                  #hasheq((checksum
                           .
                           "e941d3abaa9904ac2d13902e6e99845c89f7f7df")
                          (source
                           .
                           "https://github.com/afldcr/racket-base32.git#0.3")
                          (source_url
                           .
                           "https://github.com/afldcr/racket-base32.git#0.3")))))))
 ("basedir"
  .
  #hasheq((author . "willghatch@gmail.com")
          (authors . ("willghatch@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "basedir" "doc/basedir@basedir/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/basedir.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/basedir.txt")))
          (checksum . "722c06fb943f0a6e263cad057cedd80ea50e888d")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "scribble-lib" "racket-doc"))
          (dependency-names . ("base" "scribble-lib" "racket-doc"))
          (description . "XDG Basedir Spec library")
          (implies . ())
          (last-checked . 1557339500)
          (last-edit . 1459792631)
          (last-updated . 1544679646)
          (modules . ((lib "basedir/main.rkt") (lib "basedir/basedir.scrbl")))
          (name . "basedir")
          (nix-sha256
           .
           "0dkpdyvi9p2vxpna6jf88942875hm2di3z0h707hninbx7aymy97")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:willghatch@gmail.com . #t)
                   (configuration . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/willghatch/racket-basedir.git")
          (tags . ("configuration"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "722c06fb943f0a6e263cad057cedd80ea50e888d")
                          (source
                           .
                           "git://github.com/willghatch/racket-basedir.git")
                          (source_url
                           .
                           "http://github.com/willghatch/racket-basedir.git/tree/master")))))))
 ("bazaar"
  .
  #hasheq((author . "laurent.orseau@gmail.com")
          (authors . ("laurent.orseau@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/bazaar.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/bazaar.txt")))
          (checksum . "68f0d4cbb1084e6a98bcc40b9d0e4724b9244b48")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "data-lib"
            "draw-lib"
            "gui-lib"
            "images"
            "math-lib"
            "net-lib"
            "plot-gui-lib"
            "plot-lib"
            "racket-index"
            "rackunit-lib"
            "scribble-lib"
            "slideshow-lib"
            "srfi-lite-lib"))
          (dependency-names
           .
           ("base"
            "data-lib"
            "draw-lib"
            "gui-lib"
            "images"
            "math-lib"
            "net-lib"
            "plot-gui-lib"
            "plot-lib"
            "racket-index"
            "rackunit-lib"
            "scribble-lib"
            "slideshow-lib"
            "srfi-lite-lib"))
          (description
           .
           "A personal collection of useful definitions. Quite unstable.")
          (implies . ())
          (last-checked . 1557339501)
          (last-edit . 1427738557)
          (last-updated . 1556204600)
          (modules
           .
           ((lib "bazaar/struct.rkt")
            (lib "bazaar/net/smtp.rkt")
            (lib "bazaar/plot.rkt")
            (lib "bazaar/gui/board.rkt")
            (lib "bazaar/gui/list-box-sort.rkt")
            (lib "bazaar/slideshow/warsaw.rkt")
            (lib "bazaar/plot-param.rkt")
            (lib "bazaar/gui/rapid-gui.rkt")
            (lib "bazaar/mutation.rkt")
            (lib "bazaar/file.rkt")
            (lib "bazaar/time.rkt")
            (lib "bazaar/gui/examples/board-paint.rkt")
            (lib "bazaar/cond-let.rkt")
            (lib "bazaar/version.rkt")
            (lib "bazaar/roll-stack.rkt")
            (lib "bazaar/math.rkt")
            (lib "bazaar/values.rkt")
            (lib "bazaar/getter-setter.rkt")
            (lib "bazaar/gui/float-box.rkt")
            (lib "bazaar/vector.rkt")
            (lib "bazaar/scribble/compiler.rkt")
            (lib "bazaar/memoize.rkt")
            (lib "bazaar/slideshow/slideshow-utils.rkt")
            (lib "bazaar/gui/msg-error.rkt")
            (lib "bazaar/rvector.rkt")
            (lib "bazaar/information-theory.rkt")
            (lib "bazaar/rackunit.rkt")
            (lib "bazaar/slideshow/examples/slideshow-tree.rkt")
            (lib "bazaar/keyword.rkt")
            (lib "bazaar/net.rkt")
            (lib "bazaar/string.rkt")
            (lib "bazaar/gui/utils.rkt")
            (lib "bazaar/slideshow/slideshow-toc.rkt")
            (lib "bazaar/matrix.rkt")
            (lib "bazaar/slideshow/examples/slideshow-table.rkt")
            (lib "bazaar/loop.rkt")
            (lib "bazaar/base.rkt")
            (lib "bazaar/slideshow/interactive-style-maker.rkt")
            (lib "bazaar/slideshow/slideshow-table.rkt")
            (lib "bazaar/system.rkt")
            (lib "bazaar/list.rkt")
            (lib "bazaar/dict-list.rkt")
            (lib "bazaar/slideshow/examples/slideshow-toc.rkt")
            (lib "bazaar/tree.rkt")
            (lib "bazaar/bin-heap.rkt")
            (lib "bazaar/date.rkt")
            (lib "bazaar/clipboard.rkt")
            (lib "bazaar/text-table.rkt")
            (lib "bazaar/preferences.rkt")
            (lib "bazaar/gui/bitmaps.rkt")
            (lib "bazaar/draw/color.rkt")
            (lib "bazaar/define.rkt")
            (lib "bazaar/numeric-kind.rkt")
            (lib "bazaar/slideshow/slideshow-tree.rkt")
            (lib "bazaar/dict.rkt")
            (lib "bazaar/debug.rkt")))
          (name . "bazaar")
          (nix-sha256
           .
           "02csi4fbvav1vimz24pi4ky6ff2nqjpz5xb143c91phlgl8qxkyn")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:laurent.orseau@gmail.com . #t)
                   (dev . #t)
                   (ring:1 . #t)
                   (utility . #t)))
          (source . "github://github.com/Metaxal/bazaar/master")
          (tags . ("dev" "utility"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "68f0d4cbb1084e6a98bcc40b9d0e4724b9244b48")
                          (source
                           .
                           "github://github.com/Metaxal/bazaar/master")
                          (source_url
                           .
                           "http://github.com/Metaxal/bazaar/tree/master")))))))
 ("bcrypt"
  .
  #hasheq((author . "samth@ccs.neu.edu")
          (authors . ("samth@ccs.neu.edu"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . "server/built/min-fail/bcrypt.txt")
                 (success-log . "server/built/install/bcrypt.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/bcrypt.txt")))
          (checksum . "e5e3a92a52c22051a73c9a79e2b1c02629d63f3e")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "dynext-lib" "rackunit-lib"))
          (dependency-names . ("base" "dynext-lib" "rackunit-lib"))
          (description
           .
           "A Racket interface to the bcrypt key derivation function.")
          (implies . ())
          (last-checked . 1557339501)
          (last-edit . 1427073315)
          (last-updated . 1546574994)
          (modules
           .
           ((lib "bcrypt/main.rkt") (lib "bcrypt/private/install.rkt")))
          (name . "bcrypt")
          (nix-sha256
           .
           "010yjiqcp1x1j88f0ri8nlwr1m2p4dmir7gbn0h4zp4bv578d7lz")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:samth@ccs.neu.edu . #t)
                   (crypto . #t)
                   (ring:1 . #t)))
          (source . "github://github.com/samth/bcrypt.rkt/master/")
          (tags . ("crypto"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "e5e3a92a52c22051a73c9a79e2b1c02629d63f3e")
                          (source
                           .
                           "github://github.com/samth/bcrypt.rkt/master/")
                          (source_url
                           .
                           "http://github.com/samth/bcrypt.rkt/tree/master/")))))))
 ("beautiful-racket"
  .
  #hasheq((author . "mb@mbtype.com")
          (authors . ("mb@mbtype.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "br" "doc/br@beautiful-racket/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/beautiful-racket.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/beautiful-racket.txt")))
          (checksum . "52a91b7183932ce84be09b6ac0cc4480408d7715")
          (checksum-error . #f)
          (conflicts . ())
          (date-added . 1556661333)
          (dependencies
           .
           (("base" #:version "6.6.0.900")
            "beautiful-racket-lib"
            "beautiful-racket-demo"
            "gui-doc"
            "gui-lib"
            "at-exp-lib"
            "br-parser-tools-doc"
            "racket-doc"
            "scribble-lib"))
          (dependency-names
           .
           ("base"
            "beautiful-racket-lib"
            "beautiful-racket-demo"
            "gui-doc"
            "gui-lib"
            "at-exp-lib"
            "br-parser-tools-doc"
            "racket-doc"
            "scribble-lib"))
          (description . "Resources for the “Beautiful Racket” book")
          (implies . ("beautiful-racket-lib" "beautiful-racket-demo"))
          (last-checked . 1557339501)
          (last-edit . 1557065263)
          (last-updated . 1557166700)
          (modules . ((lib "br/scribblings/br.scrbl")))
          (name . "beautiful-racket")
          (nix-sha256
           .
           "1k7x642h7cib6kp7z7077jc7xis458jahp8sv51icdbrrqadlxym")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:mb@mbtype.com . #t)
                   (beautiful-racket . #t)
                   (ring:1 . #t)))
          (source
           .
           "https://github.com/mbutterick/beautiful-racket.git?path=beautiful-racket")
          (tags . ("beautiful-racket"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "52a91b7183932ce84be09b6ac0cc4480408d7715")
                          (source
                           .
                           "https://github.com/mbutterick/beautiful-racket.git?path=beautiful-racket")
                          (source_url
                           .
                           "https://github.com/mbutterick/beautiful-racket.git?path=beautiful-racket")))
                 ("6.3"
                  .
                  #hasheq((checksum
                           .
                           "90c45a7ed65f90b2dc3f7c4ef335eb8bfcd73c17")
                          (source
                           .
                           "https://github.com/mbutterick/beautiful-racket.git#v6.3-exception")
                          (source_url
                           .
                           "https://github.com/mbutterick/beautiful-racket.git#v6.3-exception")))))))
 ("beautiful-racket-demo"
  .
  #hasheq((author . "mb@mbtype.com")
          (authors . ("mb@mbtype.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log
                  .
                  "server/built/install/beautiful-racket-demo.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/beautiful-racket-demo.txt")))
          (checksum . "52a91b7183932ce84be09b6ac0cc4480408d7715")
          (checksum-error . #f)
          (conflicts . ())
          (date-added . 1556661341)
          (dependencies
           .
           (("base" #:version "6.6.0.900")
            "sugar"
            "beautiful-racket-lib"
            "rackunit-lib"
            "brag"
            "srfi-lib"
            "draw-lib"
            "syntax-color-lib"
            "gui-lib"
            "math-lib"
            "at-exp-lib"))
          (dependency-names
           .
           ("base"
            "sugar"
            "beautiful-racket-lib"
            "rackunit-lib"
            "brag"
            "srfi-lib"
            "draw-lib"
            "syntax-color-lib"
            "gui-lib"
            "math-lib"
            "at-exp-lib"))
          (description . "Sample projects for “Beautiful Racket”")
          (implies . ())
          (last-checked . 1557339501)
          (last-edit . 1556661341)
          (last-updated . 1557166701)
          (modules
           .
           ((lib "hdl-demo/DMux4Way-test.rkt")
            (lib "wires-demo/puzzle.rkt")
            (lib "jsonic-demo-2/parser.rkt")
            (lib "basic-demo-2/struct.rkt")
            (lib "regexcellent-demo/test.rkt")
            (lib "stackerizer-demo/test-sources.rkt")
            (lib "javascriptlike-demo/sexped.rkt")
            (lib "basic-demo-3/sample-gosub.rkt")
            (lib "funstacker-demo/funstacker-h2.rkt")
            (lib "hdl-demo/Or.tst.rkt")
            (lib "basic-demo-3/expander.rkt")
            (lib "basic-demo-3/go.rkt")
            (lib "basic-demo-2/private/sample-pseudocode.rkt")
            (lib "funstacker-demo/test-sources.rkt")
            (lib "basic-demo-2a/misc.rkt")
            (lib "hdl-demo/Dmux4Way.hdl.rkt")
            (lib "basic-demo-3/misc.rkt")
            (lib "basic-demo-2/expr.rkt")
            (lib "hdl-demo/DMux4Way.tst.rkt")
            (lib "regexcellent-demo/main.rkt")
            (lib "algebra-demo/test.rkt")
            (lib "hdl-demo/Not.tst.rkt")
            (lib "basic-demo-3/tokenizer.rkt")
            (lib "bf-demo/expander-slow.rkt")
            (lib "basic-demo/tokenizer.rkt")
            (lib "tacogram-demo/test.rkt")
            (lib "basic-demo/test-parser.rkt")
            (lib "basic-demo-2/sample-var.rkt")
            (lib "chip8-demo/chip8.rkt")
            (lib "algebra-demo/grammar.rkt")
            (lib "bf-demo/atsign.rkt")
            (lib "jsonic-demo/expander.rkt")
            (lib "javascriptlike-demo/test.rkt")
            (lib "bf-demo/test-parser.rkt")
            (lib "basic-demo-2/parser.rkt")
            (lib "taco-decompiler-demo/main.rkt")
            (lib "basic-demo-3/sample-math.rkt")
            (lib "javascriptlike-demo/rackety.rkt")
            (lib "taco-compiler-demo/test.rkt")
            (lib "funstacker-demo/funstacker.rkt")
            (lib "hdl-demo/Dmux.tst.rkt")
            (lib "pythonesque-demo/main.rkt")
            (lib "hdl-demo/grammar.rkt")
            (lib "jsonic-demo-3/jsonic-test.rkt")
            (lib "basic-demo/parse-only.rkt")
            (lib "basic-demo-3/sample-shell.rkt")
            (lib "pl-checklist-demo/main.rkt")
            (lib "txtadv-demo/world-test.rkt")
            (lib "txtadv-demo/5-lang/txtadv-reader.rkt")
            (lib "basic-demo-2/sample.rkt")
            (lib "txtadv-demo/6-color/reader.rkt")
            (lib "basic-demo/private/sample-pseudocode.rkt")
            (lib "bf-demo/main.rkt")
            (lib "bf-demo/parser-tester.rkt")
            (lib "jsonic-demo-3/reader.rkt")
            (lib "basic-demo-nth/basic-test.rkt")
            (lib "quantum-taco-demo/main.rkt")
            (lib "stacker-demo/stacker-test.rkt")
            (lib "stackerizer-demo/stackerizer-test.rkt")
            (lib "hdl-demo/Nand.tst.rkt")
            (lib "basic-demo-2/main.rkt")
            (lib "txtadv-demo/2-modules/txtadv.rkt")
            (lib "bf-demo/expander-imperative.rkt")
            (lib "basic-demo-2a/expr.rkt")
            (lib "tacopocalypse-demo/test.rkt")
            (lib "basic-demo-2/colorer.rkt")
            (lib "basic-demo-2a/tokenizer.rkt")
            (lib "hdl-demo/Mux.tst.rkt")
            (lib "basic-demo-3/main.rkt")
            (lib "basic-demo-2/test-sources.rkt")
            (lib "hdl-demo/Nand.hdl.rkt")
            (lib "basic-demo-3/report-args.rkt")
            (lib "basic-demo-2/sample-for.rkt")
            (lib "txtadv-demo/2-modules/world.rkt")
            (lib "jsonic-demo-3/colorer.rkt")
            (lib "passthrough-demo/main.rkt")
            (lib "hdl-demo/Toffoli.hdl.rkt")
            (lib "basic-demo/test-sources.rkt")
            (lib "basic-demo-3/sample-input.rkt")
            (lib "txtadv-demo/1-monolith/txtadv+world.rkt")
            (lib "txtadv-demo/5-lang/txtadv.rkt")
            (lib "hdl-demo/Fanout.hdl.rkt")
            (lib "basic-demo-2/sample-gosub.rkt")
            (lib "jsonic-demo-2/tokenizer.rkt")
            (lib "javascriptlike-demo/main.rkt")
            (lib "bf-demo/parser.rkt")
            (lib "jsonic-demo-3/parser-test.rkt")
            (lib "basic-demo-2/line.rkt")
            (lib "basic-demo-nth/colorer.rkt")
            (lib "hdl-demo/HalfAdder.tst.rkt")
            (lib "xmlish-demo/grammar.rkt")
            (lib "basic-demo-3/run.rkt")
            (lib "hdl-demo/main.rkt")
            (lib "basic-demo-2a/parser.rkt")
            (lib "jsonic-demo-3/expander.rkt")
            (lib "txtadv-demo/3-module-lang/world.rkt")
            (lib "jsonic-demo-3/tokenizer.rkt")
            (lib "basic-demo-3/parser.rkt")
            (lib "basic-demo-3/args.rkt")
            (lib "jsonic-demo-3/parser.rkt")
            (lib "basic-demo-3/private/sample-pseudocode.rkt")
            (lib "basic-demo-2/sample-math.rkt")
            (lib "basic-demo-2a/elements.rkt")
            (lib "jsonic-demo-2/parser-test.rkt")
            (lib "basic-demo/parse-stx.rkt")
            (lib "basic-demo-2a/lexer.rkt")
            (lib "taco-victory-demo/test.rkt")
            (lib "txtadv-demo/tokenizer.rkt")
            (lib "precalc-demo/grammar.rkt")
            (lib "basic-demo-3/sample-for.rkt")
            (lib "basic-demo-nth/main.rkt")
            (lib "basic-demo/lexer.rkt")
            (lib "basic-demo-2a/expander.rkt")
            (lib "tacogram-demo/grammar.rkt")
            (lib "jsonic-demo-2/expander.rkt")
            (lib "jsonic-demo/parser.rkt")
            (lib "basic-demo-2/sample-input.rkt")
            (lib "jsonic-demo/tokenizer.rkt")
            (lib "txtadv-demo/6-color/txtadv.rkt")
            (lib "basic-demo-3/test-sources.rkt")
            (lib "regexcellent-demo/grammar.rkt")
            (lib "pythonesque-demo/grammar.rkt")
            (lib "xmlish-demo/test.rkt")
            (lib "jsonic-demo/jsonic-test.rkt")
            (lib "basic-demo-2/cond.rkt")
            (lib "hdl-demo/HalfAdder.hdl.rkt")
            (lib "txtadv-demo/0-longhand/txtadv+world.rkt")
            (lib "txtadv-demo/4-type/world.rkt")
            (lib "txtadv-demo/expander.rkt")
            (lib "passthrough-demo/test.rkt")
            (lib "basic-demo-2/lexer.rkt")
            (lib "jsonic-demo/test-sources.rkt")
            (lib "basic-demo-3/line.rkt")
            (lib "jsonic-demo-3/scribblings/jsonic.scrbl")
            (lib "basic-demo-nth/importest.rkt")
            (lib "bf-demo/test-sources.rkt")
            (lib "pl-checklist-demo/test.rkt")
            (lib "stacker-demo/stacker.rkt")
            (lib "hdl-demo/Or.hdl.rkt")
            (lib "funstacker-demo/funstacker-test.rkt")
            (lib "basic-demo-2a/struct.rkt")
            (lib "basic-demo-3/sample.rkt")
            (lib "txtadv-demo/4-type/txtadv.rkt")
            (lib "wires-demo/main.rkt")
            (lib "hdl-demo/Xor.hdl.rkt")
            (lib "xmlish-demo/main.rkt")
            (lib "hdl-demo/Mux-test.rkt")
            (lib "txtadv-demo/world-sexp.rkt")
            (lib "basic-demo-3/sample-importer.rkt")
            (lib "basic-demo-3/parse-stx.rkt")
            (lib "bf-demo/hello.rkt")
            (lib "tacopocalypse-demo/main.rkt")
            (lib "basic-demo-3/sample-provide.rkt")
            (lib "basic-demo-3/tokenize-only.rkt")
            (lib "atomic-taco-demo/test.rkt")
            (lib "basic-demo/main.rkt")
            (lib "taco-compiler-demo/main.rkt")
            (lib "wires-demo/test.rkt")
            (lib "basic-demo-2/tokenizer.rkt")
            (lib "bf-demo/test-reader.rkt")
            (lib "tacogram-demo/main.rkt")
            (lib "hdl-demo/Nand2.hdl.rkt")
            (lib "basic-demo-2/parse-only.rkt")
            (lib "txtadv-demo/6-color/color.rkt")
            (lib "basic-demo-3/parse-only.rkt")
            (lib "bf-demo/atsign-sexp.rkt")
            (lib "basic-demo-3/sample-import.rkt")
            (lib "bf-demo/expander.rkt")
            (lib "bf-demo/test-tokenizer.rkt")
            (lib "hdl-demo/Dmux-test.rkt")
            (lib "pythonesque-demo/test.rkt")
            (lib "basic-demo-nth/parser.rkt")
            (lib "wires-demo/with-promises.rkt")
            (lib "javascriptlike-demo/expander.rkt")
            (lib "jsonic-demo-3/test-sources.rkt")
            (lib "stacker-demo/test-sources.rkt")
            (lib "wires-demo/test-sources.rkt")
            (lib "basic-demo-2/parse-stx.rkt")
            (lib "bf-demo/reader.rkt")
            (lib "basic-demo-2a/test-sources.rkt")
            (lib "hdl-demo/And.tst.rkt")
            (lib "txtadv-demo/reader.rkt")
            (lib "javascriptlike-demo/less-rackety.rkt")
            (lib "basic-demo-2/elements.rkt")
            (lib "quantum-taco-demo/test.rkt")
            (lib "basic-demo-3/cond.rkt")
            (lib "stackerizer-demo/stackerizer.rkt")
            (lib "txtadv-demo/5-lang/world.rkt")
            (lib "basic-demo-2/misc.rkt")
            (lib "hdl-demo/Mux.hdl.rkt")
            (lib "basic-demo/lexer-test.rkt")
            (lib "taco-victory-demo/main.rkt")
            (lib "jsonic-demo-2/reader.rkt")
            (lib "jsonic-demo-2/buttons.rkt")
            (lib "jsonic-demo-3/indenter.rkt")
            (lib "basic-demo-3/structs.rkt")
            (lib "atomic-taco-demo/main.rkt")
            (lib "hdl-tst-demo/grammar.rkt")
            (lib "basic-demo-2a/main.rkt")
            (lib "basic-demo-3/sample-def.rkt")
            (lib "jsonic-demo-2/test-sources.rkt")
            (lib "precalc-demo/main.rkt")
            (lib "basic-demo-2/expander.rkt")
            (lib "hdl-demo/bus-properties.rkt")
            (lib "txtadv-demo/6-color/world.rkt")
            (lib "jsonic-demo/reader.rkt")
            (lib "pl-checklist-lang-maker/main.rkt")
            (lib "jsonic-demo-2/colorer.rkt")
            (lib "basic-demo-3/lexer.rkt")
            (lib "basic-demo-3/elements.rkt")
            (lib "txtadv-demo/world.rkt")
            (lib "hdl-demo/bus.rkt")
            (lib "basic-demo/expander.rkt")
            (lib "basic-demo-3/colorer.rkt")
            (lib "basic-demo-3/sample-cond.rkt")
            (lib "basic-demo-2a/run.rkt")
            (lib "precalc-demo/test.rkt")
            (lib "basic-demo/sample.rkt")
            (lib "txtadv-demo/parser.rkt")
            (lib "hdl-demo/DMux.hdl.rkt")
            (lib "javascriptlike-demo/grammar.rkt")
            (lib "tacopocalypse-prep/test.rkt")
            (lib "hdl-tst-demo/expander.rkt")
            (lib "basic-demo-2/sample-cond.rkt")
            (lib "jsonic-demo-2/jsonic-test.rkt")
            (lib "basic-demo-2a/sample.rkt")
            (lib "basic-demo-3/expr.rkt")
            (lib "jsonic-demo/main.rkt")
            (lib "basic-demo-nth/tokenizer.rkt")
            (lib "basic-demo-nth/expander.rkt")
            (lib "taco-decompiler-demo/run.rkt")
            (lib "basic-demo-2a/go.rkt")
            (lib "hdl-tst-demo/main.rkt")
            (lib "jsonic-demo-3/main.rkt")
            (lib "jsonic-demo-2/indenter.rkt")
            (lib "algebra-demo/main.rkt")
            (lib "basic-demo-2/run.rkt")
            (lib "jsonic-demo-3/buttons.rkt")
            (lib "hdl-demo/And.hdl.rkt")
            (lib "basic-demo-2/go.rkt")
            (lib "hdl-demo/Xor.tst.rkt")
            (lib "basic-demo-3/struct.rkt")
            (lib "bf-demo/factorial.rkt")
            (lib "hdl-demo/Not.hdl.rkt")
            (lib "taco-victory-demo/grammar.rkt")
            (lib "basic-demo-2a/line.rkt")
            (lib "hdl-demo/expander.rkt")
            (lib "basic-demo/parser.rkt")
            (lib "basic-demo/tokenize-only.rkt")
            (lib "basic-demo-3/setup.rkt")
            (lib "basic-demo-3/sample-exporter.rkt")
            (lib "taco-decompiler-demo/test.rkt")
            (lib "tacopocalypse-prep/main.rkt")
            (lib "jsonic-demo-2/main.rkt")
            (lib "txtadv-demo/3-module-lang/txtadv.rkt")))
          (name . "beautiful-racket-demo")
          (nix-sha256
           .
           "1k7x642h7cib6kp7z7077jc7xis458jahp8sv51icdbrrqadlxym")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:mb@mbtype.com . #t)
                   (beautiful-racket . #t)
                   (ring:1 . #t)))
          (source
           .
           "https://github.com/mbutterick/beautiful-racket.git?path=beautiful-racket-demo")
          (tags . ("beautiful-racket"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "52a91b7183932ce84be09b6ac0cc4480408d7715")
                          (source
                           .
                           "https://github.com/mbutterick/beautiful-racket.git?path=beautiful-racket-demo")
                          (source_url
                           .
                           "https://github.com/mbutterick/beautiful-racket.git?path=beautiful-racket-demo")))))))
 ("beautiful-racket-lib"
  .
  #hasheq((author . "mb@mbtype.com")
          (authors . ("mb@mbtype.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log
                  .
                  "server/built/install/beautiful-racket-lib.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/beautiful-racket-lib.txt")))
          (checksum . "52a91b7183932ce84be09b6ac0cc4480408d7715")
          (checksum-error . #f)
          (conflicts . ())
          (date-added . 1556661348)
          (dependencies
           .
           (("base" #:version "6.6.0.900")
            "at-exp-lib"
            "sugar"
            "debug"
            "rackunit-lib"
            "gui-lib"
            "draw-lib"))
          (dependency-names
           .
           ("base"
            "at-exp-lib"
            "sugar"
            "debug"
            "rackunit-lib"
            "gui-lib"
            "draw-lib"))
          (description . "support library for `beautiful-racket`")
          (implies . ())
          (last-checked . 1557339501)
          (last-edit . 1556661348)
          (last-updated . 1557166702)
          (modules
           .
           ((lib "br/module.rkt")
            (lib "br/define.rkt")
            (lib "br/private/generate-literals.rkt")
            (lib "br/private/syntax-flatten.rkt")
            (lib "br/list.rkt")
            (lib "br/syntax.rkt")
            (lib "br/main.rkt")
            (lib "br/indent.rkt")
            (lib "br/cond.rkt")
            (lib "br/reader-utils.rkt")
            (lib "br/datum.rkt")
            (lib "br/quicklang.rkt")
            (lib "br/test.rkt")
            (lib "br/verbose-app.rkt")
            (lib "br/get-info.rkt")
            (lib "br/debug.rkt")))
          (name . "beautiful-racket-lib")
          (nix-sha256
           .
           "1k7x642h7cib6kp7z7077jc7xis458jahp8sv51icdbrrqadlxym")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:mb@mbtype.com . #t)
                   (beautiful-racket . #t)
                   (ring:1 . #t)))
          (source
           .
           "https://github.com/mbutterick/beautiful-racket.git?path=beautiful-racket-lib")
          (tags . ("beautiful-racket"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "52a91b7183932ce84be09b6ac0cc4480408d7715")
                          (source
                           .
                           "https://github.com/mbutterick/beautiful-racket.git?path=beautiful-racket-lib")
                          (source_url
                           .
                           "https://github.com/mbutterick/beautiful-racket.git?path=beautiful-racket-lib")))))))
 ("behavior"
  .
  #hasheq((author . "johnstonskj@gmail.com")
          (authors . ("johnstonskj@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "behavior" "doc/behavior@behavior/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/behavior.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/behavior.txt")))
          (checksum . "72103db75c07d52d9027b34f0960532e235f9c10")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "rackunit-lib"
            "racket-index"
            "scribble-lib"
            "scribble-math"
            "racket-doc"
            "sandbox-lib"
            "cover-coveralls"))
          (dependency-names
           .
           ("base"
            "rackunit-lib"
            "racket-index"
            "scribble-lib"
            "scribble-math"
            "racket-doc"
            "sandbox-lib"
            "cover-coveralls"))
          (description
           .
           "This package introduces a set of modeling techniques for exploring behavior in software systems.\r\nModels such as state machines and Petri nets can be used to model the behavior of a system, and\r\nMarkov chains are used to generate events to help in the simulation of systems.")
          (implies . ())
          (last-checked . 1557339501)
          (last-edit . 1538495265)
          (last-updated . 1550530142)
          (modules
           .
           ((lib "behavior/scribblings/behavior.scrbl")
            (lib "behavior/test/markov-chain.rkt")
            (lib "behavior/reporter.rkt")
            (lib "behavior/fsm.rkt")
            (lib "behavior/test/scribblings.rkt")
            (lib "behavior/petri-net.rkt")
            (lib "behavior/markov-chain.rkt")
            (lib "behavior/test/utilities.rkt")
            (lib "behavior/test/petri-net.rkt")
            (lib "behavior/test/fsm.rkt")))
          (name . "behavior")
          (nix-sha256
           .
           "0mljbcsj8qa4vc2cr7i3274v7g7jihjadwfkld5h8fgs1h8hrgfs")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:johnstonskj@gmail.com . #t)
                   (markov-chain . #t)
                   (petri-net . #t)
                   (ring:2 . #t)
                   (state-machine . #t)))
          (source . "https://github.com/johnstonskj/behavior.git")
          (tags . ("markov-chain" "petri-net" "state-machine"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "72103db75c07d52d9027b34f0960532e235f9c10")
                          (source
                           .
                           "https://github.com/johnstonskj/behavior.git")
                          (source_url
                           .
                           "https://github.com/johnstonskj/behavior.git")))))))
 ("benchmark"
  .
  #hasheq((author . "stamourv@racket-lang.org")
          (authors . ("stamourv@racket-lang.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "benchmark" "doc/benchmark@benchmark/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/benchmark.txt")
                 (test-failure-log . "server/built/test-fail/benchmark.txt")
                 (test-success-log . #f)))
          (checksum . "6a01a753d91a1b2d5ae1e1582deaf6cf790e47f3")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "math-lib"
            "plot-gui-lib"
            "plot-lib"
            "typed-racket-lib"
            "plot-doc"
            "racket-doc"
            "rackunit-lib"
            "scribble-lib"))
          (dependency-names
           .
           ("base"
            "math-lib"
            "plot-gui-lib"
            "plot-lib"
            "typed-racket-lib"
            "plot-doc"
            "racket-doc"
            "rackunit-lib"
            "scribble-lib"))
          (description . "Benchmarking library")
          (implies . ())
          (last-checked . 1557339501)
          (last-edit . 1398970069)
          (last-updated . 1537376105)
          (modules
           .
           ((lib "benchmark/examples/scribble-example2.rkt")
            (lib "benchmark/examples/external/collatz1000.rkt")
            (lib "benchmark/plot.rkt")
            (lib "benchmark/examples/scribble-example1.rkt")
            (lib "benchmark/scribblings/benchmark.scrbl")
            (lib "benchmark/examples/macro-examples/fib.rkt")
            (lib "benchmark/examples/sleep-racket-time.rkt")
            (lib "benchmark/examples/sleep-delta.rkt")
            (lib "benchmark/results.rkt")
            (lib "benchmark/bootstrap-ci.rkt")
            (lib "benchmark/types.rkt")
            (lib "benchmark/main.rkt")
            (lib "benchmark/examples/external/fib5.rkt")
            (lib "benchmark/examples/external/fib20.rkt")
            (lib "benchmark/macro.rkt")
            (lib "benchmark/examples/sleep.rkt")
            (lib "benchmark/examples/incremental-record.rkt")
            (lib "benchmark/examples/macro-examples/collatz.rkt")))
          (name . "benchmark")
          (nix-sha256
           .
           "107w8mahv5xbi6pgcag0nkkcq8f4p6wwqjjzx3p79v782kqp8789")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:stamourv@racket-lang.org . #t)
                   (performance . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/stamourv/racket-benchmark#master")
          (tags . ("performance"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "6a01a753d91a1b2d5ae1e1582deaf6cf790e47f3")
                          (source
                           .
                           "git://github.com/stamourv/racket-benchmark#master")
                          (source_url
                           .
                           "http://github.com/stamourv/racket-benchmark/tree/master#master")))
                 ("6.2"
                  .
                  #hasheq((checksum
                           .
                           "757898302572e930bf8be254361e226dbda75af5")
                          (source
                           .
                           "github://github.com/stamourv/racket-benchmark/racket-6.2")
                          (source_url
                           .
                           "http://github.com/stamourv/racket-benchmark/tree/racket-6.2")))
                 ("6.3"
                  .
                  #hasheq((checksum
                           .
                           "679dac464f413f617e9654262d28534088057dba")
                          (source
                           .
                           "github://github.com/stamourv/racket-benchmark/racket-6.3")
                          (source_url
                           .
                           "http://github.com/stamourv/racket-benchmark/tree/racket-6.3")))))))
 ("benchmark-ips"
  .
  #hasheq((author . "zenspider@gmail.com")
          (authors . ("zenspider@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . "server/built/deps/benchmark-ips.txt")
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/benchmark-ips.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/benchmark-ips.txt")))
          (checksum . "54b5560c4ca0f0100fe60fb965c23254e3e47e9c")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base" "rackunit-lib" "racket-doc" "scribble-lib" "racket-doc"))
          (dependency-names
           .
           ("base" "rackunit-lib" "racket-doc" "scribble-lib" "racket-doc"))
          (description
           .
           "This is my port of @evanphx's benchmark-ips for ruby to racket. Provides a very simple and clean way to do performance comparisons.")
          (implies . ())
          (last-checked . 1557339501)
          (last-edit . 1502757581)
          (last-updated . 1502757581)
          (modules
           .
           ((lib "benchmark-ips/main.rkt")
            (lib "benchmark-ips/benchmark-ips.rkt")))
          (name . "benchmark-ips")
          (nix-sha256
           .
           "0n4ql43gpwkh5bh9cisqrjrv3ryaynwibly2bw9sl3jvxrbpj5b8")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-dep-fail: . #t)
                   (:build-success: . #t)
                   (author:zenspider@gmail.com . #t)
                   (benchmarking . #t)
                   (performance . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/zenspider/benchmark-ips-racket")
          (tags . ("benchmarking" "performance"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "54b5560c4ca0f0100fe60fb965c23254e3e47e9c")
                          (source
                           .
                           "git://github.com/zenspider/benchmark-ips-racket")
                          (source_url
                           .
                           "http://github.com/zenspider/benchmark-ips-racket/tree/master")))))))
 ("bencode"
  .
  #hasheq((author . "neil@neilvandyke.org")
          (authors . ("neil@neilvandyke.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "bencode" "doc/bencode@bencode/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/bencode.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/bencode.txt")))
          (checksum . "676a8979ef85eefd1373c2afb91649a22ae98c93")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base" "mcfly" "racket-doc" "scribble-lib" "overeasy"))
          (dependency-names
           .
           ("base" "mcfly" "racket-doc" "scribble-lib" "overeasy"))
          (description . "BitTorrent Bencode Decoding")
          (implies . ())
          (last-checked . 1557339501)
          (last-edit . 1456638265)
          (last-updated . 1502812280)
          (modules . ((lib "bencode/bencode.scrbl") (lib "bencode/main.rkt")))
          (name . "bencode")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:neil@neilvandyke.org . #t)
                   (bittorrent . #t)
                   (ring:1 . #t)))
          (source . "http://www.neilvandyke.org/racket/bencode.zip")
          (tags . ("bittorrent"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "676a8979ef85eefd1373c2afb91649a22ae98c93")
                          (source
                           .
                           "http://www.neilvandyke.org/racket/bencode.zip")
                          (source_url
                           .
                           "http://www.neilvandyke.org/racket/bencode.zip")))))))
 ("bencode-codec"
  .
  #hasheq((author . "tonygarnockjones@gmail.com")
          (authors . ("tonygarnockjones@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "bencode-codec"
                    "doc/bencode-codec@bencode-codec/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/bencode-codec.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/bencode-codec.txt")))
          (checksum . "cf4161c67e0a6f3f25fa162b9f61a3460b4ce445")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "rackunit-lib" "racket-doc" "scribble-lib"))
          (dependency-names
           .
           ("base" "rackunit-lib" "racket-doc" "scribble-lib"))
          (description . "Library for reading and writing Bencoded data.")
          (implies . ())
          (last-checked . 1557339502)
          (last-edit . 1471272645)
          (last-updated . 1520538802)
          (modules
           .
           ((lib "bencode-codec/bencode-codec.scrbl")
            (lib "bencode-codec/test-bencode.rkt")
            (lib "bencode-codec/dump.rkt")
            (lib "bencode-codec/bencode.rkt")
            (lib "bencode-codec/main.rkt")))
          (name . "bencode-codec")
          (nix-sha256
           .
           "0279xv1w5sg148jrpy6a6p4gk0b044k1sjl4iwhcwc85gprc6942")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:tonygarnockjones@gmail.com . #t)
                   (net . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/tonyg/racket-bencode")
          (tags . ("net"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "cf4161c67e0a6f3f25fa162b9f61a3460b4ce445")
                          (source . "git://github.com/tonyg/racket-bencode")
                          (source_url
                           .
                           "http://github.com/tonyg/racket-bencode/tree/master")))))))
 ("berkeley"
  .
  #hasheq((author . "guoguo12@gmail.com")
          (authors . ("guoguo12@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . "server/built/fail/berkeley.txt")
                 (min-failure-log . #f)
                 (success-log . #f)
                 (test-failure-log . #f)
                 (test-success-log . #f)))
          (checksum . "8c9c56d99d9f157a84d94d887143340246da9d73")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ())
          (dependency-names . ())
          (description
           .
           "Support library for CS 61AS at UC Berkeley (http://cs61as.org).")
          (implies . ())
          (last-checked . 1557339502)
          (last-edit . 1445417306)
          (last-updated . 1453297984)
          (modules . ((lib "berkeley/main.rkt")))
          (name . "berkeley")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-fail: . #t)
                   (:no-tag: . #t)
                   (author:guoguo12@gmail.com . #t)
                   (ring:1 . #t)))
          (source
           .
           "http://inst.eecs.berkeley.edu/~cs61as/library/berkeley.zip")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "8c9c56d99d9f157a84d94d887143340246da9d73")
                          (source
                           .
                           "http://inst.eecs.berkeley.edu/~cs61as/library/berkeley.zip")
                          (source_url
                           .
                           "http://inst.eecs.berkeley.edu/~cs61as/library/berkeley.zip")))))))
 ("binary-class"
  .
  #hasheq((author . "kalimehtar@mail.ru")
          (authors . ("kalimehtar@mail.ru"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "binary-class"
                    "doc/binary-class@binary-class/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/binary-class.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/binary-class.txt")))
          (checksum . "69705ed306be38c9e4dd67d9075ec160ecdb82a4")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "rackunit-lib" "scribble-lib" "racket-doc"))
          (dependency-names
           .
           ("base" "rackunit-lib" "scribble-lib" "racket-doc"))
          (description . "Classes for writing and reading binary data")
          (implies . ())
          (last-checked . 1557339503)
          (last-edit . 1407001953)
          (last-updated . 1502812281)
          (modules
           .
           ((lib "binary-class/manual.scrbl")
            (lib "binary-class/private/base.rkt")
            (lib "binary-class/string.rkt")
            (lib "binary-class/main.rkt")
            (lib "binary-class/base.rkt")
            (lib "binary-class/syntax.rkt")
            (lib "binary-class/common.rkt")
            (lib "binary-class/contract.rkt")))
          (name . "binary-class")
          (nix-sha256
           .
           "0h3xa9i973ka4ilkr82ifa9dgmsrkv747bk74x56gl6km3r7lmyk")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:kalimehtar@mail.ru . #t)
                   (io . #t)
                   (parser . #t)
                   (parsing . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/Kalimehtar/binary-class")
          (tags . ("io" "parser" "parsing"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "69705ed306be38c9e4dd67d9075ec160ecdb82a4")
                          (source
                           .
                           "git://github.com/Kalimehtar/binary-class")
                          (source_url
                           .
                           "http://github.com/Kalimehtar/binary-class/tree/master")))))))
 ("binary-class-dbf"
  .
  #hasheq((author . "kalimehtar@mail.ru")
          (authors . ("kalimehtar@mail.ru"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/binary-class-dbf.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/binary-class-dbf.txt")))
          (checksum . "751ed1b7e44f6894d7bdc468727bfc854677338b")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("binary-class" "base" "fast-convert"))
          (dependency-names . ("binary-class" "base" "fast-convert"))
          (description . "Interface to *.dbf files (dBase, Foxpro, ...)")
          (implies . ())
          (last-checked . 1557339503)
          (last-edit . 1404276243)
          (last-updated . 1502812281)
          (modules
           .
           ((lib "binary-class/dbf.scrbl") (lib "binary-class/dbf.rkt")))
          (name . "binary-class-dbf")
          (nix-sha256
           .
           "1v2jwzcivxx8kq2s6m87i01grjr1s1lf9rw1zj3ys0ff5fdr1v4r")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:kalimehtar@mail.ru . #t)
                   (db . #t)
                   (io . #t)
                   (parser . #t)
                   (parsing . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/Kalimehtar/binary-class-dbf")
          (tags . ("db" "io" "parser" "parsing"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "751ed1b7e44f6894d7bdc468727bfc854677338b")
                          (source
                           .
                           "git://github.com/Kalimehtar/binary-class-dbf")
                          (source_url
                           .
                           "http://github.com/Kalimehtar/binary-class-dbf/tree/master")))))))
 ("binary-class-exif"
  .
  #hasheq((author . "kalimehtar@mail.ru")
          (authors . ("kalimehtar@mail.ru"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/binary-class-exif.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/binary-class-exif.txt")))
          (checksum . "8d475c4dd72de90decedeb3fc0acd53d9cf6f60d")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("binary-class" "base"))
          (dependency-names . ("binary-class" "base"))
          (description . "Class for reading and writing Exif in JPEG or TIFF")
          (implies . ())
          (last-checked . 1557339503)
          (last-edit . 1404281488)
          (last-updated . 1502812282)
          (modules . ((lib "binary-class/exif.rkt")))
          (name . "binary-class-exif")
          (nix-sha256
           .
           "13r62npg6j82zzdc6zs45a9hfmnirnjkmv26qvqfzjkij17gzcfp")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:kalimehtar@mail.ru . #t)
                   (io . #t)
                   (parser . #t)
                   (parsing . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/Kalimehtar/binary-class-exif")
          (tags . ("io" "parser" "parsing"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "8d475c4dd72de90decedeb3fc0acd53d9cf6f60d")
                          (source
                           .
                           "git://github.com/Kalimehtar/binary-class-exif")
                          (source_url
                           .
                           "http://github.com/Kalimehtar/binary-class-exif/tree/master")))))))
 ("binary-class-mp3"
  .
  #hasheq((author . "kalimehtar@mail.ru")
          (authors . ("kalimehtar@mail.ru"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "binary-class-mp3"
                    "doc/binary-class-mp3@binary-class-mp3/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/binary-class-mp3.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/binary-class-mp3.txt")))
          (checksum . "bc10152d1bc6cd1ed7be7bec0e8d3f1ae0bf7977")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("binary-class" "base" "scribble-lib" "racket-doc"))
          (dependency-names
           .
           ("binary-class" "base" "scribble-lib" "racket-doc"))
          (description . "MP3 ID3v2.1 and ID3v2.2 tags parser")
          (implies . ())
          (last-checked . 1557339503)
          (last-edit . 1402276385)
          (last-updated . 1502812282)
          (modules
           .
           ((lib "binary-class/manual-mp3.scrbl")
            (lib "binary-class/mp3.rkt")))
          (name . "binary-class-mp3")
          (nix-sha256
           .
           "17k16f9q6dyaw7lfp9mkasj0gc6mrblp8z0464im4jlhn102b3pa")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:kalimehtar@mail.ru . #t)
                   (io . #t)
                   (parser . #t)
                   (parsing . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/Kalimehtar/binary-class-mp3")
          (tags . ("io" "parser" "parsing"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "bc10152d1bc6cd1ed7be7bec0e8d3f1ae0bf7977")
                          (source
                           .
                           "git://github.com/Kalimehtar/binary-class-mp3")
                          (source_url
                           .
                           "http://github.com/Kalimehtar/binary-class-mp3/tree/master")))))))
 ("binary-class-riff"
  .
  #hasheq((author . "leo@lwh.jp")
          (authors . ("leo@lwh.jp"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "binary-class-riff"
                    "doc/binary-class-riff@binary-class-riff/index.html")
                   ("main"
                    "binary-class-wave"
                    "doc/binary-class-wave@binary-class-riff/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/binary-class-riff.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/binary-class-riff.txt")))
          (checksum . "2062f82382eed570b502a935f740621d3971d527")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "binary-class" "racket-doc" "scribble-lib"))
          (dependency-names
           .
           ("base" "binary-class" "racket-doc" "scribble-lib"))
          (description . "Classes for reading and writing RIFF files")
          (implies . ())
          (last-checked . 1557339503)
          (last-edit . 1508498929)
          (last-updated . 1508566197)
          (modules
           .
           ((lib "binary-class/scribblings/wave.scrbl")
            (lib "binary-class/riff.rkt")
            (lib "binary-class/wave.rkt")
            (lib "binary-class/scribblings/riff.scrbl")))
          (name . "binary-class-riff")
          (nix-sha256
           .
           "1h7rcijd5vx1h3l4f9wcjszgh3c147nh3mr77cx5va9bkpxqg6dm")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:leo@lwh.jp . #t)
                   (binary-class . #t)
                   (io . #t)
                   (riff . #t)
                   (ring:2 . #t)
                   (wav . #t)))
          (source . "git://github.com/lwhjp/binary-class-riff")
          (tags . ("binary-class" "io" "riff" "wav"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "2062f82382eed570b502a935f740621d3971d527")
                          (source
                           .
                           "git://github.com/lwhjp/binary-class-riff")
                          (source_url
                           .
                           "http://github.com/lwhjp/binary-class-riff/tree/master")))))))
 ("binaryio"
  .
  #hasheq((author . "ryanc@racket-lang.org")
          (authors . ("ryanc@racket-lang.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "binaryio" "doc/binaryio@binaryio/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/binaryio.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/binaryio.txt")))
          (checksum . "85e2ae6ce58f85c2adabb7220495441f807fc847")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           (("base" #:version "6.3")
            "binaryio-lib"
            "rackunit-lib"
            "math-lib"
            "racket-doc"
            "scribble-lib"))
          (dependency-names
           .
           ("base"
            "binaryio-lib"
            "rackunit-lib"
            "math-lib"
            "racket-doc"
            "scribble-lib"))
          (description . "functions for reading and writing binary data")
          (implies . ("binaryio-lib"))
          (last-checked . 1557339503)
          (last-edit . 1501165587)
          (last-updated . 1551798207)
          (modules
           .
           ((lib "binaryio/test/integer.rkt")
            (lib "binaryio/test/fixup.rkt")
            (lib "binaryio/test/bytes.rkt")
            (lib "binaryio/binaryio.scrbl")
            (lib "binaryio/test/float.rkt")))
          (name . "binaryio")
          (nix-sha256
           .
           "1s74qixjq995hhwdlcnkc5zzw605q5jfyby4gb0j483y47ami6n7")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:ryanc@racket-lang.org . #t)
                   (io . #t)
                   (net . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/rmculpepper/binaryio?path=binaryio")
          (tags . ("io" "net"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "85e2ae6ce58f85c2adabb7220495441f807fc847")
                          (source
                           .
                           "git://github.com/rmculpepper/binaryio?path=binaryio")
                          (source_url
                           .
                           "http://github.com/rmculpepper/binaryio/tree/master?path=binaryio")))))))
 ("binaryio-lib"
  .
  #hasheq((author . "ryanc@racket-lang.org")
          (authors . ("ryanc@racket-lang.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/binaryio-lib.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/binaryio-lib.txt")))
          (checksum . "85e2ae6ce58f85c2adabb7220495441f807fc847")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base"))
          (dependency-names . ("base"))
          (description . "functions for reading and writing binary data")
          (implies . ())
          (last-checked . 1557339503)
          (last-edit . 1501165524)
          (last-updated . 1551798207)
          (modules
           .
           ((lib "binaryio/unchecked/fixup-port.rkt")
            (lib "binaryio/reader.rkt")
            (lib "binaryio/integer.rkt")
            (lib "binaryio/unchecked/reader.rkt")
            (lib "binaryio/fixup-port.rkt")
            (lib "binaryio/float.rkt")
            (lib "binaryio/private/bytes.rkt")
            (lib "binaryio/bytes.rkt")
            (lib "binaryio/unchecked/integer.rkt")
            (lib "binaryio/main.rkt")
            (lib "binaryio/private/float.rkt")))
          (name . "binaryio-lib")
          (nix-sha256
           .
           "1s74qixjq995hhwdlcnkc5zzw605q5jfyby4gb0j483y47ami6n7")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:ryanc@racket-lang.org . #t)
                   (io . #t)
                   (net . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/rmculpepper/binaryio?path=binaryio-lib")
          (tags . ("io" "net"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "85e2ae6ce58f85c2adabb7220495441f807fc847")
                          (source
                           .
                           "git://github.com/rmculpepper/binaryio?path=binaryio-lib")
                          (source_url
                           .
                           "http://github.com/rmculpepper/binaryio/tree/master?path=binaryio-lib")))))))
 ("binutils"
  .
  #hasheq((author . "leo@lwh.jp")
          (authors . ("leo@lwh.jp"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "binutils" "doc/binutils@binutils/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/binutils.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/binutils.txt")))
          (checksum . "0023f772c58fb89d8a29f7880f8d2e855faa58a0")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "binary-class" "racket-doc" "scribble-lib"))
          (dependency-names
           .
           ("base" "binary-class" "racket-doc" "scribble-lib"))
          (description
           .
           "Utilities for manipulating machine code object files")
          (implies . ())
          (last-checked . 1557339503)
          (last-edit . 1507000575)
          (last-updated . 1507109329)
          (modules
           .
           ((lib "binutils/elf/private/elf.rkt")
            (lib "binutils/base.rkt")
            (lib "binutils/elf/main.rkt")
            (lib "binutils/link.rkt")
            (lib "binutils/main.rkt")
            (lib "binutils/elf/private/system.rkt")
            (lib "binutils/elf/private/types.rkt")
            (lib "binutils/scribblings/binutils.scrbl")
            (lib "binutils/dynamic.rkt")
            (lib "binutils/elf/private/convert.rkt")
            (lib "binutils/private/object.rkt")
            (lib "binutils/elf/private/params.rkt")
            (lib "binutils/elf.rkt")))
          (name . "binutils")
          (nix-sha256
           .
           "0wsi5lsysmyryavj6a3wbklk1vh03x2lpsx7rfadvbkm858yxm2v")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:leo@lwh.jp . #t)
                   (binary . #t)
                   (executable . #t)
                   (ring:2 . #t)
                   (unstable . #t)))
          (source . "git://github.com/lwhjp/racket-binutils")
          (tags . ("binary" "executable" "unstable"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "0023f772c58fb89d8a29f7880f8d2e855faa58a0")
                          (source . "git://github.com/lwhjp/racket-binutils")
                          (source_url
                           .
                           "http://github.com/lwhjp/racket-binutils/tree/master")))))))
 ("bitsyntax"
  .
  #hasheq((author . "tonygarnockjones@gmail.com")
          (authors . ("tonygarnockjones@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "bitsyntax" "doc/bitsyntax@bitsyntax/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/bitsyntax.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/bitsyntax.txt")))
          (checksum . "e28efc87dac903ede1fbd87c87cff9cc5550db1a")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "rackunit-lib"
            "typed-racket-lib"
            "typed-racket-more"
            "scribble-lib"
            "racket-doc"))
          (dependency-names
           .
           ("base"
            "rackunit-lib"
            "typed-racket-lib"
            "typed-racket-more"
            "scribble-lib"
            "racket-doc"))
          (description
           .
           "Erlang-like binary pattern-matching and bit string manipulation for Racket.")
          (implies . ())
          (last-checked . 1557339503)
          (last-edit . 1401490586)
          (last-updated . 1552788161)
          (modules
           .
           ((lib "bitsyntax/bitstitch.rkt")
            (lib "bitsyntax/test-typed.rkt")
            (lib "bitsyntax/bitstring.rkt")
            (lib "bitsyntax/scribblings/bitsyntax.scrbl")
            (lib "bitsyntax/bitstx.rkt")
            (lib "bitsyntax/test-bitmatch-bitstitch.rkt")
            (lib "bitsyntax/main.rkt")
            (lib "bitsyntax/bitmatch.rkt")))
          (name . "bitsyntax")
          (nix-sha256
           .
           "1pipm0hyk4a0vpplxvpafhgfwn72ynmhs0i14mccigpqfc1y7yjf")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:tonygarnockjones@gmail.com . #t)
                   (net . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/tonyg/racket-bitsyntax")
          (tags . ("net"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "e28efc87dac903ede1fbd87c87cff9cc5550db1a")
                          (source . "git://github.com/tonyg/racket-bitsyntax")
                          (source_url
                           .
                           "http://github.com/tonyg/racket-bitsyntax/tree/master")))))))
 ("bloggy"
  .
  #hasheq((author . "jay.mccarthy@gmail.com")
          (authors . ("jay.mccarthy@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/bloggy.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/bloggy.txt")))
          (checksum . "d189325911f28fdfd9b8d7ae64225838d6400596")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base"))
          (dependency-names . ("base"))
          (description . "A very simple Racket blog system")
          (implies . ())
          (last-checked . 1557339503)
          (last-edit . 1357059788)
          (last-updated . 1502812283)
          (modules . ((lib "bloggy/main.rkt")))
          (name . "bloggy")
          (nix-sha256
           .
           "1gy54c7nay7byird24fv4g6r1p70rsfrb11cklyc4c2n49yj5ssw")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (app . #t)
                   (author:jay.mccarthy@gmail.com . #t)
                   (blog . #t)
                   (ring:1 . #t)
                   (web . #t)))
          (source . "github://github.com/jeapostrophe/bloggy/master")
          (tags . ("app" "blog" "web"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "d189325911f28fdfd9b8d7ae64225838d6400596")
                          (source
                           .
                           "github://github.com/jeapostrophe/bloggy/master")
                          (source_url
                           .
                           "http://github.com/jeapostrophe/bloggy/tree/master")))))))
 ("bluetooth-socket"
  .
  #hasheq((author . "ray.racine@gmail.com")
          (authors . ("ray.racine@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "bluetooth-socket"
                    "doc/bluetooth-socket@bluetooth-socket/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/bluetooth-socket.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/bluetooth-socket.txt")))
          (checksum . "d0c727f0df4930c134b6ee4693a83244e97b21ce")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "scribble-lib" "racket-doc" "rackunit-lib"))
          (dependency-names
           .
           ("base" "scribble-lib" "racket-doc" "rackunit-lib"))
          (description
           .
           "Racket impl of FFI RAW, AF_BLUETOOTH BTPROTO_HCI socket for Linux.\r\nAllows for communicating to a Bluetooth Controller (hciX) via HCI\r\npackets per the Bluetooth Specification.")
          (implies . ())
          (last-checked . 1557339503)
          (last-edit . 1528206831)
          (last-updated . 1527783433)
          (modules
           .
           ((lib "bluetooth-socket/socket/bt-socket-ffi.rkt")
            (lib "bluetooth-socket/socket/hci-socket.rkt")
            (lib "bluetooth-socket/main.rkt")
            (lib "bluetooth-socket/socket/stats.rkt")
            (lib "bluetooth-socket/scribblings/bluetooth-socket.scrbl")))
          (name . "bluetooth-socket")
          (nix-sha256
           .
           "1vqlyyfl9k8hg7ic32kmql3hzgqlvsz9qmlicpa1s45yhjzm2hd8")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:ray.racine@gmail.com . #t)
                   (bluetooth . #t)
                   (ring:2 . #t)
                   (socket . #t)))
          (source . "https://gitlab.com/RayRacine/bluetooth-socket.git")
          (tags . ("bluetooth" "socket"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "d0c727f0df4930c134b6ee4693a83244e97b21ce")
                          (source
                           .
                           "https://gitlab.com/RayRacine/bluetooth-socket.git")
                          (source_url
                           .
                           "https://gitlab.com/RayRacine/bluetooth-socket.git")))))))
 ("bnf"
  .
  #hasheq((author . "pcn@cs.umd.edu")
          (authors . ("pcn@cs.umd.edu"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/bnf.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/bnf.txt")))
          (checksum . "8b1e995e41cdaf87163c9697b35eea81111d9c35")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "typed-racket-lib"
            "typed-racket-more"
            "typed-struct-props"))
          (dependency-names
           .
           ("base"
            "typed-racket-lib"
            "typed-racket-more"
            "typed-struct-props"))
          (description
           .
           "Concise Typed Racket syntax for declaring recursive data in BNF")
          (implies . ())
          (last-checked . 1557339504)
          (last-edit . 1492834505)
          (last-updated . 1544906451)
          (modules . ((lib "bnf/tests.rkt") (lib "bnf/main.rkt")))
          (name . "bnf")
          (nix-sha256
           .
           "0rb3clvz1n740n4a12sf8s12jn93qfrwbsxwd1jn976dd93jz3dy")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:pcn@cs.umd.edu . #t)
                   (bnf . #t)
                   (data . #t)
                   (grammar . #t)
                   (ring:1 . #t)
                   (typed-racket . #t)))
          (source . "git://github.com/philnguyen/bnf?path=bnf")
          (tags . ("bnf" "data" "grammar" "typed-racket"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "8b1e995e41cdaf87163c9697b35eea81111d9c35")
                          (source
                           .
                           "git://github.com/philnguyen/bnf?path=bnf")
                          (source_url
                           .
                           "http://github.com/philnguyen/bnf/tree/master?path=bnf")))))))
 ("bookcover"
  .
  #hasheq((author . "joel@jdueck.net")
          (authors . ("joel@jdueck.net"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "bookcover" "doc/bookcover@bookcover/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/bookcover.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/bookcover.txt")))
          (checksum . "824cdc44d35cc2c418074e4eaf12bbb0e516342f")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "beautiful-racket-lib"
            "draw-lib"
            "pict-lib"
            "draw-doc"
            "pict-doc"
            "racket-doc"
            "rackunit-lib"
            "scribble-lib"
            "slideshow-doc"))
          (dependency-names
           .
           ("base"
            "beautiful-racket-lib"
            "draw-lib"
            "pict-lib"
            "draw-doc"
            "pict-doc"
            "racket-doc"
            "rackunit-lib"
            "scribble-lib"
            "slideshow-doc"))
          (description
           .
           "A language/library for creating PDF files suitable for use as printed book covers.")
          (implies . ())
          (last-checked . 1557339504)
          (last-edit . 1523368979)
          (last-updated . 1553464964)
          (modules
           .
           ((lib "bookcover/scribblings/bookcover.scrbl")
            (lib "bookcover/main.rkt")
            (lib "bookcover/scribblings/module-reference.scrbl")
            (lib "bookcover/scribblings/overview.scrbl")
            (lib "bookcover/scribblings/example-cover.rkt")
            (lib "bookcover/scribblings/appendix.scrbl")
            (lib "bookcover/draw.rkt")))
          (name . "bookcover")
          (nix-sha256
           .
           "1gl7p9gw4fq540fpmirn4lkvmiybdl27bj9s6br44j6m9ivcrip0")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:joel@jdueck.net . #t)
                   (books . #t)
                   (pdf . #t)
                   (ring:2 . #t)
                   (self-publishing . #t)))
          (source . "https://github.com/otherjoel/bookcover.git")
          (tags . ("books" "pdf" "self-publishing"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "824cdc44d35cc2c418074e4eaf12bbb0e516342f")
                          (source
                           .
                           "https://github.com/otherjoel/bookcover.git")
                          (source_url
                           .
                           "https://github.com/otherjoel/bookcover.git")))))))
 ("br-parser-tools"
  .
  #hasheq((author . "mb@mbtype.com")
          (authors . ("mb@mbtype.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/br-parser-tools.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/br-parser-tools.txt")))
          (checksum . "8752bf5bfbb3a7902d60041c62ae4cc6450c9c0c")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("br-parser-tools-lib" "br-parser-tools-doc"))
          (dependency-names . ("br-parser-tools-lib" "br-parser-tools-doc"))
          (description
           .
           "fork of `parser-tools` with some modernizations & improvements. Backward compatible with `parser-tools`.")
          (implies . ("br-parser-tools-lib" "br-parser-tools-doc"))
          (last-checked . 1557339504)
          (last-edit . 1529863153)
          (last-updated . 1531802564)
          (modules . ())
          (name . "br-parser-tools")
          (nix-sha256
           .
           "1jcys491bpwlzkmbrhf9mpag4ijvq3wgmldwn9v9lmiv7h8gpdyx")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:mb@mbtype.com . #t)
                   (parser . #t)
                   (parsing . #t)
                   (ring:1 . #t)))
          (source
           .
           "https://github.com/mbutterick/br-parser-tools.git?path=br-parser-tools")
          (tags . ("parser" "parsing"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "8752bf5bfbb3a7902d60041c62ae4cc6450c9c0c")
                          (source
                           .
                           "https://github.com/mbutterick/br-parser-tools.git?path=br-parser-tools")
                          (source_url
                           .
                           "https://github.com/mbutterick/br-parser-tools.git?path=br-parser-tools")))))))
 ("br-parser-tools-doc"
  .
  #hasheq((author . "mb@mbtype.com")
          (authors . ("mb@mbtype.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "br-parser-tools"
                    "doc/br-parser-tools@br-parser-tools-doc/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log
                  .
                  "server/built/install/br-parser-tools-doc.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/br-parser-tools-doc.txt")))
          (checksum . "8752bf5bfbb3a7902d60041c62ae4cc6450c9c0c")
          (checksum-error . #f)
          (conflicts . ())
          (date-added . 1556661355)
          (dependencies
           .
           ("base"
            "scheme-lib"
            "racket-doc"
            "syntax-color-doc"
            "br-parser-tools-lib"
            "scribble-lib"))
          (dependency-names
           .
           ("base"
            "scheme-lib"
            "racket-doc"
            "syntax-color-doc"
            "br-parser-tools-lib"
            "scribble-lib"))
          (description . "fork of `parser-tools-doc` for Beautiful Racket")
          (implies . ())
          (last-checked . 1557339504)
          (last-edit . 1556661445)
          (last-updated . 1531802564)
          (modules . ((lib "br-parser-tools/br-parser-tools.scrbl")))
          (name . "br-parser-tools-doc")
          (nix-sha256
           .
           "1jcys491bpwlzkmbrhf9mpag4ijvq3wgmldwn9v9lmiv7h8gpdyx")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:mb@mbtype.com . #t)
                   (beautiful-racket . #t)
                   (ring:1 . #t)))
          (source
           .
           "https://github.com/mbutterick/br-parser-tools.git?path=br-parser-tools-doc")
          (tags . ("beautiful-racket"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "8752bf5bfbb3a7902d60041c62ae4cc6450c9c0c")
                          (source
                           .
                           "https://github.com/mbutterick/br-parser-tools.git?path=br-parser-tools-doc")
                          (source_url
                           .
                           "https://github.com/mbutterick/br-parser-tools.git?path=br-parser-tools-doc")))))))
 ("br-parser-tools-lib"
  .
  #hasheq((author . "mb@mbtype.com")
          (authors . ("mb@mbtype.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log
                  .
                  "server/built/install/br-parser-tools-lib.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/br-parser-tools-lib.txt")))
          (checksum . "8752bf5bfbb3a7902d60041c62ae4cc6450c9c0c")
          (checksum-error . #f)
          (conflicts . ())
          (date-added . 1556661362)
          (dependencies
           .
           ("scheme-lib" "base" "compatibility-lib" "rackunit-lib"))
          (dependency-names
           .
           ("scheme-lib" "base" "compatibility-lib" "rackunit-lib"))
          (description . "fork of `parser-tools-lib` for Beautiful Racket")
          (implies . ())
          (last-checked . 1557339504)
          (last-edit . 1556661462)
          (last-updated . 1531802564)
          (modules
           .
           ((lib "br-parser-tools/private-yacc/input-file-parser.rkt")
            (lib "br-parser-tools/yacc-to-scheme.rkt")
            (lib "br-parser-tools/lex-plt-v200.rkt")
            (lib "br-parser-tools/private-yacc/lr0.rkt")
            (lib "br-parser-tools/private-lex/stx.rkt")
            (lib "br-parser-tools/private-lex/actions.rkt")
            (lib "br-parser-tools/private-yacc/lalr.rkt")
            (lib "br-parser-tools/private-lex/util.rkt")
            (lib "br-parser-tools/private-lex/token-syntax.rkt")
            (lib "br-parser-tools/private-yacc/yacc-helper.rkt")
            (lib "br-parser-tools/lex-sre.rkt")
            (lib "br-parser-tools/private-yacc/parser-actions.rkt")
            (lib "br-parser-tools/private-yacc/grammar.rkt")
            (lib "br-parser-tools/private-yacc/graph.rkt")
            (lib "br-parser-tools/private-yacc/parser-builder.rkt")
            (lib "br-parser-tools/private-lex/deriv.rkt")
            (lib "br-parser-tools/private-lex/unicode-chars.rkt")
            (lib "br-parser-tools/private-yacc/table.rkt")
            (lib "br-parser-tools/private-lex/front.rkt")
            (lib "br-parser-tools/examples/read.rkt")
            (lib "br-parser-tools/private-lex/re.rkt")
            (lib "br-parser-tools/private-lex/error-tests.rkt")
            (lib "br-parser-tools/yacc.rkt")
            (lib "br-parser-tools/examples/calc.rkt")
            (lib "br-parser-tools/lex.rkt")
            (lib "br-parser-tools/private-lex/token.rkt")
            (lib "br-parser-tools/cfg-parser.rkt")))
          (name . "br-parser-tools-lib")
          (nix-sha256
           .
           "1jcys491bpwlzkmbrhf9mpag4ijvq3wgmldwn9v9lmiv7h8gpdyx")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:mb@mbtype.com . #t)
                   (beautiful-racket . #t)
                   (ring:1 . #t)))
          (source
           .
           "https://github.com/mbutterick/br-parser-tools.git?path=br-parser-tools-lib")
          (tags . ("beautiful-racket"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "8752bf5bfbb3a7902d60041c62ae4cc6450c9c0c")
                          (source
                           .
                           "https://github.com/mbutterick/br-parser-tools.git?path=br-parser-tools-lib")
                          (source_url
                           .
                           "https://github.com/mbutterick/br-parser-tools.git?path=br-parser-tools-lib")))))))
 ("brag"
  .
  #hasheq((author . "mb@mbtype.com")
          (authors . ("mb@mbtype.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "brag" "doc/brag@brag/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/brag.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/brag.txt")))
          (checksum . "84f2fc2b972ec81ef53688bb79042875fc7db8f9")
          (checksum-error . #f)
          (conflicts . ())
          (date-added . 1556829038)
          (dependencies
           .
           (("base" #:version "6.3")
            "brag-lib"
            "at-exp-lib"
            "br-parser-tools-doc"
            "racket-doc"
            "scribble-lib"))
          (dependency-names
           .
           ("base"
            "brag-lib"
            "at-exp-lib"
            "br-parser-tools-doc"
            "racket-doc"
            "scribble-lib"))
          (description
           .
           "Modernized & improved version of `ragg` language that generates a parser from a BNF grammar")
          (implies . ("brag-lib"))
          (last-checked . 1557339504)
          (last-edit . 1556829042)
          (last-updated . 1557069503)
          (modules . ((lib "brag/brag.scrbl")))
          (name . "brag")
          (nix-sha256
           .
           "1wvqw67fnzq69fd3qsj62nabzl8nfx7q8mla7wmnzmnkvki2f04c")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:mb@mbtype.com . #t)
                   (parser . #t)
                   (parsing . #t)
                   (ring:1 . #t)))
          (source . "https://github.com/mbutterick/brag.git?path=brag")
          (tags . ("parser" "parsing"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "84f2fc2b972ec81ef53688bb79042875fc7db8f9")
                          (source
                           .
                           "https://github.com/mbutterick/brag.git?path=brag")
                          (source_url
                           .
                           "https://github.com/mbutterick/brag.git?path=brag")))))))
 ("brag-lib"
  .
  #hasheq((author . "mb@mbtype.com")
          (authors . ("mb@mbtype.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/brag-lib.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/brag-lib.txt")))
          (checksum . "84f2fc2b972ec81ef53688bb79042875fc7db8f9")
          (checksum-error . #f)
          (conflicts . ())
          (date-added . 1556803657)
          (dependencies
           .
           (("base" #:version "6.3") "br-parser-tools-lib" "rackunit-lib"))
          (dependency-names . ("base" "br-parser-tools-lib" "rackunit-lib"))
          (description . "")
          (implies . ("br-parser-tools-lib"))
          (last-checked . 1557339504)
          (last-edit . 1556803670)
          (last-updated . 1557069503)
          (modules
           .
           ((lib "brag/test/test-errors.rkt")
            (lib "brag/examples/wordy.rkt")
            (lib "brag/examples/baby-json-alt.rkt")
            (lib "brag/examples/simple-line-drawing/lexer.rkt")
            (lib "brag/private/internal-support.rkt")
            (lib "brag/test/test-hide-and-splice.rkt")
            (lib "brag/test/weird-grammar.rkt")
            (lib "brag/test/test-simple-line-drawing.rkt")
            (lib "brag/test/test-start-and-atok.rkt")
            (lib "brag/test/test-top-level-cut.rkt")
            (lib "brag/test/test-quotation-marks-and-backslashes.rkt")
            (lib "brag/examples/bnf.rkt")
            (lib "brag/test/test-01-equal.rkt")
            (lib "brag/test/test-wordy.rkt")
            (lib "brag/test/test-flatten.rkt")
            (lib "brag/examples/simple-line-drawing/examples/letter-i.rkt")
            (lib "brag/support.rkt")
            (lib "brag/examples/top-level-cut-2.rkt")
            (lib "brag/rules/rule-structs.rkt")
            (lib "brag/examples/simple-line-drawing/grammar.rkt")
            (lib "brag/codegen/expander.rkt")
            (lib "brag/examples/baby-json.rkt")
            (lib "brag/rules/stx.rkt")
            (lib "brag/test/test-weird-grammar.rkt")
            (lib "brag/examples/simple-line-drawing/semantics.rkt")
            (lib "brag/examples/hide-and-splice.rkt")
            (lib "brag/examples/0n1n.rkt")
            (lib "brag/test/test-cutter-another.rkt")
            (lib "brag/test/test-all.rkt")
            (lib "brag/test/test-lexer.rkt")
            (lib "brag/examples/nested-word-list.rkt")
            (lib "brag/examples/add-mult.rkt")
            (lib "brag/private/colorer.rkt")
            (lib "brag/examples/start-and-atok.rkt")
            (lib "brag/test/test-simple-arithmetic-grammar.rkt")
            (lib "brag/rules/parser.rkt")
            (lib "brag/examples/baby-json-hider.rkt")
            (lib "brag/examples/baby-json-alt2.rkt")
            (lib "brag/test/test-nested-repeats.rkt")
            (lib "brag/test/test-curly-quantifier.rkt")
            (lib "brag/examples/empty-symbol.rkt")
            (lib "brag/examples/0n1.rkt")
            (lib "brag/examples/top-level-cut-1.rkt")
            (lib "brag/examples/simple-line-drawing/interpret.rkt")
            (lib "brag/main.rkt")
            (lib "brag/examples/cutter-another.rkt")
            (lib "brag/rules/lexer.rkt")
            (lib "brag/codegen/codegen.rkt")
            (lib "brag/examples/top-level-cut-3.rkt")
            (lib "brag/test/test-baby-json-hider.rkt")
            (lib "brag/test/test-empty-symbol.rkt")
            (lib "brag/examples/lua-parser.rkt")
            (lib "brag/test/test-cutter.rkt")
            (lib "brag/codegen/runtime.rkt")
            (lib "brag/examples/simple-line-drawing/lang/reader.rkt")
            (lib "brag/test/test-0n1n.rkt")
            (lib "brag/examples/statlist-grammar.rkt")
            (lib "brag/codegen/flatten.rkt")
            (lib "brag/examples/simple-arithmetic-grammar.rkt")
            (lib "brag/examples/quotation-marks-and-backslashes.rkt")
            (lib "brag/examples/simple-line-drawing.rkt")
            (lib "brag/test/test-parser.rkt")
            (lib "brag/test/test-0n1.rkt")
            (lib "brag/examples/whitespace.rkt")
            (lib "brag/examples/01-equal.rkt")
            (lib "brag/rules/stx-types.rkt")
            (lib "brag/private/indenter.rkt")
            (lib "brag/codegen/reader.rkt")
            (lib "brag/examples/nested-repeats.rkt")
            (lib "brag/examples/cutter.rkt")
            (lib "brag/test/test-whitespace.rkt")
            (lib "brag/examples/curly-quantifier.rkt")
            (lib "brag/test/test-old-token.rkt")
            (lib "brag/codegen/satisfaction.rkt")
            (lib "brag/test/test-baby-json.rkt")))
          (name . "brag-lib")
          (nix-sha256
           .
           "1wvqw67fnzq69fd3qsj62nabzl8nfx7q8mla7wmnzmnkvki2f04c")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:no-desc: . #t)
                   (author:mb@mbtype.com . #t)
                   (lib . #t)
                   (ring:2 . #t)))
          (source . "https://github.com/mbutterick/brag.git?path=brag-lib")
          (tags . ("lib"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "84f2fc2b972ec81ef53688bb79042875fc7db8f9")
                          (source
                           .
                           "https://github.com/mbutterick/brag.git?path=brag-lib")
                          (source_url
                           .
                           "https://github.com/mbutterick/brag.git?path=brag-lib")))))))
 ("brazilian-law"
  .
  #hasheq((author . "bcclaro+racket@gmail.com")
          (authors . ("bcclaro+racket@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "brazilian-law-parser"
                    "doc/brazilian-law-parser@brazilian-law/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/brazilian-law.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/brazilian-law.txt")))
          (checksum . "912433fd9755e309d7e681fa2c74cff5e692a6d8")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           (("base" #:version "6.5")
            "megaparsack"
            ("txexpr" #:version "0.2")
            "curly-fn-lib"
            "functional-lib"
            "scribble-lib"
            "racket-doc"
            "rackunit-lib"))
          (dependency-names
           .
           ("base"
            "megaparsack"
            "txexpr"
            "curly-fn-lib"
            "functional-lib"
            "scribble-lib"
            "racket-doc"
            "rackunit-lib"))
          (description
           .
           "definitions for Brazilian laws; also parses them if in suitable plaintext format.")
          (implies . ())
          (last-checked . 1557339504)
          (last-edit . 1535765125)
          (last-updated . 1535765125)
          (modules
           .
           ((lib "brazilian-law-parser/parser.rkt")
            (lib
             "brazilian-law-parser/scribblings/brazilian-law-parser.scrbl")
            (lib "brazilian-law-parser/main.rkt")
            (lib "brazilian-law-parser/brazilian-law.rkt")
            (lib "brazilian-law-parser/print.rkt")))
          (name . "brazilian-law")
          (nix-sha256
           .
           "0xc0rbkc9xg1fvhsrgr9gsz1w0izmklj4jz4s0w4mvv0xwzwzzc1")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (:no-tag: . #t)
                   (author:bcclaro+racket@gmail.com . #t)
                   (ring:2 . #t)))
          (source . "https://github.com/OAB-exams/brazilian-law-parser.git")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "912433fd9755e309d7e681fa2c74cff5e692a6d8")
                          (source
                           .
                           "https://github.com/OAB-exams/brazilian-law-parser.git")
                          (source_url
                           .
                           "https://github.com/OAB-exams/brazilian-law-parser.git")))))))
 ("brush"
  .
  #hasheq((author . "david@davidchristiansen.dk")
          (authors . ("david@davidchristiansen.dk"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "brush" "doc/brush@brush/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/brush.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/brush.txt")))
          (checksum . "91b83cda313f77f2068f0c02753c55c2563680d5")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base" "scribble" "at-exp-lib" "scribble-lib" "racket-doc"))
          (dependency-names
           .
           ("base" "scribble" "at-exp-lib" "scribble-lib" "racket-doc"))
          (description . "A semi-literate programming package for Scribble")
          (implies . ())
          (last-checked . 1557339504)
          (last-edit . 1509742249)
          (last-updated . 1510218058)
          (modules
           .
           ((lib "brush/scribblings/brush.scrbl")
            (lib "brush/lp/lang/common.rkt")
            (lib "brush/main.rkt")
            (lib "brush/lp/lang/lang2.rkt")
            (lib "brush/private/lp.rkt")))
          (name . "brush")
          (nix-sha256
           .
           "17rg5z7vmpqmdprssrif96wm5k775s1fmafchnbysc38xr15j4cw")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:david@davidchristiansen.dk . #t)
                   (literate-programming . #t)
                   (ring:2 . #t)
                   (scribble . #t)))
          (source . "https://github.com/david-christiansen/brush.git")
          (tags . ("literate-programming" "scribble"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "91b83cda313f77f2068f0c02753c55c2563680d5")
                          (source
                           .
                           "https://github.com/david-christiansen/brush.git")
                          (source_url
                           .
                           "https://github.com/david-christiansen/brush.git")))))))
 ("bs"
  .
  #hasheq((author . "oldsin@live.com")
          (authors . ("oldsin@live.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . "server/built/deps/bs.txt")
                 (docs . (("main" "bs" "doc/bs@bs/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/bs.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/bs.txt")))
          (checksum . "0a88ed7217076a6286fdaef0183bea596149991b")
          (checksum-error . #f)
          (conflicts . ())
          (date-added . 1552568058)
          (dependencies
           .
           ("base"
            "brag"
            "crypto-lib"
            "parser-tools-lib"
            "rackunit-lib"
            "scribble-lib"))
          (dependency-names
           .
           ("base"
            "brag"
            "crypto-lib"
            "parser-tools-lib"
            "rackunit-lib"
            "scribble-lib"))
          (description
           .
           "A Bitcoin Script Implementation for testing Script riddles.")
          (implies . ())
          (last-checked . 1557339505)
          (last-edit . 1553726083)
          (last-updated . 1553731363)
          (modules
           .
           ((lib "bs/main.rkt")
            (lib "bs/parser.rkt")
            (lib "bs/color-lexer.rkt")
            (lib "bs/display.rkt")
            (lib "bs/scribblings/bs.scrbl")
            (lib "bs/lexer.rkt")
            (lib "bs/utils.rkt")
            (lib "bs/expander.rkt")
            (lib "bs/parser-test.rkt")
            (lib "bs/setup.rkt")
            (lib "bs/reader.rkt")
            (lib "bs/colorer.rkt")
            (lib "bs/opcodes.rkt")
            (lib "bs/tokenizer.rkt")
            (lib "bs/bin.rkt")
            (lib "bs/structs.rkt")))
          (name . "bs")
          (nix-sha256
           .
           "079alzyql1k0jq9n2wianc76xqgyl8v8n61z8x4sjn4vxqrgl4as")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-dep-fail: . #t)
                   (:build-success: . #t)
                   (:docs: . #t)
                   (author:oldsin@live.com . #t)
                   (bitcoin . #t)
                   (ring:2 . #t)
                   (script . #t)
                   (scripting . #t)))
          (source . "https://github.com/oldsin/bs.git")
          (tags . ("bitcoin" "script" "scripting"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "0a88ed7217076a6286fdaef0183bea596149991b")
                          (source . "https://github.com/oldsin/bs.git")
                          (source_url
                           .
                           "https://github.com/oldsin/bs.git")))))))
 ("bystroTeX"
  .
  #hasheq((author . "amkhlv@gmail.com")
          (authors . ("amkhlv@gmail.com"))
          (build
           .
           #hash((conflicts-log . "conflicts.txt")
                 (dep-failure-log . "server/built/deps/bystroTeX.txt")
                 (docs
                  .
                  (("extract" "manual" "doc/manual@bystroTeX/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/bystroTeX.txt")
                 (test-failure-log . "server/built/test-fail/bystroTeX.txt")
                 (test-success-log . #f)))
          (checksum . "58f3f04e95e2363c1eb37ac87dd56e63e8be1041")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "compatibility-lib"
            "db-lib"
            "scheme-lib"
            "scribble-lib"
            "racket-doc"
            "rackunit-lib"
            "scribble-doc"
            "at-exp-lib"))
          (dependency-names
           .
           ("base"
            "compatibility-lib"
            "db-lib"
            "scheme-lib"
            "scribble-lib"
            "racket-doc"
            "rackunit-lib"
            "scribble-doc"
            "at-exp-lib"))
          (description
           .
           "A tool for preparing HTML slides with LaTeX formulas, based on Scribble")
          (implies . ())
          (last-checked . 1557339505)
          (last-edit . 1434482454)
          (last-updated . 1557199147)
          (modules
           .
           ((lib "bystroTeX/slides_for-syntax.rkt")
            (lib "bystroTeX/common.rkt")
            (lib "bystroTeX/bystrotex.rkt")
            (lib "bystroTeX/utils.rkt")
            (lib "bystroTeX/biblib/autobib.rkt")
            (lib "bystroTeX/slides.rkt")
            (lib "bystroTeX/biblib/bibtex.rkt")
            (lib "bystroTeX/manual.scrbl")
            (lib "bystroTeX/xmlconf.rkt")
            (lib "bystroTeX/bibtex.rkt")))
          (name . "bystroTeX")
          (nix-sha256
           .
           "1km8rzyv0afdjl9x39hc5gn0q26mzipfw0dgjaa55cdfapkf06ks")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-conflicts: . #t)
                   (:build-dep-fail: . #t)
                   (:build-success: . #t)
                   (:docs-error: . #t)
                   (:docs: . #t)
                   (LaTeX . #t)
                   (academic . #t)
                   (author:amkhlv@gmail.com . #t)
                   (ring:1 . #t)
                   (slides . #t)))
          (source . "git://github.com/amkhlv/amkhlv/?path=bystroTeX")
          (tags . ("academic" "LaTeX" "slides"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "58f3f04e95e2363c1eb37ac87dd56e63e8be1041")
                          (source
                           .
                           "git://github.com/amkhlv/amkhlv/?path=bystroTeX")
                          (source_url
                           .
                           "git://github.com/amkhlv/amkhlv/?path=bystroTeX")))))))
 ("bzip2"
  .
  #hasheq((author . "zeppieri@gmail.com")
          (authors . ("zeppieri@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "bzip2" "doc/bzip2@bzip2/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/bzip2.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/bzip2.txt")))
          (checksum . "7ceadc95e6221fd9a46f2b009cfc302117fe7f02")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "rackunit-lib" "racket-doc" "scribble-lib"))
          (dependency-names
           .
           ("base" "rackunit-lib" "racket-doc" "scribble-lib"))
          (description . "bzip2 compression and decompression")
          (implies . ())
          (last-checked . 1557339505)
          (last-edit . 1456032954)
          (last-updated . 1502812285)
          (modules
           .
           ((lib "file/bzip2/private/structs.rkt")
            (lib "file/bzip2.rkt")
            (lib "file/bzip2/private/compress.rkt")
            (lib "file/bzip2/private/crc.rkt")
            (lib "file/bzip2/private/util.rkt")
            (lib "file/bzip2/private/io.rkt")
            (lib "file/scribblings/bzip2.scrbl")
            (lib "file/bzip2/private/huffman.rkt")
            (lib "file/bzip2/private/decompress.rkt")
            (lib "file/bzip2/private/sort.rkt")))
          (name . "bzip2")
          (nix-sha256
           .
           "15xm4ws53702gbpsrb6133l9991hzpzycwgzksbm4197kbfngjhs")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:zeppieri@gmail.com . #t)
                   (bzip2 . #t)
                   (compression . #t)
                   (decompression . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/97jaz/racket-bzip2")
          (tags . ("bzip2" "compression" "decompression"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "7ceadc95e6221fd9a46f2b009cfc302117fe7f02")
                          (source . "git://github.com/97jaz/racket-bzip2")
                          (source_url
                           .
                           "http://github.com/97jaz/racket-bzip2/tree/master")))))))
 ("c"
  .
  #hasheq((author . "jay.mccarthy@gmail.com")
          (authors . ("jay.mccarthy@gmail.com"))
          (build
           .
           #hash((conflicts-log . "conflicts.txt")
                 (dep-failure-log . #f)
                 (docs . (("extract" "c" "doc/c@c/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/c.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/c.txt")))
          (checksum . "c2efa315c13e420e6cf77ba8d5ce1f7eb9dbdc2c")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "scribble-lib"
            "parser-tools-doc"
            "racket-doc"
            "scribble-doc"))
          (dependency-names
           .
           ("base"
            "scribble-lib"
            "parser-tools-doc"
            "racket-doc"
            "scribble-doc"))
          (description . "A language level for writing C code in DrRacket.")
          (implies . ())
          (last-checked . 1557339505)
          (last-edit . 1352332568)
          (last-updated . 1502812286)
          (modules
           .
           ((lib "c/lang/runtime.rkt")
            (lib "c/lang/main.rkt")
            (lib "tests/c/lang/order.rkt")
            (lib "c/lang/reader.rkt")
            (lib "c/lang/c.scrbl")
            (lib "c/lang/read.rkt")))
          (name . "c")
          (nix-sha256
           .
           "1ff014lnj5bx060fz6dbfwpyvjlvla3frmiachf356qj4blnhjq9")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-conflicts: . #t)
                   (:build-success: . #t)
                   (:docs-error: . #t)
                   (:docs: . #t)
                   (author:jay.mccarthy@gmail.com . #t)
                   (c . #t)
                   (language . #t)
                   (ring:1 . #t)))
          (source . "github://github.com/jeapostrophe/c/master")
          (tags . ("c" "language"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "c2efa315c13e420e6cf77ba8d5ce1f7eb9dbdc2c")
                          (source
                           .
                           "github://github.com/jeapostrophe/c/master")
                          (source_url
                           .
                           "http://github.com/jeapostrophe/c/tree/master")))))))
 ("c-defs"
  .
  #hasheq((author . "peblairman@gmail.com")
          (authors . ("peblairman@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "c-defs" "doc/c-defs@c-defs/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/c-defs.txt")
                 (test-failure-log . "server/built/test-fail/c-defs.txt")
                 (test-success-log . #f)))
          (checksum . "d5b7ba438ccdead8213e96051a205b696e4a8a93")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "sandbox-lib" "scribble-lib"))
          (dependency-names . ("base" "sandbox-lib" "scribble-lib"))
          (description . "Simple C value access")
          (implies . ())
          (last-checked . 1557339505)
          (last-edit . 1436462400)
          (last-updated . 1502812286)
          (modules
           .
           ((lib "c-defs/main.rkt")
            (lib "c-defs/docs/c-defs.scrbl")
            (lib "c-defs/ffi.rkt")
            (lib "c-defs/examples/python-types.rkt")))
          (name . "c-defs")
          (nix-sha256
           .
           "0r1wfmjrrvby25pqgbn69npq32axqp2j6vn1gk84js1dis543fs5")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (C . #t)
                   (author:peblairman@gmail.com . #t)
                   (ffi . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/belph/c-defs")
          (tags . ("C" "ffi"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "d5b7ba438ccdead8213e96051a205b696e4a8a93")
                          (source . "git://github.com/belph/c-defs")
                          (source_url
                           .
                           "http://github.com/belph/c-defs/tree/master")))))))
 ("c-utils"
  .
  #hasheq((author . "samth@ccs.neu.edu")
          (authors . ("samth@ccs.neu.edu"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "c-utils" "doc/c-utils@c-utils/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/c-utils.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/c-utils.txt")))
          (checksum . "a7087828d18fee7268c51104783279d285076560")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("abnf"
            "base"
            "parser-tools-lib"
            "at-exp-lib"
            "parser-tools-doc"
            "planet-doc"
            "racket-doc"
            "rackunit-lib"
            "scribble-doc"
            "scribble-lib"
            "srfi-lite-lib"))
          (dependency-names
           .
           ("abnf"
            "base"
            "parser-tools-lib"
            "at-exp-lib"
            "parser-tools-doc"
            "planet-doc"
            "racket-doc"
            "rackunit-lib"
            "scribble-doc"
            "scribble-lib"
            "srfi-lite-lib"))
          (description . "Utilities for manipulating C source code.")
          (implies . ())
          (last-checked . 1557339505)
          (last-edit . 1367976778)
          (last-updated . 1513624465)
          (modules
           .
           ((lib "c/parse.rkt")
            (lib "c/scribblings/pc.scrbl")
            (lib "c/scribblings/internals.scrbl")
            (lib "c/scribblings/history.scrbl")
            (lib "c/main.rkt")
            (lib "c/private/parser.rkt")
            (lib "c/pc.rkt")
            (lib "c/private/unobtrusive-quote.rkt")
            (lib "c/scribblings/utils.rkt")
            (lib "c/private/lexer.rkt")
            (lib "c/scribblings/c-utils.scrbl")
            (lib "c/scribblings/syntax.scrbl")
            (lib "c/scribblings/intro.scrbl")
            (lib "c/scribblings/parse.scrbl")
            (lib "c/eval.rkt")
            (lib "c/private/tests/parser.rkt")
            (lib "c/scribblings/header.scrbl")
            (lib "c/header.rkt")
            (lib "c/scribblings/eval.scrbl")
            (lib "c/private/tests/header.rkt")
            (lib "c/ast.rkt")
            (lib "c/private/syntactic-context.rkt")))
          (name . "c-utils")
          (nix-sha256
           .
           "065kcddybw85gjmaxyknfks5jaj6mikzxz5nn2ry8z6ibkjypi7m")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (C . #t)
                   (author:samth@ccs.neu.edu . #t)
                   (language . #t)
                   (ring:1 . #t)))
          (source . "github://github.com/samth/c.rkt/master")
          (tags . ("C" "language"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "a7087828d18fee7268c51104783279d285076560")
                          (source . "github://github.com/samth/c.rkt/master")
                          (source_url
                           .
                           "http://github.com/samth/c.rkt/tree/master")))))))
 ("cKanren"
  .
  #hasheq((author . "claire.alvis@gmail.com")
          (authors . ("claire.alvis@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/cKanren.txt")
                 (test-failure-log . "server/built/test-fail/cKanren.txt")
                 (test-success-log . #f)))
          (checksum . "8714bdd442ca03dbf5b1d6250904cbc5fd275e68")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "rackunit-lib"))
          (dependency-names . ("base" "rackunit-lib"))
          (description . "Constraint programming language")
          (implies . ())
          (last-checked . 1557339509)
          (last-edit . 1388959832)
          (last-updated . 1502812289)
          (modules
           .
           ((lib "cKanren/unstable/finite-domain.rkt")
            (lib "cKanren/src/errors.rkt")
            (lib "cKanren/tests/nominal/alphaleantap.rkt")
            (lib "cKanren/src/running.rkt")
            (lib "cKanren/tests/numbero.rkt")
            (lib "cKanren/src/constraint-store.rkt")
            (lib "cKanren/src/infs.rkt")
            (lib "cKanren/src/triggers.rkt")
            (lib "cKanren/miniKanren.rkt")
            (lib "cKanren/src/macros.rkt")
            (lib "cKanren/main.rkt")
            (lib "cKanren/tests/ak.rkt")
            (lib "cKanren/src/mk-structs.rkt")
            (lib "cKanren/unstable/interval-domain.rkt")
            (lib "cKanren/tests/fd.rkt")
            (lib "cKanren/neq.rkt")
            (lib "cKanren/tests/lazy-appendo.rkt")
            (lib "cKanren/tests/sets.rkt")
            (lib "cKanren/unstable/doc/manual.scrbl")
            (lib "cKanren/src/helpers.rkt")
            (lib "cKanren/tests/mk-struct.rkt")
            (lib "cKanren/src/syntax-classes.rkt")
            (lib "cKanren/testall.rkt")
            (lib "cKanren/tests/quines.rkt")
            (lib "cKanren/matche.rkt")
            (lib "cKanren/tests/interp.rkt")
            (lib "cKanren/src/operators.rkt")
            (lib "cKanren/tree-unify.rkt")
            (lib "cKanren/tests/nominal/nnf.rkt")
            (lib "cKanren/absento.rkt")
            (lib "cKanren/ck.rkt")
            (lib "cKanren/lang/reader.rkt")
            (lib "cKanren/src/constraints.rkt")
            (lib "cKanren/src/queue.rkt")
            (lib "cKanren/src/events.rkt")
            (lib "cKanren/src/base.rkt")
            (lib "cKanren/tests/mk.rkt")
            (lib "cKanren/tests/framework.rkt")
            (lib "cKanren/tests/neq.rkt")
            (lib "cKanren/tests/absento.rkt")
            (lib "cKanren/unstable/fd.rkt")
            (lib "cKanren/src/package.rkt")
            (lib "cKanren/unstable/ak.rkt")
            (lib "cKanren/src/variables.rkt")
            (lib "cKanren/unstable/sets.rkt")
            (lib "cKanren/src/framework.rkt")
            (lib "cKanren/tester.rkt")
            (lib "cKanren/src/debugging.rkt")
            (lib "cKanren/src/lex.rkt")
            (lib "cKanren/tests/symbolo-numbero.rkt")
            (lib "cKanren/tests/comp.rkt")
            (lib "cKanren/tests/no-closure.rkt")
            (lib "cKanren/src/substitution.rkt")
            (lib "cKanren/tests/tree-unify.rkt")
            (lib "cKanren/attributes.rkt")
            (lib "cKanren/tests/infer.rkt")
            (lib "cKanren/eigen.rkt")
            (lib "cKanren/tests/symbolo.rkt")
            (lib "cKanren/copy.rkt")))
          (name . "cKanren")
          (nix-sha256
           .
           "0fm3gmg6wfnqdkcrc7yl9y1bz6db4m6m2zlj9miyby3mcndkhw5k")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:no-tag: . #t)
                   (author:claire.alvis@gmail.com . #t)
                   (ring:1 . #t)))
          (source . "github://github.com/calvis/cKanren/master")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "8714bdd442ca03dbf5b1d6250904cbc5fd275e68")
                          (source
                           .
                           "github://github.com/calvis/cKanren/master")
                          (source_url
                           .
                           "http://github.com/calvis/cKanren/tree/master")))))))
 ("calendar"
  .
  #hasheq((author . "leif@leifandersen.net")
          (authors . ("leif@leifandersen.net"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "calendar" "doc/calendar@calendar/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/calendar.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/calendar.txt")))
          (checksum . "1c38c3804b8f4d87d5036d67018839276bdf6875")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base" "rackunit-lib" "gregor-lib" "scribble-lib" "racket-doc"))
          (dependency-names
           .
           ("base" "rackunit-lib" "gregor-lib" "scribble-lib" "racket-doc"))
          (description . "")
          (implies . ())
          (last-checked . 1557339505)
          (last-edit . 1463510689)
          (last-updated . 1512590763)
          (modules
           .
           ((lib "calendar/lang.rkt")
            (lib "calendar/lang/reader.rkt")
            (lib "calendar/private/event.rkt")
            (lib "calendar/main.rkt")
            (lib "calendar/scribblings/calendar.scrbl")))
          (name . "calendar")
          (nix-sha256
           .
           "1rlk9h5ws2dnm1lmz6dnxf60a35rdba29f3pk4k61zi8gs5s6hfg")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (:no-desc: . #t)
                   (:no-tag: . #t)
                   (author:leif@leifandersen.net . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/LeifAndersen/racket-calendar.git")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "1c38c3804b8f4d87d5036d67018839276bdf6875")
                          (source
                           .
                           "git://github.com/LeifAndersen/racket-calendar.git")
                          (source_url
                           .
                           "http://github.com/LeifAndersen/racket-calendar.git/tree/master")))))))
 ("canonicalize-path"
  .
  #hasheq((author . "neil@neilvandyke.org")
          (authors . ("neil@neilvandyke.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "canonicalize-path"
                    "doc/canonicalize-path@canonicalize-path/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/canonicalize-path.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/canonicalize-path.txt")))
          (checksum . "87391a22ed5dfa80e5cac219a241a162e85fa3a1")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base" "racket-doc" "scribble-lib" "mcfly" "overeasy"))
          (dependency-names
           .
           ("base" "racket-doc" "scribble-lib" "mcfly" "overeasy"))
          (description . "")
          (implies . ())
          (last-checked . 1557339505)
          (last-edit . 1456531517)
          (last-updated . 1502812287)
          (modules
           .
           ((lib "canonicalize-path/canonicalize-path.scrbl")
            (lib "canonicalize-path/main.rkt")))
          (name . "canonicalize-path")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (:no-desc: . #t)
                   (author:neil@neilvandyke.org . #t)
                   (filesystem . #t)
                   (ring:1 . #t)))
          (source . "http://www.neilvandyke.org/racket/canonicalize-path.zip")
          (tags . ("filesystem"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "87391a22ed5dfa80e5cac219a241a162e85fa3a1")
                          (source
                           .
                           "http://www.neilvandyke.org/racket/canonicalize-path.zip")
                          (source_url
                           .
                           "http://www.neilvandyke.org/racket/canonicalize-path.zip")))))))
 ("cc4101-handin"
  .
  #hasheq((author . "ifigueroap@gmail.com etanter@dcc.uchile.cl")
          (authors . ("ifigueroap@gmail.com" "etanter@dcc.uchile.cl"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/cc4101-handin.txt")
                 (test-failure-log
                  .
                  "server/built/test-fail/cc4101-handin.txt")
                 (test-success-log . #f)))
          (checksum . "4baadf45f07a1d79d1d2213356e1e60a72092242")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base" "drracket" "drracket-plugin-lib" "gui-lib" "net-lib"))
          (dependency-names
           .
           ("base" "drracket" "drracket-plugin-lib" "gui-lib" "net-lib"))
          (description
           .
           "Handin client for the CC4101 - Programming Languages course at University of Chile")
          (implies . ())
          (last-checked . 1557339506)
          (last-edit . 1394810873)
          (last-updated . 1502812287)
          (modules
           .
           ((lib "cc4101-handin/updater.rkt")
            (lib "cc4101-handin/handin-multi.rkt")
            (lib "cc4101-handin/client.rkt")
            (lib "cc4101-handin/this-collection.rkt")
            (lib "cc4101-handin/client-gui.rkt")))
          (name . "cc4101-handin")
          (nix-sha256
           .
           "0j6jmy8bhxyx8xv0ampd2ckic7h908i9h44y64i164fi3m9xxbra")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:no-tag: . #t)
                   (author:etanter@dcc.uchile.cl . #t)
                   (author:ifigueroap@gmail.com . #t)
                   (ring:1 . #t)))
          (source . "github://github.com/pleiad/cc4101-handin-client/master")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "4baadf45f07a1d79d1d2213356e1e60a72092242")
                          (source
                           .
                           "github://github.com/pleiad/cc4101-handin-client/master")
                          (source_url
                           .
                           "http://github.com/pleiad/cc4101-handin-client/tree/master")))))))
 ("ccnum"
  .
  #hasheq((author . "neil@neilvandyke.org")
          (authors . ("neil@neilvandyke.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "ccnum" "doc/ccnum@ccnum/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/ccnum.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/ccnum.txt")))
          (checksum . "6a9e1802743086bb53c086d9e2b093849cd11e3b")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base" "mcfly" "racket-doc" "scribble-lib" "overeasy"))
          (dependency-names
           .
           ("base" "mcfly" "racket-doc" "scribble-lib" "overeasy"))
          (description . "Credit Card Number Utilities")
          (implies . ())
          (last-checked . 1557339506)
          (last-edit . 1456636390)
          (last-updated . 1502812287)
          (modules . ((lib "ccnum/main.rkt") (lib "ccnum/ccnum.scrbl")))
          (name . "ccnum")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:neil@neilvandyke.org . #t)
                   (finance . #t)
                   (ring:1 . #t)))
          (source . "http://www.neilvandyke.org/racket/ccnum.zip")
          (tags . ("finance"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "6a9e1802743086bb53c086d9e2b093849cd11e3b")
                          (source
                           .
                           "http://www.neilvandyke.org/racket/ccnum.zip")
                          (source_url
                           .
                           "http://www.neilvandyke.org/racket/ccnum.zip")))))))
 ("cext-lib"
  .
  #hash((author . "mflatt@racket-lang.org")
        (checksum . "2b7b132748f4a5f08823a8c06b37dac6f1577b25")
        (dependencies . ("base" "compiler-lib" "dynext-lib" "scheme-lib"))
        (dependency-names . ("base" "compiler-lib" "dynext-lib" "scheme-lib"))
        (description . "mflatt@racket-lang.org")
        (modules . ())
        (name . "cext-lib")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/cext-lib.zip")
        (tags . ())))
 ("chain-module-begin"
  .
  #hasheq((author . "georges.duperon@gmail.com")
          (authors . ("georges.duperon@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "chain-module-begin"
                    "doc/chain-module-begin@chain-module-begin/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/chain-module-begin.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/chain-module-begin.txt")))
          (checksum . "b297d9453a600da9a8ebac4425fdf137aca45d04")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base" "rackunit-lib" "debug-scopes" "scribble-lib" "racket-doc"))
          (dependency-names
           .
           ("base" "rackunit-lib" "debug-scopes" "scribble-lib" "racket-doc"))
          (description
           .
           "Helper to define meta-languages which can chain-call other languages. Status: Experimental (no backwards compatibility).")
          (implies . ())
          (last-checked . 1557339507)
          (last-edit . 1501079090)
          (last-updated . 1556146965)
          (modules
           .
           ((lib "chain-module-begin/main.rkt")
            (lib "chain-module-begin/scribblings/chain-module-begin.scrbl")))
          (name . "chain-module-begin")
          (nix-sha256
           .
           "14x2n6zcj3phfmnq0k3a1ghaa7jcz7fxarsxm78ppjy45bwchwz6")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:georges.duperon@gmail.com . #t)
                   (experimental . #t)
                   (lang-extension . #t)
                   (ring:1 . #t)
                   (syntax . #t)))
          (source . "https://github.com/jsmaniac/chain-module-begin.git")
          (tags . ("experimental" "lang-extension" "syntax"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "b297d9453a600da9a8ebac4425fdf137aca45d04")
                          (source
                           .
                           "https://github.com/jsmaniac/chain-module-begin.git")
                          (source_url
                           .
                           "https://github.com/jsmaniac/chain-module-begin.git")))))))
 ("charterm"
  .
  #hasheq((author . "neil@neilvandyke.org")
          (authors . ("neil@neilvandyke.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "charterm" "doc/charterm@charterm/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/charterm.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/charterm.txt")))
          (checksum . "71dc10e9e39babd5afb6af62098d6b54ae7bfe8e")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "mcfly" "racket-doc" "scribble-lib"))
          (dependency-names . ("base" "mcfly" "racket-doc" "scribble-lib"))
          (description . "Character-cell Terminal Interface")
          (implies . ())
          (last-checked . 1557339507)
          (last-edit . 1456463121)
          (last-updated . 1502812288)
          (modules
           .
           ((lib "charterm/charterm.scrbl")
            (lib "charterm/demo.rkt")
            (lib "charterm/main.rkt")))
          (name . "charterm")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:neil@neilvandyke.org . #t)
                   (ring:1 . #t)
                   (terminal . #t)))
          (source . "http://www.neilvandyke.org/racket/charterm.zip")
          (tags . ("terminal"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "71dc10e9e39babd5afb6af62098d6b54ae7bfe8e")
                          (source
                           .
                           "http://www.neilvandyke.org/racket/charterm.zip")
                          (source_url
                           .
                           "http://www.neilvandyke.org/racket/charterm.zip")))))))
 ("check-sexp-equal"
  .
  #hasheq((author . "zenspider@gmail.com")
          (authors . ("zenspider@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "check-sexp-equal"
                    "doc/check-sexp-equal@check-sexp-equal/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/check-sexp-equal.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/check-sexp-equal.txt")))
          (checksum . "5c90361aa4b6f11333b39620cfd0062cdaa062dc")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           (("sexp-diff" #:version "0.1")
            "base"
            "rackunit-lib"
            "racket-doc"
            "scribble-lib"
            "racket-doc"))
          (dependency-names
           .
           ("sexp-diff"
            "base"
            "rackunit-lib"
            "racket-doc"
            "scribble-lib"
            "racket-doc"))
          (description
           .
           "A simple extension for rackunit that provides s-expression diffs on failure.")
          (implies . ())
          (last-checked . 1557339507)
          (last-edit . 1502757399)
          (last-updated . 1502757399)
          (modules
           .
           ((lib "check-sexp-equal/check-sexp-equal.scrbl")
            (lib "check-sexp-equal/main.rkt")))
          (name . "check-sexp-equal")
          (nix-sha256
           .
           "1nr4qcvsgz2shp9hh8231b26z5573ya7b56n8c4965siknih4q28")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:zenspider@gmail.com . #t)
                   (ring:1 . #t)
                   (testing . #t)))
          (source . "git://github.com/zenspider/check-sexp-equal")
          (tags . ("testing"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "5c90361aa4b6f11333b39620cfd0062cdaa062dc")
                          (source
                           .
                           "git://github.com/zenspider/check-sexp-equal")
                          (source_url
                           .
                           "http://github.com/zenspider/check-sexp-equal/tree/master")))))))
 ("chez-runner"
  .
  #hasheq((author . "1227847322@qq.com")
          (authors . ("1227847322@qq.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/chez-runner.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/chez-runner.txt")))
          (checksum . "a999587b41ff7c1da3a3fe2bb95fd8483ef77905")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "gui-lib"
            "drracket"
            "rackunit-lib"
            "scribble-lib"
            "pict-lib"))
          (dependency-names
           .
           ("base"
            "gui-lib"
            "drracket"
            "rackunit-lib"
            "scribble-lib"
            "pict-lib"))
          (description . "run chez scheme programs in drracket")
          (implies . ())
          (last-checked . 1557339507)
          (last-edit . 1541144385)
          (last-updated . 1541144385)
          (modules . ((lib "chez-runner/tool.rkt")))
          (name . "chez-runner")
          (nix-sha256
           .
           "0l1l3f2sq70fis8r27saip7kiyll9i5dx9gk02vyag1i7ai792nf")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:1227847322@qq.com . #t)
                   (chez-scheme . #t)
                   (drracket . #t)
                   (plugin . #t)
                   (ring:2 . #t)
                   (scheme . #t)))
          (source . "https://github.com/Syntacticlosure/chez-runner.git")
          (tags . ("chez-scheme" "drracket" "plugin" "scheme"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "a999587b41ff7c1da3a3fe2bb95fd8483ef77905")
                          (source
                           .
                           "https://github.com/Syntacticlosure/chez-runner.git")
                          (source_url
                           .
                           "https://github.com/Syntacticlosure/chez-runner.git")))))))
 ("chive"
  .
  #hasheq((author . "yanyingwang1@gmail.com")
          (authors . ("yanyingwang1@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "chive" "doc/chive@chive/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/chive.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/chive.txt")))
          (checksum . "d612eb2864cd0fe2babc80016534c1b930631f2c")
          (checksum-error . #f)
          (conflicts . ())
          (date-added . 1553752760)
          (dependencies
           .
           ("base"
            "srfi"
            "at-exp-lib"
            "net-lib"
            "scribble-lib"
            "racket-doc"
            "rackunit-lib"))
          (dependency-names
           .
           ("base"
            "srfi"
            "at-exp-lib"
            "net-lib"
            "scribble-lib"
            "racket-doc"
            "rackunit-lib"))
          (description
           .
           "an extended scheme library to easily cook practical application")
          (implies . ())
          (last-checked . 1557339508)
          (last-edit . 1557333733)
          (last-updated . 1557305676)
          (modules
           .
           ((lib "chive/base64.rkt")
            (lib "chive/main.rkt")
            (lib "chive/port.rkt")
            (lib "chive/smtp.rkt")
            (lib "chive/time.rkt")
            (lib "chive/scribblings/chive.scrbl")
            (lib "chive/system.rkt")))
          (name . "chive")
          (nix-sha256
           .
           "18zkvhz1w1l7zgvm1gamamsrcmqk1cyynw04z420b1qvbgbk0r76")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:yanyingwang1@gmail.com . #t)
                   (base64 . #t)
                   (chive . #t)
                   (date . #t)
                   (port . #t)
                   (ring:2 . #t)
                   (smtp . #t)
                   (system . #t)
                   (time . #t)))
          (source
           .
           "https://gitlab.com/yanyingwang/chive.git#d612eb2864cd0fe2babc80016534c1b930631f2c")
          (tags . ("base64" "chive" "date" "port" "smtp" "system" "time"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "d612eb2864cd0fe2babc80016534c1b930631f2c")
                          (source
                           .
                           "https://gitlab.com/yanyingwang/chive.git#d612eb2864cd0fe2babc80016534c1b930631f2c")
                          (source_url
                           .
                           "https://gitlab.com/yanyingwang/chive.git#d612eb2864cd0fe2babc80016534c1b930631f2c")))))))
 ("chk"
  .
  #hasheq((author . "jay.mccarthy@gmail.com")
          (authors . ("jay.mccarthy@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . "server/built/deps/chk.txt")
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/chk.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/chk.txt")))
          (checksum . "be74d7bad039141c1c142c0590dead552445b260")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("chk-lib" "chk-doc" "chk-test"))
          (dependency-names . ("chk-lib" "chk-doc" "chk-test"))
          (description . "a minimal tester")
          (implies . ("chk-lib" "chk-doc" "chk-test"))
          (last-checked . 1557339508)
          (last-edit . 1505750896)
          (last-updated . 1546726241)
          (modules . ())
          (name . "chk")
          (nix-sha256
           .
           "052cf4w7xgq2y4kbmvb5pqn3pifmjhw1qg0451x9sp02ac66ghd0")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-dep-fail: . #t)
                   (:build-success: . #t)
                   (author:jay.mccarthy@gmail.com . #t)
                   (ring:1 . #t)
                   (testing . #t)))
          (source . "git://github.com/jeapostrophe/chk?path=chk")
          (tags . ("testing"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "be74d7bad039141c1c142c0590dead552445b260")
                          (source
                           .
                           "git://github.com/jeapostrophe/chk?path=chk")
                          (source_url
                           .
                           "http://github.com/jeapostrophe/chk/tree/master?path=chk")))))))
 ("chk-doc"
  .
  #hasheq((author . "jay.mccarthy@gmail.com")
          (authors . ("jay.mccarthy@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "chk" "doc/chk@chk-doc/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/chk-doc.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/chk-doc.txt")))
          (checksum . "be74d7bad039141c1c142c0590dead552445b260")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base" "sandbox-lib" "scribble-lib" "racket-doc" "chk-lib"))
          (dependency-names
           .
           ("base" "sandbox-lib" "scribble-lib" "racket-doc" "chk-lib"))
          (description . "a minimal tester")
          (implies . ())
          (last-checked . 1557339508)
          (last-edit . 1505750939)
          (last-updated . 1546726242)
          (modules . ((lib "chk/chk.scrbl")))
          (name . "chk-doc")
          (nix-sha256
           .
           "052cf4w7xgq2y4kbmvb5pqn3pifmjhw1qg0451x9sp02ac66ghd0")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:jay.mccarthy@gmail.com . #t)
                   (ring:1 . #t)
                   (testing . #t)))
          (source . "git://github.com/jeapostrophe/chk?path=chk-doc")
          (tags . ("testing"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "be74d7bad039141c1c142c0590dead552445b260")
                          (source
                           .
                           "git://github.com/jeapostrophe/chk?path=chk-doc")
                          (source_url
                           .
                           "http://github.com/jeapostrophe/chk/tree/master?path=chk-doc")))))))
 ("chk-lib"
  .
  #hasheq((author . "jay.mccarthy@gmail.com")
          (authors . ("jay.mccarthy@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/chk-lib.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/chk-lib.txt")))
          (checksum . "be74d7bad039141c1c142c0590dead552445b260")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("testing-util-lib" "base"))
          (dependency-names . ("testing-util-lib" "base"))
          (description . "a minimal tester")
          (implies . ())
          (last-checked . 1557339508)
          (last-edit . 1505750918)
          (last-updated . 1546726242)
          (modules . ((lib "chk/main.rkt")))
          (name . "chk-lib")
          (nix-sha256
           .
           "052cf4w7xgq2y4kbmvb5pqn3pifmjhw1qg0451x9sp02ac66ghd0")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:jay.mccarthy@gmail.com . #t)
                   (ring:1 . #t)
                   (testing . #t)))
          (source . "git://github.com/jeapostrophe/chk?path=chk-lib")
          (tags . ("testing"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "be74d7bad039141c1c142c0590dead552445b260")
                          (source
                           .
                           "git://github.com/jeapostrophe/chk?path=chk-lib")
                          (source_url
                           .
                           "http://github.com/jeapostrophe/chk/tree/master?path=chk-lib")))))))
 ("chk-test"
  .
  #hasheq((author . "jay.mccarthy@gmail.com")
          (authors . ("jay.mccarthy@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . "server/built/deps/chk-test.txt")
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/chk-test.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/chk-test.txt")))
          (checksum . "be74d7bad039141c1c142c0590dead552445b260")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("chk-lib" ("testing-util-lib" #:version "1.1") "base"))
          (dependency-names . ("chk-lib" "testing-util-lib" "base"))
          (description . "a minimal tester")
          (implies . ())
          (last-checked . 1557339508)
          (last-edit . 1505750960)
          (last-updated . 1546726242)
          (modules . ((lib "chk/test-args.rkt") (lib "chk/test.rkt")))
          (name . "chk-test")
          (nix-sha256
           .
           "052cf4w7xgq2y4kbmvb5pqn3pifmjhw1qg0451x9sp02ac66ghd0")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-dep-fail: . #t)
                   (:build-success: . #t)
                   (author:jay.mccarthy@gmail.com . #t)
                   (ring:1 . #t)
                   (testing . #t)))
          (source . "git://github.com/jeapostrophe/chk?path=chk-test")
          (tags . ("testing"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "be74d7bad039141c1c142c0590dead552445b260")
                          (source
                           .
                           "git://github.com/jeapostrophe/chk?path=chk-test")
                          (source_url
                           .
                           "http://github.com/jeapostrophe/chk/tree/master?path=chk-test")))))))
 ("choose-lang"
  .
  #hasheq((author . "types@ccs.neu.edu")
          (authors . ("types@ccs.neu.edu"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "choose-lang"
                    "doc/choose-lang@choose-lang/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/choose-lang.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/choose-lang.txt")))
          (checksum . "75ba0bb43fbe0e5bf8b5a667aa8dad4703bcf82d")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "rackunit-lib"
            "scribble-lib"
            "racket-doc"
            "scribble-abbrevs"
            "typed-racket-doc"))
          (dependency-names
           .
           ("base"
            "rackunit-lib"
            "scribble-lib"
            "racket-doc"
            "scribble-abbrevs"
            "typed-racket-doc"))
          (description . "Pick #lang at read-time")
          (implies . ())
          (last-checked . 1557339508)
          (last-edit . 1538539646)
          (last-updated . 1552748563)
          (modules
           .
           ((lib "choose-lang/main.rkt")
            (lib "choose-lang/lang/reader.rkt")
            (lib "choose-lang/scribblings/choose-lang.scrbl")))
          (name . "choose-lang")
          (nix-sha256
           .
           "1y0wvfxbiv3v9v7qkfksxn9m46cccvlqr4v5kxd5p6rd4nqwjwin")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:types@ccs.neu.edu . #t)
                   (lang-extension . #t)
                   (ring:2 . #t)))
          (source . "https://gitlab.com/bengreenman/choose-lang.git")
          (tags . ("lang-extension"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "75ba0bb43fbe0e5bf8b5a667aa8dad4703bcf82d")
                          (source
                           .
                           "https://gitlab.com/bengreenman/choose-lang.git")
                          (source_url
                           .
                           "https://gitlab.com/bengreenman/choose-lang.git")))))))
 ("choose-out"
  .
  #hasheq((author . "types@ccs.neu.edu")
          (authors . ("types@ccs.neu.edu"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "choose-out"
                    "doc/choose-out@choose-out/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/choose-out.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/choose-out.txt")))
          (checksum . "35b1613ad8136dd1415c1224f5dfd11b39c0ff93")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "rackunit-lib"
            "scribble-lib"
            "racket-doc"
            "scribble-abbrevs"
            "typed-racket-doc"))
          (dependency-names
           .
           ("base"
            "rackunit-lib"
            "scribble-lib"
            "racket-doc"
            "scribble-abbrevs"
            "typed-racket-doc"))
          (description
           .
           "Conditional provide (choose during expansion of importing module)")
          (implies . ())
          (last-checked . 1557339509)
          (last-edit . 1533920133)
          (last-updated . 1552748565)
          (modules
           .
           ((lib "choose-out/private/renaming.rkt")
            (lib "choose-out/main.rkt")
            (lib "choose-out/test/trustme/server.rkt")
            (lib "choose-out/renaming.rkt")
            (lib "choose-out/scribblings/choose-out.scrbl")
            (lib "choose-out/private/choose-out.rkt")
            (lib "choose-out/test/trustme/client-untrust.rkt")
            (lib "choose-out/test/trustme/client-trustme.rkt")))
          (name . "choose-out")
          (nix-sha256
           .
           "1dg8j829m6y26yjb6jjwqx27ir9fhbbfq911j2icg4x7q1vnavs2")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:types@ccs.neu.edu . #t)
                   (provide . #t)
                   (ring:2 . #t)))
          (source . "https://gitlab.com/bengreenman/choose-out.git")
          (tags . ("provide"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "35b1613ad8136dd1415c1224f5dfd11b39c0ff93")
                          (source
                           .
                           "https://gitlab.com/bengreenman/choose-out.git")
                          (source_url
                           .
                           "https://gitlab.com/bengreenman/choose-out.git")))))))
 ("circuit-playground"
  .
  #hasheq((author . "stephen@thoughtstem.com")
          (authors . ("stephen@thoughtstem.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("salvage"
                    "circuit-playground"
                    "doc/circuit-playground@circuit-playground/index.html")))
                 (failure-log . "server/built/fail/circuit-playground.txt")
                 (min-failure-log . #f)
                 (success-log . #f)
                 (test-failure-log . #f)
                 (test-success-log . #f)))
          (checksum . "755086bdbbc57ab4df7de2315c5f56d85024506c")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ())
          (dependency-names . ())
          (description
           .
           "Language for coding the Circuit Playground Express in Racket.  Compiles Racket code to Python, which runs on a custom version of the Circuit Python firmware.  We use this for educational purposes at ThoughtSTEM.  It may or may not work on your operating system.  I've tested it only on Mac and Linux.   ")
          (implies . ())
          (last-checked . 1557339509)
          (last-edit . 1523473627)
          (last-updated . 1540584804)
          (modules
           .
           ((lib "circuit-playground/api/circuit-python-base.rkt")
            (lib "circuit-playground/racket-demos/loudness-necklace.rkt")
            (lib "circuit-playground/racket-demos/hello-led.rkt")
            (lib "circuit-playground/racket-demos/droids.rkt")
            (lib "circuit-playground/racket-demos/hello-button-down.rkt")
            (lib "circuit-playground/api/circuit-python.rkt")
            (lib "circuit-playground/racket-demos/siren-demo.rkt")
            (lib "circuit-playground/api/output.rkt")
            (lib "circuit-playground/main.rkt")
            (lib "circuit-playground/racket-demos/night-light.rkt")
            (lib "circuit-playground/racket-demos/magic-wand.rkt")
            (lib "circuit-playground/api/sound.rkt")
            (lib "circuit-playground/racket-demos/hello-ir.rkt")
            (lib "circuit-playground/circuit-playground-module.rkt")
            (lib "circuit-playground/api/accel.rkt")
            (lib "circuit-playground/installer.rkt")
            (lib "circuit-playground/racket-demos/servo-hello.rkt")
            (lib "circuit-playground/racket-demos/clap-light.rkt")
            (lib "circuit-playground/api/python.rkt")
            (lib "circuit-playground/racket-demos/jingles.rkt")
            (lib "circuit-playground/api/rgb_helper.rkt")
            (lib "circuit-playground/circuit-playground.scrbl")
            (lib "circuit-playground/racket-demos/blaster.rkt")
            (lib "circuit-playground/api/ir.rkt")
            (lib "circuit-playground/api/servo.rkt")
            (lib "circuit-playground/racket-demos/lightsaber.rkt")
            (lib "circuit-playground/racket-demos/death-star.rkt")
            (lib "circuit-playground/api/lights.rkt")
            (lib "circuit-playground/racket-demos/hot-potato.rkt")
            (lib "circuit-playground/racket-demos/hello-touch-pad.rkt")
            (lib "circuit-playground/racket-demos/hello-world.rkt")
            (lib "circuit-playground/api/input.rkt")))
          (name . "circuit-playground")
          (nix-sha256
           .
           "0wymqyqp77j59fs8vbsmi30a0dh55azxm195jncy5ijvwsysp2jy")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-fail: . #t)
                   (:docs-error: . #t)
                   (:docs: . #t)
                   (author:stephen@thoughtstem.com . #t)
                   (ring:2 . #t)
                   (robotics . #t)))
          (source . "https://github.com/thoughtstem/circuit-playground.git")
          (tags . ("robotics"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "755086bdbbc57ab4df7de2315c5f56d85024506c")
                          (source
                           .
                           "https://github.com/thoughtstem/circuit-playground.git")
                          (source_url
                           .
                           "https://github.com/thoughtstem/circuit-playground.git")))))))
 ("clang"
  .
  #hasheq((author . "juzhenliang@gmail.com")
          (authors . ("juzhenliang@gmail.com"))
          (build
           .
           #hash((conflicts-log . "conflicts.txt")
                 (dep-failure-log . #f)
                 (docs . (("none" "c")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/clang.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/clang.txt")))
          (checksum . "9c8b0c9e4583b181bfc68d7dcf9e31cddaa4ad37")
          (checksum-error . #f)
          (conflicts . ())
          (date-added . 1550759669)
          (dependencies
           .
           ("base"
            "graphics"
            "typed-racket-lib"
            "typed-racket-more"
            "scribble-lib"
            "racket-doc"))
          (dependency-names
           .
           ("base"
            "graphics"
            "typed-racket-lib"
            "typed-racket-more"
            "scribble-lib"
            "racket-doc"))
          (description . "Toolbox for C family in Typed Racket")
          (implies . ())
          (last-checked . 1557339509)
          (last-edit . 1550759669)
          (last-updated . 1550764137)
          (modules . ((lib "c/tamer/c.scrbl")))
          (name . "clang")
          (nix-sha256
           .
           "0m8lgckkis4pb1p7hg1yz5ncygjmzyc8r3si47iq6fs244h5nmbs")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-conflicts: . #t)
                   (:build-success: . #t)
                   (:docs-error: . #t)
                   (C . #t)
                   (author:juzhenliang@gmail.com . #t)
                   (ffi . #t)
                   (parser . #t)
                   (ring:1 . #t)
                   (typed-racket . #t)
                   (unsafe . #t)
                   (unstable . #t)))
          (source . "https://github.com/wargrey/clang.git")
          (tags . ("C" "ffi" "parser" "typed-racket" "unsafe" "unstable"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "9c8b0c9e4583b181bfc68d7dcf9e31cddaa4ad37")
                          (source . "https://github.com/wargrey/clang.git")
                          (source_url
                           .
                           "https://github.com/wargrey/clang.git")))))))
 ("class-iop"
  .
  #hash((author . "ryanc@racket-lang.org")
        (authors . ("ryanc@racket-lang.org"))
        (build
         .
         #hash((conflicts-log . #f)
               (dep-failure-log . #f)
               (docs . ())
               (failure-log . #f)
               (min-failure-log . #f)
               (success-log . "server/built/install/class-iop.txt")
               (test-failure-log . #f)
               (test-success-log
                .
                "server/built/test-success/class-iop.txt")))
        (checksum . "a4fd4beea6d9c8786a108ac12c997097b90191a9")
        (checksum-error . #f)
        (conflicts . ())
        (dependencies . ("class-iop-lib" "class-iop-doc"))
        (dependency-names . ("class-iop-lib" "class-iop-doc"))
        (description . "Interface-oriented programming for classes")
        (implies . ())
        (last-checked . 1557339509)
        (last-edit . 1438195663)
        (last-updated . 1502812290)
        (modules . ())
        (name . "class-iop")
        (nix-sha256 . "105xjqhv6hiidlgp7f2bjqbkzn7h2q11plmhx3x6s8b8whjsgxa0")
        (ring . 0)
        (search-terms
         .
         #hasheq((:build-success: . #t)
                 (author:ryanc@racket-lang.org . #t)
                 (main-distribution . #t)
                 (ring:0 . #t)))
        (source . "git://github.com/racket/class-iop?path=class-iop")
        (tags . ("main-distribution"))
        (versions
         .
         #hash((default
                .
                #hasheq((checksum
                         .
                         "a4fd4beea6d9c8786a108ac12c997097b90191a9")
                        (source
                         .
                         "git://github.com/racket/class-iop?path=class-iop")
                        (source_url
                         .
                         "http://github.com/racket/class-iop/tree/master?path=class-iop")))
               ("6.2"
                .
                #hasheq((checksum
                         .
                         "9f098dddde7f217879070816090c1e8e74d49432")
                        (source
                         .
                         "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")
                        (source_url
                         .
                         "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")))))))
 ("class-iop-doc"
  .
  #hash((author . "ryanc@racket-lang.org")
        (authors . ("ryanc@racket-lang.org"))
        (build
         .
         #hash((conflicts-log . #f)
               (dep-failure-log . #f)
               (docs
                .
                (("main"
                  "class-iop"
                  "doc/class-iop@class-iop-doc/index.html")))
               (failure-log . #f)
               (min-failure-log . #f)
               (success-log . "server/built/install/class-iop-doc.txt")
               (test-failure-log . #f)
               (test-success-log
                .
                "server/built/test-success/class-iop-doc.txt")))
        (checksum . "a4fd4beea6d9c8786a108ac12c997097b90191a9")
        (checksum-error . #f)
        (conflicts . ())
        (dependencies
         .
         (("base" #:version "6.2.900.6")
          "class-iop-lib"
          "scribble-lib"
          "racket-doc"))
        (dependency-names
         .
         ("base" "class-iop-lib" "scribble-lib" "racket-doc"))
        (description . "Documentation for \"class-iop\"")
        (implies . ())
        (last-checked . 1557339510)
        (last-edit . 1438195663)
        (last-updated . 1502812290)
        (modules . ((lib "scribblings/iop/class-iop.scrbl")))
        (name . "class-iop-doc")
        (nix-sha256 . "105xjqhv6hiidlgp7f2bjqbkzn7h2q11plmhx3x6s8b8whjsgxa0")
        (ring . 0)
        (search-terms
         .
         #hasheq((:build-success: . #t)
                 (:docs: . #t)
                 (author:ryanc@racket-lang.org . #t)
                 (main-distribution . #t)
                 (ring:0 . #t)))
        (source . "git://github.com/racket/class-iop?path=class-iop-doc")
        (tags . ("main-distribution"))
        (versions
         .
         #hash((default
                .
                #hasheq((checksum
                         .
                         "a4fd4beea6d9c8786a108ac12c997097b90191a9")
                        (source
                         .
                         "git://github.com/racket/class-iop?path=class-iop-doc")
                        (source_url
                         .
                         "http://github.com/racket/class-iop/tree/master?path=class-iop-doc")))
               ("6.2"
                .
                #hasheq((checksum
                         .
                         "9f098dddde7f217879070816090c1e8e74d49432")
                        (source
                         .
                         "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")
                        (source_url
                         .
                         "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")))))))
 ("class-iop-lib"
  .
  #hash((author . "ryanc@racket-lang.org")
        (checksum . "c02c07a9cbb598eca9a3bbb7675317e60a922695")
        (dependencies . (("base" #:version "6.2.900.6")))
        (dependency-names . ("base"))
        (description . "ryanc@racket-lang.org")
        (modules . ())
        (name . "class-iop-lib")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/class-iop-lib.zip")
        (tags . ())))
 ("classicthesis-scribble"
  .
  #hasheq((author . "stamourv@racket-lang.org")
          (authors . ("stamourv@racket-lang.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log
                  .
                  "server/built/install/classicthesis-scribble.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/classicthesis-scribble.txt")))
          (checksum . "e6c3f2be24654cbf0b17d9027737c2d3eb1cddd1")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "scribble-lib" "at-exp-lib"))
          (dependency-names . ("base" "scribble-lib" "at-exp-lib"))
          (description
           .
           "Scribble wrapper for the classicthesis LaTeX style.")
          (implies . ())
          (last-checked . 1557339510)
          (last-edit . 1420138021)
          (last-updated . 1502812291)
          (modules
           .
           ((lib "classicthesis/include/lang/reader.rkt")
            (lib "classicthesis/test-part.scrbl")
            (lib "classicthesis/test-acknowledgements.scrbl")
            (lib "classicthesis/include.rkt")
            (lib "classicthesis/test.scrbl")
            (lib "classicthesis/test-chapter.scrbl")
            (lib "classicthesis/lang.rkt")
            (lib "classicthesis/test-abstract.scrbl")
            (lib "classicthesis/lang/reader.rkt")
            (lib "classicthesis/test-bib.rkt")
            (lib "classicthesis/test-section.scrbl")))
          (name . "classicthesis-scribble")
          (nix-sha256
           .
           "1hm35h8c71bi3b5n9ysry11n9adz3zzdrb4iqhvivf8hwi8ncxcf")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:stamourv@racket-lang.org . #t)
                   (ring:1 . #t)
                   (scribble . #t)))
          (source . "git://github.com/stamourv/classicthesis-scribble")
          (tags . ("scribble"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "e6c3f2be24654cbf0b17d9027737c2d3eb1cddd1")
                          (source
                           .
                           "git://github.com/stamourv/classicthesis-scribble")
                          (source_url
                           .
                           "http://github.com/stamourv/classicthesis-scribble/tree/master")))))))
 ("cldr-bcp47"
  .
  #hasheq((author . "zeppieri@gmail.com")
          (authors . ("zeppieri@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "cldr-bcp47-timezone"
                    "doc/cldr-bcp47-timezone@cldr-bcp47/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/cldr-bcp47.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/cldr-bcp47.txt")))
          (checksum . "823fc1a530f1a0ec4de59f5454c1a17f20c5a5d6")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "cldr-core" "scribble-lib" "racket-doc"))
          (dependency-names
           .
           ("base" "cldr-core" "scribble-lib" "racket-doc"))
          (description . "API for BCP47 extensions to CLDR")
          (implies . ())
          (last-checked . 1557339510)
          (last-edit . 1427073088)
          (last-updated . 1502812291)
          (modules
           .
           ((lib "cldr/bcp47/timezone.rkt")
            (lib "cldr/bcp47/scribblings/cldr-bcp47-timezone.scrbl")))
          (name . "cldr-bcp47")
          (nix-sha256
           .
           "0l06a7nv7hylwsjw9i5yzjyswggvq7g64g09wdbw7m8hhbinm3k1")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:zeppieri@gmail.com . #t)
                   (cldr . #t)
                   (l10n . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/97jaz/cldr-bcp47")
          (tags . ("cldr" "l10n"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "823fc1a530f1a0ec4de59f5454c1a17f20c5a5d6")
                          (source . "git://github.com/97jaz/cldr-bcp47")
                          (source_url
                           .
                           "http://github.com/97jaz/cldr-bcp47/tree/master")))))))
 ("cldr-core"
  .
  #hasheq((author . "zeppieri@gmail.com")
          (authors . ("zeppieri@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "cldr-core" "doc/cldr-core@cldr-core/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/cldr-core.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/cldr-core.txt")))
          (checksum . "8a4d6de47ea572bfcee8d4df498be893906f52de")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "memoize" "racket-doc" "scribble-lib"))
          (dependency-names . ("base" "memoize" "racket-doc" "scribble-lib"))
          (description . "API for cldr-core data set")
          (implies . ())
          (last-checked . 1557339510)
          (last-edit . 1426995002)
          (last-updated . 1502812291)
          (modules
           .
           ((lib "cldr/file.rkt")
            (lib "cldr/core.rkt")
            (lib "cldr/likely-subtags.rkt")
            (lib "cldr/scribblings/cldr-core.scrbl")))
          (name . "cldr-core")
          (nix-sha256
           .
           "12ybng7sp57mhw96z3vpsx0zk3dfq87khxadwxril4pmj5jg98pn")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:zeppieri@gmail.com . #t)
                   (cldr . #t)
                   (l10n . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/97jaz/cldr-core")
          (tags . ("cldr" "l10n"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "8a4d6de47ea572bfcee8d4df498be893906f52de")
                          (source . "git://github.com/97jaz/cldr-core")
                          (source_url
                           .
                           "http://github.com/97jaz/cldr-core/tree/master")))))))
 ("cldr-dates-modern"
  .
  #hasheq((author . "zeppieri@gmail.com")
          (authors . ("zeppieri@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "cldr-dates-modern"
                    "doc/cldr-dates-modern@cldr-dates-modern/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/cldr-dates-modern.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/cldr-dates-modern.txt")))
          (checksum . "c36282917247f6a069e553535f4619007cd7b6e5")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "cldr-core" "scribble-lib" "racket-doc"))
          (dependency-names
           .
           ("base" "cldr-core" "scribble-lib" "racket-doc"))
          (description . "API for cldr-dates-modern data set")
          (implies . ())
          (last-checked . 1557339510)
          (last-edit . 1426994487)
          (last-updated . 1502812292)
          (modules
           .
           ((lib "cldr/scribblings/cldr-dates-modern.scrbl")
            (lib "cldr/dates-modern.rkt")))
          (name . "cldr-dates-modern")
          (nix-sha256
           .
           "1cvb57xj9g75kqb3laz35jknj79894yji9axwzyp7qrrpfwzc83g")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:zeppieri@gmail.com . #t)
                   (cldr . #t)
                   (l10n . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/97jaz/cldr-dates-modern")
          (tags . ("cldr" "l10n"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "c36282917247f6a069e553535f4619007cd7b6e5")
                          (source
                           .
                           "git://github.com/97jaz/cldr-dates-modern")
                          (source_url
                           .
                           "http://github.com/97jaz/cldr-dates-modern/tree/master")))))))
 ("cldr-localenames-modern"
  .
  #hasheq((author . "zeppieri@gmail.com")
          (authors . ("zeppieri@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "cldr-localenames-modern"
                    "doc/cldr-localenames-modern@cldr-localenames-modern/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log
                  .
                  "server/built/install/cldr-localenames-modern.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/cldr-localenames-modern.txt")))
          (checksum . "f9f3e8d9245764a309542816acf40fe147b473a3")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "cldr-core" "scribble-lib" "racket-doc"))
          (dependency-names
           .
           ("base" "cldr-core" "scribble-lib" "racket-doc"))
          (description . "API for cldr-localenames-modern data set")
          (implies . ())
          (last-checked . 1557339510)
          (last-edit . 1426994538)
          (last-updated . 1502812293)
          (modules
           .
           ((lib "cldr/scribblings/cldr-localenames-modern.scrbl")
            (lib "cldr/localenames-modern.rkt")))
          (name . "cldr-localenames-modern")
          (nix-sha256
           .
           "1a54rja5lhz9x9mz55pvicz2ppidvapqf34qf2i9p9959fg5z7bx")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:zeppieri@gmail.com . #t)
                   (cldr . #t)
                   (l10n . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/97jaz/cldr-localenames-modern")
          (tags . ("cldr" "l10n"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "f9f3e8d9245764a309542816acf40fe147b473a3")
                          (source
                           .
                           "git://github.com/97jaz/cldr-localenames-modern")
                          (source_url
                           .
                           "http://github.com/97jaz/cldr-localenames-modern/tree/master")))))))
 ("cldr-numbers-modern"
  .
  #hasheq((author . "zeppieri@gmail.com")
          (authors . ("zeppieri@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "cldr-numbers-modern"
                    "doc/cldr-numbers-modern@cldr-numbers-modern/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log
                  .
                  "server/built/install/cldr-numbers-modern.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/cldr-numbers-modern.txt")))
          (checksum . "625428099b3f8cd264955a283dddc176a6080ba1")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "cldr-core" "scribble-lib" "racket-doc"))
          (dependency-names
           .
           ("base" "cldr-core" "scribble-lib" "racket-doc"))
          (description . "API for cldr-numbers-modern data set")
          (implies . ())
          (last-checked . 1557339510)
          (last-edit . 1426996138)
          (last-updated . 1502812295)
          (modules
           .
           ((lib "cldr/numbers-modern.rkt")
            (lib "cldr/scribblings/cldr-numbers-modern.scrbl")))
          (name . "cldr-numbers-modern")
          (nix-sha256
           .
           "159ckjnyx6f7dajg6w5q4cd5gzfrdsbp9xhc6spgrj8jidvvadj4")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:zeppieri@gmail.com . #t)
                   (cldr . #t)
                   (l10n . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/97jaz/cldr-numbers-modern")
          (tags . ("cldr" "l10n"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "625428099b3f8cd264955a283dddc176a6080ba1")
                          (source
                           .
                           "git://github.com/97jaz/cldr-numbers-modern")
                          (source_url
                           .
                           "http://github.com/97jaz/cldr-numbers-modern/tree/master")))))))
 ("client-cookies"
  .
  #hasheq((author . "kalimehtar@mail.ru")
          (authors . ("kalimehtar@mail.ru"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/client-cookies.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/client-cookies.txt")))
          (checksum . "ea699f80c4865c71971a73b4cfc444969a633c6c")
          (checksum-error . #f)
          (conflicts . ())
          (date-added . 1556510505)
          (dependencies . ("base"))
          (dependency-names . ("base"))
          (description
           .
           "Client cookies jar for net/url and similar libs.\r\nDeprecated: use net/cookies.")
          (implies . ())
          (last-checked . 1557339510)
          (last-edit . 1556510505)
          (last-updated . 1502812296)
          (modules
           .
           ((lib "client-cookies/main.rkt") (lib "client-cookies/dev.rkt")))
          (name . "client-cookies")
          (nix-sha256
           .
           "0nd16r7cia0hz8qyhc7rfdw6gfl2yam716y2mqq9id1p9b1sj8bl")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:kalimehtar@mail.ru . #t)
                   (deprecated . #t)
                   (net . #t)
                   (ring:1 . #t)
                   (web . #t)))
          (source . "https://github.com/Kalimehtar/client-cookies.git")
          (tags . ("deprecated" "net" "web"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "ea699f80c4865c71971a73b4cfc444969a633c6c")
                          (source
                           .
                           "https://github.com/Kalimehtar/client-cookies.git")
                          (source_url
                           .
                           "https://github.com/Kalimehtar/client-cookies.git")))))))
 ("cmx"
  .
  #hasheq((author . "dedbox@gmail.com")
          (authors . ("dedbox@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "cmx" "doc/cmx@cmx/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/cmx.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/cmx.txt")))
          (checksum . "3591f092f7aac01e5c529d5b82421e321cdda8cb")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "event-lang"
            "draw-lib"
            "pict-lib"
            "racket-doc"
            "rackunit-lib"
            "sandbox-lib"
            "scribble-lib"))
          (dependency-names
           .
           ("base"
            "event-lang"
            "draw-lib"
            "pict-lib"
            "racket-doc"
            "rackunit-lib"
            "sandbox-lib"
            "scribble-lib"))
          (description . "A calculus of mediated exchange")
          (implies . ())
          (last-checked . 1557339510)
          (last-edit . 1530995182)
          (last-updated . 1529343728)
          (modules
           .
           ((lib "cmx/mediator.rkt")
            (lib "cmx/scribblings/cmx.scrbl")
            (lib "cmx/scribblings/diagram.rkt")
            (lib "cmx/main.rkt")))
          (name . "cmx")
          (nix-sha256
           .
           "0x8jplsw9vav3xav2xn8bsfgxqjnppqpla47xcg43rbcy365w77b")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:dedbox@gmail.com . #t)
                   (concurrency . #t)
                   (experimental . #t)
                   (ring:2 . #t)))
          (source . "https://github.com/dedbox/racket-cmx.git")
          (tags . ("concurrency" "experimental"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "3591f092f7aac01e5c529d5b82421e321cdda8cb")
                          (source
                           .
                           "https://github.com/dedbox/racket-cmx.git")
                          (source_url
                           .
                           "https://github.com/dedbox/racket-cmx.git")))))))
 ("collections"
  .
  #hasheq((author . "lexi.lambda@gmail.com")
          (authors . ("lexi.lambda@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/collections.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/collections.txt")))
          (checksum . "5b3ec9b3ea3ca493f3fcda4994b81bc804f29870")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("collections-lib" "collections-doc"))
          (dependency-names . ("collections-lib" "collections-doc"))
          (description . "A generic interface for collections")
          (implies . ("collections-lib" "collections-doc"))
          (last-checked . 1557339510)
          (last-edit . 1475813259)
          (last-updated . 1502812296)
          (modules . ())
          (name . "collections")
          (nix-sha256
           .
           "0vh781q0iw0wv1a741qp7s9havc030p5wahz6vcdhfn9azv00znp")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:no-tag: . #t)
                   (author:lexi.lambda@gmail.com . #t)
                   (ring:1 . #t)))
          (source
           .
           "git://github.com/lexi-lambda/racket-collections?path=collections")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "5b3ec9b3ea3ca493f3fcda4994b81bc804f29870")
                          (source
                           .
                           "git://github.com/lexi-lambda/racket-collections?path=collections")
                          (source_url
                           .
                           "http://github.com/lexi-lambda/racket-collections/tree/master?path=collections")))
                 ("6.2"
                  .
                  #hasheq((checksum
                           .
                           "63a829b7766a05b989e9ad18f32e3b1b29d0bb65")
                          (source
                           .
                           "git://github.com/lexi-lambda/racket-collections#version-exception--6.2")
                          (source_url
                           .
                           "http://github.com/lexi-lambda/racket-collections/tree/master#version-exception--6.2")))
                 ("6.2.1"
                  .
                  #hasheq((checksum
                           .
                           "63a829b7766a05b989e9ad18f32e3b1b29d0bb65")
                          (source
                           .
                           "git://github.com/lexi-lambda/racket-collections#version-exception--6.2")
                          (source_url
                           .
                           "http://github.com/lexi-lambda/racket-collections/tree/master#version-exception--6.2")))))))
 ("collections-doc"
  .
  #hasheq((author . "lexi.lambda@gmail.com")
          (authors . ("lexi.lambda@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "collections"
                    "doc/collections@collections-doc/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/collections-doc.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/collections-doc.txt")))
          (checksum . "5b3ec9b3ea3ca493f3fcda4994b81bc804f29870")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "collections-lib"
            "functional-doc"
            "racket-doc"
            "scribble-lib"))
          (dependency-names
           .
           ("base"
            "collections-lib"
            "functional-doc"
            "racket-doc"
            "scribble-lib"))
          (description . "")
          (implies . ())
          (last-checked . 1557339511)
          (last-edit . 1475261219)
          (last-updated . 1502812297)
          (modules
           .
           ((lib "scribblings/data/collection/collection/reference.scrbl")
            (lib "scribblings/data/collection/collections.scrbl")
            (lib "scribblings/data/collection/collection/experimental.scrbl")
            (lib "scribblings/data/collection/collection/examples.scrbl")
            (lib "scribblings/data/collection/private/utils.rkt")
            (lib
             "scribblings/data/collection/collection/introduction.scrbl")))
          (name . "collections-doc")
          (nix-sha256
           .
           "0vh781q0iw0wv1a741qp7s9havc030p5wahz6vcdhfn9azv00znp")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (:no-desc: . #t)
                   (:no-tag: . #t)
                   (author:lexi.lambda@gmail.com . #t)
                   (ring:1 . #t)))
          (source
           .
           "git://github.com/lexi-lambda/racket-collections?path=collections-doc")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "5b3ec9b3ea3ca493f3fcda4994b81bc804f29870")
                          (source
                           .
                           "git://github.com/lexi-lambda/racket-collections?path=collections-doc")
                          (source_url
                           .
                           "http://github.com/lexi-lambda/racket-collections/tree/master?path=collections-doc")))))))
 ("collections-lens"
  .
  #hasheq((author . "lexi.lambda@gmail.com")
          (authors . ("lexi.lambda@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . "server/built/deps/collections-lens.txt")
                 (docs
                  .
                  (("main"
                    "collections-lens"
                    "doc/collections-lens@collections-lens/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/collections-lens.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/collections-lens.txt")))
          (checksum . "73556daf4885558ea6a66a5def8ad668c0fcf4c3")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "collections"
            "curly-fn"
            "lens-common"
            "scribble-lib"
            "at-exp-lib"
            "racket-doc"
            "lens-doc"
            "rackunit-lib"))
          (dependency-names
           .
           ("base"
            "collections"
            "curly-fn"
            "lens-common"
            "scribble-lib"
            "at-exp-lib"
            "racket-doc"
            "lens-doc"
            "rackunit-lib"))
          (description . "Lenses for generic collections")
          (implies . ())
          (last-checked . 1557339511)
          (last-edit . 1471826212)
          (last-updated . 1502812297)
          (modules
           .
           ((lib "data/scribblings/main.scrbl")
            (lib "data/collection/lens.rkt")
            (lib "data/collection/lens/private/sandbox.rkt")))
          (name . "collections-lens")
          (nix-sha256
           .
           "1d5f4swvfzp7h8dxka8i4q77mq8c7xj6laxmchc45f88a4vald8a")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-dep-fail: . #t)
                   (:build-success: . #t)
                   (:docs: . #t)
                   (author:lexi.lambda@gmail.com . #t)
                   (lens . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/lexi-lambda/collections-lens")
          (tags . ("lens"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "73556daf4885558ea6a66a5def8ad668c0fcf4c3")
                          (source
                           .
                           "git://github.com/lexi-lambda/collections-lens")
                          (source_url
                           .
                           "http://github.com/lexi-lambda/collections-lens/tree/master")))))))
 ("collections-lib"
  .
  #hasheq((author . "lexi.lambda@gmail.com")
          (authors . ("lexi.lambda@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/collections-lib.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/collections-lib.txt")))
          (checksum . "5b3ec9b3ea3ca493f3fcda4994b81bc804f29870")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           (("base" #:version "6.3")
            "curly-fn-lib"
            ("functional-lib" #:version "0.3.1")
            "match-plus"
            "static-rename"
            "unstable-list-lib"))
          (dependency-names
           .
           ("base"
            "curly-fn-lib"
            "functional-lib"
            "match-plus"
            "static-rename"
            "unstable-list-lib"))
          (description . "")
          (implies . ())
          (last-checked . 1557339511)
          (last-edit . 1475261199)
          (last-updated . 1502812297)
          (modules
           .
           ((lib "data/collection/private/util.rkt")
            (lib "data/collection/sequence.rkt")
            (lib "data/collection/match.rkt")
            (lib "data/collection/countable.rkt")
            (lib "data/collection.rkt")
            (lib "data/collection/experimental/quasi.rkt")
            (lib "data/collection/private/random-access.rkt")
            (lib "data/collection/indexable.rkt")
            (lib "data/collection/contract.rkt")
            (lib "data/collection/collection.rkt")))
          (name . "collections-lib")
          (nix-sha256
           .
           "0vh781q0iw0wv1a741qp7s9havc030p5wahz6vcdhfn9azv00znp")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:no-desc: . #t)
                   (:no-tag: . #t)
                   (author:lexi.lambda@gmail.com . #t)
                   (ring:1 . #t)))
          (source
           .
           "git://github.com/lexi-lambda/racket-collections?path=collections-lib")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "5b3ec9b3ea3ca493f3fcda4994b81bc804f29870")
                          (source
                           .
                           "git://github.com/lexi-lambda/racket-collections?path=collections-lib")
                          (source_url
                           .
                           "http://github.com/lexi-lambda/racket-collections/tree/master?path=collections-lib")))))))
 ("collections-test"
  .
  #hasheq((author . "lexi.lambda@gmail.com")
          (authors . ("lexi.lambda@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/collections-test.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/collections-test.txt")))
          (checksum . "5b3ec9b3ea3ca493f3fcda4994b81bc804f29870")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base" "collections-lib" "match-plus" "rackunit-lib"))
          (dependency-names
           .
           ("base" "collections-lib" "match-plus" "rackunit-lib"))
          (description . "")
          (implies . ())
          (last-checked . 1557339511)
          (last-edit . 1475261238)
          (last-updated . 1502812298)
          (modules
           .
           ((lib "tests/data/collection/sequence.rkt")
            (lib "tests/data/collection/contract.rkt")
            (lib "tests/data/collection/match.rkt")
            (lib "tests/data/collection/experimental/quasi.rkt")
            (lib "tests/data/collection/collection.rkt")
            (lib "tests/data/collection/dict.rkt")
            (lib "tests/data/collection/sequence-lib.rkt")))
          (name . "collections-test")
          (nix-sha256
           .
           "0vh781q0iw0wv1a741qp7s9havc030p5wahz6vcdhfn9azv00znp")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:no-desc: . #t)
                   (:no-tag: . #t)
                   (author:lexi.lambda@gmail.com . #t)
                   (ring:1 . #t)))
          (source
           .
           "git://github.com/lexi-lambda/racket-collections?path=collections-test")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "5b3ec9b3ea3ca493f3fcda4994b81bc804f29870")
                          (source
                           .
                           "git://github.com/lexi-lambda/racket-collections?path=collections-test")
                          (source_url
                           .
                           "http://github.com/lexi-lambda/racket-collections/tree/master?path=collections-test")))))))
 ("colon-kw"
  .
  #hasheq((author . "alexander@knauth.org")
          (authors . ("alexander@knauth.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "colon-kw" "doc/colon-kw@colon-kw/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/colon-kw.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/colon-kw.txt")))
          (checksum . "a338070d902753978a5a297c737845c013231ea7")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "racket-doc" "rackunit-lib" "scribble-lib"))
          (dependency-names
           .
           ("base" "racket-doc" "rackunit-lib" "scribble-lib"))
          (description . "a lang-extension for writing :kw for #:kw")
          (implies . ())
          (last-checked . 1557339511)
          (last-edit . 1466340908)
          (last-updated . 1527137254)
          (modules
           .
           ((lib "colon-kw/tests/both.rkt")
            (lib "colon-kw/scribblings/colon-kw.scrbl")
            (lib "colon-kw/lang/reader.rkt")
            (lib "colon-kw/tests/test.rkt")
            (lib "kw-colon/reader.rkt")
            (lib "colon-kw/lang/lexer.rkt")
            (lib "kw-colon/tests/test.rkt")
            (lib "kw-colon/lang/reader.rkt")
            (lib "colon-kw/reader.rkt")))
          (name . "colon-kw")
          (nix-sha256
           .
           "098na9q9ql9a2qn7vwzri7rj641p8hkc44v71q6z4sf5flwbz8ws")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:alexander@knauth.org . #t)
                   (keywords . #t)
                   (lang-extension . #t)
                   (ring:1 . #t)
                   (syntax . #t)))
          (source . "git://github.com/AlexKnauth/colon-kw")
          (tags . ("keywords" "lang-extension" "syntax"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "a338070d902753978a5a297c737845c013231ea7")
                          (source . "git://github.com/AlexKnauth/colon-kw")
                          (source_url
                           .
                           "http://github.com/AlexKnauth/colon-kw/tree/master")))))))
 ("colon-match"
  .
  #hasheq((author . "alexander@knauth.org jensaxel@soegaard.net")
          (authors . ("alexander@knauth.org" "jensaxel@soegaard.net"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "colon-match"
                    "doc/colon-match@colon-match/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/colon-match.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/colon-match.txt")))
          (checksum . "7cccb5fdb4e5301ec2b2d38c553ad3050f7d542d")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base" "rackunit-lib" "scribble-lib" "sandbox-lib" "racket-doc"))
          (dependency-names
           .
           ("base" "rackunit-lib" "scribble-lib" "sandbox-lib" "racket-doc"))
          (description
           .
           "match with colon notation, based on discussion with Jens Axel Søgaard on users list ")
          (implies . ())
          (last-checked . 1557339511)
          (last-edit . 1424704309)
          (last-updated . 1510210861)
          (modules
           .
           ((lib "colon-match/main.rkt")
            (lib "colon-match/docs/colon-match.scrbl")))
          (name . "colon-match")
          (nix-sha256
           .
           "1y4axbcwf7lal2b2s6zdp6qal9nlqnm463rzyzjfasiywxkim6zh")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:alexander@knauth.org . #t)
                   (author:jensaxel@soegaard.net . #t)
                   (match . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/AlexKnauth/colon-match")
          (tags . ("match"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "7cccb5fdb4e5301ec2b2d38c553ad3050f7d542d")
                          (source . "git://github.com/AlexKnauth/colon-match")
                          (source_url
                           .
                           "http://github.com/AlexKnauth/colon-match/tree/master")))))))
 ("color-flood"
  .
  #hasheq((author . "laurent.orseau@gmail.com")
          (authors . ("laurent.orseau@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/color-flood.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/color-flood.txt")))
          (checksum . "86f82e312587e982695ef5dd687e247f97bae7f5")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "bazaar" "gui-lib" "rackunit-lib"))
          (dependency-names . ("base" "bazaar" "gui-lib" "rackunit-lib"))
          (description
           .
           "A game where the player must fill the board with colors before its opponent")
          (implies . ())
          (last-checked . 1557339511)
          (last-edit . 1428324507)
          (last-updated . 1516438251)
          (modules
           .
           ((lib "color-flood/color-flood.rkt") (lib "color-flood/main.rkt")))
          (name . "color-flood")
          (nix-sha256
           .
           "14pd2scajv035bmv4q184ja8y12qi096hvjgd44phiimnwgv3816")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:laurent.orseau@gmail.com . #t)
                   (games . #t)
                   (gui . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/Metaxal/color-flood")
          (tags . ("games" "gui"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "86f82e312587e982695ef5dd687e247f97bae7f5")
                          (source . "git://github.com/Metaxal/color-flood")
                          (source_url
                           .
                           "http://github.com/Metaxal/color-flood/tree/master")))))))
 ("colors"
  .
  #hasheq((author . "spencer@florence.io")
          (authors . ("spencer@florence.io"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "colors" "doc/colors@colors/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/colors.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/colors.txt")))
          (checksum . "26f4367e0fc2b8cdcb0f52dcbe35b75af54d4f9e")
          (checksum-error . #f)
          (conflicts . ())
          (date-added . 1551898548)
          (dependencies
           .
           ("base"
            "draw-lib"
            "gui-lib"
            "racket-doc"
            "scribble-lib"
            "debug"
            "rackunit-lib"))
          (dependency-names
           .
           ("base"
            "draw-lib"
            "gui-lib"
            "racket-doc"
            "scribble-lib"
            "debug"
            "rackunit-lib"))
          (description . "A library for HSB colors.")
          (implies . ())
          (last-checked . 1557339511)
          (last-edit . 1551898548)
          (last-updated . 1551898548)
          (modules
           .
           ((lib "colors/hsl.rkt")
            (lib "colors/private/shared.rkt")
            (lib "colors/hsv.rkt")
            (lib "colors/hsi.rkt")
            (lib "colors/scribblings/colors.scrbl")
            (lib "colors/main.rkt")))
          (name . "colors")
          (nix-sha256
           .
           "0648gx95nclwb1ipq0n1dg748d6mbh5mvlwcaakgb8xryi7c5j3k")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:spencer@florence.io . #t)
                   (colorspace . #t)
                   (graphics . #t)
                   (ring:2 . #t)))
          (source . "https://github.com/florence/colors.git")
          (tags . ("colorspace" "graphics"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "26f4367e0fc2b8cdcb0f52dcbe35b75af54d4f9e")
                          (source . "https://github.com/florence/colors.git")
                          (source_url
                           .
                           "https://github.com/florence/colors.git")))))))
 ("com-win32-i386"
  .
  #hash((author . "mflatt@racket-lang.org")
        (checksum . "cdd71c6b13c416274f3b6ff76b9be6e377b82d03")
        (dependencies . ("base"))
        (dependency-names . ("base"))
        (description . "mflatt@racket-lang.org")
        (modules . ())
        (name . "com-win32-i386")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/com-win32-i386.zip")
        (tags . ())))
 ("com-win32-x86_64"
  .
  #hash((author . "mflatt@racket-lang.org")
        (checksum . "473a466cfa84b945ee46b765d7dd40e7afc58c8c")
        (dependencies . ("base"))
        (dependency-names . ("base"))
        (description . "mflatt@racket-lang.org")
        (modules . ())
        (name . "com-win32-x86_64")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/com-win32-x86_64.zip")
        (tags . ())))
 ("combinator-parser"
  .
  #hasheq((author . "asumu@ccs.neu.edu")
          (authors . ("asumu@ccs.neu.edu"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "combinator-parser"
                    "doc/combinator-parser@combinator-parser/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/combinator-parser.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/combinator-parser.txt")))
          (checksum . "e64f938862f47f0e8bab8d6f406a8fa6a203e435")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "parser-tools-lib"
            "compatibility-lib"
            "scribble-lib"
            "parser-tools-doc"
            "racket-doc"
            "at-exp-lib"
            "lazy"
            "scheme-lib"))
          (dependency-names
           .
           ("base"
            "parser-tools-lib"
            "compatibility-lib"
            "scribble-lib"
            "parser-tools-doc"
            "racket-doc"
            "at-exp-lib"
            "lazy"
            "scheme-lib"))
          (description
           .
           "A combinator parser library retained for backwards compatibility. Using parser-tools/yacc or ragg instead is recommended.")
          (implies . ())
          (last-checked . 1557339512)
          (last-edit . 1368287415)
          (last-updated . 1502812300)
          (modules
           .
           ((lib "combinator-parser/private-combinator/combinator.rkt")
            (lib "combinator-parser/combinator-unit.rkt")
            (lib "combinator-parser/main.rkt")
            (lib "combinator-parser/private-combinator/combinator-parser.rkt")
            (lib "combinator-parser/private-combinator/parser-sigs.rkt")
            (lib "combinator-parser/private-combinator/errors.rkt")
            (lib "combinator-parser/scribblings/combinator-parser.scrbl")
            (lib "combinator-parser/private-combinator/structs.rkt")
            (lib "combinator-parser/examples/combinator-example.rkt")))
          (name . "combinator-parser")
          (nix-sha256
           .
           "15iksz88qy40k9zgmv43fjf69lad15vzrrabv6z8daa8anipqky9")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:asumu@ccs.neu.edu . #t)
                   (legacy . #t)
                   (parsing . #t)
                   (ring:1 . #t)))
          (source . "github://github.com/takikawa/combinator-parser/master")
          (tags . ("legacy" "parsing"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "e64f938862f47f0e8bab8d6f406a8fa6a203e435")
                          (source
                           .
                           "github://github.com/takikawa/combinator-parser/master")
                          (source_url
                           .
                           "http://github.com/takikawa/combinator-parser/tree/master")))))))
 ("comm-panel"
  .
  #hasheq((author . "stephen@thoughtstem.com")
          (authors . ("stephen@thoughtstem.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . "server/built/deps/comm-panel.txt")
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/comm-panel.txt")
                 (test-failure-log . "server/built/test-fail/comm-panel.txt")
                 (test-success-log . #f)))
          (checksum . "44225da9b3cd1f883beef9c03f20431f80239530")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("happy-names" "aws"))
          (dependency-names . ("happy-names" "aws"))
          (description
           .
           "Racket GUI widget for sending, receiving, listening, and broadcasting strings over  AWS SQS.")
          (implies . ())
          (last-checked . 1557339512)
          (last-edit . 1529089334)
          (last-updated . 1529166745)
          (modules
           .
           ((lib "comm-panel/string-sending.rkt")
            (lib "comm-panel/ui.rkt")
            (lib "comm-panel/broadcast-listen.rkt")
            (lib "comm-panel/main.rkt")
            (lib "comm-panel/computer-queues.rkt")))
          (name . "comm-panel")
          (nix-sha256
           .
           "0xbs4vkkyqbbbkz2ilfn275ijsjfp1rg4j2xpzw7px8k9bdi8zvl")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-dep-fail: . #t)
                   (:build-success: . #t)
                   (author:stephen@thoughtstem.com . #t)
                   (aws . #t)
                   (gui . #t)
                   (ring:2 . #t)))
          (source . "https://github.com/thoughtstem/comm-panel.git")
          (tags . ("aws" "gui"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "44225da9b3cd1f883beef9c03f20431f80239530")
                          (source
                           .
                           "https://github.com/thoughtstem/comm-panel.git")
                          (source_url
                           .
                           "https://github.com/thoughtstem/comm-panel.git")))))))
 ("command-line-ext"
  .
  #hasheq((author . "jackhfirth@gmail.com")
          (authors . ("jackhfirth@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "command-line-ext"
                    "doc/command-line-ext@command-line-ext/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/command-line-ext.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/command-line-ext.txt")))
          (checksum . "02525e983bd1b233eab641b942338991f406ae6f")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "rackunit-lib"
            "fancy-app"
            "generic-syntax-expanders"
            "reprovide-lang"
            "lens"
            "scribble-lib"
            "rackunit-lib"
            "racket-doc"))
          (dependency-names
           .
           ("base"
            "rackunit-lib"
            "fancy-app"
            "generic-syntax-expanders"
            "reprovide-lang"
            "lens"
            "scribble-lib"
            "rackunit-lib"
            "racket-doc"))
          (description
           .
           "Extensible form of command-line with command-line-flag-expanders")
          (implies . ())
          (last-checked . 1557339512)
          (last-edit . 1500074696)
          (last-updated . 1502812301)
          (modules
           .
           ((lib "command-line-ext/private/doc-util.rkt")
            (lib "command-line-ext/private/core-form.scrbl")
            (lib "command-line-ext/private/library-expanders.rkt")
            (lib "command-line-ext/private/example-script.rkt")
            (lib "command-line-ext/private/core-command-line-ext-syntax.rkt")
            (lib "command-line-ext/main.scrbl")
            (lib "command-line-ext/main.rkt")
            (lib
             "command-line-ext/private/extensible-command-line-ext-syntax.rkt")))
          (name . "command-line-ext")
          (nix-sha256
           .
           "0cd784alf8k58mfsixyy6p7mjxlx3di75m9asnhxr7zckisd67jv")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:jackhfirth@gmail.com . #t)
                   (experimental . #t)
                   (generic-syntax-expanders . #t)
                   (ring:1 . #t)
                   (terminal . #t)))
          (source . "git://github.com/jackfirth/command-line-ext")
          (tags . ("experimental" "generic-syntax-expanders" "terminal"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "02525e983bd1b233eab641b942338991f406ae6f")
                          (source
                           .
                           "git://github.com/jackfirth/command-line-ext")
                          (source_url
                           .
                           "http://github.com/jackfirth/command-line-ext/tree/master")))))))
 ("command-tree"
  .
  #hasheq((author . "jerome.martin.dev@gmail.com")
          (authors . ("jerome.martin.dev@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/command-tree.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/command-tree.txt")))
          (checksum . "3a5dd35d43f3be52fb9743361adcb53eabcb8a3a")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "rackunit-lib"))
          (dependency-names . ("base" "rackunit-lib"))
          (description
           .
           "Handle tree-style (à la git) command line arguments ")
          (implies . ())
          (last-checked . 1557339512)
          (last-edit . 1515169603)
          (last-updated . 1521553367)
          (modules . ((lib "command-tree/main.rkt")))
          (name . "command-tree")
          (nix-sha256
           .
           "0jcjmaykww0v0f8790yrgkbyfyfjbd5mayz1xj8bi859ck6b7akx")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (arguments . #t)
                   (author:jerome.martin.dev@gmail.com . #t)
                   (cli . #t)
                   (parameters . #t)
                   (ring:2 . #t)
                   (terminal . #t)
                   (tree . #t)))
          (source . "https://github.com/euhmeuh/command-tree.git")
          (tags . ("arguments" "cli" "parameters" "terminal" "tree"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "3a5dd35d43f3be52fb9743361adcb53eabcb8a3a")
                          (source
                           .
                           "https://github.com/euhmeuh/command-tree.git")
                          (source_url
                           .
                           "https://github.com/euhmeuh/command-tree.git")))))))
 ("compact-annotations"
  .
  #hasheq((author . "jackhfirth@gmail.com")
          (authors . ("jackhfirth@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "compact-annotations"
                    "doc/compact-annotations@compact-annotations/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log
                  .
                  "server/built/install/compact-annotations.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/compact-annotations.txt")))
          (checksum . "dcd5f87dec21f40904e92eefb747472151bd3ace")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "rackunit-lib"
            "typed-racket-lib"
            "cover"
            "scribble-lib"
            "rackunit-lib"
            "racket-doc"))
          (dependency-names
           .
           ("base"
            "rackunit-lib"
            "typed-racket-lib"
            "cover"
            "scribble-lib"
            "rackunit-lib"
            "racket-doc"))
          (description
           .
           "Function type annotation syntax for Typed Racket similar to Haskell")
          (implies . ())
          (last-checked . 1557339512)
          (last-edit . 1500074831)
          (last-updated . 1502812301)
          (modules
           .
           ((lib "compact-annotations/main.rkt")
            (lib "compact-annotations/examples.rkt")
            (lib "compact-annotations/compact-annotations.scrbl")))
          (name . "compact-annotations")
          (nix-sha256
           .
           "1vkf6fxf01rdiwh61hghblkryyd0yvqafxpxvcf4xpwknjbbmlma")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:jackhfirth@gmail.com . #t)
                   (experimental . #t)
                   (ring:1 . #t)
                   (sugar . #t)
                   (typed-racket . #t)
                   (types . #t)))
          (source . "git://github.com/jackfirth/compact-annotations")
          (tags . ("experimental" "sugar" "typed-racket" "types"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "dcd5f87dec21f40904e92eefb747472151bd3ace")
                          (source
                           .
                           "git://github.com/jackfirth/compact-annotations")
                          (source_url
                           .
                           "http://github.com/jackfirth/compact-annotations/tree/master")))))))
 ("compatibility"
  .
  #hash((author
         .
         "eli@racket-lang.org mflatt@racket-lang.org robby@racket-lang.org samth@racket-lang.org")
        (checksum . "f72340d49fe270fc1e485c0f41af25d7157ae30d")
        (dependencies . ("compatibility-lib" "compatibility-doc"))
        (dependency-names . ("compatibility-lib" "compatibility-doc"))
        (description
         .
         "eli@racket-lang.org mflatt@racket-lang.org robby@racket-lang.org samth@racket-lang.org")
        (modules . ())
        (name . "compatibility")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/compatibility.zip")
        (tags . ())))
 ("compatibility-doc"
  .
  #hash((author
         .
         "eli@racket-lang.org mflatt@racket-lang.org robby@racket-lang.org samth@racket-lang.org")
        (checksum . "fff14f522d74b97cfb5ae32feb4df02d1da3654d")
        (dependencies
         .
         ("base"
          "scribble-lib"
          "compatibility-lib"
          "pconvert-lib"
          "sandbox-lib"
          "compiler-lib"
          "gui-lib"
          "racket-doc"
          "data-doc"
          "mzscheme-doc"
          "scheme-lib"))
        (dependency-names
         .
         ("base"
          "scribble-lib"
          "compatibility-lib"
          "pconvert-lib"
          "sandbox-lib"
          "compiler-lib"
          "gui-lib"
          "racket-doc"
          "data-doc"
          "mzscheme-doc"
          "scheme-lib"))
        (description
         .
         "eli@racket-lang.org mflatt@racket-lang.org robby@racket-lang.org samth@racket-lang.org")
        (modules . ())
        (name . "compatibility-doc")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/compatibility-doc.zip")
        (tags . ())))
 ("compatibility-lib"
  .
  #hash((author
         .
         "eli@racket-lang.org mflatt@racket-lang.org robby@racket-lang.org samth@racket-lang.org")
        (checksum . "607a16c5817fcaf1264cdd18cdb7568dc9911207")
        (dependencies . ("scheme-lib" "base" "net-lib" "sandbox-lib"))
        (dependency-names . ("scheme-lib" "base" "net-lib" "sandbox-lib"))
        (description
         .
         "eli@racket-lang.org mflatt@racket-lang.org robby@racket-lang.org samth@racket-lang.org")
        (modules . ())
        (name . "compatibility-lib")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/compatibility-lib.zip")
        (tags . ())))
 ("compatibility-test"
  .
  #hash((author . "mflatt@racket-lang.org")
        (checksum . "91d792bc57de4f74f5d14bd4ab11854507654324")
        (dependencies
         .
         ("base"
          "racket-test"
          "compatibility-lib"
          "drracket-tool-lib"
          "rackunit-lib"
          ("pconvert-lib" #:version "1.1")))
        (dependency-names
         .
         ("base"
          "racket-test"
          "compatibility-lib"
          "drracket-tool-lib"
          "rackunit-lib"
          "pconvert-lib"))
        (description . "mflatt@racket-lang.org")
        (modules . ())
        (name . "compatibility-test")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/compatibility-test.zip")
        (tags . ())))
 ("compiler"
  .
  #hash((author . "mflatt@racket-lang.org")
        (checksum . "d42d3a3c62057e5a05408f60b490e4f834164357")
        (dependencies . ("compiler-lib"))
        (dependency-names . ("compiler-lib"))
        (description . "mflatt@racket-lang.org")
        (modules . ())
        (name . "compiler")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/compiler.zip")
        (tags . ())))
 ("compiler-goodies"
  .
  #hasheq((author . "leif@leifandersen.net")
          (authors . ("leif@leifandersen.net"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "compiler-goodies"
                    "doc/compiler-goodies@compiler-goodies/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/compiler-goodies.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/compiler-goodies.txt")))
          (checksum . "4378d1039bd958ee4bfddafc5ec4dd8ef15bd5bb")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base" "rackunit-lib" "compiler-lib" "scribble-lib" "racket-doc"))
          (dependency-names
           .
           ("base" "rackunit-lib" "compiler-lib" "scribble-lib" "racket-doc"))
          (description . "")
          (implies . ())
          (last-checked . 1557339513)
          (last-edit . 1422049375)
          (last-updated . 1502812303)
          (modules
           .
           ((lib "compiler-goodies/scribblings/compiler-goodies.scrbl")
            (lib "compiler-goodies/main.rkt")))
          (name . "compiler-goodies")
          (nix-sha256
           .
           "04c2fw9y5qr7i93srd7i1kpr4znpyam08z4cb6vv0nagxa50m1c9")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (:no-desc: . #t)
                   (:no-tag: . #t)
                   (author:leif@leifandersen.net . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/LeifAndersen/racket-compiler-goodies")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "4378d1039bd958ee4bfddafc5ec4dd8ef15bd5bb")
                          (source
                           .
                           "git://github.com/LeifAndersen/racket-compiler-goodies")
                          (source_url
                           .
                           "http://github.com/LeifAndersen/racket-compiler-goodies/tree/master")))))))
 ("compiler-lib"
  .
  #hash((author . "mflatt@racket-lang.org")
        (checksum . "a8fbb5b648137758ea53266a92b306b6c4f87b29")
        (dependencies
         .
         (("base" #:version "6.5.0.2") "scheme-lib" "rackunit-lib" "zo-lib"))
        (dependency-names . ("base" "scheme-lib" "rackunit-lib" "zo-lib"))
        (description . "mflatt@racket-lang.org")
        (modules . ())
        (name . "compiler-lib")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/compiler-lib.zip")
        (tags . ())))
 ("compiler-test"
  .
  #hash((author . "mflatt@racket-lang.org")
        (checksum . "c428937533771536cba08e2f828a4c123620349c")
        (dependencies
         .
         ("base"
          "icons"
          "compiler-lib"
          "eli-tester"
          "rackunit-lib"
          "net-lib"
          "scheme-lib"
          "compatibility-lib"
          "gui-lib"
          "htdp-lib"
          "plai-lib"
          "rackunit-lib"
          "dynext-lib"
          "mzscheme-lib"))
        (dependency-names
         .
         ("base"
          "icons"
          "compiler-lib"
          "eli-tester"
          "rackunit-lib"
          "net-lib"
          "scheme-lib"
          "compatibility-lib"
          "gui-lib"
          "htdp-lib"
          "plai-lib"
          "rackunit-lib"
          "dynext-lib"
          "mzscheme-lib"))
        (description . "mflatt@racket-lang.org")
        (modules . ())
        (name . "compiler-test")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/compiler-test.zip")
        (tags . ())))
 ("component"
  .
  #hasheq((author . "bogdan@defn.io")
          (authors . ("bogdan@defn.io"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/component.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/component.txt")))
          (checksum . "5e6cd745f29bb1a77f04b2ac8e3b9bd8331793d9")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("component-doc" "component-lib"))
          (dependency-names . ("component-doc" "component-lib"))
          (description
           .
           "Simple dependency injection (docs and implementation).")
          (implies . ("component-doc" "component-lib"))
          (last-checked . 1557339514)
          (last-edit . 1542023582)
          (last-updated . 1554044572)
          (modules . ())
          (name . "component")
          (nix-sha256
           .
           "1srxz95fwq110ya2adzk127n37rzj7icpq8yyfkacb1wcjdq1q7y")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:bogdan@defn.io . #t)
                   (dependency-injection . #t)
                   (ring:2 . #t)))
          (source
           .
           "https://github.com/Bogdanp/racket-component.git?path=component")
          (tags . ("dependency-injection"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "5e6cd745f29bb1a77f04b2ac8e3b9bd8331793d9")
                          (source
                           .
                           "https://github.com/Bogdanp/racket-component.git?path=component")
                          (source_url
                           .
                           "https://github.com/Bogdanp/racket-component.git?path=component")))))))
 ("component-doc"
  .
  #hasheq((author . "bogdan@defn.io")
          (authors . ("bogdan@defn.io"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "component"
                    "doc/component@component-doc/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/component-doc.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/component-doc.txt")))
          (checksum . "5e6cd745f29bb1a77f04b2ac8e3b9bd8331793d9")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base" "component-lib" "scribble-lib" "racket-doc"))
          (dependency-names
           .
           ("base" "component-lib" "scribble-lib" "racket-doc"))
          (description . "Simple dependency injection (docs).")
          (implies . ())
          (last-checked . 1557339514)
          (last-edit . 1542023589)
          (last-updated . 1554044572)
          (modules . ((lib "component/component.scrbl")))
          (name . "component-doc")
          (nix-sha256
           .
           "1srxz95fwq110ya2adzk127n37rzj7icpq8yyfkacb1wcjdq1q7y")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:bogdan@defn.io . #t)
                   (dependency-injection . #t)
                   (ring:2 . #t)))
          (source
           .
           "https://github.com/Bogdanp/racket-component.git?path=component-doc")
          (tags . ("dependency-injection"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "5e6cd745f29bb1a77f04b2ac8e3b9bd8331793d9")
                          (source
                           .
                           "https://github.com/Bogdanp/racket-component.git?path=component-doc")
                          (source_url
                           .
                           "https://github.com/Bogdanp/racket-component.git?path=component-doc")))))))
 ("component-lib"
  .
  #hasheq((author . "bogdan@defn.io")
          (authors . ("bogdan@defn.io"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/component-lib.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/component-lib.txt")))
          (checksum . "5e6cd745f29bb1a77f04b2ac8e3b9bd8331793d9")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base"))
          (dependency-names . ("base"))
          (description . "Simple dependency injection (implementation only).")
          (implies . ())
          (last-checked . 1557339514)
          (last-edit . 1542031420)
          (last-updated . 1554044572)
          (modules
           .
           ((lib "component/private/component.rkt")
            (lib "component/main.rkt")
            (lib "component/private/graph.rkt")
            (lib "component/private/system.rkt")
            (lib "component/private/dependency.rkt")))
          (name . "component-lib")
          (nix-sha256
           .
           "1srxz95fwq110ya2adzk127n37rzj7icpq8yyfkacb1wcjdq1q7y")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:bogdan@defn.io . #t)
                   (dependency-injection . #t)
                   (ring:2 . #t)))
          (source
           .
           "https://github.com/Bogdanp/racket-component.git?path=component-lib")
          (tags . ("dependency-injection"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "5e6cd745f29bb1a77f04b2ac8e3b9bd8331793d9")
                          (source
                           .
                           "https://github.com/Bogdanp/racket-component.git?path=component-lib")
                          (source_url
                           .
                           "https://github.com/Bogdanp/racket-component.git?path=component-lib")))))))
 ("component-test"
  .
  #hasheq((author . "bogdan@defn.io")
          (authors . ("bogdan@defn.io"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/component-test.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/component-test.txt")))
          (checksum . "5e6cd745f29bb1a77f04b2ac8e3b9bd8331793d9")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "component-lib" "rackunit-lib"))
          (dependency-names . ("base" "component-lib" "rackunit-lib"))
          (description . "Tests for component-lib.")
          (implies . ())
          (last-checked . 1557339514)
          (last-edit . 1541962581)
          (last-updated . 1554044572)
          (modules
           .
           ((lib "tests/component/run-all-tests.rkt")
            (lib "tests/component/system-tests.rkt")
            (lib "tests/component/graph-tests.rkt")))
          (name . "component-test")
          (nix-sha256
           .
           "1srxz95fwq110ya2adzk127n37rzj7icpq8yyfkacb1wcjdq1q7y")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:bogdan@defn.io . #t)
                   (dependency-injection . #t)
                   (ring:2 . #t)))
          (source
           .
           "https://github.com/Bogdanp/racket-component.git?path=component-test")
          (tags . ("dependency-injection"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "5e6cd745f29bb1a77f04b2ac8e3b9bd8331793d9")
                          (source
                           .
                           "https://github.com/Bogdanp/racket-component.git?path=component-test")
                          (source_url
                           .
                           "https://github.com/Bogdanp/racket-component.git?path=component-test")))))))
 ("compose-app"
  .
  #hasheq((author . "jackhfirth@gmail.com")
          (authors . ("jackhfirth@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "compose-app"
                    "doc/compose-app@compose-app/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/compose-app.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/compose-app.txt")))
          (checksum . "b1ca7838740c3cc84e392ea17f9e57f0595c111f")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "fancy-app"
            "racket-doc"
            ("scribble-lib" #:version "1.16")
            "scribble-text-lib"
            "rackunit-lib"))
          (dependency-names
           .
           ("base"
            "fancy-app"
            "racket-doc"
            "scribble-lib"
            "scribble-text-lib"
            "rackunit-lib"))
          (description
           .
           "#%app syntax for function composition, (a .. b .. c) => (lambda (v) (a (b (c v))))")
          (implies . ())
          (last-checked . 1557339514)
          (last-edit . 1500074194)
          (last-updated . 1502815866)
          (modules
           .
           ((lib "compose-app/test.rkt")
            (lib "compose-app/main.rkt")
            (lib "compose-app/main.scrbl")
            (lib "compose-app/fancy-app.rkt")))
          (name . "compose-app")
          (nix-sha256
           .
           "1pp5mg0fk3c2k358cr5isvd7mdd73plk2pg12vrnp9wlsmnnabm0")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (app-syntax . #t)
                   (author:jackhfirth@gmail.com . #t)
                   (functional . #t)
                   (ring:1 . #t)
                   (sugar . #t)))
          (source . "git://github.com/jackfirth/compose-app")
          (tags . ("app-syntax" "functional" "sugar"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "b1ca7838740c3cc84e392ea17f9e57f0595c111f")
                          (source . "git://github.com/jackfirth/compose-app")
                          (source_url
                           .
                           "http://github.com/jackfirth/compose-app/tree/master")))))))
 ("cond-strict"
  .
  #hasheq((author . "alexander@knauth.org")
          (authors . ("alexander@knauth.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "cond-strict"
                    "doc/cond-strict@cond-strict/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/cond-strict.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/cond-strict.txt")))
          (checksum . "449212681ea5675beda19bf8242411f6073882ee")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "rackunit-lib" "racket-doc" "scribble-lib"))
          (dependency-names
           .
           ("base" "rackunit-lib" "racket-doc" "scribble-lib"))
          (description . "cond: what it should have been")
          (implies . ())
          (last-checked . 1557339514)
          (last-edit . 1475036587)
          (last-updated . 1502815866)
          (modules
           .
           ((lib "cond-strict/main.rkt")
            (lib "cond-strict/scribblings/cond-strict.scrbl")))
          (name . "cond-strict")
          (nix-sha256
           .
           "1g258l7ryly6yn00p4ml780mncgrhkx917vra6bly7vhajymar8l")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:alexander@knauth.org . #t)
                   (cond . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/AlexKnauth/cond-strict")
          (tags . ("cond"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "449212681ea5675beda19bf8242411f6073882ee")
                          (source . "git://github.com/AlexKnauth/cond-strict")
                          (source_url
                           .
                           "http://github.com/AlexKnauth/cond-strict/tree/master")))))))
 ("continued-fractions"
  .
  #hasheq((author . "deren.dohoda@gmail.com")
          (authors . ("deren.dohoda@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "cf-manual"
                    "doc/cf-manual@continued-fractions/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log
                  .
                  "server/built/install/continued-fractions.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/continued-fractions.txt")))
          (checksum . "1b64abbd6adcaf781c7873a8489bbeff87cbaa56")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base" "math-lib" "racket-doc" "rackunit-lib" "scribble-lib"))
          (dependency-names
           .
           ("base" "math-lib" "racket-doc" "rackunit-lib" "scribble-lib"))
          (description
           .
           "Exact computer arithmetic and base conversion via continued fractions.")
          (implies . ())
          (last-checked . 1557339514)
          (last-edit . 1455368395)
          (last-updated . 1502815866)
          (modules
           .
           ((lib "continued-fractions/private/consumer-emitters.rkt")
            (lib "continued-fractions/bases.rkt")
            (lib "continued-fractions/cf-bases.scrbl")
            (lib "continued-fractions/private/simple-matrix.rkt")
            (lib "continued-fractions/main.rkt")
            (lib "continued-fractions/cf-manual.scrbl")
            (lib "continued-fractions/private/continued-fractions.rkt")
            (lib
             "continued-fractions/private/general-continued-fractions.rkt")
            (lib "continued-fractions/cf-create.scrbl")
            (lib "continued-fractions/private/arithmetic.rkt")
            (lib "continued-fractions/private/sequence-utils.rkt")
            (lib "continued-fractions/create.rkt")))
          (name . "continued-fractions")
          (nix-sha256
           .
           "03rd2jj45kpsadcgrxyjx3b3np34s035lb417cnjm3i5df5hkc8m")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:deren.dohoda@gmail.com . #t)
                   (exact-arithmetic . #t)
                   (ring:1 . #t)))
          (source
           .
           "https://derend@bitbucket.org/derend/continued-fractions.git")
          (tags . ("exact-arithmetic"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "1b64abbd6adcaf781c7873a8489bbeff87cbaa56")
                          (source
                           .
                           "https://derend@bitbucket.org/derend/continued-fractions.git")
                          (source_url
                           .
                           "https://derend@bitbucket.org/derend/continued-fractions.git")))))))
 ("contract-profile"
  .
  #hash((author . "stamourv@racket-lang.org")
        (checksum . "c3ba5b53acbfd6e792c776f85007c42d87437249")
        (dependencies
         .
         (("base" #:version "6.3")
          "math-lib"
          ("profile-lib" #:version "1.1")
          "racket-doc"
          "scribble-lib"
          "rackunit-lib"))
        (dependency-names
         .
         ("base"
          "math-lib"
          "profile-lib"
          "racket-doc"
          "scribble-lib"
          "rackunit-lib"))
        (description . "stamourv@racket-lang.org")
        (modules . ())
        (name . "contract-profile")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/contract-profile.zip")
        (tags . ())))
 ("contract-repl"
  .
  #hasheq((author . "asumu@ccs.neu.edu")
          (authors . ("asumu@ccs.neu.edu"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/contract-repl.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/contract-repl.txt")))
          (checksum . "5eadd5d87b04178d5574804313238934f3544692")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base"))
          (dependency-names . ("base"))
          (description . "A REPL that prints contracts on values")
          (implies . ())
          (last-checked . 1557339515)
          (last-edit . 1365266285)
          (last-updated . 1502815869)
          (modules . ((lib "contract-repl/main.rkt")))
          (name . "contract-repl")
          (nix-sha256
           .
           "0bg2agcs6wymlm4z824q8lz2405a2a5rxy4hrsp58v1v5v6mz2c9")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:asumu@ccs.neu.edu . #t)
                   (contracts . #t)
                   (repl . #t)
                   (ring:1 . #t)))
          (source . "github://github.com/takikawa/contract-repl/master")
          (tags . ("contracts" "repl"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "5eadd5d87b04178d5574804313238934f3544692")
                          (source
                           .
                           "github://github.com/takikawa/contract-repl/master")
                          (source_url
                           .
                           "http://github.com/takikawa/contract-repl/tree/master")))))))
 ("control"
  .
  #hasheq((author . "jensaxel@soegaard.net")
          (authors . ("jensaxel@soegaard.net"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "control-manual"
                    "doc/control-manual@control/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/control.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/control.txt")))
          (checksum . "51bc2319c07a06b1275a231c8ccfc433a8f34258")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "rackunit-lib" "scribble-lib" "racket-doc"))
          (dependency-names
           .
           ("base" "rackunit-lib" "scribble-lib" "racket-doc"))
          (description . "Control structures")
          (implies . ())
          (last-checked . 1557339515)
          (last-edit . 1429997690)
          (last-updated . 1502815869)
          (modules
           .
           ((lib "control/tagged-begin.rkt")
            (lib "control/dotimes.rkt")
            (lib "control/scribblings/control-manual.scrbl")
            (lib "control/main.rkt")
            (lib "control/until.rkt")
            (lib "control/begin-with-goto.rkt")
            (lib "control/while.rkt")))
          (name . "control")
          (nix-sha256
           .
           "007lmdzzi630l7z166hrc9pna5rd64bycswz9q5q6m3v8hf585a1")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:jensaxel@soegaard.net . #t)
                   (goto . #t)
                   (ring:1 . #t)
                   (tagbody . #t)
                   (until . #t)
                   (while . #t)))
          (source . "git://github.com/soegaard/control")
          (tags . ("goto" "tagbody" "until" "while"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "51bc2319c07a06b1275a231c8ccfc433a8f34258")
                          (source . "git://github.com/soegaard/control")
                          (source_url
                           .
                           "http://github.com/soegaard/control/tree/master")))))))
 ("cover"
  .
  #hasheq((author . "spencer@florence.io")
          (authors . ("spencer@florence.io"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "cover" "doc/cover@cover/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/cover.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/cover.txt")))
          (checksum . "43887b59b25edb61c4dc3d8322c6f8966f11ebfa")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           (("base" #:version "6.9")
            ("errortrace-lib" #:version "1.1")
            "rackunit-lib"
            "syntax-color-lib"
            "compiler-lib"
            "custom-load"
            "data-lib"
            "racket-doc"
            "scribble-lib"
            "typed-racket-doc"
            "htdp-lib"
            "net-doc"
            "scribble-doc"
            "at-exp-lib"
            "scheme-lib"
            "typed-racket-lib"
            "macro-debugger"))
          (dependency-names
           .
           ("base"
            "errortrace-lib"
            "rackunit-lib"
            "syntax-color-lib"
            "compiler-lib"
            "custom-load"
            "data-lib"
            "racket-doc"
            "scribble-lib"
            "typed-racket-doc"
            "htdp-lib"
            "net-doc"
            "scribble-doc"
            "at-exp-lib"
            "scheme-lib"
            "typed-racket-lib"
            "macro-debugger"))
          (description . "A code coverage tool")
          (implies . ())
          (last-checked . 1557339515)
          (last-edit . 1526496097)
          (last-updated . 1556226175)
          (modules
           .
           ((lib "cover/strace.rkt")
            (lib "cover/tests/bfs+module-nolex.rkt")
            (lib "cover/cover.rkt")
            (lib "cover/private/raw.rkt")
            (lib "cover/tests/simple-multi/2.rkt")
            (lib "cover/tests/syntax/syntax.rkt")
            (lib "cover/tests/submods/prog.rkt")
            (lib "cover/private/format-utils.rkt")
            (lib "cover/scribblings/cover.scrbl")
            (lib "cover/private/file-utils.rkt")
            (lib "cover/tests/bfs+module.rkt")
            (lib "cover/tests/reader.rkt")
            (lib "cover/format.rkt")
            (lib "cover/tests/eval/eval-call.rkt")
            (lib "cover/private/contracts.rkt")
            (lib "cover/tests/error.rkt")
            (lib "cover/scribblings/basics.scrbl")
            (lib "cover/tests/basic/no-expressions.rkt")
            (lib "cover/tests/at-exp/at-exp.rkt")
            (lib "cover/scribblings/api.scrbl")
            (lib "cover/tests/test-cross-phase-persist.rkt")
            (lib "cover/tests/syntax.rkt")
            (lib "cover/main.rkt")
            (lib "cover/tests/nested.rkt")
            (lib "cover/tests/multibyte-coverage/submod.rkt")
            (lib "cover/raco.rkt")
            (lib "cover/tests/error-file.rkt")
            (lib "cover/tests/new-logger.rkt")
            (lib "cover/tests/basic/not-run.rkt")
            (lib "cover/tests/cross-phase-persist.rkt")
            (lib "cover/tests/main.rkt")
            (lib "cover/tests/basic/prog.rkt")
            (lib "cover/tests/prog.rkt")
            (lib "cover/tests/lazy-require.rkt")
            (lib "cover/tests/multiple-modules.rkt")
            (lib "cover/tests/eval/do-eval.rkt")
            (lib "cover/tests/module.rkt")
            (lib "cover/tests/do-dont-run.rkt")
            (lib "cover/tests/provide.rkt")
            (lib "cover/tests/do-bfs+module.rkt")
            (lib "cover/private/shared.rkt")
            (lib "cover/scribblings/base.rkt")
            (lib "cover/scribblings/plugins.scrbl")
            (lib "cover/tests/bfs+define-syntax.rkt")
            (lib "cover/tests/dont-run.rkt")
            (lib "cover/tests/exit.rkt")
            (lib "cover/tests/eval/eval.rkt")
            (lib "cover/tests/do-eval.rkt")
            (lib "cover/tests/bfs.rkt")
            (lib "cover/private/html/html.rkt")
            (lib "cover/tests/provide-define-syntax/prog.rkt")
            (lib "cover/tests/use-provide.rkt")
            (lib "cover/tests/do-multiple-modules.rkt")
            (lib "cover/tests/basic/raise.rkt")
            (lib "cover/tests/do-arg.rkt")
            (lib "cover/tests/do-syntax.rkt")
            (lib "cover/tests/simple-multi/1.rkt")
            (lib "cover/tests/arg.rkt")
            (lib "cover/tests/multibyte-coverage/arrow.rkt")
            (lib "cover/tests/eval.rkt")
            (lib "cover/tests/do-exit.rkt")
            (lib "cover/tests/do-reader.rkt")))
          (name . "cover")
          (nix-sha256
           .
           "0rwdf8pmaw2isqq6vjbdb4s87br57w2hsbb59bz8wkhrb8fqr2qr")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:spencer@florence.io . #t)
                   (ring:1 . #t)
                   (testing . #t)
                   (tools . #t)))
          (source . "https://github.com/florence/cover.git#release")
          (tags . ("testing" "tools"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "43887b59b25edb61c4dc3d8322c6f8966f11ebfa")
                          (source
                           .
                           "https://github.com/florence/cover.git#release")
                          (source_url
                           .
                           "https://github.com/florence/cover.git#release")))
                 ("6.1"
                  .
                  #hasheq((checksum
                           .
                           "578f4ebd0dee8b62e2e9325fbd7632c4b73499fe")
                          (source
                           .
                           "https://github.com/florence/cover.git#v3.0.3")
                          (source_url
                           .
                           "https://github.com/florence/cover.git#v3.0.3")))
                 ("6.1.1"
                  .
                  #hasheq((checksum
                           .
                           "578f4ebd0dee8b62e2e9325fbd7632c4b73499fe")
                          (source
                           .
                           "https://github.com/florence/cover.git#v3.0.3")
                          (source_url
                           .
                           "https://github.com/florence/cover.git#v3.0.3")))
                 ("6.2"
                  .
                  #hasheq((checksum
                           .
                           "578f4ebd0dee8b62e2e9325fbd7632c4b73499fe")
                          (source
                           .
                           "https://github.com/florence/cover.git#v3.0.3")
                          (source_url
                           .
                           "https://github.com/florence/cover.git#v3.0.3")))
                 ("6.2.1"
                  .
                  #hasheq((checksum
                           .
                           "578f4ebd0dee8b62e2e9325fbd7632c4b73499fe")
                          (source
                           .
                           "https://github.com/florence/cover.git#v3.0.3")
                          (source_url
                           .
                           "https://github.com/florence/cover.git#v3.0.3")))
                 ("6.3"
                  .
                  #hasheq((checksum
                           .
                           "578f4ebd0dee8b62e2e9325fbd7632c4b73499fe")
                          (source
                           .
                           "https://github.com/florence/cover.git#v3.0.3")
                          (source_url
                           .
                           "https://github.com/florence/cover.git#v3.0.3")))
                 ("6.4"
                  .
                  #hasheq((checksum
                           .
                           "578f4ebd0dee8b62e2e9325fbd7632c4b73499fe")
                          (source
                           .
                           "https://github.com/florence/cover.git#v3.0.3")
                          (source_url
                           .
                           "https://github.com/florence/cover.git#v3.0.3")))
                 ("6.5"
                  .
                  #hasheq((checksum
                           .
                           "578f4ebd0dee8b62e2e9325fbd7632c4b73499fe")
                          (source
                           .
                           "https://github.com/florence/cover.git#v3.0.3")
                          (source_url
                           .
                           "https://github.com/florence/cover.git#v3.0.3")))
                 ("6.6"
                  .
                  #hasheq((checksum
                           .
                           "694844a7009ff04523e136bf5c0c4ba487767552")
                          (source
                           .
                           "https://github.com/florence/cover.git#v3.1.2")
                          (source_url
                           .
                           "https://github.com/florence/cover.git#v3.1.2")))
                 ("6.7"
                  .
                  #hasheq((checksum
                           .
                           "694844a7009ff04523e136bf5c0c4ba487767552")
                          (source
                           .
                           "https://github.com/florence/cover.git#v3.1.2")
                          (source_url
                           .
                           "https://github.com/florence/cover.git#v3.1.2")))
                 ("6.8"
                  .
                  #hasheq((checksum
                           .
                           "694844a7009ff04523e136bf5c0c4ba487767552")
                          (source
                           .
                           "https://github.com/florence/cover.git#v3.1.2")
                          (source_url
                           .
                           "https://github.com/florence/cover.git#v3.1.2")))))))
 ("cover-codecov"
  .
  #hasheq((author . "plessner.ryan@gmail.com spencer@florence.io")
          (authors . ("plessner.ryan@gmail.com" "spencer@florence.io"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/cover-codecov.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/cover-codecov.txt")))
          (checksum . "f8c2446b6591a04b5f8370cce5d3c646fbdb61a8")
          (checksum-error . #f)
          (conflicts . ())
          (date-added . 1556548151)
          (dependencies . (("base" #:version "6.1.1") "cover" "rackunit-lib"))
          (dependency-names . ("base" "cover" "rackunit-lib"))
          (description . "")
          (implies . ())
          (last-checked . 1557339516)
          (last-edit . 1556548151)
          (last-updated . 1556553879)
          (modules
           .
           ((lib "cover/private/travis-service.rkt")
            (lib "cover/private/gitlab-service.rkt")
            (lib "cover/codecov.rkt")
            (lib "cover/private/codecov.rkt")
            (lib "cover/private/ci-service.rkt")
            (lib "cover/private/tests/test-not-run.rkt")))
          (name . "cover-codecov")
          (nix-sha256
           .
           "0hy57x4d989vk57kf03ypwl78sslm93s1826zvkv80mwdkiw53xd")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:no-desc: . #t)
                   (author:plessner.ryan@gmail.com . #t)
                   (author:spencer@florence.io . #t)
                   (ring:1 . #t)
                   (testing . #t)
                   (tools . #t)))
          (source . "https://github.com/florence/cover-codecov.git#release")
          (tags . ("testing" "tools"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "f8c2446b6591a04b5f8370cce5d3c646fbdb61a8")
                          (source
                           .
                           "https://github.com/florence/cover-codecov.git#release")
                          (source_url
                           .
                           "https://github.com/florence/cover-codecov.git#release")))))))
 ("cover-coveralls"
  .
  #hasheq((author . "spencer@florence.io plessner.ryan@gmail.com")
          (authors . ("spencer@florence.io" "plessner.ryan@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/cover-coveralls.txt")
                 (test-failure-log
                  .
                  "server/built/test-fail/cover-coveralls.txt")
                 (test-success-log . #f)))
          (checksum . "d278a6998ceff1c5816f700d3cf4e8b76871a39c")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . (("base" #:version "6.1.1") "cover" "rackunit-lib"))
          (dependency-names . ("base" "cover" "rackunit-lib"))
          (description . "")
          (implies . ())
          (last-checked . 1557339516)
          (last-edit . 1455244920)
          (last-updated . 1506047337)
          (modules
           .
           ((lib "cover/coveralls.rkt")
            (lib "cover/private/tests/prog.rkt")
            (lib "cover/private/tests/not-run.rkt")
            (lib "cover/private/coveralls.rkt")))
          (name . "cover-coveralls")
          (nix-sha256
           .
           "1s1j44q13j13f97d1d5p21hzpy54knbs7vrl55rmdid1jaqxf22f")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:no-desc: . #t)
                   (author:plessner.ryan@gmail.com . #t)
                   (author:spencer@florence.io . #t)
                   (ring:1 . #t)
                   (testing . #t)
                   (tools . #t)))
          (source . "git://github.com/rpless/cover-coveralls#release")
          (tags . ("testing" "tools"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "d278a6998ceff1c5816f700d3cf4e8b76871a39c")
                          (source
                           .
                           "git://github.com/rpless/cover-coveralls#release")
                          (source_url
                           .
                           "http://github.com/rpless/cover-coveralls/tree/master#release")))))))
 ("cow-repl"
  .
  #hasheq((author . "asumu@ccs.neu.edu")
          (authors . ("asumu@ccs.neu.edu"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/cow-repl.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/cow-repl.txt")))
          (checksum . "19b38c35a868d3e3fe02d4f5fcc59e8212c37228")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base"))
          (dependency-names . ("base"))
          (description . "Cowsay in your REPL")
          (implies . ())
          (last-checked . 1557339516)
          (last-edit . 1382475611)
          (last-updated . 1502815870)
          (modules . ((lib "cow-repl/main.rkt")))
          (name . "cow-repl")
          (nix-sha256
           .
           "1xziyrwbjbjhljbqmrlx73zpsi6vqsyj1xmjglfiwaf46sdrijcs")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:no-tag: . #t)
                   (author:asumu@ccs.neu.edu . #t)
                   (ring:1 . #t)))
          (source . "github://github.com/takikawa/racket-cow-repl/master")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "19b38c35a868d3e3fe02d4f5fcc59e8212c37228")
                          (source
                           .
                           "github://github.com/takikawa/racket-cow-repl/master")
                          (source_url
                           .
                           "http://github.com/takikawa/racket-cow-repl/tree/master")))))))
 ("cpu-affinity"
  .
  #hasheq((author . "asumu@ccs.neu.edu")
          (authors . ("asumu@ccs.neu.edu"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "cpu-affinity"
                    "doc/cpu-affinity@cpu-affinity/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/cpu-affinity.txt")
                 (test-failure-log
                  .
                  "server/built/test-fail/cpu-affinity.txt")
                 (test-success-log . #f)))
          (checksum . "bc6316cbc7bc3f2179ae569bfe7c23a53b62025f")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "scribble-lib"
            "compatibility-lib"
            "racket-doc"
            "compatibility-doc"))
          (dependency-names
           .
           ("base"
            "scribble-lib"
            "compatibility-lib"
            "racket-doc"
            "compatibility-doc"))
          (description . "A library for getting/setting CPU affinity")
          (implies . ())
          (last-checked . 1557339516)
          (last-edit . 1429301964)
          (last-updated . 1502815871)
          (modules
           .
           ((lib "cpu-affinity/windows.rkt")
            (lib "cpu-affinity/cpu-affinity.scrbl")
            (lib "cpu-affinity/test.rkt")
            (lib "cpu-affinity/unix.rkt")
            (lib "cpu-affinity/main.rkt")
            (lib "cpu-affinity/error.rkt")))
          (name . "cpu-affinity")
          (nix-sha256
           .
           "1nr8il3vx7b4rkp5rc2qi391q5py7v27pbp7zgvadfa6l9bcxqd9")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:asumu@ccs.neu.edu . #t)
                   (ffi . #t)
                   (os . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/takikawa/racket-cpu-affinity")
          (tags . ("ffi" "os"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "bc6316cbc7bc3f2179ae569bfe7c23a53b62025f")
                          (source
                           .
                           "git://github.com/takikawa/racket-cpu-affinity")
                          (source_url
                           .
                           "http://github.com/takikawa/racket-cpu-affinity/tree/master")))))))
 ("cpuinfo"
  .
  #hasheq((author . "neil@neilvandyke.org")
          (authors . ("neil@neilvandyke.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "cpuinfo" "doc/cpuinfo@cpuinfo/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/cpuinfo.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/cpuinfo.txt")))
          (checksum . "e5d01f97d71e0098ee6af20052889f52b94f5115")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base" "mcfly" "racket-doc" "scribble-lib" "mcfly" "overeasy"))
          (dependency-names
           .
           ("base" "mcfly" "racket-doc" "scribble-lib" "mcfly" "overeasy"))
          (description . "CPU Information")
          (implies . ())
          (last-checked . 1557339516)
          (last-edit . 1456513268)
          (last-updated . 1502815871)
          (modules . ((lib "cpuinfo/cpuinfo.scrbl") (lib "cpuinfo/main.rkt")))
          (name . "cpuinfo")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (:no-tag: . #t)
                   (author:neil@neilvandyke.org . #t)
                   (ring:1 . #t)))
          (source . "http://www.neilvandyke.org/racket/cpuinfo.zip")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "e5d01f97d71e0098ee6af20052889f52b94f5115")
                          (source
                           .
                           "http://www.neilvandyke.org/racket/cpuinfo.zip")
                          (source_url
                           .
                           "http://www.neilvandyke.org/racket/cpuinfo.zip")))))))
 ("crc32c"
  .
  #hasheq((author . "tetsumi@protonmail.com")
          (authors . ("tetsumi@protonmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "crc32c" "doc/crc32c@crc32c/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/crc32c.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/crc32c.txt")))
          (checksum . "9ae11530f64ae796e3280b224249f5157b7bdf04")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "scribble-lib" "racket-doc" "rackunit-lib"))
          (dependency-names
           .
           ("base" "scribble-lib" "racket-doc" "rackunit-lib"))
          (description . "Implementation of CRC32-C")
          (implies . ())
          (last-checked . 1557339518)
          (last-edit . 1524253223)
          (last-updated . 1524438108)
          (modules
           .
           ((lib "crc32c/scribblings/crc32c.scrbl") (lib "crc32c/main.rkt")))
          (name . "crc32c")
          (nix-sha256
           .
           "11jrqymry1gdayaapll2mz3q51hix8d9gx6b46m0gg8cwdc6ina4")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:tetsumi@protonmail.com . #t)
                   (checksum . #t)
                   (crc . #t)
                   (hash . #t)
                   (ring:2 . #t)))
          (source . "https://bitbucket.org/Tetsumi/crc32c.git")
          (tags . ("checksum" "crc" "hash"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "9ae11530f64ae796e3280b224249f5157b7bdf04")
                          (source
                           .
                           "https://bitbucket.org/Tetsumi/crc32c.git")
                          (source_url
                           .
                           "https://bitbucket.org/Tetsumi/crc32c.git")))))))
 ("crypto"
  .
  #hasheq((author . "ryanc@racket-lang.org")
          (authors . ("ryanc@racket-lang.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/crypto.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/crypto.txt")))
          (checksum . "05e5e2cd47bcae02e9b2e9e5fe2d53fca64152a9")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "crypto-lib" "crypto-doc"))
          (dependency-names . ("base" "crypto-lib" "crypto-doc"))
          (description . "Cryptography library")
          (implies . ("crypto-lib" "crypto-doc"))
          (last-checked . 1557339518)
          (last-edit . 1519093684)
          (last-updated . 1557069516)
          (modules . ())
          (name . "crypto")
          (nix-sha256
           .
           "1y7dzajcimdwbl9nypch4623caxbzh3y1l0wm0h5n2v97kqx5jxr")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:ryanc@racket-lang.org . #t)
                   (crypto . #t)
                   (ring:2 . #t)))
          (source . "https://github.com/rmculpepper/crypto.git?path=crypto")
          (tags . ("crypto"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "05e5e2cd47bcae02e9b2e9e5fe2d53fca64152a9")
                          (source
                           .
                           "https://github.com/rmculpepper/crypto.git?path=crypto")
                          (source_url
                           .
                           "https://github.com/rmculpepper/crypto.git?path=crypto")))))))
 ("crypto-doc"
  .
  #hasheq((author . "ryanc@racket-lang.org")
          (authors . ("ryanc@racket-lang.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "crypto" "doc/crypto@crypto-doc/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/crypto-doc.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/crypto-doc.txt")))
          (checksum . "05e5e2cd47bcae02e9b2e9e5fe2d53fca64152a9")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "racket-doc" "scribble-lib" "crypto-lib"))
          (dependency-names
           .
           ("base" "racket-doc" "scribble-lib" "crypto-lib"))
          (description . "Cryptography library")
          (implies . ())
          (last-checked . 1557339518)
          (last-edit . 1519093619)
          (last-updated . 1557069517)
          (modules
           .
           ((lib "crypto/examples/key-agreement-ec.rkt")
            (lib "crypto/examples/key-agreement-dh.rkt")
            (lib "crypto/scribblings/misc.scrbl")
            (lib "crypto/scribblings/kdf.scrbl")
            (lib "crypto/scribblings/intro.scrbl")
            (lib "crypto/examples/key-agreement-x25519.rkt")
            (lib "crypto/scribblings/factory.scrbl")
            (lib "crypto/scribblings/crypto.scrbl")
            (lib "crypto/examples/signing-ec.rkt")
            (lib "crypto/scribblings/pkey.scrbl")
            (lib "crypto/scribblings/digest.scrbl")
            (lib "crypto/examples/encryption-x25519.rkt")
            (lib "crypto/scribblings/cipher.scrbl")
            (lib "crypto/examples/signing-ed25519.rkt")))
          (name . "crypto-doc")
          (nix-sha256
           .
           "1y7dzajcimdwbl9nypch4623caxbzh3y1l0wm0h5n2v97kqx5jxr")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:ryanc@racket-lang.org . #t)
                   (crypto . #t)
                   (ring:2 . #t)))
          (source
           .
           "https://github.com/rmculpepper/crypto.git?path=crypto-doc")
          (tags . ("crypto"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "05e5e2cd47bcae02e9b2e9e5fe2d53fca64152a9")
                          (source
                           .
                           "https://github.com/rmculpepper/crypto.git?path=crypto-doc")
                          (source_url
                           .
                           "https://github.com/rmculpepper/crypto.git?path=crypto-doc")))))))
 ("crypto-lib"
  .
  #hasheq((author . "ryanc@racket-lang.org")
          (authors . ("ryanc@racket-lang.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/crypto-lib.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/crypto-lib.txt")))
          (checksum . "05e5e2cd47bcae02e9b2e9e5fe2d53fca64152a9")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base" "asn1-lib" "binaryio-lib" ("gmp-lib" #:version "1.1")))
          (dependency-names . ("base" "asn1-lib" "binaryio-lib" "gmp-lib"))
          (description . "Cryptography library")
          (implies . ())
          (last-checked . 1557339518)
          (last-edit . 1519093582)
          (last-updated . 1557069518)
          (modules
           .
           ((lib "crypto/main.rkt")
            (lib "crypto/private/decaf/pkey.rkt")
            (lib "crypto/private/gcrypt/ffi.rkt")
            (lib "crypto/private/common/pk-common.rkt")
            (lib "crypto/private/common/base256.rkt")
            (lib "crypto/private/decaf/factory.rkt")
            (lib "crypto/private/nettle/pkey.rkt")
            (lib "crypto/private/common/base64.rkt")
            (lib "crypto/private/libcrypto/ffi.rkt")
            (lib "crypto/private/b2/ffi.rkt")
            (lib "crypto/private/rkt/pbkdf2.rkt")
            (lib "crypto/private/libcrypto/factory.rkt")
            (lib "crypto/private/sodium/pkey.rkt")
            (lib "crypto/private/sodium/factory.rkt")
            (lib "crypto/private/rkt/kdf.rkt")
            (lib "crypto/private/argon2/ffi.rkt")
            (lib "crypto/private/common/catalog.rkt")
            (lib "crypto/gcrypt.rkt")
            (lib "crypto/private/decaf/ffi.rkt")
            (lib "crypto/private/nettle/ffi.rkt")
            (lib "crypto/private/nettle/factory.rkt")
            (lib "crypto/private/common/error.rkt")
            (lib "crypto/private/common/asn1.rkt")
            (lib "crypto/private/nettle/kdf.rkt")
            (lib "crypto/b2.rkt")
            (lib "crypto/private/libcrypto/cipher.rkt")
            (lib "crypto/private/sodium/digest.rkt")
            (lib "crypto/private/common/interfaces.rkt")
            (lib "crypto/private/common/common.rkt")
            (lib "crypto/private/libcrypto/kdf.rkt")
            (lib "crypto/private/sodium/kdf.rkt")
            (lib "crypto/private/gcrypt/cipher.rkt")
            (lib "crypto/sodium.rkt")
            (lib "crypto/private/rkt/salsa.rkt")
            (lib "crypto/private/gcrypt/factory.rkt")
            (lib "crypto/private/gcrypt/digest.rkt")
            (lib "crypto/private/decaf/digest.rkt")
            (lib "crypto/decaf.rkt")
            (lib "crypto/private/gcrypt/pkey.rkt")
            (lib "crypto/private/common/util.rkt")
            (lib "crypto/private/common/factory.rkt")
            (lib "crypto/all.rkt")
            (lib "crypto/private/b2/factory.rkt")
            (lib "crypto/private/libcrypto/digest.rkt")
            (lib "crypto/private/common/cipher.rkt")
            (lib "crypto/pkcs8.rkt")
            (lib "crypto/libcrypto.rkt")
            (lib "crypto/private/common/digest.rkt")
            (lib "crypto/private/b2/digest.rkt")
            (lib "crypto/nettle.rkt")
            (lib "crypto/private/sodium/cipher.rkt")
            (lib "crypto/private/rkt/poly1305.rkt")
            (lib "crypto/private/rkt/chacha.rkt")
            (lib "crypto/private/gcrypt/kdf.rkt")
            (lib "crypto/private/nettle/cipher.rkt")
            (lib "crypto/private/argon2/factory.rkt")
            (lib "crypto/private/common/kdf.rkt")
            (lib "crypto/private/libcrypto/pkey.rkt")
            (lib "crypto/private/nettle/digest.rkt")
            (lib "crypto/argon2.rkt")
            (lib "crypto/private/sodium/ffi.rkt")))
          (name . "crypto-lib")
          (nix-sha256
           .
           "1y7dzajcimdwbl9nypch4623caxbzh3y1l0wm0h5n2v97kqx5jxr")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:ryanc@racket-lang.org . #t)
                   (crypto . #t)
                   (ring:2 . #t)))
          (source
           .
           "https://github.com/rmculpepper/crypto.git?path=crypto-lib")
          (tags . ("crypto"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "05e5e2cd47bcae02e9b2e9e5fe2d53fca64152a9")
                          (source
                           .
                           "https://github.com/rmculpepper/crypto.git?path=crypto-lib")
                          (source_url
                           .
                           "https://github.com/rmculpepper/crypto.git?path=crypto-lib")))))))
 ("crypto-test"
  .
  #hasheq((author . "ryanc@racket-lang.org")
          (authors . ("ryanc@racket-lang.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/crypto-test.txt")
                 (test-failure-log . "server/built/test-fail/crypto-test.txt")
                 (test-success-log . #f)))
          (checksum . "05e5e2cd47bcae02e9b2e9e5fe2d53fca64152a9")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "rackunit-lib" "asn1-lib" "crypto-lib"))
          (dependency-names . ("base" "rackunit-lib" "asn1-lib" "crypto-lib"))
          (description . "Cryptography library")
          (implies . ())
          (last-checked . 1557339518)
          (last-edit . 1519093658)
          (last-updated . 1557069518)
          (modules
           .
           ((lib "crypto/tests/kdf.rkt")
            (lib "crypto/tests/util.rkt")
            (lib "crypto/tests/pkcs8/test-pkcs8.rkt")
            (lib "crypto/tests/pkey.rkt")
            (lib "crypto/tests/errors.rkt")
            (lib "crypto/tests/cipher.rkt")
            (lib "crypto/tests/pwhash.rkt")
            (lib "crypto/tests/padding.rkt")
            (lib "crypto/tests/test.rkt")
            (lib "crypto/tests/rkt-kdf.rkt")
            (lib "crypto/tests/digest.rkt")))
          (name . "crypto-test")
          (nix-sha256
           .
           "1y7dzajcimdwbl9nypch4623caxbzh3y1l0wm0h5n2v97kqx5jxr")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:ryanc@racket-lang.org . #t)
                   (crypto . #t)
                   (ring:2 . #t)))
          (source
           .
           "https://github.com/rmculpepper/crypto.git?path=crypto-test")
          (tags . ("crypto"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "05e5e2cd47bcae02e9b2e9e5fe2d53fca64152a9")
                          (source
                           .
                           "https://github.com/rmculpepper/crypto.git?path=crypto-test")
                          (source_url
                           .
                           "https://github.com/rmculpepper/crypto.git?path=crypto-test")))))))
 ("cs-bootstrap"
  .
  #hash((author . "mflatt@racket-lang.org")
        (authors . ("mflatt@racket-lang.org"))
        (build
         .
         #hash((conflicts-log . #f)
               (dep-failure-log . #f)
               (docs . ())
               (failure-log . #f)
               (min-failure-log . #f)
               (success-log . "server/built/install/cs-bootstrap.txt")
               (test-failure-log . "server/built/test-fail/cs-bootstrap.txt")
               (test-success-log . #f)))
        (checksum . "b7d738d59ad64efb4602f13136757cb49a6e989b")
        (checksum-error . #f)
        (conflicts . ())
        (dependencies . ("base"))
        (dependency-names . ("base"))
        (description . "Creates Chez Scheme boot files from source")
        (implies . ())
        (last-checked . 1557339518)
        (last-edit . 1556209159)
        (last-updated . 1557199224)
        (modules
         .
         ((lib "cs-bootstrap/make-boot.rkt")
          (lib "cs-bootstrap/format.rkt")
          (lib "cs-bootstrap/record.rkt")
          (lib "cs-bootstrap/scheme-struct.rkt")
          (lib "cs-bootstrap/define-datatype.rkt")
          (lib "cs-bootstrap/nanopass-patch.rkt")
          (lib "cs-bootstrap/symbol.rkt")
          (lib "cs-bootstrap/r6rs-lang.rkt")
          (lib "cs-bootstrap/immediate.rkt")
          (lib "cs-bootstrap/scheme-lang.rkt")
          (lib "cs-bootstrap/hand-coded.rkt")
          (lib "cs-bootstrap/syntax-mode.rkt")
          (lib "cs-bootstrap/primdata.rkt")
          (lib "cs-bootstrap/scheme-readtable.rkt")
          (lib "cs-bootstrap/config.rkt")
          (lib "cs-bootstrap/constant.rkt")
          (lib "cs-bootstrap/main.rkt")
          (lib "cs-bootstrap/r6rs-readtable.rkt")
          (lib "cs-bootstrap/gensym.rkt")
          (lib "cs-bootstrap/parse-makefile.rkt")))
        (name . "cs-bootstrap")
        (nix-sha256 . "1big24pqdg12p715zh7868v6ngq27g8j6nkp8wx43fxcw5qzay46")
        (ring . 2)
        (search-terms
         .
         #hasheq((:build-success: . #t)
                 (:no-tag: . #t)
                 (author:mflatt@racket-lang.org . #t)
                 (ring:2 . #t)))
        (source
         .
         "git://github.com/racket/racket/?path=racket/src/cs/bootstrap")
        (tags . ())
        (versions
         .
         #hash((default
                .
                #hasheq((checksum
                         .
                         "b7d738d59ad64efb4602f13136757cb49a6e989b")
                        (source
                         .
                         "git://github.com/racket/racket/?path=racket/src/cs/bootstrap")
                        (source_url
                         .
                         "git://github.com/racket/racket/?path=racket/src/cs/bootstrap")))))))
 ("cs2500f16-jsonlab"
  .
  #hasheq((author . "mackenzie.r@husky.neu.edu")
          (authors . ("mackenzie.r@husky.neu.edu"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "cs2500f16-jsonlab"
                    "doc/cs2500f16-jsonlab@cs2500f16-jsonlab/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/cs2500f16-jsonlab.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/cs2500f16-jsonlab.txt")))
          (checksum . "34e5dceecc4b8c43428414b3da7befdb36c123d6")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "rackunit-lib" "scribble-lib" "racket-doc"))
          (dependency-names
           .
           ("base" "rackunit-lib" "scribble-lib" "racket-doc"))
          (description . "Teachpack for CS2500 JSON lab")
          (implies . ())
          (last-checked . 1557339519)
          (last-edit . 1472064553)
          (last-updated . 1502815872)
          (modules
           .
           ((lib "cs2500f16-jsonlab/scribblings/cs2500f16-jsonlab.scrbl")
            (lib "cs2500f16-jsonlab/main.rkt")))
          (name . "cs2500f16-jsonlab")
          (nix-sha256
           .
           "0ggc0wnr68lrskjy7rxn2dmpin55fh4hz6invr61jybn631ij46h")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:mackenzie.r@husky.neu.edu . #t)
                   (cs2500 . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/rmacnz/cs2500jsonlab")
          (tags . ("cs2500"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "34e5dceecc4b8c43428414b3da7befdb36c123d6")
                          (source . "git://github.com/rmacnz/cs2500jsonlab")
                          (source_url
                           .
                           "http://github.com/rmacnz/cs2500jsonlab/tree/master")))))))
 ("cs7480-util"
  .
  #hasheq((author . "types@ccs.neu.edu davis.mil@husky.neu.edu")
          (authors . ("types@ccs.neu.edu" "davis.mil@husky.neu.edu"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "cs7480-util"
                    "doc/cs7480-util@cs7480-util/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/cs7480-util.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/cs7480-util.txt")))
          (checksum . "cd672fcb1f09354ef37619ddeed6c396286acfa5")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "lang-file"
            "typed-racket-lib"
            "drracket-tool-lib"
            "scribble-lib"
            "racket-doc"
            "rackunit-lib"))
          (dependency-names
           .
           ("base"
            "lang-file"
            "typed-racket-lib"
            "drracket-tool-lib"
            "scribble-lib"
            "racket-doc"
            "rackunit-lib"))
          (description . "Static analysis utilities")
          (implies . ())
          (last-checked . 1557339519)
          (last-edit . 1476383231)
          (last-updated . 1502815872)
          (modules
           .
           ((lib "cs7480-util/private/find-typedefs.rkt")
            (lib "cs7480-util/main.rkt")
            (lib "cs7480-util/docs/cs7480-util.scrbl")
            (lib "cs7480-util/private/find-defs.rkt")
            (lib "cs7480-util/private/find-required.rkt")))
          (name . "cs7480-util")
          (nix-sha256
           .
           "11w1q202pfx190z6mpf9hz5x4kg6zwcbpn7n4i614wyq70k9c847")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:davis.mil@husky.neu.edu . #t)
                   (author:types@ccs.neu.edu . #t)
                   (ring:1 . #t)
                   (unstable . #t)
                   (utility . #t)))
          (source . "git://github.com/MiloDavis/cs7480-util")
          (tags . ("unstable" "utility"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "cd672fcb1f09354ef37619ddeed6c396286acfa5")
                          (source . "git://github.com/MiloDavis/cs7480-util")
                          (source_url
                           .
                           "http://github.com/MiloDavis/cs7480-util/tree/master")))))))
 ("csc104"
  .
  #hasheq((author . "gfb@cs.toronto.edu")
          (authors . ("gfb@cs.toronto.edu"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "csc104" "doc/csc104@csc104/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/csc104.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/csc104.txt")))
          (checksum . "ef9368eb706090861b021613254f781765ae6127")
          (checksum-error . #f)
          (conflicts . ())
          (date-added . 1548690091)
          (dependencies
           .
           (("base" #:version "7.0")
            "images-lib"
            "snip-lib"
            "net-lib"
            "htdp-lib"
            "typed-racket-lib"
            "typed-racket-more"
            "drracket-plugin-lib"
            "errortrace-lib"
            "gui-lib"
            "draw-lib"
            "string-constants-lib"
            "scribble-lib"
            "sandbox-lib"
            "scribble-text-lib"
            "picturing-programs"
            "draw-doc"))
          (dependency-names
           .
           ("base"
            "images-lib"
            "snip-lib"
            "net-lib"
            "htdp-lib"
            "typed-racket-lib"
            "typed-racket-more"
            "drracket-plugin-lib"
            "errortrace-lib"
            "gui-lib"
            "draw-lib"
            "string-constants-lib"
            "scribble-lib"
            "sandbox-lib"
            "scribble-text-lib"
            "picturing-programs"
            "draw-doc"))
          (description . "Language for University of Toronto course CSC104")
          (implies . ())
          (last-checked . 1557339519)
          (last-edit . 1548690091)
          (last-updated . 1554130009)
          (modules
           .
           ((lib "csc104/language/functions/C.rkt")
            (lib "csc104/snack/contract.rkt")
            (lib "csc104/language/forms/current-definitions.rkt")
            (lib "csc104/snack/menu.rkt")
            (lib "csc104/language/forms/forms.require.rkt")
            (lib "csc104/language/forms/common.rkt")
            (lib "csc104/snack/port.rkt")
            (lib "csc104/private/repl-link-tool.rkt")
            (lib "csc104/language/without-gui.rkt")
            (lib "csc104/test-display.rkt")
            (lib "csc104/private/log.rkt")
            (lib "csc104/snack/string.rkt")
            (lib "csc104/shared/code.rkt")
            (lib "csc104/private/print.rkt")
            (lib "csc104/private/collapse-tools/tool.rkt")
            (lib "csc104/private/preferences.rkt")
            (lib "csc104/snack/keybinding.rkt")
            (lib "csc104/snack/lambda.rkt")
            (lib "csc104/private/boxed-highlight/class.rkt")
            (lib "csc104/snack/list.rkt")
            (lib "csc104/language/patterns.rkt")
            (lib "csc104/private/settings-panel.rkt")
            (lib "csc104/snack/conditional.rkt")
            (lib "csc104/private/keybindings-tool.rkt")
            (lib "csc104/rewrite-error.rkt")
            (lib "csc104/english.rkt")
            (lib "csc104/interpreter/private/step/context.rkt")
            (lib "csc104/interpreter/private/common.rkt")
            (lib "csc104/snack/button.rkt")
            (lib "csc104/run-teaching-program.rkt")
            (lib "csc104/language/functions/image.rkt")
            (lib "csc104/language/control.rkt")
            (lib "csc104/private/space-out.rkt")
            (lib "csc104/language/forms/step-display.rkt")
            (lib "csc104/private/language-ui.rkt")
            (lib "csc104/private/is-image.rkt")
            (lib "csc104/snack/style.rkt")
            (lib "csc104/language/functions/non-image.rkt")
            (lib "csc104/shared-settings.rkt")
            (lib "csc104/snack/false.rkt")
            (lib "csc104/interpreter/layout.rkt")
            (lib "csc104/snack/function.rkt")
            (lib "csc104/snack/boolean.rkt")
            (lib "csc104/snack/stream.rkt")
            (lib "csc104/private/boxed-highlight/tool.rkt")
            (lib "csc104/private/boxed-highlight/struct.rkt")
            (lib "csc104/interpreter/private/step/define.rkt")
            (lib "csc104/private/drracket.rkt")
            (lib "csc104/scribblings/docs.scrbl")
            (lib "csc104/snack/gui.rkt")
            (lib "csc104/language/forms/step.rkt")
            (lib "csc104/snack/syntax.rkt")
            (lib "csc104/snack/drracket.rkt")
            (lib "csc104/snack/generator.rkt")
            (lib "csc104/interpreter/private/step/options.rkt")
            (lib "csc104/2018-fall.rkt")
            (lib "csc104/private/comments-tool.rkt")
            (lib "csc104/private/boxed-highlight/values.rkt")
            (lib "csc104/langs.rkt")
            (lib "csc104/language/functions/custom.rkt")
            (lib "csc104/scribblings/eval.rkt")
            (lib "csc104/private/sexp.rkt")
            (lib "csc104/2018-fall-reader.rkt")
            (lib "csc104/interpreter/token.rkt")
            (lib "csc104/language/forms/syntax-error-context.rkt")
            (lib "csc104/language/functions/contracts.rkt")
            (lib "csc104/private/installer.rkt")
            (lib "csc104/snack/match.rkt")
            (lib "csc104/configuration.rkt")
            (lib "csc104/interpreter/interpreter.rkt")
            (lib "csc104/snack/iteration.rkt")
            (lib "csc104/private/text.rkt")
            (lib "csc104/interpreter/private/step/kinds.rkt")
            (lib "csc104/snack/definition.rkt")
            (lib "csc104/language/box.rkt")
            (lib "csc104/snack/string-constants.rkt")
            (lib "csc104/snack/class.rkt")
            (lib "csc104/private/boxed-highlight/gui.rkt")
            (lib "csc104/private/boxed-highlight/range-rectangle.rkt")
            (lib "csc104/language/forms/universe.rkt")
            (lib "csc104/language/forms/forms.rkt")
            (lib "csc104/snack/preferences.rkt")
            (lib "csc104/interpreter/private/layout/strings-and-images.rkt")
            (lib "csc104/language/forms/syntax-error.rkt")
            (lib "csc104/language/functions/meta-language.rkt")
            (lib "csc104/eval.rkt")
            (lib "csc104/private/htdp-stepper-debugger.rkt")
            (lib "csc104/private/structs.rkt")
            (lib "csc104/language/functions/error.rkt")))
          (name . "csc104")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:gfb@cs.toronto.edu . #t)
                   (education . #t)
                   (ring:1 . #t)
                   (teaching . #t)))
          (source . "http://www.cs.toronto.edu/~gfb/heap/csc104.zip")
          (tags . ("education" "teaching"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "ef9368eb706090861b021613254f781765ae6127")
                          (source
                           .
                           "http://www.cs.toronto.edu/~gfb/heap/csc104.zip")
                          (source_url
                           .
                           "http://www.cs.toronto.edu/~gfb/heap/csc104.zip")))))))
 ("csexp"
  .
  #hasheq((author . "cwebber@dustycloud.org")
          (authors . ("cwebber@dustycloud.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . "server/built/deps/csexp.txt")
                 (docs . (("main" "csexp" "doc/csexp@csexp/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/csexp.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/csexp.txt")))
          (checksum . "7b4468f69290800d4b95fb22ff207682f048546b")
          (checksum-error . #f)
          (conflicts . ())
          (date-added . 1550417543)
          (dependencies . ("base" "rackunit-lib"))
          (dependency-names . ("base" "rackunit-lib"))
          (description . "Canonical s-expressions for Racket.")
          (implies . ())
          (last-checked . 1557339519)
          (last-edit . 1550417543)
          (last-updated . 1552856574)
          (modules
           .
           ((lib "csexp/main.rkt")
            (lib "csexp/scribblings/csexp.scrbl")
            (lib "csexp/private/csexp.rkt")))
          (name . "csexp")
          (nix-sha256
           .
           "1irxrppr86w7h1x9354ibd46lrs5wwnicx0qwyzxi3mzwxcd3z6y")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-dep-fail: . #t)
                   (:build-success: . #t)
                   (:docs: . #t)
                   (author:cwebber@dustycloud.org . #t)
                   (csexp . #t)
                   (ring:2 . #t)
                   (serialization . #t)))
          (source . "https://gitlab.com/spritely/racket-csexp.git?path=csexp")
          (tags . ("csexp" "serialization"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "7b4468f69290800d4b95fb22ff207682f048546b")
                          (source
                           .
                           "https://gitlab.com/spritely/racket-csexp.git?path=csexp")
                          (source_url
                           .
                           "https://gitlab.com/spritely/racket-csexp.git?path=csexp")))))))
 ("csp"
  .
  #hasheq((author . "mb@mbtype.com")
          (authors . ("mb@mbtype.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "csp" "doc/csp@csp/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/csp.txt")
                 (test-failure-log . "server/built/test-fail/csp.txt")
                 (test-success-log . #f)))
          (checksum . "0cc53a82637fa7c3e47c3fc6453bade49412c6d5")
          (checksum-error . #f)
          (conflicts . ())
          (date-added . 1556661372)
          (dependencies
           .
           ("beautiful-racket-lib"
            "htdp-lib"
            "math-lib"
            ("base" #:version "6.0")
            "sugar"
            "rackunit-lib"
            "debug"
            "graph"
            "at-exp-lib"
            "math-doc"
            "racket-doc"
            "scribble-lib"))
          (dependency-names
           .
           ("beautiful-racket-lib"
            "htdp-lib"
            "math-lib"
            "base"
            "sugar"
            "rackunit-lib"
            "debug"
            "graph"
            "at-exp-lib"
            "math-doc"
            "racket-doc"
            "scribble-lib"))
          (description . "solve constraint-satisfaction problems")
          (implies . ())
          (last-checked . 1557339520)
          (last-edit . 1556661372)
          (last-updated . 1545951263)
          (modules
           .
           ((lib "csp/hacs-test-workbench.rkt")
            (lib "csp/csp-test-etc.rkt")
            (lib "csp/csp.rkt")
            (lib "csp/test-lang.rkt")
            (lib "csp/hacs-test-queens.rkt")
            (lib "csp/aima-queens.rkt")
            (lib "csp/sudoku-jm.rkt")
            (lib "csp/hacs-cryptarithmetic.rkt")
            (lib "csp/csp-test.rkt")
            (lib "csp/hacs-demo-triples.rkt")
            (lib "csp/hacs-test-sudoku.rkt")
            (lib "csp/aima-sum.rkt")
            (lib "csp/scribblings/csp.scrbl")
            (lib "csp/hacs-map.rkt")
            (lib "csp/hacs-test.rkt")
            (lib "csp/hacs.rkt")
            (lib "csp/aima-smm.rkt")
            (lib "csp/main.rkt")
            (lib "csp/expander.rkt")
            (lib "csp/csp-test-problems.rkt")
            (lib "csp/aima.rkt")))
          (name . "csp")
          (nix-sha256
           .
           "0fwm7ljwlajnrb1ijfa9s9whl6w571lff67z93aj8vafq1h0z6qm")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:mb@mbtype.com . #t)
                   (constraint . #t)
                   (ring:1 . #t)))
          (source . "https://github.com/mbutterick/csp.git")
          (tags . ("constraint"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "0cc53a82637fa7c3e47c3fc6453bade49412c6d5")
                          (source . "https://github.com/mbutterick/csp.git")
                          (source_url
                           .
                           "https://github.com/mbutterick/csp.git")))))))
 ("csrmesh"
  .
  #hasheq((author . "ray.racine@gmail.com")
          (authors . ("ray.racine@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "csrmesh" "doc/csrmesh@csrmesh/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/csrmesh.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/csrmesh.txt")))
          (checksum . "d7cc04b2bbfd45c71bf086bf5075de9ccd81415f")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("crypto"
            "bitsyntax"
            "word"
            "typed-racket-more"
            "typed-racket-lib"
            "base"
            "scribble-lib"
            "typed-racket-doc"
            "racket-doc"
            "rackunit-lib"))
          (dependency-names
           .
           ("crypto"
            "bitsyntax"
            "word"
            "typed-racket-more"
            "typed-racket-lib"
            "base"
            "scribble-lib"
            "typed-racket-doc"
            "racket-doc"
            "rackunit-lib"))
          (description . "Implementation of the Bluetooth CSR Mesh protocol.")
          (implies . ())
          (last-checked . 1557339520)
          (last-edit . 1528392905)
          (last-updated . 1537639349)
          (modules
           .
           ((lib "csrmesh/main.rkt")
            (lib "csrmesh/csrmesh/pinhack.rkt")
            (lib "csrmesh/csrmesh/packet.rkt")
            (lib "csrmesh/scribblings/csrmesh.scrbl")))
          (name . "csrmesh")
          (nix-sha256
           .
           "05hh23a0hkk5bvr1r3xnvpa4dk7d6ww73mhlq3hy16n7i4k2j0dh")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:ray.racine@gmail.com . #t)
                   (bluetooth . #t)
                   (csr . #t)
                   (csrmesh . #t)
                   (mesh . #t)
                   (ring:2 . #t)))
          (source . "https://gitlab.com/RayRacine/csrmesh.git")
          (tags . ("bluetooth" "csr" "csrmesh" "mesh"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "d7cc04b2bbfd45c71bf086bf5075de9ccd81415f")
                          (source
                           .
                           "https://gitlab.com/RayRacine/csrmesh.git")
                          (source_url
                           .
                           "https://gitlab.com/RayRacine/csrmesh.git")))))))
 ("css-expr"
  .
  #hasheq((author . "me@leafac.com")
          (authors . ("me@leafac.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "css-expr" "doc/css-expr@css-expr/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/css-expr.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/css-expr.txt")))
          (checksum . "d060b2a76d08013c91318890dc5d9f6cc6c81138")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "rackunit-lib"
            "typed-racket-lib"
            "typed-racket-more"
            "nanopass"
            "scribble-lib"
            "racket-doc"
            "sandbox-lib"))
          (dependency-names
           .
           ("base"
            "rackunit-lib"
            "typed-racket-lib"
            "typed-racket-more"
            "nanopass"
            "scribble-lib"
            "racket-doc"
            "sandbox-lib"))
          (description . "S-expression-based CSS")
          (implies . ())
          (last-checked . 1557339520)
          (last-edit . 1525863053)
          (last-updated . 1526152722)
          (modules
           .
           ((lib "css-expr/typed.rkt")
            (lib "css-expr/css-expr.scrbl")
            (lib "css-expr/main.rkt")))
          (name . "css-expr")
          (nix-sha256
           .
           "19mb0jfwp5d154hhqkvnixy37va36mqha5wcmc57lkirlgb2rdnp")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:me@leafac.com . #t)
                   (css . #t)
                   (dsl . #t)
                   (pollen . #t)
                   (ring:1 . #t)))
          (source . "https://github.com/leafac/css-expr.git")
          (tags . ("css" "dsl" "pollen"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "d060b2a76d08013c91318890dc5d9f6cc6c81138")
                          (source . "https://github.com/leafac/css-expr.git")
                          (source_url
                           .
                           "https://github.com/leafac/css-expr.git")))))))
 ("css-tools"
  .
  #hasheq((author . "mb@mbtype.com")
          (authors . ("mb@mbtype.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "css-tools" "doc/css-tools@css-tools/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/css-tools.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/css-tools.txt")))
          (checksum . "5734c6690b7506708558da5d849154153a1fe910")
          (checksum-error . #f)
          (conflicts . ())
          (date-added . 1556661379)
          (dependencies
           .
           (("base" #:version "6.0") "sugar" "scribble-lib" "rackunit-lib"))
          (dependency-names . ("base" "sugar" "scribble-lib" "rackunit-lib"))
          (description . "Tools for generating & manipulating CSS (unstable)")
          (implies . ())
          (last-checked . 1557339520)
          (last-edit . 1556661379)
          (last-updated . 1536965722)
          (modules
           .
           ((lib "css-tools/transition.rkt")
            (lib "css-tools/scribblings/css-tools.scrbl")
            (lib "css-tools/named-colors.rkt")
            (lib "css-tools/font-face.rkt")
            (lib "css-tools/math.rkt")
            (lib "css-tools/html.rkt")
            (lib "css-tools/typography.rkt")
            (lib "css-tools/core.rkt")
            (lib "css-tools/colors.rkt")
            (lib "css-tools/column.rkt")
            (lib "css-tools/main.rkt")
            (lib "css-tools/misc.rkt")))
          (name . "css-tools")
          (nix-sha256
           .
           "05v0ajj9kyy62gnmp5my51ws3hd61sghr93lgq8cg2bqw2bbh8m5")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:mb@mbtype.com . #t)
                   (css . #t)
                   (ring:1 . #t)))
          (source . "https://github.com/mbutterick/css-tools.git")
          (tags . ("css"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "5734c6690b7506708558da5d849154153a1fe910")
                          (source
                           .
                           "https://github.com/mbutterick/css-tools.git")
                          (source_url
                           .
                           "https://github.com/mbutterick/css-tools.git")))))))
 ("csv"
  .
  #hasheq((author . "linjunhalida@gmail.com")
          (authors . ("linjunhalida@gmail.com"))
          (build
           .
           #hash((conflicts-log . "conflicts.txt")
                 (dep-failure-log . "server/built/deps/csv.txt")
                 (docs . (("extract" "csv" "doc/csv@csv/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/csv.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/csv.txt")))
          (checksum . "c21cf591926b8c978b3191671ca50570fc50d21b")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "rackunit-lib" "scribble-lib" "racket-doc"))
          (dependency-names
           .
           ("base" "rackunit-lib" "scribble-lib" "racket-doc"))
          (description . "csv file reader and writer")
          (implies . ())
          (last-checked . 1557339520)
          (last-edit . 1455333284)
          (last-updated . 1502815874)
          (modules
           .
           ((lib "csv/main.rkt")
            (lib "csv/test.rkt")
            (lib "csv/scribblings/csv.scrbl")))
          (name . "csv")
          (nix-sha256
           .
           "0srzi7rghl10mg0xmpwwysbqjm524cfylvz9cr5l5pccw0wsab91")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-conflicts: . #t)
                   (:build-dep-fail: . #t)
                   (:build-success: . #t)
                   (:docs-error: . #t)
                   (:docs: . #t)
                   (:no-tag: . #t)
                   (author:linjunhalida@gmail.com . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/halida/csv")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "c21cf591926b8c978b3191671ca50570fc50d21b")
                          (source . "git://github.com/halida/csv")
                          (source_url
                           .
                           "http://github.com/halida/csv/tree/master")))))))
 ("csv-reading"
  .
  #hasheq((author . "neil@neilvandyke.org")
          (authors . ("neil@neilvandyke.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "csv-reading"
                    "doc/csv-reading@csv-reading/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/csv-reading.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/csv-reading.txt")))
          (checksum . "217c1ee293ee246cba52fc91f2e897492d0b5101")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base" "mcfly" "racket-doc" "scribble-lib" "overeasy"))
          (dependency-names
           .
           ("base" "mcfly" "racket-doc" "scribble-lib" "overeasy"))
          (description . "Comma-Separated Value (CSV) Parsing")
          (implies . ())
          (last-checked . 1557339520)
          (last-edit . 1456463140)
          (last-updated . 1502815875)
          (modules
           .
           ((lib "csv-reading/main.rkt")
            (lib "csv-reading/csv-reading.scrbl")))
          (name . "csv-reading")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:neil@neilvandyke.org . #t)
                   (csv . #t)
                   (ring:1 . #t)))
          (source . "http://www.neilvandyke.org/racket/csv-reading.zip")
          (tags . ("csv"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "217c1ee293ee246cba52fc91f2e897492d0b5101")
                          (source
                           .
                           "http://www.neilvandyke.org/racket/csv-reading.zip")
                          (source_url
                           .
                           "http://www.neilvandyke.org/racket/csv-reading.zip")))))))
 ("csv-writing"
  .
  #hasheq((author . "clements@racket-lang.org")
          (authors . ("clements@racket-lang.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "csv-writing"
                    "doc/csv-writing@csv-writing/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/csv-writing.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/csv-writing.txt")))
          (checksum . "fcf16bdbf3d0b30c21d4be18c279b62792b41e40")
          (checksum-error . #f)
          (conflicts . ())
          (date-added . 1552763509)
          (dependencies . ("base" "racket-doc" "rackunit-lib" "scribble-lib"))
          (dependency-names
           .
           ("base" "racket-doc" "rackunit-lib" "scribble-lib"))
          (description
           .
           "simple functions to write CSV files (and TSV files)")
          (implies . ())
          (last-checked . 1557339521)
          (last-edit . 1552763509)
          (last-updated . 1547150228)
          (modules
           .
           ((lib "csv-writing/main.rkt")
            (lib "csv-writing/tests.rkt")
            (lib "csv-writing/csv-writing.scrbl")))
          (name . "csv-writing")
          (nix-sha256
           .
           "083pba7p50adiidyr5k5xrhw9zqgvzf350qx1g7zzh9p77kx7jz1")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:clements@racket-lang.org . #t)
                   (csv . #t)
                   (ring:2 . #t)
                   (tabular . #t)
                   (tsv . #t)))
          (source . "https://github.com/jbclements/csv-writing.git")
          (tags . ("csv" "tabular" "tsv"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "fcf16bdbf3d0b30c21d4be18c279b62792b41e40")
                          (source
                           .
                           "https://github.com/jbclements/csv-writing.git")
                          (source_url
                           .
                           "https://github.com/jbclements/csv-writing.git")))))))
 ("cuecore"
  .
  #hasheq((author . "mordae@anilinux.org")
          (authors . ("mordae@anilinux.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "cuecore" "doc/cuecore@cuecore/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/cuecore.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/cuecore.txt")))
          (checksum . "826b05916b9f84601ef405ee36e6b9a843c42ea2")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "scribble-lib"
            "typed-racket-lib"
            "typed-racket-more"
            "mordae"
            "racket-doc"
            "typed-racket-doc"
            "typed-racket-lib"))
          (dependency-names
           .
           ("base"
            "scribble-lib"
            "typed-racket-lib"
            "typed-racket-more"
            "mordae"
            "racket-doc"
            "typed-racket-doc"
            "typed-racket-lib"))
          (description . "CueCore Lighting Control")
          (implies . ())
          (last-checked . 1557339521)
          (last-edit . 1453308885)
          (last-updated . 1502815875)
          (modules . ((lib "cuecore/main.rkt") (lib "cuecore/cuecore.scrbl")))
          (name . "cuecore")
          (nix-sha256
           .
           "1d1fmv6pf4c3dmg9gyv8qng6kmf9p0c3521nxmb5a8jfranxy5ij")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (:no-tag: . #t)
                   (author:mordae@anilinux.org . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/mordae/racket-cuecore")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "826b05916b9f84601ef405ee36e6b9a843c42ea2")
                          (source . "git://github.com/mordae/racket-cuecore")
                          (source_url
                           .
                           "http://github.com/mordae/racket-cuecore/tree/master")))))))
 ("cultural-anthropology"
  .
  #hasheq((author . "jesse@lisp.sh")
          (authors . ("jesse@lisp.sh"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . "server/built/fail/cultural-anthropology.txt")
                 (min-failure-log . #f)
                 (success-log . #f)
                 (test-failure-log . #f)
                 (test-success-log . #f)))
          (checksum . "936d7abc3a9cd2d88a68b30a98030f79282ec0d1")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("auxiliary-macro-context"
            "bitsyntax"
            "bookcover"
            "brag"
            "cmx"
            "datalog"
            "dssl"
            "dssl2"
            "event-lang"
            "frog"
            "frtime"
            "gm-pepm-2018"
            "gregor"
            "gtp-measure"
            "gtp-paper"
            "hackett"
            "herbie"
            "heresy"
            "identikon"
            "ipoe"
            "lipics"
            "margrave"
            "monad"
            "nanopass"
            "neuron"
            "non-det"
            "parenlog"
            "pict3d"
            "plai"
            "play"
            "pollen"
            "pop-pl"
            "py-fizz"
            "racket-dogstatsd"
            "racketscript"
            "rackjure"
            "ragg"
            "rash"
            "reactor"
            "redex"
            "remix"
            "rosette"
            "send-exp"
            "slideshow"
            "slideshow-exe"
            "syndicate"
            "turnstile"
            "typed-racket"
            "video"
            "vr-lang"
            "web-server"))
          (dependency-names
           .
           ("auxiliary-macro-context"
            "bitsyntax"
            "bookcover"
            "brag"
            "cmx"
            "datalog"
            "dssl"
            "dssl2"
            "event-lang"
            "frog"
            "frtime"
            "gm-pepm-2018"
            "gregor"
            "gtp-measure"
            "gtp-paper"
            "hackett"
            "herbie"
            "heresy"
            "identikon"
            "ipoe"
            "lipics"
            "margrave"
            "monad"
            "nanopass"
            "neuron"
            "non-det"
            "parenlog"
            "pict3d"
            "plai"
            "play"
            "pollen"
            "pop-pl"
            "py-fizz"
            "racket-dogstatsd"
            "racketscript"
            "rackjure"
            "ragg"
            "rash"
            "reactor"
            "redex"
            "remix"
            "rosette"
            "send-exp"
            "slideshow"
            "slideshow-exe"
            "syndicate"
            "turnstile"
            "typed-racket"
            "video"
            "vr-lang"
            "web-server"))
          (description
           .
           "Metapackage that bundles all the packages discussed or mentioned in Language-oriented Programming in Racket: A Cultural Anthropology")
          (implies . ())
          (last-checked . 1557339521)
          (last-edit . 1538976181)
          (last-updated . 1538976181)
          (modules . ())
          (name . "cultural-anthropology")
          (nix-sha256
           .
           "15iyfgb2r4r6rpf7s6qz9wkjmk37116ji0x30pps9n4riqfddh0l")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-fail: . #t)
                   (author:jesse@lisp.sh . #t)
                   (books . #t)
                   (lang . #t)
                   (ring:2 . #t)))
          (source . "https://github.com/jessealama/cultural-anthropology.git")
          (tags . ("books" "lang"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "936d7abc3a9cd2d88a68b30a98030f79282ec0d1")
                          (source
                           .
                           "https://github.com/jessealama/cultural-anthropology.git")
                          (source_url
                           .
                           "https://github.com/jessealama/cultural-anthropology.git")))))))
 ("cur"
  .
  #hasheq((author . "wjb@williamjbowman.com")
          (authors . ("wjb@williamjbowman.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/cur.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/cur.txt")))
          (checksum . "246c8e06e245e6e09bbc471c84d69a9654ac2b0e")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("cur-lib" "cur-doc" "cur-test"))
          (dependency-names . ("cur-lib" "cur-doc" "cur-test"))
          (description . "Dependent types and meta-programming")
          (implies . ("cur-lib" "cur-doc" "cur-test"))
          (last-checked . 1557339521)
          (last-edit . 1452470883)
          (last-updated . 1538608611)
          (modules . ())
          (name . "cur")
          (nix-sha256
           .
           "1pd608diwy0774cp9lhfw85ra4ljd8mhcbjm1nj0amffiqqqcblg")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:wjb@williamjbowman.com . #t)
                   (proofs . #t)
                   (ring:1 . #t)
                   (types . #t)))
          (source . "git://github.com/wilbowma/cur.git/?path=cur")
          (tags . ("proofs" "types"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "246c8e06e245e6e09bbc471c84d69a9654ac2b0e")
                          (source
                           .
                           "git://github.com/wilbowma/cur.git/?path=cur")
                          (source_url
                           .
                           "git://github.com/wilbowma/cur.git/?path=cur")))))))
 ("cur-doc"
  .
  #hasheq((author . "wjb@williamjbowman.com")
          (authors . ("wjb@williamjbowman.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . "server/built/deps/cur-doc.txt")
                 (docs . (("main" "cur" "doc/cur@cur-doc/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/cur-doc.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/cur-doc.txt")))
          (checksum . "246c8e06e245e6e09bbc471c84d69a9654ac2b0e")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            ("base" #:version "7.0")
            "scribble-lib"
            "racket-doc"
            "sandbox-lib"
            ("cur-lib" #:version "0.40")))
          (dependency-names
           .
           ("base"
            "base"
            "scribble-lib"
            "racket-doc"
            "sandbox-lib"
            "cur-lib"))
          (description . "")
          (implies . ())
          (last-checked . 1557339521)
          (last-edit . 1510768130)
          (last-updated . 1538608611)
          (modules
           .
           ((lib "cur/scribblings/stdlib/equality.scrbl")
            (lib "cur/scribblings/reflection.scrbl")
            (lib "cur/cur.scrbl")
            (lib "cur/scribblings/stdlib/bool.scrbl")
            (lib "cur/scribblings/stdlib/maybe.scrbl")
            (lib "cur/scribblings/ntac.scrbl")
            (lib "cur/scribblings/stdlib.scrbl")
            (lib "cur/scribblings/stdlib/datum.scrbl")
            (lib "cur/scribblings/stdlib/ascii.scrbl")
            (lib "cur/scribblings/stdlib/sugar.scrbl")
            (lib "cur/scribblings/stdlib/list.scrbl")
            (lib "cur/scribblings/stdlib/sigma.scrbl")
            (lib "cur/scribblings/stdlib/typeclass.scrbl")
            (lib "cur/scribblings/stdlib/nat.scrbl")
            (lib "cur/scribblings/curnel.scrbl")
            (lib "cur/scribblings/olly.scrbl")
            (lib "cur/scribblings/defs.rkt")
            (lib "cur/scribblings/stdlib/racket-ascii.scrbl")))
          (name . "cur-doc")
          (nix-sha256
           .
           "1pd608diwy0774cp9lhfw85ra4ljd8mhcbjm1nj0amffiqqqcblg")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-dep-fail: . #t)
                   (:build-success: . #t)
                   (:docs: . #t)
                   (:no-desc: . #t)
                   (:no-tag: . #t)
                   (author:wjb@williamjbowman.com . #t)
                   (ring:1 . #t)))
          (source . "https://github.com/wilbowma/cur.git?path=cur-doc")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "246c8e06e245e6e09bbc471c84d69a9654ac2b0e")
                          (source
                           .
                           "https://github.com/wilbowma/cur.git?path=cur-doc")
                          (source_url
                           .
                           "https://github.com/wilbowma/cur.git?path=cur-doc")))))))
 ("cur-lib"
  .
  #hasheq((author . "wjb@williamjbowman.com")
          (authors . ("wjb@williamjbowman.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/cur-lib.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/cur-lib.txt")))
          (checksum . "246c8e06e245e6e09bbc471c84d69a9654ac2b0e")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base"))
          (dependency-names . ("base"))
          (description . "")
          (implies . ())
          (last-checked . 1557339521)
          (last-edit . 1487913151)
          (last-updated . 1538608612)
          (modules
           .
           ((lib "cur/stdlib/list.rkt")
            (lib "cur/curnel/racket-impl/type-reconstruct.rkt")
            (lib "cur/ntac/ML-rewrite.rkt")
            (lib "cur/main.rkt")
            (lib "cur/curnel/racket-impl/runtime.rkt")
            (lib "cur/curnel/racket-impl/lang.rkt")
            (lib "cur/ntac/utils.rkt")
            (lib "cur/curnel/racket-impl/runtime-utils.rkt")
            (lib "cur/curnel/racket-impl/type-check.rkt")
            (lib "cur/stdlib/sigma.rkt")
            (lib "cur/stdlib/prop.rkt")
            (lib "cur/stdlib/sugar.rkt")
            (lib "cur/curnel/racket-impl/environment.rkt")
            (lib "cur/ntac/base.rkt")
            (lib "cur/stdlib/nat.rkt")
            (lib "cur/stdlib/datum.rkt")
            (lib "cur/stdlib/racket-ascii.rkt")
            (lib "cur/curnel/racket-impl/reflection.rkt")
            (lib "cur/stdlib/ascii.rkt")
            (lib "cur/curnel/racket-impl/equiv.rkt")
            (lib "cur/stdlib/equality.rkt")
            (lib "cur/curnel/racket-impl/eval.rkt")
            (lib "cur/ntac/standard.rkt")
            (lib "cur/stdlib/maybe.rkt")
            (lib "cur/olly.rkt")
            (lib "cur/lang/reader.rkt")
            (lib "cur/stdlib/typeclass.rkt")
            (lib "cur/ntac/rewrite.rkt")
            (lib "cur/stdlib/bool.rkt")
            (lib "cur/curnel/racket-impl/stxutils.rkt")))
          (name . "cur-lib")
          (nix-sha256
           .
           "1pd608diwy0774cp9lhfw85ra4ljd8mhcbjm1nj0amffiqqqcblg")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:no-desc: . #t)
                   (:no-tag: . #t)
                   (author:wjb@williamjbowman.com . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/wilbowma/cur?path=cur-lib")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "246c8e06e245e6e09bbc471c84d69a9654ac2b0e")
                          (source
                           .
                           "git://github.com/wilbowma/cur?path=cur-lib")
                          (source_url
                           .
                           "http://github.com/wilbowma/cur/tree/master?path=cur-lib")))))))
 ("cur-test"
  .
  #hasheq((author . "wjb@williamjbowman.com")
          (authors . ("wjb@williamjbowman.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/cur-test.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/cur-test.txt")))
          (checksum . "246c8e06e245e6e09bbc471c84d69a9654ac2b0e")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "rackunit-lib"
            ("cur-lib" #:version "0.40")
            "sweet-exp-lib"
            "chk-lib"))
          (dependency-names
           .
           ("base" "rackunit-lib" "cur-lib" "sweet-exp-lib" "chk-lib"))
          (description . "")
          (implies . ())
          (last-checked . 1557339522)
          (last-edit . 1452470984)
          (last-updated . 1538608612)
          (modules
           .
           ((lib "cur/tests/sweet-exp.rkt")
            (lib "cur/tests/ntac/rackunit-ntac.rkt")
            (lib "cur/tests/ntac/assert.rkt")
            (lib "cur/tests/curnel/type-check.rkt")
            (lib "cur/tests/curnel/runtime-utils.rkt")
            (lib "cur/tests/stlc.rkt")
            (lib "cur/tests/ntac/rewrite-with-previous.rkt")
            (lib "cur/tests/ntac/software-foundations/Lists.rkt")
            (lib "cur/tests/ntac/ML-rewrite.rkt")
            (lib "cur/tests/ntac/simpl.rkt")
            (lib "cur/tests/ntac.rkt")
            (lib "cur/tests/stdlib/sigma.rkt")
            (lib "cur/tests/ntac/ML-rewrite-2.rkt")
            (lib "cur/tests/plus.rkt")
            (lib "cur/tests/ntac/leb.rkt")
            (lib "cur/tests/ntac/rewrite.rkt")
            (lib "cur/tests/stdlib/equality.rkt")
            (lib "cur/tests/curnel/equiv.rkt")
            (lib "cur/tests/curnel/runtime.rkt")
            (lib "cur/tests/vector-append.rkt")
            (lib "cur/tests/ntac/destruct.rkt")
            (lib "cur/tests/stdlib/curunit.rkt")
            (lib "cur/tests/stdlib/maybe.rkt")
            (lib "cur/tests/stdlib/racket-ascii.rkt")
            (lib "cur/tests/fact.rkt")
            (lib "cur/tests/issue-71.rkt")
            (lib "cur/tests/curnel/local-env.rkt")
            (lib "cur/tests/stdlib/typeclass.rkt")
            (lib "cur/tests/ntac/software-foundations/Basics-ML.rkt")
            (lib "cur/tests/ntac/software-foundations/Induction.rkt")
            (lib "cur/tests/stdlib/datum.rkt")
            (lib "cur/tests/olly.rkt")
            (lib "cur/tests/ntac/software-foundations/Basics.rkt")
            (lib "cur/tests/curnel/type-reconstruct.rkt")
            (lib "cur/tests/curnel/reflection.rkt")
            (lib "cur/tests/stdlib/list.rkt")
            (lib "cur/tests/stdlib/sugar.rkt")
            (lib "cur/tests/issue67.rkt")
            (lib "cur/tests/ntac/software-foundations/Induction-ML.rkt")
            (lib "cur/tests/ntac/rewrite-forall.rkt")
            (lib "cur/tests/ntac/ML-reflexivity.rkt")
            (lib "cur/tests/stdlib/nat.rkt")
            (lib "cur/tests/ntac/Induction-no-Basics.rkt")
            (lib "cur/tests/stdlib/prop.rkt")
            (lib "cur/tests/stdlib/ascii.rkt")
            (lib "cur/tests/curnel/eval.rkt")
            (lib "cur/tests/stdlib/bool.rkt")))
          (name . "cur-test")
          (nix-sha256
           .
           "1pd608diwy0774cp9lhfw85ra4ljd8mhcbjm1nj0amffiqqqcblg")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:no-desc: . #t)
                   (:no-tag: . #t)
                   (author:wjb@williamjbowman.com . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/wilbowma/cur.git/?path=cur-test")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "246c8e06e245e6e09bbc471c84d69a9654ac2b0e")
                          (source
                           .
                           "git://github.com/wilbowma/cur.git/?path=cur-test")
                          (source_url
                           .
                           "git://github.com/wilbowma/cur.git/?path=cur-test")))))))
 ("curly-fn"
  .
  #hasheq((author . "lexi.lambda@gmail.com")
          (authors . ("lexi.lambda@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/curly-fn.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/curly-fn.txt")))
          (checksum . "d64cd71d5b386be85f5979edae6f6b6469a4df86")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("curly-fn-doc" "curly-fn-lib"))
          (dependency-names . ("curly-fn-doc" "curly-fn-lib"))
          (description . "")
          (implies . ("curly-fn-doc" "curly-fn-lib"))
          (last-checked . 1557339522)
          (last-edit . 1475259842)
          (last-updated . 1502815877)
          (modules . ())
          (name . "curly-fn")
          (nix-sha256
           .
           "1llxaykp1sbbqnm89ay6lcswfwjn594xsx491hw70l9g83yyivl1")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:no-desc: . #t)
                   (author:lexi.lambda@gmail.com . #t)
                   (lambda . #t)
                   (lang-extension . #t)
                   (language . #t)
                   (ring:1 . #t)
                   (syntax . #t)))
          (source
           .
           "git://github.com/lexi-lambda/racket-curly-fn?path=curly-fn")
          (tags . ("lambda" "lang-extension" "language" "syntax"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "d64cd71d5b386be85f5979edae6f6b6469a4df86")
                          (source
                           .
                           "git://github.com/lexi-lambda/racket-curly-fn?path=curly-fn")
                          (source_url
                           .
                           "http://github.com/lexi-lambda/racket-curly-fn/tree/master?path=curly-fn")))
                 ("6.1.1"
                  .
                  #hasheq((checksum
                           .
                           "e44ab25b4340b3907f800c998596949e10307448")
                          (source
                           .
                           "git://github.com/lexi-lambda/racket-curly-fn#version-exception--old-macroexpander")
                          (source_url
                           .
                           "http://github.com/lexi-lambda/racket-curly-fn/tree/master#version-exception--old-macroexpander")))
                 ("6.2"
                  .
                  #hasheq((checksum
                           .
                           "e44ab25b4340b3907f800c998596949e10307448")
                          (source
                           .
                           "git://github.com/lexi-lambda/racket-curly-fn#version-exception--old-macroexpander")
                          (source_url
                           .
                           "http://github.com/lexi-lambda/racket-curly-fn/tree/master#version-exception--old-macroexpander")))
                 ("6.2.1"
                  .
                  #hasheq((checksum
                           .
                           "e44ab25b4340b3907f800c998596949e10307448")
                          (source
                           .
                           "git://github.com/lexi-lambda/racket-curly-fn#version-exception--old-macroexpander")
                          (source_url
                           .
                           "http://github.com/lexi-lambda/racket-curly-fn/tree/master#version-exception--old-macroexpander")))))))
 ("curly-fn-doc"
  .
  #hasheq((author . "lexi.lambda@gmail.com")
          (authors . ("lexi.lambda@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "curly-fn"
                    "doc/curly-fn@curly-fn-doc/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/curly-fn-doc.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/curly-fn-doc.txt")))
          (checksum . "d64cd71d5b386be85f5979edae6f6b6469a4df86")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "curly-fn-lib"
            "namespaced-transformer-doc"
            "namespaced-transformer-lib"
            "racket-doc"
            "scribble-code-examples"
            "scribble-lib"))
          (dependency-names
           .
           ("base"
            "curly-fn-lib"
            "namespaced-transformer-doc"
            "namespaced-transformer-lib"
            "racket-doc"
            "scribble-code-examples"
            "scribble-lib"))
          (description . "")
          (implies . ())
          (last-checked . 1557339522)
          (last-edit . 1473377651)
          (last-updated . 1502815877)
          (modules . ((lib "scribblings/curly-fn.scrbl")))
          (name . "curly-fn-doc")
          (nix-sha256
           .
           "1llxaykp1sbbqnm89ay6lcswfwjn594xsx491hw70l9g83yyivl1")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (:no-desc: . #t)
                   (:no-tag: . #t)
                   (author:lexi.lambda@gmail.com . #t)
                   (ring:1 . #t)))
          (source
           .
           "git://github.com/lexi-lambda/racket-curly-fn?path=curly-fn-doc")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "d64cd71d5b386be85f5979edae6f6b6469a4df86")
                          (source
                           .
                           "git://github.com/lexi-lambda/racket-curly-fn?path=curly-fn-doc")
                          (source_url
                           .
                           "http://github.com/lexi-lambda/racket-curly-fn/tree/master?path=curly-fn-doc")))))))
 ("curly-fn-lib"
  .
  #hasheq((author . "lexi.lambda@gmail.com")
          (authors . ("lexi.lambda@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/curly-fn-lib.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/curly-fn-lib.txt")))
          (checksum . "d64cd71d5b386be85f5979edae6f6b6469a4df86")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           (("base" #:version "6.3") "namespaced-transformer-lib"))
          (dependency-names . ("base" "namespaced-transformer-lib"))
          (description . "")
          (implies . ())
          (last-checked . 1557339522)
          (last-edit . 1473377629)
          (last-updated . 1502815878)
          (modules
           .
           ((lib "curly-fn/lang/runtime-config.rkt")
            (lib "curly-fn/lang/reader.rkt")
            (lib "curly-fn/main.rkt")
            (lib "curly-fn/private/make-extension-reader.rkt")
            (lib "curly-fn/private/curly-fn-transformer.rkt")
            (lib "curly-fn/lang/language-info.rkt")))
          (name . "curly-fn-lib")
          (nix-sha256
           .
           "1llxaykp1sbbqnm89ay6lcswfwjn594xsx491hw70l9g83yyivl1")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:no-desc: . #t)
                   (:no-tag: . #t)
                   (author:lexi.lambda@gmail.com . #t)
                   (ring:1 . #t)))
          (source
           .
           "git://github.com/lexi-lambda/racket-curly-fn?path=curly-fn-lib")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "d64cd71d5b386be85f5979edae6f6b6469a4df86")
                          (source
                           .
                           "git://github.com/lexi-lambda/racket-curly-fn?path=curly-fn-lib")
                          (source_url
                           .
                           "http://github.com/lexi-lambda/racket-curly-fn/tree/master?path=curly-fn-lib")))))))
 ("curly-fn-test"
  .
  #hasheq((author . "lexi.lambda@gmail.com")
          (authors . ("lexi.lambda@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/curly-fn-test.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/curly-fn-test.txt")))
          (checksum . "d64cd71d5b386be85f5979edae6f6b6469a4df86")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "curly-fn-lib" "rackunit-lib"))
          (dependency-names . ("base" "curly-fn-lib" "rackunit-lib"))
          (description . "")
          (implies . ())
          (last-checked . 1557339522)
          (last-edit . 1473377672)
          (last-updated . 1502815878)
          (modules . ((lib "tests/curly-fn.rkt")))
          (name . "curly-fn-test")
          (nix-sha256
           .
           "1llxaykp1sbbqnm89ay6lcswfwjn594xsx491hw70l9g83yyivl1")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:no-desc: . #t)
                   (:no-tag: . #t)
                   (author:lexi.lambda@gmail.com . #t)
                   (ring:1 . #t)))
          (source
           .
           "git://github.com/lexi-lambda/racket-curly-fn?path=curly-fn-test")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "d64cd71d5b386be85f5979edae6f6b6469a4df86")
                          (source
                           .
                           "git://github.com/lexi-lambda/racket-curly-fn?path=curly-fn-test")
                          (source_url
                           .
                           "http://github.com/lexi-lambda/racket-curly-fn/tree/master?path=curly-fn-test")))))))
 ("curved-text"
  .
  #hasheq((author . "klibert.piotr@gmail.com")
          (authors . ("klibert.piotr@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . "server/built/fail/curved-text.txt")
                 (min-failure-log . #f)
                 (success-log . #f)
                 (test-failure-log . #f)
                 (test-success-log . #f)))
          (checksum . "bc6223bfc3949bf2f632c86588f10f8da2ef0b6c")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "rackunit-lib" "scribble-lib" "racket-doc"))
          (dependency-names
           .
           ("base" "rackunit-lib" "scribble-lib" "racket-doc"))
          (description . "")
          (implies . ())
          (last-checked . 1557339522)
          (last-edit . 1490796988)
          (last-updated . 1502815878)
          (modules
           .
           ((lib "curved-text/bezier/binary-search.rkt")
            (lib "curved-text/bezier/utils.rkt")
            (lib "curved-text/bezier/point.rkt")
            (lib "curved-text/main.rkt")
            (lib "curved-text/bezier/math.rkt")
            (lib "curved-text/demo/canvas.rkt")
            (lib "curved-text/demo/main.rkt")
            (lib "curved-text/bezier/curve.rkt")
            (lib "curved-text/demo/drawing.rkt")
            (lib "curved-text/bezier/curved-text.rkt")
            (lib "curved-text/bezier/tables.rkt")))
          (name . "curved-text")
          (nix-sha256
           .
           "0jmm2jql5lv7zr0mrqrb04d6rqn1kpvs5bycw2ii2hy16gq13w9n")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-fail: . #t)
                   (:no-desc: . #t)
                   (author:klibert.piotr@gmail.com . #t)
                   (curve . #t)
                   (graphics . #t)
                   (gui . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/piotrklibert/curved-text")
          (tags . ("curve" "graphics" "gui"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "bc6223bfc3949bf2f632c86588f10f8da2ef0b6c")
                          (source
                           .
                           "git://github.com/piotrklibert/curved-text")
                          (source_url
                           .
                           "http://github.com/piotrklibert/curved-text/tree/master")))))))
 ("custom-load"
  .
  #hasheq((author . "ryanc@racket-lang.org")
          (authors . ("ryanc@racket-lang.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "custom-load"
                    "doc/custom-load@custom-load/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/custom-load.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/custom-load.txt")))
          (checksum . "4e70205c29ab0672663fcae78ded32563f01414b")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "racket-doc" "scribble-lib"))
          (dependency-names . ("base" "racket-doc" "scribble-lib"))
          (description . "A load handler that avoids stale zo files.")
          (implies . ())
          (last-checked . 1557339522)
          (last-edit . 1429587087)
          (last-updated . 1502815878)
          (modules
           .
           ((lib "custom-load/custom-load.scrbl")
            (lib "custom-load/test/c.rkt")
            (lib "custom-load/test/b.rkt")
            (lib "custom-load/top.rkt")
            (lib "custom-load/private/loader.rkt")
            (lib "custom-load/test/a.rkt")
            (lib "custom-load/main.rkt")))
          (name . "custom-load")
          (nix-sha256
           .
           "0mnlsr91qcbppdisd01f5g7dyqn2j4sfy41lp917a29nl45cvrpg")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (:no-tag: . #t)
                   (author:ryanc@racket-lang.org . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/rmculpepper/custom-load")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "4e70205c29ab0672663fcae78ded32563f01414b")
                          (source
                           .
                           "git://github.com/rmculpepper/custom-load")
                          (source_url
                           .
                           "http://github.com/rmculpepper/custom-load/tree/master")))))))
 ("dali"
  .
  #hasheq((author . "johnstonskj@gmail.com")
          (authors . ("johnstonskj@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "dali" "doc/dali@dali/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/dali.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/dali.txt")))
          (checksum . "d69925424559447fbd3bba7d4d66dcb2a745b9c2")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "rackunit-lib"
            "racket-index"
            "scribble-lib"
            "racket-doc"
            "sandbox-lib"
            "cover-coveralls"))
          (dependency-names
           .
           ("base"
            "rackunit-lib"
            "racket-index"
            "scribble-lib"
            "racket-doc"
            "sandbox-lib"
            "cover-coveralls"))
          (description
           .
           "Simple text templating (mustache/handlebars style) for Racket.")
          (implies . ())
          (last-checked . 1557339522)
          (last-edit . 1537394131)
          (last-updated . 1538070924)
          (modules
           .
           ((lib "dali/tests/test-doc-complete.rkt")
            (lib "dali/tests/dali.rkt")
            (lib "dali/scribblings/dali.scrbl")
            (lib "dali/main.rkt")))
          (name . "dali")
          (nix-sha256
           .
           "1cc7gwp66xac47damncg99m30vrk649hl09q1xy2j5d3fdmy2bp5")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:johnstonskj@gmail.com . #t)
                   (ring:2 . #t)
                   (template . #t)))
          (source . "https://github.com/johnstonskj/dali.git")
          (tags . ("template"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "d69925424559447fbd3bba7d4d66dcb2a745b9c2")
                          (source . "https://github.com/johnstonskj/dali.git")
                          (source_url
                           .
                           "https://github.com/johnstonskj/dali.git")))))))
 ("dan-scheme"
  .
  #hasheq((author . "david@davidchristiansen.dk")
          (authors . ("david@davidchristiansen.dk"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "dan-scheme"
                    "doc/dan-scheme@dan-scheme/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/dan-scheme.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/dan-scheme.txt")))
          (checksum . "f24fdf3569b718449b7dd64a14f5c53311dea057")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "rackunit-lib" "scribble-lib" "racket-doc"))
          (dependency-names
           .
           ("base" "rackunit-lib" "scribble-lib" "racket-doc"))
          (description
           .
           "A very little language for situations where simplicity is desired over convenience")
          (implies . ())
          (last-checked . 1557339522)
          (last-edit . 1484148866)
          (last-updated . 1502815879)
          (modules
           .
           ((lib "dan-scheme/test.rkt")
            (lib "dan-scheme/main.rkt")
            (lib "dan-scheme/scribblings/dan-scheme.scrbl")))
          (name . "dan-scheme")
          (nix-sha256
           .
           "0c7rm16srx98qzdnyv4p6w0w5wi2v35wsg29cdcggjhiicy6by5r")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (:no-tag: . #t)
                   (author:david@davidchristiansen.dk . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/david-christiansen/dan-scheme")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "f24fdf3569b718449b7dd64a14f5c53311dea057")
                          (source
                           .
                           "git://github.com/david-christiansen/dan-scheme")
                          (source_url
                           .
                           "http://github.com/david-christiansen/dan-scheme/tree/master")))))))
 ("data"
  .
  #hash((author . "ryanc@racket-lang.org")
        (checksum . "7e22a1737de1b67656ee1444931081a73f7c83a1")
        (dependencies . ("data-lib" "data-enumerate-lib" "data-doc"))
        (dependency-names . ("data-lib" "data-enumerate-lib" "data-doc"))
        (description . "ryanc@racket-lang.org")
        (modules . ())
        (name . "data")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/data.zip")
        (tags . ())))
 ("data-doc"
  .
  #hash((author . "ryanc@racket-lang.org")
        (checksum . "d5fb9d883d4e8a3c4bf1226485b516545d52b31b")
        (dependencies
         .
         ("base"
          "data-lib"
          "data-enumerate-lib"
          "racket-doc"
          "scribble-lib"
          "plot-lib"
          "math-doc"
          "math-lib"
          "pict-doc"
          "pict-lib"))
        (dependency-names
         .
         ("base"
          "data-lib"
          "data-enumerate-lib"
          "racket-doc"
          "scribble-lib"
          "plot-lib"
          "math-doc"
          "math-lib"
          "pict-doc"
          "pict-lib"))
        (description . "ryanc@racket-lang.org")
        (modules . ())
        (name . "data-doc")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/data-doc.zip")
        (tags . ())))
 ("data-enumerate-lib"
  .
  #hash((author . "maxsnew@racket-lang.org jay@racket-lang.org")
        (checksum . "9d9553485d3306fc49a46fd42155802044ac4954")
        (dependencies
         .
         (("base" #:version "6.8.0.2") "data-lib" "math-lib" "rackunit-lib"))
        (dependency-names . ("base" "data-lib" "math-lib" "rackunit-lib"))
        (description . "maxsnew@racket-lang.org jay@racket-lang.org")
        (modules . ())
        (name . "data-enumerate-lib")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/data-enumerate-lib.zip")
        (tags . ())))
 ("data-frame"
  .
  #hasheq((author . "alexharsanyi@gmail.com")
          (authors . ("alexharsanyi@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "data-frame"
                    "doc/data-frame@data-frame/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/data-frame.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/data-frame.txt")))
          (checksum . "f8001b50e2badc09d81a1a3e261ca641aefd678f")
          (checksum-error . #f)
          (conflicts . ())
          (date-added . 1552739191)
          (dependencies
           .
           ("db-lib"
            "draw-lib"
            "math-lib"
            "plot-gui-lib"
            "plot-lib"
            "srfi-lite-lib"
            "typed-racket-lib"
            "rackunit-lib"
            "base"
            "scribble-lib"
            "racket-doc"
            "rackunit-lib"
            "db-doc"
            "math-doc"
            "plot-doc"))
          (dependency-names
           .
           ("db-lib"
            "draw-lib"
            "math-lib"
            "plot-gui-lib"
            "plot-lib"
            "srfi-lite-lib"
            "typed-racket-lib"
            "rackunit-lib"
            "base"
            "scribble-lib"
            "racket-doc"
            "rackunit-lib"
            "db-doc"
            "math-doc"
            "plot-doc"))
          (description . "A data frame implementation for Racket")
          (implies . ())
          (last-checked . 1557339523)
          (last-edit . 1552739191)
          (last-updated . 1555218176)
          (modules
           .
           ((lib "data-frame/private/histogram.rkt")
            (lib "data-frame/private/df.rkt")
            (lib "data-frame/private/slr.rkt")
            (lib "data-frame/private/rdp-simplify.rkt")
            (lib "data-frame/private/test/df-generate.rkt")
            (lib "data-frame/private/csv.rkt")
            (lib "data-frame/private/describe.rkt")
            (lib "data-frame/private/bsearch.rkt")
            (lib "data-frame/private/sql.rkt")
            (lib "data-frame/private/gpx.rkt")
            (lib "data-frame/private/test/df-test.rkt")
            (lib "data-frame/private/annealing.rkt")
            (lib "data-frame/scribblings/data-frame.scrbl")
            (lib "data-frame/private/test/df-lsq-plots.rkt")
            (lib "data-frame/private/scatter.rkt")
            (lib "data-frame/private/colors.rkt")
            (lib "data-frame/private/exn.rkt")
            (lib "data-frame/private/series.rkt")
            (lib "data-frame/private/spline.rkt")
            (lib "data-frame/private/meanmax.rkt")
            (lib "data-frame/private/least-squares-fit.rkt")
            (lib "data-frame/main.rkt")
            (lib "data-frame/private/statistics.rkt")))
          (name . "data-frame")
          (nix-sha256
           .
           "1rraqzsnmb30567lrahanlwadvakp4bwghbkn02289fd5hgj74bs")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:alexharsanyi@gmail.com . #t)
                   (data-frame . #t)
                   (ring:2 . #t)
                   (tabular . #t)))
          (source . "https://github.com/alex-hhh/data-frame.git")
          (tags . ("data-frame" "tabular"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "f8001b50e2badc09d81a1a3e261ca641aefd678f")
                          (source
                           .
                           "https://github.com/alex-hhh/data-frame.git")
                          (source_url
                           .
                           "https://github.com/alex-hhh/data-frame.git")))))))
 ("data-lib"
  .
  #hash((author . "ryanc@racket-lang.org")
        (checksum . "1c731a8ad28dced8518eacb3021763d4996fa2c9")
        (dependencies . (("base" #:version "6.2.900.6") "rackunit-lib"))
        (dependency-names . ("base" "rackunit-lib"))
        (description . "ryanc@racket-lang.org")
        (modules . ())
        (name . "data-lib")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/data-lib.zip")
        (tags . ())))
 ("data-red-black"
  .
  #hasheq((author . "dyoo@hashcollision.org")
          (authors . ("dyoo@hashcollision.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "data-red-black"
                    "doc/data-red-black@data-red-black/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/data-red-black.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/data-red-black.txt")))
          (checksum . "d473dd82c5406c8954f70060fe3764bf72d92a90")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "data-lib"
            "data-doc"
            "racket-doc"
            "rackunit-lib"
            "scribble-lib"))
          (dependency-names
           .
           ("base"
            "data-lib"
            "data-doc"
            "racket-doc"
            "rackunit-lib"
            "scribble-lib"))
          (description
           .
           "red-black trees.  Includes implementations of augmented red-black trees, positional red-black trees, and an ordered set backed by a rb-tree.")
          (implies . ())
          (last-checked . 1557339523)
          (last-edit . 1359057406)
          (last-updated . 1502815880)
          (modules
           .
           ((lib "data/red-black/augmented.scrbl")
            (lib "data/red-black/biblio.scrbl")
            (lib "data/red-black/ordered-set.rkt")
            (lib "data/red-black/data-red-black.scrbl")
            (lib "data/red-black/positional.scrbl")
            (lib "data/red-black/augmented.rkt")
            (lib "data/red-black/ordered-set.scrbl")
            (lib "data/red-black/rb-token-tree.rkt")
            (lib "data/red-black/positional.rkt")))
          (name . "data-red-black")
          (nix-sha256
           .
           "1s19q718ac26cpzm0gqxp8n3ywqqp5pm9i96hnv9gyrfrh8836ah")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:dyoo@hashcollision.org . #t)
                   (data . #t)
                   (ring:1 . #t)))
          (source . "github://github.com/dyoo/data-red-black/master/")
          (tags . ("data"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "d473dd82c5406c8954f70060fe3764bf72d92a90")
                          (source
                           .
                           "github://github.com/dyoo/data-red-black/master/")
                          (source_url
                           .
                           "http://github.com/dyoo/data-red-black/tree/master/")))))))
 ("data-table"
  .
  #hasheq((author . "matt@jadud.com")
          (authors . ("matt@jadud.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("none" "manual")))
                 (failure-log . "server/built/fail/data-table.txt")
                 (min-failure-log . #f)
                 (success-log . #f)
                 (test-failure-log . #f)
                 (test-success-log . #f)))
          (checksum . "331dcd445372435abcca64e4eb75c8d34a73fe5b")
          (checksum-error . #f)
          (conflicts . ())
          (date-added . 1551027738)
          (dependencies
           .
           ("db" "data-lib" "csv-reading" "gregor" "rackunit" "rackunit-chk"))
          (dependency-names
           .
           ("db" "data-lib" "csv-reading" "gregor" "rackunit" "rackunit-chk"))
          (description
           .
           "data-table provides a set of tools for working with tabular data. Still under construction.")
          (implies . ())
          (last-checked . 1557339523)
          (last-edit . 1551037653)
          (last-updated . 1552374179)
          (modules
           .
           ((lib "data-table/sanitizers.rkt")
            (lib "data-table/formats/csv.rkt")
            (lib "data-table/scribblings/introduction.scrbl")
            (lib "data-table/main.rkt")
            (lib "data-table/scribblings/manual.scrbl")
            (lib "data-table/data-science-wrapper.rkt")
            (lib "data-table/scribblings/reference.scrbl")
            (lib "data-table/formats/sheets.rkt")
            (lib "data-table/formats/sqlite.rkt")
            (lib "data-table/syntax-wrappers.rkt")
            (lib "data-table/operations/pull.rkt")
            (lib "data-table/formats/sql-util.rkt")
            (lib "data-table/scribblings/guide.scrbl")
            (lib "data-table/scribblings/working-with-data.scrbl")
            (lib "data-table/scribblings/generate-images.rkt")
            (lib "data-table/scribblings/operations/pull.scrbl")
            (lib "data-table/scribblings/operations/drawing-support.rkt")
            (lib "data-table/test-support.rkt")
            (lib "data-table/scribblings/reading-data.scrbl")
            (lib "data-table/formats/sql.rkt")
            (lib "data-table/scribblings/operations/select.scrbl")
            (lib "data-table/scribblings/operations/sieve.scrbl")
            (lib "data-table/operations/sieve.rkt")
            (lib "data-table/types.rkt")
            (lib "data-table/tables.rkt")
            (lib "data-table/operations/select.rkt")
            (lib "data-table/scribblings/sanitizers.scrbl")))
          (name . "data-table")
          (nix-sha256
           .
           "17ah3mxrsinqflsm90q76xg66chq49nb32r6hf4r54bp5nccf5yb")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-fail: . #t)
                   (:docs-error: . #t)
                   (author:matt@jadud.com . #t)
                   (data . #t)
                   (frame . #t)
                   (gsheets . #t)
                   (mysql . #t)
                   (ring:2 . #t)
                   (sqlite3 . #t)
                   (tabular . #t)))
          (source . "https://github.com/jadudm/data-table.git")
          (tags . ("data" "frame" "gsheets" "mysql" "sqlite3" "tabular"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "331dcd445372435abcca64e4eb75c8d34a73fe5b")
                          (source
                           .
                           "https://github.com/jadudm/data-table.git")
                          (source_url
                           .
                           "https://github.com/jadudm/data-table.git")))))))
 ("data-test"
  .
  #hash((author . "ryanc@racket-lang.org")
        (checksum . "9a9057f8935be2867f45dedb5a368a592801d7cf")
        (dependencies
         .
         ("base"
          "data-enumerate-lib"
          "racket-index"
          "data-lib"
          "rackunit-lib"
          "math-lib"))
        (dependency-names
         .
         ("base"
          "data-enumerate-lib"
          "racket-index"
          "data-lib"
          "rackunit-lib"
          "math-lib"))
        (description . "ryanc@racket-lang.org")
        (modules . ())
        (name . "data-test")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/data-test.zip")
        (tags . ())))
 ("database-url"
  .
  #hasheq((author . "lassi@lassi.io")
          (authors . ("lassi@lassi.io"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "database-url"
                    "doc/database-url@database-url/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/database-url.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/database-url.txt")))
          (checksum . "89110683d2014b9e16f30210636a5f8eabd3cdbd")
          (checksum-error . #f)
          (conflicts . ())
          (date-added . 1555074431)
          (dependencies
           .
           ("db-lib"
            "rackunit-lib"
            "base"
            "db-doc"
            "racket-doc"
            "scribble-lib"))
          (dependency-names
           .
           ("db-lib"
            "rackunit-lib"
            "base"
            "db-doc"
            "racket-doc"
            "scribble-lib"))
          (description
           .
           "Parse DATABASE_URL for use with the Racket db module")
          (implies . ())
          (last-checked . 1557339523)
          (last-edit . 1555074431)
          (last-updated . 1556028183)
          (modules
           .
           ((lib "database-url/database-url.rkt")
            (lib "database-url/main.rkt")
            (lib "database-url/database-url.scrbl")
            (lib "database-url/database-url-test.rkt")))
          (name . "database-url")
          (nix-sha256
           .
           "0blv84xpgx168fbmbfh8yi7bav0qirhwigq5yrnb1l0gx62743bb")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:lassi@lassi.io . #t)
                   (db . #t)
                   (ring:2 . #t)
                   (uri . #t)
                   (url . #t)
                   (web . #t)))
          (source . "https://github.com/lassik/racket-database-url.git")
          (tags . ("db" "uri" "url" "web"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "89110683d2014b9e16f30210636a5f8eabd3cdbd")
                          (source
                           .
                           "https://github.com/lassik/racket-database-url.git")
                          (source_url
                           .
                           "https://github.com/lassik/racket-database-url.git")))))))
 ("datacell"
  .
  #hasheq((author . "spencer@florence.io")
          (authors . ("spencer@florence.io"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "datacell" "doc/datacell@datacell/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/datacell.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/datacell.txt")))
          (checksum . "fe91d9251542df5f9edb41fb457fb6c7f548d425")
          (checksum-error . #f)
          (conflicts . ())
          (date-added . 1551898611)
          (dependencies
           .
           ("base" "sandbox-lib" "scribble-lib" "racket-doc" "rackunit-lib"))
          (dependency-names
           .
           ("base" "sandbox-lib" "scribble-lib" "racket-doc" "rackunit-lib"))
          (description . "A simple embedded dataflow language")
          (implies . ())
          (last-checked . 1557339523)
          (last-edit . 1551898622)
          (last-updated . 1553173378)
          (modules
           .
           ((lib "datacell/scribblings/datacell.scrbl")
            (lib "datacell/private/cell.rkt")
            (lib "datacell/main.rkt")))
          (name . "datacell")
          (nix-sha256
           .
           "1zqxzwwm4pwrrsbrn9ajb4nwsic3hnd79fc3nmdnlz2ysx2wnli5")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:spencer@florence.io . #t)
                   (dataflow . #t)
                   (ring:2 . #t)))
          (source . "https://github.com/florence/datacell.git")
          (tags . ("dataflow"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "fe91d9251542df5f9edb41fb457fb6c7f548d425")
                          (source
                           .
                           "https://github.com/florence/datacell.git")
                          (source_url
                           .
                           "https://github.com/florence/datacell.git")))))))
 ("datalog"
  .
  #hash((author . "jay@racket-lang.org")
        (checksum . "1ecded81525c61c9cf142a69a7d1da575a5a95e6")
        (dependencies
         .
         ("base"
          "parser-tools-lib"
          "racket-doc"
          "scribble-lib"
          "rackunit-lib"))
        (dependency-names
         .
         ("base"
          "parser-tools-lib"
          "racket-doc"
          "scribble-lib"
          "rackunit-lib"))
        (description . "jay@racket-lang.org")
        (modules . ())
        (name . "datalog")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/datalog.zip")
        (tags . ())))
 ("datatype"
  .
  #hasheq((author . "sgtamk@gmail.com")
          (authors . ("sgtamk@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/datatype.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/datatype.txt")))
          (checksum . "fda1df0f803fb7e4c33ea25697e1291edc9b6d3d")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "typed-racket-lib"))
          (dependency-names . ("base" "typed-racket-lib"))
          (description . "Algebraic(-like) Data Types")
          (implies . ())
          (last-checked . 1557339523)
          (last-edit . 1476382356)
          (last-updated . 1502815881)
          (modules
           .
           ((lib "datatype/private/example.rkt")
            (lib "datatype/private/example-usage.rkt")
            (lib "datatype/private/type-case.rkt")
            (lib "datatype/main.rkt")
            (lib "datatype/experimental/example.rkt")
            (lib "datatype/experimental/datatype.rkt")
            (lib "datatype/private/example-type.rkt")
            (lib "datatype/private/parse-type.rkt")))
          (name . "datatype")
          (nix-sha256
           .
           "010sw6ljqk87z06rzic8p7wcjbii8rg2y7jvgxqsk5y3ash707da")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:no-tag: . #t)
                   (author:sgtamk@gmail.com . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/pnwamk/datatype#master")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "fda1df0f803fb7e4c33ea25697e1291edc9b6d3d")
                          (source . "git://github.com/pnwamk/datatype#master")
                          (source_url
                           .
                           "http://github.com/pnwamk/datatype/tree/master#master")))))))
 ("date"
  .
  #hasheq((author . "ray.racine@gmail.com")
          (authors . ("ray.racine@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "date" "doc/date@date/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/date.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/date.txt")))
          (checksum . "57d7adbbc09dffc26337bff1b1a3597c872be8ea")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("srfi-lite-lib"
            "typed-racket-lib"
            "base"
            "srfi-lite-lib"
            "typed-racket-more"
            "typed-racket-lib"
            "scribble-lib"
            "racket-doc"
            "rackunit-lib"))
          (dependency-names
           .
           ("srfi-lite-lib"
            "typed-racket-lib"
            "base"
            "srfi-lite-lib"
            "typed-racket-more"
            "typed-racket-lib"
            "scribble-lib"
            "racket-doc"
            "rackunit-lib"))
          (description
           .
           "Simple Date/Time support for formats commonly used on the Web in Typed Racket.\r\nNote there are better collection options unless you just need a RFC/ISO date for some HTTP API or similar.")
          (implies . ())
          (last-checked . 1557339523)
          (last-edit . 1528424264)
          (last-updated . 1528424264)
          (modules
           .
           ((lib "date/scribblings/date.scrbl") (lib "date/main.rkt")))
          (name . "date")
          (nix-sha256
           .
           "11bfr9l3krj71i2zwdmzxh2qc1sxi4k4pqy8hwrg40iysd5hkvnl")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (ISO-8601 . #t)
                   (RFC-2822 . #t)
                   (author:ray.racine@gmail.com . #t)
                   (date . #t)
                   (datetime . #t)
                   (ring:2 . #t)
                   (time . #t)))
          (source . "https://gitlab.com/RayRacine/date.git")
          (tags . ("date" "datetime" "ISO-8601" "RFC-2822" "time"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "57d7adbbc09dffc26337bff1b1a3597c872be8ea")
                          (source . "https://gitlab.com/RayRacine/date.git")
                          (source_url
                           .
                           "https://gitlab.com/RayRacine/date.git")))))))
 ("db"
  .
  #hash((author . "ryanc@racket-lang.org")
        (checksum . "1dbd5264a1f92ef405bb7b8d2557a9dc2b88ebaa")
        (dependencies . ("db-lib" "db-doc" "base"))
        (dependency-names . ("db-lib" "db-doc" "base"))
        (description . "ryanc@racket-lang.org")
        (modules . ())
        (name . "db")
        (source . "https://download.racket-lang.org/releases/7.2/pkgs/db.zip")
        (tags . ())))
 ("db-doc"
  .
  #hash((author . "ryanc@racket-lang.org")
        (checksum . "69c0f5610f60c954538d509ccae4e0b94247e675")
        (dependencies
         .
         ("base"
          "data-doc"
          "srfi-lite-lib"
          "web-server-doc"
          "base"
          "scribble-lib"
          "sandbox-lib"
          "web-server-lib"
          "db-lib"
          "racket-doc"))
        (dependency-names
         .
         ("base"
          "data-doc"
          "srfi-lite-lib"
          "web-server-doc"
          "base"
          "scribble-lib"
          "sandbox-lib"
          "web-server-lib"
          "db-lib"
          "racket-doc"))
        (description . "ryanc@racket-lang.org")
        (modules . ())
        (name . "db-doc")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/db-doc.zip")
        (tags . ())))
 ("db-lib"
  .
  #hash((author . "ryanc@racket-lang.org")
        (checksum . "996184d8a7a3e97a6ff411db3a78a5bdc30b2284")
        (dependencies
         .
         ("srfi-lite-lib"
          ("base" #:version "6.90.0.24")
          "unix-socket-lib"
          "sasl-lib"))
        (dependency-names
         .
         ("srfi-lite-lib" "base" "unix-socket-lib" "sasl-lib"))
        (description . "ryanc@racket-lang.org")
        (modules . ())
        (name . "db-lib")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/db-lib.zip")
        (tags . ())))
 ("db-ppc-macosx"
  .
  #hash((author . "mflatt@racket-lang.org")
        (checksum . "62de6a2f61e55a8c49196dd490e47791a2384b66")
        (dependencies . ("base"))
        (dependency-names . ("base"))
        (description . "mflatt@racket-lang.org")
        (modules . ())
        (name . "db-ppc-macosx")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/db-ppc-macosx.zip")
        (tags . ())))
 ("db-test"
  .
  #hash((author . "ryanc@racket-lang.org")
        (checksum . "d06b6311486b4e9748a20331e0c68be929c64ec8")
        (dependencies
         .
         ("base" "db-lib" "rackunit-lib" "web-server-lib" "srfi-lite-lib"))
        (dependency-names
         .
         ("base" "db-lib" "rackunit-lib" "web-server-lib" "srfi-lite-lib"))
        (description . "ryanc@racket-lang.org")
        (modules . ())
        (name . "db-test")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/db-test.zip")
        (tags . ())))
 ("db-win32-i386"
  .
  #hash((author . "mflatt@racket-lang.org")
        (checksum . "200bd5ab1184f19bb3273dd8b7dc19e013057957")
        (dependencies . ("base"))
        (dependency-names . ("base"))
        (description . "mflatt@racket-lang.org")
        (modules . ())
        (name . "db-win32-i386")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/db-win32-i386.zip")
        (tags . ())))
 ("db-win32-x86_64"
  .
  #hash((author . "mflatt@racket-lang.org")
        (checksum . "54ad0b6cb228ed0a819a84cd612af34f15bfbbfe")
        (dependencies . ("base"))
        (dependency-names . ("base"))
        (description . "mflatt@racket-lang.org")
        (modules . ())
        (name . "db-win32-x86_64")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/db-win32-x86_64.zip")
        (tags . ())))
 ("db-x86_64-linux-natipkg"
  .
  #hash((author . "mflatt@racket-lang.org")
        (checksum . "8ae0e7990bf8873c2599b5957e5ff6c2a6162ee2")
        (dependencies . ("base"))
        (dependency-names . ("base"))
        (description . "mflatt@racket-lang.org")
        (modules . ())
        (name . "db-x86_64-linux-natipkg")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/db-x86_64-linux-natipkg.zip")
        (tags . ())))
 ("dbm"
  .
  #hasheq((author . "jay.mccarthy@gmail.com")
          (authors . ("jay.mccarthy@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "dbm" "doc/dbm@dbm/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/dbm.txt")
                 (test-failure-log . "server/built/test-fail/dbm.txt")
                 (test-success-log . #f)))
          (checksum . "5db7d6d0dc7c1d9256cfc62cced7050b11dd52a6")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "racket-doc" "scribble-lib"))
          (dependency-names . ("base" "racket-doc" "scribble-lib"))
          (description . "An interface to UNIX dbm files using a libdbm FFI")
          (implies . ())
          (last-checked . 1557339526)
          (last-edit . 1354108626)
          (last-updated . 1502815888)
          (modules
           .
           ((lib "file/dbm/dbm.rkt")
            (lib "file/dbm/dbm.scrbl")
            (lib "file/dbm/test.rkt")
            (lib "file/dbm/dbm-ffi.rkt")
            (lib "file/dbm.rkt")))
          (name . "dbm")
          (nix-sha256
           .
           "18rcmgch0ldwwdwma8b7bjd3l6cfmfrfjc8n1c34212cwmh4vymh")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:jay.mccarthy@gmail.com . #t)
                   (db . #t)
                   (ffi . #t)
                   (ring:1 . #t)))
          (source . "github://github.com/jeapostrophe/dbm/master")
          (tags . ("db" "ffi"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "5db7d6d0dc7c1d9256cfc62cced7050b11dd52a6")
                          (source
                           .
                           "github://github.com/jeapostrophe/dbm/master")
                          (source_url
                           .
                           "http://github.com/jeapostrophe/dbm/tree/master")))))))
 ("dbus"
  .
  #hasheq((author . "tonygarnockjones@gmail.com mordae@anilinux.org")
          (authors . ("tonygarnockjones@gmail.com" "mordae@anilinux.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "dbus" "doc/dbus@dbus/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/dbus.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/dbus.txt")))
          (checksum . "57c5e3d9120f778b48ba01efb6b37c1ffbc9963d")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("xexpr-path"
            "misc1"
            "base"
            "parser-tools-lib"
            "unstable-lib"
            "racket-doc"
            "scribble-lib"))
          (dependency-names
           .
           ("xexpr-path"
            "misc1"
            "base"
            "parser-tools-lib"
            "unstable-lib"
            "racket-doc"
            "scribble-lib"))
          (description . "Native D-Bus for Racket")
          (implies . ())
          (last-checked . 1557339527)
          (last-edit . 1474394630)
          (last-updated . 1502815888)
          (modules
           .
           ((lib "dbus/private/message.rkt")
            (lib "dbus/main.rkt")
            (lib "dbus/private/util.rkt")
            (lib "dbus/private/common.rkt")
            (lib "dbus/private/signature.rkt")
            (lib "dbus/examples/network-manager.rkt")
            (lib "dbus/private/rpc.rkt")
            (lib "dbus/examples/hello.rkt")
            (lib "dbus/interface.scrbl")
            (lib "dbus/private/ffi.rkt")
            (lib "dbus/interface.rkt")
            (lib "dbus/dbus.scrbl")
            (lib "dbus/examples/notification.rkt")))
          (name . "dbus")
          (nix-sha256
           .
           "1kiam2j1yypf0x6x5v5q2cqgm7rq38q6lj3qvk589b50yzlpw550")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:mordae@anilinux.org . #t)
                   (author:tonygarnockjones@gmail.com . #t)
                   (gnome . #t)
                   (linux . #t)
                   (ring:1 . #t)
                   (rpc . #t)))
          (source . "git://github.com/tonyg/racket-dbus")
          (tags . ("gnome" "linux" "rpc"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "57c5e3d9120f778b48ba01efb6b37c1ffbc9963d")
                          (source . "git://github.com/tonyg/racket-dbus")
                          (source_url
                           .
                           "http://github.com/tonyg/racket-dbus/tree/master")))))))
 ("ddict"
  .
  #hasheq((author . "pnwamk@gmail.com")
          (authors . ("pnwamk@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "ddict" "doc/ddict@ddict/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/ddict.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/ddict.txt")))
          (checksum . "a322d6a38c203d946d48d3ae5892e9ad4f11bdf2")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "racket-doc" "scribble-lib" "rackunit-lib"))
          (dependency-names
           .
           ("base" "racket-doc" "scribble-lib" "rackunit-lib"))
          (description . "Deterministic Dictionaries")
          (implies . ())
          (last-checked . 1557339527)
          (last-edit . 1485368541)
          (last-updated . 1528386227)
          (modules
           .
           ((lib "data/ddict/ddict.scrbl")
            (lib "tests/data/ddict.rkt")
            (lib "data/private/id-ddict.rkt")
            (lib "data/private/ddict.rkt")
            (lib "tests/data/ddict-perf.rkt")
            (lib "data/id-ddict.rkt")
            (lib "tests/data/id-ddict.rkt")
            (lib "data/ddict.rkt")))
          (name . "ddict")
          (nix-sha256
           .
           "010zp94iwm5275hclcs5ivn27dw0hw7k6w4lc93gbklqq0rwnlk7")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:pnwamk@gmail.com . #t)
                   (data . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/pnwamk/ddict.git")
          (tags . ("data"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "a322d6a38c203d946d48d3ae5892e9ad4f11bdf2")
                          (source . "git://github.com/pnwamk/ddict.git")
                          (source_url
                           .
                           "http://github.com/pnwamk/ddict.git/tree/master")))))))
 ("debug"
  .
  #hasheq((author . "alexander@knauth.org mb@mbtype.com")
          (authors . ("alexander@knauth.org" "mb@mbtype.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "debug" "doc/debug@debug/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/debug.txt")
                 (test-failure-log . "server/built/test-fail/debug.txt")
                 (test-success-log . #f)))
          (checksum . "0c1aef5cfe680f59a412990ca734167eb4fbc24e")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           (("base" #:version "6.6.0.3")
            "rackunit-lib"
            "typed-racket-lib"
            "pretty-format"
            "rackunit-lib"
            "rackunit-typed"
            "scribble-lib"
            "racket-doc"
            "scribble-doc"))
          (dependency-names
           .
           ("base"
            "rackunit-lib"
            "typed-racket-lib"
            "pretty-format"
            "rackunit-lib"
            "rackunit-typed"
            "scribble-lib"
            "racket-doc"
            "scribble-doc"))
          (description
           .
           "a lang-extension for debugging, and a macro for inserting a debug-repl")
          (implies . ())
          (last-checked . 1557339527)
          (last-edit . 1468642550)
          (last-updated . 1552086173)
          (modules
           .
           ((lib "debug/test/test-util.rkt")
            (lib "debug/test/debug-repl.rkt")
            (lib "typed/debug/test/typed-racket.rkt")
            (lib "typed/debug/report/helpers.rkt")
            (lib "debug/no-output/lang/reader.rkt")
            (lib "debug/private/make-variable-like-transformer.rkt")
            (lib "debug/report.rkt")
            (lib "debug/lang/reader.rkt")
            (lib "debug/test/test.rkt")
            (lib "debug/report/helpers.rkt")
            (lib "debug/lang/runtime-config.rkt")
            (lib "typed/debug/test/typed-with-reader.rkt")
            (lib "debug/repl.rkt")
            (lib "debug/test/debug-repl-macros.rkt")
            (lib "typed/debug/report.rkt")
            (lib "debug/scribblings/debug.scrbl")
            (lib "debug/reader.rkt")
            (lib "debug/lang/language-info.rkt")))
          (name . "debug")
          (nix-sha256
           .
           "07000lbsiy9728viamj13ibhfk4ga0ypm5knddjacydgqnv6afkb")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:alexander@knauth.org . #t)
                   (author:mb@mbtype.com . #t)
                   (debug . #t)
                   (debugging . #t)
                   (lang-extension . #t)
                   (repl . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/AlexKnauth/debug")
          (tags . ("debug" "debugging" "lang-extension" "repl"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "0c1aef5cfe680f59a412990ca734167eb4fbc24e")
                          (source . "git://github.com/AlexKnauth/debug")
                          (source_url
                           .
                           "http://github.com/AlexKnauth/debug/tree/master")))
                 ("6.2"
                  .
                  #hasheq((checksum
                           .
                           "5d652d31fb906e2c64a769bf33091013c224f640")
                          (source
                           .
                           "git://github.com/AlexKnauth/debug#for-v-up-to-6.2.1")
                          (source_url
                           .
                           "http://github.com/AlexKnauth/debug/tree/master#for-v-up-to-6.2.1")))
                 ("6.2.1"
                  .
                  #hasheq((checksum
                           .
                           "5d652d31fb906e2c64a769bf33091013c224f640")
                          (source
                           .
                           "git://github.com/AlexKnauth/debug#for-v-up-to-6.2.1")
                          (source_url
                           .
                           "http://github.com/AlexKnauth/debug/tree/master#for-v-up-to-6.2.1")))))))
 ("debug-scopes"
  .
  #hasheq((author . "georges.duperon@gmail.com")
          (authors . ("georges.duperon@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "debug-scopes"
                    "doc/debug-scopes@debug-scopes/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/debug-scopes.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/debug-scopes.txt")))
          (checksum . "6a0b9c27a280f376e27fa8657c27ba652387ab4f")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "pretty-format"
            "rackunit-lib"
            "reprovide-lang"
            "scribble-lib"
            "racket-doc"
            "scribble-enhanced"))
          (dependency-names
           .
           ("base"
            "pretty-format"
            "rackunit-lib"
            "reprovide-lang"
            "scribble-lib"
            "racket-doc"
            "scribble-enhanced"))
          (description
           .
           "Some utilities which help debugging scope-related issues for unhygienic macros")
          (implies . ())
          (last-checked . 1557339527)
          (last-edit . 1481748871)
          (last-updated . 1556193787)
          (modules
           .
           ((lib "debug-scopes/test/named-scopes-test-def.rkt")
            (lib "debug-scopes/superscripts.rkt")
            (lib "debug-scopes/named-scopes/override.rkt")
            (lib "debug-scopes/named-scopes-sli-parameter.rkt")
            (lib "debug-scopes/scribblings/debug-scopes.scrbl")
            (lib "debug-scopes/test/named-scopes-test-use.rkt")
            (lib "debug-scopes/named-scopes/exptime.rkt")
            (lib "debug-scopes/main.rkt")
            (lib "debug-scopes/named-scopes/dummy-lang.rkt")
            (lib "debug-scopes/named-scopes.rkt")))
          (name . "debug-scopes")
          (nix-sha256
           .
           "0xhpgxhnijfh6qax28269725bcj65d7w67sb9vr04i8p7b3hhivi")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:georges.duperon@gmail.com . #t)
                   (debug . #t)
                   (debugging . #t)
                   (ring:1 . #t)
                   (scopes . #t)
                   (syntax . #t)))
          (source . "https://github.com/jsmaniac/debug-scopes.git")
          (tags . ("debug" "debugging" "scopes" "syntax"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "6a0b9c27a280f376e27fa8657c27ba652387ab4f")
                          (source
                           .
                           "https://github.com/jsmaniac/debug-scopes.git")
                          (source_url
                           .
                           "https://github.com/jsmaniac/debug-scopes.git")))))))
 ("deferred"
  .
  #hasheq((author . "cjfuller@gmail.com")
          (authors . ("cjfuller@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "deferred" "doc/deferred@deferred/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/deferred.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/deferred.txt")))
          (checksum . "fccb728dc9cbc0a6acb38fd0bc782db41bf32d4c")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "rackunit-lib" "racket-doc" "scribble-lib"))
          (dependency-names
           .
           ("base" "rackunit-lib" "racket-doc" "scribble-lib"))
          (description
           .
           "A simple library for deferring asynchronous tasks until a specified time")
          (implies . ())
          (last-checked . 1557339527)
          (last-edit . 1419883017)
          (last-updated . 1502815889)
          (modules
           .
           ((lib "deferred/main-test.rkt")
            (lib "deferred/main.rkt")
            (lib "deferred/deferred.scrbl")))
          (name . "deferred")
          (nix-sha256
           .
           "0a7f7ymgmdjgwm0d5ij8f4hcqcggwqlsd8cc9d6dqmcx7lccph1b")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (:no-tag: . #t)
                   (author:cjfuller@gmail.com . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/cjfuller/deferred")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "fccb728dc9cbc0a6acb38fd0bc782db41bf32d4c")
                          (source . "git://github.com/cjfuller/deferred")
                          (source_url
                           .
                           "http://github.com/cjfuller/deferred/tree/master")))))))
 ("define-match-spread-out"
  .
  #hasheq((author . "alexander@knauth.org")
          (authors . ("alexander@knauth.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "define-match-spread-out"
                    "doc/define-match-spread-out@define-match-spread-out/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log
                  .
                  "server/built/install/define-match-spread-out.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/define-match-spread-out.txt")))
          (checksum . "0f97b9f4bdee1655617f70f4291cf774993b2f83")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "unstable-lib"
            "defpat"
            "rackunit-lib"
            "scribble-lib"
            "scribble-code-examples"
            "racket-doc"))
          (dependency-names
           .
           ("base"
            "unstable-lib"
            "defpat"
            "rackunit-lib"
            "scribble-lib"
            "scribble-code-examples"
            "racket-doc"))
          (description
           .
           "a version of define that allows definitions to be spread across a file")
          (implies . ())
          (last-checked . 1557339527)
          (last-edit . 1462893465)
          (last-updated . 1502815889)
          (modules
           .
           ((lib "define-match-spread-out/main.rkt")
            (lib "define-match-spread-out/tests/require-test.rkt")
            (lib "define-match-spread-out/tests/test.rkt")
            (lib
             "define-match-spread-out/scribblings/define-match-spread-out.scrbl")))
          (name . "define-match-spread-out")
          (nix-sha256
           .
           "1i0rprhgq2lnqxlyx2q827xs08wjyil041hfz8gjya7yim5fdi38")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:alexander@knauth.org . #t)
                   (match . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/AlexKnauth/define-match-spread-out")
          (tags . ("match"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "0f97b9f4bdee1655617f70f4291cf774993b2f83")
                          (source
                           .
                           "git://github.com/AlexKnauth/define-match-spread-out")
                          (source_url
                           .
                           "http://github.com/AlexKnauth/define-match-spread-out/tree/master")))))))
 ("define-with-spec"
  .
  #hasheq((author . "pnwamk@gmail.com")
          (authors . ("pnwamk@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "define-with-spec"
                    "doc/define-with-spec@define-with-spec/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/define-with-spec.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/define-with-spec.txt")))
          (checksum . "1b7050a848a853313abb5cdd4a0bfcb6705e5f9f")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "racket-doc" "scribble-lib" "rackunit-lib"))
          (dependency-names
           .
           ("base" "racket-doc" "scribble-lib" "rackunit-lib"))
          (description
           .
           "Allows for function definitions with simple specifications that are enforced by checks at each call site. Functionality pales in comparison to racket/contract, but error messages w/ source info are provided for same-module violations of specifications.")
          (implies . ())
          (last-checked . 1557339527)
          (last-edit . 1515785308)
          (last-updated . 1519874741)
          (modules
           .
           ((lib "define-with-spec/tests/tests.rkt")
            (lib "define-with-spec/main.rkt")
            (lib "define-with-spec/scribblings/define-with-spec.scrbl")))
          (name . "define-with-spec")
          (nix-sha256
           .
           "01xdc3j5qp6q316f6f0as1rggk40146l64gqy1adnl88cgbw3pa6")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (:no-tag: . #t)
                   (author:pnwamk@gmail.com . #t)
                   (ring:2 . #t)))
          (source . "https://github.com/pnwamk/define-with-spec.git")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "1b7050a848a853313abb5cdd4a0bfcb6705e5f9f")
                          (source
                           .
                           "https://github.com/pnwamk/define-with-spec.git")
                          (source_url
                           .
                           "https://github.com/pnwamk/define-with-spec.git")))))))
 ("defpat"
  .
  #hasheq((author . "alexander@knauth.org")
          (authors . ("alexander@knauth.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "defpat-main"
                    "doc/defpat-main@defpat/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/defpat.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/defpat.txt")))
          (checksum . "b1ab923ef4c92355de7ee77703d8af692835c8f0")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "generic-bind"
            "sweet-exp"
            "reprovide-lang"
            "unstable-lib"
            "unstable-list-lib"
            "rackunit"
            "scribble-lib"
            "scribble-code-examples"
            "racket-doc"))
          (dependency-names
           .
           ("base"
            "generic-bind"
            "sweet-exp"
            "reprovide-lang"
            "unstable-lib"
            "unstable-list-lib"
            "rackunit"
            "scribble-lib"
            "scribble-code-examples"
            "racket-doc"))
          (description
           .
           "a version of define for defining functions with match-patterns as arguments")
          (implies . ())
          (last-checked . 1557339527)
          (last-edit . 1462893280)
          (last-updated . 1502815889)
          (modules
           .
           ((lib "defpat/opt-match-case-lambda.rkt")
            (lib "defpat/opt-case-lambda.rkt")
            (lib "defpat/main.rkt")
            (lib "defpat/match-case-lambda.rkt")
            (lib "defpat/docs/match-case-lambda.scrbl")
            (lib "defpat/docs/opt-case-lambda.scrbl")
            (lib "defpat/docs/defpat-main.scrbl")
            (lib "defpat/defpat.rkt")
            (lib "defpat/docs/opt-match-case-lambda.scrbl")
            (lib "defpat/docs/defpat.scrbl")))
          (name . "defpat")
          (nix-sha256
           .
           "0v1bwm96x87dkiays6rswby685rkngn9l0w5q3ngbglba6vc42sn")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:alexander@knauth.org . #t)
                   (match . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/AlexKnauth/defpat")
          (tags . ("match"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "b1ab923ef4c92355de7ee77703d8af692835c8f0")
                          (source . "git://github.com/AlexKnauth/defpat")
                          (source_url
                           .
                           "http://github.com/AlexKnauth/defpat/tree/master")))))))
 ("deinprogramm"
  .
  #hash((author . "sperber@racket-lang.org")
        (checksum . "0c59dbe4af2bb3e9acd52b1c6fcab4138ea65021")
        (dependencies
         .
         ("base"
          "compatibility-lib"
          "deinprogramm-signature"
          "drracket"
          "drracket-plugin-lib"
          "errortrace-lib"
          "gui-lib"
          "htdp-lib"
          "pconvert-lib"
          "scheme-lib"
          "string-constants-lib"
          "trace"
          "wxme-lib"
          "at-exp-lib"
          "htdp-doc"
          "racket-doc"
          "racket-index"
          "rackunit-lib"
          "scribble-lib"))
        (dependency-names
         .
         ("base"
          "compatibility-lib"
          "deinprogramm-signature"
          "drracket"
          "drracket-plugin-lib"
          "errortrace-lib"
          "gui-lib"
          "htdp-lib"
          "pconvert-lib"
          "scheme-lib"
          "string-constants-lib"
          "trace"
          "wxme-lib"
          "at-exp-lib"
          "htdp-doc"
          "racket-doc"
          "racket-index"
          "rackunit-lib"
          "scribble-lib"))
        (description . "sperber@racket-lang.org")
        (modules . ())
        (name . "deinprogramm")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/deinprogramm.zip")
        (tags . ())))
 ("deinprogramm-signature"
  .
  #hash((author . "sperber@racket-lang.org")
        (checksum . "20a7f5db21c4677a60895f5a712791a7607d09b6")
        (dependencies
         .
         ("base"
          "compatibility-lib"
          "drracket-plugin-lib"
          "gui-lib"
          "htdp-lib"
          "scheme-lib"
          "srfi-lib"
          "string-constants-lib"))
        (dependency-names
         .
         ("base"
          "compatibility-lib"
          "drracket-plugin-lib"
          "gui-lib"
          "htdp-lib"
          "scheme-lib"
          "srfi-lib"
          "string-constants-lib"))
        (description . "sperber@racket-lang.org")
        (modules . ())
        (name . "deinprogramm-signature")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/deinprogramm-signature.zip")
        (tags . ())))
 ("delay-pure"
  .
  #hasheq((author . "georges.duperon@gmail.com")
          (authors . ("georges.duperon@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "delay-pure"
                    "doc/delay-pure@delay-pure/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/delay-pure.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/delay-pure.txt")))
          (checksum . "98766ec6271012e2635aeabbf2bd3e1bd9ab68e1")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "rackunit-lib"
            "typed-racket-lib"
            "typed-racket-more"
            "type-expander"
            "phc-toolkit"
            "version-case"
            "scribble-lib"
            "racket-doc"
            "typed-racket-doc"))
          (dependency-names
           .
           ("base"
            "rackunit-lib"
            "typed-racket-lib"
            "typed-racket-more"
            "type-expander"
            "phc-toolkit"
            "version-case"
            "scribble-lib"
            "racket-doc"
            "typed-racket-doc"))
          (description
           .
           "Non-cached promises for Typed/Racket, like delay/name. Should be sound for occurrence typing (unlike delay/name) because only pure functions are allowed.")
          (implies . ())
          (last-checked . 1557339528)
          (last-edit . 1476107706)
          (last-updated . 1555923787)
          (modules
           .
           ((lib "delay-pure/private/immutable-struct-constructor.rkt")
            (lib "delay-pure/test/test-unsafe.rkt")
            (lib "delay-pure/private/pure-unsafe.rkt")
            (lib "delay-pure/scribblings/delay-pure.scrbl")
            (lib "delay-pure/private/fully-expanded-grammar-no-set.rkt")
            (lib "delay-pure/main.rkt")
            (lib "delay-pure/test/test-pure-lifted.rkt")
            (lib "delay-pure/private/pure-function.rkt")
            (lib "delay-pure/test/test-immutable-struct-constructor.rkt")
            (lib "delay-pure/test/test-pure-safe.rkt")
            (lib "delay-pure/test/test-external-mutation.rkt")
            (lib "delay-pure/private/pure-safe.rkt")
            (lib "delay-pure/test/test-pure-function.rkt")
            (lib "delay-pure/test/test-immutable-struct-constructor-mod2.rkt")
            (lib "delay-pure/test/test-immutable-struct-constructor-mod.rkt")
            (lib "delay-pure/private/pure-exception.rkt")))
          (name . "delay-pure")
          (nix-sha256
           .
           "01dss58q1r69zb6x07i8hdq7c1wqkfwrdjkxfagxabq1pm0qp2dy")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:georges.duperon@gmail.com . #t)
                   (ring:1 . #t)
                   (typed-racket . #t)))
          (source . "https://github.com/jsmaniac/delay-pure.git")
          (tags . ("typed-racket"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "98766ec6271012e2635aeabbf2bd3e1bd9ab68e1")
                          (source
                           .
                           "https://github.com/jsmaniac/delay-pure.git")
                          (source_url
                           .
                           "https://github.com/jsmaniac/delay-pure.git")))))))
 ("delimit-app"
  .
  #hasheq((author . "jackhfirth@gmail.com")
          (authors . ("jackhfirth@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "delimit-app"
                    "doc/delimit-app@delimit-app/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/delimit-app.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/delimit-app.txt")))
          (checksum . "720c0f95c1c3642b936030fabfb4850ab166d7e2")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           (("base" #:version "6.4")
            "fancy-app"
            "racket-doc"
            "scribble-lib"
            "rackunit-lib"))
          (dependency-names
           .
           ("base" "fancy-app" "racket-doc" "scribble-lib" "rackunit-lib"))
          (description
           .
           "An #%app macro that changes meaning based on paren shape")
          (implies . ())
          (last-checked . 1557339528)
          (last-edit . 1500074416)
          (last-updated . 1502815891)
          (modules
           .
           ((lib "delimit-app/main.rkt")
            (lib "delimit-app/main.scrbl")
            (lib "delimit-app/fancy-app.rkt")))
          (name . "delimit-app")
          (nix-sha256
           .
           "0rk2ji1y341cql0fjcq4z7cmlpa5ynncm7a3vls3blpic8jnkrn9")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (app-syntax . #t)
                   (author:jackhfirth@gmail.com . #t)
                   (ring:1 . #t)
                   (sugar . #t)))
          (source . "git://github.com/jackfirth/delimit-app")
          (tags . ("app-syntax" "sugar"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "720c0f95c1c3642b936030fabfb4850ab166d7e2")
                          (source . "git://github.com/jackfirth/delimit-app")
                          (source_url
                           .
                           "http://github.com/jackfirth/delimit-app/tree/master")))))))
 ("derp-3"
  .
  #hasheq((author . "clements@racket-lang.org")
          (authors . ("clements@racket-lang.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/derp-3.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/derp-3.txt")))
          (checksum . "b26498d7bc7ab09a17b799c0e295f8e514930ca4")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "math-lib" "srfi-lib"))
          (dependency-names . ("base" "math-lib" "srfi-lib"))
          (description
           .
           "The Derp 3 parser, based on \"Parsing with Derivatives,\" code written by Michael D. Adams (www.michaeldadams.org)")
          (implies . ())
          (last-checked . 1557339528)
          (last-edit . 1466453957)
          (last-updated . 1509055339)
          (modules
           .
           ((lib "derp-3/util/unsafe-struct.rkt")
            (lib "derp-3/util/define-case.rkt")
            (lib "derp-3/util/fast-for.rkt")
            (lib "derp-3/util/benchmark.rkt")
            (lib "derp-3/derp.rkt")
            (lib "derp-3/pyparse.rkt")))
          (name . "derp-3")
          (nix-sha256
           .
           "0lsqvn7p64q76v7c2xjcyz7yz2qp8l5yhlglcvkzsczx5khzplxr")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:clements@racket-lang.org . #t)
                   (parser . #t)
                   (parsing . #t)
                   (ring:1 . #t)))
          (source . "https://bitbucket.org/jbclements/derp-3.git")
          (tags . ("parser" "parsing"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "b26498d7bc7ab09a17b799c0e295f8e514930ca4")
                          (source
                           .
                           "https://bitbucket.org/jbclements/derp-3.git")
                          (source_url
                           .
                           "https://bitbucket.org/jbclements/derp-3.git")))))))
 ("derpy"
  .
  #hasheq((author . "mordae@anilinux.org")
          (authors . ("mordae@anilinux.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "derpy" "doc/derpy@derpy/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/derpy.txt")
                 (test-failure-log . "server/built/test-fail/derpy.txt")
                 (test-success-log . #f)))
          (checksum . "179ec02668cdb0beda40022ef9b45909795c7c09")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "scribble-lib"
            "typed-racket-lib"
            "typed-racket-more"
            "mordae"
            "zmq"
            "tesira"
            "libserialport"
            "esc-vp21"
            "pex"
            "cuecore"
            "racket-doc"
            "typed-racket-lib"
            "typed-racket-doc"))
          (dependency-names
           .
           ("base"
            "scribble-lib"
            "typed-racket-lib"
            "typed-racket-more"
            "mordae"
            "zmq"
            "tesira"
            "libserialport"
            "esc-vp21"
            "pex"
            "cuecore"
            "racket-doc"
            "typed-racket-lib"
            "typed-racket-doc"))
          (description . "Presentation Room Control")
          (implies . ())
          (last-checked . 1557339528)
          (last-edit . 1439459915)
          (last-updated . 1502815898)
          (modules
           .
           ((lib "derpy/bin/tesira-driver.rkt")
            (lib "derpy/pex-driver.scrbl")
            (lib "derpy/util/zmq.rkt")
            (lib "derpy/util/error.rkt")
            (lib "derpy/tesira-driver.scrbl")
            (lib "derpy/atlona-driver.scrbl")
            (lib "derpy/bin/epson-driver.rkt")
            (lib "derpy/bin/atlona-driver.rkt")
            (lib "derpy/bin/atlona-ir-driver.rkt")
            (lib "derpy/bin/lighting-driver.rkt")
            (lib "derpy/derpy.scrbl")
            (lib "derpy/bin/pex-driver.rkt")
            (lib "derpy/epson-driver.scrbl")
            (lib "derpy/util/reply.rkt")))
          (name . "derpy")
          (nix-sha256
           .
           "1zjxglr7ymn43ir8za625zrviw853v3g4spw94ci8vpg72q85xzj")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (:no-tag: . #t)
                   (author:mordae@anilinux.org . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/mordae/racket-derpy")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "179ec02668cdb0beda40022ef9b45909795c7c09")
                          (source . "git://github.com/mordae/racket-derpy")
                          (source_url
                           .
                           "http://github.com/mordae/racket-derpy/tree/master")))))))
 ("describe"
  .
  #hasheq((author . "mb@mbtype.com doug@cognidrome.org")
          (authors . ("mb@mbtype.com" "doug@cognidrome.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "describe" "doc/describe@describe/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/describe.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/describe.txt")))
          (checksum . "be266809f5b331e12bf18bdeee2495119060b0d4")
          (checksum-error . #f)
          (conflicts . ())
          (date-added . 1556661246)
          (dependencies
           .
           ("base" "compatibility-lib" "scribble-lib" "racket-doc"))
          (dependency-names
           .
           ("base" "compatibility-lib" "scribble-lib" "racket-doc"))
          (description . "Doug Williams's 'describe' package from PLaneT")
          (implies . ())
          (last-checked . 1557339528)
          (last-edit . 1556661246)
          (last-updated . 1502815898)
          (modules
           .
           ((lib "describe/float-test-single.rkt")
            (lib "describe/float-test-double.rkt")
            (lib "describe/scribblings/describe.scrbl")
            (lib "describe/float-test-extended.rkt")
            (lib "describe/describe-test.rkt")
            (lib "describe/main.rkt")))
          (name . "describe")
          (nix-sha256
           .
           "0dqs9cdk5ifzazjayndb79ppwdcwcvzcf555wybd341k1f591ksg")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:doug@cognidrome.org . #t)
                   (author:mb@mbtype.com . #t)
                   (information . #t)
                   (ring:1 . #t)))
          (source . "https://github.com/mbutterick/describe.git")
          (tags . ("information"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "be266809f5b331e12bf18bdeee2495119060b0d4")
                          (source
                           .
                           "https://github.com/mbutterick/describe.git")
                          (source_url
                           .
                           "https://github.com/mbutterick/describe.git")))))))
 ("design-by-numbers"
  .
  #hasheq((author . "jedgingt@cs.du.edu chrisg@cs.du.edu")
          (authors . ("jedgingt@cs.du.edu" "chrisg@cs.du.edu"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "dbn-manual"
                    "doc/dbn-manual@design-by-numbers/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/design-by-numbers.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/design-by-numbers.txt")))
          (checksum . "7b2e7c310987e405da0246474f6cf0753d10a774")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "rackunit-lib"
            "parser-tools-lib"
            "gui-lib"
            "syntax-color-lib"
            "wxme-lib"
            "scribble-lib"
            "racket-doc"
            "rackunit-lib"))
          (dependency-names
           .
           ("base"
            "rackunit-lib"
            "parser-tools-lib"
            "gui-lib"
            "syntax-color-lib"
            "wxme-lib"
            "scribble-lib"
            "racket-doc"
            "rackunit-lib"))
          (description
           .
           "An implementation of John Maeda's Design by Numbers language in Racket as a #lang. ")
          (implies . ())
          (last-checked . 1557339528)
          (last-edit . 1538083354)
          (last-updated . 1550890272)
          (modules
           .
           ((lib "dbn/dbnc/lexer.rkt")
            (lib "dbn/dbnc/indent-utils.rkt")
            (lib "dbn/dbnc/colorer.rkt")
            (lib "dbn/dbn-eval.rkt")
            (lib "dbn/configure-runtime.rkt")
            (lib "dbn/dbnc/indenter.rkt")
            (lib "dbn/scribblings/dbn-manual.scrbl")
            (lib "dbn/dbnc/parser.rkt")
            (lib "dbn/dbnc/annotations.rkt")
            (lib "dbn/dbnc/env.rkt")
            (lib "dbn/dbnc/ast.rkt")
            (lib "dbn/dbnc/errors.rkt")
            (lib "dbn/lang-info.rkt")
            (lib "dbn/dbnc/papersim.rkt")
            (lib "dbn/main.rkt")
            (lib "dbn/dbnc/ast-nodes.rkt")
            (lib "dbn/lang/dbn-reader.rkt")
            (lib "dbn/lang/dbn-expander.rkt")))
          (name . "design-by-numbers")
          (nix-sha256
           .
           "01dn0q8r7wy14qv9nj2m7iafkx3lkxkw6ahvi6fx5i74p336833c")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (art . #t)
                   (author:chrisg@cs.du.edu . #t)
                   (author:jedgingt@cs.du.edu . #t)
                   (design . #t)
                   (graphics . #t)
                   (pictures . #t)
                   (ring:2 . #t)))
          (source
           .
           "https://github.com/chrisgd/design-by-numbers.git?path=dbn")
          (tags . ("art" "design" "graphics" "pictures"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "7b2e7c310987e405da0246474f6cf0753d10a774")
                          (source
                           .
                           "https://github.com/chrisgd/design-by-numbers.git?path=dbn")
                          (source_url
                           .
                           "https://github.com/chrisgd/design-by-numbers.git?path=dbn")))))))
 ("dherman-struct"
  .
  #hasheq((author . "clements@racket-lang.org")
          (authors . ("clements@racket-lang.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/dherman-struct.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/dherman-struct.txt")))
          (checksum . "1f0510d8e50ca3d22b3ba7ee65cce117450d44a0")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "compatibility-lib"
            "scheme-lib"
            "rackunit-lib"
            "srfi-lite-lib"))
          (dependency-names
           .
           ("base"
            "compatibility-lib"
            "scheme-lib"
            "rackunit-lib"
            "srfi-lite-lib"))
          (description . "A port of David Herman's struct.plt planet package")
          (implies . ())
          (last-checked . 1557339528)
          (last-edit . 1394146015)
          (last-updated . 1502815898)
          (modules
           .
           ((lib "dherman-struct/hierarchy.rkt")
            (lib "dherman-struct/struct.rkt")
            (lib "dherman-struct/private/datatype-registry.rkt")
            (lib "dherman-struct/private/struct-info-compat.rkt")
            (lib "dherman-struct/datatype.rkt")
            (lib "dherman-struct/private/tests/struct.rkt")
            (lib "dherman-struct/private/datatype-registry-data.rkt")
            (lib "dherman-struct/private/tests/class.rkt")
            (lib "dherman-struct/private/tests/tests.rkt")
            (lib "dherman-struct/class.rkt")
            (lib "dherman-struct/private/tests/hierarchy.rkt")
            (lib "dherman-struct/private/tests/datatype.rkt")))
          (name . "dherman-struct")
          (nix-sha256
           .
           "0dhf4farzf334axqnnmmj0bi0bxlqsjy4szvpljilwxpsxxdwf2z")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:no-tag: . #t)
                   (author:clements@racket-lang.org . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/jbclements/dherman-struct")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "1f0510d8e50ca3d22b3ba7ee65cce117450d44a0")
                          (source
                           .
                           "git://github.com/jbclements/dherman-struct")
                          (source_url
                           .
                           "http://github.com/jbclements/dherman-struct/tree/master")))))))
 ("diagrams"
  .
  #hasheq((author . "dedbox@gmail.com")
          (authors . ("dedbox@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/diagrams.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/diagrams.txt")))
          (checksum . "ab990ea081e982f7216ed9f7ff3c8e44749cd645")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ())
          (dependency-names . ())
          (description . "Draw technical diagrams")
          (implies . ())
          (last-checked . 1557339528)
          (last-edit . 1531184957)
          (last-updated . 1531184957)
          (modules . ())
          (name . "diagrams")
          (nix-sha256
           .
           "1wi5yljhrxnf97nkmpyfsqi770r2qych4pwyaqd24cm32g4ky3h3")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:dedbox@gmail.com . #t)
                   (drawing . #t)
                   (graphics . #t)
                   (images . #t)
                   (pict . #t)
                   (ring:2 . #t)))
          (source . "https://github.com/dedbox/racket-diagrams.git")
          (tags . ("drawing" "graphics" "images" "pict"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "ab990ea081e982f7216ed9f7ff3c8e44749cd645")
                          (source
                           .
                           "https://github.com/dedbox/racket-diagrams.git")
                          (source_url
                           .
                           "https://github.com/dedbox/racket-diagrams.git")))))))
 ("diff-merge"
  .
  #hasheq((author . "tonygarnockjones@gmail.com")
          (authors . ("tonygarnockjones@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/diff-merge.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/diff-merge.txt")))
          (checksum . "13a367d6f254ac184f017b37f5e204ac6c95dabe")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "rackunit-lib" "profile-lib"))
          (dependency-names . ("base" "rackunit-lib" "profile-lib"))
          (description
           .
           "\"Myers-Ukkonen\" diff and diff3-based merge for sequences")
          (implies . ())
          (last-checked . 1557339528)
          (last-edit . 1527789872)
          (last-updated . 1527789872)
          (modules
           .
           ((lib "diff-merge/sequence.rkt")
            (lib "diff-merge/main.rkt")
            (lib "diff-merge/diff.rkt")
            (lib "diff-merge/merge.rkt")))
          (name . "diff-merge")
          (nix-sha256
           .
           "0k2h00csbfazj3cgdjax9d6s3vq1lsc4ygb9xnfzqbwvlnsfwgpf")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:tonygarnockjones@gmail.com . #t)
                   (diff . #t)
                   (merge . #t)
                   (ring:2 . #t)
                   (sequence . #t)
                   (text . #t)))
          (source . "https://github.com/tonyg/racket-diff-merge.git")
          (tags . ("diff" "merge" "sequence" "text"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "13a367d6f254ac184f017b37f5e204ac6c95dabe")
                          (source
                           .
                           "https://github.com/tonyg/racket-diff-merge.git")
                          (source_url
                           .
                           "https://github.com/tonyg/racket-diff-merge.git")))))))
 ("digimon"
  .
  #hasheq((author . "juzhenliang@gmail.com")
          (authors . ("juzhenliang@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "digimon" "doc/digimon@digimon/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/digimon.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/digimon.txt")))
          (checksum . "f0d3aa1a931d9bbfc4146daf9d68b7a0e41f7544")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "make"
            "cext-lib"
            "dynext-lib"
            "typed-racket-lib"
            "typed-racket-more"
            "racket-index"
            "sandbox-lib"
            "scribble-lib"
            "rackunit-lib"
            "scribble-lib"
            "racket-doc"))
          (dependency-names
           .
           ("base"
            "make"
            "cext-lib"
            "dynext-lib"
            "typed-racket-lib"
            "typed-racket-more"
            "racket-index"
            "sandbox-lib"
            "scribble-lib"
            "rackunit-lib"
            "scribble-lib"
            "racket-doc"))
          (description . "The (typed) core to construct the digital world")
          (implies . ())
          (last-checked . 1557339529)
          (last-edit . 1481635750)
          (last-updated . 1555844587)
          (modules
           .
           ((lib "digimon/digitama/bintext/base64.rkt")
            (lib "digimon/format.rkt")
            (lib "digimon/openssl.rkt")
            (lib "digimon/digitama/sugar.rkt")
            (lib "digimon/digitama/plural.rkt")
            (lib "digimon/sugar.rkt")
            (lib "digimon/digitama/main.rkt")
            (lib "digimon/digitama/tamer.rkt")
            (lib "digimon/debug.rkt")
            (lib "digimon/number.rkt")
            (lib "digimon/digitama/system.rkt")
            (lib "digimon/no-check.rkt")
            (lib "digimon/filesystem.rkt")
            (lib "digimon/tamer/digimon.scrbl")
            (lib "digimon/uuid.rkt")
            (lib "digimon/tamer/uuid.rkt")
            (lib "digimon/language-info.rkt")
            (lib "digimon/digitama/ffi.rkt")
            (lib "digimon/gui/sugar.rkt")
            (lib "digimon/network.rkt")
            (lib "digimon/digivice/wisemon.rkt")
            (lib "digimon/echo.rkt")
            (lib "digimon/binscii.rkt")
            (lib "digimon/system.rkt")
            (lib "digimon/tongue.rkt")
            (lib "digimon/digitama/monad.rkt")
            (lib "digimon/tamer/echo.rkt")
            (lib "digimon/gui/no-check.rkt")
            (lib "digimon/main.rkt")
            (lib "digimon/collection.rkt")
            (lib "digimon/tamer/syntax.rkt")
            (lib "digimon/emoji.rkt")
            (lib "digimon/tamer/gui-no-check.rkt")
            (lib "digimon/gui.rkt")
            (lib "digimon/digitama/collection.rkt")
            (lib "digimon/tamer.rkt")
            (lib "digimon/digitama/openssl.rkt")))
          (name . "digimon")
          (nix-sha256
           .
           "1hhbxpy1my12vlknnnv9w7mhhl3fkrla5pgwnfrwwyqaag1ppry4")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:juzhenliang@gmail.com . #t)
                   (ring:1 . #t)
                   (typed-racket . #t)
                   (unstable . #t)
                   (utility . #t)))
          (source . "git://github.com/wargrey/digimon.git")
          (tags . ("typed-racket" "unstable" "utility"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "f0d3aa1a931d9bbfc4146daf9d68b7a0e41f7544")
                          (source . "git://github.com/wargrey/digimon.git")
                          (source_url
                           .
                           "http://github.com/wargrey/digimon.git/tree/master")))))))
 ("disassemble"
  .
  #hasheq((author . "samth@ccs.neu.edu")
          (authors . ("samth@ccs.neu.edu"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/disassemble.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/disassemble.txt")))
          (checksum . "00d2980ae1f2bdb09c74c1a069c3812b1e9ad0e5")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "r6rs-lib" "srfi-lib" "srfi-lite-lib"))
          (dependency-names . ("base" "r6rs-lib" "srfi-lib" "srfi-lite-lib"))
          (description . "Disassembler for JIT-compiled functions.")
          (implies . ())
          (last-checked . 1557339529)
          (last-edit . 1353013870)
          (last-updated . 1509141738)
          (modules
           .
           ((lib "disassemble/test2.rkt")
            (lib "disassemble/x86-opcodes.rkt")
            (lib "disassemble/main.rkt")
            (lib "disassemble/fcdisasm.rkt")
            (lib "disassemble/nasm.rkt")
            (lib "disassemble/x86.rkt")
            (lib "disassemble/private.rkt")
            (lib "disassemble/test.rkt")))
          (name . "disassemble")
          (nix-sha256
           .
           "0i2ks3x1lmawdwnqbxk6fiimknh95p0x4hr62x5byn7hnzhcg049")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:samth@ccs.neu.edu . #t)
                   (dev . #t)
                   (performance . #t)
                   (ring:1 . #t)))
          (source . "github://github.com/samth/disassemble/master")
          (tags . ("dev" "performance"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "00d2980ae1f2bdb09c74c1a069c3812b1e9ad0e5")
                          (source
                           .
                           "github://github.com/samth/disassemble/master")
                          (source_url
                           .
                           "http://github.com/samth/disassemble/tree/master")))))))
 ("disposable"
  .
  #hasheq((author . "jackhfirth@gmail.com")
          (authors . ("jackhfirth@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "disposable"
                    "doc/disposable@disposable/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/disposable.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/disposable.txt")))
          (checksum . "843d3e224fd874b9c463b74cb5ef13d8a0b5766a")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           (("arguments" #:version "1.2.1")
            "base"
            "reprovide-lang"
            "rackunit-lib"
            "racket-doc"
            ("scribble-lib" #:version "1.16")
            "scribble-text-lib"))
          (dependency-names
           .
           ("arguments"
            "base"
            "reprovide-lang"
            "rackunit-lib"
            "racket-doc"
            "scribble-lib"
            "scribble-text-lib"))
          (description
           .
           "Provides an abstraction for values associated with external resources that allows automatic resource pooling, per-thread virtual construction, and monadic composition")
          (implies . ())
          (last-checked . 1557339529)
          (last-edit . 1502749749)
          (last-updated . 1509166856)
          (modules
           .
           ((lib "disposable/private/atomic-box.rkt")
            (lib "disposable/testing.rkt")
            (lib "disposable/scribblings/base.rkt")
            (lib "disposable/scribblings/util.rkt")
            (lib "disposable/scribblings/misc.scrbl")
            (lib "disposable/scribblings/main.scrbl")
            (lib "disposable/scribblings/pool.scrbl")
            (lib "disposable/private/syntax.rkt")
            (lib "disposable/example.rkt")
            (lib "disposable/file.rkt")
            (lib "disposable/private/pool.rkt")
            (lib "disposable/scribblings/lite.scrbl")
            (lib "disposable/main.rkt")
            (lib "disposable/scribblings/transient.scrbl")
            (lib "disposable/unsafe.rkt")))
          (name . "disposable")
          (nix-sha256
           .
           "1dbh2nrknlbq9cy9h3hhyc21xix33ck84zxw915y3yvmm7klxbk2")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:jackhfirth@gmail.com . #t)
                   (concurrency . #t)
                   (experimental . #t)
                   (io . #t)
                   (ring:1 . #t)))
          (source
           .
           "git://github.com/jackfirth/racket-disposable?path=disposable")
          (tags . ("concurrency" "experimental" "io"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "843d3e224fd874b9c463b74cb5ef13d8a0b5766a")
                          (source
                           .
                           "git://github.com/jackfirth/racket-disposable?path=disposable")
                          (source_url
                           .
                           "http://github.com/jackfirth/racket-disposable/tree/master?path=disposable")))))))
 ("disposable-test"
  .
  #hasheq((author . "jackhfirth@gmail.com")
          (authors . ("jackhfirth@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/disposable-test.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/disposable-test.txt")))
          (checksum . "843d3e224fd874b9c463b74cb5ef13d8a0b5766a")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            ("disposable" #:version "0.2")
            "doc-coverage"
            "fixture"
            "rackunit-lib"))
          (dependency-names
           .
           ("base" "disposable" "doc-coverage" "fixture" "rackunit-lib"))
          (description . "Tests for the \"disposable\" package")
          (implies . ("disposable"))
          (last-checked . 1557339529)
          (last-edit . 1502812668)
          (last-updated . 1509166857)
          (modules
           .
           ((lib "disposable/tests/main.rkt")
            (lib "disposable/tests/transient.rkt")
            (lib "disposable/tests/util.rkt")
            (lib "disposable/tests/testing.rkt")
            (lib "disposable/tests/pool.rkt")
            (lib "disposable/tests/file.rkt")))
          (name . "disposable-test")
          (nix-sha256
           .
           "1dbh2nrknlbq9cy9h3hhyc21xix33ck84zxw915y3yvmm7klxbk2")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:jackhfirth@gmail.com . #t)
                   (concurrency . #t)
                   (disposable . #t)
                   (experimental . #t)
                   (io . #t)
                   (ring:1 . #t)
                   (tests . #t)))
          (source
           .
           "git://github.com/jackfirth/racket-disposable?path=disposable-test")
          (tags . ("concurrency" "disposable" "experimental" "io" "tests"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "843d3e224fd874b9c463b74cb5ef13d8a0b5766a")
                          (source
                           .
                           "git://github.com/jackfirth/racket-disposable?path=disposable-test")
                          (source_url
                           .
                           "http://github.com/jackfirth/racket-disposable/tree/master?path=disposable-test")))))))
 ("distributed-places"
  .
  #hash((author . "tewk@racket-lang.org")
        (checksum . "4ea0b2edde868a7eb719d413ec953891af222c6c")
        (dependencies . ("distributed-places-lib" "distributed-places-doc"))
        (dependency-names
         .
         ("distributed-places-lib" "distributed-places-doc"))
        (description . "tewk@racket-lang.org")
        (modules . ())
        (name . "distributed-places")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/distributed-places.zip")
        (tags . ())))
 ("distributed-places-doc"
  .
  #hash((author . "tewk@racket-lang.org")
        (checksum . "e0bc5582ba60351de4a175936c46fbc76c832cbe")
        (dependencies
         .
         ("base"
          "distributed-places-lib"
          "racket-doc"
          "sandbox-lib"
          "scribble-lib"))
        (dependency-names
         .
         ("base"
          "distributed-places-lib"
          "racket-doc"
          "sandbox-lib"
          "scribble-lib"))
        (description . "tewk@racket-lang.org")
        (modules . ())
        (name . "distributed-places-doc")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/distributed-places-doc.zip")
        (tags . ())))
 ("distributed-places-lib"
  .
  #hash((author . "tewk@racket-lang.org")
        (checksum . "e60eaaf07cbf3319108ae2dc113a1fc4b30c734c")
        (dependencies . ("base"))
        (dependency-names . ("base"))
        (description . "tewk@racket-lang.org")
        (modules . ())
        (name . "distributed-places-lib")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/distributed-places-lib.zip")
        (tags . ())))
 ("distributed-places-test"
  .
  #hash((author . "tewk@racket-lang.org")
        (authors . ("tewk@racket-lang.org"))
        (build
         .
         #hash((conflicts-log . #f)
               (dep-failure-log . #f)
               (docs . ())
               (failure-log . #f)
               (min-failure-log . #f)
               (success-log
                .
                "server/built/install/distributed-places-test.txt")
               (test-failure-log . #f)
               (test-success-log
                .
                "server/built/test-success/distributed-places-test.txt")))
        (checksum . "490ee40e32cbaa818798aacca89fe4e3b3fc772b")
        (checksum-error . #f)
        (conflicts . ())
        (dependencies . ("distributed-places-lib" "base"))
        (dependency-names . ("distributed-places-lib" "base"))
        (description . "tests for of \"distributed-places\"")
        (implies . ())
        (last-checked . 1557339529)
        (last-edit . 1417659583)
        (last-updated . 1537041410)
        (modules
         .
         ((lib
           "distributed-places-test/test/racket/place/distributed/bank.rkt")
          (lib
           "distributed-places-test/test/racket/place/distributed/restarter.rkt")
          (lib
           "distributed-places-test/test/racket/place/distributed/distributed.rkt")
          (lib
           "distributed-places-test/test/racket/place/distributed/tuple.rkt")))
        (name . "distributed-places-test")
        (nix-sha256 . "009sflz25ps7mj07slv1gw3z9i6b3wzpyxaxn8ji0wbry02w0vvd")
        (ring . 0)
        (search-terms
         .
         #hasheq((:build-success: . #t)
                 (author:tewk@racket-lang.org . #t)
                 (main-tests . #t)
                 (ring:0 . #t)))
        (source
         .
         "git://github.com/racket/distributed-places/?path=distributed-places-test")
        (tags . ("main-tests"))
        (versions
         .
         #hash((default
                .
                #hasheq((checksum
                         .
                         "490ee40e32cbaa818798aacca89fe4e3b3fc772b")
                        (source
                         .
                         "git://github.com/racket/distributed-places/?path=distributed-places-test")
                        (source_url
                         .
                         "git://github.com/racket/distributed-places/?path=distributed-places-test")))
               ("5.3.4"
                .
                #hash((checksum . "9f098dddde7f217879070816090c1e8e74d49432")
                      (source
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")
                      (source_url
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")))
               ("5.3.5"
                .
                #hash((checksum . "9f098dddde7f217879070816090c1e8e74d49432")
                      (source
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")
                      (source_url
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")))
               ("5.3.6"
                .
                #hash((checksum . "9f098dddde7f217879070816090c1e8e74d49432")
                      (source
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")
                      (source_url
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")))))))
 ("distro-build"
  .
  #hash((author . "mflatt@racket-lang.org")
        (authors . ("mflatt@racket-lang.org"))
        (build
         .
         #hash((conflicts-log . #f)
               (dep-failure-log . #f)
               (docs . ())
               (failure-log . #f)
               (min-failure-log . #f)
               (success-log . "server/built/install/distro-build.txt")
               (test-failure-log . #f)
               (test-success-log
                .
                "server/built/test-success/distro-build.txt")))
        (checksum . "637f9c575ef40a0b3ceb235e2c98597fd0905e9c")
        (checksum-error . #f)
        (conflicts . ())
        (dependencies . ("distro-build-lib" "distro-build-doc"))
        (dependency-names . ("distro-build-lib" "distro-build-doc"))
        (description . "Tools for constructing a distribution of Racket")
        (implies . ("distro-build-lib" "distro-build-doc"))
        (last-checked . 1557339529)
        (last-edit . 1417307461)
        (last-updated . 1555985093)
        (modules . ())
        (name . "distro-build")
        (nix-sha256 . "1f55kkiamxrqjdcgsvaqwikap08ln7c9ri2pv3rbh16zzmljxpw4")
        (ring . 0)
        (search-terms
         .
         #hasheq((:build-success: . #t)
                 (:no-tag: . #t)
                 (author:mflatt@racket-lang.org . #t)
                 (ring:0 . #t)))
        (source . "git://github.com/racket/distro-build/?path=distro-build")
        (tags . ())
        (versions
         .
         #hash((default
                .
                #hasheq((checksum
                         .
                         "637f9c575ef40a0b3ceb235e2c98597fd0905e9c")
                        (source
                         .
                         "git://github.com/racket/distro-build/?path=distro-build")
                        (source_url
                         .
                         "git://github.com/racket/distro-build/?path=distro-build")))
               ("5.3.4"
                .
                #hash((checksum . "9f098dddde7f217879070816090c1e8e74d49432")
                      (source
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")
                      (source_url
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")))
               ("5.3.5"
                .
                #hash((checksum . "9f098dddde7f217879070816090c1e8e74d49432")
                      (source
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")
                      (source_url
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")))
               ("5.3.6"
                .
                #hash((checksum . "9f098dddde7f217879070816090c1e8e74d49432")
                      (source
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")
                      (source_url
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")))))))
 ("distro-build-client"
  .
  #hash((author . "mflatt@racket-lang.org")
        (checksum . "28c936f78703ae64385ebb23093f47313c5ecfe3")
        (dependencies
         .
         (("base" #:version "6.2.900.9") "ds-store-lib" "at-exp-lib"))
        (dependency-names . ("base" "ds-store-lib" "at-exp-lib"))
        (description . "mflatt@racket-lang.org")
        (modules . ())
        (name . "distro-build-client")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/distro-build-client.zip")
        (tags . ())))
 ("distro-build-doc"
  .
  #hasheq((author . "mflatt@racket-lang.org")
          (authors . ("mflatt@racket-lang.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "distro-build"
                    "doc/distro-build@distro-build-doc/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/distro-build-doc.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/distro-build-doc.txt")))
          (checksum . "637f9c575ef40a0b3ceb235e2c98597fd0905e9c")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           (("base" #:version "6.1.1.6")
            "distro-build-server"
            "distro-build-client"
            "web-server-lib"
            "at-exp-lib"
            "racket-doc"
            "scribble-lib"))
          (dependency-names
           .
           ("base"
            "distro-build-server"
            "distro-build-client"
            "web-server-lib"
            "at-exp-lib"
            "racket-doc"
            "scribble-lib"))
          (description . "documentation part of \"distro-build\"")
          (implies . ())
          (last-checked . 1557339530)
          (last-edit . 1440895103)
          (last-updated . 1555985094)
          (modules . ((lib "distro-build/distro-build.scrbl")))
          (name . "distro-build-doc")
          (nix-sha256
           .
           "1f55kkiamxrqjdcgsvaqwikap08ln7c9ri2pv3rbh16zzmljxpw4")
          (ring . 0)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (:no-tag: . #t)
                   (author:mflatt@racket-lang.org . #t)
                   (ring:0 . #t)))
          (source
           .
           "git://github.com/racket/distro-build/?path=distro-build-doc")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "637f9c575ef40a0b3ceb235e2c98597fd0905e9c")
                          (source
                           .
                           "git://github.com/racket/distro-build/?path=distro-build-doc")
                          (source_url
                           .
                           "git://github.com/racket/distro-build/?path=distro-build-doc")))))))
 ("distro-build-lib"
  .
  #hash((author . "mflatt@racket-lang.org")
        (checksum . "bcf598bd0fbe380264c6196ef07054324aad01b1")
        (dependencies . ("distro-build-client" "distro-build-server"))
        (dependency-names . ("distro-build-client" "distro-build-server"))
        (description . "mflatt@racket-lang.org")
        (modules . ())
        (name . "distro-build-lib")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/distro-build-lib.zip")
        (tags . ())))
 ("distro-build-server"
  .
  #hash((author . "mflatt@racket-lang.org")
        (checksum . "4c270b11dcbb72841adb0b50f90eb29fc9dfc3b1")
        (dependencies
         .
         (("base" #:version "6.1.1.6")
          "distro-build-client"
          "web-server-lib"
          "ds-store-lib"
          "net-lib"
          "scribble-html-lib"
          "plt-web-lib"
          "remote-shell-lib"
          "at-exp-lib"
          "rackunit-lib"))
        (dependency-names
         .
         ("base"
          "distro-build-client"
          "web-server-lib"
          "ds-store-lib"
          "net-lib"
          "scribble-html-lib"
          "plt-web-lib"
          "remote-shell-lib"
          "at-exp-lib"
          "rackunit-lib"))
        (description . "mflatt@racket-lang.org")
        (modules . ())
        (name . "distro-build-server")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/distro-build-server.zip")
        (tags . ())))
 ("distro-build-test"
  .
  #hash((author . "mflatt@racket-lang.org")
        (authors . ("mflatt@racket-lang.org"))
        (build
         .
         #hash((conflicts-log . #f)
               (dep-failure-log . #f)
               (docs . ())
               (failure-log . #f)
               (min-failure-log . #f)
               (success-log . "server/built/install/distro-build-test.txt")
               (test-failure-log . #f)
               (test-success-log
                .
                "server/built/test-success/distro-build-test.txt")))
        (checksum . "637f9c575ef40a0b3ceb235e2c98597fd0905e9c")
        (checksum-error . #f)
        (conflicts . ())
        (dependencies . ("base" "remote-shell-lib" "web-server-lib"))
        (dependency-names . ("base" "remote-shell-lib" "web-server-lib"))
        (description . "Tests for \"distro-build\"")
        (implies . ())
        (last-checked . 1557339530)
        (last-edit . 1509210348)
        (last-updated . 1555985096)
        (modules . ((lib "distro-build/tests/unix-installer.rkt")))
        (name . "distro-build-test")
        (nix-sha256 . "1f55kkiamxrqjdcgsvaqwikap08ln7c9ri2pv3rbh16zzmljxpw4")
        (ring . 2)
        (search-terms
         .
         #hasheq((:build-success: . #t)
                 (:no-tag: . #t)
                 (author:mflatt@racket-lang.org . #t)
                 (ring:2 . #t)))
        (source
         .
         "git://github.com/racket/distro-build/?path=distro-build-test")
        (tags . ())
        (versions
         .
         #hash((default
                .
                #hasheq((checksum
                         .
                         "637f9c575ef40a0b3ceb235e2c98597fd0905e9c")
                        (source
                         .
                         "git://github.com/racket/distro-build/?path=distro-build-test")
                        (source_url
                         .
                         "git://github.com/racket/distro-build/?path=distro-build-test")))))))
 ("dlm-read"
  .
  #hasheq((author . "leif@leifandersen.net")
          (authors . ("leif@leifandersen.net"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "dlm-read" "doc/dlm-read@dlm-read/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/dlm-read.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/dlm-read.txt")))
          (checksum . "9ae0487b315e762d311ea0e14b72a9bd2de27470")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base" "rackunit-lib" "csv-reading" "scribble-lib" "racket-doc"))
          (dependency-names
           .
           ("base" "rackunit-lib" "csv-reading" "scribble-lib" "racket-doc"))
          (description . "")
          (implies . ())
          (last-checked . 1557339530)
          (last-edit . 1418153746)
          (last-updated . 1502815906)
          (modules
           .
           ((lib "dlm-read/scribblings/dlm-read.scrbl")
            (lib "dlm-read/main.rkt")))
          (name . "dlm-read")
          (nix-sha256
           .
           "1rbqqsaqa1pycd4d8j668pxx4w35k8adsyqpi2jp3yz35d1j7lsi")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (:no-desc: . #t)
                   (:no-tag: . #t)
                   (author:leif@leifandersen.net . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/LeifAndersen/racket-dlm-read#master")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "9ae0487b315e762d311ea0e14b72a9bd2de27470")
                          (source
                           .
                           "git://github.com/LeifAndersen/racket-dlm-read#master")
                          (source_url
                           .
                           "http://github.com/LeifAndersen/racket-dlm-read/tree/master#master")))))))
 ("dm"
  .
  #hasheq((author . "mordae@anilinux.org")
          (authors . ("mordae@anilinux.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "dm" "doc/dm@dm/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/dm.txt")
                 (test-failure-log . "server/built/test-fail/dm.txt")
                 (test-success-log . #f)))
          (checksum . "15b137ef72b0bf1f10cfd1d14e80e2472e8a5df4")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base" "scribble-lib" "misc1" "libuuid" "racket-doc"))
          (dependency-names
           .
           ("base" "scribble-lib" "misc1" "libuuid" "racket-doc"))
          (description . "Linux Device Mapper bindings for Racket.")
          (implies . ())
          (last-checked . 1557339530)
          (last-edit . 1405684510)
          (last-updated . 1502815906)
          (modules
           .
           ((lib "dm/parse.rkt")
            (lib "dm/dm.scrbl")
            (lib "dm/private/ffi.rkt")
            (lib "dm/main.rkt")))
          (name . "dm")
          (nix-sha256
           .
           "09dhdgkcpqybfrnnynn9028gsc84khplni0i7wgqx73pgmqs80cy")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:mordae@anilinux.org . #t)
                   (ffi . #t)
                   (linux . #t)
                   (ring:1 . #t)))
          (source . "github://github.com/mordae/racket-dm/master")
          (tags . ("ffi" "linux"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "15b137ef72b0bf1f10cfd1d14e80e2472e8a5df4")
                          (source
                           .
                           "github://github.com/mordae/racket-dm/master")
                          (source_url
                           .
                           "http://github.com/mordae/racket-dm/tree/master")))))))
 ("doc-coverage"
  .
  #hasheq((author . "jackhfirth@gmail.com")
          (authors . ("jackhfirth@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "doc-coverage"
                    "doc/doc-coverage@doc-coverage/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/doc-coverage.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/doc-coverage.txt")))
          (checksum . "bd0225943d528bb4309ede013c3cca50fe2ca5bf")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           (("base" #:version "6.3")
            "racket-index"
            "rackunit-lib"
            "reprovide-lang"
            "scribble-lib"
            "scribble-lib"
            "racket-doc"
            "rackunit-lib"))
          (dependency-names
           .
           ("base"
            "racket-index"
            "rackunit-lib"
            "reprovide-lang"
            "scribble-lib"
            "scribble-lib"
            "racket-doc"
            "rackunit-lib"))
          (description
           .
           "A package for inspecting and testing a module's documentation of its provided bindings")
          (implies . ())
          (last-checked . 1557339530)
          (last-edit . 1505788731)
          (last-updated . 1505788731)
          (modules
           .
           ((lib "doc-coverage/private/export-tests.rkt")
            (lib "doc-coverage/private/main.rkt")
            (lib "doc-coverage/scribblings/main.scrbl")
            (lib "doc-coverage/private/export-count.rkt")
            (lib "doc-coverage/private/export-lists.rkt")
            (lib "doc-coverage/main.rkt")
            (lib "doc-coverage/private/raco.rkt")
            (lib "doc-coverage/tests/main.rkt")))
          (name . "doc-coverage")
          (nix-sha256
           .
           "0vgjpgjdxlx3mnfr7yvhz4zakg79bf0j7x8b7nl20gg51ifqgncx")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:jackhfirth@gmail.com . #t)
                   (reflection . #t)
                   (ring:1 . #t)
                   (scribble . #t)
                   (testing . #t)))
          (source
           .
           "git://github.com/jackfirth/doc-coverage?path=doc-coverage")
          (tags . ("reflection" "scribble" "testing"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "bd0225943d528bb4309ede013c3cca50fe2ca5bf")
                          (source
                           .
                           "git://github.com/jackfirth/doc-coverage?path=doc-coverage")
                          (source_url
                           .
                           "http://github.com/jackfirth/doc-coverage/tree/master?path=doc-coverage")))))))
 ("doodle"
  .
  #hasheq((author . "leif@leifandersen.net")
          (authors . ("leif@leifandersen.net"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "doodle" "doc/doodle@doodle/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/doodle.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/doodle.txt")))
          (checksum . "a6840bb97bb384b92c612960aca676e31662453c")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "rackunit-lib"
            "scribble-lib"
            "pict-lib"
            "draw-lib"
            "scribble-lib"
            "racket-doc"))
          (dependency-names
           .
           ("base"
            "rackunit-lib"
            "scribble-lib"
            "pict-lib"
            "draw-lib"
            "scribble-lib"
            "racket-doc"))
          (description . "")
          (implies . ())
          (last-checked . 1557339530)
          (last-edit . 1455079653)
          (last-updated . 1502815907)
          (modules
           .
           ((lib "doodle/private/template/utils.rkt")
            (lib "doodle/private/template/paper.scrbl")
            (lib "doodle/scribblings/doodle.scrbl")
            (lib "doodle/main.rkt")))
          (name . "doodle")
          (nix-sha256
           .
           "1bl775bkckaiplglbsf5bq98mznlm9f2g887lphcb5nn22lmsfgf")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (:no-desc: . #t)
                   (author:leif@leifandersen.net . #t)
                   (ring:1 . #t)
                   (scribble . #t)))
          (source . "git://github.com/LeifAndersen/doodle")
          (tags . ("scribble"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "a6840bb97bb384b92c612960aca676e31662453c")
                          (source . "git://github.com/LeifAndersen/doodle")
                          (source_url
                           .
                           "http://github.com/LeifAndersen/doodle/tree/master")))))))
 ("dos"
  .
  #hasheq((author . "jay.mccarthy@gmail.com")
          (authors . ("jay.mccarthy@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "dos" "doc/dos@dos/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/dos.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/dos.txt")))
          (checksum . "4c2d9da7d2f3b68a8654f2bbfcfa6eadf7692d13")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "htdp-lib"
            "htdp-lib"
            "scribble-lib"
            "racket-doc"
            "htdp-doc"
            "rackunit-lib"))
          (dependency-names
           .
           ("base"
            "htdp-lib"
            "htdp-lib"
            "scribble-lib"
            "racket-doc"
            "htdp-doc"
            "rackunit-lib"))
          (description
           .
           "Delimited-continuation-based Operating-system Simulator")
          (implies . ())
          (last-checked . 1557339530)
          (last-edit . 1411610244)
          (last-updated . 1553122987)
          (modules
           .
           ((lib "dos/main.rkt")
            (lib "dos/examples/win.rkt")
            (lib "dos/examples/os2.rkt")
            (lib "dos/os2.rkt")
            (lib "dos/win/big-bang.rkt")
            (lib "dos/dos.scrbl")
            (lib "dos/examples/dos.rkt")
            (lib "dos/examples/win-long.rkt")
            (lib "dos/win.rkt")))
          (name . "dos")
          (nix-sha256
           .
           "0nsjchz9jjdhljc5jslxm372f2hifvbzj5crp0cryr2v9n6g991a")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:jay.mccarthy@gmail.com . #t)
                   (continuation . #t)
                   (games . #t)
                   (os . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/jeapostrophe/dos")
          (tags . ("continuation" "games" "os"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "4c2d9da7d2f3b68a8654f2bbfcfa6eadf7692d13")
                          (source . "git://github.com/jeapostrophe/dos")
                          (source_url
                           .
                           "http://github.com/jeapostrophe/dos/tree/master")))))))
 ("dotenv"
  .
  #hasheq((author . "royall@royall.us")
          (authors . ("royall@royall.us"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "dotenv" "doc/dotenv@dotenv/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/dotenv.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/dotenv.txt")))
          (checksum . "fe46081efb3d634b25edfbdac523fa7dd053917d")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "scribble-lib" "racket-doc" "rackunit-lib"))
          (dependency-names
           .
           ("base" "scribble-lib" "racket-doc" "rackunit-lib"))
          (description
           .
           "Override environment variables by loading .env files.")
          (implies . ())
          (last-checked . 1557339530)
          (last-edit . 1503888629)
          (last-updated . 1539731680)
          (modules
           .
           ((lib "dotenv/scribblings/dotenv.scrbl")
            (lib "dotenv/main.rkt")
            (lib "dotenv/private/dotenv.rkt")))
          (name . "dotenv")
          (nix-sha256
           .
           "0rdsqbc48p4pdpm60g4c7cdm758pqhw45ilalfrrvc2197r658im")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:royall@royall.us . #t)
                   (ring:1 . #t)
                   (web . #t)))
          (source . "git://github.com/royallthefourth/dotenv")
          (tags . ("web"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "fe46081efb3d634b25edfbdac523fa7dd053917d")
                          (source . "git://github.com/royallthefourth/dotenv")
                          (source_url
                           .
                           "http://github.com/royallthefourth/dotenv/tree/master")))))))
 ("dotlambda"
  .
  #hasheq((author . "georges.duperon@gmail.com")
          (authors . ("georges.duperon@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "dotlambda" "doc/dotlambda@dotlambda/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/dotlambda.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/dotlambda.txt")))
          (checksum . "fed2278132fa30ac69b73c3f1400b15860a5a4a6")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "rackunit-lib"
            "typed-map-lib"
            "typed-racket-lib"
            "typed-racket-more"
            "chain-module-begin"
            "debug-scopes"
            "scribble-lib"
            "racket-doc"
            "typed-racket-doc"))
          (dependency-names
           .
           ("base"
            "rackunit-lib"
            "typed-map-lib"
            "typed-racket-lib"
            "typed-racket-more"
            "chain-module-begin"
            "debug-scopes"
            "scribble-lib"
            "racket-doc"
            "typed-racket-doc"))
          (description
           .
           "Splits dotted identifiers like a.b.c, also supports λ<arg>.(code) syntax. Experimental (i.e. there may be small breaking changes in later versions).")
          (implies . ())
          (last-checked . 1557339531)
          (last-edit . 1501079076)
          (last-updated . 1556146989)
          (modules
           .
           ((lib "dotlambda/private/fold.rkt")
            (lib "dotlambda/unhygienic.rkt")
            (lib "dotlambda/test/test-typed-dotlambda.rkt")
            (lib "dotlambda/test/test-typed-racket-chain.rkt")
            (lib "dotlambda/implementation.rkt")
            (lib "dotlambda/literals.rkt")
            (lib "typed/dotlambda.rkt")
            (lib "dotlambda/unhygienic-implementation.rkt")
            (lib "dotlambda/test/test-dotlambda.rkt")
            (lib "dotlambda/main.rkt")
            (lib "dotlambda/unhygienic/lang/reader.rkt")
            (lib "typed/dotlambda/lang/reader.rkt")
            (lib "dotlambda/test/typed-dotlambda-phase1.rkt")
            (lib "dotlambda/lang/reader.rkt")
            (lib "dotlambda/scribblings/typed-dotlambda.scrbl")
            (lib "typed/dotlambda/main.rkt")
            (lib "dotlambda/scribblings/dotlambda.scrbl")))
          (name . "dotlambda")
          (nix-sha256
           .
           "1bp85x9f7j8qr3dkk2cl83j1lbjk15y5dvzvxfxly22qsbf4wn9w")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:georges.duperon@gmail.com . #t)
                   (experimental . #t)
                   (lang-extension . #t)
                   (ring:1 . #t)
                   (syntax . #t)))
          (source . "https://github.com/jsmaniac/dotlambda.git")
          (tags . ("experimental" "lang-extension" "syntax"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "fed2278132fa30ac69b73c3f1400b15860a5a4a6")
                          (source
                           .
                           "https://github.com/jsmaniac/dotlambda.git")
                          (source_url
                           .
                           "https://github.com/jsmaniac/dotlambda.git")))))))
 ("dotmethod"
  .
  #hasheq((author . "alexander@knauth.org")
          (authors . ("alexander@knauth.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "dotmethod" "doc/dotmethod@dotmethod/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/dotmethod.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/dotmethod.txt")))
          (checksum . "e427237130d9b530d935269a6506c8cdeccc765c")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "afl"
            "postfix-dot-notation"
            "sweet-exp"
            "mutable-match-lambda"
            "my-cond"
            "racket-doc"
            "rackunit-lib"
            "scribble-code-examples"
            "scribble-lib"))
          (dependency-names
           .
           ("base"
            "afl"
            "postfix-dot-notation"
            "sweet-exp"
            "mutable-match-lambda"
            "my-cond"
            "racket-doc"
            "rackunit-lib"
            "scribble-code-examples"
            "scribble-lib"))
          (description . "obj.method(x) in racket using mutable-match-lambda")
          (implies . ())
          (last-checked . 1557339531)
          (last-edit . 1472014564)
          (last-updated . 1502815907)
          (modules
           .
           ((lib "dotmethod/lang/reader.rkt")
            (lib "dotmethod/dotmethod.rkt")
            (lib "dotmethod/tests/test-require.rkt")
            (lib "dotmethod/tests/test-lang.rkt")
            (lib "dotmethod/scribblings/dotmethod.scrbl")))
          (name . "dotmethod")
          (nix-sha256
           .
           "11q2f3b599r8jwwhhczgk74dyq6b50r9z75850ks8j54ngllnm72")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:alexander@knauth.org . #t)
                   (deprecated . #t)
                   (ring:1 . #t)
                   (syntax . #t)))
          (source . "git://github.com/AlexKnauth/dotmethod")
          (tags . ("deprecated" "syntax"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "e427237130d9b530d935269a6506c8cdeccc765c")
                          (source . "git://github.com/AlexKnauth/dotmethod")
                          (source_url
                           .
                           "http://github.com/AlexKnauth/dotmethod/tree/master")))))))
 ("draw"
  .
  #hash((author . "mflatt@racket-lang.org")
        (checksum . "9ba802253b34b7b129f8d89bdcdf1e00ca84adfd")
        (dependencies . ("draw-lib" "draw-doc"))
        (dependency-names . ("draw-lib" "draw-doc"))
        (description . "mflatt@racket-lang.org")
        (modules . ())
        (name . "draw")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/draw.zip")
        (tags . ())))
 ("draw-doc"
  .
  #hash((author . "mflatt@racket-lang.org")
        (checksum . "d67a673b3dfddb29e49042481e42b9b41a1f3fbf")
        (dependencies
         .
         ("gui-doc"
          "pict-doc"
          "at-exp-lib"
          "base"
          "gui-lib"
          "pict-lib"
          "scribble-lib"
          "draw-lib"
          "racket-doc"))
        (dependency-names
         .
         ("gui-doc"
          "pict-doc"
          "at-exp-lib"
          "base"
          "gui-lib"
          "pict-lib"
          "scribble-lib"
          "draw-lib"
          "racket-doc"))
        (description . "mflatt@racket-lang.org")
        (modules . ())
        (name . "draw-doc")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/draw-doc.zip")
        (tags . ())))
 ("draw-i386-macosx"
  .
  #hash((author . "mflatt@racket-lang.org")
        (authors . ("mflatt@racket-lang.org"))
        (build
         .
         #hash((conflicts-log . #f)
               (dep-failure-log . #f)
               (docs . ())
               (failure-log . #f)
               (min-failure-log . #f)
               (success-log . #f)
               (test-failure-log . #f)
               (test-success-log . #f)))
        (checksum . "8632512357c53d2d085a68545b2e093a9f9677be")
        (checksum-error . #f)
        (conflicts . ())
        (dependencies . ("base"))
        (dependency-names . ("base"))
        (description . "native libraries for \"draw\" package")
        (implies . ())
        (last-checked . 1557339531)
        (last-edit . 1452304685)
        (last-updated . 1502815910)
        (modules . ())
        (name . "draw-i386-macosx")
        (ring . 0)
        (search-terms
         .
         #hasheq((:no-tag: . #t)
                 (author:mflatt@racket-lang.org . #t)
                 (ring:0 . #t)))
        (source
         .
         "https://pkg-sources.racket-lang.org/pkgs/8632512357c53d2d085a68545b2e093a9f9677be/draw-i386-macosx.zip")
        (tags . ())
        (versions
         .
         #hash((default
                .
                #hasheq((checksum
                         .
                         "8632512357c53d2d085a68545b2e093a9f9677be")
                        (source
                         .
                         "https://pkg-sources.racket-lang.org/pkgs/8632512357c53d2d085a68545b2e093a9f9677be/draw-i386-macosx.zip")
                        (source_url
                         .
                         "https://pkg-sources.racket-lang.org/pkgs/8632512357c53d2d085a68545b2e093a9f9677be/draw-i386-macosx.zip")))
               ("5.3.4"
                .
                #hash((checksum . "9f098dddde7f217879070816090c1e8e74d49432")
                      (source
                       .
                       "https://pkg-sources.racket-lang.org/pkgs/empty.zip")
                      (source_url
                       .
                       "https://pkg-sources.racket-lang.org/pkgs/empty.zip")))
               ("5.3.5"
                .
                #hash((checksum . "9f098dddde7f217879070816090c1e8e74d49432")
                      (source
                       .
                       "https://pkg-sources.racket-lang.org/pkgs/empty.zip")
                      (source_url
                       .
                       "https://pkg-sources.racket-lang.org/pkgs/empty.zip")))
               ("5.3.6"
                .
                #hash((checksum . "9f098dddde7f217879070816090c1e8e74d49432")
                      (source
                       .
                       "https://pkg-sources.racket-lang.org/pkgs/empty.zip")
                      (source_url
                       .
                       "https://pkg-sources.racket-lang.org/pkgs/empty.zip")))))))
 ("draw-i386-macosx-2"
  .
  #hash((author . "mflatt@racket-lang.org")
        (authors . ("mflatt@racket-lang.org"))
        (build
         .
         #hash((conflicts-log . #f)
               (dep-failure-log . #f)
               (docs . ())
               (failure-log . #f)
               (min-failure-log . #f)
               (success-log . #f)
               (test-failure-log . #f)
               (test-success-log . #f)))
        (checksum . "ecd61bfff1daa6e72ab14c73bfa480499717da29")
        (checksum-error . #f)
        (conflicts . ())
        (dependencies . ("base"))
        (dependency-names . ("base"))
        (description . "native libraries for \"draw\" package")
        (implies . ())
        (last-checked . 1557339531)
        (last-edit . 1452304685)
        (last-updated . 1502815911)
        (modules . ())
        (name . "draw-i386-macosx-2")
        (ring . 0)
        (search-terms
         .
         #hasheq((author:mflatt@racket-lang.org . #t)
                 (main-distribution . #t)
                 (ring:0 . #t)))
        (source
         .
         "https://pkg-sources.racket-lang.org/pkgs/ecd61bfff1daa6e72ab14c73bfa480499717da29/draw-i386-macosx-2.zip")
        (tags . ("main-distribution"))
        (versions
         .
         #hash((default
                .
                #hasheq((checksum
                         .
                         "ecd61bfff1daa6e72ab14c73bfa480499717da29")
                        (source
                         .
                         "https://pkg-sources.racket-lang.org/pkgs/ecd61bfff1daa6e72ab14c73bfa480499717da29/draw-i386-macosx-2.zip")
                        (source_url
                         .
                         "https://pkg-sources.racket-lang.org/pkgs/ecd61bfff1daa6e72ab14c73bfa480499717da29/draw-i386-macosx-2.zip")))
               ("5.3.4"
                .
                #hash((checksum . "9f098dddde7f217879070816090c1e8e74d49432")
                      (source
                       .
                       "https://pkg-sources.racket-lang.org/pkgs/empty.zip")
                      (source_url
                       .
                       "https://pkg-sources.racket-lang.org/pkgs/empty.zip")))
               ("5.3.5"
                .
                #hash((checksum . "9f098dddde7f217879070816090c1e8e74d49432")
                      (source
                       .
                       "https://pkg-sources.racket-lang.org/pkgs/empty.zip")
                      (source_url
                       .
                       "https://pkg-sources.racket-lang.org/pkgs/empty.zip")))
               ("5.3.6"
                .
                #hash((checksum . "9f098dddde7f217879070816090c1e8e74d49432")
                      (source
                       .
                       "https://pkg-sources.racket-lang.org/pkgs/empty.zip")
                      (source_url
                       .
                       "https://pkg-sources.racket-lang.org/pkgs/empty.zip")))))))
 ("draw-i386-macosx-3"
  .
  #hash((author . "mflatt@racket-lang.org")
        (checksum . "6cb594a22c93c062c5e10a06bf1169901f4bb943")
        (dependencies . ("base"))
        (dependency-names . ("base"))
        (description . "mflatt@racket-lang.org")
        (modules . ())
        (name . "draw-i386-macosx-3")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/draw-i386-macosx-3.zip")
        (tags . ())))
 ("draw-lib"
  .
  #hash((author . "mflatt@racket-lang.org")
        (checksum . "153941cf72288694efa834fcadabdaa1d95e62f9")
        (dependencies
         .
         (("base" #:version "6.10.1.2")
          ("draw-i386-macosx-3" #:platform "i386-macosx")
          ("draw-x86_64-macosx-3" #:platform "x86_64-macosx")
          ("draw-ppc-macosx-3" #:platform "ppc-macosx")
          ("draw-win32-i386-3" #:platform "win32\\i386")
          ("draw-win32-x86_64-3" #:platform "win32\\x86_64")
          ("draw-x86_64-linux-natipkg-3" #:platform "x86_64-linux-natipkg")
          ("draw-x11-x86_64-linux-natipkg" #:platform "x86_64-linux-natipkg")
          ("draw-ttf-x86_64-linux-natipkg"
           #:platform
           "x86_64-linux-natipkg")))
        (dependency-names
         .
         ("base"
          "draw-i386-macosx-3"
          "draw-x86_64-macosx-3"
          "draw-ppc-macosx-3"
          "draw-win32-i386-3"
          "draw-win32-x86_64-3"
          "draw-x86_64-linux-natipkg-3"
          "draw-x11-x86_64-linux-natipkg"
          "draw-ttf-x86_64-linux-natipkg"))
        (description . "mflatt@racket-lang.org")
        (modules . ())
        (name . "draw-lib")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/draw-lib.zip")
        (tags . ())))
 ("draw-ppc-macosx"
  .
  #hash((author . "mflatt@racket-lang.org")
        (authors . ("mflatt@racket-lang.org"))
        (build
         .
         #hash((conflicts-log . #f)
               (dep-failure-log . #f)
               (docs . ())
               (failure-log . #f)
               (min-failure-log . #f)
               (success-log . #f)
               (test-failure-log . #f)
               (test-success-log . #f)))
        (checksum . "552c18b393b3377b051da48aef8b8d6883615029")
        (checksum-error . #f)
        (conflicts . ())
        (dependencies . ("base"))
        (dependency-names . ("base"))
        (description . "native libraries for \"draw\" package")
        (implies . ())
        (last-checked . 1557339533)
        (last-edit . 1452304685)
        (last-updated . 1502815914)
        (modules . ())
        (name . "draw-ppc-macosx")
        (ring . 0)
        (search-terms
         .
         #hasheq((:no-tag: . #t)
                 (author:mflatt@racket-lang.org . #t)
                 (ring:0 . #t)))
        (source
         .
         "https://pkg-sources.racket-lang.org/pkgs/552c18b393b3377b051da48aef8b8d6883615029/draw-ppc-macosx.zip")
        (tags . ())
        (versions
         .
         #hash((default
                .
                #hasheq((checksum
                         .
                         "552c18b393b3377b051da48aef8b8d6883615029")
                        (source
                         .
                         "https://pkg-sources.racket-lang.org/pkgs/552c18b393b3377b051da48aef8b8d6883615029/draw-ppc-macosx.zip")
                        (source_url
                         .
                         "https://pkg-sources.racket-lang.org/pkgs/552c18b393b3377b051da48aef8b8d6883615029/draw-ppc-macosx.zip")))
               ("5.3.4"
                .
                #hash((checksum . "9f098dddde7f217879070816090c1e8e74d49432")
                      (source
                       .
                       "https://pkg-sources.racket-lang.org/pkgs/empty.zip")
                      (source_url
                       .
                       "https://pkg-sources.racket-lang.org/pkgs/empty.zip")))
               ("5.3.5"
                .
                #hash((checksum . "9f098dddde7f217879070816090c1e8e74d49432")
                      (source
                       .
                       "https://pkg-sources.racket-lang.org/pkgs/empty.zip")
                      (source_url
                       .
                       "https://pkg-sources.racket-lang.org/pkgs/empty.zip")))
               ("5.3.6"
                .
                #hash((checksum . "9f098dddde7f217879070816090c1e8e74d49432")
                      (source
                       .
                       "https://pkg-sources.racket-lang.org/pkgs/empty.zip")
                      (source_url
                       .
                       "https://pkg-sources.racket-lang.org/pkgs/empty.zip")))))))
 ("draw-ppc-macosx-2"
  .
  #hash((author . "mflatt@racket-lang.org")
        (authors . ("mflatt@racket-lang.org"))
        (build
         .
         #hash((conflicts-log . #f)
               (dep-failure-log . #f)
               (docs . ())
               (failure-log . #f)
               (min-failure-log . #f)
               (success-log . #f)
               (test-failure-log . #f)
               (test-success-log . #f)))
        (checksum . "a68c25d5794dff8f4f46eaccea942d2f04f32ca3")
        (checksum-error . #f)
        (conflicts . ())
        (dependencies . ("base"))
        (dependency-names . ("base"))
        (description . "native libraries for \"draw\" package")
        (implies . ())
        (last-checked . 1557339533)
        (last-edit . 1452304685)
        (last-updated . 1502815916)
        (modules . ())
        (name . "draw-ppc-macosx-2")
        (ring . 0)
        (search-terms
         .
         #hasheq((author:mflatt@racket-lang.org . #t)
                 (main-distribution . #t)
                 (ring:0 . #t)))
        (source
         .
         "https://pkg-sources.racket-lang.org/pkgs/a68c25d5794dff8f4f46eaccea942d2f04f32ca3/draw-ppc-macosx-2.zip")
        (tags . ("main-distribution"))
        (versions
         .
         #hash((default
                .
                #hasheq((checksum
                         .
                         "a68c25d5794dff8f4f46eaccea942d2f04f32ca3")
                        (source
                         .
                         "https://pkg-sources.racket-lang.org/pkgs/a68c25d5794dff8f4f46eaccea942d2f04f32ca3/draw-ppc-macosx-2.zip")
                        (source_url
                         .
                         "https://pkg-sources.racket-lang.org/pkgs/a68c25d5794dff8f4f46eaccea942d2f04f32ca3/draw-ppc-macosx-2.zip")))
               ("5.3.4"
                .
                #hash((checksum . "9f098dddde7f217879070816090c1e8e74d49432")
                      (source
                       .
                       "https://pkg-sources.racket-lang.org/pkgs/empty.zip")
                      (source_url
                       .
                       "https://pkg-sources.racket-lang.org/pkgs/empty.zip")))
               ("5.3.5"
                .
                #hash((checksum . "9f098dddde7f217879070816090c1e8e74d49432")
                      (source
                       .
                       "https://pkg-sources.racket-lang.org/pkgs/empty.zip")
                      (source_url
                       .
                       "https://pkg-sources.racket-lang.org/pkgs/empty.zip")))
               ("5.3.6"
                .
                #hash((checksum . "9f098dddde7f217879070816090c1e8e74d49432")
                      (source
                       .
                       "https://pkg-sources.racket-lang.org/pkgs/empty.zip")
                      (source_url
                       .
                       "https://pkg-sources.racket-lang.org/pkgs/empty.zip")))))))
 ("draw-ppc-macosx-3"
  .
  #hash((author . "mflatt@racket-lang.org")
        (checksum . "8dbe4128a27d2cd668a3824c86ed3b04f5e8ed01")
        (dependencies . ("base"))
        (dependency-names . ("base"))
        (description . "mflatt@racket-lang.org")
        (modules . ())
        (name . "draw-ppc-macosx-3")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/draw-ppc-macosx-3.zip")
        (tags . ())))
 ("draw-test"
  .
  #hash((author . "mflatt@racket-lang.org")
        (checksum . "550cb1ff993103b3f247d7632e02767afab704f8")
        (dependencies
         .
         ("base"
          "racket-index"
          "scheme-lib"
          "draw-lib"
          "racket-test"
          "sgl"
          "gui-lib"
          "rackunit-lib"
          "pconvert-lib"
          "compatibility-lib"
          "sandbox-lib"))
        (dependency-names
         .
         ("base"
          "racket-index"
          "scheme-lib"
          "draw-lib"
          "racket-test"
          "sgl"
          "gui-lib"
          "rackunit-lib"
          "pconvert-lib"
          "compatibility-lib"
          "sandbox-lib"))
        (description . "mflatt@racket-lang.org")
        (modules . ())
        (name . "draw-test")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/draw-test.zip")
        (tags . ())))
 ("draw-ttf-x86_64-linux-natipkg"
  .
  #hash((author . "mflatt@racket-lang.org")
        (checksum . "7a88d4aa9e850c03f6908a76ff056c9bd99254b9")
        (dependencies . ("base"))
        (dependency-names . ("base"))
        (description . "mflatt@racket-lang.org")
        (modules . ())
        (name . "draw-ttf-x86_64-linux-natipkg")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/draw-ttf-x86_64-linux-natipkg.zip")
        (tags . ())))
 ("draw-win32-i386"
  .
  #hash((author . "mflatt@racket-lang.org")
        (authors . ("mflatt@racket-lang.org"))
        (build
         .
         #hash((conflicts-log . #f)
               (dep-failure-log . #f)
               (docs . ())
               (failure-log . #f)
               (min-failure-log . #f)
               (success-log . #f)
               (test-failure-log . #f)
               (test-success-log . #f)))
        (checksum . "915598defe21a2213c2833b45ace0c62fa31b39e")
        (checksum-error . #f)
        (conflicts . ())
        (dependencies . ("base"))
        (dependency-names . ("base"))
        (description . "native libraries for \"draw\" package")
        (implies . ())
        (last-checked . 1557339535)
        (last-edit . 1452304685)
        (last-updated . 1502815919)
        (modules . ())
        (name . "draw-win32-i386")
        (ring . 0)
        (search-terms
         .
         #hasheq((:no-tag: . #t)
                 (author:mflatt@racket-lang.org . #t)
                 (ring:0 . #t)))
        (source
         .
         "https://pkg-sources.racket-lang.org/pkgs/915598defe21a2213c2833b45ace0c62fa31b39e/draw-win32-i386.zip")
        (tags . ())
        (versions
         .
         #hash((default
                .
                #hasheq((checksum
                         .
                         "915598defe21a2213c2833b45ace0c62fa31b39e")
                        (source
                         .
                         "https://pkg-sources.racket-lang.org/pkgs/915598defe21a2213c2833b45ace0c62fa31b39e/draw-win32-i386.zip")
                        (source_url
                         .
                         "https://pkg-sources.racket-lang.org/pkgs/915598defe21a2213c2833b45ace0c62fa31b39e/draw-win32-i386.zip")))
               ("5.3.4"
                .
                #hash((checksum . "9f098dddde7f217879070816090c1e8e74d49432")
                      (source
                       .
                       "https://pkg-sources.racket-lang.org/pkgs/empty.zip")
                      (source_url
                       .
                       "https://pkg-sources.racket-lang.org/pkgs/empty.zip")))
               ("5.3.5"
                .
                #hash((checksum . "9f098dddde7f217879070816090c1e8e74d49432")
                      (source
                       .
                       "https://pkg-sources.racket-lang.org/pkgs/empty.zip")
                      (source_url
                       .
                       "https://pkg-sources.racket-lang.org/pkgs/empty.zip")))
               ("5.3.6"
                .
                #hash((checksum . "9f098dddde7f217879070816090c1e8e74d49432")
                      (source
                       .
                       "https://pkg-sources.racket-lang.org/pkgs/empty.zip")
                      (source_url
                       .
                       "https://pkg-sources.racket-lang.org/pkgs/empty.zip")))))))
 ("draw-win32-i386-2"
  .
  #hash((author . "mflatt@racket-lang.org")
        (authors . ("mflatt@racket-lang.org"))
        (build
         .
         #hash((conflicts-log . #f)
               (dep-failure-log . #f)
               (docs . ())
               (failure-log . #f)
               (min-failure-log . #f)
               (success-log . #f)
               (test-failure-log . #f)
               (test-success-log . #f)))
        (checksum . "3f5fb8b2e1ce9802a71328ee338e277573eb9cc9")
        (checksum-error . #f)
        (conflicts . ())
        (dependencies . ("base"))
        (dependency-names . ("base"))
        (description . "native libraries for \"draw\" package")
        (implies . ())
        (last-checked . 1557339535)
        (last-edit . 1452304685)
        (last-updated . 1502815920)
        (modules . ())
        (name . "draw-win32-i386-2")
        (ring . 0)
        (search-terms
         .
         #hasheq((author:mflatt@racket-lang.org . #t)
                 (main-distribution . #t)
                 (ring:0 . #t)))
        (source
         .
         "https://pkg-sources.racket-lang.org/pkgs/3f5fb8b2e1ce9802a71328ee338e277573eb9cc9/draw-win32-i386-2.zip")
        (tags . ("main-distribution"))
        (versions
         .
         #hash((default
                .
                #hasheq((checksum
                         .
                         "3f5fb8b2e1ce9802a71328ee338e277573eb9cc9")
                        (source
                         .
                         "https://pkg-sources.racket-lang.org/pkgs/3f5fb8b2e1ce9802a71328ee338e277573eb9cc9/draw-win32-i386-2.zip")
                        (source_url
                         .
                         "https://pkg-sources.racket-lang.org/pkgs/3f5fb8b2e1ce9802a71328ee338e277573eb9cc9/draw-win32-i386-2.zip")))
               ("5.3.4"
                .
                #hash((checksum . "9f098dddde7f217879070816090c1e8e74d49432")
                      (source
                       .
                       "https://pkg-sources.racket-lang.org/pkgs/empty.zip")
                      (source_url
                       .
                       "https://pkg-sources.racket-lang.org/pkgs/empty.zip")))
               ("5.3.5"
                .
                #hash((checksum . "9f098dddde7f217879070816090c1e8e74d49432")
                      (source
                       .
                       "https://pkg-sources.racket-lang.org/pkgs/empty.zip")
                      (source_url
                       .
                       "https://pkg-sources.racket-lang.org/pkgs/empty.zip")))
               ("5.3.6"
                .
                #hash((checksum . "9f098dddde7f217879070816090c1e8e74d49432")
                      (source
                       .
                       "https://pkg-sources.racket-lang.org/pkgs/empty.zip")
                      (source_url
                       .
                       "https://pkg-sources.racket-lang.org/pkgs/empty.zip")))))))
 ("draw-win32-i386-3"
  .
  #hash((author . "mflatt@racket-lang.org")
        (checksum . "5fb300056fb42ab605888bc52799f3273f18f090")
        (dependencies . ("base"))
        (dependency-names . ("base"))
        (description . "mflatt@racket-lang.org")
        (modules . ())
        (name . "draw-win32-i386-3")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/draw-win32-i386-3.zip")
        (tags . ())))
 ("draw-win32-x86_64"
  .
  #hash((author . "mflatt@racket-lang.org")
        (authors . ("mflatt@racket-lang.org"))
        (build
         .
         #hash((conflicts-log . #f)
               (dep-failure-log . #f)
               (docs . ())
               (failure-log . #f)
               (min-failure-log . #f)
               (success-log . #f)
               (test-failure-log . #f)
               (test-success-log . #f)))
        (checksum . "d5769e02a39715de02b3c91c55a4d366dbbcb7fd")
        (checksum-error . #f)
        (conflicts . ())
        (dependencies . ("base"))
        (dependency-names . ("base"))
        (description . "native libraries for \"draw\" package")
        (implies . ())
        (last-checked . 1557339536)
        (last-edit . 1452304685)
        (last-updated . 1502815921)
        (modules . ())
        (name . "draw-win32-x86_64")
        (ring . 0)
        (search-terms
         .
         #hasheq((:no-tag: . #t)
                 (author:mflatt@racket-lang.org . #t)
                 (ring:0 . #t)))
        (source
         .
         "https://pkg-sources.racket-lang.org/pkgs/d5769e02a39715de02b3c91c55a4d366dbbcb7fd/draw-win32-x86_64.zip")
        (tags . ())
        (versions
         .
         #hash((default
                .
                #hasheq((checksum
                         .
                         "d5769e02a39715de02b3c91c55a4d366dbbcb7fd")
                        (source
                         .
                         "https://pkg-sources.racket-lang.org/pkgs/d5769e02a39715de02b3c91c55a4d366dbbcb7fd/draw-win32-x86_64.zip")
                        (source_url
                         .
                         "https://pkg-sources.racket-lang.org/pkgs/d5769e02a39715de02b3c91c55a4d366dbbcb7fd/draw-win32-x86_64.zip")))
               ("5.3.4"
                .
                #hash((checksum . "9f098dddde7f217879070816090c1e8e74d49432")
                      (source
                       .
                       "https://pkg-sources.racket-lang.org/pkgs/empty.zip")
                      (source_url
                       .
                       "https://pkg-sources.racket-lang.org/pkgs/empty.zip")))
               ("5.3.5"
                .
                #hash((checksum . "9f098dddde7f217879070816090c1e8e74d49432")
                      (source
                       .
                       "https://pkg-sources.racket-lang.org/pkgs/empty.zip")
                      (source_url
                       .
                       "https://pkg-sources.racket-lang.org/pkgs/empty.zip")))
               ("5.3.6"
                .
                #hash((checksum . "9f098dddde7f217879070816090c1e8e74d49432")
                      (source
                       .
                       "https://pkg-sources.racket-lang.org/pkgs/empty.zip")
                      (source_url
                       .
                       "https://pkg-sources.racket-lang.org/pkgs/empty.zip")))))))
 ("draw-win32-x86_64-2"
  .
  #hash((author . "mflatt@racket-lang.org")
        (authors . ("mflatt@racket-lang.org"))
        (build
         .
         #hash((conflicts-log . #f)
               (dep-failure-log . #f)
               (docs . ())
               (failure-log . #f)
               (min-failure-log . #f)
               (success-log . #f)
               (test-failure-log . #f)
               (test-success-log . #f)))
        (checksum . "c6c2edb3e086033e24a8121d85675f1bc11b7705")
        (checksum-error . #f)
        (conflicts . ())
        (dependencies . ("base"))
        (dependency-names . ("base"))
        (description . "native libraries for \"draw\" package")
        (implies . ())
        (last-checked . 1557339537)
        (last-edit . 1452304685)
        (last-updated . 1502815924)
        (modules . ())
        (name . "draw-win32-x86_64-2")
        (ring . 0)
        (search-terms
         .
         #hasheq((author:mflatt@racket-lang.org . #t)
                 (main-distribution . #t)
                 (ring:0 . #t)))
        (source
         .
         "https://pkg-sources.racket-lang.org/pkgs/c6c2edb3e086033e24a8121d85675f1bc11b7705/draw-win32-x86_64-2.zip")
        (tags . ("main-distribution"))
        (versions
         .
         #hash((default
                .
                #hasheq((checksum
                         .
                         "c6c2edb3e086033e24a8121d85675f1bc11b7705")
                        (source
                         .
                         "https://pkg-sources.racket-lang.org/pkgs/c6c2edb3e086033e24a8121d85675f1bc11b7705/draw-win32-x86_64-2.zip")
                        (source_url
                         .
                         "https://pkg-sources.racket-lang.org/pkgs/c6c2edb3e086033e24a8121d85675f1bc11b7705/draw-win32-x86_64-2.zip")))
               ("5.3.4"
                .
                #hash((checksum . "9f098dddde7f217879070816090c1e8e74d49432")
                      (source
                       .
                       "https://pkg-sources.racket-lang.org/pkgs/empty.zip")
                      (source_url
                       .
                       "https://pkg-sources.racket-lang.org/pkgs/empty.zip")))
               ("5.3.5"
                .
                #hash((checksum . "9f098dddde7f217879070816090c1e8e74d49432")
                      (source
                       .
                       "https://pkg-sources.racket-lang.org/pkgs/empty.zip")
                      (source_url
                       .
                       "https://pkg-sources.racket-lang.org/pkgs/empty.zip")))
               ("5.3.6"
                .
                #hash((checksum . "9f098dddde7f217879070816090c1e8e74d49432")
                      (source
                       .
                       "https://pkg-sources.racket-lang.org/pkgs/empty.zip")
                      (source_url
                       .
                       "https://pkg-sources.racket-lang.org/pkgs/empty.zip")))))))
 ("draw-win32-x86_64-3"
  .
  #hash((author . "mflatt@racket-lang.org")
        (checksum . "a8d57132b627cf2e567ab4c02a5e5210721e612a")
        (dependencies . ("base"))
        (dependency-names . ("base"))
        (description . "mflatt@racket-lang.org")
        (modules . ())
        (name . "draw-win32-x86_64-3")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/draw-win32-x86_64-3.zip")
        (tags . ())))
 ("draw-x11-x86_64-linux-natipkg"
  .
  #hash((author . "mflatt@racket-lang.org")
        (checksum . "657515bd2ad799243cdb536ca3c6b75736db8d1a")
        (dependencies . ("base"))
        (dependency-names . ("base"))
        (description . "mflatt@racket-lang.org")
        (modules . ())
        (name . "draw-x11-x86_64-linux-natipkg")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/draw-x11-x86_64-linux-natipkg.zip")
        (tags . ())))
 ("draw-x86_64-linux-natipkg-2"
  .
  #hash((author . "mflatt@racket-lang.org")
        (authors . ("mflatt@racket-lang.org"))
        (build
         .
         #hash((conflicts-log . #f)
               (dep-failure-log . #f)
               (docs . ())
               (failure-log . #f)
               (min-failure-log . #f)
               (success-log . #f)
               (test-failure-log . #f)
               (test-success-log . #f)))
        (checksum . "bbbbcdc28aa69e11c7d7796d6796f34acf48b8e9")
        (checksum-error . #f)
        (conflicts . ())
        (dependencies . ("base"))
        (dependency-names . ("base"))
        (description . "native libraries for \"draw\" package")
        (implies . ())
        (last-checked . 1557339538)
        (last-edit . 1452304685)
        (last-updated . 1502815927)
        (modules . ())
        (name . "draw-x86_64-linux-natipkg-2")
        (ring . 0)
        (search-terms
         .
         #hasheq((author:mflatt@racket-lang.org . #t)
                 (main-distribution . #t)
                 (ring:0 . #t)))
        (source
         .
         "https://pkg-sources.racket-lang.org/pkgs/bbbbcdc28aa69e11c7d7796d6796f34acf48b8e9/draw-x86_64-linux-natipkg-2.zip")
        (tags . ("main-distribution"))
        (versions
         .
         #hash((default
                .
                #hasheq((checksum
                         .
                         "bbbbcdc28aa69e11c7d7796d6796f34acf48b8e9")
                        (source
                         .
                         "https://pkg-sources.racket-lang.org/pkgs/bbbbcdc28aa69e11c7d7796d6796f34acf48b8e9/draw-x86_64-linux-natipkg-2.zip")
                        (source_url
                         .
                         "https://pkg-sources.racket-lang.org/pkgs/bbbbcdc28aa69e11c7d7796d6796f34acf48b8e9/draw-x86_64-linux-natipkg-2.zip")))
               ("5.3.4"
                .
                #hash((checksum . "9f098dddde7f217879070816090c1e8e74d49432")
                      (source
                       .
                       "https://pkg-sources.racket-lang.org/pkgs/empty.zip")
                      (source_url
                       .
                       "https://pkg-sources.racket-lang.org/pkgs/empty.zip")))
               ("5.3.5"
                .
                #hash((checksum . "9f098dddde7f217879070816090c1e8e74d49432")
                      (source
                       .
                       "https://pkg-sources.racket-lang.org/pkgs/empty.zip")
                      (source_url
                       .
                       "https://pkg-sources.racket-lang.org/pkgs/empty.zip")))
               ("5.3.6"
                .
                #hash((checksum . "9f098dddde7f217879070816090c1e8e74d49432")
                      (source
                       .
                       "https://pkg-sources.racket-lang.org/pkgs/empty.zip")
                      (source_url
                       .
                       "https://pkg-sources.racket-lang.org/pkgs/empty.zip")))))))
 ("draw-x86_64-linux-natipkg-3"
  .
  #hash((author . "mflatt@racket-lang.org")
        (checksum . "34248fcab9228ada34d46867f88c8288c6442fe5")
        (dependencies . ("base"))
        (dependency-names . ("base"))
        (description . "mflatt@racket-lang.org")
        (modules . ())
        (name . "draw-x86_64-linux-natipkg-3")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/draw-x86_64-linux-natipkg-3.zip")
        (tags . ())))
 ("draw-x86_64-macosx"
  .
  #hash((author . "mflatt@racket-lang.org")
        (authors . ("mflatt@racket-lang.org"))
        (build
         .
         #hash((conflicts-log . #f)
               (dep-failure-log . #f)
               (docs . ())
               (failure-log . #f)
               (min-failure-log . #f)
               (success-log . #f)
               (test-failure-log . #f)
               (test-success-log . #f)))
        (checksum . "d47568a60e3e12793f2c49b322ad49c2a8ec8d26")
        (checksum-error . #f)
        (conflicts . ())
        (dependencies . ("base"))
        (dependency-names . ("base"))
        (description . "native libraries for \"draw\" package")
        (implies . ())
        (last-checked . 1557339539)
        (last-edit . 1452304685)
        (last-updated . 1502815928)
        (modules . ())
        (name . "draw-x86_64-macosx")
        (ring . 0)
        (search-terms
         .
         #hasheq((:no-tag: . #t)
                 (author:mflatt@racket-lang.org . #t)
                 (ring:0 . #t)))
        (source
         .
         "https://pkg-sources.racket-lang.org/pkgs/d47568a60e3e12793f2c49b322ad49c2a8ec8d26/draw-x86_64-macosx.zip")
        (tags . ())
        (versions
         .
         #hash((default
                .
                #hasheq((checksum
                         .
                         "d47568a60e3e12793f2c49b322ad49c2a8ec8d26")
                        (source
                         .
                         "https://pkg-sources.racket-lang.org/pkgs/d47568a60e3e12793f2c49b322ad49c2a8ec8d26/draw-x86_64-macosx.zip")
                        (source_url
                         .
                         "https://pkg-sources.racket-lang.org/pkgs/d47568a60e3e12793f2c49b322ad49c2a8ec8d26/draw-x86_64-macosx.zip")))
               ("5.3.4"
                .
                #hash((checksum . "9f098dddde7f217879070816090c1e8e74d49432")
                      (source
                       .
                       "https://pkg-sources.racket-lang.org/pkgs/empty.zip")
                      (source_url
                       .
                       "https://pkg-sources.racket-lang.org/pkgs/empty.zip")))
               ("5.3.5"
                .
                #hash((checksum . "9f098dddde7f217879070816090c1e8e74d49432")
                      (source
                       .
                       "https://pkg-sources.racket-lang.org/pkgs/empty.zip")
                      (source_url
                       .
                       "https://pkg-sources.racket-lang.org/pkgs/empty.zip")))
               ("5.3.6"
                .
                #hash((checksum . "9f098dddde7f217879070816090c1e8e74d49432")
                      (source
                       .
                       "https://pkg-sources.racket-lang.org/pkgs/empty.zip")
                      (source_url
                       .
                       "https://pkg-sources.racket-lang.org/pkgs/empty.zip")))))))
 ("draw-x86_64-macosx-2"
  .
  #hash((author . "mflatt@racket-lang.org")
        (authors . ("mflatt@racket-lang.org"))
        (build
         .
         #hash((conflicts-log . #f)
               (dep-failure-log . #f)
               (docs . ())
               (failure-log . #f)
               (min-failure-log . #f)
               (success-log . #f)
               (test-failure-log . #f)
               (test-success-log . #f)))
        (checksum . "552725bedd421a4c9979c639b5082ea0352f9ee6")
        (checksum-error . #f)
        (conflicts . ())
        (dependencies . ("base"))
        (dependency-names . ("base"))
        (description . "native libraries for \"draw\" package")
        (implies . ())
        (last-checked . 1557339540)
        (last-edit . 1452304685)
        (last-updated . 1502815930)
        (modules . ())
        (name . "draw-x86_64-macosx-2")
        (ring . 0)
        (search-terms
         .
         #hasheq((author:mflatt@racket-lang.org . #t)
                 (main-distribution . #t)
                 (ring:0 . #t)))
        (source
         .
         "https://pkg-sources.racket-lang.org/pkgs/552725bedd421a4c9979c639b5082ea0352f9ee6/draw-x86_64-macosx-2.zip")
        (tags . ("main-distribution"))
        (versions
         .
         #hash((default
                .
                #hasheq((checksum
                         .
                         "552725bedd421a4c9979c639b5082ea0352f9ee6")
                        (source
                         .
                         "https://pkg-sources.racket-lang.org/pkgs/552725bedd421a4c9979c639b5082ea0352f9ee6/draw-x86_64-macosx-2.zip")
                        (source_url
                         .
                         "https://pkg-sources.racket-lang.org/pkgs/552725bedd421a4c9979c639b5082ea0352f9ee6/draw-x86_64-macosx-2.zip")))
               ("5.3.4"
                .
                #hash((checksum . "9f098dddde7f217879070816090c1e8e74d49432")
                      (source
                       .
                       "https://pkg-sources.racket-lang.org/pkgs/empty.zip")
                      (source_url
                       .
                       "https://pkg-sources.racket-lang.org/pkgs/empty.zip")))
               ("5.3.5"
                .
                #hash((checksum . "9f098dddde7f217879070816090c1e8e74d49432")
                      (source
                       .
                       "https://pkg-sources.racket-lang.org/pkgs/empty.zip")
                      (source_url
                       .
                       "https://pkg-sources.racket-lang.org/pkgs/empty.zip")))
               ("5.3.6"
                .
                #hash((checksum . "9f098dddde7f217879070816090c1e8e74d49432")
                      (source
                       .
                       "https://pkg-sources.racket-lang.org/pkgs/empty.zip")
                      (source_url
                       .
                       "https://pkg-sources.racket-lang.org/pkgs/empty.zip")))))))
 ("draw-x86_64-macosx-3"
  .
  #hash((author . "mflatt@racket-lang.org")
        (checksum . "d40fc3423605c43a63946f7ccb10c594c0eb72a6")
        (dependencies . ("base"))
        (dependency-names . ("base"))
        (description . "mflatt@racket-lang.org")
        (modules . ())
        (name . "draw-x86_64-macosx-3")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/draw-x86_64-macosx-3.zip")
        (tags . ())))
 ("drbayes"
  .
  #hasheq((author . "neil.toronto@gmail.com")
          (authors . ("neil.toronto@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . "server/built/fail/drbayes.txt")
                 (min-failure-log . #f)
                 (success-log . #f)
                 (test-failure-log . #f)
                 (test-success-log . #f)))
          (checksum . "e59eb7c7867118bf4c77ca903e133c7530e612a3")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "typed-racket-lib"
            "typed-racket-more"
            "math-lib"
            "images-lib"
            "plot-gui-lib"
            "plot-lib"
            "profile-lib"))
          (dependency-names
           .
           ("base"
            "typed-racket-lib"
            "typed-racket-more"
            "math-lib"
            "images-lib"
            "plot-gui-lib"
            "plot-lib"
            "profile-lib"))
          (description . "Probabilistic programming language")
          (implies . ())
          (last-checked . 1557339542)
          (last-edit . 1423766206)
          (last-updated . 1502815931)
          (modules
           .
           ((lib "drbayes/private/flonum/directed-rounding.rkt")
            (lib "drbayes/private/search.rkt")
            (lib "drbayes/direct/exact-semantics/map-arrow.rkt")
            (lib "drbayes/direct/exact-semantics/fun-arrow.rkt")
            (lib "drbayes/tests/random-sets/random-set.rkt")
            (lib "drbayes/direct/types.rkt")
            (lib "drbayes/tests/random-sets/random-null-set.rkt")
            (lib "drbayes/private/set/store.rkt")
            (lib "drbayes/private/bigfloat/symmetric-log.rkt")
            (lib "drbayes/private/set.rkt")
            (lib "drbayes/private/set/store-set.rkt")
            (lib "drbayes/tests/random-sets/random-prob-set.rkt")
            (lib "drbayes/main.rkt")
            (lib "drbayes/private/search/search-tree.rkt")
            (lib "drbayes/private/set/ordered-set.rkt")
            (lib "drbayes/tests/set-tests/real-set-tests.rkt")
            (lib "drbayes/private/arrow/pure-lifts/bijection.rkt")
            (lib "drbayes/private/arrow/pure-lifts.rkt")
            (lib "drbayes/private/language/macros.rkt")
            (lib "drbayes/tests/language-tests/normal-normal.rkt")
            (lib "drbayes/private/arrow/meaning.rkt")
            (lib "drbayes/direct/exact-semantics/branch-trace.rkt")
            (lib "drbayes/direct/scratch/store-split.rkt")
            (lib "drbayes/private/arrow/pure-lifts/rounding-lifts.rkt")
            (lib "drbayes/private/arrow/pure-lifts/trijection.rkt")
            (lib "drbayes/private/search/refinement-sample.rkt")
            (lib "drbayes/direct/exact-semantics/partial-arrows-plus.rkt")
            (lib "drbayes/tests/real-tests/bijection-tests.rkt")
            (lib "drbayes/direct/exact-semantics/preimage-mapping.rkt")
            (lib "drbayes/private/set/integer-set.rkt")
            (lib "drbayes/private/search/sample.rkt")
            (lib "drbayes/private/set/types.rkt")
            (lib "drbayes/private/arrow/prob-arrows.rkt")
            (lib "drbayes/tests/random-sets/random-symbol-set.rkt")
            (lib "drbayes/tests/flonum-tests/log-random-tests.rkt")
            (lib "drbayes/private/arrow/cache.rkt")
            (lib "drbayes/private/arrow/pure-lifts/predicate-lifts.rkt")
            (lib "drbayes/tests/real-tests/trijection-tests.rkt")
            (lib "drbayes/tests/set-tests/set-algebra-properties.rkt")
            (lib "drbayes/tests/language-tests/ray-tracing.rkt")
            (lib "drbayes/tests/real-tests/utils.rkt")
            (lib "drbayes/private/arrow/pure-lifts/make-predicate-lift.rkt")
            (lib "drbayes/private/search/enumerate.rkt")
            (lib "drbayes/tests/set-tests/bool-set-tests.rkt")
            (lib "drbayes/private/arrow/pure-lifts/comparison-lifts.rkt")
            (lib "drbayes/tests/set-tests/prob-set-tests.rkt")
            (lib "drbayes/private/arrow/parameters.rkt")
            (lib "drbayes/private/arrow/pure-lifts/make-real-lift.rkt")
            (lib "drbayes/tests/set-tests/set-tests.rkt")
            (lib "drbayes/tests/set-tests/symbol-set-tests.rkt")
            (lib "drbayes/private/arrow/pure-arrows.rkt")
            (lib "drbayes/private/arrow/pure-lifts/prob-lifts.rkt")
            (lib "drbayes/private/arrow.rkt")
            (lib "drbayes/private/arrow/prob-lifts.rkt")
            (lib "drbayes/private/set/bool-set.rkt")
            (lib "drbayes/direct/racket-impl/pre-mapping.rkt")
            (lib "drbayes/tests/set-tests/null-set-tests.rkt")
            (lib "drbayes/tests/arrow-tests/real-function-tests.rkt")
            (lib "drbayes/private/bigfloat/directed-rounding.rkt")
            (lib "drbayes/private/flonum/probability.rkt")
            (lib "drbayes/private/search/split.rkt")
            (lib "drbayes/private/set/bottom.rkt")
            (lib "drbayes/direct/exact-semantics/tests.rkt")
            (lib "drbayes/direct/exact-semantics/partial-arrows.rkt")
            (lib "drbayes/private/search/types.rkt")
            (lib "drbayes/tests/set-tests/pair-set-tests.rkt")
            (lib "drbayes/private/set/null-set.rkt")
            (lib "drbayes/tests/random-sets/random-bool-set.rkt")
            (lib "drbayes/private/arrow/refine.rkt")
            (lib "drbayes/private/set/union.rkt")
            (lib "drbayes/direct/exact-semantics/set-ops.rkt")
            (lib
             "drbayes/tests/language-tests/probability-bounds-tests/normal-normal-query.rkt")
            (lib "drbayes/private/flonum.rkt")
            (lib
             "drbayes/tests/language-tests/probability-bounds-tests/normal-normal-cond-query.rkt")
            (lib "drbayes/private/set/extremal-set.rkt")
            (lib "drbayes/private/set/value.rkt")
            (lib "drbayes/private/language/parameterized-expansion.rkt")
            (lib "drbayes/private/arrow/types.rkt")
            (lib "drbayes/private/set/real-set.rkt")
            (lib "drbayes/private/language/functions.rkt")
            (lib "drbayes/private/arrow/pure-lifts/real-lifts.rkt")
            (lib "drbayes/direct/exact-semantics/semantic-function.rkt")
            (lib "drbayes/private/bigfloat.rkt")
            (lib "drbayes/tests/set-tests/integer-set-tests.rkt")
            (lib "drbayes/private/set/symbol-set.rkt")
            (lib "drbayes/private/search/parameters.rkt")
            (lib "drbayes/direct/racket-impl/pre-star-arrow.rkt")
            (lib "drbayes/private/set/union-more-ops.rkt")
            (lib "drbayes/direct/exact-semantics/bot-arrow.rkt")
            (lib "drbayes/private/flonum/flops.rkt")
            (lib "drbayes/private/language/drbayes-dispatcher.rkt")
            (lib "drbayes/direct/racket-impl/set.rkt")
            (lib "drbayes/tests/set-tests/set-properties.rkt")
            (lib "drbayes/private/arrow/pure-lifts/equal-lifts.rkt")
            (lib "drbayes/direct/exact-semantics/mapping.rkt")
            (lib "drbayes/direct/exact-semantics/pre-arrow.rkt")
            (lib "drbayes/private/arrow/pure-lifts/tag-lifts.rkt")
            (lib "drbayes/tests/arrow-tests/arrow-tests.rkt")
            (lib
             "drbayes/tests/language-tests/flonum-accuracy/abstract-float.rkt")
            (lib "drbayes/private/utils.rkt")
            (lib "drbayes/tests/flonum-tests/symmetric-log-tests.rkt")
            (lib "drbayes/tests/set-tests/set-lattice-properties.rkt")
            (lib "drbayes/private/set/parameters.rkt")
            (lib "drbayes/private/arrow/pure-lifts/make-prob-lift.rkt")
            (lib "drbayes/tests/language-tests/need-for-strict-if.rkt")
            (lib "drbayes/private/untyped-utils.rkt")
            (lib "drbayes/direct/racket-impl/pre-arrow.rkt")
            (lib "drbayes/private/search/utils.rkt")
            (lib "drbayes/private/arrow/indexes.rkt")
            (lib "drbayes/private/arrow/proc-arrow.rkt")
            (lib "drbayes/direct/untyped-utils.rkt")
            (lib "drbayes/tests/random-sets/random-real-set.rkt")
            (lib "drbayes/tests/test-utils.rkt")
            (lib "drbayes/tests/set-tests/set-membership-properties.rkt")
            (lib "drbayes/tests/random-sets/random-integer-set.rkt")
            (lib "drbayes/tests/language-tests/probabilistic-grammar.rkt")
            (lib "drbayes/private/set/store-index.rkt")
            (lib "drbayes/tests/set-tests/store-set-tests.rkt")
            (lib "drbayes/tests/language-tests/tests.rkt")
            (lib "drbayes/private/search/refinement-search.rkt")
            (lib "drbayes/private/set/prob-set.rkt")
            (lib "drbayes/private/language.rkt")
            (lib "drbayes/tests/random-sets/random-store-set.rkt")
            (lib
             "drbayes/tests/language-tests/build-it-break-it/build-it-break-it.rkt")
            (lib "drbayes/private/flonum/symmetric-log.rkt")
            (lib
             "drbayes/tests/language-tests/build-it-break-it/gamma-beta.rkt")
            (lib "drbayes/private/set/union-ops.rkt")
            (lib "drbayes/private/flonum/utils.rkt")
            (lib "drbayes/private/arrow/preimage-mapping.rkt")
            (lib
             "drbayes/tests/language-tests/flonum-accuracy/geometric-inv-cdf.rkt")))
          (name . "drbayes")
          (nix-sha256
           .
           "1b9rzs42vsclppg23iw1x1s28l0558ai3v48gs6sh6mqzgzhdfkk")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-fail: . #t)
                   (author:neil.toronto@gmail.com . #t)
                   (bayesian . #t)
                   (language . #t)
                   (probability . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/ntoronto/drbayes")
          (tags . ("bayesian" "language" "probability"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "e59eb7c7867118bf4c77ca903e133c7530e612a3")
                          (source . "git://github.com/ntoronto/drbayes")
                          (source_url
                           .
                           "http://github.com/ntoronto/drbayes/tree/master")))))))
 ("drcomplete"
  .
  #hasheq((author . "yj_qww6@126.com")
          (authors . ("yj_qww6@126.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/drcomplete.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/drcomplete.txt")))
          (checksum . "dff5ba6b37be40a54da88fdc077603a5c822df49")
          (checksum-error . #f)
          (conflicts . ())
          (date-added . 1551770937)
          (dependencies
           .
           ("drcomplete-filename"
            "drcomplete-required"
            "drcomplete-user-defined"
            "drcomplete-module"
            "drcomplete-auto"))
          (dependency-names
           .
           ("drcomplete-filename"
            "drcomplete-required"
            "drcomplete-user-defined"
            "drcomplete-module"
            "drcomplete-auto"))
          (description . "The package assembles drcomplete plugins")
          (implies . ())
          (last-checked . 1557339542)
          (last-edit . 1551770937)
          (last-updated . 1555387400)
          (modules . ())
          (name . "drcomplete")
          (nix-sha256
           .
           "0mqcjrnmlrj5ld100rink024sdys746531p3cnycxaamfwfhsnzg")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (DrRacket . #t)
                   (author:yj_qww6@126.com . #t)
                   (ring:2 . #t)))
          (source
           .
           "https://github.com/yjqww6/drcomplete.git?path=drcomplete")
          (tags . ("DrRacket"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "dff5ba6b37be40a54da88fdc077603a5c822df49")
                          (source
                           .
                           "https://github.com/yjqww6/drcomplete.git?path=drcomplete")
                          (source_url
                           .
                           "https://github.com/yjqww6/drcomplete.git?path=drcomplete")))))))
 ("drcomplete-auto"
  .
  #hasheq((author . "yj_qww6@126.com 1227847322@qq.com")
          (authors . ("yj_qww6@126.com" "1227847322@qq.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/drcomplete-auto.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/drcomplete-auto.txt")))
          (checksum . "dff5ba6b37be40a54da88fdc077603a5c822df49")
          (checksum-error . #f)
          (conflicts . ())
          (date-added . 1553154543)
          (dependencies . ("base" "gui-lib" "drracket-plugin-lib" "drracket"))
          (dependency-names
           .
           ("base" "gui-lib" "drracket-plugin-lib" "drracket"))
          (description . "automatic triggering of autocompletion")
          (implies . ())
          (last-checked . 1557339542)
          (last-edit . 1553154543)
          (last-updated . 1555387400)
          (modules . ((lib "drcomplete-auto/tool.rkt")))
          (name . "drcomplete-auto")
          (nix-sha256
           .
           "0mqcjrnmlrj5ld100rink024sdys746531p3cnycxaamfwfhsnzg")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (DrRacket . #t)
                   (author:1227847322@qq.com . #t)
                   (author:yj_qww6@126.com . #t)
                   (ring:2 . #t)))
          (source
           .
           "https://github.com/yjqww6/drcomplete.git?path=drcomplete-auto")
          (tags . ("DrRacket"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "dff5ba6b37be40a54da88fdc077603a5c822df49")
                          (source
                           .
                           "https://github.com/yjqww6/drcomplete.git?path=drcomplete-auto")
                          (source_url
                           .
                           "https://github.com/yjqww6/drcomplete.git?path=drcomplete-auto")))))))
 ("drcomplete-base"
  .
  #hasheq((author . "yj_qww6@126.com")
          (authors . ("yj_qww6@126.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/drcomplete-base.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/drcomplete-base.txt")))
          (checksum . "dff5ba6b37be40a54da88fdc077603a5c822df49")
          (checksum-error . #f)
          (conflicts . ())
          (date-added . 1555386683)
          (dependencies
           .
           ("base" "drracket" "drracket-plugin-lib" "gui-lib" "rackunit-lib"))
          (dependency-names
           .
           ("base" "drracket" "drracket-plugin-lib" "gui-lib" "rackunit-lib"))
          (description . "basic framework for drcomplete")
          (implies . ())
          (last-checked . 1557339542)
          (last-edit . 1555386683)
          (last-updated . 1555386683)
          (modules
           .
           ((lib "drcomplete-base/main.rkt")
            (lib "drcomplete-base/tool.rkt")))
          (name . "drcomplete-base")
          (nix-sha256
           .
           "0mqcjrnmlrj5ld100rink024sdys746531p3cnycxaamfwfhsnzg")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (DrRacket . #t)
                   (author:yj_qww6@126.com . #t)
                   (ring:2 . #t)))
          (source
           .
           "https://github.com/yjqww6/drcomplete.git?path=drcomplete-base")
          (tags . ("DrRacket"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "dff5ba6b37be40a54da88fdc077603a5c822df49")
                          (source
                           .
                           "https://github.com/yjqww6/drcomplete.git?path=drcomplete-base")
                          (source_url
                           .
                           "https://github.com/yjqww6/drcomplete.git?path=drcomplete-base")))))))
 ("drcomplete-filename"
  .
  #hasheq((author . "yj_qww6@126.com")
          (authors . ("yj_qww6@126.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log
                  .
                  "server/built/install/drcomplete-filename.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/drcomplete-filename.txt")))
          (checksum . "dff5ba6b37be40a54da88fdc077603a5c822df49")
          (checksum-error . #f)
          (conflicts . ())
          (date-added . 1551249678)
          (dependencies
           .
           ("base"
            "drracket"
            "drracket-plugin-lib"
            "gui-lib"
            "srfi-lib"
            "drcomplete-base"))
          (dependency-names
           .
           ("base"
            "drracket"
            "drracket-plugin-lib"
            "gui-lib"
            "srfi-lib"
            "drcomplete-base"))
          (description
           .
           "A DrRacket plugin for autocomplete for filenames, only active inside string.")
          (implies . ())
          (last-checked . 1557339542)
          (last-edit . 1551770777)
          (last-updated . 1555387401)
          (modules
           .
           ((lib "drcomplete-filename/interface.rkt")
            (lib "drcomplete-filename/tool.rkt")
            (lib "drcomplete-filename/private/main.rkt")))
          (name . "drcomplete-filename")
          (nix-sha256
           .
           "0mqcjrnmlrj5ld100rink024sdys746531p3cnycxaamfwfhsnzg")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (DrRacket . #t)
                   (author:yj_qww6@126.com . #t)
                   (ring:2 . #t)))
          (source
           .
           "https://github.com/yjqww6/drcomplete.git?path=drcomplete-filename")
          (tags . ("DrRacket"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "dff5ba6b37be40a54da88fdc077603a5c822df49")
                          (source
                           .
                           "https://github.com/yjqww6/drcomplete.git?path=drcomplete-filename")
                          (source_url
                           .
                           "https://github.com/yjqww6/drcomplete.git?path=drcomplete-filename")))))))
 ("drcomplete-module"
  .
  #hasheq((author . "yj_qww6@126.com")
          (authors . ("yj_qww6@126.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/drcomplete-module.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/drcomplete-module.txt")))
          (checksum . "dff5ba6b37be40a54da88fdc077603a5c822df49")
          (checksum-error . #f)
          (conflicts . ())
          (date-added . 1552030077)
          (dependencies
           .
           ("base"
            "drracket"
            "drracket-plugin-lib"
            "gui-lib"
            "drcomplete-base"))
          (dependency-names
           .
           ("base"
            "drracket"
            "drracket-plugin-lib"
            "gui-lib"
            "drcomplete-base"))
          (description . "autocomplete for modules")
          (implies . ())
          (last-checked . 1557339542)
          (last-edit . 1552030077)
          (last-updated . 1555387401)
          (modules
           .
           ((lib "drcomplete-module/tool.rkt")
            (lib "drcomplete-module/private/main.rkt")))
          (name . "drcomplete-module")
          (nix-sha256
           .
           "0mqcjrnmlrj5ld100rink024sdys746531p3cnycxaamfwfhsnzg")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (DrRacket . #t)
                   (author:yj_qww6@126.com . #t)
                   (ring:2 . #t)))
          (source
           .
           "https://github.com/yjqww6/drcomplete.git?path=drcomplete-module")
          (tags . ("DrRacket"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "dff5ba6b37be40a54da88fdc077603a5c822df49")
                          (source
                           .
                           "https://github.com/yjqww6/drcomplete.git?path=drcomplete-module")
                          (source_url
                           .
                           "https://github.com/yjqww6/drcomplete.git?path=drcomplete-module")))))))
 ("drcomplete-required"
  .
  #hasheq((author . "yj_qww6@126.com")
          (authors . ("yj_qww6@126.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log
                  .
                  "server/built/install/drcomplete-required.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/drcomplete-required.txt")))
          (checksum . "dff5ba6b37be40a54da88fdc077603a5c822df49")
          (checksum-error . #f)
          (conflicts . ())
          (date-added . 1551627861)
          (dependencies
           .
           ("base"
            "drracket"
            "drracket-plugin-lib"
            "gui-lib"
            "srfi-lib"
            "drcomplete-base"
            "rackunit-lib"))
          (dependency-names
           .
           ("base"
            "drracket"
            "drracket-plugin-lib"
            "gui-lib"
            "srfi-lib"
            "drcomplete-base"
            "rackunit-lib"))
          (description
           .
           "A DrRacket plugin for autocomplete for required identifiers.")
          (implies . ())
          (last-checked . 1557339542)
          (last-edit . 1551770827)
          (last-updated . 1555387401)
          (modules
           .
           ((lib "drcomplete-required/tests/test.rkt")
            (lib "drcomplete-required/private/expansion.rkt")
            (lib "drcomplete-required/tool.rkt")
            (lib "drcomplete-required/private/walk.rkt")))
          (name . "drcomplete-required")
          (nix-sha256
           .
           "0mqcjrnmlrj5ld100rink024sdys746531p3cnycxaamfwfhsnzg")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (DrRacket . #t)
                   (author:yj_qww6@126.com . #t)
                   (ring:2 . #t)))
          (source
           .
           "https://github.com/yjqww6/drcomplete.git?path=drcomplete-required")
          (tags . ("DrRacket"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "dff5ba6b37be40a54da88fdc077603a5c822df49")
                          (source
                           .
                           "https://github.com/yjqww6/drcomplete.git?path=drcomplete-required")
                          (source_url
                           .
                           "https://github.com/yjqww6/drcomplete.git?path=drcomplete-required")))))))
 ("drcomplete-user-defined"
  .
  #hasheq((author . "yj_qww6@126.com")
          (authors . ("yj_qww6@126.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log
                  .
                  "server/built/install/drcomplete-user-defined.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/drcomplete-user-defined.txt")))
          (checksum . "dff5ba6b37be40a54da88fdc077603a5c822df49")
          (checksum-error . #f)
          (conflicts . ())
          (date-added . 1551450799)
          (dependencies
           .
           ("base"
            "drracket"
            "drracket-plugin-lib"
            "gui-lib"
            "syntax-color-lib"
            "drcomplete-base"
            "rackunit-lib"))
          (dependency-names
           .
           ("base"
            "drracket"
            "drracket-plugin-lib"
            "gui-lib"
            "syntax-color-lib"
            "drcomplete-base"
            "rackunit-lib"))
          (description
           .
           "A DrRacket plugin for autocomplete for user-defined identifiers.")
          (implies . ())
          (last-checked . 1557339542)
          (last-edit . 1551770864)
          (last-updated . 1555387401)
          (modules
           .
           ((lib "drcomplete-user-defined/private/expansion.rkt")
            (lib "drcomplete-user-defined/private/main.rkt")
            (lib "drcomplete-user-defined/tests/test.rkt")
            (lib "drcomplete-user-defined/tool.rkt")))
          (name . "drcomplete-user-defined")
          (nix-sha256
           .
           "0mqcjrnmlrj5ld100rink024sdys746531p3cnycxaamfwfhsnzg")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (DrRacket . #t)
                   (author:yj_qww6@126.com . #t)
                   (ring:2 . #t)))
          (source
           .
           "https://github.com/yjqww6/drcomplete.git?path=drcomplete-user-defined")
          (tags . ("DrRacket"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "dff5ba6b37be40a54da88fdc077603a5c822df49")
                          (source
                           .
                           "https://github.com/yjqww6/drcomplete.git?path=drcomplete-user-defined")
                          (source_url
                           .
                           "https://github.com/yjqww6/drcomplete.git?path=drcomplete-user-defined")))))))
 ("drdr"
  .
  #hash((author . "jay@racket-lang.org")
        (authors . ("jay@racket-lang.org"))
        (build
         .
         #hash((conflicts-log . #f)
               (dep-failure-log . #f)
               (docs . ())
               (failure-log . #f)
               (min-failure-log . #f)
               (success-log . "server/built/install/drdr.txt")
               (test-failure-log . #f)
               (test-success-log . "server/built/test-success/drdr.txt")))
        (checksum . "8157e07c9bfdf9a2e38b8ec1dd1f4f1837b5979b")
        (checksum-error . #f)
        (conflicts . ())
        (dependencies
         .
         ("base"
          "eli-tester"
          "net-lib"
          "web-server-lib"
          "web-server-test"
          "job-queue-lib"
          "at-exp-lib"
          "scheme-lib"
          "scribble-lib"))
        (dependency-names
         .
         ("base"
          "eli-tester"
          "net-lib"
          "web-server-lib"
          "web-server-test"
          "job-queue-lib"
          "at-exp-lib"
          "scheme-lib"
          "scribble-lib"))
        (description . "DrDr, Racket's continuous integration system")
        (implies . ())
        (last-checked . 1557339542)
        (last-edit . 1417307461)
        (last-updated . 1548016771)
        (modules
         .
         ((lib "drdr/plt-build.rkt")
          (lib "drdr/status-analyze.rkt")
          (lib "drdr/metadata.rkt")
          (lib "drdr/analyze.rkt")
          (lib "drdr/monitor-scm.rkt")
          (lib "drdr/time.rkt")
          (lib "drdr/rewriting.rkt")
          (lib "drdr/make-archive.rkt")
          (lib "drdr/diffcmd.rkt")
          (lib "drdr/diff.rkt")
          (lib "drdr/svn.rkt")
          (lib "drdr/tests/run-collect.rkt")
          (lib "drdr/formats.rkt")
          (lib "drdr/job-queue.rkt")
          (lib "drdr/retry.rkt")
          (lib "drdr/scm.rkt")
          (lib "drdr/cache.rkt")
          (lib "drdr/cc.rkt")
          (lib "drdr/main.rkt")
          (lib "drdr/status.rkt")
          (lib "drdr/set-browser.rkt")
          (lib "drdr/archive-repair.rkt")
          (lib "drdr/time-check.rkt")
          (lib "drdr/rendering.rkt")
          (lib "drdr/tests/loud.rkt")
          (lib "drdr/gather-logs.rkt")
          (lib "drdr/dirstruct.rkt")
          (lib "drdr/archive.rkt")
          (lib "drdr/make-archive-lib.rkt")
          (lib "drdr/path-utils.rkt")
          (lib "drdr/notify.rkt")
          (lib "drdr/render.rkt")
          (lib "drdr/monitor-drdr.rkt")
          (lib "drdr/config.rkt")
          (lib "drdr/time-file.rkt")
          (lib "drdr/sema.rkt")
          (lib "drdr/list-count.rkt")
          (lib "drdr/replay.rkt")
          (lib "drdr/replay-log.rkt")
          (lib "drdr/archive-test.rkt")
          (lib "drdr/run-collect.rkt")))
        (name . "drdr")
        (nix-sha256 . "1r7b2nxnhxpxcmbcsr6mrb73shc1kzk4lly50098yqxxvvs42307")
        (ring . 1)
        (search-terms
         .
         #hasheq((:build-success: . #t)
                 (:no-tag: . #t)
                 (author:jay@racket-lang.org . #t)
                 (ring:1 . #t)))
        (source . "git://github.com/racket/drdr")
        (tags . ())
        (versions
         .
         #hash((default
                .
                #hasheq((checksum
                         .
                         "8157e07c9bfdf9a2e38b8ec1dd1f4f1837b5979b")
                        (source . "git://github.com/racket/drdr")
                        (source_url
                         .
                         "http://github.com/racket/drdr/tree/master")))))))
 ("drdr2"
  .
  #hash((author . "jay@racket-lang.org")
        (authors . ("jay@racket-lang.org"))
        (build
         .
         #hash((conflicts-log . #f)
               (dep-failure-log . #f)
               (docs . ())
               (failure-log . #f)
               (min-failure-log . #f)
               (success-log . "server/built/install/drdr2.txt")
               (test-failure-log . #f)
               (test-success-log . "server/built/test-success/drdr2.txt")))
        (checksum . "7c389ca7e886ae6b187430ec6dc52620957957c7")
        (checksum-error . #f)
        (conflicts . ())
        (dependencies
         .
         ("base" "compatibility-lib" "sandbox-lib" "eli-tester"))
        (dependency-names
         .
         ("base" "compatibility-lib" "sandbox-lib" "eli-tester"))
        (description . "Prototype replacement for DrDr")
        (implies . ())
        (last-checked . 1557339542)
        (last-edit . 1417307461)
        (last-updated . 1502815932)
        (modules
         .
         ((lib "drdr2/tests/slave.rkt")
          (lib "drdr2/monitor/monitor.rkt")
          (lib "drdr2/tests/db.rkt")
          (lib "drdr2/renderer/renderer.rkt")
          (lib "drdr2/analyzer/analyzer.rkt")
          (lib "drdr2/tests/pqueue.rkt")
          (lib "drdr2/monitor/scm.rkt")
          (lib "drdr2/lib/pqueue.rkt")
          (lib "drdr2/scheduler/scheduler.rkt")
          (lib "drdr2/master/master.rkt")
          (lib "drdr2/lib/scm.rkt")
          (lib "drdr2/slave/slave.rkt")
          (lib "drdr2/lib/db.rkt")))
        (name . "drdr2")
        (nix-sha256 . "0xa6q9xndr4724xb7n24gikl59rzhy0579x2km7h3iy4kiyijmwf")
        (ring . 1)
        (search-terms
         .
         #hasheq((:build-success: . #t)
                 (:no-tag: . #t)
                 (author:jay@racket-lang.org . #t)
                 (ring:1 . #t)))
        (source . "git://github.com/racket/drdr2")
        (tags . ())
        (versions
         .
         #hash((default
                .
                #hasheq((checksum
                         .
                         "7c389ca7e886ae6b187430ec6dc52620957957c7")
                        (source . "git://github.com/racket/drdr2")
                        (source_url
                         .
                         "http://github.com/racket/drdr2/tree/master")))))))
 ("dropbox"
  .
  #hasheq((author . "stchang@racket-lang.org")
          (authors . ("stchang@racket-lang.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "dropbox" "doc/dropbox@dropbox/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/dropbox.txt")
                 (test-failure-log . "server/built/test-fail/dropbox.txt")
                 (test-success-log . #f)))
          (checksum . "fc978c6c2feca00a74c4e5f9f7213a55585abe68")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "rackunit-lib" "racket-doc" "scribble-lib"))
          (dependency-names
           .
           ("base" "rackunit-lib" "racket-doc" "scribble-lib"))
          (description . "SDK for Dropbox")
          (implies . ())
          (last-checked . 1557339543)
          (last-edit . 1374792929)
          (last-updated . 1502815932)
          (modules
           .
           ((lib "dropbox/dropbox.scrbl")
            (lib "dropbox/dropbox.rkt")
            (lib "dropbox/tests.rkt")
            (lib "dropbox/main.rkt")))
          (name . "dropbox")
          (nix-sha256
           .
           "00bms50mivzllnm9xhqq9sn4zqmbz0pxl4ny2i14s0vbxd7zazsb")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (API . #t)
                   (author:stchang@racket-lang.org . #t)
                   (dropbox . #t)
                   (net . #t)
                   (ring:1 . #t)
                   (web . #t)))
          (source . "github://github.com/stchang/dropbox/master")
          (tags . ("API" "dropbox" "net" "web"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "fc978c6c2feca00a74c4e5f9f7213a55585abe68")
                          (source
                           .
                           "github://github.com/stchang/dropbox/master")
                          (source_url
                           .
                           "http://github.com/stchang/dropbox/tree/master")))))))
 ("drracket"
  .
  #hash((author . "robby@racket-lang.org")
        (checksum . "9f926cfeb988871c83e4d81479638da437c79ffa")
        (dependencies
         .
         ("scheme-lib"
          "data-lib"
          "compiler-lib"
          ("base" #:version "6.2.900.15")
          "planet-lib"
          "compatibility-lib"
          ("draw-lib" #:version "1.7")
          "errortrace-lib"
          "macro-debugger-text-lib"
          "parser-tools-lib"
          "pconvert-lib"
          "pict-lib"
          "profile-lib"
          "sandbox-lib"
          ("scribble-lib" #:version "1.11")
          ("snip-lib" #:version "1.2")
          ("string-constants-lib" #:version "1.19")
          "typed-racket-lib"
          "wxme-lib"
          ("gui-lib" #:version "1.35")
          ("racket-index" #:version "1.2")
          "racket-doc"
          "html-lib"
          "images-lib"
          ("icons" #:version "1.2")
          "typed-racket-more"
          "trace"
          ("macro-debugger" #:version "1.1")
          "net-lib"
          "tex-table"
          "htdp-lib"
          ("drracket-plugin-lib" #:version "1.1")
          "gui-pkg-manager-lib"
          "drracket-tool-lib"
          "drracket-tool-doc"
          "pict-snip-lib"
          "option-contract-lib"
          "syntax-color-lib"
          "quickscript"
          "mzscheme-doc"
          "net-doc"
          "planet-doc"
          "compatibility-doc"
          "string-constants-doc"
          "draw-doc"
          "errortrace-doc"
          "gui-doc"
          "pict-doc"
          "profile-doc"
          "r5rs-doc"
          "at-exp-lib"
          "rackunit-lib"))
        (dependency-names
         .
         ("scheme-lib"
          "data-lib"
          "compiler-lib"
          "base"
          "planet-lib"
          "compatibility-lib"
          "draw-lib"
          "errortrace-lib"
          "macro-debugger-text-lib"
          "parser-tools-lib"
          "pconvert-lib"
          "pict-lib"
          "profile-lib"
          "sandbox-lib"
          "scribble-lib"
          "snip-lib"
          "string-constants-lib"
          "typed-racket-lib"
          "wxme-lib"
          "gui-lib"
          "racket-index"
          "racket-doc"
          "html-lib"
          "images-lib"
          "icons"
          "typed-racket-more"
          "trace"
          "macro-debugger"
          "net-lib"
          "tex-table"
          "htdp-lib"
          "drracket-plugin-lib"
          "gui-pkg-manager-lib"
          "drracket-tool-lib"
          "drracket-tool-doc"
          "pict-snip-lib"
          "option-contract-lib"
          "syntax-color-lib"
          "quickscript"
          "mzscheme-doc"
          "net-doc"
          "planet-doc"
          "compatibility-doc"
          "string-constants-doc"
          "draw-doc"
          "errortrace-doc"
          "gui-doc"
          "pict-doc"
          "profile-doc"
          "r5rs-doc"
          "at-exp-lib"
          "rackunit-lib"))
        (description . "robby@racket-lang.org")
        (modules . ())
        (name . "drracket")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/drracket.zip")
        (tags . ())))
 ("drracket-ayu-mirage"
  .
  #hasheq((author . "oran.simhony@gmail.com")
          (authors . ("oran.simhony@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log
                  .
                  "server/built/install/drracket-ayu-mirage.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/drracket-ayu-mirage.txt")))
          (checksum . "5271740c3f0089e3958647353c24b73a3a80e401")
          (checksum-error . #f)
          (conflicts . ())
          (date-added . 1557150791)
          (dependencies . ("base"))
          (dependency-names . ("base"))
          (description . "🎨 An ayu mirage color scheme for DrRacket")
          (implies . ())
          (last-checked . 1557339543)
          (last-edit . 1557150791)
          (last-updated . 1557155898)
          (modules . ())
          (name . "drracket-ayu-mirage")
          (nix-sha256
           .
           "0jb8lv4dcby3mq8xv2vsigjs0q4jnb7gv35ihi8l0760nqzvfn60")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (DrRacket . #t)
                   (author:oran.simhony@gmail.com . #t)
                   (colorscheme . #t)
                   (ring:2 . #t)))
          (source . "https://github.com/oransimhony/drracket-ayu-mirage.git")
          (tags . ("colorscheme" "DrRacket"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "5271740c3f0089e3958647353c24b73a3a80e401")
                          (source
                           .
                           "https://github.com/oransimhony/drracket-ayu-mirage.git")
                          (source_url
                           .
                           "https://github.com/oransimhony/drracket-ayu-mirage.git")))))))
 ("drracket-cyberpunk"
  .
  #hasheq((author . "scott@thinkmoore.net")
          (authors . ("scott@thinkmoore.net"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/drracket-cyberpunk.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/drracket-cyberpunk.txt")))
          (checksum . "65d2ccc304b2f1d81423f78f9330a314497f8aae")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base"))
          (dependency-names . ("base"))
          (description . "")
          (implies . ())
          (last-checked . 1557339543)
          (last-edit . 1457033684)
          (last-updated . 1502815938)
          (modules . ())
          (name . "drracket-cyberpunk")
          (nix-sha256
           .
           "0flywlzswx5fpd5rgd3ys0rzv43nvpp6ym47js11spidvamkzzq5")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:no-desc: . #t)
                   (DrRacket . #t)
                   (author:scott@thinkmoore.net . #t)
                   (colorscheme . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/thinkmoore/drracket-cyberpunk.git")
          (tags . ("colorscheme" "DrRacket"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "65d2ccc304b2f1d81423f78f9330a314497f8aae")
                          (source
                           .
                           "git://github.com/thinkmoore/drracket-cyberpunk.git")
                          (source_url
                           .
                           "http://github.com/thinkmoore/drracket-cyberpunk.git/tree/master")))))))
 ("drracket-material"
  .
  #hasheq((author . "oeplse@gmail.com")
          (authors . ("oeplse@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/drracket-material.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/drracket-material.txt")))
          (checksum . "560b77fffe55bfc06b3cce6416cbbdda759dd16f")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base"))
          (dependency-names . ("base"))
          (description
           .
           "This package adds a Material colorscheme to DrRacket.")
          (implies . ())
          (last-checked . 1557339543)
          (last-edit . 1521907708)
          (last-updated . 1521911795)
          (modules . ())
          (name . "drracket-material")
          (nix-sha256
           .
           "011kwkz1dhszjzi15s56cxdzjyngj5j2hmym4gyqxx6dmqf0wjgj")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:oeplse@gmail.com . #t)
                   (colorscheme . #t)
                   (material . #t)
                   (ring:2 . #t)))
          (source . "https://github.com/turbinenreiter/drracket-material.git")
          (tags . ("colorscheme" "material"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "560b77fffe55bfc06b3cce6416cbbdda759dd16f")
                          (source
                           .
                           "https://github.com/turbinenreiter/drracket-material.git")
                          (source_url
                           .
                           "https://github.com/turbinenreiter/drracket-material.git")))))))
 ("drracket-paredit"
  .
  #hasheq((author . "yj_qww6@126.com")
          (authors . ("yj_qww6@126.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/drracket-paredit.txt")
                 (test-failure-log
                  .
                  "server/built/test-fail/drracket-paredit.txt")
                 (test-success-log . #f)))
          (checksum . "fd33f286788a22425b3cc1ba3a22d93227697aef")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base" "drracket" "drracket-plugin-lib" "gui-lib" "srfi-lib"))
          (dependency-names
           .
           ("base" "drracket" "drracket-plugin-lib" "gui-lib" "srfi-lib"))
          (description . "paredit keybindings for DrRacket")
          (implies . ())
          (last-checked . 1557339543)
          (last-edit . 1388410593)
          (last-updated . 1543491957)
          (modules
           .
           ((lib "drracket-paredit/tool.rkt")
            (lib "drracket-paredit/paredit.rkt")))
          (name . "drracket-paredit")
          (nix-sha256
           .
           "0h5kcxkm17dh04ixzzxrwg61kpdm7c03f56fzvdcxa6i15zy8fjg")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:no-tag: . #t)
                   (author:yj_qww6@126.com . #t)
                   (ring:1 . #t)))
          (source . "github://github.com/yjqww6/drracket-paredit/master")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "fd33f286788a22425b3cc1ba3a22d93227697aef")
                          (source
                           .
                           "github://github.com/yjqww6/drracket-paredit/master")
                          (source_url
                           .
                           "http://github.com/yjqww6/drracket-paredit/tree/master")))))))
 ("drracket-plugin-lib"
  .
  #hash((author . "robby@racket-lang.org")
        (checksum . "21f74a83d8b287310623c6b4ec888e8b0fd39743")
        (dependencies . ("base" "compatibility-lib"))
        (dependency-names . ("base" "compatibility-lib"))
        (description . "robby@racket-lang.org")
        (modules . ())
        (name . "drracket-plugin-lib")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/drracket-plugin-lib.zip")
        (tags . ())))
 ("drracket-scheme-dark-green"
  .
  #hasheq((author . "shu-hung.you@eecs.northwestern.edu")
          (authors . ("shu-hung.you@eecs.northwestern.edu"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log
                  .
                  "server/built/install/drracket-scheme-dark-green.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/drracket-scheme-dark-green.txt")))
          (checksum . "035a9089cdfd1472a506476b70a0c3f6e3fd5664")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base"))
          (dependency-names . ("base"))
          (description
           .
           "This is a white-on-black dark green colorscheme for DrRacket.")
          (implies . ())
          (last-checked . 1557339543)
          (last-edit . 1544213935)
          (last-updated . 1544213935)
          (modules . ())
          (name . "drracket-scheme-dark-green")
          (nix-sha256
           .
           "1aqlcjdxff2237z2pg3hnwk5681qyxkmg21x84mn0azjq9nxrbia")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:shu-hung.you@eecs.northwestern.edu . #t)
                   (colorscheme . #t)
                   (drracket . #t)
                   (ring:2 . #t)))
          (source
           .
           "https://github.com/shhyou/drracket-scheme-dark-green.git")
          (tags . ("colorscheme" "drracket"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "035a9089cdfd1472a506476b70a0c3f6e3fd5664")
                          (source
                           .
                           "https://github.com/shhyou/drracket-scheme-dark-green.git")
                          (source_url
                           .
                           "https://github.com/shhyou/drracket-scheme-dark-green.git")))))))
 ("drracket-solarized"
  .
  #hasheq((author . "asumu@ccs.neu.edu")
          (authors . ("asumu@ccs.neu.edu"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/drracket-solarized.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/drracket-solarized.txt")))
          (checksum . "9a90657bb320d4231c85dff96ceaef6a835c5c4f")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base"))
          (dependency-names . ("base"))
          (description . "Solarized colorscheme for Drracket")
          (implies . ())
          (last-checked . 1557339543)
          (last-edit . 1381596999)
          (last-updated . 1502815940)
          (modules . ())
          (name . "drracket-solarized")
          (nix-sha256
           .
           "177xjmgkm5c3pzzfnj2lxl0d7xdpnziiw6knbns5ip7wfr21ajvf")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:asumu@ccs.neu.edu . #t)
                   (colorscheme . #t)
                   (drracket . #t)
                   (ring:1 . #t)))
          (source . "github://github.com/takikawa/drracket-solarized/master")
          (tags . ("colorscheme" "drracket"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "9a90657bb320d4231c85dff96ceaef6a835c5c4f")
                          (source
                           .
                           "github://github.com/takikawa/drracket-solarized/master")
                          (source_url
                           .
                           "http://github.com/takikawa/drracket-solarized/tree/master")))))))
 ("drracket-test"
  .
  #hash((author . "robby@racket-lang.org")
        (checksum . "79ccd9fb44414583885ad563966628495243d5df")
        (dependencies
         .
         ("base"
          "htdp"
          "drracket"
          "racket-index"
          "scheme-lib"
          "at-exp-lib"
          "rackunit-lib"
          "compatibility-lib"
          "gui-lib"
          "htdp"
          "compiler-lib"
          "cext-lib"
          "string-constants-lib"))
        (dependency-names
         .
         ("base"
          "htdp"
          "drracket"
          "racket-index"
          "scheme-lib"
          "at-exp-lib"
          "rackunit-lib"
          "compatibility-lib"
          "gui-lib"
          "htdp"
          "compiler-lib"
          "cext-lib"
          "string-constants-lib"))
        (description . "robby@racket-lang.org")
        (modules . ())
        (name . "drracket-test")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/drracket-test.zip")
        (tags . ())))
 ("drracket-tool"
  .
  #hash((author . "robby@racket-lang.org")
        (checksum . "0b490b366c52bbf49f7a6ffde36eb02abbfbe7ff")
        (dependencies . ("drracket-tool-lib" "drracket-tool-doc"))
        (dependency-names . ("drracket-tool-lib" "drracket-tool-doc"))
        (description . "robby@racket-lang.org")
        (modules . ())
        (name . "drracket-tool")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/drracket-tool.zip")
        (tags . ())))
 ("drracket-tool-doc"
  .
  #hash((author . "robby@racket-lang.org")
        (checksum . "a8275c3534626f98e787d33a67b593bcb884ea0c")
        (dependencies
         .
         ("base"
          "scribble-lib"
          "drracket-tool-lib"
          "racket-doc"
          "gui-doc"
          "gui-lib"
          "drracket"))
        (dependency-names
         .
         ("base"
          "scribble-lib"
          "drracket-tool-lib"
          "racket-doc"
          "gui-doc"
          "gui-lib"
          "drracket"))
        (description . "robby@racket-lang.org")
        (modules . ())
        (name . "drracket-tool-doc")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/drracket-tool-doc.zip")
        (tags . ())))
 ("drracket-tool-lib"
  .
  #hash((author . "robby@racket-lang.org")
        (checksum . "7054cb11abd6c3efd3381fc61b68ad27a88ff3ee")
        (dependencies
         .
         (("base" #:version "6.2.900.10")
          "scribble-lib"
          ("string-constants-lib" #:version "1.12")
          "scribble-lib"
          "racket-index"
          "gui-lib"
          "at-exp-lib"
          "rackunit-lib"))
        (dependency-names
         .
         ("base"
          "scribble-lib"
          "string-constants-lib"
          "scribble-lib"
          "racket-index"
          "gui-lib"
          "at-exp-lib"
          "rackunit-lib"))
        (description . "robby@racket-lang.org")
        (modules . ())
        (name . "drracket-tool-lib")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/drracket-tool-lib.zip")
        (tags . ())))
 ("drracket-tool-test"
  .
  #hash((author . "robby@racket-lang.org")
        (checksum . "bbe5ca05575fd58a300532be1775cd9eeaefae3f")
        (dependencies . ("base" "rackunit-lib" "drracket-tool-lib"))
        (dependency-names . ("base" "rackunit-lib" "drracket-tool-lib"))
        (description . "robby@racket-lang.org")
        (modules . ())
        (name . "drracket-tool-test")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/drracket-tool-test.zip")
        (tags . ())))
 ("drracket-vim-tool"
  .
  #hasheq((author . "asumu@ccs.neu.edu")
          (authors . ("asumu@ccs.neu.edu"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/drracket-vim-tool.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/drracket-vim-tool.txt")))
          (checksum . "c347e8f8dcb0d89efd44755587b108e1f420912a")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "gui-lib"
            "data-lib"
            "drracket-plugin-lib"
            "rackunit-lib"
            "at-exp-lib"))
          (dependency-names
           .
           ("base"
            "gui-lib"
            "data-lib"
            "drracket-plugin-lib"
            "rackunit-lib"
            "at-exp-lib"))
          (description . "DrRacket plugin that simulates vim keybindings")
          (implies . ())
          (last-checked . 1557339544)
          (last-edit . 1438046359)
          (last-updated . 1547762250)
          (modules
           .
           ((lib "drracket-vim-tool/tests/utils.rkt")
            (lib "drracket-vim-tool/tool.rkt")
            (lib "drracket-vim-tool/tests/unit-tests.rkt")
            (lib "drracket-vim-tool/private/text.rkt")
            (lib "drracket-vim-tool/private/utils.rkt")
            (lib "drracket-vim-tool/private/commands.rkt")))
          (name . "drracket-vim-tool")
          (nix-sha256
           .
           "1lmr870iikzis1x38cl7g4dibzm1j0bs2ab3hwln65dx4j4z4vcx")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:asumu@ccs.neu.edu . #t)
                   (drracket . #t)
                   (editor . #t)
                   (ring:1 . #t)
                   (vim . #t)))
          (source . "git://github.com/takikawa/drracket-vim-tool")
          (tags . ("drracket" "editor" "vim"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "c347e8f8dcb0d89efd44755587b108e1f420912a")
                          (source
                           .
                           "git://github.com/takikawa/drracket-vim-tool")
                          (source_url
                           .
                           "http://github.com/takikawa/drracket-vim-tool/tree/master")))
                 ("6.0"
                  .
                  #hasheq((checksum
                           .
                           "0d6725c85d732e7a6b92e3dc6f1f5d98b92ebd2c")
                          (source
                           .
                           "git://github.com/takikawa/drracket-vim-tool#6.2")
                          (source_url
                           .
                           "http://github.com/takikawa/drracket-vim-tool/tree/master#6.2")))
                 ("6.0.1"
                  .
                  #hasheq((checksum
                           .
                           "0d6725c85d732e7a6b92e3dc6f1f5d98b92ebd2c")
                          (source
                           .
                           "git://github.com/takikawa/drracket-vim-tool#6.2")
                          (source_url
                           .
                           "http://github.com/takikawa/drracket-vim-tool/tree/master#6.2")))
                 ("6.1"
                  .
                  #hasheq((checksum
                           .
                           "0d6725c85d732e7a6b92e3dc6f1f5d98b92ebd2c")
                          (source
                           .
                           "git://github.com/takikawa/drracket-vim-tool#6.2")
                          (source_url
                           .
                           "http://github.com/takikawa/drracket-vim-tool/tree/master#6.2")))
                 ("6.2"
                  .
                  #hasheq((checksum
                           .
                           "0d6725c85d732e7a6b92e3dc6f1f5d98b92ebd2c")
                          (source
                           .
                           "git://github.com/takikawa/drracket-vim-tool#6.2")
                          (source_url
                           .
                           "http://github.com/takikawa/drracket-vim-tool/tree/master#6.2")))
                 ("6.2.1"
                  .
                  #hasheq((checksum
                           .
                           "0d6725c85d732e7a6b92e3dc6f1f5d98b92ebd2c")
                          (source
                           .
                           "git://github.com/takikawa/drracket-vim-tool#6.2")
                          (source_url
                           .
                           "http://github.com/takikawa/drracket-vim-tool/tree/master#6.2")))))))
 ("drracket-zenburn"
  .
  #hasheq((author . "andrei.formiga@gmail.com")
          (authors . ("andrei.formiga@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/drracket-zenburn.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/drracket-zenburn.txt")))
          (checksum . "baec7d09cf9dad88303f123d30626fc466b32c81")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base"))
          (dependency-names . ("base"))
          (description . "The Zenburn colorscheme for DrRacket.")
          (implies . ())
          (last-checked . 1557339544)
          (last-edit . 1494609821)
          (last-updated . 1502815948)
          (modules . ())
          (name . "drracket-zenburn")
          (nix-sha256
           .
           "02916zapsydi13hv2p4bz1j817gqmvnd5v92xynzcv3wwz4c6qxz")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (DrRacket . #t)
                   (author:andrei.formiga@gmail.com . #t)
                   (colorscheme . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/tautologico/drracket-zenburn")
          (tags . ("colorscheme" "DrRacket"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "baec7d09cf9dad88303f123d30626fc466b32c81")
                          (source
                           .
                           "git://github.com/tautologico/drracket-zenburn")
                          (source_url
                           .
                           "http://github.com/tautologico/drracket-zenburn/tree/master")))))))
 ("ds-store"
  .
  #hash((author . "mflatt@racket-lang.org")
        (checksum . "d3348321c9e98c83b4ba3d70ce1efdbcd26cde03")
        (dependencies . ("ds-store-lib" "ds-store-doc" "base"))
        (dependency-names . ("ds-store-lib" "ds-store-doc" "base"))
        (description . "mflatt@racket-lang.org")
        (modules . ())
        (name . "ds-store")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/ds-store.zip")
        (tags . ())))
 ("ds-store-doc"
  .
  #hash((author . "mflatt@racket-lang.org")
        (checksum . "6681c3f694cfb51c55494392cc9f161958657b6e")
        (dependencies . ("base" "scribble-lib" "racket-doc" "ds-store-lib"))
        (dependency-names
         .
         ("base" "scribble-lib" "racket-doc" "ds-store-lib"))
        (description . "mflatt@racket-lang.org")
        (modules . ())
        (name . "ds-store-doc")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/ds-store-doc.zip")
        (tags . ())))
 ("ds-store-lib"
  .
  #hash((author . "mflatt@racket-lang.org")
        (checksum . "2b24ac817ba86caebc3ed4826cfc5d4b4e13040f")
        (dependencies . ("base"))
        (dependency-names . ("base"))
        (description . "mflatt@racket-lang.org")
        (modules . ())
        (name . "ds-store-lib")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/ds-store-lib.zip")
        (tags . ())))
 ("dset"
  .
  #hasheq((author . "pnwamk@gmail.com")
          (authors . ("pnwamk@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "dset" "doc/dset@dset/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/dset.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/dset.txt")))
          (checksum . "ce3581c73c42a3c8bbb6b4498325109fdf221c12")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "racket-doc" "scribble-lib" "rackunit-lib"))
          (dependency-names
           .
           ("base" "racket-doc" "scribble-lib" "rackunit-lib"))
          (description . "Deterministic Sets")
          (implies . ())
          (last-checked . 1557339545)
          (last-edit . 1485368839)
          (last-updated . 1503081511)
          (modules
           .
           ((lib "data/dset.rkt")
            (lib "tests/data/dset.rkt")
            (lib "data/dset/dset.scrbl")))
          (name . "dset")
          (nix-sha256
           .
           "0cvkn9yl7r54dhdcqr88ywkjnr6p6jkgzyc44apdc8n9wkj5g69k")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:pnwamk@gmail.com . #t)
                   (data . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/pnwamk/dset.git")
          (tags . ("data"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "ce3581c73c42a3c8bbb6b4498325109fdf221c12")
                          (source . "git://github.com/pnwamk/dset.git")
                          (source_url
                           .
                           "http://github.com/pnwamk/dset.git/tree/master")))))))
 ("dssl"
  .
  #hasheq((author . "jesse.tov@gmail.com")
          (authors . ("jesse.tov@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "dssl" "doc/dssl@dssl/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/dssl.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/dssl.txt")))
          (checksum . "bb5040d0a608a3b6f7f16d6ae725b24388f6aa6c")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "htdp-lib"
            "scribble-lib"
            "racket-doc"
            "htdp-doc"
            "at-exp-lib"
            "sandbox-lib"
            "compatibility-doc"))
          (dependency-names
           .
           ("base"
            "htdp-lib"
            "scribble-lib"
            "racket-doc"
            "htdp-doc"
            "at-exp-lib"
            "sandbox-lib"
            "compatibility-doc"))
          (description
           .
           "Data Structures Student Language: an extension of ASL for easier imperative programming.")
          (implies . ())
          (last-checked . 1557339545)
          (last-edit . 1510931056)
          (last-updated . 1502815950)
          (modules
           .
           ((lib "dssl/main.rkt")
            (lib "dssl/tests/test.rkt")
            (lib "dssl/tests/mlang-test.rkt")
            (lib "dssl/classes.rkt")
            (lib "dssl/scribblings/common.rkt")
            (lib "dssl/dssl.rkt")
            (lib "dssl/scribblings/std-grammar.rkt")
            (lib "dssl/scribblings/prim-ops.rkt")
            (lib "dssl/lang/reader.rkt")
            (lib "dssl/scribblings/dssl.scrbl")))
          (name . "dssl")
          (nix-sha256
           .
           "0pchqm7w9pqsymjbm8cz0yrc7pd9vlmz6qdzfrscdsym425rycwj")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:jesse.tov@gmail.com . #t)
                   (data-structures . #t)
                   (language . #t)
                   (programming-languages . #t)
                   (ring:1 . #t)
                   (student . #t)))
          (source . "https://github.com/tov/dssl.git")
          (tags
           .
           ("data-structures" "language" "programming-languages" "student"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "bb5040d0a608a3b6f7f16d6ae725b24388f6aa6c")
                          (source . "https://github.com/tov/dssl.git")
                          (source_url
                           .
                           "https://github.com/tov/dssl.git")))))))
 ("dssl2"
  .
  #hasheq((author . "jesse.tov@gmail.com jesse@eecs.northwestern.edu")
          (authors . ("jesse.tov@gmail.com" "jesse@eecs.northwestern.edu"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "dssl2" "doc/dssl2@dssl2/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/dssl2.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/dssl2.txt")))
          (checksum . "b7a8b7d3c0963963b4d47679bbc7a7a96b57f5bc")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "rackunit-lib"
            "parser-tools-lib"
            "sandbox-lib"
            "scribble-lib"
            "racket-doc"))
          (dependency-names
           .
           ("base"
            "rackunit-lib"
            "parser-tools-lib"
            "sandbox-lib"
            "scribble-lib"
            "racket-doc"))
          (description . "A language for data structures students")
          (implies . ())
          (last-checked . 1557339545)
          (last-edit . 1531508448)
          (last-updated . 1546960237)
          (modules
           .
           ((lib "dssl2/test/dssl2/cells.rkt")
            (lib "dssl2/grader.rkt")
            (lib "dssl2/private/rte.rkt")
            (lib "dssl2/test/dssl2/expt.rkt")
            (lib "dssl2/test/dssl2/and.rkt")
            (lib "dssl2/test/dssl2/quotient_remainder.rkt")
            (lib "dssl2/test/dssl2/fifo.rkt")
            (lib "dssl2/test/dssl2/defstruct.rkt")
            (lib "dssl2/test/dssl2/vector-oob-fail.rkt")
            (lib "dssl2/test/dssl2/fifo_contract.rkt")
            (lib "dssl2/test/dssl2/float.rkt")
            (lib "dssl2/test/dssl2/if2.rkt")
            (lib "dssl2/private/syntax-color.rkt")
            (lib "dssl2/test/dssl2/if1.rkt")
            (lib "dssl2/private/printer.rkt")
            (lib "dssl2/test/grader/0_of_0_crashes.rkt")
            (lib "dssl2/test/dssl2/plus-fail.rkt")
            (lib "dssl2/test/dssl2/char.rkt")
            (lib "dssl2/test/dssl2/max_min.rkt")
            (lib "dssl2/test/dssl2/class-posn.rkt")
            (lib "dssl2/test/grader/1_of_2_out_of_memory.rkt")
            (lib "dssl2/test/grader/2_of_3.rkt")
            (lib "dssl2/test/grader/0_of_0_loads_crashes.rkt")
            (lib "dssl2/test/dssl2/vector-comprehension.rkt")
            (lib "dssl2/private/class-system.rkt")
            (lib "dssl2/test/dssl2/bitwise.rkt")
            (lib "dssl2/test/dssl2/container-interface.rkt")
            (lib "dssl2/test/dssl2/vec-huh.rkt")
            (lib "dssl2/private/indent.rkt")
            (lib "dssl2/private/generic.rkt")
            (lib "dssl2/private/operators.rkt")
            (lib "dssl2/private/util.rkt")
            (lib "dssl2/test/dssl2/while.rkt")
            (lib "dssl2/test/dssl2/if5.rkt")
            (lib "dssl2/test/dssl2/interface.rkt")
            (lib "dssl2/test/grader.rkt")
            (lib "dssl2/test/dssl2/lt.rkt")
            (lib "dssl2/test/dssl2/dll-nested-struct.rkt")
            (lib "dssl2/private/provide.rkt")
            (lib "dssl2/test/grader/0_of_0_infinite_loop.rkt")
            (lib "dssl2/test/dssl2/bitwise-fail.rkt")
            (lib "dssl2/test/dssl2/float-huh.rkt")
            (lib "dssl2/test/dssl2/int.rkt")
            (lib "dssl2/test/dssl2/vector.rkt")
            (lib "dssl2/test/dssl2/continue.rkt")
            (lib "dssl2/test/grader/0_of_0.rkt")
            (lib "dssl2/test/dssl2/subtract.rkt")
            (lib "dssl2/lib/array.rkt")
            (lib "dssl2/test/dssl2/filter.rkt")
            (lib "dssl2/test/dssl2/negative-huh.rkt")
            (lib "dssl2/test/grader/0_of_0_cheater.rkt")
            (lib "dssl2/test/dssl2/or.rkt")
            (lib "dssl2/test/grader/4_of_4_prints.rkt")
            (lib "dssl2/test/dssl2/array.rkt")
            (lib "dssl2/test/dssl2/interface-import.rkt")
            (lib "dssl2/private/interface.rkt")
            (lib "dssl2/test/dssl2/dll-nested-class.rkt")
            (lib "dssl2/test/dssl2/object-equality.rkt")
            (lib "dssl2/test/dssl2/ceiling.rkt")
            (lib "dssl2/test/dssl2/parametric.rkt")
            (lib "dssl2/test/dssl2/map.rkt")
            (lib "dssl2/test/dssl2/posn-fail.rkt")
            (lib "dssl2/test/dssl2/lambda.rkt")
            (lib "dssl2/test/dssl2/promise.rkt")
            (lib "dssl2/test/dssl2/test.rkt")
            (lib "dssl2/test/dssl2/format.rkt")
            (lib "dssl2/lib/fifo.rkt")
            (lib "dssl2/test/dssl2/comparisons.rkt")
            (lib "dssl2/private/names.rkt")
            (lib "dssl2/test/dssl2/if6.rkt")
            (lib "dssl2/test/dssl2/explode.rkt")
            (lib "dssl2/test/dssl2/implode.rkt")
            (lib "dssl2/private/object.rkt")
            (lib "dssl2/test/dssl2/matrix.rkt")
            (lib "dssl2/test/dssl2/strlen.rkt")
            (lib "dssl2/test/parser.rkt")
            (lib "dssl2/lang/reader.rkt")
            (lib "dssl2/test/dssl2/len.rkt")
            (lib "dssl2/scribblings/util.rkt")
            (lib "dssl2/test/run-dssl2-tests.rkt")
            (lib "dssl2/test/dssl2/dll-for-each.rkt")
            (lib "dssl2/test/dssl2/int-huh.rkt")
            (lib "dssl2/test/dssl2/int-huh-ctc.rkt")
            (lib "dssl2/test/dssl2/if4.rkt")
            (lib "dssl2/test/dssl2/break.rkt")
            (lib "dssl2/private/return.rkt")
            (lib "dssl2/test/dssl2/floor.rkt")
            (lib "dssl2/test/grader/1_of_1.rkt")
            (lib "dssl2/lib/cons.rkt")
            (lib "dssl2/test/dssl2/print_cycle.rkt")
            (lib "dssl2/test/dssl2/error_message.rkt")
            (lib "dssl2/test/dssl2/assert_error.rkt")
            (lib "dssl2/test/dssl2/def.rkt")
            (lib "dssl2/test/dssl2/print.rkt")
            (lib "dssl2/test/grader/0_of_0_malicious.rkt")
            (lib "dssl2/test/dssl2/stream.rkt")
            (lib "dssl2/private/lexer.rkt")
            (lib "dssl2/test/dssl2/positive-huh.rkt")
            (lib "dssl2/test/dssl2/error-fail.rkt")
            (lib "dssl2/main.rkt")
            (lib "dssl2/test/dssl2/struct-set.rkt")
            (lib "dssl2/test/dssl2/str-huh.rkt")
            (lib "dssl2/test/grader/2_of_2.rkt")
            (lib "dssl2/test/dssl2/arithmetic.rkt")
            (lib "dssl2/test/dssl2/num-huh.rkt")
            (lib "dssl2/test/dssl2/posn-assign-fail.rkt")
            (lib "dssl2/private/struct.rkt")
            (lib "dssl2/test/dssl2/posn.rkt")
            (lib "dssl2/private/contract.rkt")
            (lib "dssl2/lib/dll.rkt")
            (lib "dssl2/lib/promise.rkt")
            (lib "dssl2/test/dssl2/odd-huh.rkt")
            (lib "dssl2/test/dssl2/equal.rkt")
            (lib "dssl2/lib/stream.rkt")
            (lib "dssl2/test/dssl2/modulo.rkt")
            (lib "dssl2/private/prims.rkt")
            (lib "dssl2/test/dssl2/proc-huh.rkt")
            (lib "dssl2/language.rkt")
            (lib "dssl2/test/dssl2/even-huh.rkt")
            (lib "dssl2/test/dssl2/int-huh-ctc-fail.rkt")
            (lib "dssl2/test/dssl2/object-printer.rkt")
            (lib "dssl2/scribblings/helpers.rkt")
            (lib "dssl2/test/dssl2/plus.rkt")
            (lib "dssl2/test/dssl2/make-vector.rkt")
            (lib "dssl2/private/find-lib.rkt")
            (lib "dssl2/lib/sbox_hash.rkt")
            (lib "dssl2/test/dssl2/if3.rkt")
            (lib "dssl2/scribblings/dssl2.scrbl")
            (lib "dssl2/test/dssl2/zero-huh.rkt")
            (lib "dssl2/test/dssl2/dll.rkt")
            (lib "dssl2/private/parser.rkt")
            (lib "dssl2/test/dssl2/eq.rkt")
            (lib "dssl2/private/errors.rkt")
            (lib "dssl2/test/dssl2/cons_lib.rkt")))
          (name . "dssl2")
          (nix-sha256
           .
           "0cr0rpi47762fkb35280jcsq61qjqp4ybmgl1f5rbcpags2rv6jj")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:jesse.tov@gmail.com . #t)
                   (author:jesse@eecs.northwestern.edu . #t)
                   (data-structures . #t)
                   (language . #t)
                   (programming-languages . #t)
                   (ring:1 . #t)
                   (student . #t)))
          (source . "https://github.com/tov/dssl2.git")
          (tags
           .
           ("data-structures" "language" "programming-languages" "student"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "b7a8b7d3c0963963b4d47679bbc7a7a96b57f5bc")
                          (source . "https://github.com/tov/dssl2.git")
                          (source_url
                           .
                           "https://github.com/tov/dssl2.git")))))))
 ("dynext-lib"
  .
  #hash((author . "mflatt@racket-lang.org")
        (checksum . "ef6c3679a370e7ccbbc4e05c303d6dfe8cad1e79")
        (dependencies . ("base"))
        (dependency-names . ("base"))
        (description . "mflatt@racket-lang.org")
        (modules . ())
        (name . "dynext-lib")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/dynext-lib.zip")
        (tags . ())))
 ("ebml"
  .
  #hasheq((author . "clements@racket-lang.org")
          (authors . ("clements@racket-lang.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "ebml" "doc/ebml@ebml/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/ebml.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/ebml.txt")))
          (checksum . "2ec0b537cf88dfbcf791f28a3ecd45583ff6295a")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base" "typed-racket-lib" "scribble-lib" "racket-doc"))
          (dependency-names
           .
           ("base" "typed-racket-lib" "scribble-lib" "racket-doc"))
          (description . "A library for reading and writing EBML files.")
          (implies . ())
          (last-checked . 1557339545)
          (last-edit . 1359851583)
          (last-updated . 1513624504)
          (modules
           .
           ((lib "ebml/reader.rkt")
            (lib "ebml/examples/sexp-ebml.rkt")
            (lib "ebml/ebml.scrbl")
            (lib "ebml/writer.rkt")
            (lib "ebml/examples/rust-ebml-parser.rkt")
            (lib "ebml/main.rkt")))
          (name . "ebml")
          (nix-sha256
           .
           "0928gyblpg34gwvlr0115j0g8rxs7qz5hy8ga59p2rmxyyp41gjs")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:clements@racket-lang.org . #t)
                   (data . #t)
                   (io . #t)
                   (ring:1 . #t)))
          (source . "github://github.com/jbclements/ebml/master")
          (tags . ("data" "io"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "2ec0b537cf88dfbcf791f28a3ecd45583ff6295a")
                          (source
                           .
                           "github://github.com/jbclements/ebml/master")
                          (source_url
                           .
                           "http://github.com/jbclements/ebml/tree/master")))))))
 ("echonest"
  .
  #hasheq((author . "greghendershott@gmail.com")
          (authors . ("greghendershott@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/echonest.txt")
                 (test-failure-log . "server/built/test-fail/echonest.txt")
                 (test-success-log . #f)))
          (checksum . "fd7d6511231bb4304cfd10260825e86ac33c3ddc")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "wffi" "rackjure" "rackunit-lib"))
          (dependency-names . ("base" "wffi" "rackjure" "rackunit-lib"))
          (description . "Wrapper for The Echo Nest web API.")
          (implies . ())
          (last-checked . 1557339545)
          (last-edit . 1396443362)
          (last-updated . 1502815951)
          (modules . ((lib "echonest/main.rkt") (lib "echonest/test.rkt")))
          (name . "echonest")
          (nix-sha256
           .
           "0z4sh1gna22ab4jpwv3p4xmhrbchpiik3314pg9mzhddq4jlq2nr")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (audio . #t)
                   (author:greghendershott@gmail.com . #t)
                   (music . #t)
                   (ring:1 . #t)
                   (web . #t)))
          (source . "github://github.com/greghendershott/echonest/master")
          (tags . ("audio" "music" "web"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "fd7d6511231bb4304cfd10260825e86ac33c3ddc")
                          (source
                           .
                           "github://github.com/greghendershott/echonest/master")
                          (source_url
                           .
                           "http://github.com/greghendershott/echonest/tree/master")))))))
 ("ecmascript"
  .
  #hasheq((author . "leo@lwh.jp")
          (authors . ("leo@lwh.jp"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "ecmascript"
                    "doc/ecmascript@ecmascript/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/ecmascript.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/ecmascript.txt")))
          (checksum . "69fcfa42856ea799ff9d9d63a60eaf1b1783fe50")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "math-lib"
            "parser-tools-lib"
            "ragg"
            "racket-doc"
            "scribble-lib"))
          (dependency-names
           .
           ("base"
            "math-lib"
            "parser-tools-lib"
            "ragg"
            "racket-doc"
            "scribble-lib"))
          (description . "Parser, runtime and #lang for ECMAScript")
          (implies . ())
          (last-checked . 1557339545)
          (last-edit . 1413348069)
          (last-updated . 1550022581)
          (modules
           .
           ((lib "ecmascript/init.rkt")
            (lib "ecmascript/types.rkt")
            (lib "ecmascript/convert.rkt")
            (lib "ecmascript/lang/compile.rkt")
            (lib "ecmascript/scribblings/statements.scrbl")
            (lib "ecmascript/scribblings/functions.scrbl")
            (lib "ecmascript/lang/runtime-config.rkt")
            (lib "ecmascript/private/date.rkt")
            (lib "ecmascript/lib/object.rkt")
            (lib "ecmascript/main.rkt")
            (lib "ecmascript/lang/reader.rkt")
            (lib "ecmascript/lib/error.rkt")
            (lib "ecmascript/lang/operator.rkt")
            (lib "ecmascript/lib/number.rkt")
            (lib "ecmascript/lib/math.rkt")
            (lib "ecmascript/lib/string.rkt")
            (lib "ecmascript/function.rkt")
            (lib "ecmascript/lang/read.rkt")
            (lib "ecmascript/eval.rkt")
            (lib "ecmascript/lib/array.rkt")
            (lib "ecmascript/private/this.rkt")
            (lib "ecmascript/lib/regexp.rkt")
            (lib "ecmascript/parse.rkt")
            (lib "ecmascript/lang/literal.rkt")
            (lib "ecmascript/lib/util.rkt")
            (lib "ecmascript/private/object.rkt")
            (lib "ecmascript/lang/statement.rkt")
            (lib "ecmascript/run.rkt")
            (lib "ecmascript/scribblings/syntax.scrbl")
            (lib "ecmascript/private/error.rkt")
            (lib "ecmascript/lib/boolean.rkt")
            (lib "ecmascript/private/array.rkt")
            (lib "ecmascript/lang/lex.rkt")
            (lib "ecmascript/lang/grammar.rkt")
            (lib "ecmascript/scribblings/types.scrbl")
            (lib "ecmascript/scribblings/ecmascript.scrbl")
            (lib "ecmascript/object.rkt")
            (lib "ecmascript/scribblings/parsing.scrbl")
            (lib "ecmascript/scribblings/lit-op.scrbl")
            (lib "ecmascript/private/primitive.rkt")
            (lib "ecmascript/scribblings/lang.scrbl")
            (lib "ecmascript/lang/language-info.rkt")
            (lib "ecmascript/lang/helpers.rkt")
            (lib "ecmascript/lang/function.rkt")
            (lib "ecmascript/scribblings/sexpr.scrbl")
            (lib "ecmascript/private/function.rkt")
            (lib "ecmascript/private/global-object.rkt")
            (lib "ecmascript/private/environment.rkt")
            (lib "ecmascript/lang/environment.rkt")
            (lib "ecmascript/lib/function.rkt")
            (lib "ecmascript/ast.rkt")))
          (name . "ecmascript")
          (nix-sha256
           .
           "0ppy9a8x9ljf28ha5idkm12fdzw4rss532vxc0a6sq2vzy62pl81")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:leo@lwh.jp . #t)
                   (language . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/lwhjp/ecmascript")
          (tags . ("language"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "69fcfa42856ea799ff9d9d63a60eaf1b1783fe50")
                          (source . "git://github.com/lwhjp/ecmascript")
                          (source_url
                           .
                           "http://github.com/lwhjp/ecmascript/tree/master")))))))
 ("effection"
  .
  #hasheq((author . "rokitna@hotmail.com")
          (authors . ("rokitna@hotmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/effection.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/effection.txt")))
          (checksum . "49a8a5898ba31662e3dc7f64a081a1b90051c653")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("effection-doc" "effection-lib"))
          (dependency-names . ("effection-doc" "effection-lib"))
          (description
           .
           "A library for deterministic concurrency and custom side effects.")
          (implies . ("effection-doc" "effection-lib"))
          (last-checked . 1557339545)
          (last-edit . 1520307285)
          (last-updated . 1556442194)
          (modules . ())
          (name . "effection")
          (nix-sha256
           .
           "0kv83vnqgwbn61ic4bv8c33f42q7jrq77ys2rdyb2m283gyf6wk2")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:rokitna@hotmail.com . #t)
                   (concurrency . #t)
                   (effects . #t)
                   (language . #t)
                   (ring:2 . #t)
                   (unstable . #t)))
          (source
           .
           "https://github.com/rocketnia/effection.git?path=effection")
          (tags . ("concurrency" "effects" "language" "unstable"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "49a8a5898ba31662e3dc7f64a081a1b90051c653")
                          (source
                           .
                           "https://github.com/rocketnia/effection.git?path=effection")
                          (source_url
                           .
                           "https://github.com/rocketnia/effection.git?path=effection")))))))
 ("effection-doc"
  .
  #hasheq((author . "rokitna@hotmail.com")
          (authors . ("rokitna@hotmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "effection"
                    "doc/effection@effection-doc/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/effection-doc.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/effection-doc.txt")))
          (checksum . "49a8a5898ba31662e3dc7f64a081a1b90051c653")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "effection-lib"
            "lathe-comforts-doc"
            "lathe-comforts-lib"
            "parendown-lib"
            "racket-doc"
            "scribble-lib"))
          (dependency-names
           .
           ("base"
            "effection-lib"
            "lathe-comforts-doc"
            "lathe-comforts-lib"
            "parendown-lib"
            "racket-doc"
            "scribble-lib"))
          (description
           .
           "A library for deterministic concurrency and custom side effects. (doc)")
          (implies . ())
          (last-checked . 1557339545)
          (last-edit . 1520307374)
          (last-updated . 1556442194)
          (modules . ((lib "effection/scribblings/effection.scrbl")))
          (name . "effection-doc")
          (nix-sha256
           .
           "0kv83vnqgwbn61ic4bv8c33f42q7jrq77ys2rdyb2m283gyf6wk2")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:rokitna@hotmail.com . #t)
                   (concurrency . #t)
                   (effects . #t)
                   (language . #t)
                   (ring:2 . #t)
                   (unstable . #t)))
          (source
           .
           "https://github.com/rocketnia/effection.git?path=effection-doc")
          (tags . ("concurrency" "effects" "language" "unstable"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "49a8a5898ba31662e3dc7f64a081a1b90051c653")
                          (source
                           .
                           "https://github.com/rocketnia/effection.git?path=effection-doc")
                          (source_url
                           .
                           "https://github.com/rocketnia/effection.git?path=effection-doc")))))))
 ("effection-lib"
  .
  #hasheq((author . "rokitna@hotmail.com")
          (authors . ("rokitna@hotmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/effection-lib.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/effection-lib.txt")))
          (checksum . "49a8a5898ba31662e3dc7f64a081a1b90051c653")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "lathe-comforts-lib" "parendown-lib"))
          (dependency-names . ("base" "lathe-comforts-lib" "parendown-lib"))
          (description
           .
           "A library for deterministic concurrency and custom side effects. (lib)")
          (implies . ())
          (last-checked . 1557339545)
          (last-edit . 1520307387)
          (last-updated . 1556442195)
          (modules
           .
           ((lib "effection/order/unsafe.rkt")
            (lib "effection/order/base.rkt")
            (lib "effection/effects/base.rkt")
            (lib "effection/order.rkt")
            (lib "effection/order/private.rkt")
            (lib "effection/extensibility/base.rkt")
            (lib "effection/extensibility/unsafe.rkt")
            (lib "effection/order/private/unsafe.rkt")
            (lib "effection/main.rkt")))
          (name . "effection-lib")
          (nix-sha256
           .
           "0kv83vnqgwbn61ic4bv8c33f42q7jrq77ys2rdyb2m283gyf6wk2")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:rokitna@hotmail.com . #t)
                   (concurrency . #t)
                   (effects . #t)
                   (language . #t)
                   (ring:2 . #t)
                   (unstable . #t)))
          (source
           .
           "https://github.com/rocketnia/effection.git?path=effection-lib")
          (tags . ("concurrency" "effects" "language" "unstable"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "49a8a5898ba31662e3dc7f64a081a1b90051c653")
                          (source
                           .
                           "https://github.com/rocketnia/effection.git?path=effection-lib")
                          (source_url
                           .
                           "https://github.com/rocketnia/effection.git?path=effection-lib")))))))
 ("effection-test"
  .
  #hasheq((author . "rokitna@hotmail.com")
          (authors . ("rokitna@hotmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/effection-test.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/effection-test.txt")))
          (checksum . "49a8a5898ba31662e3dc7f64a081a1b90051c653")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "effection-lib"
            "lathe-comforts-lib"
            "rackunit-lib"
            "parendown-lib"))
          (dependency-names
           .
           ("base"
            "effection-lib"
            "lathe-comforts-lib"
            "rackunit-lib"
            "parendown-lib"))
          (description
           .
           "A library for deterministic concurrency and custom side effects. (test)")
          (implies . ())
          (last-checked . 1557339546)
          (last-edit . 1520307398)
          (last-updated . 1556442195)
          (modules . ((lib "effection/tests.rkt")))
          (name . "effection-test")
          (nix-sha256
           .
           "0kv83vnqgwbn61ic4bv8c33f42q7jrq77ys2rdyb2m283gyf6wk2")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:rokitna@hotmail.com . #t)
                   (concurrency . #t)
                   (effects . #t)
                   (language . #t)
                   (ring:2 . #t)
                   (unstable . #t)))
          (source
           .
           "https://github.com/rocketnia/effection.git?path=effection-test")
          (tags . ("concurrency" "effects" "language" "unstable"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "49a8a5898ba31662e3dc7f64a081a1b90051c653")
                          (source
                           .
                           "https://github.com/rocketnia/effection.git?path=effection-test")
                          (source_url
                           .
                           "https://github.com/rocketnia/effection.git?path=effection-test")))))))
 ("egal"
  .
  #hasheq((author . "samth@ccs.neu.edu")
          (authors . ("samth@ccs.neu.edu"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/egal.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/egal.txt")))
          (checksum . "ea395262430ee0c5dffc264a92b0ad4d1a1a9bc8")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base"))
          (dependency-names . ("base"))
          (description . "Henry Baker's egal")
          (implies . ())
          (last-checked . 1557339546)
          (last-edit . 1503512122)
          (last-updated . 1502815951)
          (modules . ((lib "egal/main.rkt")))
          (name . "egal")
          (nix-sha256
           .
           "0127zhyd4wjh3flpz6qs1wjifxqcqkrh79c57h6w6yaw9ihrqx7s")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:samth@ccs.neu.edu . #t)
                   (comparison . #t)
                   (equality . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/samth/egal")
          (tags . ("comparison" "equality"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "ea395262430ee0c5dffc264a92b0ad4d1a1a9bc8")
                          (source . "git://github.com/samth/egal")
                          (source_url
                           .
                           "http://github.com/samth/egal/tree/master")))))))
 ("ejs"
  .
  #hasheq((author . "jesse@lisp.sh")
          (authors . ("jesse@lisp.sh"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/ejs.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/ejs.txt")))
          (checksum . "6b8e74c48e98e1db0a02ddfe72eb44be9070112f")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "rackunit-lib"))
          (dependency-names . ("base" "rackunit-lib"))
          (description
           .
           "EJS is exact JSON: A no-compromises implementation of RFC 8259 in which all numbers are rational")
          (implies . ())
          (last-checked . 1557339546)
          (last-edit . 1532324359)
          (last-updated . 1542193996)
          (modules
           .
           ((lib "ejs/value.rkt")
            (lib "ejs/equal.rkt")
            (lib "ejs/render.rkt")
            (lib "ejs/util.rkt")
            (lib "ejs/main.rkt")))
          (name . "ejs")
          (nix-sha256
           .
           "1w1jw7npf7p1aw7g3n57akisd50fwh7fjmzql61za2mvxyjrr185")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:jesse@lisp.sh . #t)
                   (json . #t)
                   (ring:2 . #t)))
          (source . "https://github.com/jessealama/ejs.git")
          (tags . ("json"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "6b8e74c48e98e1db0a02ddfe72eb44be9070112f")
                          (source . "https://github.com/jessealama/ejs.git")
                          (source_url
                           .
                           "https://github.com/jessealama/ejs.git")))))))
 ("elasticsearch"
  .
  #hasheq((author . "stchang@racket-lang.org")
          (authors . ("stchang@racket-lang.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/elasticsearch.txt")
                 (test-failure-log
                  .
                  "server/built/test-fail/elasticsearch.txt")
                 (test-success-log . #f)))
          (checksum . "160e2be024a21e7b043b93a5d45eaaca8e3713a1")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "rackunit-lib"))
          (dependency-names . ("base" "rackunit-lib"))
          (description . "")
          (implies . ())
          (last-checked . 1557339546)
          (last-edit . 1442954581)
          (last-updated . 1537826128)
          (modules
           .
           ((lib "elasticsearch/utils.rkt")
            (lib "elasticsearch/elasticsearch.rkt")
            (lib "elasticsearch/main.rkt")
            (lib "elasticsearch/tests.rkt")))
          (name . "elasticsearch")
          (nix-sha256
           .
           "118qldmcjhxr7vfi12lhswqj37gadwan8h2rh9wdxshwavy4wksp")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:no-desc: . #t)
                   (:no-tag: . #t)
                   (author:stchang@racket-lang.org . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/vishesh/elasticsearch.rkt")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "160e2be024a21e7b043b93a5d45eaaca8e3713a1")
                          (source
                           .
                           "git://github.com/vishesh/elasticsearch.rkt")
                          (source_url
                           .
                           "http://github.com/vishesh/elasticsearch.rkt/tree/master")))))))
 ("elf"
  .
  #hasheq((author . "code_man@cybnet.ch ")
          (authors . ("code_man@cybnet.ch"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . "server/built/deps/elf.txt")
                 (docs . (("main" "elf" "doc/elf@elf/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/elf.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/elf.txt")))
          (checksum . "b4ce29f51fa06b6c283e5acf348f318dec539b16")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ())
          (dependency-names . ())
          (description . "Unix executable and linking format read/writing")
          (implies . ())
          (last-checked . 1557339546)
          (last-edit . 1440179405)
          (last-updated . 1502815952)
          (modules
           .
           ((lib "elf/elf-sections.rkt")
            (lib "elf/elf-constants.rkt")
            (lib "elf/elf.scrbl")
            (lib "elf/elf-program-header.rkt")
            (lib "elf/main.rkt")
            (lib "elf/elf-header.rkt")
            (lib "elf/elf.rkt")))
          (name . "elf")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-dep-fail: . #t)
                   (:build-success: . #t)
                   (:docs: . #t)
                   (author:code_man@cybnet.ch . #t)
                   (executable . #t)
                   (linking . #t)
                   (ring:1 . #t)))
          (source . "http://code_man.cybnet.ch/racket/elf.zip")
          (tags . ("executable" "linking"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "b4ce29f51fa06b6c283e5acf348f318dec539b16")
                          (source
                           .
                           "http://code_man.cybnet.ch/racket/elf.zip")
                          (source_url
                           .
                           "http://code_man.cybnet.ch/racket/elf.zip")))))))
 ("eli-tester"
  .
  #hash((author . "eli@racket-lang.org")
        (checksum . "fbf8df6c71f4080932b4485b4c2b9a447b1d468a")
        (dependencies . ("base" "rackunit-lib"))
        (dependency-names . ("base" "rackunit-lib"))
        (description . "eli@racket-lang.org")
        (modules . ())
        (name . "eli-tester")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/eli-tester.zip")
        (tags . ())))
 ("emcsabac"
  .
  #hasheq((author . "tbn@cs.brown.edu tn@cs.brown.edu")
          (authors . ("tbn@cs.brown.edu" "tn@cs.brown.edu"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . "server/built/deps/emcsabac.txt")
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/emcsabac.txt")
                 (test-failure-log . "server/built/test-fail/emcsabac.txt")
                 (test-success-log . #f)))
          (checksum . "e14172de583770ebfae544cc40432738e429a4dc")
          (checksum-error . #f)
          (conflicts . ())
          (date-added . 1549286482)
          (dependencies . ("base" "rosette" "ocelot"))
          (dependency-names . ("base" "rosette" "ocelot"))
          (description . "Basic ABAC analyzer for educational purposes")
          (implies . ())
          (last-checked . 1557339547)
          (last-edit . 1553814731)
          (last-updated . 1553814840)
          (modules
           .
           ((lib "emcsabac/test/arbac1.rkt")
            (lib "emcsabac/test/errors.rkt")
            (lib "emcsabac/lexparse.rkt")
            (lib "emcsabac/test/arbac2.rkt")
            (lib "emcsabac/test/emcstests.rkt")
            (lib "emcsabac/runner.rkt")
            (lib "emcsabac/runtime-config.rkt")
            (lib "emcsabac/language-info.rkt")
            (lib "emcsabac/main.rkt")
            (lib "emcsabac/lang/reader.rkt")))
          (name . "emcsabac")
          (nix-sha256
           .
           "1hjh0fvqlpz3bp5xzljbsnr3y07pvcnwc1347ksp7cyj8nq5wn7i")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-dep-fail: . #t)
                   (:build-success: . #t)
                   (:no-tag: . #t)
                   (author:tbn@cs.brown.edu . #t)
                   (author:tn@cs.brown.edu . #t)
                   (ring:2 . #t)))
          (source . "https://github.com/tnelson/emcsabac.git")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "e14172de583770ebfae544cc40432738e429a4dc")
                          (source . "https://github.com/tnelson/emcsabac.git")
                          (source_url
                           .
                           "https://github.com/tnelson/emcsabac.git")))))))
 ("envy"
  .
  #hasheq((author . "lexi.lambda@gmail.com")
          (authors . ("lexi.lambda@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "envy" "doc/envy@envy/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/envy.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/envy.txt")))
          (checksum . "0adfe762ea5ee9237ec67e15b1880a8767060ffb")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "sweet-exp-lib"
            "threading"
            "typed-racket-lib"
            "racket-doc"
            "scribble-lib"
            "sweet-exp"
            "typed-racket-doc"
            "typed-racket-more"))
          (dependency-names
           .
           ("base"
            "sweet-exp-lib"
            "threading"
            "typed-racket-lib"
            "racket-doc"
            "scribble-lib"
            "sweet-exp"
            "typed-racket-doc"
            "typed-racket-more"))
          (description . "an environment variable manager for applications")
          (implies . ("typed-racket-lib"))
          (last-checked . 1557339547)
          (last-edit . 1440904426)
          (last-updated . 1502815954)
          (modules
           .
           ((lib "envy/s-exp/lang/reader.rkt")
            (lib "envy/main.rkt")
            (lib "envy/private/coerce.rkt")
            (lib "envy/scribblings/lang-envy-sexp.scrbl")
            (lib "envy/environment.rkt")
            (lib "envy/scribblings/api-reference.scrbl")
            (lib "envy/scribblings/lang-envy.scrbl")
            (lib "envy/scribblings/envy.scrbl")
            (lib "envy/s-exp/lang/language.rkt")
            (lib "envy/lang/reader.rkt")
            (lib "tests/envy/environment.rkt")
            (lib "envy/scribblings/util.rkt")))
          (name . "envy")
          (nix-sha256
           .
           "0syyswjvs7k2h44kynizlwpnx49109x2vlwgm2bpbr0mnrv9ny0p")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (:no-tag: . #t)
                   (author:lexi.lambda@gmail.com . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/lexi-lambda/envy")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "0adfe762ea5ee9237ec67e15b1880a8767060ffb")
                          (source . "git://github.com/lexi-lambda/envy")
                          (source_url
                           .
                           "http://github.com/lexi-lambda/envy/tree/master")))
                 ("6.2"
                  .
                  #hasheq((checksum
                           .
                           "1220a9678bc78daa496427ed406c183837cc0765")
                          (source . "git://github.com/lexi-lambda/envy#v6.2")
                          (source_url
                           .
                           "http://github.com/lexi-lambda/envy/tree/master#v6.2")))
                 ("6.2.1"
                  .
                  #hasheq((checksum
                           .
                           "1220a9678bc78daa496427ed406c183837cc0765")
                          (source . "git://github.com/lexi-lambda/envy#v6.2")
                          (source_url
                           .
                           "http://github.com/lexi-lambda/envy/tree/master#v6.2")))))))
 ("eopl"
  .
  #hash((author . "dvanhorn@racket-lang.org")
        (checksum . "88e1b01144cf4b9b96311b42ca89093b9f5b11dd")
        (dependencies
         .
         ("base"
          "compatibility-lib"
          "rackunit-lib"
          "racket-doc"
          "scribble-lib"))
        (dependency-names
         .
         ("base"
          "compatibility-lib"
          "rackunit-lib"
          "racket-doc"
          "scribble-lib"))
        (description . "dvanhorn@racket-lang.org")
        (modules . ())
        (name . "eopl")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/eopl.zip")
        (tags . ())))
 ("errortrace"
  .
  #hash((author
         .
         "mflatt@racket-lang.org robby@racket-lang.org florence@racket-lang.org")
        (checksum . "ea2d92c7e6f3f0425449f498d5ff4ddf987c0eba")
        (dependencies . ("errortrace-lib" "errortrace-doc"))
        (dependency-names . ("errortrace-lib" "errortrace-doc"))
        (description
         .
         "mflatt@racket-lang.org robby@racket-lang.org florence@racket-lang.org")
        (modules . ())
        (name . "errortrace")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/errortrace.zip")
        (tags . ())))
 ("errortrace-doc"
  .
  #hash((author
         .
         "mflatt@racket-lang.org robby@racket-lang.org florence@racket-lang.org")
        (checksum . "3bf67f33f37880189d98b60d49c2acdc1b426447")
        (dependencies . ("racket-doc" "base" "errortrace-lib" "scribble-lib"))
        (dependency-names
         .
         ("racket-doc" "base" "errortrace-lib" "scribble-lib"))
        (description
         .
         "mflatt@racket-lang.org robby@racket-lang.org florence@racket-lang.org")
        (modules . ())
        (name . "errortrace-doc")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/errortrace-doc.zip")
        (tags . ())))
 ("errortrace-lib"
  .
  #hash((author
         .
         "mflatt@racket-lang.org robby@racket-lang.org florence@racket-lang.org")
        (checksum . "8ab957b4112f4f1860063e6f7f82187ba7004ad9")
        (dependencies . (("base" #:version "6.6.0.3") "source-syntax"))
        (dependency-names . ("base" "source-syntax"))
        (description
         .
         "mflatt@racket-lang.org robby@racket-lang.org florence@racket-lang.org")
        (modules . ())
        (name . "errortrace-lib")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/errortrace-lib.zip")
        (tags . ())))
 ("errortrace-test"
  .
  #hash((author
         .
         "mflatt@racket-lang.org robby@racket-lang.org florence@racket-lang.org")
        (checksum . "58f7c77c35ead3bb07999e9e8d345a0340d1ec58")
        (dependencies
         .
         ("errortrace-lib"
          "eli-tester"
          "rackunit-lib"
          "base"
          "compiler-lib"
          "at-exp-lib"))
        (dependency-names
         .
         ("errortrace-lib"
          "eli-tester"
          "rackunit-lib"
          "base"
          "compiler-lib"
          "at-exp-lib"))
        (description
         .
         "mflatt@racket-lang.org robby@racket-lang.org florence@racket-lang.org")
        (modules . ())
        (name . "errortrace-test")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/errortrace-test.zip")
        (tags . ())))
 ("esc-vp21"
  .
  #hasheq((author . "mordae@anilinux.org")
          (authors . ("mordae@anilinux.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "esc-vp21" "doc/esc-vp21@esc-vp21/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/esc-vp21.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/esc-vp21.txt")))
          (checksum . "01bc89268f4f051d55885f64d4a0fac671a762b9")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "scribble-lib"
            "typed-racket-lib"
            "mordae"
            "racket-doc"
            "typed-racket-doc"
            "typed-racket-lib"))
          (dependency-names
           .
           ("base"
            "scribble-lib"
            "typed-racket-lib"
            "mordae"
            "racket-doc"
            "typed-racket-doc"
            "typed-racket-lib"))
          (description . "Epson ESC/VP21 Projector Control")
          (implies . ())
          (last-checked . 1557339547)
          (last-edit . 1440345277)
          (last-updated . 1502815956)
          (modules
           .
           ((lib "esc/vp-net.rkt")
            (lib "esc/vp21.rkt")
            (lib "esc/esc-vp21.scrbl")))
          (name . "esc-vp21")
          (nix-sha256
           .
           "062rlx7qhzgsb12jc5pkgc6rjr31h0warwplk5pr5pl7c0s3xkd3")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (:no-tag: . #t)
                   (author:mordae@anilinux.org . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/mordae/racket-esc-vp21")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "01bc89268f4f051d55885f64d4a0fac671a762b9")
                          (source . "git://github.com/mordae/racket-esc-vp21")
                          (source_url
                           .
                           "http://github.com/mordae/racket-esc-vp21/tree/master")))))))
 ("event-lang"
  .
  #hasheq((author . "dedbox@gmail.com")
          (authors . ("dedbox@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "event-lang"
                    "doc/event-lang@event-lang/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/event-lang.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/event-lang.txt")))
          (checksum . "8ea50a72b5de66d4d67e2b891e43d1fd46a447fe")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base" "racket-doc" "rackunit-lib" "sandbox-lib" "scribble-lib"))
          (dependency-names
           .
           ("base" "racket-doc" "rackunit-lib" "sandbox-lib" "scribble-lib"))
          (description . "Synchronizable event programming")
          (implies . ())
          (last-checked . 1557339547)
          (last-edit . 1529363069)
          (last-updated . 1529363069)
          (modules
           .
           ((lib "event/racket/async-pair.rkt")
            (lib "event/racket/pair.rkt")
            (lib "event/concurrent.rkt")
            (lib "event/racket.rkt")
            (lib "event/main.rkt")
            (lib "event/gate.rkt")
            (lib "event/sequential.rkt")
            (lib "event/event.rkt")
            (lib "event/scribblings/event-lang.scrbl")
            (lib "event/racket/void.rkt")))
          (name . "event-lang")
          (nix-sha256
           .
           "1smg80kl5a4qsb0whfapzwjfhbhbl3086h60yb0gbqdapff7il1m")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:dedbox@gmail.com . #t)
                   (concurrency . #t)
                   (experimental . #t)
                   (ring:2 . #t)))
          (source . "https://github.com/dedbox/racket-event-lang.git")
          (tags . ("concurrency" "experimental"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "8ea50a72b5de66d4d67e2b891e43d1fd46a447fe")
                          (source
                           .
                           "https://github.com/dedbox/racket-event-lang.git")
                          (source_url
                           .
                           "https://github.com/dedbox/racket-event-lang.git")))))))
 ("eventfd"
  .
  #hasheq((author . "mordae@anilinux.org")
          (authors . ("mordae@anilinux.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "eventfd" "doc/eventfd@eventfd/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/eventfd.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/eventfd.txt")))
          (checksum . "f4e8e36525ca23009c71bc9838181cdba5503c98")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "scribble-lib" "racket-doc"))
          (dependency-names . ("base" "scribble-lib" "racket-doc"))
          (description . "Linux eventfd support")
          (implies . ())
          (last-checked . 1557339548)
          (last-edit . 1438605284)
          (last-updated . 1502815956)
          (modules
           .
           ((lib "eventfd/main.rkt")
            (lib "eventfd/private/ffi.rkt")
            (lib "eventfd/eventfd.scrbl")))
          (name . "eventfd")
          (nix-sha256
           .
           "13l3pbigj8pivb8x9m786qkyjbjjvlcr864ch6nx7yb7l5c5lwr1")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:mordae@anilinux.org . #t)
                   (ffi . #t)
                   (linux . #t)
                   (ring:1 . #t)))
          (source . "github://github.com/mordae/racket-eventfd/master")
          (tags . ("ffi" "linux"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "f4e8e36525ca23009c71bc9838181cdba5503c98")
                          (source
                           .
                           "github://github.com/mordae/racket-eventfd/master")
                          (source_url
                           .
                           "http://github.com/mordae/racket-eventfd/tree/master")))))))
 ("exact-decimal-lang"
  .
  #hasheq((author . "alexander@knauth.org")
          (authors . ("alexander@knauth.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "exact-decimal-lang"
                    "doc/exact-decimal-lang@exact-decimal-lang/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/exact-decimal-lang.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/exact-decimal-lang.txt")))
          (checksum . "0aae96ff741748e3a7da4239ad748e56c5f49470")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base" "rackunit" "scribble-lib" "racket-doc" "scribble-doc"))
          (dependency-names
           .
           ("base" "rackunit" "scribble-lib" "racket-doc" "scribble-doc"))
          (description
           .
           "a lang-extension that reads decimals as exact rationals")
          (implies . ())
          (last-checked . 1557339548)
          (last-edit . 1466340939)
          (last-updated . 1502815957)
          (modules
           .
           ((lib "exact-decimal/lang/runtime-config.rkt")
            (lib "exact-decimal/tests/test.rkt")
            (lib "exact-decimal/docs/exact-decimal-lang.scrbl")
            (lib "exact-decimal/lang/language-info.rkt")
            (lib "exact-decimal/lang/reader.rkt")))
          (name . "exact-decimal-lang")
          (nix-sha256
           .
           "0f6v4rps9nx9qlxnwrnygjchk23myji41bh3rbcz6rmx3c9qvg0v")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:alexander@knauth.org . #t)
                   (lang-extension . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/AlexKnauth/exact-decimal-lang")
          (tags . ("lang-extension"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "0aae96ff741748e3a7da4239ad748e56c5f49470")
                          (source
                           .
                           "git://github.com/AlexKnauth/exact-decimal-lang")
                          (source_url
                           .
                           "http://github.com/AlexKnauth/exact-decimal-lang/tree/master")))))))
 ("expander"
  .
  #hash((author . "mflatt@racket-lang.org")
        (authors . ("mflatt@racket-lang.org"))
        (build
         .
         #hash((conflicts-log . #f)
               (dep-failure-log . #f)
               (docs . ())
               (failure-log . #f)
               (min-failure-log . #f)
               (success-log . "server/built/install/expander.txt")
               (test-failure-log . "server/built/test-fail/expander.txt")
               (test-success-log . #f)))
        (checksum . "b7d738d59ad64efb4602f13136757cb49a6e989b")
        (checksum-error . #f)
        (conflicts . ())
        (dependencies
         .
         (("base" #:version "6.6.0.2") "zo-lib" "compiler-lib" "at-exp-lib"))
        (dependency-names . ("base" "zo-lib" "compiler-lib" "at-exp-lib"))
        (description
         .
         "Racket's implementation of macros, modules, and top-level evaluation")
        (implies . ())
        (last-checked . 1557339548)
        (last-edit . 1556209159)
        (last-updated . 1557199276)
        (modules
         .
         ((lib "expander/extract/defn-known.rkt")
          (lib "expander/common/intern.rkt")
          (lib "expander/compile/extra-inspector.rkt")
          (lib "expander/extract/needed.rkt")
          (lib "expander/read/error.rkt")
          (lib "expander/extract/prune-name.rkt")
          (lib "expander/syntax/binding-set.rkt")
          (lib "expander/common/parameter-like.rkt")
          (lib "expander/compile/side-effect.rkt")
          (lib "expander/common/module-path.rkt")
          (lib "expander/host/string-to-number.rkt")
          (lib "expander/namespace/namespace.rkt")
          (lib "expander/eval/parameter.rkt")
          (lib "expander/read/primitive-parameter.rkt")
          (lib "expander/expand/liberal-def-ctx.rkt")
          (lib "expander/eval/load.rkt")
          (lib "expander/read/accum-string.rkt")
          (lib "expander/compile/expr.rkt")
          (lib "expander/eval/top.rkt")
          (lib "expander/syntax/preserved.rkt")
          (lib "expander/read/demo.rkt")
          (lib "expander/eval/reflect-name.rkt")
          (lib "expander/run/cache.rkt")
          (lib "expander/compile/compiled-in-memory.rkt")
          (lib "expander/read/hash.rkt")
          (lib "expander/read/indentation.rkt")
          (lib "expander/expand/require.rkt")
          (lib "expander/expand/missing-module.rkt")
          (lib "expander/read/fixnum-flonum.rkt")
          (lib "expander/read/language.rkt")
          (lib "expander/boot/main-primitive.rkt")
          (lib "expander/extract/defn.rkt")
          (lib "expander/boot/runtime-primitive.rkt")
          (lib "expander/expand/module.rkt")
          (lib "expander/expand/binding-for-transformer.rkt")
          (lib "expander/read/delimiter.rkt")
          (lib "expander/expand/set-bang-trans.rkt")
          (lib "expander/common/parse-module-path.rkt")
          (lib "expander/expand/log.rkt")
          (lib "expander/expand/bind-top.rkt")
          (lib "expander/read/main.rkt")
          (lib "expander/boot/kernel.rkt")
          (lib "expander/syntax/module-binding.rkt")
          (lib "expander/compile/correlate.rkt")
          (lib "expander/expand/module-path.rkt")
          (lib "expander/common/performance.rkt")
          (lib "expander/read/readtable.rkt")
          (lib "expander/extract/main.rkt")
          (lib "expander/extract/decompile.rkt")
          (lib "expander/namespace/variable-reference.rkt")
          (lib "expander/extract/linklet-info.rkt")
          (lib "expander/expand/use-site.rkt")
          (lib "expander/read/closer.rkt")
          (lib "expander/expand/root-expand-context.rkt")
          (lib "expander/extract/c-encode.rkt")
          (lib "expander/syntax/property.rkt")
          (lib "expander/extract/simplify-defn.rkt")
          (lib "expander/read/parameter.rkt")
          (lib "expander/read/string.rkt")
          (lib "expander/namespace/api-module.rkt")
          (lib "expander/syntax/to-list.rkt")
          (lib "expander/expand/allowed-context.rkt")
          (lib "expander/common/phase.rkt")
          (lib "expander/read/parse-case.rkt")
          (lib "expander/namespace/provide-for-api.rkt")
          (lib "expander/main.rkt")
          (lib "expander/compile/header.rkt")
          (lib "expander/compile/form.rkt")
          (lib "expander/eval/main.rkt")
          (lib "expander/compile/reserved-symbol.rkt")
          (lib "expander/syntax/srcloc.rkt")
          (lib "expander/namespace/api.rkt")
          (lib "expander/run/status.rkt")
          (lib "expander/extract/module.rkt")
          (lib "expander/expand/local-expand.rkt")
          (lib "expander/read/coerce.rkt")
          (lib "expander/expand/main.rkt")
          (lib "expander/extract/export.rkt")
          (lib "expander/syntax/scope.rkt")
          (lib "expander/host/reader-syntax.rkt")
          (lib "expander/expand/context.rkt")
          (lib "expander/compile/write-linklet.rkt")
          (lib "expander/read/quote.rkt")
          (lib "expander/read/vector.rkt")
          (lib "expander/extract/link.rkt")
          (lib "expander/syntax/error.rkt")
          (lib "expander/expand/definition-context.rkt")
          (lib "expander/expand/provide.rkt")
          (lib "expander/expand/env.rkt")
          (lib "expander/compile/built-in-symbol.rkt")
          (lib "expander/bootstrap-run.rkt")
          (lib "expander/expand/syntax-id-error.rkt")
          (lib "expander/compile/module.rkt")
          (lib "expander/syntax/taint-dispatch.rkt")
          (lib "expander/read/constant.rkt")
          (lib "expander/compile/serialize.rkt")
          (lib "expander/extract/underscore.rkt")
          (lib "expander/extract/symbol.rkt")
          (lib "expander/expand/dup-check.rkt")
          (lib "expander/expand/binding-to-module.rkt")
          (lib "expander/extract/flatten.rkt")
          (lib "expander/extract/gc-defn.rkt")
          (lib "expander/common/make-match.rkt")
          (lib "expander/eval/module-cache.rkt")
          (lib "expander/read/sequence.rkt")
          (lib "expander/read/symbol-or-number.rkt")
          (lib "expander/read/number.rkt")
          (lib "expander/expand/require+provide.rkt")
          (lib "expander/common/reflect-hash.rkt")
          (lib "expander/host/linklet.rkt")
          (lib "expander/syntax/datum-map.rkt")
          (lib "expander/expand/append.rkt")
          (lib "expander/syntax/syntax.rkt")
          (lib "expander/common/memo.rkt")
          (lib "expander/run/submodule.rkt")
          (lib "expander/namespace/primitive-module.rkt")
          (lib "expander/namespace/registry.rkt")
          (lib "expander/expand/reference-record.rkt")
          (lib "expander/compile/multi-top-data.rkt")
          (lib "expander/syntax/taint.rkt")
          (lib "expander/boot/handler.rkt")
          (lib "expander/read/consume.rkt")
          (lib "expander/eval/module-read.rkt")
          (lib "expander/expand/lift-context.rkt")
          (lib "expander/boot/expobs-primitive.rkt")
          (lib "expander/read/box.rkt")
          (lib "expander/extract/check-and-report.rkt")
          (lib "expander/extract/primitive-table.rkt")
          (lib "expander/host/syntax-to-reader-syntax.rkt")
          (lib "expander/host/correlate-syntax.rkt")
          (lib "expander/compile/recompile.rkt")
          (lib "expander/boot/read-primitive.rkt")
          (lib "expander/compile/correlated-linklet.rkt")
          (lib "expander/eval/reflect.rkt")
          (lib "expander/extract/known-primitive.rkt")
          (lib "expander/compile/module-use.rkt")
          (lib "expander/run/linklet-operation.rkt")
          (lib "expander/common/inline.rkt")
          (lib "expander/compile/serialize-state.rkt")
          (lib "expander/expand/expanded+parsed.rkt")
          (lib "expander/extract/save-and-report.rkt")
          (lib "expander/boot/core-primitive.rkt")
          (lib "expander/run/bootstrap.rkt")
          (lib "expander/read/special-comment.rkt")
          (lib "expander/compile/instance.rkt")
          (lib "expander/compile/serialize-property.rkt")
          (lib "expander/compile/multi-top.rkt")
          (lib "expander/bootstrap-demo.rkt")
          (lib "expander/read/special.rkt")
          (lib "expander/read/struct.rkt")
          (lib "expander/extract/linklet.rkt")
          (lib "expander/expand/body.rkt")
          (lib "expander/eval/multi-top.rkt")
          (lib "expander/syntax/api-taint.rkt")
          (lib "expander/eval/root-context.rkt")
          (lib "expander/syntax/cache.rkt")
          (lib "expander/read/whitespace.rkt")
          (lib "expander/read/api.rkt")
          (lib "expander/compile/top.rkt")
          (lib "expander/demo.rkt")
          (lib "expander/syntax/mapped-name.rkt")
          (lib "expander/boot/linklet-primitive.rkt")
          (lib "expander/syntax/read-syntax.rkt")
          (lib "expander/host/reader-syntax-to-syntax.rkt")
          (lib "expander/eval/top-level-instance.rkt")
          (lib "expander/expand/def-id.rkt")
          (lib "expander/read/regexp.rkt")
          (lib "expander/eval/dynamic-require.rkt")
          (lib "expander/syntax/fallback.rkt")
          (lib "expander/eval/reflect-submodule.rkt")
          (lib "expander/boot/load-handler.rkt")
          (lib "expander/syntax/local-binding.rkt")
          (lib "expander/read/location.rkt")
          (lib "expander/compile/self-quoting.rkt")
          (lib "expander/extract/global.rkt")
          (lib "expander/run/linklet.rkt")
          (lib "expander/syntax/bulk-binding.rkt")
          (lib "expander/eval/reflect-compiled.rkt")
          (lib "expander/eval/api.rkt")
          (lib "expander/expand/prepare.rkt")
          (lib "expander/syntax/binding.rkt")
          (lib "expander/syntax/api.rkt")
          (lib "expander/host/correlate.rkt")
          (lib "expander/common/fasl.rkt")
          (lib "expander/run.rkt")
          (lib "expander/read/config.rkt")
          (lib "expander/read/readtable-parameter.rkt")
          (lib "expander/syntax/full-binding.rkt")
          (lib "expander/namespace/provided.rkt")
          (lib "expander/expand/stop-ids.rkt")
          (lib "expander/expand/save-and-restore.rkt")
          (lib "expander/read/wrap.rkt")
          (lib "expander/expand/top.rkt")
          (lib "expander/compile/main.rkt")
          (lib "expander/expand/lift-key.rkt")
          (lib "expander/expand/syntax-implicit-error.rkt")
          (lib "expander/expand/cross-phase.rkt")
          (lib "expander/syntax/original.rkt")
          (lib "expander/eval/protect.rkt")
          (lib "expander/syntax/track.rkt")
          (lib "expander/compile/read-linklet.rkt")
          (lib "expander/namespace/core.rkt")
          (lib "expander/expand/protect.rkt")
          (lib "expander/extract/get-linklet.rkt")
          (lib "expander/compile/linklet.rkt")
          (lib "expander/syntax/tamper.rkt")
          (lib "expander/common/list-ish.rkt")
          (lib "expander/common/small-hash.rkt")
          (lib "expander/read/graph.rkt")
          (lib "expander/eval/collection.rkt")
          (lib "expander/compile/version-bytes.rkt")
          (lib "expander/namespace/inspector.rkt")
          (lib "expander/common/prefab.rkt")
          (lib "expander/eval/module.rkt")
          (lib "expander/syntax/binding-table.rkt")
          (lib "expander/expand/already-expanded.rkt")
          (lib "expander/compile/eager-instance.rkt")
          (lib "expander/expand/rename-trans.rkt")
          (lib "expander/run/correlated-to-host-syntax.rkt")
          (lib "expander/boot/place-primitive.rkt")
          (lib "expander/compile/context.rkt")
          (lib "expander/syntax/match.rkt")
          (lib "expander/common/set.rkt")
          (lib "expander/eval/direct.rkt")
          (lib "expander/expand/expr.rkt")
          (lib "expander/boot/utils-primitive.rkt")
          (lib "expander/compile/namespace-scope.rkt")
          (lib "expander/expand/rebuild.rkt")
          (lib "expander/expand/free-id-set.rkt")
          (lib "expander/read/digit.rkt")
          (lib "expander/read/coerce-key.rkt")
          (lib "expander/namespace/attach.rkt")
          (lib "expander/expand/parsed.rkt")
          (lib "expander/common/contract.rkt")
          (lib "expander/compile/known.rkt")
          (lib "expander/read/extension.rkt")
          (lib "expander/common/promise.rkt")
          (lib "expander/run/host-syntax-to-syntax.rkt")
          (lib "expander/common/struct-star.rkt")
          (lib "expander/namespace/module.rkt")
          (lib "expander/read/char.rkt")
          (lib "expander/extract/variable.rkt")
          (lib "expander/syntax/debug.rkt")
          (lib "expander/expand/syntax-local.rkt")
          (lib "expander/common/module-path-intern.rkt")))
        (name . "expander")
        (nix-sha256 . "1big24pqdg12p715zh7868v6ngq27g8j6nkp8wx43fxcw5qzay46")
        (ring . 2)
        (search-terms
         .
         #hasheq((:build-success: . #t)
                 (:no-tag: . #t)
                 (author:mflatt@racket-lang.org . #t)
                 (ring:2 . #t)))
        (source . "git://github.com/racket/racket/?path=racket/src/expander")
        (tags . ())
        (versions
         .
         #hash((default
                .
                #hasheq((checksum
                         .
                         "b7d738d59ad64efb4602f13136757cb49a6e989b")
                        (source
                         .
                         "git://github.com/racket/racket/?path=racket/src/expander")
                        (source_url
                         .
                         "git://github.com/racket/racket/?path=racket/src/expander")))))))
 ("expect"
  .
  #hasheq((author . "jackhfirth@gmail.com")
          (authors . ("jackhfirth@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "expect" "doc/expect@expect/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/expect.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/expect.txt")))
          (checksum . "9530df30537ae05400b6a3add9619e5f697dca52")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("syntax-classes-lib"
            ("arguments" #:version "1.1")
            "base"
            "fancy-app"
            ("rackunit-lib" #:version "1.7")
            "reprovide-lang"
            "rackunit-doc"
            "doc-coverage"
            "racket-doc"
            "scribble-lib"
            "scribble-text-lib"
            "syntax-classes-lib"))
          (dependency-names
           .
           ("syntax-classes-lib"
            "arguments"
            "base"
            "fancy-app"
            "rackunit-lib"
            "reprovide-lang"
            "rackunit-doc"
            "doc-coverage"
            "racket-doc"
            "scribble-lib"
            "scribble-text-lib"
            "syntax-classes-lib"))
          (description
           .
           "A package defining \"expectations\", first-class assertions about values for use in validation and unit testing with high quality error messages. Currently experimental.")
          (implies . ())
          (last-checked . 1557339548)
          (last-edit . 1500074613)
          (last-updated . 1506054560)
          (modules
           .
           ((lib "expect/private/main.rkt")
            (lib "expect/scribblings/base.scrbl")
            (lib "expect/tests/data/data-sequence.rkt")
            (lib "expect/rackunit.rkt")
            (lib "expect/scribblings/struct.scrbl")
            (lib "expect/tests/compare.rkt")
            (lib "expect/scribblings/syntax.scrbl")
            (lib "expect/scribblings/data.scrbl")
            (lib "expect/tests/scribble.rkt")
            (lib "expect/private/data/data-dict.rkt")
            (lib "expect/tests/util.rkt")
            (lib "expect/private/lite/main.rkt")
            (lib "expect/private/lite/base.rkt")
            (lib "expect/private/data/data-sequence.rkt")
            (lib "expect/private/meta.rkt")
            (lib "expect/private/rackunit/check.rkt")
            (lib "expect/private/function.rkt")
            (lib "expect/private/syntax.rkt")
            (lib "expect/scribblings/meta.scrbl")
            (lib "expect/private/text.rkt")
            (lib "expect/tests/data/convert.rkt")
            (lib "expect/private/util.rkt")
            (lib "expect/tests/struct.rkt")
            (lib "expect/private/data/main.rkt")
            (lib "expect/private/lite/compare-sugar.rkt")
            (lib "expect/scribblings/util.rkt")
            (lib "expect/tests/data/convert-equal.rkt")
            (lib "expect/private/data/data-box.rkt")
            (lib "expect/tests/meta.rkt")
            (lib "expect/private/data/data-set.rkt")
            (lib "expect/scribblings/combinator.scrbl")
            (lib "expect/scribblings/base.rkt")
            (lib "expect/tests/text.rkt")
            (lib "expect/scribblings/compare.scrbl")
            (lib "expect/private/lite/combinator.rkt")
            (lib "expect/private/data/data-syntax.rkt")
            (lib "expect/scribblings/convert.scrbl")
            (lib "expect/scribblings/text.scrbl")
            (lib "expect/scribblings/function.scrbl")
            (lib "expect/private/data.rkt")
            (lib "expect/tests/logic.rkt")
            (lib "expect/scribblings/logic.scrbl")
            (lib "expect/tests/syntax.rkt")
            (lib "expect/tests/data/data-set.rkt")
            (lib "expect/scribblings/rackunit.scrbl")
            (lib "expect/private/rackunit/main.rkt")
            (lib "expect/scribblings/main.scrbl")
            (lib "expect/main.rkt")
            (lib "expect/private/rackunit/case.rkt")
            (lib "expect/private/text-io.rkt")
            (lib "expect/private/lite/logic.rkt")
            (lib "expect/private/function-context.rkt")
            (lib "expect/private/struct.rkt")
            (lib "expect/tests/data/data-hash.rkt")
            (lib "expect/private/lite/compare.rkt")
            (lib "expect/private/data/context.rkt")
            (lib "expect/tests/data/data-box.rkt")
            (lib "expect/private/lite.rkt")
            (lib "expect/private/data/convert.rkt")
            (lib "expect/private/rackunit/base.rkt")
            (lib "expect/tests/rackunit.rkt")
            (lib "expect/tests/function.rkt")
            (lib "expect/private/fail.rkt")
            (lib "expect/private/data/convert-base.rkt")))
          (name . "expect")
          (nix-sha256
           .
           "144sa4i069sg428kij5y3zivk9njaw3my89v5aaz1yhdlirlgapp")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:jackhfirth@gmail.com . #t)
                   (experimental . #t)
                   (rackunit . #t)
                   (ring:1 . #t)
                   (testing . #t)
                   (validation . #t)))
          (source . "git://github.com/jackfirth/racket-expect")
          (tags . ("experimental" "rackunit" "testing" "validation"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "9530df30537ae05400b6a3add9619e5f697dca52")
                          (source
                           .
                           "git://github.com/jackfirth/racket-expect")
                          (source_url
                           .
                           "http://github.com/jackfirth/racket-expect/tree/master")))))))
 ("explorer"
  .
  #hasheq((author . "tonygarnockjones@gmail.com")
          (authors . ("tonygarnockjones@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/explorer.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/explorer.txt")))
          (checksum . "2a1836d01a7ff2ed025a67cc5f06c38b56776b2d")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "gui-lib" "rackunit-lib"))
          (dependency-names . ("base" "gui-lib" "rackunit-lib"))
          (description
           .
           "Utility for interactive exploration of complex data structures.")
          (implies . ())
          (last-checked . 1557339548)
          (last-edit . 1382141997)
          (last-updated . 1502815957)
          (modules
           .
           ((lib "explorer/main.rkt")
            (lib "explorer/compile-cond.rkt")
            (lib "explorer/frame.rkt")
            (lib "explorer/example.rkt")
            (lib "explorer/workspace.rkt")))
          (name . "explorer")
          (nix-sha256
           .
           "0ml68mrxhl002vi7zm6gpqv740r54gjgi51fvj8vqajnqmbc24vf")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:no-tag: . #t)
                   (author:tonygarnockjones@gmail.com . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/tonyg/racket-explorer")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "2a1836d01a7ff2ed025a67cc5f06c38b56776b2d")
                          (source . "git://github.com/tonyg/racket-explorer")
                          (source_url
                           .
                           "http://github.com/tonyg/racket-explorer/tree/master")))))))
 ("expr-in-racket"
  .
  #hasheq((author . "kevin2059@163.com")
          (authors . ("kevin2059@163.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . "server/built/fail/expr-in-racket.txt")
                 (min-failure-log . #f)
                 (success-log . #f)
                 (test-failure-log . #f)
                 (test-success-log . #f)))
          (checksum . "fa8266d311df18010da4e56648e06a9fe53c6b0b")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ())
          (dependency-names . ())
          (description . "embed expr like \"x+1\" in racket.")
          (implies . ())
          (last-checked . 1557339548)
          (last-edit . 1518140329)
          (last-updated . 1518140134)
          (modules
           .
           ((lib "expr-in-racket/lang/configure-runtime.rkt")
            (lib "expr-in-racket/grammar/ast.rkt")
            (lib "expr-in-racket/grammar/lex.rkt")
            (lib "expr-in-racket/main.rkt")
            (lib "expr-in-racket/grammar/yacc.rkt")
            (lib "expr-in-racket/syntax.rkt")
            (lib "expr-in-racket/lang/reader.rkt")
            (lib "expr-in-racket/srcloc.rkt")
            (lib "expr-in-racket/compiler.rkt")
            (lib "expr-in-racket/lang/lang-info.rkt")
            (lib "expr-in-racket/lib.rkt")))
          (name . "expr-in-racket")
          (nix-sha256
           .
           "1x8fmy6a9hwbpd4gxpic3cy2ywnh1kw4xamfqlksmv5blzfhzdsa")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-fail: . #t)
                   (author:kevin2059@163.com . #t)
                   (lang-extension . #t)
                   (ring:2 . #t)))
          (source . "https://github.com/connor2059/expr-in-racket.git")
          (tags . ("lang-extension"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "fa8266d311df18010da4e56648e06a9fe53c6b0b")
                          (source
                           .
                           "https://github.com/connor2059/expr-in-racket.git")
                          (source_url
                           .
                           "https://github.com/connor2059/expr-in-racket.git")))))))
 ("extensible-functions"
  .
  #hasheq((author . "me@leafac.com")
          (authors . ("me@leafac.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "extensible-functions"
                    "doc/extensible-functions@extensible-functions/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log
                  .
                  "server/built/install/extensible-functions.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/extensible-functions.txt")))
          (checksum . "7aa4c134ba48137bd66d30ad9282d261a5507dbe")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "rackunit-lib"
            "typed-racket-lib"
            "typed-racket-more"
            "scribble-lib"
            "racket-doc"
            "typed-racket-doc"))
          (dependency-names
           .
           ("base"
            "rackunit-lib"
            "typed-racket-lib"
            "typed-racket-more"
            "scribble-lib"
            "racket-doc"
            "typed-racket-doc"))
          (description
           .
           "A solution to the expression problem in Typed Racket")
          (implies . ())
          (last-checked . 1557339548)
          (last-edit . 1525863103)
          (last-updated . 1525868360)
          (modules
           .
           ((lib "extensible-functions/extensible-functions.scrbl")
            (lib "extensible-functions/main.rkt")))
          (name . "extensible-functions")
          (nix-sha256
           .
           "0pafm182lh8pdx3ha7bfb7vz9i69wh19dg0pck4c3pyqc2pzjf1s")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:me@leafac.com . #t)
                   (expression-problem . #t)
                   (extensible . #t)
                   (ring:1 . #t)
                   (utility . #t)))
          (source . "https://github.com/leafac/extensible-functions.git")
          (tags . ("expression-problem" "extensible" "utility"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "7aa4c134ba48137bd66d30ad9282d261a5507dbe")
                          (source
                           .
                           "https://github.com/leafac/extensible-functions.git")
                          (source_url
                           .
                           "https://github.com/leafac/extensible-functions.git")))))))
 ("extensible-parser-specifications"
  .
  #hasheq((author . "georges.duperon@gmail.com")
          (authors . ("georges.duperon@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "extensible-parser-specifications"
                    "doc/extensible-parser-specifications@extensible-parser-specifications/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log
                  .
                  "server/built/install/extensible-parser-specifications.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/extensible-parser-specifications.txt")))
          (checksum . "0204fd4f47902c1545ccbfee764dd2c161456258")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "rackunit-lib"
            "phc-toolkit"
            "generic-syntax-expanders"
            "alexis-util"
            "scribble-lib"
            "racket-doc"
            "seq-no-order"))
          (dependency-names
           .
           ("base"
            "rackunit-lib"
            "phc-toolkit"
            "generic-syntax-expanders"
            "alexis-util"
            "scribble-lib"
            "racket-doc"
            "seq-no-order"))
          (description
           .
           "Unstable, and has seemingly unsolvable problems with module boundaries. This package works like seq-no-order by Alexander Knauth, but adds reusable (within the same module) clauses and global constraints like \"a must occur before b\" or \"a mutually exclusive with c\".")
          (implies . ())
          (last-checked . 1557339548)
          (last-edit . 1501078603)
          (last-updated . 1527806577)
          (modules
           .
           ((lib "extensible-parser-specifications/private/mixin.rkt")
            (lib "extensible-parser-specifications/private/pre.rkt")
            (lib "extensible-parser-specifications/private/before-after.rkt")
            (lib "extensible-parser-specifications/test/test-order-point.rkt")
            (lib
             "extensible-parser-specifications/test/test-extend-structure-options.rkt")
            (lib
             "extensible-parser-specifications/scribblings/pre-global-post-section.scrbl")
            (lib "extensible-parser-specifications/main.rkt")
            (lib "extensible-parser-specifications/private/global-mutex.rkt")
            (lib "extensible-parser-specifications/private/post.rkt")
            (lib "extensible-parser-specifications/scribblings/utils.rkt")
            (lib "extensible-parser-specifications/scribblings/misc.scrbl")
            (lib "extensible-parser-specifications/private/parameters.rkt")
            (lib "extensible-parser-specifications/test/test-maybe-empty.rkt")
            (lib
             "extensible-parser-specifications/scribblings/extensible-parser-specifications.scrbl")
            (lib "extensible-parser-specifications/private/try-attribute.rkt")
            (lib
             "extensible-parser-specifications/scribblings/no-order.scrbl")
            (lib "extensible-parser-specifications/private/no-order.rkt")
            (lib "extensible-parser-specifications/test/test-rest.rkt")
            (lib "extensible-parser-specifications/scribblings/rest.scrbl")
            (lib "extensible-parser-specifications/scribblings/global.scrbl")
            (lib "extensible-parser-specifications/scribblings/pre.scrbl")
            (lib
             "extensible-parser-specifications/test/test-structure-options.rkt")
            (lib "extensible-parser-specifications/scribblings/post.scrbl")
            (lib "extensible-parser-specifications/private/global.rkt")
            (lib
             "extensible-parser-specifications/private/define-syntax+simple-api.rkt")
            (lib "extensible-parser-specifications/test/test-global.rkt")
            (lib "extensible-parser-specifications/private/optional.rkt")
            (lib
             "extensible-parser-specifications/scribblings/forward-attributes.scrbl")
            (lib "extensible-parser-specifications/private/nop.rkt")
            (lib
             "extensible-parser-specifications/test/test-scopes-mixin-in-syntax-parser.rkt")
            (lib
             "extensible-parser-specifications/scribblings/defining-reusable-mixins.scrbl")
            (lib
             "extensible-parser-specifications/scribblings/pre-global-post-order.scrbl")))
          (name . "extensible-parser-specifications")
          (nix-sha256
           .
           "13pbp3p0ax6c0ivzglmry3d2klp3z4293c0v0q5k7rsb80349xxj")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:georges.duperon@gmail.com . #t)
                   (experimental . #t)
                   (ring:1 . #t)
                   (syntax . #t)
                   (syntax-parse . #t)))
          (source
           .
           "https://github.com/jsmaniac/extensible-parser-specifications.git")
          (tags . ("experimental" "syntax" "syntax-parse"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "0204fd4f47902c1545ccbfee764dd2c161456258")
                          (source
                           .
                           "https://github.com/jsmaniac/extensible-parser-specifications.git")
                          (source_url
                           .
                           "https://github.com/jsmaniac/extensible-parser-specifications.git")))))))
 ("fancy-app"
  .
  #hasheq((author . "samth@ccs.neu.edu")
          (authors . ("samth@ccs.neu.edu"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "fancy-app" "doc/fancy-app@fancy-app/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/fancy-app.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/fancy-app.txt")))
          (checksum . "d137c55d5d29f4bc0dd2c8f316dc30521c1cb592")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "racket-doc" "scribble-lib"))
          (dependency-names . ("base" "racket-doc" "scribble-lib"))
          (description . "Scala-style anonymous functions")
          (implies . ())
          (last-checked . 1557339548)
          (last-edit . 1410271467)
          (last-updated . 1503265114)
          (modules
           .
           ((lib "fancy-app/main.scrbl") (lib "fancy-app/main.rkt")))
          (name . "fancy-app")
          (nix-sha256
           .
           "0jx4qa449ysz9li19gg6mhg070hyvp7lrvcva8337r1nc1bakdxc")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:samth@ccs.neu.edu . #t)
                   (ring:1 . #t)
                   (syntax . #t)))
          (source . "github://github.com/samth/fancy-app/master")
          (tags . ("syntax"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "d137c55d5d29f4bc0dd2c8f316dc30521c1cb592")
                          (source
                           .
                           "github://github.com/samth/fancy-app/master")
                          (source_url
                           .
                           "http://github.com/samth/fancy-app/tree/master")))))))
 ("fast-convert"
  .
  #hasheq((author . "kalimehtar@mail.ru")
          (authors . ("kalimehtar@mail.ru"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "fast-convert"
                    "doc/fast-convert@fast-convert/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/fast-convert.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/fast-convert.txt")))
          (checksum . "2420aeb2ce8c7fb3e14d0ee1d560c33e16aa1b80")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "rackunit-lib" "scribble-lib" "racket-doc"))
          (dependency-names
           .
           ("base" "rackunit-lib" "scribble-lib" "racket-doc"))
          (description
           .
           "Fast conversion from bytes to string  for one-byte encoding")
          (implies . ())
          (last-checked . 1557339548)
          (last-edit . 1407086328)
          (last-updated . 1502815959)
          (modules
           .
           ((lib "fast-convert/main.rkt")
            (lib "fast-convert/fast-convert.scrbl")))
          (name . "fast-convert")
          (nix-sha256
           .
           "1rnfvnm91r4pn099097k1hw70sjydh9jcmsjmfp2i2yakjzh4hgw")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:kalimehtar@mail.ru . #t)
                   (dev . #t)
                   (performance . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/Kalimehtar/fast-convert")
          (tags . ("dev" "performance"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "2420aeb2ce8c7fb3e14d0ee1d560c33e16aa1b80")
                          (source
                           .
                           "git://github.com/Kalimehtar/fast-convert")
                          (source_url
                           .
                           "http://github.com/Kalimehtar/fast-convert/tree/master")))))))
 ("faster-minikanren"
  .
  #hasheq((author . "michael.ballantyne@gmail.com")
          (authors . ("michael.ballantyne@gmail.com"))
          (build
           .
           #hash((conflicts-log . "conflicts.txt")
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/faster-minikanren.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/faster-minikanren.txt")))
          (checksum . "a2a4a80cebbdd4845a3b800aefc292956071b70c")
          (checksum-error . #f)
          (conflicts . ("minikanren"))
          (dependencies . ("base"))
          (dependency-names . ("base"))
          (description
           .
           "A fast implementation of miniKanren with disequality and absento.")
          (implies . ())
          (last-checked . 1557339548)
          (last-edit . 1474776335)
          (last-updated . 1539630796)
          (modules
           .
           ((lib "minikanren/matche.rkt")
            (lib "minikanren/full-interp.rkt")
            (lib "minikanren/simple-interp.rkt")
            (lib "minikanren/numbers.rkt")
            (lib "minikanren/mk.rkt")
            (lib "minikanren/main.rkt")))
          (name . "faster-minikanren")
          (nix-sha256
           .
           "00d4nvddrqq1frnbjfbw897394nvs82f0d364fq09r45as23ymsv")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-conflicts: . #t)
                   (:build-success: . #t)
                   (:conflicts: . #t)
                   (:no-tag: . #t)
                   (author:michael.ballantyne@gmail.com . #t)
                   (ring:2 . #t)))
          (source . "git://github.com/michaelballantyne/faster-miniKanren")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "a2a4a80cebbdd4845a3b800aefc292956071b70c")
                          (source
                           .
                           "git://github.com/michaelballantyne/faster-miniKanren")
                          (source_url
                           .
                           "http://github.com/michaelballantyne/faster-miniKanren/tree/master")))))))
 ("feature-profile"
  .
  #hasheq((author . "stamourv@racket-lang.org")
          (authors . ("stamourv@racket-lang.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "feature-profile"
                    "doc/feature-profile@feature-profile/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/feature-profile.txt")
                 (test-failure-log
                  .
                  "server/built/test-fail/feature-profile.txt")
                 (test-success-log . #f)))
          (checksum . "cc96e3aa8efe71c013f662c60e2b0d9231b27f97")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           (("base" #:version "6.3")
            "contract-profile"
            "profile-lib"
            "rackunit-lib"
            "scribble-lib"
            "racket-doc"
            "sandbox-lib"))
          (dependency-names
           .
           ("base"
            "contract-profile"
            "profile-lib"
            "rackunit-lib"
            "scribble-lib"
            "racket-doc"
            "sandbox-lib"))
          (description
           .
           "Profile that measures time spent in language/library features")
          (implies . ())
          (last-checked . 1557339549)
          (last-edit . 1398968923)
          (last-updated . 1504303442)
          (modules
           .
           ((lib "feature-profile/main.rkt")
            (lib "feature-profile/examples/matrix-mult.rkt")
            (lib "feature-profile/tree-walker.rkt")
            (lib "feature-profile/examples/word-wrap.rkt")
            (lib "feature-profile/plug-in-lib.rkt")
            (lib "feature-profile/profile-helpers.rkt")
            (lib "feature-profile/scribblings/feature-profile.scrbl")
            (lib "feature-profile/utils.rkt")
            (lib "feature-profile/examples/run-all.rkt")
            (lib "feature-profile/structs.rkt")
            (lib "feature-profile/features.rkt")
            (lib "feature-profile/examples/fizzbuzz.rkt")
            (lib "feature-profile/examples/composition.rkt")
            (lib "feature-profile/raco.rkt")))
          (name . "feature-profile")
          (nix-sha256
           .
           "0yymgv192qfpy6smynk3xafzf9j95hjvhgg1h7gxnd3r4wg6hw91")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:stamourv@racket-lang.org . #t)
                   (dev . #t)
                   (performance . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/stamourv/feature-profile#master")
          (tags . ("dev" "performance"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "cc96e3aa8efe71c013f662c60e2b0d9231b27f97")
                          (source
                           .
                           "git://github.com/stamourv/feature-profile#master")
                          (source_url
                           .
                           "http://github.com/stamourv/feature-profile/tree/master#master")))
                 ("6.2"
                  .
                  #hasheq((checksum
                           .
                           "fb1303c585ec4de440f325d21d21b9030bc742e5")
                          (source
                           .
                           "github://github.com/stamourv/feature-profile/racket-6.2")
                          (source_url
                           .
                           "http://github.com/stamourv/feature-profile/tree/racket-6.2")))
                 ("6.3"
                  .
                  #hasheq((checksum
                           .
                           "ef1ee21c9974b8c9b109a0bed5bff4655116c094")
                          (source
                           .
                           "github://github.com/stamourv/feature-profile/racket-6.3")
                          (source_url
                           .
                           "http://github.com/stamourv/feature-profile/tree/racket-6.3")))))))
 ("fector"
  .
  #hasheq((author . "dvanhorn@racket-lang.org")
          (authors . ("dvanhorn@racket-lang.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/fector.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/fector.txt")))
          (checksum . "269812d67549fbd77273f5025a4144214d790081")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base"))
          (dependency-names . ("base"))
          (description . "Persistent Functional Vectors")
          (implies . ())
          (last-checked . 1557339549)
          (last-edit . 1354604413)
          (last-updated . 1502815960)
          (modules . ((lib "data/fector.rkt") (lib "data/fector/fast.rkt")))
          (name . "fector")
          (nix-sha256
           .
           "0v07ignzw06dmx2fzdi8rkz92z51ynlbmvd1j3dgjpyxlgzjg5g9")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:dvanhorn@racket-lang.org . #t)
                   (data . #t)
                   (ring:1 . #t)))
          (source . "github://github.com/dvanhorn/fector/master")
          (tags . ("data"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "269812d67549fbd77273f5025a4144214d790081")
                          (source
                           .
                           "github://github.com/dvanhorn/fector/master")
                          (source_url
                           .
                           "http://github.com/dvanhorn/fector/tree/master")))))))
 ("ffi-definer-convention"
  .
  #hasheq((author . "asumu@ccs.neu.edu")
          (authors . ("asumu@ccs.neu.edu"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "ffi-definer-convention"
                    "doc/ffi-definer-convention@ffi-definer-convention/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log
                  .
                  "server/built/install/ffi-definer-convention.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/ffi-definer-convention.txt")))
          (checksum . "5b6a361adeb1f079b9fabc80055ce592152a9d9a")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "racket-doc" "scribble-lib"))
          (dependency-names . ("base" "racket-doc" "scribble-lib"))
          (description
           .
           "No longer necessary in 6.9.0.5 and newer (it's built-in to the ffi library now)")
          (implies . ())
          (last-checked . 1557339549)
          (last-edit . 1504809486)
          (last-updated . 1502815960)
          (modules
           .
           ((lib "ffi-definer-convention/ffi-definer-convention.scrbl")
            (lib "ffi-definer-convention/main.rkt")
            (lib "ffi-definer-convention/conventions.rkt")
            (lib "ffi-definer-convention/test.rkt")))
          (name . "ffi-definer-convention")
          (nix-sha256
           .
           "0076lrl9hmdnmy0n0yn1dk6kriwv46lmi0vr0ljsm4kz6s4c9lz3")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:asumu@ccs.neu.edu . #t)
                   (ffi . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/takikawa/racket-ffi-definer-convention")
          (tags . ("ffi"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "5b6a361adeb1f079b9fabc80055ce592152a9d9a")
                          (source
                           .
                           "git://github.com/takikawa/racket-ffi-definer-convention")
                          (source_url
                           .
                           "http://github.com/takikawa/racket-ffi-definer-convention/tree/master")))))))
 ("ffi-utils"
  .
  #hasheq((author . "scott@thinkmoore.net")
          (authors . ("scott@thinkmoore.net"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("none" "ffi-utils")))
                 (failure-log . "server/built/fail/ffi-utils.txt")
                 (min-failure-log . #f)
                 (success-log . #f)
                 (test-failure-log . #f)
                 (test-success-log . #f)))
          (checksum . "20fd038aad7978f6613a78cc48fae1358b90089d")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "rackunit-lib" "scribble-lib" "racket-doc"))
          (dependency-names
           .
           ("base" "rackunit-lib" "scribble-lib" "racket-doc"))
          (description . "Helpful tools for writing FFI interfaces to C")
          (implies . ())
          (last-checked . 1557339549)
          (last-edit . 1487854746)
          (last-updated . 1502815960)
          (modules
           .
           ((lib "ffi-utils/scribblings/ffi-utils.scrbl")
            (lib "ffi-utils/errno.rkt")
            (lib "ffi-utils/private/generate-errno.rkt")
            (lib "ffi-utils/data.rkt")
            (lib "ffi-utils/private/includes.rkt")))
          (name . "ffi-utils")
          (nix-sha256
           .
           "1g1v39s9czwb0qhjpxm00ssx1rw3dk0r6wbd7gkcd08sysxl07lx")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-fail: . #t)
                   (:docs-error: . #t)
                   (author:scott@thinkmoore.net . #t)
                   (ffi . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/thinkmoore/ffi-utils")
          (tags . ("ffi"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "20fd038aad7978f6613a78cc48fae1358b90089d")
                          (source . "git://github.com/thinkmoore/ffi-utils")
                          (source_url
                           .
                           "http://github.com/thinkmoore/ffi-utils/tree/master")))))))
 ("ffmpeg-i386-win32"
  .
  #hasheq((author . "leif@leifandersen.net")
          (authors . ("leif@leifandersen.net"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . "server/built/fail/ffmpeg-i386-win32.txt")
                 (min-failure-log . #f)
                 (success-log . #f)
                 (test-failure-log . #f)
                 (test-success-log . #f)))
          (checksum . "61c4b07ffd82127a049cf12f74c09c20730eba1d")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base"))
          (dependency-names . ("base"))
          (description . "")
          (implies . ())
          (last-checked . 1557339589)
          (last-edit . 1497318984)
          (last-updated . 1546557076)
          (modules . ())
          (name . "ffmpeg-i386-win32")
          (nix-sha256
           .
           "0mqw649562qx823iw76q5v8m40z2n5psbhva6r7n53497a83hmpn")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-fail: . #t)
                   (:no-desc: . #t)
                   (author:leif@leifandersen.net . #t)
                   (ffmpeg . #t)
                   (ring:1 . #t)
                   (video . #t)))
          (source
           .
           "git://github.com/videolang/native-pkgs?path=ffmpeg-i386-win32")
          (tags . ("ffmpeg" "video"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "61c4b07ffd82127a049cf12f74c09c20730eba1d")
                          (source
                           .
                           "git://github.com/videolang/native-pkgs?path=ffmpeg-i386-win32")
                          (source_url
                           .
                           "http://github.com/videolang/native-pkgs/tree/master?path=ffmpeg-i386-win32")))))))
 ("ffmpeg-i386-win32-3-4"
  .
  #hasheq((author . "leif@leifandersen.net")
          (authors . ("leif@leifandersen.net"))
          (build
           .
           #hash((conflicts-log . "conflicts.txt")
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log
                  .
                  "server/built/install/ffmpeg-i386-win32-3-4.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/ffmpeg-i386-win32-3-4.txt")))
          (checksum . "e8fb290d38e90800ffa1d105dbb540d28f931807")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base"))
          (dependency-names . ("base"))
          (description . "")
          (implies . ())
          (last-checked . 1557339589)
          (last-edit . 1528476372)
          (last-updated . 1528476372)
          (modules . ())
          (name . "ffmpeg-i386-win32-3-4")
          (nix-sha256
           .
           "1h5nrhdlb9z89vx4irrzxcpc7zgpyjk1vy6yc598yfq1hskmwjvl")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-conflicts: . #t)
                   (:build-success: . #t)
                   (:no-desc: . #t)
                   (author:leif@leifandersen.net . #t)
                   (ffmpeg . #t)
                   (ring:2 . #t)
                   (video . #t)))
          (source
           .
           "https://github.com/videolang/native-pkgs.git?path=ffmpeg-i386-win32#ffmpeg-3.4")
          (tags . ("ffmpeg" "video"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "e8fb290d38e90800ffa1d105dbb540d28f931807")
                          (source
                           .
                           "https://github.com/videolang/native-pkgs.git?path=ffmpeg-i386-win32#ffmpeg-3.4")
                          (source_url
                           .
                           "https://github.com/videolang/native-pkgs.git?path=ffmpeg-i386-win32#ffmpeg-3.4")))))))
 ("ffmpeg-x86_64-macosx"
  .
  #hasheq((author . "leif@leifandersen.net")
          (authors . ("leif@leifandersen.net"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log
                  .
                  "server/built/install/ffmpeg-x86_64-macosx.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/ffmpeg-x86_64-macosx.txt")))
          (checksum . "61c4b07ffd82127a049cf12f74c09c20730eba1d")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base"))
          (dependency-names . ("base"))
          (description . "")
          (implies . ())
          (last-checked . 1557339589)
          (last-edit . 1497318909)
          (last-updated . 1546557143)
          (modules . ())
          (name . "ffmpeg-x86_64-macosx")
          (nix-sha256
           .
           "0mqw649562qx823iw76q5v8m40z2n5psbhva6r7n53497a83hmpn")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:no-desc: . #t)
                   (author:leif@leifandersen.net . #t)
                   (ffmpeg . #t)
                   (ring:1 . #t)
                   (video . #t)))
          (source
           .
           "git://github.com/videolang/native-pkgs?path=ffmpeg-x86_64-macosx")
          (tags . ("ffmpeg" "video"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "61c4b07ffd82127a049cf12f74c09c20730eba1d")
                          (source
                           .
                           "git://github.com/videolang/native-pkgs?path=ffmpeg-x86_64-macosx")
                          (source_url
                           .
                           "http://github.com/videolang/native-pkgs/tree/master?path=ffmpeg-x86_64-macosx")))))))
 ("ffmpeg-x86_64-macosx-3-4"
  .
  #hasheq((author . "leif@leifandersen.net")
          (authors . ("leif@leifandersen.net"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log
                  .
                  "server/built/install/ffmpeg-x86_64-macosx-3-4.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/ffmpeg-x86_64-macosx-3-4.txt")))
          (checksum . "e8fb290d38e90800ffa1d105dbb540d28f931807")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "openh264-x86_64-macosx"))
          (dependency-names . ("base" "openh264-x86_64-macosx"))
          (description . "Bindings for ffmpeg 3.4")
          (implies . ())
          (last-checked . 1557339589)
          (last-edit . 1528476144)
          (last-updated . 1528476144)
          (modules . ())
          (name . "ffmpeg-x86_64-macosx-3-4")
          (nix-sha256
           .
           "1h5nrhdlb9z89vx4irrzxcpc7zgpyjk1vy6yc598yfq1hskmwjvl")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:leif@leifandersen.net . #t)
                   (ffmpeg . #t)
                   (ring:2 . #t)
                   (video . #t)))
          (source
           .
           "https://github.com/videolang/native-pkgs.git?path=ffmpeg-x86_64-macosx#ffmpeg-3.4")
          (tags . ("ffmpeg" "video"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "e8fb290d38e90800ffa1d105dbb540d28f931807")
                          (source
                           .
                           "https://github.com/videolang/native-pkgs.git?path=ffmpeg-x86_64-macosx#ffmpeg-3.4")
                          (source_url
                           .
                           "https://github.com/videolang/native-pkgs.git?path=ffmpeg-x86_64-macosx#ffmpeg-3.4")))))))
 ("ffmpeg-x86_64-win32"
  .
  #hasheq((author . "leif@leifandersen.net")
          (authors . ("leif@leifandersen.net"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . "server/built/fail/ffmpeg-x86_64-win32.txt")
                 (min-failure-log . #f)
                 (success-log . #f)
                 (test-failure-log . #f)
                 (test-success-log . #f)))
          (checksum . "61c4b07ffd82127a049cf12f74c09c20730eba1d")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base"))
          (dependency-names . ("base"))
          (description . "")
          (implies . ())
          (last-checked . 1557339589)
          (last-edit . 1497318946)
          (last-updated . 1546557210)
          (modules . ())
          (name . "ffmpeg-x86_64-win32")
          (nix-sha256
           .
           "0mqw649562qx823iw76q5v8m40z2n5psbhva6r7n53497a83hmpn")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-fail: . #t)
                   (:no-desc: . #t)
                   (author:leif@leifandersen.net . #t)
                   (ffmpeg . #t)
                   (ring:1 . #t)
                   (video . #t)))
          (source
           .
           "git://github.com/videolang/native-pkgs?path=ffmpeg-x86_64-win32")
          (tags . ("ffmpeg" "video"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "61c4b07ffd82127a049cf12f74c09c20730eba1d")
                          (source
                           .
                           "git://github.com/videolang/native-pkgs?path=ffmpeg-x86_64-win32")
                          (source_url
                           .
                           "http://github.com/videolang/native-pkgs/tree/master?path=ffmpeg-x86_64-win32")))))))
 ("ffmpeg-x86_64-win32-3-4"
  .
  #hasheq((author . "leif@leifandersen.net")
          (authors . ("leif@leifandersen.net"))
          (build
           .
           #hash((conflicts-log . "conflicts.txt")
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log
                  .
                  "server/built/install/ffmpeg-x86_64-win32-3-4.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/ffmpeg-x86_64-win32-3-4.txt")))
          (checksum . "e8fb290d38e90800ffa1d105dbb540d28f931807")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base"))
          (dependency-names . ("base"))
          (description . "")
          (implies . ())
          (last-checked . 1557339589)
          (last-edit . 1528476424)
          (last-updated . 1528476424)
          (modules . ())
          (name . "ffmpeg-x86_64-win32-3-4")
          (nix-sha256
           .
           "1h5nrhdlb9z89vx4irrzxcpc7zgpyjk1vy6yc598yfq1hskmwjvl")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-conflicts: . #t)
                   (:build-success: . #t)
                   (:no-desc: . #t)
                   (author:leif@leifandersen.net . #t)
                   (ffmpeg . #t)
                   (ring:2 . #t)
                   (video . #t)))
          (source
           .
           "https://github.com/videolang/native-pkgs.git?path=ffmpeg-x86_64-win32#ffmpeg-3.4")
          (tags . ("ffmpeg" "video"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "e8fb290d38e90800ffa1d105dbb540d28f931807")
                          (source
                           .
                           "https://github.com/videolang/native-pkgs.git?path=ffmpeg-x86_64-win32#ffmpeg-3.4")
                          (source_url
                           .
                           "https://github.com/videolang/native-pkgs.git?path=ffmpeg-x86_64-win32#ffmpeg-3.4")))))))
 ("file-metadata"
  .
  #hasheq((author . "david.storrs@gmail.com")
          (authors . ("david.storrs@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . "server/built/deps/file-metadata.txt")
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/file-metadata.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/file-metadata.txt")))
          (checksum . "d8f90fdd911e0e97b754cb74d5963f2c3c465637")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ())
          (dependency-names . ())
          (description
           .
           "Answer various questions about a file, e.g. \"Is this a gzip file?\"  \r\n\r\nTHIS IS VERY ALPHA.  Currently only supports the 'is it a gzip' question, code is ugly, etc.")
          (implies . ())
          (last-checked . 1557339589)
          (last-edit . 1536690185)
          (last-updated . 1536695915)
          (modules
           .
           ((lib "file-metadata/tests/test_main.rkt")
            (lib "file-metadata/main.rkt")
            (lib "file-metadata/definitions/gzip.rkt")))
          (name . "file-metadata")
          (nix-sha256
           .
           "15rr8x1a6j0vi05lqazwch8fwxmh4k5k45c4zkdlamcg6lhd1qar")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-dep-fail: . #t)
                   (:build-success: . #t)
                   (author:david.storrs@gmail.com . #t)
                   (file . #t)
                   (metadata . #t)
                   (ring:2 . #t)))
          (source . "https://github.com/dstorrs/file-metadata.git")
          (tags . ("file" "metadata"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "d8f90fdd911e0e97b754cb74d5963f2c3c465637")
                          (source
                           .
                           "https://github.com/dstorrs/file-metadata.git")
                          (source_url
                           .
                           "https://github.com/dstorrs/file-metadata.git")))))))
 ("files-viewer"
  .
  #hasheq((author . "1227847322@qq.com")
          (authors . ("1227847322@qq.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "files-viewer"
                    "doc/files-viewer@files-viewer/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/files-viewer.txt")
                 (test-failure-log
                  .
                  "server/built/test-fail/files-viewer.txt")
                 (test-success-log . #f)))
          (checksum . "ba1aad28664801711afe9588421040ff74d58100")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "gui-lib"
            "drracket"
            "rackunit-lib"
            "scheme-lib"
            "compatibility-lib"
            "scribble-lib"
            "pict-lib"))
          (dependency-names
           .
           ("base"
            "gui-lib"
            "drracket"
            "rackunit-lib"
            "scheme-lib"
            "compatibility-lib"
            "scribble-lib"
            "pict-lib"))
          (description . "a file manager for drracket")
          (implies . ())
          (last-checked . 1557339589)
          (last-edit . 1530752368)
          (last-updated . 1555045445)
          (modules
           .
           ((lib "files-viewer/private/info-instructor.rkt")
            (lib "files-viewer/private/main.rkt")
            (lib "files-viewer/private/contents.rkt")
            (lib "files-viewer/private/gui-helpers.rkt")
            (lib "files-viewer/private/rename-dialog.rkt")
            (lib "files-viewer/private/dir-control.rkt")
            (lib "files-viewer/hierlist/hierlist-unit.rkt")
            (lib "files-viewer/private/terminal.rkt")
            (lib "files-viewer/tool.rkt")
            (lib "files-viewer/private/popup-menu.rkt")
            (lib "files-viewer/hierlist/hierlist.rkt")
            (lib "files-viewer/hierlist/hierlist-sig.rkt")
            (lib "files-viewer/private/file-filters.rkt")
            (lib "files-viewer/private/fschange.rkt")
            (lib "files-viewer/private/path-helpers.rkt")
            (lib "files-viewer/scribblings/files-viewer.scrbl")))
          (name . "files-viewer")
          (nix-sha256
           .
           "128fi5lkrly73vlzrbjwi7qi513429m2z591n9p7xqgh3bad4iqf")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:1227847322@qq.com . #t)
                   (file-manager . #t)
                   (ring:2 . #t)))
          (source . "https://github.com/MatrixForChange/files-viewer.git")
          (tags . ("file-manager"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "ba1aad28664801711afe9588421040ff74d58100")
                          (source
                           .
                           "https://github.com/MatrixForChange/files-viewer.git")
                          (source_url
                           .
                           "https://github.com/MatrixForChange/files-viewer.git")))))))
 ("finalizer"
  .
  #hasheq((author . "kalimehtar@mail.ru")
          (authors . ("kalimehtar@mail.ru"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "finalizer" "doc/finalizer@finalizer/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/finalizer.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/finalizer.txt")))
          (checksum . "74517770d70b786a3df48fd20ea9ea8059e4a641")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "scribble-lib" "racket-doc"))
          (dependency-names . ("base" "scribble-lib" "racket-doc"))
          (description
           .
           "Trivial finalizer. Does action when object garbage collected")
          (implies . ())
          (last-checked . 1557339590)
          (last-edit . 1407088564)
          (last-updated . 1502816067)
          (modules
           .
           ((lib "finalizer/main.rkt") (lib "finalizer/finalizer.scrbl")))
          (name . "finalizer")
          (nix-sha256
           .
           "0330q6n7s1zvszh3x8x47njhdm1v7l3kamwnsrgplp6hjchl4i5w")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:kalimehtar@mail.ru . #t)
                   (dev . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/Kalimehtar/finalizer")
          (tags . ("dev"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "74517770d70b786a3df48fd20ea9ea8059e4a641")
                          (source . "git://github.com/Kalimehtar/finalizer")
                          (source_url
                           .
                           "http://github.com/Kalimehtar/finalizer/tree/master")))))))
 ("find-parent-dir"
  .
  #hasheq((author . "samth@ccs.neu.edu eric.hanchrow@gmail.com")
          (authors . ("samth@ccs.neu.edu" "eric.hanchrow@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/find-parent-dir.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/find-parent-dir.txt")))
          (checksum . "e78d0277447d81934847166e8024edc5adea4b1c")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base"))
          (dependency-names . ("base"))
          (description . "Find parent directories matching a criterion.")
          (implies . ())
          (last-checked . 1557339590)
          (last-edit . 1381252407)
          (last-updated . 1502816067)
          (modules . ((lib "find-parent-dir/main.rkt")))
          (name . "find-parent-dir")
          (nix-sha256
           .
           "0h2ssvpc6iz1aw4j1lqcw7rdy2rjxm78rdq8gvap9m8vr0vsak2x")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:eric.hanchrow@gmail.com . #t)
                   (author:samth@ccs.neu.edu . #t)
                   (file-system . #t)
                   (ring:1 . #t)))
          (source . "github://github.com/samth/find-parent-dir/master")
          (tags . ("file-system"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "e78d0277447d81934847166e8024edc5adea4b1c")
                          (source
                           .
                           "github://github.com/samth/find-parent-dir/master")
                          (source_url
                           .
                           "http://github.com/samth/find-parent-dir/tree/master")))))))
 ("fixture"
  .
  #hasheq((author . "jackhfirth@gmail.com")
          (authors . ("jackhfirth@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "fixture" "doc/fixture@fixture/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/fixture.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/fixture.txt")))
          (checksum . "fafde5528ad6491cd9e87c078f9838eabc524a87")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("reprovide-lang"
            "fancy-app"
            ("rackunit-lib" #:version "1.8")
            "base"
            ("disposable" #:version "0.2")
            "doc-coverage"
            "racket-doc"
            "rackunit-doc"
            "scribble-lib"))
          (dependency-names
           .
           ("reprovide-lang"
            "fancy-app"
            "rackunit-lib"
            "base"
            "disposable"
            "doc-coverage"
            "racket-doc"
            "rackunit-doc"
            "scribble-lib"))
          (description
           .
           "Provides test fixtures: resources that are automatically created and destroyed for each RackUnit test case")
          (implies . ())
          (last-checked . 1557339590)
          (last-edit . 1504200527)
          (last-updated . 1505795359)
          (modules
           .
           ((lib "fixture/main.rkt")
            (lib "fixture/scribblings/main.scrbl")
            (lib "fixture/rackunit.rkt")
            (lib "fixture/tests/main.rkt")
            (lib "fixture/base.rkt")
            (lib "fixture/scribblings/base.rkt")
            (lib "fixture/tests/util.rkt")
            (lib "fixture/scribblings/util.rkt")))
          (name . "fixture")
          (nix-sha256
           .
           "0mwf1wp4v2w1l0k4q6c5hqajrch37aypn2rbfymwc6zfmgw3ikld")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:jackhfirth@gmail.com . #t)
                   (disposable . #t)
                   (experimental . #t)
                   (io . #t)
                   (rackunit . #t)
                   (ring:1 . #t)
                   (testing . #t)))
          (source . "git://github.com/jackfirth/racket-fixture")
          (tags . ("disposable" "experimental" "io" "rackunit" "testing"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "fafde5528ad6491cd9e87c078f9838eabc524a87")
                          (source
                           .
                           "git://github.com/jackfirth/racket-fixture")
                          (source_url
                           .
                           "http://github.com/jackfirth/racket-fixture/tree/master")))))))
 ("flexpr"
  .
  #hasheq((author . "greghendershott@gmail.com")
          (authors . ("greghendershott@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "flexpr" "doc/flexpr@flexpr/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/flexpr.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/flexpr.txt")))
          (checksum . "a547ca94094a2090f12b0028b634da0b08d42df8")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            ("racket" "6.0.1")
            "at-exp-lib"
            "racket-doc"
            "rackunit-lib"
            "sandbox-lib"
            "scribble-lib"))
          (dependency-names
           .
           ("base"
            "at-exp-lib"
            "racket-doc"
            "rackunit-lib"
            "sandbox-lib"
            "scribble-lib"))
          (description . " Expressions rendered as both XML and JSON")
          (implies . ())
          (last-checked . 1557339590)
          (last-edit . 1503266391)
          (last-updated . 1502816068)
          (modules . ((lib "flexpr/main.rkt") (lib "flexpr/flexpr.scrbl")))
          (name . "flexpr")
          (nix-sha256
           .
           "09iv9ghib5afsh38ivc6av998pl9avdsbpww0l8m1875zcsaf006")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:greghendershott@gmail.com . #t)
                   (json . #t)
                   (ring:1 . #t)
                   (xml . #t)))
          (source . "git://github.com/greghendershott/flexpr")
          (tags . ("json" "xml"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "a547ca94094a2090f12b0028b634da0b08d42df8")
                          (source . "git://github.com/greghendershott/flexpr")
                          (source_url
                           .
                           "http://github.com/greghendershott/flexpr/tree/master")))))))
 ("fme"
  .
  #hasheq((author . "sgtamk@gmail.com")
          (authors . ("sgtamk@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "fme" "doc/fme@fme/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/fme.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/fme.txt")))
          (checksum . "63075d432e7803b2822a78568306c29a6fde557c")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "rackunit-lib" "racket-doc" "scribble-lib"))
          (dependency-names
           .
           ("base" "rackunit-lib" "racket-doc" "scribble-lib"))
          (description
           .
           "Fourier-Motzkin elimination for integer inequality satisfiability")
          (implies . ())
          (last-checked . 1557339590)
          (last-edit . 1476382380)
          (last-updated . 1502816068)
          (modules
           .
           ((lib "fme/main.rkt")
            (lib "fme/private/fme.rkt")
            (lib "fme/private/leq.rkt")
            (lib "fme/private/fme-utils.rkt")
            (lib "fme/private/benchmarks.rkt")
            (lib "fme/fme.scrbl")
            (lib "fme/private/lexp.rkt")))
          (name . "fme")
          (nix-sha256
           .
           "09yf25ffg893845ri79if6gqdpzbipvkvxl58gbdgg408y75f7bi")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:sgtamk@gmail.com . #t)
                   (math . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/pnwamk/fme#master")
          (tags . ("math"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "63075d432e7803b2822a78568306c29a6fde557c")
                          (source . "git://github.com/pnwamk/fme#master")
                          (source_url
                           .
                           "http://github.com/pnwamk/fme/tree/master#master")))))))
 ("fontconfig"
  .
  #hasheq((author . "asumu@ccs.neu.edu")
          (authors . ("asumu@ccs.neu.edu"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . "server/built/deps/fontconfig.txt")
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/fontconfig.txt")
                 (test-failure-log . "server/built/test-fail/fontconfig.txt")
                 (test-success-log . #f)))
          (checksum . "cfa089d34fada1751f7fca40aa59515c640e6ef6")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" ("ffi-definer-convention" #:version "0.2")))
          (dependency-names . ("base" "ffi-definer-convention"))
          (description . "")
          (implies . ())
          (last-checked . 1557339590)
          (last-edit . 1470935449)
          (last-updated . 1502816068)
          (modules
           .
           ((lib "fontconfig/main.rkt")
            (lib "fontconfig/fontconfig.rkt")
            (lib "fontconfig/test.rkt")))
          (name . "fontconfig")
          (nix-sha256
           .
           "0mlc5iyfyl8r8r5ijbhzi15mq0wxdc7r1izrmapis2vpsg72x0j5")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-dep-fail: . #t)
                   (:build-success: . #t)
                   (:no-desc: . #t)
                   (author:asumu@ccs.neu.edu . #t)
                   (ffi . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/takikawa/racket-fontconfig")
          (tags . ("ffi"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "cfa089d34fada1751f7fca40aa59515c640e6ef6")
                          (source
                           .
                           "git://github.com/takikawa/racket-fontconfig")
                          (source_url
                           .
                           "http://github.com/takikawa/racket-fontconfig/tree/master")))))))
 ("fontland"
  .
  #hasheq((author . "mb@mbtype.com")
          (authors . ("mb@mbtype.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/fontland.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/fontland.txt")))
          (checksum . "87a5090c774790cc42e21ca341885a57473f4dd4")
          (checksum-error . #f)
          (conflicts . ())
          (date-added . 1556661206)
          (dependencies
           .
           ("crc32c"
            "db-lib"
            "base"
            "beautiful-racket-lib"
            "debug"
            "draw-lib"
            "rackunit-lib"
            "sugar"
            "xenomorph"))
          (dependency-names
           .
           ("crc32c"
            "db-lib"
            "base"
            "beautiful-racket-lib"
            "debug"
            "draw-lib"
            "rackunit-lib"
            "sugar"
            "xenomorph"))
          (description . "font processing [in development]")
          (implies . ())
          (last-checked . 1557339590)
          (last-edit . 1556661206)
          (last-updated . 1556737450)
          (modules
           .
           ((lib "fontland/table/cff/cff-font.rkt")
            (lib "fontland/test/glyphs.rkt")
            (lib "fontland/main.rkt")
            (lib "fontland/font.rkt")
            (lib "fontland/table/cvt_.rkt")
            (lib "fontland/table/cff/cff-struct.rkt")
            (lib "fontland/test/directory.rkt")
            (lib "fontland/unsafe/harfbuzz-helper.rkt")
            (lib "fontland/path.rkt")
            (lib "fontland/table/cff/cff-operand.rkt")
            (lib "fontland/table/prep.rkt")
            (lib "fontland/table/cff/cff-pointer.rkt")
            (lib "fontland/deque.rkt")
            (lib "fontland/test/metadata.rkt")
            (lib "fontland/table/cff/cff-encodings.rkt")
            (lib "fontland/table/glyf.rkt")
            (lib "fontland/unsafe/harfbuzz.rkt")
            (lib "fontland/table-stream.rkt")
            (lib "fontland/glyphrun.rkt")
            (lib "fontland/subset.rkt")
            (lib "fontland/glyph-position.rkt")
            (lib "fontland/directory.rkt")
            (lib "fontland/table/hmtx.rkt")
            (lib "fontland/test/subset.rkt")
            (lib "fontland/table/hhea.rkt")
            (lib "fontland/table/loca.rkt")
            (lib "fontland/table/CFF_.rkt")
            (lib "fontland/table/cff/cff-index.rkt")
            (lib "fontland/helper.rkt")
            (lib "fontland/script.rkt")
            (lib "fontland/test/index.rkt")
            (lib "fontland/table/cff/cff-private-dict.rkt")
            (lib "fontland/unsafe/freetype.rkt")
            (lib "fontland/test/glyph_mapping.rkt")
            (lib "fontland/table/cff/cff-standard-strings.rkt")
            (lib "fontland/table/maxp.rkt")
            (lib "fontland/bbox.rkt")
            (lib "fontland/table/cff/cff-dict.rkt")
            (lib "fontland/table/fpgm.rkt")
            (lib "fontland/struct.rkt")
            (lib "fontland/table/post.rkt")
            (lib "fontland/cff-glyph.rkt")
            (lib "fontland/table/cff/cff-charsets.rkt")
            (lib "fontland/table/head.rkt")
            (lib "fontland/table/OS2.rkt")
            (lib "fontland/table/cff/cff-top.rkt")
            (lib "fontland/ttf-glyph.rkt")
            (lib "fontland/glyph.rkt")
            (lib "fontland/db.rkt")
            (lib "fontland/tables.rkt")))
          (name . "fontland")
          (nix-sha256
           .
           "09yzw5rkisl5kwlal7zhgm7glps1irzlfqzp9ww6f8ml2x8s5czs")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:mb@mbtype.com . #t)
                   (fonts . #t)
                   (ring:2 . #t)))
          (source . "https://github.com/mbutterick/fontland.git")
          (tags . ("fonts"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "87a5090c774790cc42e21ca341885a57473f4dd4")
                          (source
                           .
                           "https://github.com/mbutterick/fontland.git")
                          (source_url
                           .
                           "https://github.com/mbutterick/fontland.git")))))))
 ("forms"
  .
  #hasheq((author . "bogdan@defn.io")
          (authors . ("bogdan@defn.io"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/forms.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/forms.txt")))
          (checksum . "30cb92bd59156493b44ac20e8e1b29fdb09b8f36")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("forms-doc" "forms-lib"))
          (dependency-names . ("forms-doc" "forms-lib"))
          (description . "Web form validation (docs and implementation).")
          (implies . ("forms-doc" "forms-lib"))
          (last-checked . 1557339591)
          (last-edit . 1547764555)
          (last-updated . 1556226250)
          (modules . ())
          (name . "forms")
          (nix-sha256
           .
           "1wva05x5p8p56x7ng5rfdy07lhnb45xsrbcrjyqdr841i5z4faq0")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:bogdan@defn.io . #t)
                   (ring:2 . #t)
                   (validation . #t)
                   (web . #t)))
          (source . "https://github.com/Bogdanp/racket-forms.git?path=forms")
          (tags . ("validation" "web"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "30cb92bd59156493b44ac20e8e1b29fdb09b8f36")
                          (source
                           .
                           "https://github.com/Bogdanp/racket-forms.git?path=forms")
                          (source_url
                           .
                           "https://github.com/Bogdanp/racket-forms.git?path=forms")))))))
 ("forms-doc"
  .
  #hasheq((author . "bogdan@defn.io")
          (authors . ("bogdan@defn.io"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "forms" "doc/forms@forms-doc/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/forms-doc.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/forms-doc.txt")))
          (checksum . "30cb92bd59156493b44ac20e8e1b29fdb09b8f36")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "forms-lib"
            "sandbox-lib"
            "scribble-lib"
            "racket-doc"
            "web-server-doc"
            "web-server-lib"))
          (dependency-names
           .
           ("base"
            "forms-lib"
            "sandbox-lib"
            "scribble-lib"
            "racket-doc"
            "web-server-doc"
            "web-server-lib"))
          (description . "Web form validation (documentation only).")
          (implies . ())
          (last-checked . 1557339591)
          (last-edit . 1547764504)
          (last-updated . 1556226250)
          (modules . ((lib "forms/forms.scrbl")))
          (name . "forms-doc")
          (nix-sha256
           .
           "1wva05x5p8p56x7ng5rfdy07lhnb45xsrbcrjyqdr841i5z4faq0")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:bogdan@defn.io . #t)
                   (ring:2 . #t)
                   (validation . #t)
                   (web . #t)))
          (source
           .
           "https://github.com/Bogdanp/racket-forms.git?path=forms-doc")
          (tags . ("validation" "web"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "30cb92bd59156493b44ac20e8e1b29fdb09b8f36")
                          (source
                           .
                           "https://github.com/Bogdanp/racket-forms.git?path=forms-doc")
                          (source_url
                           .
                           "https://github.com/Bogdanp/racket-forms.git?path=forms-doc")))))))
 ("forms-lib"
  .
  #hasheq((author . "bogdan@defn.io")
          (authors . ("bogdan@defn.io"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/forms-lib.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/forms-lib.txt")))
          (checksum . "30cb92bd59156493b44ac20e8e1b29fdb09b8f36")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "srfi-lite-lib" "web-server-lib"))
          (dependency-names . ("base" "srfi-lite-lib" "web-server-lib"))
          (description . "Web form validation (implementation only).")
          (implies . ())
          (last-checked . 1557339591)
          (last-edit . 1547764437)
          (last-updated . 1556226251)
          (modules
           .
           ((lib "forms/private/widgets.rkt")
            (lib "forms/private/formlets.rkt")
            (lib "forms/base.rkt")
            (lib "forms/private/unsafe/prim.rkt")
            (lib "forms/main.rkt")
            (lib "forms/private/prim.rkt")
            (lib "forms/private/contracts.rkt")
            (lib "forms/private/l10n.rkt")
            (lib "forms/private/forms.rkt")))
          (name . "forms-lib")
          (nix-sha256
           .
           "1wva05x5p8p56x7ng5rfdy07lhnb45xsrbcrjyqdr841i5z4faq0")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:bogdan@defn.io . #t)
                   (ring:2 . #t)
                   (validation . #t)
                   (web . #t)))
          (source
           .
           "https://github.com/Bogdanp/racket-forms.git?path=forms-lib")
          (tags . ("validation" "web"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "30cb92bd59156493b44ac20e8e1b29fdb09b8f36")
                          (source
                           .
                           "https://github.com/Bogdanp/racket-forms.git?path=forms-lib")
                          (source_url
                           .
                           "https://github.com/Bogdanp/racket-forms.git?path=forms-lib")))))))
 ("forms-test"
  .
  #hasheq((author . "bogdan@defn.io")
          (authors . ("bogdan@defn.io"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/forms-test.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/forms-test.txt")))
          (checksum . "30cb92bd59156493b44ac20e8e1b29fdb09b8f36")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "forms-lib"
            "rackunit-lib"
            "srfi-lite-lib"
            "web-server-lib"))
          (dependency-names
           .
           ("base"
            "forms-lib"
            "rackunit-lib"
            "srfi-lite-lib"
            "web-server-lib"))
          (description . "Web form validation (tests only).")
          (implies . ())
          (last-checked . 1557339591)
          (last-edit . 1547764464)
          (last-updated . 1556226251)
          (modules
           .
           ((lib "tests/forms/widget-tests.rkt")
            (lib "tests/forms/run-all-tests.rkt")
            (lib "tests/forms/util.rkt")
            (lib "tests/forms/form-tests.rkt")
            (lib "tests/forms/formlet-tests.rkt")))
          (name . "forms-test")
          (nix-sha256
           .
           "1wva05x5p8p56x7ng5rfdy07lhnb45xsrbcrjyqdr841i5z4faq0")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:bogdan@defn.io . #t)
                   (ring:2 . #t)
                   (validation . #t)
                   (web . #t)))
          (source
           .
           "https://github.com/Bogdanp/racket-forms.git?path=forms-test")
          (tags . ("validation" "web"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "30cb92bd59156493b44ac20e8e1b29fdb09b8f36")
                          (source
                           .
                           "https://github.com/Bogdanp/racket-forms.git?path=forms-test")
                          (source_url
                           .
                           "https://github.com/Bogdanp/racket-forms.git?path=forms-test")))))))
 ("forth"
  .
  #hasheq((author . "types@ccs.neu.edu")
          (authors . ("types@ccs.neu.edu"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "forth" "doc/forth@forth/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/forth.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/forth.txt")))
          (checksum . "81f63c1736d8aa4dc1227195cb3f9544553e6d48")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "scribble-lib"
            "racket-doc"
            "rackunit-lib"
            "rackunit-abbrevs"))
          (dependency-names
           .
           ("base"
            "scribble-lib"
            "racket-doc"
            "rackunit-lib"
            "rackunit-abbrevs"))
          (description . "Forth emulator, as a Racket #lang")
          (implies . ())
          (last-checked . 1557339591)
          (last-edit . 1447139635)
          (last-updated . 1552748644)
          (modules
           .
           ((lib "forth/lang/reader.rkt")
            (lib "forth/examples/exit.rkt")
            (lib "forth/examples/arithmetic.rkt")
            (lib "forth/examples/define.rkt")
            (lib "forth/scribblings/forth.scrbl")
            (lib "forth/main.rkt")
            (lib "forth/private/command.rkt")
            (lib "forth/examples/two-and-two-make-four.rkt")
            (lib "forth/private/stack.rkt")))
          (name . "forth")
          (nix-sha256
           .
           "1j5if3v1alnjaf38489z81givkddx31wc6l9gqlfvdzkfqgzy3ym")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:types@ccs.neu.edu . #t)
                   (repl . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/bennn/forth")
          (tags . ("repl"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "81f63c1736d8aa4dc1227195cb3f9544553e6d48")
                          (source . "git://github.com/bennn/forth")
                          (source_url
                           .
                           "http://github.com/bennn/forth/tree/master")))))))
 ("fpbench"
  .
  #hasheq((author . "dthien@cs.washington.edu")
          (authors . ("dthien@cs.washington.edu"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/fpbench.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/fpbench.txt")))
          (checksum . "3b374af195891ee1877a3d59da13aaacb0324d7f")
          (checksum-error . #f)
          (conflicts . ())
          (date-added . 1548660608)
          (dependencies . ("base" "math-lib" "rackunit-lib"))
          (dependency-names . ("base" "math-lib" "rackunit-lib"))
          (description
           .
           "Tools for the FPBench numerical software standards (more info at http://fpbench.org/)")
          (implies . ())
          (last-checked . 1557339591)
          (last-edit . 1552617567)
          (last-updated . 1555722247)
          (modules
           .
           ((lib "fpbench/infra/test-core2wls.rkt")
            (lib "fpbench/tools/filter.rkt")
            (lib "fpbench/tools/range-analysis.rkt")
            (lib "fpbench/tools/core2js.rkt")
            (lib "fpbench/infra/test-common.rkt")
            (lib "fpbench/tools/canonicalizer.rkt")
            (lib "fpbench/infra/test-core2c.rkt")
            (lib "fpbench/tools/core2gappa.rkt")
            (lib "fpbench/tools/fpcore.rkt")
            (lib "fpbench/main.rkt")
            (lib "fpbench/tools/core2fptaylor.rkt")
            (lib "fpbench/tools/common.rkt")
            (lib "fpbench/tools/core2smtlib2.rkt")
            (lib "fpbench/tools/fpcore-extra.rkt")
            (lib "fpbench/infra/gen-tests.rkt")
            (lib "fpbench/tools/fpimp.rkt")
            (lib "fpbench/tools/core2sollya.rkt")
            (lib "fpbench/tools/core2json.rkt")
            (lib "fpbench/tools/core2c.rkt")
            (lib "fpbench/tools/imp2core.rkt")
            (lib "fpbench/tools/sample-accuracy.rkt")
            (lib "fpbench/tools/core2wls.rkt")
            (lib "fpbench/infra/test-core2js.rkt")
            (lib "fpbench/tools/core2go.rkt")
            (lib "fpbench/infra/gen-sanity.rkt")
            (lib "fpbench/tools/core2scala.rkt")
            (lib "fpbench/infra/bench-stats.rkt")
            (lib "fpbench/infra/test-core2smtlib2.rkt")
            (lib "fpbench/infra/test-core2sollya.rkt")
            (lib "fpbench/infra/test-imp2core.rkt")))
          (name . "fpbench")
          (nix-sha256
           .
           "0qa71ri61ksi0rfcfl94yc9p9m4q6pbs163qzq41m1zr4kc21bah")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:dthien@cs.washington.edu . #t)
                   (floating-point . #t)
                   (numerical . #t)
                   (ring:2 . #t)
                   (standards . #t)))
          (source . "https://github.com/FPBench/FPBench.git")
          (tags . ("floating-point" "numerical" "standards"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "3b374af195891ee1877a3d59da13aaacb0324d7f")
                          (source . "https://github.com/FPBench/FPBench.git")
                          (source_url
                           .
                           "https://github.com/FPBench/FPBench.git")))))))
 ("fra"
  .
  #hasheq((author . "jay.mccarthy@gmail.com")
          (authors . ("jay.mccarthy@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "fra" "doc/fra@fra/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/fra.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/fra.txt")))
          (checksum . "151ca5afbb8e732e0da89198cf0b982625233b87")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "eli-tester" "racket-doc" "scribble-lib"))
          (dependency-names
           .
           ("base" "eli-tester" "racket-doc" "scribble-lib"))
          (description
           .
           "Purely functional implementation of relational algebra")
          (implies . ())
          (last-checked . 1557339591)
          (last-edit . 1352492579)
          (last-updated . 1513192004)
          (modules
           .
           ((lib "fra/query.rkt")
            (lib "fra/schema.rkt")
            (lib "fra/relation.rkt")
            (lib "fra/optimize.rkt")
            (lib "fra/test.rkt")
            (lib "fra/prop.rkt")
            (lib "fra/optimize-tests.rkt")
            (lib "fra/tuple.rkt")
            (lib "fra/fra.scrbl")
            (lib "fra/database.rkt")
            (lib "fra/main.rkt")
            (lib "fra/ivector.rkt")))
          (name . "fra")
          (nix-sha256
           .
           "0zrsmy70xab1m6m5x36pd6yaq9ifxyxcn7ih75c2m80a3j045wrk")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:jay.mccarthy@gmail.com . #t)
                   (db . #t)
                   (ring:1 . #t)))
          (source . "github://github.com/jeapostrophe/fra/master")
          (tags . ("db"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "151ca5afbb8e732e0da89198cf0b982625233b87")
                          (source
                           .
                           "github://github.com/jeapostrophe/fra/master")
                          (source_url
                           .
                           "http://github.com/jeapostrophe/fra/tree/master")))))))
 ("frog"
  .
  #hasheq((author . "greghendershott@gmail.com")
          (authors . ("greghendershott@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "frog" "doc/frog@frog/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/frog.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/frog.txt")))
          (checksum . "877662f8c6703bcabb7ab2f87b733f976a54d57b")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           (("base" #:version "6.2")
            "find-parent-dir"
            "html-lib"
            ("markdown" #:version "0.25")
            "racket-index"
            ("rackjure" #:version "0.9")
            "reprovide-lang"
            "scribble-lib"
            "scribble-text-lib"
            "srfi-lite-lib"
            "web-server-lib"
            "at-exp-lib"
            "net-doc"
            "racket-doc"
            "rackunit-lib"
            "scribble-doc"
            "scribble-text-lib"
            "web-server-doc"))
          (dependency-names
           .
           ("base"
            "find-parent-dir"
            "html-lib"
            "markdown"
            "racket-index"
            "rackjure"
            "reprovide-lang"
            "scribble-lib"
            "scribble-text-lib"
            "srfi-lite-lib"
            "web-server-lib"
            "at-exp-lib"
            "net-doc"
            "racket-doc"
            "rackunit-lib"
            "scribble-doc"
            "scribble-text-lib"
            "web-server-doc"))
          (description
           .
           "Static blog generator application. Supports Twitter Bootstrap, Pygments, more.")
          (implies . ())
          (last-checked . 1557339591)
          (last-edit . 1491742817)
          (last-updated . 1556820243)
          (modules
           .
           ((lib "frog/scribble.rkt")
            (lib "frog/private/html.rkt")
            (lib "frog/widgets.rkt")
            (lib "frog/config/private/load.rkt")
            (lib "frog/private/xexpr-map.rkt")
            (lib "frog/private/main.rkt")
            (lib "frog/private/enhance-body/add-doc-links/doc-uri.rkt")
            (lib "frog/private/util.rkt")
            (lib "frog/private/verbosity.rkt")
            (lib "frog/private/xexpr2text.rkt")
            (lib "frog/private/author.rkt")
            (lib "example/frog.rkt")
            (lib "frog/private/upgrade/template-frog.rkt")
            (lib "frog/private/serialize-posts.rkt")
            (lib "frog/private/new-post.rkt")
            (lib "frog/private/non-posts.rkt")
            (lib "frog/frog.scrbl")
            (lib "frog/private/params.rkt")
            (lib "frog/private/bodies-page.rkt")
            (lib "frog/private/enhance-body/syntax-highlight/pygments.rkt")
            (lib "frog/verbosity.rkt")
            (lib "frog/private/read-scribble.rkt")
            (lib "frog/config/private/test.rkt")
            (lib "frog/private/tags.rkt")
            (lib "frog/private/posts.rkt")
            (lib "example/_src/A-Non-Post-Scribble-Page.scrbl")
            (lib "frog/paths.rkt")
            (lib "example/_src/posts/2013-06-19-a-scribble-post.scrbl")
            (lib "frog/main.rkt")
            (lib "frog/private/watch-dir.rkt")
            (lib "frog/params.rkt")
            (lib "frog/private/template.rkt")
            (lib "frog/config/main.rkt")
            (lib "frog/private/post-struct.rkt")
            (lib "frog/private/upgrade/old-config.rkt")
            (lib "frog/private/paths.rkt")
            (lib "frog/private/feeds.rkt")
            (lib "frog/config/lang/reader.rkt")
            (lib "frog/private/define-doc.rkt")
            (lib "frog/enhance-body.rkt")
            (lib "frog/private/stale.rkt")))
          (name . "frog")
          (nix-sha256
           .
           "14ifks1gcf5w1m0nb4wz7zg1r5vfgpqd03w5m39gj3acj930xwi8")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (app . #t)
                   (author:greghendershott@gmail.com . #t)
                   (blog . #t)
                   (markdown . #t)
                   (ring:1 . #t)
                   (scribble . #t)
                   (web . #t)))
          (source . "git://github.com/greghendershott/frog")
          (tags . ("app" "blog" "markdown" "scribble" "web"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "877662f8c6703bcabb7ab2f87b733f976a54d57b")
                          (source . "git://github.com/greghendershott/frog")
                          (source_url
                           .
                           "http://github.com/greghendershott/frog/tree/master")))))))
 ("frtime"
  .
  #hash((author . "jay@racket-lang.org gcooper@racket-lang.org")
        (checksum . "c156f4d7fac626f4aadc68b7f7e59827883f71cc")
        (dependencies
         .
         ("srfi-lite-lib"
          "base"
          "compatibility-lib"
          "drracket"
          "gui-lib"
          "pict-lib"
          "string-constants-lib"
          "draw-doc"
          "gui-doc"
          "racket-doc"
          "scribble-lib"))
        (dependency-names
         .
         ("srfi-lite-lib"
          "base"
          "compatibility-lib"
          "drracket"
          "gui-lib"
          "pict-lib"
          "string-constants-lib"
          "draw-doc"
          "gui-doc"
          "racket-doc"
          "scribble-lib"))
        (description . "jay@racket-lang.org gcooper@racket-lang.org")
        (modules . ())
        (name . "frtime")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/frtime.zip")
        (tags . ())))
 ("ftree"
  .
  #hasheq((author . "stchang@racket-lang.org")
          (authors . ("stchang@racket-lang.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/ftree.txt")
                 (test-failure-log . "server/built/test-fail/ftree.txt")
                 (test-success-log . #f)))
          (checksum . "4f5f57c437446b83a01bb251659dc0cfdbd88167")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "rackunit-lib" "racket-doc" "scribble-lib"))
          (dependency-names
           .
           ("base" "rackunit-lib" "racket-doc" "scribble-lib"))
          (description . "Finger Trees")
          (implies . ())
          (last-checked . 1557339592)
          (last-edit . 1369194370)
          (last-updated . 1554239047)
          (modules
           .
           ((lib "tests/pqueue-tests.rkt")
            (lib "raseq/raseq.rkt")
            (lib "tests/ftree-tests.rkt")
            (lib "tests/raseq-tests.rkt")
            (lib "tests/oseq-tests.rkt")
            (lib "intervaltree/intervaltree.rkt")
            (lib "orderedseq/orderedseq.rkt")
            (lib "pqueue/pqueue.rkt")
            (lib "pqueue/main.rkt")
            (lib "doc/ftree.scrbl")
            (lib "raseq/main.rkt")
            (lib "intervaltree/main.rkt")
            (lib "orderedseq/main.rkt")
            (lib "tests/itree-tests.rkt")
            (lib "ftree/main.rkt")
            (lib "ftree/ftree.rkt")))
          (name . "ftree")
          (nix-sha256
           .
           "0cnir6vxjfiy5b0l2sawsvy4lz5yk2z7vap60c1czl4ajrbmznj0")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:stchang@racket-lang.org . #t)
                   (data . #t)
                   (ring:1 . #t)))
          (source . "github://github.com/stchang/ftree/master")
          (tags . ("data"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "4f5f57c437446b83a01bb251659dc0cfdbd88167")
                          (source
                           .
                           "github://github.com/stchang/ftree/master")
                          (source_url
                           .
                           "http://github.com/stchang/ftree/tree/master")))))))
 ("fulmar"
  .
  #hasheq((author . "earl.christopher@gmail.com")
          (authors . ("earl.christopher@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "fulmar-doc" "doc/fulmar-doc@fulmar/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/fulmar.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/fulmar.txt")))
          (checksum . "4cf60699558b3bb28fa813443456993d1563bfb2")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "scribble-lib"
            "typed-racket-lib"
            "rackunit-lib"
            "sandbox-lib"
            "at-exp-lib"
            "at-exp-lib"))
          (dependency-names
           .
           ("base"
            "scribble-lib"
            "typed-racket-lib"
            "rackunit-lib"
            "sandbox-lib"
            "at-exp-lib"
            "at-exp-lib"))
          (description . "Generate C++ code from S-expressions")
          (implies . ())
          (last-checked . 1557339592)
          (last-edit . 1398957977)
          (last-updated . 1502816071)
          (modules
           .
           ((lib "fulmar/FulmarAbbreviations.rkt")
            (lib "fulmar/private/doc/doc-gen.rkt")
            (lib "fulmar/private/core-chunk.rkt")
            (lib "fulmar/standard-chunk.rkt")
            (lib "fulmar/private/generate.rkt")
            (lib "fulmar/private/utility.rkt")
            (lib "fulmar/private/doc/document.rkt")
            (lib "fulmar/meta.rkt")
            (lib "fulmar/generate.rkt")
            (lib "fulmar/type-decls.rkt")
            (lib "fulmar/tests/main.rkt")
            (lib "fulmar/tests/standard-chunk-tests.rkt")
            (lib "fulmar/private/fulmar-core.rkt")
            (lib "fulmar/private/doc/doc-scraper.rkt")
            (lib "fulmar/tests/fulmar-core-tests.rkt")
            (lib "fulmar/main.rkt")
            (lib "fulmar/doc/fulmar-doc.scrbl")
            (lib "fulmar/tests/core-chunk-tests.rkt")
            (lib "fulmar/doc.rkt")
            (lib "fulmar/verify.rkt")
            (lib "fulmar/version.rkt")
            (lib "fulmar/apply.rkt")))
          (name . "fulmar")
          (nix-sha256
           .
           "04gfs1gi1gj2ya01f32a2r3m9fy4f1vpf0bx4lq9h4f9p2w847s1")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (:no-tag: . #t)
                   (author:earl.christopher@gmail.com . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/cwearl/fulmar.git")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "4cf60699558b3bb28fa813443456993d1563bfb2")
                          (source . "git://github.com/cwearl/fulmar.git")
                          (source_url
                           .
                           "http://github.com/cwearl/fulmar.git/tree/master")))))))
 ("functional"
  .
  #hasheq((author . "lexi.lambda@gmail.com")
          (authors . ("lexi.lambda@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/functional.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/functional.txt")))
          (checksum . "9a3ec7681a0ecf4ba842e389c7a70acde826fcfb")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "functional-lib" "functional-doc"))
          (dependency-names . ("base" "functional-lib" "functional-doc"))
          (description
           .
           "generic interfaces and data structures for functional programming")
          (implies . ("functional-lib" "functional-doc"))
          (last-checked . 1557339592)
          (last-edit . 1475260470)
          (last-updated . 1530387806)
          (modules . ())
          (name . "functional")
          (nix-sha256
           .
           "0b8n4291zxck4g2a77angp561sd1vgf8fvcaiz9v0ln4hd14r8mf")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:lexi.lambda@gmail.com . #t)
                   (functional . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/lexi-lambda/functional?path=functional")
          (tags . ("functional"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "9a3ec7681a0ecf4ba842e389c7a70acde826fcfb")
                          (source
                           .
                           "git://github.com/lexi-lambda/functional?path=functional")
                          (source_url
                           .
                           "http://github.com/lexi-lambda/functional/tree/master?path=functional")))
                 ("6.2"
                  .
                  #hasheq((checksum
                           .
                           "6709e8525aad5420d0bb3f0dc5dce5acb9bd9f3f")
                          (source
                           .
                           "git://github.com/lexi-lambda/functional?path=functional#version-exception--6.2")
                          (source_url
                           .
                           "http://github.com/lexi-lambda/functional/tree/master?path=functional#version-exception--6.2")))
                 ("6.2.1"
                  .
                  #hasheq((checksum
                           .
                           "6709e8525aad5420d0bb3f0dc5dce5acb9bd9f3f")
                          (source
                           .
                           "git://github.com/lexi-lambda/functional?path=functional#version-exception--6.2")
                          (source_url
                           .
                           "http://github.com/lexi-lambda/functional/tree/master?path=functional#version-exception--6.2")))))))
 ("functional-doc"
  .
  #hasheq((author . "lexi.lambda@gmail.com")
          (authors . ("lexi.lambda@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "functional"
                    "doc/functional@functional-doc/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/functional-doc.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/functional-doc.txt")))
          (checksum . "9a3ec7681a0ecf4ba842e389c7a70acde826fcfb")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "collections-doc"
            "collections-lib"
            "functional-lib"
            "racket-doc"
            "scribble-lib"))
          (dependency-names
           .
           ("base"
            "collections-doc"
            "collections-lib"
            "functional-lib"
            "racket-doc"
            "scribble-lib"))
          (description . "documentation (no implementation) for “functional”")
          (implies . ())
          (last-checked . 1557339592)
          (last-edit . 1475260504)
          (last-updated . 1530387806)
          (modules . ((lib "scribblings/data/functional.scrbl")))
          (name . "functional-doc")
          (nix-sha256
           .
           "0b8n4291zxck4g2a77angp561sd1vgf8fvcaiz9v0ln4hd14r8mf")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:lexi.lambda@gmail.com . #t)
                   (functional . #t)
                   (ring:1 . #t)))
          (source
           .
           "git://github.com/lexi-lambda/functional?path=functional-doc")
          (tags . ("functional"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "9a3ec7681a0ecf4ba842e389c7a70acde826fcfb")
                          (source
                           .
                           "git://github.com/lexi-lambda/functional?path=functional-doc")
                          (source_url
                           .
                           "http://github.com/lexi-lambda/functional/tree/master?path=functional-doc")))
                 ("6.2"
                  .
                  #hasheq((checksum
                           .
                           "6709e8525aad5420d0bb3f0dc5dce5acb9bd9f3f")
                          (source
                           .
                           "git://github.com/lexi-lambda/functional?path=functional-doc#version-exception--6.2")
                          (source_url
                           .
                           "http://github.com/lexi-lambda/functional/tree/master?path=functional-doc#version-exception--6.2")))
                 ("6.2.1"
                  .
                  #hasheq((checksum
                           .
                           "6709e8525aad5420d0bb3f0dc5dce5acb9bd9f3f")
                          (source
                           .
                           "git://github.com/lexi-lambda/functional?path=functional-doc#version-exception--6.2")
                          (source_url
                           .
                           "http://github.com/lexi-lambda/functional/tree/master?path=functional-doc#version-exception--6.2")))))))
 ("functional-lib"
  .
  #hasheq((author . "lexi.lambda@gmail.com")
          (authors . ("lexi.lambda@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/functional-lib.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/functional-lib.txt")))
          (checksum . "9a3ec7681a0ecf4ba842e389c7a70acde826fcfb")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           (("base" #:version "6.3")
            ("collections-lib" #:version "1.3")
            "curly-fn-lib"
            "static-rename"))
          (dependency-names
           .
           ("base" "collections-lib" "curly-fn-lib" "static-rename"))
          (description . "implementation (no documentation) for “functional”")
          (implies . ())
          (last-checked . 1557339592)
          (last-edit . 1475260524)
          (last-updated . 1530387806)
          (modules
           .
           ((lib "data/applicative.rkt")
            (lib "data/functor.rkt")
            (lib "data/monad.rkt")
            (lib "data/maybe.rkt")
            (lib "data/either.rkt")))
          (name . "functional-lib")
          (nix-sha256
           .
           "0b8n4291zxck4g2a77angp561sd1vgf8fvcaiz9v0ln4hd14r8mf")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:lexi.lambda@gmail.com . #t)
                   (functional . #t)
                   (ring:1 . #t)))
          (source
           .
           "git://github.com/lexi-lambda/functional?path=functional-lib")
          (tags . ("functional"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "9a3ec7681a0ecf4ba842e389c7a70acde826fcfb")
                          (source
                           .
                           "git://github.com/lexi-lambda/functional?path=functional-lib")
                          (source_url
                           .
                           "http://github.com/lexi-lambda/functional/tree/master?path=functional-lib")))
                 ("6.2"
                  .
                  #hasheq((checksum
                           .
                           "6709e8525aad5420d0bb3f0dc5dce5acb9bd9f3f")
                          (source
                           .
                           "git://github.com/lexi-lambda/functional?path=functional-lib#version-exception--6.2")
                          (source_url
                           .
                           "http://github.com/lexi-lambda/functional/tree/master?path=functional-lib#version-exception--6.2")))
                 ("6.2.1"
                  .
                  #hasheq((checksum
                           .
                           "6709e8525aad5420d0bb3f0dc5dce5acb9bd9f3f")
                          (source
                           .
                           "git://github.com/lexi-lambda/functional?path=functional-lib#version-exception--6.2")
                          (source_url
                           .
                           "http://github.com/lexi-lambda/functional/tree/master?path=functional-lib#version-exception--6.2")))))))
 ("furtle"
  .
  #hasheq((author . "soura.jagat@gmail.com")
          (authors . ("soura.jagat@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "furtle" "doc/furtle@furtle/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/furtle.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/furtle.txt")))
          (checksum . "4102eebc2f140cfb88a1b418286094e393720239")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "typed-racket-lib"
            "typed-racket-more"
            "draw-lib"
            "rackunit-lib"
            "scribble-lib"
            "racket-doc"))
          (dependency-names
           .
           ("base"
            "typed-racket-lib"
            "typed-racket-more"
            "draw-lib"
            "rackunit-lib"
            "scribble-lib"
            "racket-doc"))
          (description . "A library for drawing turtle geometry logo style")
          (implies . ())
          (last-checked . 1557339592)
          (last-edit . 1492116902)
          (last-updated . 1512922010)
          (modules
           .
           ((lib "furtle/turtle-drawings.rkt")
            (lib "furtle/turtle-main.rkt")
            (lib "furtle/main.rkt")
            (lib "furtle/when.rkt")
            (lib "furtle/scribblings/furtle.scrbl")
            (lib "furtle/examples/examples.rkt")))
          (name . "furtle")
          (nix-sha256
           .
           "0jwp6bdpbl3yxjlxi15h3x7vfrm7rfni395jq8smky3a348rr0vi")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:soura.jagat@gmail.com . #t)
                   (geometry . #t)
                   (ring:1 . #t)
                   (turtle . #t)))
          (source . "git://github.com/souravdatta/furtle")
          (tags . ("geometry" "turtle"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "4102eebc2f140cfb88a1b418286094e393720239")
                          (source . "git://github.com/souravdatta/furtle")
                          (source_url
                           .
                           "http://github.com/souravdatta/furtle/tree/master")))))))
 ("fuse"
  .
  #hasheq((author . "scott@thinkmoore.net")
          (authors . ("scott@thinkmoore.net"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "fuse" "doc/fuse@fuse/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/fuse.txt")
                 (test-failure-log . "server/built/test-fail/fuse.txt")
                 (test-success-log . #f)))
          (checksum . "5c24b1e135e97ff6c8e49b363f01ff21c28ecf8b")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("scribble-lib"
            "base"
            "rackunit-lib"
            "sandbox-lib"
            "scribble-lib"
            "racket-doc"))
          (dependency-names
           .
           ("scribble-lib"
            "base"
            "rackunit-lib"
            "sandbox-lib"
            "scribble-lib"
            "racket-doc"))
          (description
           .
           "Library for creating user-space filesystems with FUSE")
          (implies . ())
          (last-checked . 1557339592)
          (last-edit . 1475858124)
          (last-updated . 1502816073)
          (modules
           .
           ((lib "fuse/private/errno.rkt")
            (lib "fuse/scribblings/fuse.scrbl")
            (lib "fuse/examples/hello.rkt")
            (lib "fuse/private/data.rkt")
            (lib "fuse/main.rkt")
            (lib "fuse/private/filesystem.rkt")))
          (name . "fuse")
          (nix-sha256
           .
           "0ajzd1cf79asa6s7p4yzzrwkl6n0v8lpzvxvssm5lw7lymwrb01s")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:scott@thinkmoore.net . #t)
                   (filesystem . #t)
                   (linux . #t)
                   (ring:1 . #t)
                   (systems . #t)
                   (unix . #t)))
          (source . "https://github.com/thinkmoore/racket-fuse.git")
          (tags . ("filesystem" "linux" "systems" "unix"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "5c24b1e135e97ff6c8e49b363f01ff21c28ecf8b")
                          (source
                           .
                           "https://github.com/thinkmoore/racket-fuse.git")
                          (source_url
                           .
                           "https://github.com/thinkmoore/racket-fuse.git")))))))
 ("future-visualizer"
  .
  #hash((author . "jamesswaine@racket-lang.org")
        (checksum . "800f8ac309181f63d9a90709f4d360e85ccc8981")
        (dependencies
         .
         ("base"
          "data-lib"
          "draw-lib"
          "pict-lib"
          "gui-lib"
          "scheme-lib"
          "scribble-lib"
          "racket-doc"
          "rackunit-lib"))
        (dependency-names
         .
         ("base"
          "data-lib"
          "draw-lib"
          "pict-lib"
          "gui-lib"
          "scheme-lib"
          "scribble-lib"
          "racket-doc"
          "rackunit-lib"))
        (description . "jamesswaine@racket-lang.org")
        (modules . ())
        (name . "future-visualizer")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/future-visualizer.zip")
        (tags . ())))
 ("future-visualizer-typed"
  .
  #hash((author . "jamesswaine@racket-lang.org")
        (checksum . "2f49eaf938a93a37e6108204275974c0db46cc5d")
        (dependencies . ("base" "future-visualizer" "typed-racket-lib"))
        (dependency-names . ("base" "future-visualizer" "typed-racket-lib"))
        (description . "jamesswaine@racket-lang.org")
        (modules . ())
        (name . "future-visualizer-typed")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/future-visualizer-typed.zip")
        (tags . ())))
 ("g-code-tools"
  .
  #hasheq((author . "gifan.thada@gmail.com")
          (authors . ("gifan.thada@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . "server/built/deps/g-code-tools.txt")
                 (docs
                  .
                  (("main"
                    "g-code-tools"
                    "doc/g-code-tools@g-code-tools/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/g-code-tools.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/g-code-tools.txt")))
          (checksum . "8a786ec0608afdc0729c344e7cd58d368fc86ff9")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "parser-tools-lib"
            "scribble-lib"
            "racket-doc"
            "rackunit-lib"))
          (dependency-names
           .
           ("base"
            "parser-tools-lib"
            "scribble-lib"
            "racket-doc"
            "rackunit-lib"))
          (description . "A collection of tools for manipulating G-code.")
          (implies . ())
          (last-checked . 1557339593)
          (last-edit . 1539636412)
          (last-updated . 1539839626)
          (modules
           .
           ((lib "g-code-tools/main.rkt")
            (lib "g-code-tools/g-code-tools.rkt")
            (lib "g-code-tools/scribblings/g-code-tools.scrbl")
            (lib "g-code-tools/tests.rkt")))
          (name . "g-code-tools")
          (nix-sha256
           .
           "08p1dlbikrpqgklgg3m1xrjvhvgb3n0q41s5lpsn7735li1qy951")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-dep-fail: . #t)
                   (:build-success: . #t)
                   (:docs: . #t)
                   (author:gifan.thada@gmail.com . #t)
                   (g-code . #t)
                   (ring:2 . #t)))
          (source . "https://github.com/GThad/g-code-tools.git")
          (tags . ("g-code"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "8a786ec0608afdc0729c344e7cd58d368fc86ff9")
                          (source
                           .
                           "https://github.com/GThad/g-code-tools.git")
                          (source_url
                           .
                           "https://github.com/GThad/g-code-tools.git")))))))
 ("games"
  .
  #hash((author . "mflatt@racket-lang.org robby@racket-lang.org")
        (checksum . "600cb22f1aef81cf2723e0c08650cbfc0f571fa3")
        (dependencies
         .
         ("base"
          "draw-lib"
          "drracket"
          ("gui-lib" #:version "1.16")
          "net-lib"
          "htdp-lib"
          "math-lib"
          "scribble-lib"
          "racket-index"
          "sgl"
          "srfi-lib"
          "string-constants-lib"
          ("data-enumerate-lib" #:version "1.2")
          "typed-racket-lib"
          "typed-racket-more"
          "draw-doc"
          "gui-doc"
          "racket-doc"
          "pict-lib"
          "rackunit-lib"
          "htdp-doc"))
        (dependency-names
         .
         ("base"
          "draw-lib"
          "drracket"
          "gui-lib"
          "net-lib"
          "htdp-lib"
          "math-lib"
          "scribble-lib"
          "racket-index"
          "sgl"
          "srfi-lib"
          "string-constants-lib"
          "data-enumerate-lib"
          "typed-racket-lib"
          "typed-racket-more"
          "draw-doc"
          "gui-doc"
          "racket-doc"
          "pict-lib"
          "rackunit-lib"
          "htdp-doc"))
        (description . "mflatt@racket-lang.org robby@racket-lang.org")
        (modules . ())
        (name . "games")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/games.zip")
        (tags . ())))
 ("gaming"
  .
  #hasheq((author . "vervaeck.sam@skynet.be")
          (authors . ("vervaeck.sam@skynet.be"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . "server/built/fail/gaming.txt")
                 (min-failure-log . #f)
                 (success-log . #f)
                 (test-failure-log . #f)
                 (test-success-log . #f)))
          (checksum . "01280d0c64e4b3e43a2dace83c7bfa132fc1b206")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . (("ramunk" "1.0") ("rx" "0.2")))
          (dependency-names . ("ramunk" "rx"))
          (description . "")
          (implies . ())
          (last-checked . 1557339593)
          (last-edit . 1488409269)
          (last-updated . 1544971358)
          (modules
           .
           ((lib "gaming/shapes/circle.rkt")
            (lib "gaming/examples/ball-pool.rkt")
            (lib "gaming/scribblings/gaming.scrbl")
            (lib "gaming/main.rkt")
            (lib "gaming/examples/fireworks.rkt")
            (lib "gaming/screen.rkt")
            (lib "gaming/examples/readme.rkt")
            (lib "gaming/scribblings/devices.scrbl")
            (lib "gaming/point.rkt")
            (lib "gaming/timing.rkt")
            (lib "gaming/game-object.rkt")
            (lib "gaming/syntax.rkt")
            (lib "gaming/examples/mario.rkt")
            (lib "gaming/scribblings/world.scrbl")
            (lib "gaming/helpers.rkt")
            (lib "gaming/world.rkt")
            (lib "gaming/scribblings/objects.scrbl")
            (lib "gaming/shapes/segment.rkt")))
          (name . "gaming")
          (nix-sha256
           .
           "0kl1ib7x30a4y06bg4ym5rqhafsfhy1h7lwh3xsy8q9xq0x50ci5")
          (ring . 1)
          (search-terms
           .
           #hasheq((2d . #t)
                   (:build-fail: . #t)
                   (:no-desc: . #t)
                   (author:vervaeck.sam@skynet.be . #t)
                   (framework . #t)
                   (game-engine . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/samvv/racket-gaming")
          (tags . ("2d" "framework" "game-engine"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "01280d0c64e4b3e43a2dace83c7bfa132fc1b206")
                          (source . "git://github.com/samvv/racket-gaming")
                          (source_url
                           .
                           "http://github.com/samvv/racket-gaming/tree/master")))))))
 ("gcstats"
  .
  #hasheq((author . "samth@ccs.neu.edu")
          (authors . ("samth@ccs.neu.edu"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/gcstats.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/gcstats.txt")))
          (checksum . "c1112a07155f2a8e8a8ad999c9980d544d56b970")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base"))
          (dependency-names . ("base"))
          (description
           .
           "Print summary GC statistics after running a program.")
          (implies . ())
          (last-checked . 1557339593)
          (last-edit . 1352758218)
          (last-updated . 1502816076)
          (modules . ((lib "gcstats/main.rkt") (lib "gcstats/core.rkt")))
          (name . "gcstats")
          (nix-sha256
           .
           "071xmsf7zdkp20bfyld793sfi17a4wk43aibx3i545yv52wv5s4m")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:samth@ccs.neu.edu . #t)
                   (dev . #t)
                   (performance . #t)
                   (ring:1 . #t)))
          (source . "github://github.com/samth/gcstats/master")
          (tags . ("dev" "performance"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "c1112a07155f2a8e8a8ad999c9980d544d56b970")
                          (source
                           .
                           "github://github.com/samth/gcstats/master")
                          (source_url
                           .
                           "http://github.com/samth/gcstats/tree/master")))))))
 ("gdbdump"
  .
  #hasheq((author . "neil@neilvandyke.org")
          (authors . ("neil@neilvandyke.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "gdbdump" "doc/gdbdump@gdbdump/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/gdbdump.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/gdbdump.txt")))
          (checksum . "34e26cb2f32b78ca2804684f587caa9102b7593e")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base" "mcfly" "compatibility-lib" "racket-doc" "scribble-lib"))
          (dependency-names
           .
           ("base" "mcfly" "compatibility-lib" "racket-doc" "scribble-lib"))
          (description . "GDB-based Native Thread Backtrace Dumps")
          (implies . ())
          (last-checked . 1557339593)
          (last-edit . 1456513177)
          (last-updated . 1502816076)
          (modules . ((lib "gdbdump/main.rkt") (lib "gdbdump/gdbdump.scrbl")))
          (name . "gdbdump")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:neil@neilvandyke.org . #t)
                   (debugging . #t)
                   (ring:1 . #t)))
          (source . "http://www.neilvandyke.org/racket/gdbdump.zip")
          (tags . ("debugging"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "34e26cb2f32b78ca2804684f587caa9102b7593e")
                          (source
                           .
                           "http://www.neilvandyke.org/racket/gdbdump.zip")
                          (source_url
                           .
                           "http://www.neilvandyke.org/racket/gdbdump.zip")))))))
 ("generic-bind"
  .
  #hasheq((author . "stchang@racket-lang.org")
          (authors . ("stchang@racket-lang.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "generic-bind"
                    "doc/generic-bind@generic-bind/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/generic-bind.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/generic-bind.txt")))
          (checksum . "77e6dd7c87bd1e9ee9bd083a1c47d400ad79c6d1")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           (("base" #:version "5.90.0.9")
            "rackunit-lib"
            "racket-doc"
            "scribble-lib"
            "math-lib"
            "compatibility-lib"))
          (dependency-names
           .
           ("base"
            "rackunit-lib"
            "racket-doc"
            "scribble-lib"
            "math-lib"
            "compatibility-lib"))
          (description . "Generic binding forms.")
          (implies . ())
          (last-checked . 1557339594)
          (last-edit . 1377753498)
          (last-updated . 1502816077)
          (modules
           .
           ((lib "generic-bind/stx-utils.rkt")
            (lib "generic-bind/as-rkt-names.rkt")
            (lib "generic-bind/tests/generic-bind-tests.rkt")
            (lib "generic-bind/syntax-parse-utils.rkt")
            (lib "generic-bind/generic-bind.rkt")
            (lib "generic-bind/tests/for-tests/run-for-tests.rkt")
            (lib "generic-bind/nested-binds-helper.rkt")
            (lib "generic-bind/generic-bind.scrbl")
            (lib "generic-bind/main.rkt")
            (lib "generic-bind/tests/maze.rkt")
            (lib "generic-bind/tests/for-tests/for-util.rkt")))
          (name . "generic-bind")
          (nix-sha256
           .
           "1mb9xg573hv0bcjz9rm557057iw1dv2z2pxv2bgddwzn7xfnl3s4")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (:no-tag: . #t)
                   (author:stchang@racket-lang.org . #t)
                   (ring:1 . #t)))
          (source . "github://github.com/stchang/generic-bind/master")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "77e6dd7c87bd1e9ee9bd083a1c47d400ad79c6d1")
                          (source
                           .
                           "github://github.com/stchang/generic-bind/master")
                          (source_url
                           .
                           "http://github.com/stchang/generic-bind/tree/master")))))))
 ("generic-syntax-expanders"
  .
  #hasheq((author . "jackhfirth@gmail.com")
          (authors . ("jackhfirth@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "generic-syntax-expanders"
                    "doc/generic-syntax-expanders@generic-syntax-expanders/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log
                  .
                  "server/built/install/generic-syntax-expanders.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/generic-syntax-expanders.txt")))
          (checksum . "6d3b41875095d0f18d6e1d88bf7a8ed3981fe999")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "rackunit-lib"
            "fancy-app"
            "reprovide-lang"
            "lens"
            "point-free"
            "predicates"
            "scribble-lib"
            "scribble-text-lib"
            "scribble-lib"
            "rackunit-lib"
            "racket-doc"))
          (dependency-names
           .
           ("base"
            "rackunit-lib"
            "fancy-app"
            "reprovide-lang"
            "lens"
            "point-free"
            "predicates"
            "scribble-lib"
            "scribble-text-lib"
            "scribble-lib"
            "rackunit-lib"
            "racket-doc"))
          (description
           .
           "Allows definition of macros which include expander-definition forms, like match expanders")
          (implies . ())
          (last-checked . 1557339594)
          (last-edit . 1500074662)
          (last-updated . 1502816077)
          (modules
           .
           ((lib "generic-syntax-expanders/private/scoped-transformers.rkt")
            (lib "generic-syntax-expanders/private/expander-types.rkt")
            (lib "generic-syntax-expanders/private/scoped-transformers.scrbl")
            (lib "generic-syntax-expanders/private/reqprov.rkt")
            (lib "generic-syntax-expanders/test/test-arrows.rkt")
            (lib
             "generic-syntax-expanders/private/define-scoped-transformers.rkt")
            (lib "generic-syntax-expanders/private/expander-types.scrbl")
            (lib
             "generic-syntax-expanders/private/define-scoped-transformers.scrbl")
            (lib
             "generic-syntax-expanders/test/test-call-with-dotted-last.rkt")
            (lib "generic-syntax-expanders/private/expanders.scrbl")
            (lib "generic-syntax-expanders/main.rkt")
            (lib
             "generic-syntax-expanders/test/test-define-x-expander-use-site-scope-simple.rkt")
            (lib "generic-syntax-expanders/private/reqprov.scrbl")
            (lib
             "generic-syntax-expanders/test/test-foo-mixin-expander-predicate.rkt")
            (lib "generic-syntax-expanders/private/define-expanders.rkt")
            (lib "generic-syntax-expanders/private/with-identifiers.rkt")
            (lib "generic-syntax-expanders/private/define-expanders.scrbl")
            (lib "generic-syntax-expanders/private/doc-util.rkt")
            (lib "generic-syntax-expanders/main.scrbl")
            (lib "generic-syntax-expanders/private/expanders.rkt")))
          (name . "generic-syntax-expanders")
          (nix-sha256
           .
           "048gdsgwdmzi9060r46af08y89g7z5kqn1kx89s32pgyb0w5jkmc")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:jackhfirth@gmail.com . #t)
                   (experimental . #t)
                   (ring:1 . #t)
                   (syntax . #t)))
          (source . "git://github.com/jackfirth/generic-syntax-expanders")
          (tags . ("experimental" "syntax"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "6d3b41875095d0f18d6e1d88bf7a8ed3981fe999")
                          (source
                           .
                           "git://github.com/jackfirth/generic-syntax-expanders")
                          (source_url
                           .
                           "http://github.com/jackfirth/generic-syntax-expanders/tree/master")))))))
 ("geoip"
  .
  #hasheq((author . "bogdan@defn.io")
          (authors . ("bogdan@defn.io"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/geoip.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/geoip.txt")))
          (checksum . "ac6278a326d52ea810575873dcb5de312c2d0cbe")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("geoip-doc" "geoip-lib"))
          (dependency-names . ("geoip-doc" "geoip-lib"))
          (description
           .
           "Geolocation based on MaxMind's GeoIP databases. (docs and implementation)")
          (implies . ("geoip-doc" "geoip-lib"))
          (last-checked . 1557339595)
          (last-edit . 1543489977)
          (last-updated . 1543689782)
          (modules . ())
          (name . "geoip")
          (nix-sha256
           .
           "0chyrch7p41gj53sj9hld4fs2wx9mbiyf327kkfr934zy56s1x7n")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:bogdan@defn.io . #t)
                   (geolocation . #t)
                   (ip-address . #t)
                   (ring:2 . #t)))
          (source . "https://github.com/Bogdanp/racket-geoip.git?path=geoip")
          (tags . ("geolocation" "ip-address"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "ac6278a326d52ea810575873dcb5de312c2d0cbe")
                          (source
                           .
                           "https://github.com/Bogdanp/racket-geoip.git?path=geoip")
                          (source_url
                           .
                           "https://github.com/Bogdanp/racket-geoip.git?path=geoip")))))))
 ("geoip-doc"
  .
  #hasheq((author . "bogdan@defn.io")
          (authors . ("bogdan@defn.io"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "geoip" "doc/geoip@geoip-doc/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/geoip-doc.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/geoip-doc.txt")))
          (checksum . "ac6278a326d52ea810575873dcb5de312c2d0cbe")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "geoip-lib" "racket-doc" "scribble-lib"))
          (dependency-names
           .
           ("base" "geoip-lib" "racket-doc" "scribble-lib"))
          (description
           .
           "Geolocation based on MaxMind's GeoIP databases. (docs only)")
          (implies . ())
          (last-checked . 1557339595)
          (last-edit . 1543489947)
          (last-updated . 1543689782)
          (modules . ((lib "geoip/geoip.scrbl")))
          (name . "geoip-doc")
          (nix-sha256
           .
           "0chyrch7p41gj53sj9hld4fs2wx9mbiyf327kkfr934zy56s1x7n")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:bogdan@defn.io . #t)
                   (geolocation . #t)
                   (ip-address . #t)
                   (ring:2 . #t)))
          (source
           .
           "https://github.com/Bogdanp/racket-geoip.git?path=geoip-doc")
          (tags . ("geolocation" "ip-address"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "ac6278a326d52ea810575873dcb5de312c2d0cbe")
                          (source
                           .
                           "https://github.com/Bogdanp/racket-geoip.git?path=geoip-doc")
                          (source_url
                           .
                           "https://github.com/Bogdanp/racket-geoip.git?path=geoip-doc")))))))
 ("geoip-lib"
  .
  #hasheq((author . "bogdan@defn.io")
          (authors . ("bogdan@defn.io"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/geoip-lib.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/geoip-lib.txt")))
          (checksum . "ac6278a326d52ea810575873dcb5de312c2d0cbe")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "net-ip-lib" "rackunit-lib"))
          (dependency-names . ("base" "net-ip-lib" "rackunit-lib"))
          (description
           .
           "Geolocation based on MaxMind's GeoIP databases. (implementation only)")
          (implies . ())
          (last-checked . 1557339595)
          (last-edit . 1543490104)
          (last-updated . 1543689783)
          (modules
           .
           ((lib "geoip/private/decoder.rkt") (lib "geoip/main.rkt")))
          (name . "geoip-lib")
          (nix-sha256
           .
           "0chyrch7p41gj53sj9hld4fs2wx9mbiyf327kkfr934zy56s1x7n")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:bogdan@defn.io . #t)
                   (geolocation . #t)
                   (ip-address . #t)
                   (ring:2 . #t)))
          (source
           .
           "https://github.com/Bogdanp/racket-geoip.git?path=geoip-lib")
          (tags . ("geolocation" "ip-address"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "ac6278a326d52ea810575873dcb5de312c2d0cbe")
                          (source
                           .
                           "https://github.com/Bogdanp/racket-geoip.git?path=geoip-lib")
                          (source_url
                           .
                           "https://github.com/Bogdanp/racket-geoip.git?path=geoip-lib")))))))
 ("get-bonus"
  .
  #hasheq((author . "jay.mccarthy@gmail.com")
          (authors . ("jay.mccarthy@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . "server/built/fail/get-bonus.txt")
                 (min-failure-log . #f)
                 (success-log . #f)
                 (test-failure-log . #f)
                 (test-success-log . #f)))
          (checksum . "08d304c0300cb7dc2f98b90413d69a314bc781a1")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("3s"
            "openal"
            "lux"
            "dos"
            "fector"
            "opengl"
            "base"
            "compatibility-lib"
            "data-lib"
            "data-enumerate-lib"
            "draw-lib"
            "eli-tester"
            "gui-lib"
            "htdp-lib"
            "math"
            "pfds"
            "plot"
            "rackunit-lib"
            "redex-lib"
            "mode-lambda"
            "apse"
            "slideshow-lib"
            "typed-racket-lib"
            "racket-doc"))
          (dependency-names
           .
           ("3s"
            "openal"
            "lux"
            "dos"
            "fector"
            "opengl"
            "base"
            "compatibility-lib"
            "data-lib"
            "data-enumerate-lib"
            "draw-lib"
            "eli-tester"
            "gui-lib"
            "htdp-lib"
            "math"
            "pfds"
            "plot"
            "rackunit-lib"
            "redex-lib"
            "mode-lambda"
            "apse"
            "slideshow-lib"
            "typed-racket-lib"
            "racket-doc"))
          (description
           .
           "Get Bonus is a project about discovering the best way to program video games.")
          (implies . ())
          (last-checked . 1557339595)
          (last-edit . 1351829436)
          (last-updated . 1531237503)
          (modules
           .
           ((lib "gb/data/fmatrix.rkt")
            (lib "gb/lib/random.rkt")
            (lib "gb/input/keyboard.rkt")
            (lib "gb/input/joystick.rkt")
            (lib "gb/data/fvector.rkt")
            (lib "gb/lib/ffi.rkt")
            (lib "gb/data/psn.rkt")
            (lib "gb/gui/os.rkt")
            (lib "gb/physics/cd-narrow.rkt")
            (lib "gb/lib/godel-seq.rkt")
            (lib "games/maze/map.rkt")
            (lib "gb/graphics/font-lib.rkt")
            (lib "gb/data/lifo-heap.rkt")
            (lib "gb/lib/performance-log.rkt")
            (lib "gb/graphics/main.rkt")
            (lib "gb/lib/math.rkt")
            (lib "tools/log-display.rkt")
            (lib "exp/fern.rkt")
            (lib "gb/gui/world.rkt")
            (lib "gb/lib/srs.rkt")
            (lib "gb/meta.rkt")
            (lib "games/tennis/main.rkt")
            (lib "gb/art.rkt")
            (lib "games/rpswar/random.rkt")
            (lib "gb/sys/menu-lib.rkt")
            (lib "gb/data/mvector.rkt")
            (lib "gb/lib/component.rkt")
            (lib "gb/lib/tr-cheat.rkt")
            (lib "gb/data/ltq.rkt")
            (lib "gb/ai/path-finding.rkt")
            (lib "gb/lib/meta-q.rkt")
            (lib "games/rpswar/graph.rkt")
            (lib "gb/lib/evector.rkt")
            (lib "gb/lib/fstree.rkt")
            (lib "gb/main.rkt")
            (lib "exp/des.rkt")
            (lib "exp/bsp-space.rkt")
            (lib "gb/lib/ffi/vector.rkt")
            (lib "games/rpswar/fst.rkt")
            (lib "gb/sys/menu.rkt")
            (lib "gb/meta-help.rkt")
            (lib "gb/input/controller.rkt")
            (lib "gb/lib/skal.rkt")
            (lib "gb/physics/cd-broad.rkt")
            (lib "gb/lib/gzip.rkt")
            (lib "games/rpswar/main.rkt")
            (lib "games/maze/main.rkt")))
          (name . "get-bonus")
          (nix-sha256
           .
           "0g3y9h2adj48v3fgyli50fwa0c7fif938pmi9nh21ls8kx5yzcgp")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-fail: . #t)
                   (app . #t)
                   (audio . #t)
                   (author:jay.mccarthy@gmail.com . #t)
                   (games . #t)
                   (graphics . #t)
                   (gui . #t)
                   (opengl . #t)
                   (ring:1 . #t)))
          (source . "github://github.com/get-bonus/get-bonus/master/")
          (tags . ("app" "audio" "games" "graphics" "gui" "opengl"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "08d304c0300cb7dc2f98b90413d69a314bc781a1")
                          (source
                           .
                           "github://github.com/get-bonus/get-bonus/master/")
                          (source_url
                           .
                           "http://github.com/get-bonus/get-bonus/tree/master/")))))))
 ("get-pass"
  .
  #hasheq((author . "smitchell556@gmail.com")
          (authors . ("smitchell556@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "get-pass" "doc/get-pass@get-pass/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/get-pass.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/get-pass.txt")))
          (checksum . "897434c1f6bcad997e85909aacd82a7c8d33c691")
          (checksum-error . #f)
          (conflicts . ())
          (date-added . 1552253657)
          (dependencies . ("base" "scribble-lib" "racket-doc" "rackunit-lib"))
          (dependency-names
           .
           ("base" "scribble-lib" "racket-doc" "rackunit-lib"))
          (description
           .
           "Utility to get passwords from the command line without echoing input.")
          (implies . ())
          (last-checked . 1557339595)
          (last-edit . 1552253931)
          (last-updated . 1552258992)
          (modules
           .
           ((lib "get-pass/main.rkt")
            (lib "get-pass/scribblings/get-pass.scrbl")))
          (name . "get-pass")
          (nix-sha256
           .
           "04ri0n5priksv7hz9r0c8i7wvw8f79x37x0lwqzccp73jz1vhkx5")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:smitchell556@gmail.com . #t)
                   (commandline . #t)
                   (get-pass . #t)
                   (getpass . #t)
                   (password . #t)
                   (ring:2 . #t)))
          (source . "https://github.com/smitchell556/get-pass.git")
          (tags . ("commandline" "get-pass" "getpass" "password"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "897434c1f6bcad997e85909aacd82a7c8d33c691")
                          (source
                           .
                           "https://github.com/smitchell556/get-pass.git")
                          (source_url
                           .
                           "https://github.com/smitchell556/get-pass.git")))))))
 ("get-primitive"
  .
  #hasheq((author . "samth@ccs.neu.edu")
          (authors . ("samth@ccs.neu.edu"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/get-primitive.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/get-primitive.txt")))
          (checksum . "50bc2774a314aaed9a1d84ab501087110f77e59a")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base"))
          (dependency-names . ("base"))
          (description . "Extract low-level primitives")
          (implies . ())
          (last-checked . 1557339595)
          (last-edit . 1541083492)
          (last-updated . 1541083492)
          (modules . ((lib "get-primitive/main.rkt")))
          (name . "get-primitive")
          (nix-sha256
           .
           "1ayl4rq91vs9x5hmadrrcx4a1s19fslrl031hkcgza1511jr7bp8")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:samth@ccs.neu.edu . #t)
                   (linklet . #t)
                   (ring:2 . #t)))
          (source . "https://github.com/samth/get-primitive.git")
          (tags . ("linklet"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "50bc2774a314aaed9a1d84ab501087110f77e59a")
                          (source
                           .
                           "https://github.com/samth/get-primitive.git")
                          (source_url
                           .
                           "https://github.com/samth/get-primitive.git")))))))
 ("gir"
  .
  #hasheq((author . "kalimehtar@mail.ru")
          (authors . ("kalimehtar@mail.ru"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "gir" "doc/gir@gir/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/gir.txt")
                 (test-failure-log . "server/built/test-fail/gir.txt")
                 (test-success-log . #f)))
          (checksum . "38e629c8cf31a89bbcf54595c5006174ba090e7e")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "scribble-lib" "racket-doc"))
          (dependency-names . ("base" "scribble-lib" "racket-doc"))
          (description . "GTK/GLib/GIO/... GObjectIntrospection FFI binding")
          (implies . ())
          (last-checked . 1557339595)
          (last-edit . 1407088887)
          (last-updated . 1502816081)
          (modules
           .
           ((lib "gir/const.rkt")
            (lib "gir/gtype.rkt")
            (lib "gir/signal.rkt")
            (lib "gir/minimal-test.rkt")
            (lib "gir/base.rkt")
            (lib "gir/translator.rkt")
            (lib "gir/glib.rkt")
            (lib "gir/property.rkt")
            (lib "gir/function.rkt")
            (lib "gir/utils.rkt")
            (lib "gir/test.rkt")
            (lib "gir/gir.scrbl")
            (lib "gir/main.rkt")
            (lib "gir/enum.rkt")
            (lib "gir/contract.rkt")
            (lib "gir/interface.rkt")
            (lib "gir/field.rkt")
            (lib "gir/struct.rkt")
            (lib "gir/object.rkt")
            (lib "gir/loadlib.rkt")))
          (name . "gir")
          (nix-sha256
           .
           "0rqwsqadskaa9zfgypf1z7bz26drlh3pz64l18an9xnxpv6p9gsx")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:kalimehtar@mail.ru . #t)
                   (ffi . #t)
                   (gui . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/Kalimehtar/gir")
          (tags . ("ffi" "gui"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "38e629c8cf31a89bbcf54595c5006174ba090e7e")
                          (source . "git://github.com/Kalimehtar/gir")
                          (source_url
                           .
                           "http://github.com/Kalimehtar/gir/tree/master")))))))
 ("git-slice"
  .
  #hasheq((author . "samth@ccs.neu.edu mflatt@cs.utah.edu")
          (authors . ("samth@ccs.neu.edu" "mflatt@cs.utah.edu"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/git-slice.txt")
                 (test-failure-log . "server/built/test-fail/git-slice.txt")
                 (test-success-log . #f)))
          (checksum . "110b361425280e61abf8de99e5d41865afc5cddb")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "remote-shell" "rackunit-lib"))
          (dependency-names . ("base" "remote-shell" "rackunit-lib"))
          (description . "For slicing git repositories into pieces")
          (implies . ())
          (last-checked . 1557339595)
          (last-edit . 1408744731)
          (last-updated . 1526930327)
          (modules
           .
           ((lib "git-slice/git.rkt")
            (lib "git-slice/chop.rkt")
            (lib "git-slice/compute.rkt")
            (lib "git-slice/tests/test.rkt")
            (lib "git-slice/main.rkt")
            (lib "git-slice/filter.rkt")
            (lib "git-slice/prune.rkt")
            (lib "git-slice/commit.rkt")))
          (name . "git-slice")
          (nix-sha256
           .
           "04q3p0x9kk9mh1a34wh0sq7y18c0vqrj8c8zhdgc6rmpbibz9hh2")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:mflatt@cs.utah.edu . #t)
                   (author:samth@ccs.neu.edu . #t)
                   (git . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/samth/git-slice")
          (tags . ("git"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "110b361425280e61abf8de99e5d41865afc5cddb")
                          (source . "git://github.com/samth/git-slice")
                          (source_url
                           .
                           "http://github.com/samth/git-slice/tree/master")))))))
 ("github"
  .
  #hasheq((author . "samth@ccs.neu.edu")
          (authors . ("samth@ccs.neu.edu"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/github.txt")
                 (test-failure-log . "server/built/test-fail/github.txt")
                 (test-success-log . #f)))
          (checksum . "3dcabdece43c6f46050966a51ad237c75032cd17")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "drracket-plugin-lib" "gui-lib"))
          (dependency-names . ("base" "drracket-plugin-lib" "gui-lib"))
          (description . "Github Bindings")
          (implies . ())
          (last-checked . 1557339595)
          (last-edit . 1405267534)
          (last-updated . 1502816081)
          (modules
           .
           ((lib "github/main.rkt")
            (lib "github/tool.rkt")
            (lib "github/gui.rkt")))
          (name . "github")
          (nix-sha256
           .
           "0q02npjxcs5n1kv5dmn3h6y6f2sx2mbf60w2s43hxkr25m7jngy7")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (api . #t)
                   (author:samth@ccs.neu.edu . #t)
                   (github . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/samth/github.rkt")
          (tags . ("api" "github"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "3dcabdece43c6f46050966a51ad237c75032cd17")
                          (source . "git://github.com/samth/github.rkt")
                          (source_url
                           .
                           "http://github.com/samth/github.rkt/tree/master")))))))
 ("github-api"
  .
  #hasheq((author . "euler90h@gmail.com")
          (authors . ("euler90h@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "github-api"
                    "doc/github-api@github-api/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/github-api.txt")
                 (test-failure-log . "server/built/test-fail/github-api.txt")
                 (test-success-log . #f)))
          (checksum . "2079df4a8a61d6f71722d9e7eb0aff4043995018")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "rackunit-lib" "scribble-lib" "racket-doc"))
          (dependency-names
           .
           ("base" "rackunit-lib" "scribble-lib" "racket-doc"))
          (description . "Bindings for the GitHub API")
          (implies . ())
          (last-checked . 1557339595)
          (last-edit . 1442099017)
          (last-updated . 1536641815)
          (modules
           .
           ((lib "github-api/scribblings/github-api.scrbl")
            (lib "github-api/functional_tests/utils.rkt")
            (lib "github-api/functional_tests/events.rkt")
            (lib "github-api/git.rkt")
            (lib "github-api/events.rkt")
            (lib "github-api/issues.rkt")
            (lib "github-api/users.rkt")
            (lib "github-api/functional_tests/issues.rkt")
            (lib "github-api/main.rkt")
            (lib "github-api/functional_tests/gists.rkt")
            (lib "github-api/functional_tests/identity.rkt")
            (lib "github-api/gists.rkt")
            (lib "github-api/functional_tests/webhooks.rkt")
            (lib "github-api/utils.rkt")
            (lib "github-api/orgs.rkt")
            (lib "github-api/webhooks.rkt")
            (lib "github-api/pull.rkt")))
          (name . "github-api")
          (nix-sha256
           .
           "14qmi06kfgkhrjf5sqwk7bz6nwbc7prad2jssd9xk99ssgrib006")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:euler90h@gmail.com . #t)
                   (github . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/eu90h/racket-github-api")
          (tags . ("github"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "2079df4a8a61d6f71722d9e7eb0aff4043995018")
                          (source
                           .
                           "git://github.com/eu90h/racket-github-api")
                          (source_url
                           .
                           "http://github.com/eu90h/racket-github-api/tree/master")))))))
 ("glfw3"
  .
  #hasheq((author . "macocio@gmail.com")
          (authors . ("macocio@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "glfw3" "doc/glfw3@glfw3/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/glfw3.txt")
                 (test-failure-log . "server/built/test-fail/glfw3.txt")
                 (test-success-log . #f)))
          (checksum . "e52613f60f25aeac7f035b1f11a79401a770af35")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "disposable"
            "fixture"
            "scribble-lib"
            "racket-doc"
            "rackunit-lib"))
          (dependency-names
           .
           ("base"
            "disposable"
            "fixture"
            "scribble-lib"
            "racket-doc"
            "rackunit-lib"))
          (description . "GLFW wrapper for Racket")
          (implies . ())
          (last-checked . 1557339595)
          (last-edit . 1532714699)
          (last-updated . 1540581276)
          (modules
           .
           ((lib "glfw3/main.rkt")
            (lib "glfw3/example.rkt")
            (lib "glfw3/scribblings/glfw3.scrbl")
            (lib "glfw3/glfw-test.rkt")))
          (name . "glfw3")
          (nix-sha256
           .
           "0lny8zbfyd8598r42ilkkhqgafplpzzi7g2aji2b56mvq5vzpvhn")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:macocio@gmail.com . #t)
                   (glfw . #t)
                   (ring:2 . #t)))
          (source . "https://github.com/BourgondAries/rkt-glfw.git")
          (tags . ("glfw"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "e52613f60f25aeac7f035b1f11a79401a770af35")
                          (source
                           .
                           "https://github.com/BourgondAries/rkt-glfw.git")
                          (source_url
                           .
                           "https://github.com/BourgondAries/rkt-glfw.git")))))))
 ("glob"
  .
  #hasheq((author . "types@ccs.neu.edu")
          (authors . ("types@ccs.neu.edu"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "glob" "doc/glob@glob/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/glob.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/glob.txt")))
          (checksum . "7f7ce419f5ea4e745be9c840df8bafca194ad07f")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "typed-racket-lib"
            "scribble-lib"
            "racket-doc"
            "rackunit-lib"))
          (dependency-names
           .
           ("base"
            "typed-racket-lib"
            "scribble-lib"
            "racket-doc"
            "rackunit-lib"))
          (description . "Deprecated. Use file/glob instead.")
          (implies . ())
          (last-checked . 1557339595)
          (last-edit . 1475797107)
          (last-updated . 1552748649)
          (modules
           .
           ((lib "glob/private/glob.rkt")
            (lib "glob/typed.rkt")
            (lib "glob/scribblings/glob.scrbl")
            (lib "glob/main.rkt")
            (lib "glob/private/in-new-directory.rkt")))
          (name . "glob")
          (nix-sha256
           .
           "1xvlcqdqhh66abcasw7ybphah6cyw30892i0rmi0xzll89134h8m")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:types@ccs.neu.edu . #t)
                   (deprecated . #t)
                   (iterable . #t)
                   (ring:1 . #t)
                   (scripting . #t)
                   (string . #t)))
          (source . "git://github.com/bennn/glob")
          (tags . ("deprecated" "iterable" "scripting" "string"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "7f7ce419f5ea4e745be9c840df8bafca194ad07f")
                          (source . "git://github.com/bennn/glob")
                          (source_url
                           .
                           "http://github.com/bennn/glob/tree/master")))
                 ("6.1"
                  .
                  #hasheq((checksum
                           .
                           "d717381557272ee8403b1513a83135ae157f6de2")
                          (source . "git://github.com/bennn/glob#6.2")
                          (source_url
                           .
                           "http://github.com/bennn/glob/tree/master#6.2")))
                 ("6.1.1"
                  .
                  #hasheq((checksum
                           .
                           "d717381557272ee8403b1513a83135ae157f6de2")
                          (source . "git://github.com/bennn/glob#6.2")
                          (source_url
                           .
                           "http://github.com/bennn/glob/tree/master#6.2")))
                 ("6.2"
                  .
                  #hasheq((checksum
                           .
                           "d717381557272ee8403b1513a83135ae157f6de2")
                          (source . "git://github.com/bennn/glob#6.2")
                          (source_url
                           .
                           "http://github.com/bennn/glob/tree/master#6.2")))
                 ("6.2.1"
                  .
                  #hasheq((checksum
                           .
                           "d717381557272ee8403b1513a83135ae157f6de2")
                          (source . "git://github.com/bennn/glob#6.2")
                          (source_url
                           .
                           "http://github.com/bennn/glob/tree/master#6.2")))
                 ("6.3"
                  .
                  #hasheq((checksum
                           .
                           "b642f0d8ba32f39a7fe51d01199ff0dffbdfed70")
                          (source . "git://github.com/bennn/glob#6.6")
                          (source_url
                           .
                           "http://github.com/bennn/glob/tree/master#6.6")))
                 ("6.4"
                  .
                  #hasheq((checksum
                           .
                           "b642f0d8ba32f39a7fe51d01199ff0dffbdfed70")
                          (source . "git://github.com/bennn/glob#6.6")
                          (source_url
                           .
                           "http://github.com/bennn/glob/tree/master#6.6")))
                 ("6.5"
                  .
                  #hasheq((checksum
                           .
                           "b642f0d8ba32f39a7fe51d01199ff0dffbdfed70")
                          (source . "git://github.com/bennn/glob#6.6")
                          (source_url
                           .
                           "http://github.com/bennn/glob/tree/master#6.6")))
                 ("6.6"
                  .
                  #hasheq((checksum
                           .
                           "b642f0d8ba32f39a7fe51d01199ff0dffbdfed70")
                          (source . "git://github.com/bennn/glob#6.6")
                          (source_url
                           .
                           "http://github.com/bennn/glob/tree/master#6.6")))))))
 ("glossolalia"
  .
  #hasheq((author . "rob.kleffner@gmail.com gamecodeshark@gmail.com")
          (authors . ("rob.kleffner@gmail.com" "gamecodeshark@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "glossolalia"
                    "doc/glossolalia@glossolalia/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/glossolalia.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/glossolalia.txt")))
          (checksum . "2f7d6c2865267aaee4709ca6640243b89ecf6c6d")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "rackunit-lib"
            "math-lib"
            "brag"
            "beautiful-racket"
            "beautiful-racket-lib"
            "br-parser-tools-lib"
            "scribble-lib"
            "racket-doc"))
          (dependency-names
           .
           ("base"
            "rackunit-lib"
            "math-lib"
            "brag"
            "beautiful-racket"
            "beautiful-racket-lib"
            "br-parser-tools-lib"
            "scribble-lib"
            "racket-doc"))
          (description
           .
           "A language for generating words according to sound and syllable rules. Has features for cross-syllable rules and phoneme occurence frequency.")
          (implies . ())
          (last-checked . 1557339596)
          (last-edit . 1506451373)
          (last-updated . 1509984096)
          (modules
           .
           ((lib "glossolalia/examples/finnish-like.rkt")
            (lib "glossolalia/parser.rkt")
            (lib "glossolalia/tokenizer.rkt")
            (lib "glossolalia/lexer.rkt")
            (lib "glossolalia/examples/german-like.rkt")
            (lib "glossolalia/entry.rkt")
            (lib "glossolalia/examples/japanese-like.rkt")
            (lib "glossolalia/tokenize-only.rkt")
            (lib "glossolalia/examples/rotokas-like.rkt")
            (lib "glossolalia/roulette-wheel.rkt")
            (lib "glossolalia/scribblings/glossolalia.scrbl")
            (lib "glossolalia/to-html.rkt")
            (lib "glossolalia/examples/hawaiian-like.rkt")
            (lib "glossolalia/colorer.rkt")
            (lib "glossolalia/main.rkt")
            (lib "glossolalia/generator.rkt")
            (lib "glossolalia/parser-only.rkt")
            (lib "glossolalia/examples/test.rkt")))
          (name . "glossolalia")
          (nix-sha256
           .
           "0wvhb68gssk2w76y2dnybhhfqzw0c7fby37l824hjfw141zg08xk")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:gamecodeshark@gmail.com . #t)
                   (author:rob.kleffner@gmail.com . #t)
                   (language . #t)
                   (ring:2 . #t)))
          (source . "git://github.com/robertkleffner/glossolalia")
          (tags . ("language"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "2f7d6c2865267aaee4709ca6640243b89ecf6c6d")
                          (source
                           .
                           "git://github.com/robertkleffner/glossolalia")
                          (source_url
                           .
                           "http://github.com/robertkleffner/glossolalia/tree/master")))))))
 ("gls"
  .
  #hasheq((author . "kalimehtar@mail.ru")
          (authors . ("kalimehtar@mail.ru"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "gls" "doc/gls@gls/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/gls.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/gls.txt")))
          (checksum . "8c8225b54bd84b2517ef80a9cf6100a74af82050")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "srfi-lite-lib"
            "rackunit-lib"
            "scribble-lib"
            "racket-doc"))
          (dependency-names
           .
           ("base"
            "srfi-lite-lib"
            "rackunit-lib"
            "scribble-lib"
            "racket-doc"))
          (description
           .
           "Generic Little (Object, Type, Anything, ...) System - multiple dispatch on types")
          (implies . ())
          (last-checked . 1557339596)
          (last-edit . 1391532833)
          (last-updated . 1502816083)
          (modules
           .
           ((lib "gls/test.rkt")
            (lib "gls/utils.rkt")
            (lib "gls/callables.rkt")
            (lib "gls/main.rkt")
            (lib "gls/types.rkt")
            (lib "gls/util-macros.rkt")
            (lib "gls/gls.scrbl")
            (lib "gls/callable-macros.rkt")))
          (name . "gls")
          (nix-sha256
           .
           "1mk7xnvswwg5rgal4mlvrqkq075b4314nrrmaj6k0ca14w5cgx75")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:kalimehtar@mail.ru . #t)
                   (data . #t)
                   (ring:1 . #t)))
          (source . "github://github.com/Kalimehtar/gls/master")
          (tags . ("data"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "8c8225b54bd84b2517ef80a9cf6100a74af82050")
                          (source
                           .
                           "github://github.com/Kalimehtar/gls/master")
                          (source_url
                           .
                           "http://github.com/Kalimehtar/gls/tree/master")))))))
 ("glu-tessellate"
  .
  #hasheq((author . "mflatt@cs.utah.edu")
          (authors . ("mflatt@cs.utah.edu"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "glu-tessellate"
                    "doc/glu-tessellate@glu-tessellate/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/glu-tessellate.txt")
                 (test-failure-log
                  .
                  "server/built/test-fail/glu-tessellate.txt")
                 (test-success-log . #f)))
          (checksum . "8efe65b35a2554be6dc613c016791ef2bf5ffb82")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "draw-doc"
            ("gui-lib" #:version "1.8")
            "racket-doc"
            "scribble-lib"))
          (dependency-names
           .
           ("base" "draw-doc" "gui-lib" "racket-doc" "scribble-lib"))
          (description
           .
           "Converts a set of closed paths to a set of covering triangles covering the region enclosed by the curves")
          (implies . ())
          (last-checked . 1557339596)
          (last-edit . 1443652898)
          (last-updated . 1502816084)
          (modules
           .
           ((lib "glu-tessellate/glu-tessellate.scrbl")
            (lib "glu-tessellate/main.rkt")))
          (name . "glu-tessellate")
          (nix-sha256
           .
           "0dpnvzg4zqkwd8lvxw0fxarph6fswmbl02gycjxwcw8vs3aymm3g")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:mflatt@cs.utah.edu . #t)
                   (graphics . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/mflatt/glu-tessellate")
          (tags . ("graphics"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "8efe65b35a2554be6dc613c016791ef2bf5ffb82")
                          (source . "git://github.com/mflatt/glu-tessellate")
                          (source_url
                           .
                           "http://github.com/mflatt/glu-tessellate/tree/master")))))))
 ("gm-pepm-2018"
  .
  #hasheq((author . "types@ccs.neu.edu")
          (authors . ("types@ccs.neu.edu"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "gm-pepm-2018"
                    "doc/gm-pepm-2018@gm-pepm-2018/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/gm-pepm-2018.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/gm-pepm-2018.txt")))
          (checksum . "dd5f1ad9bb6adbf53743c6856999e87e288a2c88")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("at-exp-lib"
            "base"
            "html-parsing"
            "math-lib"
            "pict-lib"
            "plot-lib"
            "scribble-lib"
            "slideshow-lib"
            "sxml"
            "with-cache"
            "pict-doc"
            "racket-doc"
            "rackunit-abbrevs"
            "rackunit-lib"
            "scribble-doc"))
          (dependency-names
           .
           ("at-exp-lib"
            "base"
            "html-parsing"
            "math-lib"
            "pict-lib"
            "plot-lib"
            "scribble-lib"
            "slideshow-lib"
            "sxml"
            "with-cache"
            "pict-doc"
            "racket-doc"
            "rackunit-abbrevs"
            "rackunit-lib"
            "scribble-doc"))
          (description . "Artifact for \"On the Cost of Type-Tag Soundness\"")
          (implies . ())
          (last-checked . 1557339596)
          (last-edit . 1517439841)
          (last-updated . 1541924025)
          (modules
           .
           ((lib "gm-pepm-2018/script/system.rkt")
            (lib "gm-pepm-2018/threats.scrbl")
            (lib "gm-pepm-2018/src/PyPI-ranking/scrape-PyPI.rkt")
            (lib "gm-pepm-2018/nepls-2017/nepls.rkt")
            (lib "gm-pepm-2018/reticulated.scrbl")
            (lib "gm-pepm-2018/script/plot.rkt")
            (lib "gm-pepm-2018/docs/reference.scrbl")
            (lib "gm-pepm-2018/docs/data.scrbl")
            (lib "gm-pepm-2018/conclusion.scrbl")
            (lib "gm-pepm-2018/lang/reader.rkt")
            (lib "gm-pepm-2018/method.scrbl")
            (lib "gm-pepm-2018/gm-pepm-2018.scrbl")
            (lib "gm-pepm-2018/script/performance-info.rkt")
            (lib "gm-pepm-2018/docs/gm-pepm-2018.scrbl")
            (lib "gm-pepm-2018/main.rkt")
            (lib "gm-pepm-2018/script/render.rkt")
            (lib "gm-pepm-2018/evaluation.scrbl")
            (lib "gm-pepm-2018/introduction.scrbl")
            (lib "gm-pepm-2018/script/util.rkt")
            (lib "gm-pepm-2018/bib.rkt")
            (lib "gm-pepm-2018/appendix.scrbl")
            (lib "gm-pepm-2018/script/python.rkt")
            (lib "gm-pepm-2018/nepls-2017/bib.rkt")
            (lib "gm-pepm-2018/script/sample.rkt")
            (lib "gm-pepm-2018/script/benchmark-info.rkt")
            (lib "gm-pepm-2018/script/config.rkt")))
          (name . "gm-pepm-2018")
          (nix-sha256
           .
           "1gbcrshxngglkm1cy89q9yrbf5pbmdhc3m9wi43pb92ccq48p1mx")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (artifact . #t)
                   (author:types@ccs.neu.edu . #t)
                   (performance . #t)
                   (ring:2 . #t)))
          (source
           .
           "https://github.com/nuprl/retic_performance.git?path=gm-pepm-2018")
          (tags . ("artifact" "performance"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "dd5f1ad9bb6adbf53743c6856999e87e288a2c88")
                          (source
                           .
                           "https://github.com/nuprl/retic_performance.git?path=gm-pepm-2018")
                          (source_url
                           .
                           "https://github.com/nuprl/retic_performance.git?path=gm-pepm-2018")))))))
 ("gmp"
  .
  #hasheq((author . "ryanc@racket-lang.org")
          (authors . ("ryanc@racket-lang.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "gmp" "doc/gmp@gmp/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/gmp.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/gmp.txt")))
          (checksum . "45807466a9a1492e8abce7f1453ee5253c698a58")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "rackunit-lib"
            "binaryio-lib"
            "gmp-lib"
            "racket-doc"
            "scribble-lib"))
          (dependency-names
           .
           ("base"
            "rackunit-lib"
            "binaryio-lib"
            "gmp-lib"
            "racket-doc"
            "scribble-lib"))
          (description
           .
           "Bindings to gmp (the GNU Multiple Precision Arithmetic Library)")
          (implies . ("gmp-lib"))
          (last-checked . 1557339596)
          (last-edit . 1501866209)
          (last-updated . 1518567888)
          (modules
           .
           ((lib "gmp/tests/util.rkt")
            (lib "gmp/gmp.scrbl")
            (lib "gmp/tests/misc.rkt")
            (lib "gmp/tests/bytes.rkt")))
          (name . "gmp")
          (nix-sha256
           .
           "1w9c2nidld48jz1k860kcizncdc4i49vzjq62dwvcyq21n31cpcr")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:ryanc@racket-lang.org . #t)
                   (math . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/rmculpepper/racket-gmp?path=gmp")
          (tags . ("math"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "45807466a9a1492e8abce7f1453ee5253c698a58")
                          (source
                           .
                           "git://github.com/rmculpepper/racket-gmp?path=gmp")
                          (source_url
                           .
                           "http://github.com/rmculpepper/racket-gmp/tree/master?path=gmp")))))))
 ("gmp-lib"
  .
  #hasheq((author . "ryanc@racket-lang.org")
          (authors . ("ryanc@racket-lang.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/gmp-lib.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/gmp-lib.txt")))
          (checksum . "45807466a9a1492e8abce7f1453ee5253c698a58")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base"))
          (dependency-names . ("base"))
          (description
           .
           "Bindings to gmp (the GNU Multiple Precision Arithmetic Library)")
          (implies . ())
          (last-checked . 1557339596)
          (last-edit . 1501866112)
          (last-updated . 1518567888)
          (modules
           .
           ((lib "gmp/unsafe.rkt")
            (lib "gmp/private/gmp.rkt")
            (lib "gmp/main.rkt")))
          (name . "gmp-lib")
          (nix-sha256
           .
           "1w9c2nidld48jz1k860kcizncdc4i49vzjq62dwvcyq21n31cpcr")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:ryanc@racket-lang.org . #t)
                   (math . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/rmculpepper/racket-gmp?path=gmp-lib")
          (tags . ("math"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "45807466a9a1492e8abce7f1453ee5253c698a58")
                          (source
                           .
                           "git://github.com/rmculpepper/racket-gmp?path=gmp-lib")
                          (source_url
                           .
                           "http://github.com/rmculpepper/racket-gmp/tree/master?path=gmp-lib")))))))
 ("gnal-lang"
  .
  #hasheq((author . "alexander@knauth.org")
          (authors . ("alexander@knauth.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . "server/built/deps/gnal-lang.txt")
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/gnal-lang.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/gnal-lang.txt")))
          (checksum . "9ce8615c21ae6e9768d2e5c88609466492a4ac80")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base"))
          (dependency-names . ("base"))
          (description
           .
           "a #lang that allows relative module paths for reader languages")
          (implies . ())
          (last-checked . 1557339597)
          (last-edit . 1469581130)
          (last-updated . 1502816084)
          (modules
           .
           ((lib "gnal/tests/case-insensitive.rkt")
            (lib "gnal/tests/test-turtle-rel.rkt")
            (lib "gnal/lang/reader.rkt")
            (lib "gnal/tests/test-turtle.rkt")
            (lib "gnal/tests/test-case-insensitive.rkt")
            (lib "gnal/tests/test-fish.rkt")
            (lib "gnal/tests/test-fish-rel.rkt")))
          (name . "gnal-lang")
          (nix-sha256
           .
           "1i5w5r29v3xw9y58kv97k90wixzw2zlzbb9p20h8krg735vgw7yd")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-dep-fail: . #t)
                   (:build-success: . #t)
                   (author:alexander@knauth.org . #t)
                   (lang . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/AlexKnauth/gnal-lang")
          (tags . ("lang"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "9ce8615c21ae6e9768d2e5c88609466492a4ac80")
                          (source . "git://github.com/AlexKnauth/gnal-lang")
                          (source_url
                           .
                           "http://github.com/AlexKnauth/gnal-lang/tree/master")))))))
 ("gnucash"
  .
  #hasheq((author . "clements@racket-lang.org")
          (authors . ("clements@racket-lang.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "gnucash" "doc/gnucash@gnucash/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/gnucash.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/gnucash.txt")))
          (checksum . "4b8c74104c7aa0ceb93357a6b7985364dd34a192")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "sxml"
            "srfi-lib"
            "srfi-lite-lib"
            "memoize"
            "rackunit-lib"
            "typed-racket-lib"
            "rackunit-typed"
            "racket-doc"
            "scribble-lib"))
          (dependency-names
           .
           ("base"
            "sxml"
            "srfi-lib"
            "srfi-lite-lib"
            "memoize"
            "rackunit-lib"
            "typed-racket-lib"
            "rackunit-typed"
            "racket-doc"
            "scribble-lib"))
          (description . "parses gnucash XML files")
          (implies . ())
          (last-checked . 1557339597)
          (last-edit . 1426613240)
          (last-updated . 1551683047)
          (modules
           .
           ((lib "gnucash/parse.rkt")
            (lib "gnucash/scribblings/gnucash.scrbl")
            (lib "gnucash/typed-libs.rkt")
            (lib "gnucash/libs.rkt")
            (lib "gnucash/examples/example.rkt")
            (lib "gnucash/main.rkt")
            (lib "gnucash/wrapped-parse.rkt")))
          (name . "gnucash")
          (nix-sha256
           .
           "0znkhpxm846y2xfla2rjfjjm4sv4b7i84wfxr62r9wkpq1ldcnpq")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:clements@racket-lang.org . #t)
                   (io . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/jbclements/gnucash")
          (tags . ("io"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "4b8c74104c7aa0ceb93357a6b7985364dd34a192")
                          (source . "git://github.com/jbclements/gnucash")
                          (source_url
                           .
                           "http://github.com/jbclements/gnucash/tree/master")))))))
 ("goblins"
  .
  #hasheq((author . "cwebber@dustycloud.org")
          (authors . ("cwebber@dustycloud.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "goblins" "doc/goblins@goblins/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/goblins.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/goblins.txt")))
          (checksum . "8b4a28421483a4b6a00093a43f951f217aa007d7")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base" "scribble-lib" "rackunit-lib" "sandbox-lib"))
          (dependency-names
           .
           ("base" "scribble-lib" "rackunit-lib" "sandbox-lib"))
          (description . "Goblins is a lightweight actor model library.")
          (implies . ())
          (last-checked . 1557339597)
          (last-edit . 1540735779)
          (last-updated . 1540840446)
          (modules
           .
           ((lib "goblins/scribblings/goblins.scrbl")
            (lib "goblins/demos/robotscanner.rkt")
            (lib "goblins/demos/simplest-possible.rkt")
            (lib "goblins/demos/botherbotherbother.rkt")
            (lib "goblins/actors.rkt")
            (lib "goblins/main.rkt")))
          (name . "goblins")
          (nix-sha256
           .
           "0wds9nna2hyqwmmkzlkh48kskck0bwyzyx07gin8plpix5n1pgfp")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (actors . #t)
                   (asynchronous . #t)
                   (author:cwebber@dustycloud.org . #t)
                   (ring:2 . #t)))
          (source . "https://gitlab.com/spritely/goblins.git?path=goblins")
          (tags . ("actors" "asynchronous"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "8b4a28421483a4b6a00093a43f951f217aa007d7")
                          (source
                           .
                           "https://gitlab.com/spritely/goblins.git?path=goblins")
                          (source_url
                           .
                           "https://gitlab.com/spritely/goblins.git?path=goblins")))
                 ("0.1"
                  .
                  #hasheq((checksum
                           .
                           "60f8caf5594bb142bf111549f6219eb591e39136")
                          (source
                           .
                           "https://gitlab.com/spritely/goblins.git?path=goblins#v0.1")
                          (source_url
                           .
                           "https://gitlab.com/spritely/goblins.git?path=goblins#v0.1")))))))
 ("google"
  .
  #hasheq((author . "tonygarnockjones@gmail.com")
          (authors . ("tonygarnockjones@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/google.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/google.txt")))
          (checksum . "236b1fb8bdd0975bf2ce820f6277927c7bc25635")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "gui-lib" "net-lib" "rackunit-lib"))
          (dependency-names . ("base" "gui-lib" "net-lib" "rackunit-lib"))
          (description . "Google APIs (Drive, Plus, ...) for Racket.")
          (implies . ())
          (last-checked . 1557339598)
          (last-edit . 1441050883)
          (last-updated . 1502816085)
          (modules
           .
           ((lib "google/drive.rkt")
            (lib "google/generic-api.rkt")
            (lib "google/simple-token-store.rkt")
            (lib "google/calendar.rkt")
            (lib "google/oauth.rkt")
            (lib "google/oauth/cli.rkt")
            (lib "google/profile.rkt")
            (lib "google/main.rkt")
            (lib "google/exn.rkt")
            (lib "google/json-utils.rkt")))
          (name . "google")
          (nix-sha256
           .
           "0s7mp9jg7fjr3kz2r9kmalv2jq333c2h7hq403kpa7xsfdqk2pbr")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (api . #t)
                   (author:tonygarnockjones@gmail.com . #t)
                   (google . #t)
                   (ring:1 . #t)
                   (web . #t)))
          (source . "github://github.com/tonyg/racket-google/master")
          (tags . ("api" "google" "web"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "236b1fb8bdd0975bf2ce820f6277927c7bc25635")
                          (source
                           .
                           "github://github.com/tonyg/racket-google/master")
                          (source_url
                           .
                           "http://github.com/tonyg/racket-google/tree/master")))))))
 ("gradual-typing-bib"
  .
  #hasheq((author . "samth@ccs.neu.edu")
          (authors . ("samth@ccs.neu.edu"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/gradual-typing-bib.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/gradual-typing-bib.txt")))
          (checksum . "21ff9002eae65aca157d5bd37ee24361aa63e62a")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "scribble-lib" "at-exp-lib"))
          (dependency-names . ("base" "scribble-lib" "at-exp-lib"))
          (description . "")
          (implies . ())
          (last-checked . 1557339598)
          (last-edit . 1522703349)
          (last-updated . 1549892423)
          (modules . ((lib "gradual-typing-bib/main.rkt")))
          (name . "gradual-typing-bib")
          (nix-sha256
           .
           "0nc3vnw4y8xf3risq3lkwv019cjq82cscpvypr74mcy034lrqj6w")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:no-desc: . #t)
                   (:no-tag: . #t)
                   (author:samth@ccs.neu.edu . #t)
                   (ring:2 . #t)))
          (source . "https://github.com/samth/gradual-typing-bib.git")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "21ff9002eae65aca157d5bd37ee24361aa63e62a")
                          (source
                           .
                           "https://github.com/samth/gradual-typing-bib.git")
                          (source_url
                           .
                           "https://github.com/samth/gradual-typing-bib.git")))))))
 ("graph"
  .
  #hasheq((author . "stchang@racket-lang.org")
          (authors . ("stchang@racket-lang.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "graph" "doc/graph@graph/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/graph.txt")
                 (test-failure-log . "server/built/test-fail/graph.txt")
                 (test-success-log . #f)))
          (checksum . "36a256b9aeed8e2058e3e7a550907147e1722ea3")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           (("racket" "5.3.2")
            "base"
            "data-lib"
            "math-lib"
            "rackunit-lib"
            "racket-doc"
            "scribble-lib"
            "data-doc"
            "math-doc"))
          (dependency-names
           .
           ("base"
            "data-lib"
            "math-lib"
            "rackunit-lib"
            "racket-doc"
            "scribble-lib"
            "data-doc"
            "math-doc"))
          (description . "Generic graph library.")
          (implies . ())
          (last-checked . 1557339598)
          (last-edit . 1376368650)
          (last-updated . 1526408450)
          (modules
           .
           ((lib "graph/graph-fns-maxflow.rkt")
            (lib "graph/graph-fns-singlesource-shortestpaths.rkt")
            (lib "graph/tests/graph-fns-maxflow-tests.rkt")
            (lib "graph/utils.rkt")
            (lib "graph/tests/timing-test-in-neighbors.rkt")
            (lib "graph/tests/timing-test-scc.rkt")
            (lib "graph/tests/graph-fns-allpairs-shortestpaths-tests.rkt")
            (lib "graph/graph-property.rkt")
            (lib "graph/tests/run-all-tests.rkt")
            (lib "graph/graph-fns-minspantree.rkt")
            (lib "graph/tests/graph-fns-coloring-tests.rkt")
            (lib "graph/graph-unweighted.rkt")
            (lib "graph/tests/graph-fns-singlesource-shortestpaths-tests.rkt")
            (lib "graph/graph-weighted.rkt")
            (lib "graph/graph-fns-basic.rkt")
            (lib "queue/fifo.rkt")
            (lib "graph/tests/timing-tests.rkt")
            (lib "graph/tests/graphviz.rkt")
            (lib "graph/graph.scrbl")
            (lib "graph/graph-fns-allpairs-shortestpaths.rkt")
            (lib "graph/tests/graph-fns-basic-tests.rkt")
            (lib "graph/tests/boost-examples.rkt")
            (lib "graph/hash-utils.rkt")
            (lib "graph/tests/test-utils.rkt")
            (lib "graph/adjlist-utils.rkt")
            (lib "graph/graph-matrix.rkt")
            (lib "graph/tests/graph-fns-minspantree-tests.rkt")
            (lib "graph/graph-fns-graphviz.rkt")
            (lib "queue/gen-queue.rkt")
            (lib "queue/priority.rkt")
            (lib "graph/main.rkt")
            (lib "graph/gen-graph.rkt")
            (lib "graph/graph-fns-coloring.rkt")))
          (name . "graph")
          (nix-sha256
           .
           "03nciwv6y77jdngdhwnkqbdn0xazjrbhax4kk4i6mwgggb2gph4d")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:stchang@racket-lang.org . #t)
                   (data . #t)
                   (graph . #t)
                   (ring:1 . #t)))
          (source . "github://github.com/stchang/graph/master")
          (tags . ("data" "graph"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "36a256b9aeed8e2058e3e7a550907147e1722ea3")
                          (source
                           .
                           "github://github.com/stchang/graph/master")
                          (source_url
                           .
                           "http://github.com/stchang/graph/tree/master")))))))
 ("graphics"
  .
  #hasheq((author . "juzhenliang@gmail.com")
          (authors . ("juzhenliang@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "colorspace" "doc/colorspace@graphics/index.html")
                   ("main" "bitmap" "doc/bitmap@graphics/index.html")
                   ("main" "png" "doc/png@graphics/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/graphics.txt")
                 (test-failure-log . "server/built/test-fail/graphics.txt")
                 (test-success-log . #f)))
          (checksum . "23efb15a786ec60e749f375960a6dd11e1182b3f")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "math-lib"
            "draw-lib"
            "typed-racket-lib"
            "typed-racket-more"
            "scribble-lib"
            "racket-doc"))
          (dependency-names
           .
           ("base"
            "math-lib"
            "draw-lib"
            "typed-racket-lib"
            "typed-racket-more"
            "scribble-lib"
            "racket-doc"))
          (description . "Essential computer graphics for Typed Racket")
          (implies . ())
          (last-checked . 1557339598)
          (last-edit . 1501825474)
          (last-updated . 1534002222)
          (modules
           .
           ((lib "png/digitama/filtering.rkt")
            (lib "bitmap/tamer/cairo/mesh.rkt")
            (lib "bitmap/digitama/unsafe/image.rkt")
            (lib "png/digitama/huffman.rkt")
            (lib "colorspace/misc.rkt")
            (lib "bitmap/digitama/parser/number.rkt")
            (lib "bitmap/tamer/cairo/clip.rkt")
            (lib "png/tamer/png.rkt")
            (lib "bitmap/composite.rkt")
            (lib "bitmap/tamer/polygon.rkt")
            (lib "png/digitama/interlace.rkt")
            (lib "bitmap/digitama/font.rkt")
            (lib "bitmap/digitama/unsafe/source.rkt")
            (lib "bitmap/tamer/cairo/text.rkt")
            (lib "bitmap/digitama/color.rkt")
            (lib "bitmap/base.rkt")
            (lib "bitmap/effect.rkt")
            (lib "bitmap/tamer/cairo/misc.rkt")
            (lib "bitmap/digitama/unsafe/pixman.rkt")
            (lib "bitmap/tamer/cairo/image.rkt")
            (lib "bitmap/tamer/cairo/curve.rkt")
            (lib "bitmap/tamer/cairo/rectangle.rkt")
            (lib "bitmap/font.rkt")
            (lib "png/digitama/png.rkt")
            (lib "bitmap/color.rkt")
            (lib "bitmap/digitama/unsafe/font.rkt")
            (lib "bitmap/digitama/misc.rkt")
            (lib "bitmap/digitama/parser/stream.rkt")
            (lib "bitmap/tamer/bitmap.scrbl")
            (lib "bitmap/digitama/unsafe/paint.rkt")
            (lib "bitmap/digitama/unsafe/pangocairo.rkt")
            (lib "bitmap/tamer/composite/multiple-composite.rkt")
            (lib "bitmap/digitama/unsafe/shape.rkt")
            (lib "bitmap/digitama/unsafe/convert.rkt")
            (lib "bitmap/digitama/source.rkt")
            (lib "bitmap/constants.rkt")
            (lib "bitmap/digitama/composite.rkt")
            (lib "bitmap/constructor.rkt")
            (lib "bitmap/digitama/unsafe/invalid.rkt")
            (lib "bitmap/tamer/grayscale.rkt")
            (lib "bitmap/digitama/enumeration.rkt")
            (lib "colorspace/tamer/hsb.rkt")
            (lib "png/tamer/png.scrbl")
            (lib "png/digitama/enum.rkt")
            (lib "colorspace/tamer/colorspace.scrbl")
            (lib "bitmap/tamer/composite/table.rkt")
            (lib "bitmap/digitama/parser/exn.rkt")
            (lib "bitmap/tamer/invalid.rkt")
            (lib "bitmap/invalid.rkt")
            (lib "bitmap/digitama/resize.rkt")
            (lib "bitmap/main.rkt")
            (lib "bitmap/tamer/cellophane.rkt")
            (lib "bitmap/tamer/resize.rkt")
            (lib "bitmap/paint.rkt")
            (lib "bitmap/digitama/unsafe/resize.rkt")
            (lib "bitmap/digitama/unsafe/composite.rkt")
            (lib "bitmap/stdio.rkt")
            (lib "bitmap/tamer/font.rkt")
            (lib "bitmap/digitama/unsafe/constants.rkt")
            (lib "bitmap/tamer/composite/pin.rkt")
            (lib "bitmap/digitama/paint.rkt")
            (lib "bitmap/tamer/cairo/gradient.rkt")
            (lib "png/base.rkt")
            (lib "png/digitama/crc.rkt")
            (lib "png/tamer/schaik/zlib.rkt")
            (lib "png/digitama/stdin.rkt")
            (lib "colorspace/hsb.rkt")
            (lib "png/tamer/huffman.rkt")
            (lib "colorspace/digitama/hsb.rkt")
            (lib "bitmap/digitama/stdio.rkt")
            (lib "bitmap/resize.rkt")
            (lib "bitmap/digitama/base.rkt")
            (lib "bitmap/misc.rkt")
            (lib "png/digitama/zlib.rkt")
            (lib "bitmap/digitama/unsafe/effect.rkt")
            (lib "bitmap/tamer/composite/composite.rkt")
            (lib "bitmap/tamer/zero.rkt")
            (lib "bitmap/tamer/density.rkt")
            (lib "bitmap/tamer/cairo/pango.rkt")
            (lib "colorspace/main.rkt")
            (lib "bitmap/digitama/unsafe/text.rkt")))
          (name . "graphics")
          (nix-sha256
           .
           "1j5jqsag9hfrlsgybzddz1sk7d221zxznx1zr0mz40xcq2294g75")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:juzhenliang@gmail.com . #t)
                   (colorspace . #t)
                   (graphics . #t)
                   (ring:1 . #t)
                   (typed-racket . #t)
                   (unstable . #t)))
          (source . "git://github.com/wargrey/graphics")
          (tags . ("colorspace" "graphics" "typed-racket" "unstable"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "23efb15a786ec60e749f375960a6dd11e1182b3f")
                          (source . "git://github.com/wargrey/graphics")
                          (source_url
                           .
                           "http://github.com/wargrey/graphics/tree/master")))))))
 ("gregor"
  .
  #hasheq((author . "zeppieri@gmail.com")
          (authors . ("zeppieri@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/gregor.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/gregor.txt")))
          (checksum . "a910dca98cae46048e3620d861d325ab42d02b4f")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("gregor-lib" "gregor-doc" "base"))
          (dependency-names . ("gregor-lib" "gregor-doc" "base"))
          (description . "Date and time library")
          (implies . ("gregor-lib" "gregor-doc"))
          (last-checked . 1557339598)
          (last-edit . 1427165095)
          (last-updated . 1556053457)
          (modules . ())
          (name . "gregor")
          (nix-sha256
           .
           "18rlvqhhv9jn0qxp8dyph23p0xvb36rrg6cancqmxkqs11c5rsbb")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:zeppieri@gmail.com . #t)
                   (calendar . #t)
                   (date . #t)
                   (ring:1 . #t)
                   (time . #t)))
          (source . "git://github.com/97jaz/gregor/?path=gregor")
          (tags . ("calendar" "date" "time"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "a910dca98cae46048e3620d861d325ab42d02b4f")
                          (source
                           .
                           "git://github.com/97jaz/gregor/?path=gregor")
                          (source_url
                           .
                           "git://github.com/97jaz/gregor/?path=gregor")))))))
 ("gregor-doc"
  .
  #hasheq((author . "zeppieri@gmail.com")
          (authors . ("zeppieri@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "gregor" "doc/gregor@gregor-doc/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/gregor-doc.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/gregor-doc.txt")))
          (checksum . "a910dca98cae46048e3620d861d325ab42d02b4f")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "base"
            "racket-doc"
            "data-doc"
            "data-lib"
            "gregor-lib"
            "scribble-lib"
            "sandbox-lib"
            "tzinfo"))
          (dependency-names
           .
           ("base"
            "base"
            "racket-doc"
            "data-doc"
            "data-lib"
            "gregor-lib"
            "scribble-lib"
            "sandbox-lib"
            "tzinfo"))
          (description . "Documentation part of gregor library")
          (implies . ())
          (last-checked . 1557339598)
          (last-edit . 1426998205)
          (last-updated . 1556053457)
          (modules
           .
           ((lib "gregor/scribblings/datetime.scrbl")
            (lib "gregor/scribblings/datetime-arithmetic-provider.scrbl")
            (lib "gregor/scribblings/query.scrbl")
            (lib "gregor/scribblings/date-provider.scrbl")
            (lib "gregor/scribblings/time.scrbl")
            (lib "gregor/scribblings/time-provider.scrbl")
            (lib "gregor/scribblings/moment.scrbl")
            (lib "gregor/scribblings/datetime-provider.scrbl")
            (lib "gregor/scribblings/date.scrbl")
            (lib "gregor/scribblings/gregor.scrbl")
            (lib "gregor/scribblings/date-arithmetic-provider.scrbl")
            (lib "gregor/scribblings/time-arithmetic-provider.scrbl")
            (lib "gregor/scribblings/period.scrbl")
            (lib "gregor/scribblings/format.scrbl")
            (lib "gregor/scribblings/exceptions.scrbl")
            (lib "gregor/scribblings/timezone.scrbl")
            (lib "gregor/scribblings/clock.scrbl")
            (lib "gregor/scribblings/moment-provider.scrbl")))
          (name . "gregor-doc")
          (nix-sha256
           .
           "18rlvqhhv9jn0qxp8dyph23p0xvb36rrg6cancqmxkqs11c5rsbb")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:zeppieri@gmail.com . #t)
                   (calendar . #t)
                   (date . #t)
                   (ring:1 . #t)
                   (time . #t)))
          (source . "git://github.com/97jaz/gregor/?path=gregor-doc")
          (tags . ("calendar" "date" "time"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "a910dca98cae46048e3620d861d325ab42d02b4f")
                          (source
                           .
                           "git://github.com/97jaz/gregor/?path=gregor-doc")
                          (source_url
                           .
                           "git://github.com/97jaz/gregor/?path=gregor-doc")))))))
 ("gregor-lib"
  .
  #hasheq((author . "zeppieri@gmail.com")
          (authors . ("zeppieri@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/gregor-lib.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/gregor-lib.txt")))
          (checksum . "a910dca98cae46048e3620d861d325ab42d02b4f")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "data-lib"
            "memoize"
            "parser-tools-lib"
            "tzinfo"
            "cldr-core"
            "cldr-bcp47"
            "cldr-numbers-modern"
            "cldr-dates-modern"
            "cldr-localenames-modern"
            "racket-doc"
            "scribble-lib"))
          (dependency-names
           .
           ("base"
            "data-lib"
            "memoize"
            "parser-tools-lib"
            "tzinfo"
            "cldr-core"
            "cldr-bcp47"
            "cldr-numbers-modern"
            "cldr-dates-modern"
            "cldr-localenames-modern"
            "racket-doc"
            "scribble-lib"))
          (description . "Code part of the gregor date and time library")
          (implies . ())
          (last-checked . 1557339598)
          (last-edit . 1426998088)
          (last-updated . 1556053458)
          (modules
           .
           ((lib "gregor/private/pattern/ast/period.rkt")
            (lib "gregor/private/pattern/ast/hour.rkt")
            (lib "gregor/private/pattern/ast/day.rkt")
            (lib "gregor/private/datetime.rkt")
            (lib "gregor/private/pattern/l10n/zone-nonloc.rkt")
            (lib "gregor/period.rkt")
            (lib "gregor/private/pattern/ast/era.rkt")
            (lib "gregor/private/pattern/parse-state.rkt")
            (lib "gregor/private/pattern/ast/literal.rkt")
            (lib "gregor/private/pattern/ast.rkt")
            (lib "gregor/private/format.rkt")
            (lib "gregor/private/pattern/lexer.rkt")
            (lib "gregor/private/moment-base.rkt")
            (lib "gregor/private/core/compare.rkt")
            (lib "gregor/private/pattern/ast/zone.rkt")
            (lib "gregor/private/pattern/ast/quarter.rkt")
            (lib "gregor/private/pattern/l10n/symbols.rkt")
            (lib "gregor/private/generics.rkt")
            (lib "gregor/private/pattern/l10n/numbers.rkt")
            (lib "gregor/private/pattern/ast/week.rkt")
            (lib "gregor/private/pattern/ast/weekday.rkt")
            (lib "gregor/private/pattern/ast/second.rkt")
            (lib "gregor/private/pattern/l10n/trie.rkt")
            (lib "gregor/main.rkt")
            (lib "gregor/private/core/hmsn.rkt")
            (lib "gregor/private/date.rkt")
            (lib "gregor/private/pattern/ast/separator.rkt")
            (lib "gregor/private/time.rkt")
            (lib "gregor/private/pattern/l10n/zone-loc.rkt")
            (lib "gregor/private/exn.rkt")
            (lib "gregor/time.rkt")
            (lib "gregor/private/iso8601-parse.rkt")
            (lib "gregor/private/pattern/ast/month.rkt")
            (lib "gregor/private/pattern/l10n/iso-offset.rkt")
            (lib "gregor/private/pattern/l10n/l10n-week.rkt")
            (lib "gregor/private/moment.rkt")
            (lib "gregor/private/pattern/l10n/zone-util.rkt")
            (lib "gregor/private/pattern/ast/minute.rkt")
            (lib "gregor/private/period.rkt")
            (lib "gregor/private/core/ymd.rkt")
            (lib "gregor/private/pattern/l10n/zone-id.rkt")
            (lib "gregor/private/pattern/l10n/named-trie.rkt")
            (lib "gregor/private/parse.rkt")
            (lib "gregor/private/pattern/ast/year.rkt")
            (lib "gregor/private/core/structs.rkt")
            (lib "gregor/private/clock.rkt")
            (lib "gregor/private/pattern/l10n/metazone.rkt")
            (lib "gregor/private/pattern/l10n/gmt-offset.rkt")
            (lib "gregor/private/offset-resolvers.rkt")
            (lib "gregor/private/core/math.rkt")
            (lib "gregor/private/difference.rkt")))
          (name . "gregor-lib")
          (nix-sha256
           .
           "18rlvqhhv9jn0qxp8dyph23p0xvb36rrg6cancqmxkqs11c5rsbb")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:zeppieri@gmail.com . #t)
                   (calendar . #t)
                   (date . #t)
                   (ring:1 . #t)
                   (time . #t)))
          (source . "git://github.com/97jaz/gregor/?path=gregor-lib")
          (tags . ("calendar" "date" "time"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "a910dca98cae46048e3620d861d325ab42d02b4f")
                          (source
                           .
                           "git://github.com/97jaz/gregor/?path=gregor-lib")
                          (source_url
                           .
                           "git://github.com/97jaz/gregor/?path=gregor-lib")))))))
 ("gregor-test"
  .
  #hasheq((author . "zeppieri@gmail.com")
          (authors . ("zeppieri@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/gregor-test.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/gregor-test.txt")))
          (checksum . "a910dca98cae46048e3620d861d325ab42d02b4f")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "gregor-lib" "rackunit-lib"))
          (dependency-names . ("base" "gregor-lib" "rackunit-lib"))
          (description . "Tests for the gregor library")
          (implies . ())
          (last-checked . 1557339598)
          (last-edit . 1426998261)
          (last-updated . 1556053458)
          (modules
           .
           ((lib "gregor/tests/moment-provider.rkt")
            (lib "gregor/tests/datetime-provider.rkt")
            (lib "gregor/tests/clock.rkt")
            (lib "gregor/tests/time.rkt")
            (lib "gregor/tests/datetime.rkt")
            (lib "gregor/tests/date-provider.rkt")
            (lib "gregor/tests/period.rkt")
            (lib "gregor/tests/all-tests.rkt")
            (lib "gregor/tests/query.rkt")
            (lib "gregor/tests/date-arithmetic.rkt")
            (lib "gregor/tests/datetime-arithmetic.rkt")
            (lib "gregor/tests/time-provider.rkt")
            (lib "gregor/tests/moment.rkt")
            (lib "gregor/tests/parse.rkt")
            (lib "gregor/tests/date.rkt")
            (lib "gregor/tests/time-arithmetic.rkt")
            (lib "gregor/tests/format.rkt")))
          (name . "gregor-test")
          (nix-sha256
           .
           "18rlvqhhv9jn0qxp8dyph23p0xvb36rrg6cancqmxkqs11c5rsbb")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:no-tag: . #t)
                   (author:zeppieri@gmail.com . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/97jaz/gregor/?path=gregor-test")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "a910dca98cae46048e3620d861d325ab42d02b4f")
                          (source
                           .
                           "git://github.com/97jaz/gregor/?path=gregor-test")
                          (source_url
                           .
                           "git://github.com/97jaz/gregor/?path=gregor-test")))))))
 ("grift"
  .
  #hasheq((author . "diaa6510@gmail.com akuhlens@iu.edu")
          (authors . ("diaa6510@gmail.com" "akuhlens@iu.edu"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . "server/built/fail/grift.txt")
                 (min-failure-log . #f)
                 (success-log . #f)
                 (test-failure-log . #f)
                 (test-success-log . #f)))
          (checksum . "87669583a938a3d4149f8ab07fabf4f205c50be8")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ())
          (dependency-names . ())
          (description . "A gradually typed language")
          (implies . ())
          (last-checked . 1557339598)
          (last-edit . 1537065784)
          (last-updated . 1550875833)
          (modules
           .
           ((lib "grift/src/casts/constants-and-codes.rkt")
            (lib "grift/src/unique-identifiers.rkt")
            (lib "grift/src/language/syntax-with-constants.rkt")
            (lib "grift/src/lib/dgraph.rkt")
            (lib "grift/tests/paths.rkt")
            (lib "grift/src/language/data5.rkt")
            (lib "grift/src/grift/reduce-to-cast-calculus.rkt")
            (lib "grift/src/configuration.rkt")
            (lib "grift/src/logging.rkt")
            (lib "grift/src/language/cast-or-coerce3.2.rkt")
            (lib "grift/src/language/data2.rkt")
            (lib "grift/src/lib/mutable-set.rkt")
            (lib "grift/src/casts/interpret-casts-with-error.rkt")
            (lib "grift/src/data/simplify-predicates.rkt")
            (lib "grift/tests/suite/large/tests.rkt")
            (lib "grift/tests/suite/static/tests.rkt")
            (lib "grift/src/casts/interpret-casts-with-type-based-casts.rkt")
            (lib "grift/src/language/data0.rkt")
            (lib "grift/benchmark/bench.rkt")
            (lib "grift/src/casts/purify-letrec.rkt")
            (lib "grift/src/language/pprint.rkt")
            (lib "grift/tests/suite/static/binding/tests.rkt")
            (lib "grift/src/data/normalize-context.rkt")
            (lib "grift/src/language/c-helpers.rkt")
            (lib "grift/src/language/primitives.rkt")
            (lib "grift/src/language/grift0.rkt")
            (lib "grift/tests/suite/tuples/tests.rkt")
            (lib "grift/src/lib/function.rkt")
            (lib "grift/tests/macros.rkt")
            (lib "grift/src/casts/memory-layout-helpers.rkt")
            (lib "grift/tests/suite/boxes/tests.rkt")
            (lib "grift/src/grift/type-check.rkt")
            (lib "grift/tests/test-compile-file.rkt")
            (lib "grift/src/language/data3.rkt")
            (lib "grift/src/backend-c/runtime-location.rkt")
            (lib "grift/src/language/cast-or-coerce4.rkt")
            (lib "grift/src/data/convert-representation.rkt")
            (lib "grift/src/backend-c/generate-c.rkt")
            (lib "grift/tests/main.rkt")
            (lib "grift/src/casts/interpret-casts-common.rkt")
            (lib "grift/src/casts/label-lambdas.rkt")
            (lib "grift/tests/suite/mu/tests.rkt")
            (lib "grift/src/casts/specify-representation.rkt")
            (lib "grift/src/unsafe-require-typed.rkt")
            (lib "grift/src/type-equality.rkt")
            (lib "grift/src/data/flatten-values.rkt")
            (lib "grift/src/language/cast0.rkt")
            (lib "grift/src/growable-vector.rkt")
            (lib "grift/src/language/cast-or-coerce3.rkt")
            (lib "grift/src/language/static.rkt")
            (lib "grift/src/language/syntax.rkt")
            (lib "grift/src/casts/cast-profiler.rkt")
            (lib "grift/tests/suite/tests.rkt")
            (lib "grift/src/language/cast-or-coerce6.rkt")
            (lib "grift/src/language/grift1.rkt")
            (lib "grift/tests/suite/core/tests.rkt")
            (lib "grift/tests/suite/monovectors/tests.rkt")
            (lib "grift/src/grift/read.rkt")
            (lib "grift/src/form-generics.rkt")
            (lib "grift/src/casts/hoist-types-and-coercions.rkt")
            (lib "grift/tests/suite/monoboxes/tests.rkt")
            (lib "grift/src/backend-c/runtime/make.rkt")
            (lib "grift/src/errors.rkt")
            (lib "grift/src/helpers-untyped.rkt")
            (lib "grift/src/unique-counter.rkt")
            (lib "grift/src/casts/impose-cast-semantics.rkt")
            (lib "grift/src/language/cast-or-coerce5.rkt")
            (lib "grift/main.rkt")
            (lib "grift/src/lib/dhash.rkt")
            (lib "grift/tests/rackunit.rkt")
            (lib "grift/src/data/remove-complex-opera.rkt")
            (lib "grift/src/casts/convert-closures.rkt")
            (lib "grift/tests/test-compile.rkt")
            (lib "grift/src/language/forms.rkt")
            (lib "grift/src/language/forms-equal.rkt")
            (lib "grift/src/language/form-map.rkt")
            (lib "grift/src/language/make-begin.rkt")
            (lib "grift/tests/suite/tools/tests.rkt")
            (lib "grift/src/backend-c/code-generator.rkt")
            (lib "grift/src/casts/interpret-casts-with-hyper-coercions.rkt")
            (lib "grift/src/grift/definer.rkt")
            (lib "grift/src/language/cast-or-coerce3.1.rkt")
            (lib "grift/src/grift/insert-casts.rkt")
            (lib "grift/src/helpers.rkt")
            (lib "grift/tests/suite/core/binding/tests.rkt")
            (lib "grift/src/casts/interpret-casts.rkt")
            (lib "grift/src/grift/syntax-to-grift0.rkt")
            (lib "grift/src/language/lambda1.rkt")
            (lib "grift/src/macros.rkt")
            (lib "grift/src/compile.rkt")
            (lib "grift/benchmark/configs.rkt")
            (lib "grift/src/language/lambda0.rkt")
            (lib "grift/tests/suite/vectors/tests.rkt")
            (lib "grift/src/language/data4.rkt")
            (lib "grift/tests/values.rkt")
            (lib "grift/src/casts/define-to-let.rkt")
            (lib "grift/tests/suite/program/tests.rkt")
            (lib "grift/src/casts/interpret-casts-with-coercions.rkt")
            (lib "grift/src/language/data1.rkt")
            (lib "grift/src/data/uncover-locals.rkt")
            (lib "grift/src/lib/graph.rkt")
            (lib "grift/src/lib/option-set.rkt")))
          (name . "grift")
          (nix-sha256
           .
           "1djdk1d14yyzg808ldy5f5x0s08w9km12504d8mr6khhrnfvvjkx")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-fail: . #t)
                   (author:akuhlens@iu.edu . #t)
                   (author:diaa6510@gmail.com . #t)
                   (compiler . #t)
                   (gradual-typing . #t)
                   (language . #t)
                   (programming-languages . #t)
                   (ring:2 . #t)))
          (source . "https://github.com/Gradual-Typing/Grift.git")
          (tags
           .
           ("compiler" "gradual-typing" "language" "programming-languages"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "87669583a938a3d4149f8ab07fabf4f205c50be8")
                          (source
                           .
                           "https://github.com/Gradual-Typing/Grift.git")
                          (source_url
                           .
                           "https://github.com/Gradual-Typing/Grift.git")))))))
 ("gtp-benchmarks"
  .
  #hasheq((author . "types@ccs.neu.edu")
          (authors . ("types@ccs.neu.edu"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "gtp-benchmarks"
                    "doc/gtp-benchmarks@gtp-benchmarks/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/gtp-benchmarks.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/gtp-benchmarks.txt")))
          (checksum . "0ce76838860e083f1c507b5b2c8e3e49cebaf4a4")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "typed-racket-lib"
            "typed-racket-more"
            "require-typed-check"
            "scribble-lib"
            "racket-doc"
            "rackunit-lib"
            "typed-racket-doc"
            "at-exp-lib"
            "gtp-util"
            "pict-lib"
            "scribble-abbrevs"
            "syntax-sloc"
            "with-cache"))
          (dependency-names
           .
           ("base"
            "typed-racket-lib"
            "typed-racket-more"
            "require-typed-check"
            "scribble-lib"
            "racket-doc"
            "rackunit-lib"
            "typed-racket-doc"
            "at-exp-lib"
            "gtp-util"
            "pict-lib"
            "scribble-abbrevs"
            "syntax-sloc"
            "with-cache"))
          (description . "gradual typing performance benchmarks")
          (implies . ())
          (last-checked . 1557339598)
          (last-edit . 1525737422)
          (last-updated . 1556925573)
          (modules
           .
           ((lib "gtp-benchmarks/benchmarks/quadT/untyped/world.rkt")
            (lib "gtp-benchmarks/utilities/type-info.rkt")
            (lib "gtp-benchmarks/benchmarks/dungeon/untyped/utils.rkt")
            (lib "gtp-benchmarks/benchmarks/quadU/untyped/utils.rkt")
            (lib "gtp-benchmarks/benchmarks/quadU/base/csp/test-problems.rkt")
            (lib "gtp-benchmarks/benchmarks/fsmoo/untyped/utilities.rkt")
            (lib "gtp-benchmarks/benchmarks/zordoz/typed/zo-transition.rkt")
            (lib "gtp-benchmarks/benchmarks/quadU/untyped/ocm.rkt")
            (lib "gtp-benchmarks/benchmarks/take5/typed/card.rkt")
            (lib "gtp-benchmarks/benchmarks/kcfa/untyped/time.rkt")
            (lib "gtp-benchmarks/benchmarks/acquire/typed/auxiliaries.rkt")
            (lib "gtp-benchmarks/benchmarks/mbta/typed/run-t.rkt")
            (lib "gtp-benchmarks/benchmarks/quadU/typed/quad-main.rkt")
            (lib "gtp-benchmarks/benchmarks/gregor/both/tzinfo-adapter.rkt")
            (lib "gtp-benchmarks/benchmarks/take5/untyped/stack.rkt")
            (lib
             "gtp-benchmarks/benchmarks/mbta/base/graph/graph/graph-fns-coloring.rkt")
            (lib "gtp-benchmarks/benchmarks/take5/both/basics-types.rkt")
            (lib "gtp-benchmarks/benchmarks/acquire/typed/board.rkt")
            (lib "gtp-benchmarks/benchmarks/take5/both/deck-types.rkt")
            (lib "gtp-benchmarks/benchmarks/jpeg/untyped/bit-ports.rkt")
            (lib "gtp-benchmarks/benchmarks/mbta/typed/t-view.rkt")
            (lib "gtp-benchmarks/benchmarks/gregor/both/gregor-adapter.rkt")
            (lib "gtp-benchmarks/benchmarks/gregor/untyped/hmsn.rkt")
            (lib "gtp-benchmarks/utilities/make-configurations.rkt")
            (lib "gtp-benchmarks/benchmarks/fsm/both/benchmark-util.rkt")
            (lib "gtp-benchmarks/benchmarks/acquire/untyped/basics.rkt")
            (lib
             "gtp-benchmarks/benchmarks/gregor/base/tzinfo/private/os/unix.rkt")
            (lib "gtp-benchmarks/benchmarks/zombie/typed/image.rkt")
            (lib "gtp-benchmarks/benchmarks/take5/untyped/main.rkt")
            (lib "gtp-benchmarks/benchmarks/fsm/untyped/main.rkt")
            (lib "gtp-benchmarks/benchmarks/acquire/base/types.rkt")
            (lib "gtp-benchmarks/benchmarks/forth/untyped/eval.rkt")
            (lib "gtp-benchmarks/benchmarks/tetris/untyped/main.rkt")
            (lib
             "gtp-benchmarks/benchmarks/mbta/base/graph/graph/tests/boost-examples.rkt")
            (lib "gtp-benchmarks/benchmarks/gregor/base/types.rkt")
            (lib "gtp-benchmarks/benchmarks/quadU/untyped/measure.rkt")
            (lib "gtp-benchmarks/benchmarks/kcfa/untyped/main.rkt")
            (lib "gtp-benchmarks/benchmarks/quadT/base/csp/constraint.rkt")
            (lib
             "gtp-benchmarks/benchmarks/jpeg/base/math/private/array/array-syntax.rkt")
            (lib "gtp-benchmarks/benchmarks/jpeg/base/untyped.rkt")
            (lib "gtp-benchmarks/benchmarks/fsm/both/automata-adapted.rkt")
            (lib "gtp-benchmarks/benchmarks/acquire/typed/basics.rkt")
            (lib "gtp-benchmarks/benchmarks/kcfa/untyped/denotable.rkt")
            (lib "gtp-benchmarks/benchmarks/acquire/base/untyped.rkt")
            (lib "gtp-benchmarks/benchmarks/quadU/typed/hyphenate.rkt")
            (lib "gtp-benchmarks/benchmarks/quadT/typed/quads.rkt")
            (lib "gtp-benchmarks/benchmarks/lnm/untyped/lnm-plot.rkt")
            (lib "gtp-benchmarks/benchmarks/snake/untyped/motion.rkt")
            (lib "gtp-benchmarks/benchmarks/quadU/base/csp/constraint.rkt")
            (lib "gtp-benchmarks/benchmarks/quadT/typed/wrap.rkt")
            (lib "gtp-benchmarks/benchmarks/synth/typed/drum.rkt")
            (lib "gtp-benchmarks/benchmarks/gregor/base/cldr/file.rkt")
            (lib "gtp-benchmarks/benchmarks/zombie/typed/main.rkt")
            (lib "gtp-benchmarks/benchmarks/quadT/base/core-types.rkt")
            (lib "gtp-benchmarks/benchmarks/fsm/typed/automata.rkt")
            (lib
             "gtp-benchmarks/benchmarks/mbta/base/graph/graph/graph-fns-allpairs-shortestpaths.rkt")
            (lib "gtp-benchmarks/benchmarks/fsm/typed/main.rkt")
            (lib "gtp-benchmarks/benchmarks/quadT/base/csp/problem.rkt")
            (lib "gtp-benchmarks/benchmarks/quadU/typed/wrap.rkt")
            (lib
             "gtp-benchmarks/benchmarks/mbta/base/graph/queue/priority.rkt")
            (lib "gtp-benchmarks/benchmarks/mbta/base/t-view-types.rkt")
            (lib "gtp-benchmarks/benchmarks/mbta/typed/main.rkt")
            (lib "gtp-benchmarks/benchmarks/gregor/typed/difference.rkt")
            (lib "gtp-benchmarks/benchmarks/quadT/base/heart-of-darkness.rkt")
            (lib "gtp-benchmarks/benchmarks/kcfa/typed/time.rkt")
            (lib
             "gtp-benchmarks/benchmarks/gregor/base/tzinfo/private/tzfile-parser.rkt")
            (lib "gtp-benchmarks/benchmarks/kcfa/typed/structs.rkt")
            (lib "gtp-benchmarks/benchmarks/gregor/untyped/core-structs.rkt")
            (lib "gtp-benchmarks/benchmarks/quadT/untyped/render.rkt")
            (lib "gtp-benchmarks/benchmarks/gregor/typed/core-structs.rkt")
            (lib "gtp-benchmarks/benchmarks/jpeg/typed/bit-ports.rkt")
            (lib "gtp-benchmarks/benchmarks/quadT/untyped/quad-main.rkt")
            (lib "gtp-benchmarks/benchmarks/acquire/both/state-adapted.rkt")
            (lib "gtp-benchmarks/benchmarks/snake/untyped/cut-tail.rkt")
            (lib "gtp-benchmarks/benchmarks/morsecode/untyped/main.rkt")
            (lib "gtp-benchmarks/benchmarks/zordoz/typed/zo-string.rkt")
            (lib "gtp-benchmarks/benchmarks/snake/both/data-adaptor.rkt")
            (lib
             "gtp-benchmarks/benchmarks/zordoz/base/compiler-zo-structs.rkt")
            (lib "gtp-benchmarks/benchmarks/snake/typed/data.rkt")
            (lib
             "gtp-benchmarks/benchmarks/mbta/base/graph/graph/graph-unweighted.rkt")
            (lib
             "gtp-benchmarks/benchmarks/jpeg/base/math/private/array/array-sequence.rkt")
            (lib "gtp-benchmarks/benchmarks/quadU/base/core.rkt")
            (lib
             "gtp-benchmarks/benchmarks/gregor/base/tzinfo/private/os/windows-registry.rkt")
            (lib "gtp-benchmarks/benchmarks/snake/typed/motion.rkt")
            (lib "gtp-benchmarks/benchmarks/snake/typed/main.rkt")
            (lib
             "gtp-benchmarks/benchmarks/jpeg/base/math/private/array/mutable-array.rkt")
            (lib
             "gtp-benchmarks/benchmarks/jpeg/base/math/private/unsafe.rkt")
            (lib "gtp-benchmarks/benchmarks/take5/untyped/card.rkt")
            (lib "gtp-benchmarks/benchmarks/quadU/typed/penalty-struct.rkt")
            (lib
             "gtp-benchmarks/benchmarks/mbta/base/graph/graph/tests/graph-fns-minspantree-tests.rkt")
            (lib "gtp-benchmarks/benchmarks/gregor/typed/ymd.rkt")
            (lib "gtp-benchmarks/benchmarks/gregor/untyped/main.rkt")
            (lib "gtp-benchmarks/benchmarks/quadU/typed/world.rkt")
            (lib "gtp-benchmarks/benchmarks/snake/untyped/main.rkt")
            (lib "gtp-benchmarks/benchmarks/mbta/untyped/t-graph.rkt")
            (lib "gtp-benchmarks/benchmarks/quadT/typed/main.rkt")
            (lib "gtp-benchmarks/benchmarks/gregor/untyped/difference.rkt")
            (lib
             "gtp-benchmarks/benchmarks/gregor/base/tzinfo/private/structs.rkt")
            (lib "gtp-benchmarks/benchmarks/synth/untyped/mixer.rkt")
            (lib "gtp-benchmarks/benchmarks/suffixtree/untyped/structs.rkt")
            (lib "gtp-benchmarks/benchmarks/acquire/both/board-adapted.rkt")
            (lib
             "gtp-benchmarks/benchmarks/mbta/base/graph/graph/tests/graph-fns-allpairs-shortestpaths-tests.rkt")
            (lib
             "gtp-benchmarks/benchmarks/mbta/base/graph/graph/tests/graph-fns-singlesource-shortestpaths-tests.rkt")
            (lib "gtp-benchmarks/benchmarks/tetris/typed/elim.rkt")
            (lib "gtp-benchmarks/benchmarks/suffixtree/typed/main.rkt")
            (lib "gtp-benchmarks/benchmarks/quadU/untyped/ocm-struct.rkt")
            (lib "gtp-benchmarks/benchmarks/forth/typed/main.rkt")
            (lib "gtp-benchmarks/utilities/modulegraph.rkt")
            (lib "gtp-benchmarks/benchmarks/quadU/typed/ocm.rkt")
            (lib "gtp-benchmarks/benchmarks/quadT/untyped/hyphenate.rkt")
            (lib "gtp-benchmarks/benchmarks/kcfa/typed/main.rkt")
            (lib "gtp-benchmarks/benchmarks/mbta/base/graph/graph/main.rkt")
            (lib "gtp-benchmarks/benchmarks/quadU/base/csp/variable.rkt")
            (lib "gtp-benchmarks/benchmarks/lnm/both/modulegraph-adapted.rkt")
            (lib
             "gtp-benchmarks/benchmarks/quadT/both/ocm-struct-adapted.rkt")
            (lib
             "gtp-benchmarks/benchmarks/morsecode/untyped/morse-code-strings.rkt")
            (lib "gtp-benchmarks/benchmarks/quadU/typed/quick-sample.rkt")
            (lib
             "gtp-benchmarks/benchmarks/jpeg/base/math/private/array/typed-array-transform.rkt")
            (lib "gtp-benchmarks/benchmarks/take5/untyped/card-pool.rkt")
            (lib "gtp-benchmarks/benchmarks/zordoz/untyped/main.rkt")
            (lib "gtp-benchmarks/benchmarks/gregor/untyped/clock.rkt")
            (lib
             "gtp-benchmarks/benchmarks/mbta/base/graph/graph/gen-graph.rkt")
            (lib "gtp-benchmarks/benchmarks/acquire/typed/state.rkt")
            (lib "gtp-benchmarks/benchmarks/synth/untyped/array-struct.rkt")
            (lib "gtp-benchmarks/benchmarks/gregor/base/tzinfo/main.rkt")
            (lib "gtp-benchmarks/benchmarks/synth/untyped/drum.rkt")
            (lib
             "gtp-benchmarks/benchmarks/morsecode/untyped/morse-code-table.rkt")
            (lib
             "gtp-benchmarks/benchmarks/mbta/base/graph/graph/hash-utils.rkt")
            (lib "gtp-benchmarks/benchmarks/snake/untyped/collide.rkt")
            (lib "gtp-benchmarks/benchmarks/tetris/untyped/aux.rkt")
            (lib "gtp-benchmarks/benchmarks/quadU/untyped/sugar-list.rkt")
            (lib
             "gtp-benchmarks/benchmarks/jpeg/base/math/private/inline-sort.rkt")
            (lib "gtp-benchmarks/benchmarks/quadT/typed/sugar-list.rkt")
            (lib "gtp-benchmarks/benchmarks/acquire/typed/player.rkt")
            (lib "gtp-benchmarks/benchmarks/forth/typed/eval.rkt")
            (lib "gtp-benchmarks/benchmarks/synth/typed/sequencer.rkt")
            (lib "gtp-benchmarks/scribblings/gtp-benchmarks.scrbl")
            (lib "gtp-benchmarks/benchmarks/dungeon/typed/main.rkt")
            (lib "gtp-benchmarks/benchmarks/forth/untyped/stack.rkt")
            (lib "gtp-benchmarks/benchmarks/take5/both/stack-types.rkt")
            (lib "gtp-benchmarks/benchmarks/mbta/base/t-graph-types.rkt")
            (lib
             "gtp-benchmarks/benchmarks/jpeg/base/math/private/syntax-utils.rkt")
            (lib "gtp-benchmarks/benchmarks/mbta/untyped/t-view.rkt")
            (lib "gtp-benchmarks/benchmarks/kcfa/untyped/structs.rkt")
            (lib "gtp-benchmarks/benchmarks/take5/untyped/dealer.rkt")
            (lib "gtp-benchmarks/benchmarks/acquire/untyped/auxiliaries.rkt")
            (lib "gtp-benchmarks/benchmarks/snake/untyped/const.rkt")
            (lib "gtp-benchmarks/benchmarks/quadT/typed/world.rkt")
            (lib
             "gtp-benchmarks/benchmarks/zordoz/base/compiler-zo-parse.rkt")
            (lib
             "gtp-benchmarks/benchmarks/mbta/base/graph/graph/graph.scrbl")
            (lib "gtp-benchmarks/benchmarks/quadT/typed/ocm.rkt")
            (lib "gtp-benchmarks/benchmarks/synth/untyped/sequencer.rkt")
            (lib "gtp-benchmarks/benchmarks/suffixtree/typed/lcs.rkt")
            (lib "gtp-benchmarks/benchmarks/gregor/typed/datetime.rkt")
            (lib "gtp-benchmarks/benchmarks/dungeon/typed/cell.rkt")
            (lib
             "gtp-benchmarks/benchmarks/mbta/base/graph/graph/graph-fns-minspantree.rkt")
            (lib "gtp-benchmarks/benchmarks/lnm/typed/bitstring.rkt")
            (lib
             "gtp-benchmarks/benchmarks/jpeg/base/math/private/array/array-broadcast.rkt")
            (lib "gtp-benchmarks/benchmarks/morsecode/typed/levenshtein.rkt")
            (lib "gtp-benchmarks/benchmarks/fsmoo/typed/utilities.rkt")
            (lib "gtp-benchmarks/scribblings/util.rkt")
            (lib "gtp-benchmarks/benchmarks/fsmoo/untyped/main.rkt")
            (lib "gtp-benchmarks/benchmarks/jpeg/base/typedefs.rkt")
            (lib
             "gtp-benchmarks/benchmarks/gregor/base/tzinfo/scribblings/tzinfo.scrbl")
            (lib "gtp-benchmarks/benchmarks/kcfa/both/denotable-adapted.rkt")
            (lib
             "gtp-benchmarks/benchmarks/mbta/base/graph/graph/graph-matrix.rkt")
            (lib "gtp-benchmarks/benchmarks/quadT/untyped/main.rkt")
            (lib
             "gtp-benchmarks/benchmarks/jpeg/base/math/private/base/base-functions.rkt")
            (lib "gtp-benchmarks/benchmarks/quadU/typed/quads.rkt")
            (lib "gtp-benchmarks/benchmarks/suffixtree/untyped/label.rkt")
            (lib "gtp-benchmarks/benchmarks/kcfa/untyped/ai.rkt")
            (lib
             "gtp-benchmarks/benchmarks/jpeg/base/math/private/exception.rkt")
            (lib "gtp-benchmarks/benchmarks/kcfa/typed/benv.rkt")
            (lib "gtp-benchmarks/benchmarks/mbta/base/graph/graph/utils.rkt")
            (lib "gtp-benchmarks/benchmarks/acquire/both/tree-adapted.rkt")
            (lib
             "gtp-benchmarks/benchmarks/jpeg/base/bytevectors-6-typed.rkt")
            (lib "gtp-benchmarks/benchmarks/quadT/typed/penalty-struct.rkt")
            (lib "gtp-benchmarks/benchmarks/snake/untyped/handlers.rkt")
            (lib "gtp-benchmarks/benchmarks/suffixtree/untyped/data.rkt")
            (lib "gtp-benchmarks/benchmarks/quadT/typed/ocm-struct.rkt")
            (lib "gtp-benchmarks/benchmarks/quadU/typed/measure.rkt")
            (lib "gtp-benchmarks/benchmarks/fsm/untyped/population.rkt")
            (lib "gtp-benchmarks/benchmarks/take5/both/player-types.rkt")
            (lib
             "gtp-benchmarks/benchmarks/mbta/base/graph/graph/graph-weighted.rkt")
            (lib "gtp-benchmarks/benchmarks/tetris/typed/data.rkt")
            (lib "gtp-benchmarks/benchmarks/gregor/typed/time.rkt")
            (lib "gtp-benchmarks/benchmarks/forth/base/make-history.rkt")
            (lib "gtp-benchmarks/benchmarks/kcfa/typed/ai.rkt")
            (lib "gtp-benchmarks/benchmarks/lnm/untyped/modulegraph.rkt")
            (lib "gtp-benchmarks/benchmarks/acquire/typed/strategy.rkt")
            (lib "gtp-benchmarks/benchmarks/quadU/base/csp/problem.rkt")
            (lib "gtp-benchmarks/benchmarks/quadT/base/csp/test-classes.rkt")
            (lib "gtp-benchmarks/benchmarks/quadT/typed/render.rkt")
            (lib
             "gtp-benchmarks/benchmarks/synth/untyped/array-broadcast.rkt")
            (lib "gtp-benchmarks/benchmarks/fsm/typed/population.rkt")
            (lib "gtp-benchmarks/benchmarks/quadT/typed/measure.rkt")
            (lib
             "gtp-benchmarks/benchmarks/synth/untyped/array-transform.rkt")
            (lib "gtp-benchmarks/benchmarks/synth/untyped/array-utils.rkt")
            (lib "gtp-benchmarks/benchmarks/quadT/untyped/quick-sample.rkt")
            (lib "gtp-benchmarks/benchmarks/dungeon/untyped/main.rkt")
            (lib "gtp-benchmarks/benchmarks/quadU/untyped/penalty-struct.rkt")
            (lib
             "gtp-benchmarks/benchmarks/gregor/base/tzinfo/private/tabfile-parser.rkt")
            (lib
             "gtp-benchmarks/benchmarks/morsecode/typed/morse-code-table.rkt")
            (lib "gtp-benchmarks/benchmarks/fsm/untyped/automata.rkt")
            (lib "gtp-benchmarks/benchmarks/suffixtree/typed/structs.rkt")
            (lib "gtp-benchmarks/benchmarks/take5/typed/deck.rkt")
            (lib "gtp-benchmarks/benchmarks/quadT/base/csp/test-problems.rkt")
            (lib
             "gtp-benchmarks/benchmarks/quadT/base/untyped-predicates.rkt")
            (lib "gtp-benchmarks/benchmarks/suffixtree/untyped/main.rkt")
            (lib
             "gtp-benchmarks/benchmarks/jpeg/base/math/private/array/typed-array-sequence.rkt")
            (lib "gtp-benchmarks/benchmarks/jpeg/typed/huffman.rkt")
            (lib "gtp-benchmarks/benchmarks/forth/typed/command.rkt")
            (lib
             "gtp-benchmarks/benchmarks/mbta/base/graph/graph/tests/graph-fns-basic-tests.rkt")
            (lib "gtp-benchmarks/benchmarks/mbta/typed/t-graph.rkt")
            (lib
             "gtp-benchmarks/benchmarks/mbta/base/graph/graph/graph-property.rkt")
            (lib "gtp-benchmarks/benchmarks/fsmoo/typed/population.rkt")
            (lib "gtp-benchmarks/benchmarks/acquire/typed/admin.rkt")
            (lib "gtp-benchmarks/benchmarks/quadT/typed/hyphenate.rkt")
            (lib "gtp-benchmarks/benchmarks/synth/untyped/main.rkt")
            (lib "gtp-benchmarks/benchmarks/gregor/typed/moment.rkt")
            (lib "gtp-benchmarks/benchmarks/acquire/typed/main.rkt")
            (lib "gtp-benchmarks/benchmarks/quadT/untyped/sugar-list.rkt")
            (lib
             "gtp-benchmarks/benchmarks/jpeg/base/math/private/array/array-comprehension.rkt")
            (lib "gtp-benchmarks/benchmarks/jpeg/untyped/exif.rkt")
            (lib "gtp-benchmarks/benchmarks/take5/typed/stack.rkt")
            (lib
             "gtp-benchmarks/benchmarks/jpeg/base/math/private/array/typed-utils.rkt")
            (lib "gtp-benchmarks/benchmarks/gregor/typed/date.rkt")
            (lib "gtp-benchmarks/benchmarks/jpeg/untyped/jfif.rkt")
            (lib "gtp-benchmarks/benchmarks/take5/untyped/player.rkt")
            (lib "gtp-benchmarks/benchmarks/zordoz/untyped/zo-find.rkt")
            (lib
             "gtp-benchmarks/benchmarks/mbta/base/graph/graph/tests/graph-fns-coloring-tests.rkt")
            (lib "gtp-benchmarks/benchmarks/gregor/untyped/moment.rkt")
            (lib "gtp-benchmarks/benchmarks/quadU/base/heart-of-darkness.rkt")
            (lib
             "gtp-benchmarks/benchmarks/mbta/base/graph/graph/tests/timing-tests.rkt")
            (lib "gtp-benchmarks/benchmarks/acquire/untyped/player.rkt")
            (lib "gtp-benchmarks/benchmarks/quadT/base/csp/domain.rkt")
            (lib "gtp-benchmarks/benchmarks/zombie/typed/zombie.rkt")
            (lib "gtp-benchmarks/benchmarks/tetris/typed/tetras.rkt")
            (lib "gtp-benchmarks/benchmarks/take5/typed/dealer.rkt")
            (lib
             "gtp-benchmarks/benchmarks/mbta/base/graph/queue/gen-queue.rkt")
            (lib "gtp-benchmarks/benchmarks/quadU/typed/render.rkt")
            (lib "gtp-benchmarks/benchmarks/tetris/untyped/consts.rkt")
            (lib "gtp-benchmarks/benchmarks/quadU/untyped/quads.rkt")
            (lib "gtp-benchmarks/benchmarks/tetris/untyped/elim.rkt")
            (lib "gtp-benchmarks/benchmarks/quadT/untyped/quads.rkt")
            (lib "gtp-benchmarks/benchmarks/quadU/typed/utils.rkt")
            (lib
             "gtp-benchmarks/benchmarks/mbta/base/graph/graph/tests/graph-fns-maxflow-tests.rkt")
            (lib
             "gtp-benchmarks/benchmarks/mbta/base/graph/graph/tests/graphviz.rkt")
            (lib "gtp-benchmarks/benchmarks/sieve/typed/main.rkt")
            (lib "gtp-benchmarks/benchmarks/tetris/untyped/block.rkt")
            (lib "gtp-benchmarks/benchmarks/zordoz/untyped/zo-transition.rkt")
            (lib "gtp-benchmarks/benchmarks/tetris/typed/world.rkt")
            (lib "gtp-benchmarks/benchmarks/tetris/typed/bset.rkt")
            (lib "gtp-benchmarks/benchmarks/zordoz/typed/zo-shell.rkt")
            (lib "gtp-benchmarks/benchmarks/gregor/base/cldr/core.rkt")
            (lib "gtp-benchmarks/benchmarks/snake/typed/motion-help.rkt")
            (lib "gtp-benchmarks/benchmarks/tetris/untyped/tetras.rkt")
            (lib "gtp-benchmarks/benchmarks/snake/typed/handlers.rkt")
            (lib "gtp-benchmarks/benchmarks/lnm/both/pict-adapted.rkt")
            (lib "gtp-benchmarks/benchmarks/lnm/typed/summary.rkt")
            (lib "gtp-benchmarks/benchmarks/zombie/typed/math.rkt")
            (lib "gtp-benchmarks/benchmarks/kcfa/both/structs-adapted.rkt")
            (lib
             "gtp-benchmarks/benchmarks/jpeg/base/math/private/base/base-constants.rkt")
            (lib "gtp-benchmarks/benchmarks/lnm/both/summary-adapted.rkt")
            (lib
             "gtp-benchmarks/benchmarks/gregor/base/cldr/scribblings/cldr-core.scrbl")
            (lib "gtp-benchmarks/benchmarks/zombie/untyped/math.rkt")
            (lib "gtp-benchmarks/benchmarks/suffixtree/untyped/lcs.rkt")
            (lib "gtp-benchmarks/benchmarks/fsmoo/untyped/automata.rkt")
            (lib "gtp-benchmarks/benchmarks/zordoz/untyped/zo-shell.rkt")
            (lib "gtp-benchmarks/benchmarks/gregor/untyped/ymd.rkt")
            (lib "gtp-benchmarks/benchmarks/gregor/both/core-adapter.rkt")
            (lib
             "gtp-benchmarks/benchmarks/gregor/base/tzinfo/private/os/env.rkt")
            (lib "gtp-benchmarks/benchmarks/snake/typed/cut-tail.rkt")
            (lib "gtp-benchmarks/benchmarks/lnm/untyped/main.rkt")
            (lib "gtp-benchmarks/utilities/count-chaperones.rkt")
            (lib "gtp-benchmarks/benchmarks/gregor/typed/clock.rkt")
            (lib "gtp-benchmarks/benchmarks/zombie/both/image-adapted.rkt")
            (lib "gtp-benchmarks/benchmarks/jpeg/typed/main.rkt")
            (lib "gtp-benchmarks/benchmarks/suffixtree/both/typed-data.rkt")
            (lib "gtp-benchmarks/benchmarks/suffixtree/typed/ukkonen.rkt")
            (lib "gtp-benchmarks/benchmarks/fsmoo/untyped/population.rkt")
            (lib "gtp-benchmarks/benchmarks/dungeon/base/cell-types.rkt")
            (lib "gtp-benchmarks/benchmarks/kcfa/untyped/ui.rkt")
            (lib "gtp-benchmarks/benchmarks/dungeon/untyped/grid.rkt")
            (lib "gtp-benchmarks/benchmarks/quadT/untyped/wrap.rkt")
            (lib "gtp-benchmarks/benchmarks/synth/typed/array-struct.rkt")
            (lib "gtp-benchmarks/benchmarks/acquire/untyped/main.rkt")
            (lib "gtp-benchmarks/benchmarks/jpeg/typed/jfif.rkt")
            (lib "gtp-benchmarks/benchmarks/quadU/base/quad-types.rkt")
            (lib "gtp-benchmarks/benchmarks/dungeon/untyped/cell.rkt")
            (lib "gtp-benchmarks/benchmarks/quadU/untyped/main.rkt")
            (lib
             "gtp-benchmarks/benchmarks/jpeg/base/math/private/base/base-random.rkt")
            (lib "gtp-benchmarks/benchmarks/sieve/typed/streams.rkt")
            (lib "gtp-benchmarks/benchmarks/quadT/typed/quad-main.rkt")
            (lib "gtp-benchmarks/benchmarks/synth/untyped/data.rkt")
            (lib
             "gtp-benchmarks/benchmarks/jpeg/base/math/private/array/for-each.rkt")
            (lib "gtp-benchmarks/benchmarks/kcfa/typed/ui.rkt")
            (lib "gtp-benchmarks/benchmarks/tetris/typed/aux.rkt")
            (lib "gtp-benchmarks/benchmarks/quadT/typed/utils.rkt")
            (lib "gtp-benchmarks/benchmarks/tetris/typed/main.rkt")
            (lib
             "gtp-benchmarks/benchmarks/mbta/base/graph/graph/tests/run-all-tests.rkt")
            (lib "gtp-benchmarks/benchmarks/lnm/untyped/bitstring.rkt")
            (lib "gtp-benchmarks/benchmarks/forth/typed/stack.rkt")
            (lib
             "gtp-benchmarks/benchmarks/mbta/base/graph/graph/graph-fns-maxflow.rkt")
            (lib "gtp-benchmarks/utilities/process-helper.rkt")
            (lib "gtp-benchmarks/benchmarks/tetris/typed/consts.rkt")
            (lib "gtp-benchmarks/benchmarks/gregor/typed/gregor-structs.rkt")
            (lib
             "gtp-benchmarks/benchmarks/gregor/base/tzinfo/private/generics.rkt")
            (lib "gtp-benchmarks/benchmarks/quadU/typed/sugar-list.rkt")
            (lib "gtp-benchmarks/benchmarks/quadT/untyped/ocm-struct.rkt")
            (lib "gtp-benchmarks/benchmarks/lnm/typed/modulegraph.rkt")
            (lib "gtp-benchmarks/benchmarks/gregor/typed/moment-base.rkt")
            (lib "gtp-benchmarks/benchmarks/gregor/base/tzinfo/zoneinfo.rkt")
            (lib "gtp-benchmarks/benchmarks/quadU/untyped/wrap.rkt")
            (lib "gtp-benchmarks/benchmarks/take5/both/card-adapted.rkt")
            (lib "gtp-benchmarks/benchmarks/quadT/typed/quick-sample.rkt")
            (lib "gtp-benchmarks/benchmarks/quadU/untyped/render.rkt")
            (lib "gtp-benchmarks/benchmarks/suffixtree/typed/label.rkt")
            (lib
             "gtp-benchmarks/benchmarks/mbta/base/graph/graph/tests/timing-test-scc.rkt")
            (lib "gtp-benchmarks/benchmarks/jpeg/base/math/array.rkt")
            (lib "gtp-benchmarks/benchmarks/quadT/base/csp/variable.rkt")
            (lib "gtp-benchmarks/benchmarks/synth/typed/main.rkt")
            (lib "gtp-benchmarks/benchmarks/tetris/untyped/data.rkt")
            (lib "gtp-benchmarks/benchmarks/morsecode/typed/main.rkt")
            (lib "gtp-benchmarks/benchmarks/fsm/untyped/utilities.rkt")
            (lib
             "gtp-benchmarks/benchmarks/gregor/base/tzinfo/test/zoneinfo.rkt")
            (lib "gtp-benchmarks/benchmarks/mbta/base/my-graph.rkt")
            (lib "gtp-benchmarks/benchmarks/quadT/base/csp/helper.rkt")
            (lib "gtp-benchmarks/benchmarks/lnm/untyped/summary.rkt")
            (lib "gtp-benchmarks/benchmarks/fsmoo/typed/automata.rkt")
            (lib
             "gtp-benchmarks/benchmarks/gregor/untyped/gregor-structs.rkt")
            (lib
             "gtp-benchmarks/benchmarks/gregor/base/tzinfo/private/os/windows.rkt")
            (lib
             "gtp-benchmarks/benchmarks/gregor/base/tzinfo/private/zoneinfo.rkt")
            (lib "gtp-benchmarks/benchmarks/synth/typed/synth.rkt")
            (lib
             "gtp-benchmarks/benchmarks/mbta/base/graph/graph/tests/test-utils.rkt")
            (lib "gtp-benchmarks/benchmarks/quadT/untyped/utils.rkt")
            (lib "gtp-benchmarks/benchmarks/snake/untyped/data.rkt")
            (lib "gtp-benchmarks/benchmarks/gregor/typed/hmsn.rkt")
            (lib "gtp-benchmarks/benchmarks/quadU/base/csp/test-classes.rkt")
            (lib
             "gtp-benchmarks/benchmarks/quadT/both/penalty-struct-adapted.rkt")
            (lib "gtp-benchmarks/benchmarks/synth/typed/array-broadcast.rkt")
            (lib "gtp-benchmarks/benchmarks/snake/typed/const.rkt")
            (lib
             "gtp-benchmarks/benchmarks/jpeg/base/math/private/array/array-struct.rkt")
            (lib "gtp-benchmarks/benchmarks/dungeon/typed/grid.rkt")
            (lib "gtp-benchmarks/benchmarks/gregor/typed/main.rkt")
            (lib
             "gtp-benchmarks/benchmarks/quadU/both/penalty-struct-adapted.rkt")
            (lib "gtp-benchmarks/benchmarks/zombie/untyped/main.rkt")
            (lib "gtp-benchmarks/benchmarks/zombie/untyped/image.rkt")
            (lib "gtp-benchmarks/benchmarks/lnm/typed/main.rkt")
            (lib "gtp-benchmarks/benchmarks/tetris/untyped/bset.rkt")
            (lib
             "gtp-benchmarks/benchmarks/jpeg/base/math/private/array/typed-array-struct.rkt")
            (lib "gtp-benchmarks/benchmarks/jpeg/untyped/huffman.rkt")
            (lib "gtp-benchmarks/benchmarks/synth/typed/mixer.rkt")
            (lib "gtp-benchmarks/benchmarks/kcfa/typed/denotable.rkt")
            (lib "gtp-benchmarks/benchmarks/snake/typed/collide.rkt")
            (lib "gtp-benchmarks/benchmarks/quadT/base/core.rkt")
            (lib "gtp-benchmarks/benchmarks/quadU/untyped/hyphenate.rkt")
            (lib "gtp-benchmarks/benchmarks/quadU/base/core-types.rkt")
            (lib "gtp-benchmarks/benchmarks/tetris/untyped/world.rkt")
            (lib
             "gtp-benchmarks/benchmarks/jpeg/base/math/private/array/utils.rkt")
            (lib "gtp-benchmarks/benchmarks/dungeon/typed/message-queue.rkt")
            (lib "gtp-benchmarks/benchmarks/acquire/typed/tree.rkt")
            (lib "gtp-benchmarks/benchmarks/lnm/typed/lnm-plot.rkt")
            (lib "gtp-benchmarks/benchmarks/quadU/base/csp/helper.rkt")
            (lib "gtp-benchmarks/benchmarks/tetris/typed/block.rkt")
            (lib "gtp-benchmarks/benchmarks/sieve/untyped/streams.rkt")
            (lib
             "gtp-benchmarks/benchmarks/jpeg/base/math/private/array/array-transform.rkt")
            (lib "gtp-benchmarks/benchmarks/mbta/untyped/run-t.rkt")
            (lib "gtp-benchmarks/benchmarks/gregor/untyped/datetime.rkt")
            (lib "gtp-benchmarks/benchmarks/take5/typed/card-pool.rkt")
            (lib
             "gtp-benchmarks/benchmarks/morsecode/typed/morse-code-strings.rkt")
            (lib "gtp-benchmarks/benchmarks/acquire/untyped/tree.rkt")
            (lib "gtp-benchmarks/benchmarks/suffixtree/typed/data.rkt")
            (lib "gtp-benchmarks/benchmarks/zombie/untyped/zombie.rkt")
            (lib
             "gtp-benchmarks/benchmarks/dungeon/untyped/message-queue.rkt")
            (lib "gtp-benchmarks/benchmarks/jpeg/typed/exif.rkt")
            (lib "gtp-benchmarks/benchmarks/synth/typed/array-utils.rkt")
            (lib "gtp-benchmarks/benchmarks/synth/typed/array-transform.rkt")
            (lib "gtp-benchmarks/benchmarks/gregor/base/tzinfo/source.rkt")
            (lib "gtp-benchmarks/benchmarks/kcfa/untyped/benv.rkt")
            (lib "gtp-benchmarks/benchmarks/kcfa/both/benv-adapted.rkt")
            (lib "gtp-benchmarks/benchmarks/quadT/base/quad-types.rkt")
            (lib "gtp-benchmarks/benchmarks/quadU/untyped/quad-main.rkt")
            (lib "gtp-benchmarks/benchmarks/lnm/typed/spreadsheet.rkt")
            (lib "gtp-benchmarks/benchmarks/quadT/base/csp/solver.rkt")
            (lib
             "gtp-benchmarks/benchmarks/fsmoo/both/population-adapted.rkt")
            (lib "gtp-benchmarks/benchmarks/quadU/base/csp/solver.rkt")
            (lib "gtp-benchmarks/benchmarks/gregor/untyped/time.rkt")
            (lib "gtp-benchmarks/benchmarks/forth/base/command-types.rkt")
            (lib "gtp-benchmarks/benchmarks/gregor/untyped/moment-base.rkt")
            (lib "gtp-benchmarks/benchmarks/jpeg/base/math/private/utils.rkt")
            (lib "gtp-benchmarks/benchmarks/acquire/untyped/admin.rkt")
            (lib "gtp-benchmarks/benchmarks/snake/untyped/motion-help.rkt")
            (lib "gtp-benchmarks/benchmarks/suffixtree/base/kcfa-typed.rkt")
            (lib "gtp-benchmarks/benchmarks/acquire/untyped/strategy.rkt")
            (lib
             "gtp-benchmarks/benchmarks/morsecode/untyped/levenshtein.rkt")
            (lib "gtp-benchmarks/benchmarks/zordoz/untyped/zo-string.rkt")
            (lib "gtp-benchmarks/benchmarks/take5/untyped/deck.rkt")
            (lib "gtp-benchmarks/benchmarks/dungeon/typed/utils.rkt")
            (lib "gtp-benchmarks/benchmarks/take5/both/dealer-types.rkt")
            (lib "gtp-benchmarks/benchmarks/dungeon/base/un-types.rkt")
            (lib "gtp-benchmarks/benchmarks/forth/untyped/main.rkt")
            (lib "gtp-benchmarks/benchmarks/gregor/untyped/date.rkt")
            (lib "gtp-benchmarks/benchmarks/gregor/both/structs-adapter.rkt")
            (lib
             "gtp-benchmarks/benchmarks/gregor/base/tzinfo/private/zoneinfo-search.rkt")
            (lib "gtp-benchmarks/benchmarks/synth/both/typed-data.rkt")
            (lib "gtp-benchmarks/benchmarks/quadT/untyped/penalty-struct.rkt")
            (lib
             "gtp-benchmarks/benchmarks/gregor/typed/offset-resolvers.rkt")
            (lib "gtp-benchmarks/benchmarks/quadU/base/csp/csp.rkt")
            (lib "gtp-benchmarks/benchmarks/quadU/typed/ocm-struct.rkt")
            (lib
             "gtp-benchmarks/benchmarks/gregor/base/cldr/likely-subtags.rkt")
            (lib "gtp-benchmarks/benchmarks/quadT/base/untyped.rkt")
            (lib "gtp-benchmarks/benchmarks/take5/typed/main.rkt")
            (lib
             "gtp-benchmarks/benchmarks/gregor/untyped/offset-resolvers.rkt")
            (lib "gtp-benchmarks/benchmarks/lnm/untyped/spreadsheet.rkt")
            (lib "gtp-benchmarks/benchmarks/zordoz/base/typed-zo-structs.rkt")
            (lib "gtp-benchmarks/benchmarks/quadT/untyped/measure.rkt")
            (lib "gtp-benchmarks/benchmarks/quadU/untyped/world.rkt")
            (lib "gtp-benchmarks/benchmarks/take5/untyped/basics.rkt")
            (lib
             "gtp-benchmarks/benchmarks/jpeg/base/math/private/array/typed-mutable-array.rkt")
            (lib "gtp-benchmarks/benchmarks/sieve/untyped/main.rkt")
            (lib
             "gtp-benchmarks/benchmarks/mbta/base/graph/graph/graph-fns-basic.rkt")
            (lib "gtp-benchmarks/benchmarks/quadT/base/csp/csp.rkt")
            (lib "gtp-benchmarks/benchmarks/quadU/typed/main.rkt")
            (lib "gtp-benchmarks/benchmarks/quadU/base/csp/domain.rkt")
            (lib "gtp-benchmarks/benchmarks/fsm/typed/utilities.rkt")
            (lib
             "gtp-benchmarks/benchmarks/jpeg/base/math/private/parameters.rkt")
            (lib "gtp-benchmarks/benchmarks/zordoz/typed/main.rkt")
            (lib "gtp-benchmarks/benchmarks/suffixtree/untyped/ukkonen.rkt")
            (lib "gtp-benchmarks/benchmarks/quadU/untyped/quick-sample.rkt")
            (lib "gtp-benchmarks/benchmarks/take5/base/untyped.rkt")
            (lib "gtp-benchmarks/benchmarks/acquire/untyped/state.rkt")
            (lib "gtp-benchmarks/benchmarks/acquire/untyped/board.rkt")
            (lib
             "gtp-benchmarks/benchmarks/quadU/both/ocm-struct-adapted.rkt")
            (lib "gtp-benchmarks/benchmarks/fsmoo/typed/main.rkt")
            (lib "gtp-benchmarks/benchmarks/mbta/base/graph/queue/fifo.rkt")
            (lib "gtp-benchmarks/benchmarks/kcfa/both/time-adapted.rkt")
            (lib "gtp-benchmarks/benchmarks/quadT/untyped/ocm.rkt")
            (lib
             "gtp-benchmarks/benchmarks/mbta/base/graph/graph/graph-fns-graphviz.rkt")
            (lib "gtp-benchmarks/benchmarks/fsmoo/both/automata-adapted.rkt")
            (lib "gtp-benchmarks/benchmarks/take5/typed/basics.rkt")
            (lib "gtp-benchmarks/benchmarks/tetris/both/base-types.rkt")
            (lib "gtp-benchmarks/utilities/copy-configuration.rkt")
            (lib "gtp-benchmarks/benchmarks/take5/both/card-pool-types.rkt")
            (lib "gtp-benchmarks/benchmarks/synth/untyped/synth.rkt")
            (lib "gtp-benchmarks/benchmarks/mbta/untyped/main.rkt")
            (lib "gtp-benchmarks/benchmarks/synth/typed/data.rkt")
            (lib "gtp-benchmarks/benchmarks/take5/typed/player.rkt")
            (lib
             "gtp-benchmarks/benchmarks/mbta/base/graph/graph/adjlist-utils.rkt")
            (lib "gtp-benchmarks/benchmarks/zordoz/typed/zo-find.rkt")
            (lib "gtp-benchmarks/benchmarks/forth/untyped/command.rkt")
            (lib
             "gtp-benchmarks/benchmarks/mbta/base/graph/graph/graph-fns-singlesource-shortestpaths.rkt")
            (lib "gtp-benchmarks/benchmarks/jpeg/untyped/main.rkt")))
          (name . "gtp-benchmarks")
          (nix-sha256
           .
           "0gdpcl16v1ifjjwssvj3gk3gncmfg8j1nk8rrm7671qvk4nm5m0l")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:types@ccs.neu.edu . #t)
                   (benchmarking . #t)
                   (gtp . #t)
                   (ring:2 . #t)))
          (source . "https://github.com/bennn/gtp-benchmarks.git")
          (tags . ("benchmarking" "gtp"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "0ce76838860e083f1c507b5b2c8e3e49cebaf4a4")
                          (source
                           .
                           "https://github.com/bennn/gtp-benchmarks.git")
                          (source_url
                           .
                           "https://github.com/bennn/gtp-benchmarks.git")))))))
 ("gtp-checkup"
  .
  #hasheq((author . "types@ccs.neu.edu")
          (authors . ("types@ccs.neu.edu"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "gtp-checkup"
                    "doc/gtp-checkup@gtp-checkup/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/gtp-checkup.txt")
                 (test-failure-log . "server/built/test-fail/gtp-checkup.txt")
                 (test-success-log . #f)))
          (checksum . "b013e09eaf3c6121aaded84d66f3d5a2d081c699")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "basedir"
            "data-lib"
            "draw-lib"
            "gregor"
            "gtp-util"
            "math-lib"
            "memoize"
            "pict-lib"
            "plot-lib"
            "rackunit-lib"
            "require-typed-check"
            "sandbox-lib"
            "typed-racket-lib"
            "typed-racket-more"
            "zo-lib"
            "scribble-lib"
            "racket-doc"
            "rackunit-lib"
            "typed-racket-doc"
            "pict-abbrevs"))
          (dependency-names
           .
           ("base"
            "basedir"
            "data-lib"
            "draw-lib"
            "gregor"
            "gtp-util"
            "math-lib"
            "memoize"
            "pict-lib"
            "plot-lib"
            "rackunit-lib"
            "require-typed-check"
            "sandbox-lib"
            "typed-racket-lib"
            "typed-racket-more"
            "zo-lib"
            "scribble-lib"
            "racket-doc"
            "rackunit-lib"
            "typed-racket-doc"
            "pict-abbrevs"))
          (description . "Test correctness of typed/untyped interaction.")
          (implies . ())
          (last-checked . 1557339598)
          (last-edit . 1508861699)
          (last-updated . 1557267598)
          (modules
           .
           ((lib
             "gtp-checkup/benchmarks/morsecode/typed-worst-case/morse-code-table.rkt")
            (lib "gtp-checkup/benchmarks/zombie/untyped/math.rkt")
            (lib "gtp-checkup/benchmarks/quadT/untyped/wrap.rkt")
            (lib "gtp-checkup/benchmarks/tetris/untyped/bset.rkt")
            (lib
             "gtp-checkup/benchmarks/snake/typed-worst-case/motion-help.rkt")
            (lib "gtp-checkup/benchmarks/fsmoo/untyped/automata.rkt")
            (lib
             "gtp-checkup/benchmarks/synth/typed-worst-case/array-struct.rkt")
            (lib "gtp-checkup/benchmarks/quadU/untyped/ocm-struct.rkt")
            (lib "gtp-checkup/benchmarks/quadT/typed/world.rkt")
            (lib "gtp-checkup/benchmarks/quadT/base/heart-of-darkness.rkt")
            (lib "gtp-checkup/benchmarks/zombie/typed-worst-case/main.rkt")
            (lib
             "gtp-checkup/benchmarks/jpeg/base/math/private/parameters.rkt")
            (lib "gtp-checkup/benchmarks/quadT/untyped/ocm.rkt")
            (lib
             "gtp-checkup/benchmarks/lnm/typed-worst-case/pict-adapted.rkt")
            (lib
             "gtp-checkup/benchmarks/suffixtree/typed-worst-case/structs.rkt")
            (lib
             "gtp-checkup/benchmarks/quadT/typed-worst-case/ocm-struct-adapted.rkt")
            (lib "gtp-checkup/benchmarks/forth/untyped/eval.rkt")
            (lib "gtp-checkup/benchmarks/take5/typed/card-adapted.rkt")
            (lib "gtp-checkup/benchmarks/zordoz/typed/zo-shell.rkt")
            (lib "gtp-checkup/benchmarks/acquire/typed-worst-case/main.rkt")
            (lib "gtp-checkup/benchmarks/snake/untyped/collide.rkt")
            (lib "gtp-checkup/benchmarks/snake/typed-worst-case/main.rkt")
            (lib "gtp-checkup/benchmarks/suffixtree/untyped/structs.rkt")
            (lib "gtp-checkup/benchmarks/dungeon/untyped/main.rkt")
            (lib
             "gtp-checkup/benchmarks/jpeg/base/math/private/syntax-utils.rkt")
            (lib "gtp-checkup/benchmarks/zombie/typed-worst-case/image.rkt")
            (lib "gtp-checkup/benchmarks/quadU/untyped/penalty-struct.rkt")
            (lib "gtp-checkup/benchmarks/synth/typed/data.rkt")
            (lib
             "gtp-checkup/benchmarks/lnm/typed-worst-case/modulegraph-adapted.rkt")
            (lib
             "gtp-checkup/benchmarks/snake/typed-worst-case/data-adaptor.rkt")
            (lib "gtp-checkup/benchmarks/fsmoo/typed/utilities.rkt")
            (lib
             "gtp-checkup/benchmarks/synth/typed-worst-case/array-utils.rkt")
            (lib
             "gtp-checkup/benchmarks/mbta/base/graph/graph/graph-fns-maxflow.rkt")
            (lib "gtp-checkup/benchmarks/tetris/typed/block.rkt")
            (lib "gtp-checkup/benchmarks/jpeg/typed-worst-case/huffman.rkt")
            (lib "gtp-checkup/benchmarks/quadT/typed/measure.rkt")
            (lib "gtp-checkup/benchmarks/dungeon/typed-worst-case/cell.rkt")
            (lib "gtp-checkup/benchmarks/lnm/untyped/summary-adapted.rkt")
            (lib "gtp-checkup/benchmarks/fsm/typed/population.rkt")
            (lib "gtp-checkup/benchmarks/kcfa/untyped/benv.rkt")
            (lib "gtp-checkup/benchmarks/lnm/typed/summary.rkt")
            (lib "gtp-checkup/benchmarks/kcfa/untyped/benv-adapted.rkt")
            (lib "gtp-checkup/benchmarks/suffixtree/typed/ukkonen.rkt")
            (lib "gtp-checkup/benchmarks/kcfa/typed/main.rkt")
            (lib "gtp-checkup/benchmarks/quadU/typed/quad-main.rkt")
            (lib
             "gtp-checkup/benchmarks/jpeg/base/math/private/array/typed-mutable-array.rkt")
            (lib
             "gtp-checkup/benchmarks/quadT/typed-worst-case/ocm-struct.rkt")
            (lib "gtp-checkup/benchmarks/quadT/typed/utils.rkt")
            (lib "gtp-checkup/benchmarks/snake/typed-worst-case/cut-tail.rkt")
            (lib "gtp-checkup/benchmarks/acquire/typed/admin.rkt")
            (lib "gtp-checkup/benchmarks/tetris/typed-worst-case/data.rkt")
            (lib "gtp-checkup/benchmarks/gregor/base/cldr/likely-subtags.rkt")
            (lib "gtp-checkup/benchmarks/take5/typed/card.rkt")
            (lib "gtp-checkup/benchmarks/tetris/typed-worst-case/world.rkt")
            (lib "gtp-checkup/benchmarks/kcfa/typed-worst-case/denotable.rkt")
            (lib "gtp-checkup/benchmarks/quadU/base/csp/variable.rkt")
            (lib "gtp-checkup/benchmarks/gregor/typed/ymd.rkt")
            (lib "gtp-checkup/benchmarks/snake/typed-worst-case/collide.rkt")
            (lib "gtp-checkup/benchmarks/acquire/typed-worst-case/board.rkt")
            (lib "gtp-checkup/benchmarks/tetris/typed/tetras.rkt")
            (lib
             "gtp-checkup/benchmarks/jpeg/base/math/private/array/utils.rkt")
            (lib "gtp-checkup/benchmarks/quadU/untyped/utils.rkt")
            (lib
             "gtp-checkup/benchmarks/jpeg/base/math/private/array/array-sequence.rkt")
            (lib "gtp-checkup/benchmarks/quadT/typed/quad-main.rkt")
            (lib "gtp-checkup/benchmarks/sieve/typed/main.rkt")
            (lib "gtp-checkup/benchmarks/take5/untyped/basics.rkt")
            (lib "gtp-checkup/benchmarks/quadU/untyped/ocm.rkt")
            (lib "gtp-checkup/benchmarks/gregor/untyped/main.rkt")
            (lib "gtp-checkup/benchmarks/suffixtree/typed/data.rkt")
            (lib "gtp-checkup/private/logger.rkt")
            (lib "gtp-checkup/benchmarks/quadU/untyped/main.rkt")
            (lib "gtp-checkup/benchmarks/quadU/typed-worst-case/world.rkt")
            (lib "gtp-checkup/benchmarks/gregor/base/cldr/core.rkt")
            (lib "gtp-checkup/benchmarks/snake/typed/data.rkt")
            (lib "gtp-checkup/benchmarks/suffixtree/typed-worst-case/lcs.rkt")
            (lib
             "gtp-checkup/benchmarks/jpeg/base/math/private/array/typed-utils.rkt")
            (lib "gtp-checkup/benchmarks/kcfa/untyped/structs.rkt")
            (lib "gtp-checkup/benchmarks/synth/typed/array-utils.rkt")
            (lib "gtp-checkup/benchmarks/quadU/typed/world.rkt")
            (lib "gtp-checkup/benchmarks/morsecode/untyped/main.rkt")
            (lib "gtp-checkup/benchmarks/gregor/typed/date.rkt")
            (lib "gtp-checkup/benchmarks/acquire/untyped/tree.rkt")
            (lib "gtp-checkup/benchmarks/zordoz/typed/main.rkt")
            (lib "gtp-checkup/benchmarks/kcfa/typed/benv-adapted.rkt")
            (lib "gtp-checkup/benchmarks/synth/typed/sequencer.rkt")
            (lib "gtp-checkup/benchmarks/morsecode/typed/main.rkt")
            (lib "gtp-checkup/benchmarks/synth/typed/synth.rkt")
            (lib
             "gtp-checkup/benchmarks/fsmoo/typed-worst-case/utilities.rkt")
            (lib
             "gtp-checkup/benchmarks/quadU/typed-worst-case/quick-sample.rkt")
            (lib
             "gtp-checkup/benchmarks/mbta/base/graph/graph/tests/graph-fns-singlesource-shortestpaths-tests.rkt")
            (lib "gtp-checkup/benchmarks/lnm/untyped/summary.rkt")
            (lib "gtp-checkup/benchmarks/take5/untyped/stack.rkt")
            (lib "gtp-checkup/benchmarks/quadU/typed/render.rkt")
            (lib "gtp-checkup/benchmarks/sieve/typed/streams.rkt")
            (lib "gtp-checkup/benchmarks/tetris/untyped/base-types.rkt")
            (lib
             "gtp-checkup/benchmarks/quadU/typed-worst-case/quad-main.rkt")
            (lib "gtp-checkup/benchmarks/synth/typed/drum.rkt")
            (lib
             "gtp-checkup/benchmarks/lnm/typed-worst-case/modulegraph.rkt")
            (lib "gtp-checkup/benchmarks/take5/typed-worst-case/basics.rkt")
            (lib "gtp-checkup/benchmarks/tetris/typed-worst-case/consts.rkt")
            (lib "gtp-checkup/benchmarks/jpeg/base/math/private/unsafe.rkt")
            (lib "gtp-checkup/benchmarks/quadT/typed-worst-case/main.rkt")
            (lib "gtp-checkup/benchmarks/gregor/typed-worst-case/moment.rkt")
            (lib
             "gtp-checkup/benchmarks/mbta/base/graph/graph/tests/graph-fns-maxflow-tests.rkt")
            (lib "gtp-checkup/benchmarks/acquire/untyped/main.rkt")
            (lib "gtp-checkup/benchmarks/take5/typed/dealer-types.rkt")
            (lib "gtp-checkup/benchmarks/kcfa/typed-worst-case/time.rkt")
            (lib "gtp-checkup/benchmarks/gregor/typed/main.rkt")
            (lib "gtp-checkup/benchmarks/snake/untyped/data-adaptor.rkt")
            (lib "gtp-checkup/benchmarks/snake/typed-worst-case/handlers.rkt")
            (lib "gtp-checkup/benchmarks/jpeg/untyped/jfif.rkt")
            (lib
             "gtp-checkup/benchmarks/quadU/typed-worst-case/hyphenate.rkt")
            (lib "gtp-checkup/benchmarks/mbta/typed-worst-case/run-t.rkt")
            (lib
             "gtp-checkup/benchmarks/take5/typed-worst-case/stack-types.rkt")
            (lib "gtp-checkup/benchmarks/mbta/untyped/t-graph.rkt")
            (lib "gtp-checkup/benchmarks/tetris/typed-worst-case/bset.rkt")
            (lib "gtp-checkup/benchmarks/quadT/typed-worst-case/measure.rkt")
            (lib
             "gtp-checkup/benchmarks/gregor/base/tzinfo/test/zoneinfo.rkt")
            (lib "gtp-checkup/benchmarks/mbta/base/t-graph-types.rkt")
            (lib "gtp-checkup/benchmarks/suffixtree/typed/typed-data.rkt")
            (lib "gtp-checkup/benchmarks/synth/typed/array-broadcast.rkt")
            (lib "gtp-checkup/benchmarks/synth/untyped/data.rkt")
            (lib "gtp-checkup/benchmarks/dungeon/typed/grid.rkt")
            (lib "gtp-checkup/benchmarks/quadT/typed/quick-sample.rkt")
            (lib
             "gtp-checkup/benchmarks/gregor/typed-worst-case/core-structs.rkt")
            (lib "gtp-checkup/benchmarks/gregor/typed-worst-case/time.rkt")
            (lib "gtp-checkup/benchmarks/zombie/untyped/image.rkt")
            (lib "gtp-checkup/benchmarks/kcfa/typed/time-adapted.rkt")
            (lib "gtp-checkup/benchmarks/dungeon/typed/message-queue.rkt")
            (lib "gtp-checkup/benchmarks/quadT/typed-worst-case/ocm.rkt")
            (lib
             "gtp-checkup/benchmarks/jpeg/base/math/private/exception.rkt")
            (lib "gtp-checkup/benchmarks/tetris/untyped/world.rkt")
            (lib "gtp-checkup/benchmarks/jpeg/base/bytevectors-6-typed.rkt")
            (lib "gtp-checkup/benchmarks/snake/typed/motion-help.rkt")
            (lib
             "gtp-checkup/benchmarks/mbta/base/graph/graph/tests/timing-tests.rkt")
            (lib "gtp-checkup/benchmarks/take5/untyped/stack-types.rkt")
            (lib "gtp-checkup/benchmarks/tetris/untyped/elim.rkt")
            (lib "gtp-checkup/benchmarks/jpeg/typed-worst-case/main.rkt")
            (lib "gtp-checkup/benchmarks/take5/untyped/main.rkt")
            (lib "gtp-checkup/benchmarks/acquire/typed/auxiliaries.rkt")
            (lib
             "gtp-checkup/benchmarks/acquire/typed-worst-case/state-adapted.rkt")
            (lib
             "gtp-checkup/benchmarks/gregor/typed-worst-case/structs-adapter.rkt")
            (lib "gtp-checkup/benchmarks/dungeon/typed-worst-case/grid.rkt")
            (lib "gtp-checkup/benchmarks/lnm/typed/main.rkt")
            (lib "gtp-checkup/benchmarks/fsm/untyped/automata.rkt")
            (lib
             "gtp-checkup/benchmarks/fsmoo/untyped/population-adapted.rkt")
            (lib "gtp-checkup/benchmarks/quadU/typed/hyphenate.rkt")
            (lib "gtp-checkup/benchmarks/zombie/typed-worst-case/math.rkt")
            (lib "gtp-checkup/benchmarks/quadU/base/csp/problem.rkt")
            (lib "gtp-checkup/benchmarks/zordoz/untyped/zo-transition.rkt")
            (lib "gtp-checkup/benchmarks/gregor/untyped/time.rkt")
            (lib "gtp-checkup/benchmarks/mbta/typed-worst-case/main.rkt")
            (lib "gtp-checkup/benchmarks/tetris/typed-worst-case/block.rkt")
            (lib "gtp-checkup/benchmarks/quadT/typed/ocm-struct.rkt")
            (lib
             "gtp-checkup/benchmarks/kcfa/typed-worst-case/benv-adapted.rkt")
            (lib "gtp-checkup/benchmarks/dungeon/typed/utils.rkt")
            (lib "gtp-checkup/benchmarks/forth/base/make-history.rkt")
            (lib "gtp-checkup/benchmarks/gregor/untyped/clock.rkt")
            (lib "gtp-checkup/benchmarks/jpeg/untyped/main.rkt")
            (lib "gtp-checkup/benchmarks/quadU/typed/ocm-struct-adapted.rkt")
            (lib "gtp-checkup/benchmarks/jpeg/base/math/array.rkt")
            (lib "gtp-checkup/benchmarks/fsm/typed/automata-adapted.rkt")
            (lib "gtp-checkup/benchmarks/gregor/typed/structs-adapter.rkt")
            (lib "gtp-checkup/benchmarks/snake/untyped/const.rkt")
            (lib "gtp-checkup/benchmarks/take5/typed/basics.rkt")
            (lib "gtp-checkup/benchmarks/gregor/typed-worst-case/clock.rkt")
            (lib "gtp-checkup/benchmarks/acquire/untyped/basics.rkt")
            (lib "gtp-checkup/benchmarks/acquire/typed/player.rkt")
            (lib "gtp-checkup/benchmarks/quadU/untyped/quad-main.rkt")
            (lib "gtp-checkup/benchmarks/acquire/typed/state-adapted.rkt")
            (lib
             "gtp-checkup/benchmarks/quadU/typed-worst-case/penalty-struct.rkt")
            (lib "gtp-checkup/benchmarks/zordoz/base/typed-zo-structs.rkt")
            (lib "gtp-checkup/benchmarks/jpeg/typed-worst-case/bit-ports.rkt")
            (lib
             "gtp-checkup/benchmarks/jpeg/base/math/private/base/base-random.rkt")
            (lib "gtp-checkup/benchmarks/morsecode/typed-worst-case/main.rkt")
            (lib "gtp-checkup/benchmarks/quadU/typed-worst-case/quads.rkt")
            (lib "gtp-checkup/benchmarks/quadT/base/csp/csp.rkt")
            (lib "gtp-checkup/benchmarks/synth/typed-worst-case/synth.rkt")
            (lib "gtp-checkup/benchmarks/lnm/typed-worst-case/bitstring.rkt")
            (lib "gtp-checkup/benchmarks/gregor/untyped/core-structs.rkt")
            (lib
             "gtp-checkup/benchmarks/synth/typed-worst-case/sequencer.rkt")
            (lib "gtp-checkup/benchmarks/lnm/typed/spreadsheet.rkt")
            (lib
             "gtp-checkup/benchmarks/quadU/untyped/penalty-struct-adapted.rkt")
            (lib "gtp-checkup/benchmarks/tetris/untyped/block.rkt")
            (lib "gtp-checkup/benchmarks/snake/typed/cut-tail.rkt")
            (lib
             "gtp-checkup/benchmarks/jpeg/base/math/private/array/array-broadcast.rkt")
            (lib "gtp-checkup/benchmarks/zordoz/typed-worst-case/main.rkt")
            (lib
             "gtp-checkup/benchmarks/acquire/typed-worst-case/board-adapted.rkt")
            (lib "gtp-checkup/benchmarks/lnm/untyped/spreadsheet.rkt")
            (lib "gtp-checkup/benchmarks/lnm/untyped/main.rkt")
            (lib "gtp-checkup/benchmarks/dungeon/base/cell-types.rkt")
            (lib "gtp-checkup/benchmarks/kcfa/typed-worst-case/ai.rkt")
            (lib "gtp-checkup/benchmarks/acquire/typed/board.rkt")
            (lib "gtp-checkup/benchmarks/zombie/typed/image-adapted.rkt")
            (lib "gtp-checkup/benchmarks/fsm/untyped/main.rkt")
            (lib
             "gtp-checkup/benchmarks/gregor/typed-worst-case/gregor-structs.rkt")
            (lib
             "gtp-checkup/benchmarks/mbta/base/graph/graph/tests/timing-test-scc.rkt")
            (lib "gtp-checkup/benchmarks/take5/typed-worst-case/player.rkt")
            (lib "gtp-checkup/benchmarks/quadU/untyped/quads.rkt")
            (lib "gtp-checkup/benchmarks/acquire/typed/state.rkt")
            (lib "gtp-checkup/benchmarks/synth/typed/main.rkt")
            (lib "gtp-checkup/benchmarks/mbta/base/my-graph.rkt")
            (lib
             "gtp-checkup/benchmarks/morsecode/typed-worst-case/morse-code-strings.rkt")
            (lib "gtp-checkup/benchmarks/tetris/typed/main.rkt")
            (lib "gtp-checkup/benchmarks/quadT/base/quad-types.rkt")
            (lib "gtp-checkup/benchmarks/acquire/typed-worst-case/player.rkt")
            (lib "gtp-checkup/benchmarks/gregor/base/tzinfo/main.rkt")
            (lib "gtp-checkup/benchmarks/take5/typed/player-types.rkt")
            (lib "gtp-checkup/benchmarks/mbta/typed/run-t.rkt")
            (lib
             "gtp-checkup/benchmarks/zombie/typed-worst-case/image-adapted.rkt")
            (lib "gtp-checkup/benchmarks/fsmoo/typed-worst-case/automata.rkt")
            (lib "gtp-checkup/benchmarks/jpeg/typed/bit-ports.rkt")
            (lib
             "gtp-checkup/benchmarks/synth/typed-worst-case/array-transform.rkt")
            (lib "gtp-checkup/benchmarks/synth/typed/array-transform.rkt")
            (lib
             "gtp-checkup/benchmarks/take5/typed-worst-case/card-adapted.rkt")
            (lib "gtp-checkup/benchmarks/zombie/typed/math.rkt")
            (lib "gtp-checkup/benchmarks/dungeon/untyped/cell.rkt")
            (lib
             "gtp-checkup/benchmarks/jpeg/base/math/private/array/array-syntax.rkt")
            (lib "gtp-checkup/benchmarks/zordoz/typed/zo-find.rkt")
            (lib "gtp-checkup/benchmarks/quadU/base/csp/helper.rkt")
            (lib "gtp-checkup/benchmarks/quadU/untyped/wrap.rkt")
            (lib "gtp-checkup/benchmarks/take5/untyped/player.rkt")
            (lib "gtp-checkup/benchmarks/snake/untyped/motion.rkt")
            (lib "gtp-checkup/benchmarks/tetris/typed/world.rkt")
            (lib "gtp-checkup/benchmarks/zordoz/untyped/zo-find.rkt")
            (lib
             "gtp-checkup/benchmarks/synth/typed-worst-case/array-broadcast.rkt")
            (lib
             "gtp-checkup/benchmarks/morsecode/untyped/morse-code-strings.rkt")
            (lib "gtp-checkup/benchmarks/quadT/typed/quads.rkt")
            (lib "gtp-checkup/benchmarks/tetris/typed/consts.rkt")
            (lib "gtp-checkup/benchmarks/jpeg/base/typedefs.rkt")
            (lib "gtp-checkup/benchmarks/kcfa/untyped/time.rkt")
            (lib
             "gtp-checkup/benchmarks/quadU/typed-worst-case/ocm-struct.rkt")
            (lib "gtp-checkup/benchmarks/lnm/untyped/modulegraph.rkt")
            (lib "gtp-checkup/benchmarks/acquire/untyped/player.rkt")
            (lib "gtp-checkup/benchmarks/quadT/typed/hyphenate.rkt")
            (lib
             "gtp-checkup/benchmarks/quadU/typed-worst-case/penalty-struct-adapted.rkt")
            (lib
             "gtp-checkup/benchmarks/gregor/typed-worst-case/gregor-adapter.rkt")
            (lib "gtp-checkup/benchmarks/gregor/untyped/datetime.rkt")
            (lib
             "gtp-checkup/benchmarks/quadU/untyped/ocm-struct-adapted.rkt")
            (lib "gtp-checkup/benchmarks/zombie/untyped/main.rkt")
            (lib "gtp-checkup/benchmarks/quadU/base/csp/test-classes.rkt")
            (lib "gtp-checkup/benchmarks/acquire/untyped/board-adapted.rkt")
            (lib "gtp-checkup/benchmarks/snake/untyped/motion-help.rkt")
            (lib
             "gtp-checkup/benchmarks/mbta/base/graph/graph/graph-weighted.rkt")
            (lib "gtp-checkup/benchmarks/lnm/typed/pict-adapted.rkt")
            (lib
             "gtp-checkup/benchmarks/gregor/base/tzinfo/scribblings/tzinfo.scrbl")
            (lib "gtp-checkup/benchmarks/lnm/typed/modulegraph.rkt")
            (lib "gtp-checkup/benchmarks/kcfa/untyped/main.rkt")
            (lib "gtp-checkup/benchmarks/gregor/typed/moment.rkt")
            (lib "gtp-checkup/benchmarks/gregor/untyped/structs-adapter.rkt")
            (lib "gtp-checkup/benchmarks/quadU/untyped/world.rkt")
            (lib "gtp-checkup/benchmarks/quadT/typed/wrap.rkt")
            (lib
             "gtp-checkup/benchmarks/jpeg/base/math/private/array/for-each.rkt")
            (lib "gtp-checkup/data/parse.rkt")
            (lib "gtp-checkup/benchmarks/zombie/typed-worst-case/zombie.rkt")
            (lib
             "gtp-checkup/benchmarks/mbta/base/graph/graph/graph-fns-allpairs-shortestpaths.rkt")
            (lib "gtp-checkup/benchmarks/gregor/untyped/offset-resolvers.rkt")
            (lib "gtp-checkup/benchmarks/zombie/typed/image.rkt")
            (lib "gtp-checkup/benchmarks/quadT/base/csp/helper.rkt")
            (lib "gtp-checkup/benchmarks/quadU/untyped/quick-sample.rkt")
            (lib "gtp-checkup/benchmarks/dungeon/typed-worst-case/main.rkt")
            (lib "gtp-checkup/benchmarks/jpeg/typed/exif.rkt")
            (lib "gtp-checkup/benchmarks/sieve/untyped/main.rkt")
            (lib "gtp-checkup/benchmarks/quadT/untyped/main.rkt")
            (lib
             "gtp-checkup/benchmarks/suffixtree/typed-worst-case/main.rkt")
            (lib "gtp-checkup/benchmarks/kcfa/typed-worst-case/main.rkt")
            (lib "gtp-checkup/benchmarks/forth/base/command-types.rkt")
            (lib "gtp-checkup/benchmarks/tetris/typed/elim.rkt")
            (lib
             "gtp-checkup/benchmarks/jpeg/base/math/private/array/mutable-array.rkt")
            (lib "gtp-checkup/benchmarks/acquire/typed-worst-case/admin.rkt")
            (lib "gtp-checkup/benchmarks/quadU/base/csp/domain.rkt")
            (lib "gtp-checkup/benchmarks/suffixtree/untyped/lcs.rkt")
            (lib
             "gtp-checkup/benchmarks/mbta/base/graph/graph/tests/test-utils.rkt")
            (lib "gtp-checkup/benchmarks/quadT/untyped/ocm-struct.rkt")
            (lib "gtp-checkup/main.rkt")
            (lib "gtp-checkup/benchmarks/acquire/untyped/tree-adapted.rkt")
            (lib "gtp-checkup/benchmarks/kcfa/typed/ui.rkt")
            (lib
             "gtp-checkup/benchmarks/jpeg/base/math/private/array/typed-array-sequence.rkt")
            (lib
             "gtp-checkup/benchmarks/gregor/base/tzinfo/private/zoneinfo-search.rkt")
            (lib "gtp-checkup/benchmarks/quadT/untyped/quick-sample.rkt")
            (lib "gtp-checkup/benchmarks/snake/typed/const.rkt")
            (lib
             "gtp-checkup/benchmarks/mbta/base/graph/graph/graph-fns-singlesource-shortestpaths.rkt")
            (lib "gtp-checkup/benchmarks/acquire/untyped/board.rkt")
            (lib
             "gtp-checkup/benchmarks/gregor/typed-worst-case/core-adapter.rkt")
            (lib "gtp-checkup/benchmarks/jpeg/untyped/bit-ports.rkt")
            (lib "gtp-checkup/benchmarks/synth/typed-worst-case/mixer.rkt")
            (lib "gtp-checkup/benchmarks/forth/typed/eval.rkt")
            (lib "gtp-checkup/benchmarks/fsm/typed-worst-case/population.rkt")
            (lib "gtp-checkup/benchmarks/quadU/typed/quick-sample.rkt")
            (lib
             "gtp-checkup/benchmarks/mbta/base/graph/graph/tests/graph-fns-coloring-tests.rkt")
            (lib
             "gtp-checkup/benchmarks/take5/typed-worst-case/basics-types.rkt")
            (lib "gtp-checkup/benchmarks/gregor/untyped/moment.rkt")
            (lib "gtp-checkup/benchmarks/fsmoo/typed/population.rkt")
            (lib "gtp-checkup/benchmarks/quadU/base/heart-of-darkness.rkt")
            (lib "gtp-checkup/benchmarks/synth/typed/array-struct.rkt")
            (lib "gtp-checkup/scribblings/gtp-checkup.scrbl")
            (lib
             "gtp-checkup/benchmarks/fsmoo/typed-worst-case/population-adapted.rkt")
            (lib
             "gtp-checkup/benchmarks/kcfa/typed-worst-case/structs-adapted.rkt")
            (lib "gtp-checkup/benchmarks/quadT/base/untyped.rkt")
            (lib
             "gtp-checkup/benchmarks/lnm/typed-worst-case/spreadsheet.rkt")
            (lib "gtp-checkup/benchmarks/take5/untyped/card-pool-types.rkt")
            (lib
             "gtp-checkup/benchmarks/suffixtree/typed-worst-case/ukkonen.rkt")
            (lib
             "gtp-checkup/benchmarks/acquire/typed-worst-case/strategy.rkt")
            (lib "gtp-checkup/benchmarks/zordoz/typed/zo-string.rkt")
            (lib "gtp-checkup/benchmarks/take5/typed/card-pool-types.rkt")
            (lib "gtp-checkup/benchmarks/quadU/typed/ocm-struct.rkt")
            (lib "gtp-checkup/benchmarks/take5/untyped/basics-types.rkt")
            (lib "gtp-checkup/benchmarks/tetris/untyped/main.rkt")
            (lib
             "gtp-checkup/benchmarks/gregor/base/tzinfo/private/os/env.rkt")
            (lib "gtp-checkup/benchmarks/kcfa/untyped/denotable-adapted.rkt")
            (lib "gtp-checkup/benchmarks/quadU/base/csp/test-problems.rkt")
            (lib "gtp-checkup/benchmarks/acquire/typed/tree-adapted.rkt")
            (lib
             "gtp-checkup/benchmarks/quadU/typed-worst-case/sugar-list.rkt")
            (lib "gtp-checkup/benchmarks/suffixtree/typed/label.rkt")
            (lib "gtp-checkup/benchmarks/gregor/typed/gregor-structs.rkt")
            (lib "gtp-checkup/benchmarks/fsm/untyped/population.rkt")
            (lib "gtp-checkup/benchmarks/forth/typed-worst-case/main.rkt")
            (lib "gtp-checkup/benchmarks/jpeg/typed-worst-case/exif.rkt")
            (lib "gtp-checkup/benchmarks/lnm/untyped/modulegraph-adapted.rkt")
            (lib "gtp-checkup/benchmarks/take5/untyped/dealer-types.rkt")
            (lib "gtp-checkup/benchmarks/lnm/untyped/pict-adapted.rkt")
            (lib "gtp-checkup/benchmarks/kcfa/typed/structs-adapted.rkt")
            (lib "gtp-checkup/benchmarks/mbta/typed/t-view.rkt")
            (lib
             "gtp-checkup/benchmarks/zordoz/typed-worst-case/zo-string.rkt")
            (lib "gtp-checkup/benchmarks/quadT/untyped/hyphenate.rkt")
            (lib "gtp-checkup/benchmarks/take5/typed/dealer.rkt")
            (lib "gtp-checkup/benchmarks/mbta/base/graph/graph/main.rkt")
            (lib "gtp-checkup/benchmarks/tetris/untyped/data.rkt")
            (lib "gtp-checkup/benchmarks/take5/untyped/player-types.rkt")
            (lib "gtp-checkup/benchmarks/acquire/typed/main.rkt")
            (lib "gtp-checkup/benchmarks/zombie/typed/main.rkt")
            (lib
             "gtp-checkup/benchmarks/quadT/typed-worst-case/sugar-list.rkt")
            (lib "gtp-checkup/benchmarks/gregor/typed/offset-resolvers.rkt")
            (lib
             "gtp-checkup/benchmarks/mbta/base/graph/graph/tests/graphviz.rkt")
            (lib "gtp-checkup/benchmarks/mbta/untyped/run-t.rkt")
            (lib "gtp-checkup/benchmarks/mbta/base/t-view-types.rkt")
            (lib "gtp-checkup/benchmarks/take5/base/untyped.rkt")
            (lib "gtp-checkup/benchmarks/gregor/untyped/hmsn.rkt")
            (lib "gtp-checkup/benchmarks/forth/typed/command.rkt")
            (lib "gtp-checkup/benchmarks/suffixtree/untyped/typed-data.rkt")
            (lib "gtp-checkup/benchmarks/quadU/untyped/measure.rkt")
            (lib "gtp-checkup/benchmarks/tetris/untyped/aux.rkt")
            (lib "gtp-checkup/benchmarks/acquire/base/types.rkt")
            (lib
             "gtp-checkup/benchmarks/mbta/base/graph/graph/graph-fns-graphviz.rkt")
            (lib
             "gtp-checkup/benchmarks/jpeg/base/math/private/array/array-struct.rkt")
            (lib "gtp-checkup/benchmarks/snake/untyped/cut-tail.rkt")
            (lib
             "gtp-checkup/benchmarks/fsm/typed-worst-case/benchmark-util.rkt")
            (lib "gtp-checkup/benchmarks/tetris/typed/bset.rkt")
            (lib "gtp-checkup/benchmarks/fsmoo/typed/automata.rkt")
            (lib "gtp-checkup/benchmarks/quadT/base/csp/variable.rkt")
            (lib "gtp-checkup/benchmarks/take5/typed-worst-case/card.rkt")
            (lib "gtp-checkup/benchmarks/take5/typed/stack.rkt")
            (lib "gtp-checkup/benchmarks/suffixtree/typed/main.rkt")
            (lib
             "gtp-checkup/benchmarks/kcfa/typed-worst-case/denotable-adapted.rkt")
            (lib "gtp-checkup/benchmarks/kcfa/typed/structs.rkt")
            (lib "gtp-checkup/benchmarks/snake/typed/collide.rkt")
            (lib
             "gtp-checkup/benchmarks/lnm/typed-worst-case/summary-adapted.rkt")
            (lib "gtp-checkup/benchmarks/gregor/base/tzinfo/source.rkt")
            (lib "gtp-checkup/benchmarks/quadT/base/csp/domain.rkt")
            (lib "gtp-checkup/benchmarks/forth/typed-worst-case/command.rkt")
            (lib "gtp-checkup/benchmarks/kcfa/typed/denotable-adapted.rkt")
            (lib "gtp-checkup/benchmarks/tetris/typed-worst-case/elim.rkt")
            (lib
             "gtp-checkup/benchmarks/kcfa/typed-worst-case/time-adapted.rkt")
            (lib
             "gtp-checkup/benchmarks/gregor/base/tzinfo/private/os/windows.rkt")
            (lib
             "gtp-checkup/benchmarks/gregor/base/cldr/scribblings/cldr-core.scrbl")
            (lib "gtp-checkup/benchmarks/snake/typed-worst-case/const.rkt")
            (lib "gtp-checkup/benchmarks/fsmoo/typed/population-adapted.rkt")
            (lib "gtp-checkup/benchmarks/sieve/typed-worst-case/main.rkt")
            (lib "gtp-checkup/benchmarks/gregor/typed-worst-case/date.rkt")
            (lib "gtp-checkup/benchmarks/quadT/untyped/render.rkt")
            (lib "gtp-checkup/benchmarks/zombie/untyped/image-adapted.rkt")
            (lib
             "gtp-checkup/benchmarks/take5/typed-worst-case/card-pool.rkt")
            (lib
             "gtp-checkup/benchmarks/take5/typed-worst-case/player-types.rkt")
            (lib "gtp-checkup/benchmarks/quadT/untyped/measure.rkt")
            (lib "gtp-checkup/benchmarks/quadU/typed/main.rkt")
            (lib "gtp-checkup/benchmarks/acquire/typed/strategy.rkt")
            (lib "gtp-checkup/benchmarks/take5/typed-worst-case/stack.rkt")
            (lib "gtp-checkup/benchmarks/kcfa/untyped/time-adapted.rkt")
            (lib "gtp-checkup/benchmarks/quadT/typed/ocm.rkt")
            (lib "gtp-checkup/benchmarks/acquire/typed/tree.rkt")
            (lib
             "gtp-checkup/benchmarks/gregor/base/tzinfo/private/os/windows-registry.rkt")
            (lib "gtp-checkup/benchmarks/lnm/untyped/bitstring.rkt")
            (lib "gtp-checkup/benchmarks/quadU/untyped/render.rkt")
            (lib
             "gtp-checkup/benchmarks/quadT/typed-worst-case/penalty-struct.rkt")
            (lib "gtp-checkup/benchmarks/gregor/typed/moment-base.rkt")
            (lib "gtp-checkup/benchmarks/mbta/typed/t-graph.rkt")
            (lib "gtp-checkup/benchmarks/synth/untyped/array-struct.rkt")
            (lib "gtp-checkup/benchmarks/tetris/typed-worst-case/tetras.rkt")
            (lib "gtp-checkup/benchmarks/fsmoo/typed/automata-adapted.rkt")
            (lib
             "gtp-checkup/benchmarks/mbta/base/graph/graph/graph-unweighted.rkt")
            (lib "gtp-checkup/benchmarks/take5/untyped/card-adapted.rkt")
            (lib "gtp-checkup/benchmarks/zordoz/untyped/zo-string.rkt")
            (lib "gtp-checkup/benchmarks/kcfa/untyped/denotable.rkt")
            (lib "gtp-checkup/benchmarks/mbta/typed/main.rkt")
            (lib
             "gtp-checkup/benchmarks/mbta/base/graph/graph/hash-utils.rkt")
            (lib "gtp-checkup/benchmarks/quadT/untyped/quads.rkt")
            (lib "gtp-checkup/benchmarks/fsmoo/untyped/main.rkt")
            (lib
             "gtp-checkup/benchmarks/mbta/base/graph/graph/tests/graph-fns-allpairs-shortestpaths-tests.rkt")
            (lib "gtp-checkup/benchmarks/suffixtree/untyped/ukkonen.rkt")
            (lib "gtp-checkup/benchmarks/synth/typed/typed-data.rkt")
            (lib "gtp-checkup/benchmarks/gregor/untyped/tzinfo-adapter.rkt")
            (lib "gtp-checkup/benchmarks/zordoz/base/compiler-zo-parse.rkt")
            (lib "gtp-checkup/benchmarks/take5/untyped/deck.rkt")
            (lib "gtp-checkup/benchmarks/tetris/untyped/tetras.rkt")
            (lib "gtp-checkup/benchmarks/tetris/typed-worst-case/main.rkt")
            (lib
             "gtp-checkup/benchmarks/acquire/typed-worst-case/auxiliaries.rkt")
            (lib "gtp-checkup/benchmarks/mbta/typed-worst-case/t-view.rkt")
            (lib
             "gtp-checkup/benchmarks/take5/typed-worst-case/dealer-types.rkt")
            (lib "gtp-checkup/benchmarks/take5/typed-worst-case/dealer.rkt")
            (lib "gtp-checkup/benchmarks/jpeg/typed/main.rkt")
            (lib "gtp-checkup/benchmarks/quadT/base/csp/constraint.rkt")
            (lib "gtp-checkup/benchmarks/jpeg/untyped/exif.rkt")
            (lib "gtp-checkup/benchmarks/acquire/untyped/state.rkt")
            (lib "gtp-checkup/benchmarks/quadU/typed-worst-case/wrap.rkt")
            (lib "gtp-checkup/benchmarks/fsm/typed/main.rkt")
            (lib "gtp-checkup/benchmarks/suffixtree/base/kcfa-typed.rkt")
            (lib "gtp-checkup/benchmarks/morsecode/untyped/levenshtein.rkt")
            (lib
             "gtp-checkup/benchmarks/mbta/base/graph/graph/graph-matrix.rkt")
            (lib "gtp-checkup/benchmarks/quadT/typed-worst-case/utils.rkt")
            (lib "gtp-checkup/benchmarks/acquire/typed-worst-case/basics.rkt")
            (lib
             "gtp-checkup/benchmarks/jpeg/base/math/private/inline-sort.rkt")
            (lib "gtp-checkup/benchmarks/synth/untyped/array-transform.rkt")
            (lib "gtp-checkup/benchmarks/quadU/typed-worst-case/ocm.rkt")
            (lib "gtp-checkup/benchmarks/snake/typed/main.rkt")
            (lib "gtp-checkup/benchmarks/lnm/typed/lnm-plot.rkt")
            (lib "gtp-checkup/benchmarks/zombie/typed/zombie.rkt")
            (lib "gtp-checkup/benchmarks/quadT/typed/render.rkt")
            (lib "gtp-checkup/benchmarks/acquire/untyped/strategy.rkt")
            (lib "gtp-checkup/benchmarks/quadT/untyped/sugar-list.rkt")
            (lib "gtp-checkup/benchmarks/gregor/untyped/moment-base.rkt")
            (lib
             "gtp-checkup/benchmarks/zordoz/typed-worst-case/zo-transition.rkt")
            (lib "gtp-checkup/benchmarks/suffixtree/untyped/data.rkt")
            (lib "gtp-checkup/benchmarks/quadU/untyped/sugar-list.rkt")
            (lib "gtp-checkup/benchmarks/quadT/typed-worst-case/wrap.rkt")
            (lib "gtp-checkup/benchmarks/suffixtree/untyped/label.rkt")
            (lib
             "gtp-checkup/benchmarks/gregor/base/tzinfo/private/structs.rkt")
            (lib "gtp-checkup/benchmarks/zordoz/typed/zo-transition.rkt")
            (lib "gtp-checkup/benchmarks/synth/untyped/sequencer.rkt")
            (lib "gtp-checkup/benchmarks/quadU/base/csp/csp.rkt")
            (lib "gtp-checkup/benchmarks/gregor/typed/difference.rkt")
            (lib
             "gtp-checkup/benchmarks/suffixtree/typed-worst-case/typed-data.rkt")
            (lib "gtp-checkup/benchmarks/fsm/typed-worst-case/main.rkt")
            (lib "gtp-checkup/benchmarks/quadU/typed-worst-case/main.rkt")
            (lib "gtp-checkup/benchmarks/sieve/untyped/streams.rkt")
            (lib "gtp-checkup/benchmarks/quadT/untyped/penalty-struct.rkt")
            (lib "gtp-checkup/benchmarks/take5/untyped/card.rkt")
            (lib
             "gtp-checkup/benchmarks/fsmoo/typed-worst-case/automata-adapted.rkt")
            (lib "gtp-checkup/benchmarks/dungeon/untyped/message-queue.rkt")
            (lib
             "gtp-checkup/benchmarks/jpeg/base/math/private/array/typed-array-struct.rkt")
            (lib
             "gtp-checkup/benchmarks/take5/typed-worst-case/card-pool-types.rkt")
            (lib "gtp-checkup/benchmarks/mbta/base/graph/queue/gen-queue.rkt")
            (lib
             "gtp-checkup/benchmarks/quadT/untyped/penalty-struct-adapted.rkt")
            (lib "gtp-checkup/benchmarks/take5/untyped/dealer.rkt")
            (lib "gtp-checkup/benchmarks/quadT/base/csp/solver.rkt")
            (lib
             "gtp-checkup/benchmarks/gregor/base/tzinfo/private/generics.rkt")
            (lib "gtp-checkup/benchmarks/quadT/base/core.rkt")
            (lib "gtp-checkup/benchmarks/quadT/typed-worst-case/render.rkt")
            (lib
             "gtp-checkup/benchmarks/suffixtree/typed-worst-case/data.rkt")
            (lib "gtp-checkup/benchmarks/fsm/untyped/utilities.rkt")
            (lib "gtp-checkup/benchmarks/gregor/typed-worst-case/main.rkt")
            (lib "gtp-checkup/benchmarks/acquire/typed/board-adapted.rkt")
            (lib "gtp-checkup/benchmarks/snake/typed-worst-case/data.rkt")
            (lib
             "gtp-checkup/benchmarks/jpeg/base/math/private/base/base-constants.rkt")
            (lib "gtp-checkup/benchmarks/quadU/base/csp/solver.rkt")
            (lib "gtp-checkup/benchmarks/snake/untyped/data.rkt")
            (lib
             "gtp-checkup/benchmarks/gregor/typed-worst-case/difference.rkt")
            (lib "gtp-checkup/benchmarks/suffixtree/typed/structs.rkt")
            (lib "gtp-checkup/benchmarks/take5/typed/basics-types.rkt")
            (lib "gtp-checkup/benchmarks/gregor/typed/clock.rkt")
            (lib "gtp-checkup/benchmarks/quadT/base/untyped-predicates.rkt")
            (lib "gtp-checkup/benchmarks/quadU/base/csp/constraint.rkt")
            (lib "gtp-checkup/benchmarks/quadU/typed/utils.rkt")
            (lib "gtp-checkup/benchmarks/synth/untyped/array-utils.rkt")
            (lib "gtp-checkup/benchmarks/lnm/untyped/lnm-plot.rkt")
            (lib
             "gtp-checkup/benchmarks/take5/typed-worst-case/deck-types.rkt")
            (lib "gtp-checkup/benchmarks/gregor/untyped/ymd.rkt")
            (lib
             "gtp-checkup/benchmarks/gregor/base/tzinfo/private/tzfile-parser.rkt")
            (lib "gtp-checkup/benchmarks/synth/typed/mixer.rkt")
            (lib "gtp-checkup/benchmarks/gregor/untyped/gregor-structs.rkt")
            (lib
             "gtp-checkup/benchmarks/fsmoo/typed-worst-case/population.rkt")
            (lib "gtp-checkup/benchmarks/lnm/typed/bitstring.rkt")
            (lib "gtp-checkup/benchmarks/fsm/typed-worst-case/automata.rkt")
            (lib "gtp-checkup/benchmarks/kcfa/typed/benv.rkt")
            (lib "gtp-checkup/benchmarks/kcfa/typed/ai.rkt")
            (lib "gtp-checkup/benchmarks/forth/typed-worst-case/eval.rkt")
            (lib "gtp-checkup/benchmarks/quadU/typed/wrap.rkt")
            (lib "gtp-checkup/benchmarks/quadT/base/csp/test-classes.rkt")
            (lib "gtp-checkup/benchmarks/forth/typed-worst-case/stack.rkt")
            (lib "gtp-checkup/benchmarks/tetris/typed-worst-case/aux.rkt")
            (lib "gtp-checkup/benchmarks/snake/typed/handlers.rkt")
            (lib "gtp-checkup/benchmarks/gregor/typed-worst-case/ymd.rkt")
            (lib "gtp-checkup/benchmarks/gregor/untyped/date.rkt")
            (lib
             "gtp-checkup/benchmarks/gregor/base/tzinfo/private/tabfile-parser.rkt")
            (lib
             "gtp-checkup/benchmarks/suffixtree/typed-worst-case/label.rkt")
            (lib "gtp-checkup/benchmarks/gregor/typed-worst-case/hmsn.rkt")
            (lib
             "gtp-checkup/benchmarks/morsecode/typed/morse-code-table.rkt")
            (lib "gtp-checkup/benchmarks/forth/untyped/command.rkt")
            (lib "gtp-checkup/benchmarks/acquire/typed/basics.rkt")
            (lib "gtp-checkup/benchmarks/fsmoo/typed-worst-case/main.rkt")
            (lib
             "gtp-checkup/benchmarks/jpeg/base/math/private/base/base-functions.rkt")
            (lib
             "gtp-checkup/benchmarks/morsecode/typed/morse-code-strings.rkt")
            (lib "gtp-checkup/benchmarks/fsm/typed/benchmark-util.rkt")
            (lib "gtp-checkup/benchmarks/gregor/typed/datetime.rkt")
            (lib "gtp-checkup/benchmarks/take5/typed-worst-case/deck.rkt")
            (lib "gtp-checkup/benchmarks/mbta/base/graph/queue/priority.rkt")
            (lib "gtp-checkup/benchmarks/fsm/typed/automata.rkt")
            (lib "gtp-checkup/benchmarks/jpeg/base/untyped.rkt")
            (lib "gtp-checkup/benchmarks/zombie/untyped/zombie.rkt")
            (lib "gtp-checkup/benchmarks/acquire/base/untyped.rkt")
            (lib "gtp-checkup/benchmarks/lnm/typed-worst-case/summary.rkt")
            (lib
             "gtp-checkup/benchmarks/mbta/base/graph/graph/graph-fns-basic.rkt")
            (lib "gtp-checkup/benchmarks/gregor/typed/gregor-adapter.rkt")
            (lib "gtp-checkup/benchmarks/acquire/untyped/admin.rkt")
            (lib
             "gtp-checkup/benchmarks/gregor/typed-worst-case/tzinfo-adapter.rkt")
            (lib "gtp-checkup/benchmarks/quadU/typed/measure.rkt")
            (lib "gtp-checkup/benchmarks/tetris/typed/aux.rkt")
            (lib "gtp-checkup/benchmarks/gregor/untyped/difference.rkt")
            (lib "gtp-checkup/benchmarks/take5/untyped/card-pool.rkt")
            (lib "gtp-checkup/benchmarks/quadT/typed/ocm-struct-adapted.rkt")
            (lib "gtp-checkup/benchmarks/kcfa/typed-worst-case/ui.rkt")
            (lib
             "gtp-checkup/benchmarks/quadT/typed-worst-case/quick-sample.rkt")
            (lib
             "gtp-checkup/benchmarks/quadT/untyped/ocm-struct-adapted.rkt")
            (lib "gtp-checkup/benchmarks/tetris/untyped/consts.rkt")
            (lib
             "gtp-checkup/benchmarks/mbta/base/graph/graph/tests/graph-fns-basic-tests.rkt")
            (lib "gtp-checkup/benchmarks/kcfa/typed/denotable.rkt")
            (lib "gtp-checkup/benchmarks/fsmoo/untyped/automata-adapted.rkt")
            (lib
             "gtp-checkup/benchmarks/gregor/base/tzinfo/private/zoneinfo.rkt")
            (lib
             "gtp-checkup/benchmarks/quadT/typed/penalty-struct-adapted.rkt")
            (lib "gtp-checkup/benchmarks/gregor/typed/hmsn.rkt")
            (lib "gtp-checkup/benchmarks/jpeg/base/math/private/utils.rkt")
            (lib "gtp-checkup/benchmarks/synth/untyped/synth.rkt")
            (lib "gtp-checkup/benchmarks/quadU/base/core-types.rkt")
            (lib "gtp-checkup/benchmarks/quadU/typed/ocm.rkt")
            (lib "gtp-checkup/benchmarks/quadT/typed/sugar-list.rkt")
            (lib "gtp-checkup/benchmarks/quadT/typed-worst-case/world.rkt")
            (lib
             "gtp-checkup/benchmarks/tetris/typed-worst-case/base-types.rkt")
            (lib "gtp-checkup/scribblings/plot.rkt")
            (lib "gtp-checkup/benchmarks/take5/typed/main.rkt")
            (lib "gtp-checkup/benchmarks/fsmoo/untyped/population.rkt")
            (lib "gtp-checkup/benchmarks/kcfa/typed-worst-case/structs.rkt")
            (lib "gtp-checkup/benchmarks/fsm/untyped/automata-adapted.rkt")
            (lib "gtp-checkup/benchmarks/take5/typed/deck.rkt")
            (lib "gtp-checkup/benchmarks/synth/untyped/array-broadcast.rkt")
            (lib "gtp-checkup/benchmarks/gregor/typed/core-structs.rkt")
            (lib "gtp-checkup/benchmarks/quadT/untyped/utils.rkt")
            (lib
             "gtp-checkup/benchmarks/gregor/base/tzinfo/private/os/unix.rkt")
            (lib
             "gtp-checkup/benchmarks/jpeg/base/math/private/array/array-transform.rkt")
            (lib "gtp-checkup/benchmarks/mbta/typed-worst-case/t-graph.rkt")
            (lib "gtp-checkup/benchmarks/quadU/typed/quads.rkt")
            (lib "gtp-checkup/benchmarks/acquire/untyped/auxiliaries.rkt")
            (lib "gtp-checkup/benchmarks/mbta/base/graph/graph/gen-graph.rkt")
            (lib "gtp-checkup/benchmarks/quadT/typed/main.rkt")
            (lib "gtp-checkup/benchmarks/kcfa/untyped/ui.rkt")
            (lib "gtp-checkup/benchmarks/dungeon/typed/main.rkt")
            (lib
             "gtp-checkup/benchmarks/dungeon/typed-worst-case/message-queue.rkt")
            (lib "gtp-checkup/benchmarks/take5/typed/deck-types.rkt")
            (lib "gtp-checkup/benchmarks/quadU/typed/sugar-list.rkt")
            (lib "gtp-checkup/benchmarks/tetris/typed/base-types.rkt")
            (lib "gtp-checkup/benchmarks/mbta/base/graph/graph/graph.scrbl")
            (lib "gtp-checkup/benchmarks/acquire/typed-worst-case/state.rkt")
            (lib "gtp-checkup/benchmarks/fsmoo/untyped/utilities.rkt")
            (lib "gtp-checkup/benchmarks/snake/typed-worst-case/motion.rkt")
            (lib "gtp-checkup/benchmarks/lnm/typed/modulegraph-adapted.rkt")
            (lib "gtp-checkup/benchmarks/tetris/typed/data.rkt")
            (lib "gtp-checkup/benchmarks/zordoz/base/compiler-zo-structs.rkt")
            (lib "gtp-checkup/benchmarks/lnm/typed/summary-adapted.rkt")
            (lib "gtp-checkup/benchmarks/quadT/untyped/quad-main.rkt")
            (lib
             "gtp-checkup/benchmarks/fsm/typed-worst-case/automata-adapted.rkt")
            (lib "gtp-checkup/benchmarks/quadU/typed-worst-case/utils.rkt")
            (lib "gtp-checkup/benchmarks/quadU/base/core.rkt")
            (lib "gtp-checkup/benchmarks/dungeon/typed-worst-case/utils.rkt")
            (lib "gtp-checkup/benchmarks/quadT/typed-worst-case/quads.rkt")
            (lib "gtp-checkup/benchmarks/suffixtree/typed/lcs.rkt")
            (lib "gtp-checkup/benchmarks/zordoz/untyped/main.rkt")
            (lib "gtp-checkup/nightly.rkt")
            (lib
             "gtp-checkup/benchmarks/quadT/typed-worst-case/quad-main.rkt")
            (lib "gtp-checkup/benchmarks/gregor/base/cldr/file.rkt")
            (lib
             "gtp-checkup/benchmarks/quadU/typed/penalty-struct-adapted.rkt")
            (lib
             "gtp-checkup/benchmarks/morsecode/typed-worst-case/levenshtein.rkt")
            (lib
             "gtp-checkup/benchmarks/synth/typed-worst-case/typed-data.rkt")
            (lib "gtp-checkup/benchmarks/quadT/base/core-types.rkt")
            (lib "gtp-checkup/benchmarks/kcfa/untyped/structs-adapted.rkt")
            (lib "gtp-checkup/benchmarks/gregor/base/tzinfo/zoneinfo.rkt")
            (lib
             "gtp-checkup/benchmarks/gregor/typed-worst-case/offset-resolvers.rkt")
            (lib "gtp-checkup/benchmarks/gregor/typed/tzinfo-adapter.rkt")
            (lib "gtp-checkup/benchmarks/suffixtree/untyped/main.rkt")
            (lib
             "gtp-checkup/benchmarks/mbta/base/graph/graph/graph-property.rkt")
            (lib "gtp-checkup/benchmarks/lnm/typed-worst-case/lnm-plot.rkt")
            (lib "gtp-checkup/benchmarks/synth/typed-worst-case/data.rkt")
            (lib "gtp-checkup/benchmarks/jpeg/untyped/huffman.rkt")
            (lib "gtp-checkup/benchmarks/take5/typed-worst-case/main.rkt")
            (lib
             "gtp-checkup/benchmarks/mbta/base/graph/graph/tests/graph-fns-minspantree-tests.rkt")
            (lib "gtp-checkup/benchmarks/quadT/untyped/world.rkt")
            (lib "gtp-checkup/benchmarks/gregor/base/types.rkt")
            (lib
             "gtp-checkup/benchmarks/mbta/base/graph/graph/graph-fns-coloring.rkt")
            (lib "gtp-checkup/benchmarks/synth/untyped/drum.rkt")
            (lib "gtp-checkup/benchmarks/snake/untyped/main.rkt")
            (lib
             "gtp-checkup/benchmarks/morsecode/untyped/morse-code-table.rkt")
            (lib
             "gtp-checkup/benchmarks/quadT/typed-worst-case/penalty-struct-adapted.rkt")
            (lib
             "gtp-checkup/benchmarks/mbta/base/graph/graph/graph-fns-minspantree.rkt")
            (lib "gtp-checkup/benchmarks/synth/untyped/mixer.rkt")
            (lib "gtp-checkup/benchmarks/morsecode/typed/levenshtein.rkt")
            (lib "gtp-checkup/benchmarks/synth/typed-worst-case/main.rkt")
            (lib
             "gtp-checkup/benchmarks/gregor/typed-worst-case/datetime.rkt")
            (lib "gtp-checkup/benchmarks/quadU/typed-worst-case/measure.rkt")
            (lib
             "gtp-checkup/benchmarks/quadU/typed-worst-case/ocm-struct-adapted.rkt")
            (lib "gtp-checkup/benchmarks/dungeon/untyped/grid.rkt")
            (lib
             "gtp-checkup/benchmarks/quadT/typed-worst-case/hyphenate.rkt")
            (lib
             "gtp-checkup/benchmarks/gregor/typed-worst-case/moment-base.rkt")
            (lib "gtp-checkup/benchmarks/kcfa/typed-worst-case/benv.rkt")
            (lib "gtp-checkup/benchmarks/fsm/untyped/benchmark-util.rkt")
            (lib
             "gtp-checkup/benchmarks/jpeg/base/math/private/array/array-comprehension.rkt")
            (lib "gtp-checkup/benchmarks/kcfa/untyped/ai.rkt")
            (lib
             "gtp-checkup/benchmarks/zordoz/typed-worst-case/zo-shell.rkt")
            (lib "gtp-checkup/benchmarks/forth/untyped/main.rkt")
            (lib "gtp-checkup/benchmarks/quadT/base/csp/problem.rkt")
            (lib "gtp-checkup/benchmarks/snake/typed/motion.rkt")
            (lib "gtp-checkup/benchmarks/fsm/typed-worst-case/utilities.rkt")
            (lib "gtp-checkup/benchmarks/forth/typed/main.rkt")
            (lib "gtp-checkup/benchmarks/zordoz/typed-worst-case/zo-find.rkt")
            (lib "gtp-checkup/benchmarks/take5/typed/player.rkt")
            (lib "gtp-checkup/benchmarks/synth/untyped/main.rkt")
            (lib "gtp-checkup/benchmarks/snake/untyped/handlers.rkt")
            (lib "gtp-checkup/benchmarks/quadU/base/quad-types.rkt")
            (lib "gtp-checkup/benchmarks/synth/typed-worst-case/drum.rkt")
            (lib "gtp-checkup/benchmarks/fsmoo/typed/main.rkt")
            (lib "gtp-checkup/data/definition.rkt")
            (lib "gtp-checkup/benchmarks/quadT/typed/penalty-struct.rkt")
            (lib "gtp-checkup/benchmarks/gregor/typed/time.rkt")
            (lib "gtp-checkup/benchmarks/acquire/untyped/state-adapted.rkt")
            (lib "gtp-checkup/benchmarks/mbta/base/graph/graph/utils.rkt")
            (lib "gtp-checkup/benchmarks/jpeg/typed/huffman.rkt")
            (lib "gtp-checkup/benchmarks/gregor/typed/core-adapter.rkt")
            (lib
             "gtp-checkup/benchmarks/mbta/base/graph/graph/adjlist-utils.rkt")
            (lib "gtp-checkup/benchmarks/dungeon/base/un-types.rkt")
            (lib "gtp-checkup/benchmarks/quadU/typed-worst-case/render.rkt")
            (lib "gtp-checkup/benchmarks/forth/typed/stack.rkt")
            (lib "gtp-checkup/benchmarks/kcfa/typed/time.rkt")
            (lib "gtp-checkup/benchmarks/mbta/untyped/t-view.rkt")
            (lib "gtp-checkup/benchmarks/mbta/untyped/main.rkt")
            (lib "gtp-checkup/benchmarks/gregor/untyped/gregor-adapter.rkt")
            (lib "gtp-checkup/benchmarks/quadU/untyped/hyphenate.rkt")
            (lib "gtp-checkup/benchmarks/take5/untyped/deck-types.rkt")
            (lib
             "gtp-checkup/benchmarks/mbta/base/graph/graph/tests/boost-examples.rkt")
            (lib "gtp-checkup/benchmarks/acquire/typed-worst-case/tree.rkt")
            (lib "gtp-checkup/benchmarks/sieve/typed-worst-case/streams.rkt")
            (lib "gtp-checkup/benchmarks/dungeon/untyped/utils.rkt")
            (lib
             "gtp-checkup/benchmarks/mbta/base/graph/graph/tests/run-all-tests.rkt")
            (lib
             "gtp-checkup/benchmarks/jpeg/base/math/private/array/typed-array-transform.rkt")
            (lib "gtp-checkup/benchmarks/jpeg/typed-worst-case/jfif.rkt")
            (lib "gtp-checkup/benchmarks/forth/untyped/stack.rkt")
            (lib "gtp-checkup/benchmarks/quadU/typed/penalty-struct.rkt")
            (lib "gtp-checkup/benchmarks/quadT/base/csp/test-problems.rkt")
            (lib "gtp-checkup/benchmarks/take5/typed/card-pool.rkt")
            (lib "gtp-checkup/benchmarks/mbta/base/graph/queue/fifo.rkt")
            (lib "gtp-checkup/benchmarks/take5/typed/stack-types.rkt")
            (lib "gtp-checkup/benchmarks/jpeg/typed/jfif.rkt")
            (lib "gtp-checkup/benchmarks/gregor/untyped/core-adapter.rkt")
            (lib
             "gtp-checkup/benchmarks/acquire/typed-worst-case/tree-adapted.rkt")
            (lib "gtp-checkup/benchmarks/zordoz/untyped/zo-shell.rkt")
            (lib "gtp-checkup/benchmarks/fsm/typed/utilities.rkt")
            (lib "gtp-checkup/benchmarks/snake/typed/data-adaptor.rkt")
            (lib "gtp-checkup/benchmarks/lnm/typed-worst-case/main.rkt")
            (lib "gtp-checkup/benchmarks/dungeon/typed/cell.rkt")
            (lib "gtp-checkup/benchmarks/synth/untyped/typed-data.rkt")))
          (name . "gtp-checkup")
          (nix-sha256
           .
           "0xdxs16qc496vcxxy6xhqp91vnl9vc9m66mfa36igr5y040dvj1b")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:types@ccs.neu.edu . #t)
                   (ring:2 . #t)
                   (tests . #t)
                   (typed-racket . #t)))
          (source . "git://github.com/bennn/gtp-checkup")
          (tags . ("tests" "typed-racket"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "b013e09eaf3c6121aaded84d66f3d5a2d081c699")
                          (source . "git://github.com/bennn/gtp-checkup")
                          (source_url
                           .
                           "http://github.com/bennn/gtp-checkup/tree/master")))))))
 ("gtp-measure"
  .
  #hasheq((author . "types@ccs.neu.edu")
          (authors . ("types@ccs.neu.edu"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "gtp-measure"
                    "doc/gtp-measure@gtp-measure/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/gtp-measure.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/gtp-measure.txt")))
          (checksum . "c29d282556427799ee40649e5b1fb7d63856f39a")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "lang-file"
            "scribble-lib"
            "basedir"
            "gtp-util"
            ("sandbox-lib" #:version "1.1")
            "rackunit-lib"
            "racket-doc"
            "scribble-doc"
            "basedir"
            "require-typed-check"
            "typed-racket-doc"
            "typed-racket-lib"))
          (dependency-names
           .
           ("base"
            "lang-file"
            "scribble-lib"
            "basedir"
            "gtp-util"
            "sandbox-lib"
            "rackunit-lib"
            "racket-doc"
            "scribble-doc"
            "basedir"
            "require-typed-check"
            "typed-racket-doc"
            "typed-racket-lib"))
          (description . "Runs programs, collects timing info")
          (implies . ())
          (last-checked . 1557339598)
          (last-edit . 1517970133)
          (last-updated . 1554865444)
          (modules
           .
           ((lib "gtp-measure/private/check-pkg-deps.rkt")
            (lib
             "gtp-measure/private/test/sample-task/24/0-morsecode/configuration/morse-code-table.rkt")
            (lib
             "gtp-measure/private/test/sample-task/24/0-morsecode/configuration/main.rkt")
            (lib "gtp-measure/private/test/manifest2.rkt")
            (lib "gtp-measure/private/test/sample-file-target.rkt")
            (lib
             "gtp-measure/private/test/sample-task/24/0-morsecode/configuration/levenshtein.rkt")
            (lib "gtp-measure/private/task.rkt")
            (lib "gtp-measure/private/test/infinite-loop-file-target.rkt")
            (lib "gtp-measure/manifest.rkt")
            (lib
             "gtp-measure/private/test/sample-typed-untyped-target/typed/main.rkt")
            (lib "gtp-measure/private/test/sample-task/38/manifest.rkt")
            (lib
             "gtp-measure/private/test/sample-task/24/0-morsecode/configuration/morse-code-strings.rkt")
            (lib "gtp-measure/private/test/sample-manifest-target.rkt")
            (lib "gtp-measure/private/util.rkt")
            (lib "gtp-measure/private/test/manifest1.rkt")
            (lib "gtp-measure/scribblings/gtp-measure.scrbl")
            (lib "gtp-measure/private/parse.rkt")
            (lib "gtp-measure/private/configure.rkt")
            (lib
             "gtp-measure/private/test/sample-typed-untyped-target/typed/a1.rkt")
            (lib "gtp-measure/private/measure.rkt")
            (lib "gtp-measure/parse.rkt")
            (lib "gtp-measure/private/raco.rkt")
            (lib
             "gtp-measure/private/test/sample-typed-untyped-target/untyped/main.rkt")
            (lib "gtp-measure/configure.rkt")
            (lib
             "gtp-measure/private/test/sample-typed-untyped-target/untyped/a1.rkt")
            (lib "gtp-measure/private/test/sample-manifest-target-config.rkt")
            (lib "gtp-measure/private/test/sample-task/24/manifest.rkt")))
          (name . "gtp-measure")
          (nix-sha256
           .
           "0lla80mmwizfbafs9vmy3py78z9qspyc7za4lz3gc78lh6f4d903")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:types@ccs.neu.edu . #t)
                   (benchmarking . #t)
                   (gtp . #t)
                   (ring:2 . #t)))
          (source . "https://github.com/bennn/gtp-measure.git")
          (tags . ("benchmarking" "gtp"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "c29d282556427799ee40649e5b1fb7d63856f39a")
                          (source
                           .
                           "https://github.com/bennn/gtp-measure.git")
                          (source_url
                           .
                           "https://github.com/bennn/gtp-measure.git")))))))
 ("gtp-paper"
  .
  #hasheq((author . "types@ccs.neu.edu")
          (authors . ("types@ccs.neu.edu"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "gtp-paper" "doc/gtp-paper@gtp-paper/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/gtp-paper.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/gtp-paper.txt")))
          (checksum . "1e2cb26af27d7c01c94b76deadd9b5dc075e2059")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "pollen"
            "scribble-abbrevs"
            "scribble-lib"
            "rackunit-lib"
            "racket-doc"
            "scribble-doc"))
          (dependency-names
           .
           ("base"
            "pollen"
            "scribble-abbrevs"
            "scribble-lib"
            "rackunit-lib"
            "racket-doc"
            "scribble-doc"))
          (description . "Quick-start for SIGPLAN Scribble papers")
          (implies . ())
          (last-checked . 1557339599)
          (last-edit . 1503077916)
          (last-updated . 1552755828)
          (modules
           .
           ((lib "gtp-paper/scribblings/gtp-paper.scrbl")
            (lib "gtp-paper/template/bib.rkt")
            (lib "gtp-paper/template/introduction.scrbl")
            (lib "gtp-paper/template/parameters.rkt")
            (lib "gtp-paper/template/paper.scrbl")
            (lib "gtp-paper/template/reader.rkt")
            (lib "gtp-paper/main.rkt")
            (lib "gtp-paper/template/main.rkt")
            (lib "gtp-paper/template/appendix.scrbl")))
          (name . "gtp-paper")
          (nix-sha256
           .
           "0f9hq6ghrq051pl1n0gjjna64v5cksrs580f1sv3zssij494p7h9")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:types@ccs.neu.edu . #t)
                   (latex . #t)
                   (ring:1 . #t)
                   (scribble . #t)
                   (utility . #t)))
          (source . "git://github.com/bennn/gtp-paper")
          (tags . ("latex" "scribble" "utility"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "1e2cb26af27d7c01c94b76deadd9b5dc075e2059")
                          (source . "git://github.com/bennn/gtp-paper")
                          (source_url
                           .
                           "http://github.com/bennn/gtp-paper/tree/master")))))))
 ("gtp-pict"
  .
  #hasheq((author . "types@ccs.neu.edu")
          (authors . ("types@ccs.neu.edu"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "gtp-pict" "doc/gtp-pict@gtp-pict/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/gtp-pict.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/gtp-pict.txt")))
          (checksum . "772a10f63387303775b97725a4afca44e6fb0b9f")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "math-lib"
            "pict-lib"
            "draw-lib"
            "images-lib"
            "pict-abbrevs"
            "ppict"
            "rackunit-lib"
            "racket-doc"
            "scribble-lib"
            "scribble-doc"
            "rackunit-abbrevs"
            "pict-doc"
            "draw-doc"
            "images-doc"))
          (dependency-names
           .
           ("base"
            "math-lib"
            "pict-lib"
            "draw-lib"
            "images-lib"
            "pict-abbrevs"
            "ppict"
            "rackunit-lib"
            "racket-doc"
            "scribble-lib"
            "scribble-doc"
            "rackunit-abbrevs"
            "pict-doc"
            "draw-doc"
            "images-doc"))
          (description . "Picts related to gradual typing / performance")
          (implies . ())
          (last-checked . 1557339599)
          (last-edit . 1542491436)
          (last-updated . 1552755829)
          (modules
           .
           ((lib "gtp-pict/scribblings/gtp-pict.scrbl")
            (lib "gtp-pict/main.rkt")
            (lib "gtp-pict/private/gtp-pict.rkt")))
          (name . "gtp-pict")
          (nix-sha256
           .
           "0z4h800spwps4c3hfckzsfknqd3q804pfn5a7zpnmnxsf9qs6l7q")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:types@ccs.neu.edu . #t)
                   (gtp . #t)
                   (pict . #t)
                   (ring:2 . #t)
                   (util . #t)))
          (source
           .
           "https://gitlab.com/gradual-typing-performance/gtp-pict.git")
          (tags . ("gtp" "pict" "util"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "772a10f63387303775b97725a4afca44e6fb0b9f")
                          (source
                           .
                           "https://gitlab.com/gradual-typing-performance/gtp-pict.git")
                          (source_url
                           .
                           "https://gitlab.com/gradual-typing-performance/gtp-pict.git")))))))
 ("gtp-plot"
  .
  #hasheq((author . "types@ccs.neu.edu")
          (authors . ("types@ccs.neu.edu"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "gtp-plot" "doc/gtp-plot@gtp-plot/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/gtp-plot.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/gtp-plot.txt")))
          (checksum . "ce87a80d55923643495ee201e83edde3d7ab0c55")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "draw-lib"
            "scribble-abbrevs"
            "scribble-lib"
            "math-lib"
            "pict-lib"
            "plot-lib"
            "reprovide-lang"
            "gtp-util"
            "rackunit-lib"
            "racket-doc"
            "scribble-doc"
            "pict-lib"
            "pict-doc"
            "plot-doc"
            "rackunit-abbrevs"
            "typed-racket-doc"
            "gtp-util"))
          (dependency-names
           .
           ("base"
            "draw-lib"
            "scribble-abbrevs"
            "scribble-lib"
            "math-lib"
            "pict-lib"
            "plot-lib"
            "reprovide-lang"
            "gtp-util"
            "rackunit-lib"
            "racket-doc"
            "scribble-doc"
            "pict-lib"
            "pict-doc"
            "plot-doc"
            "rackunit-abbrevs"
            "typed-racket-doc"
            "gtp-util"))
          (description . "Plots for gradual typing performance")
          (implies . ())
          (last-checked . 1557339599)
          (last-edit . 1503902619)
          (last-updated . 1552755830)
          (modules
           .
           ((lib "gtp-plot/private/reticulated-info.rkt")
            (lib "gtp-plot/private/raco.rkt")
            (lib "gtp-plot/reticulated-info.rkt")
            (lib "gtp-plot/sample-info.rkt")
            (lib "gtp-plot/private/typed-racket-info.rkt")
            (lib "gtp-plot/private/util.rkt")
            (lib "gtp-plot/typed-racket-info.rkt")
            (lib "gtp-plot/private/sample-info.rkt")
            (lib "gtp-plot/scribblings/parsing.scrbl")
            (lib "gtp-plot/configuration-info.rkt")
            (lib "gtp-plot/private/plot.rkt")
            (lib "gtp-plot/scribblings/plotting.scrbl")
            (lib "gtp-plot/private/configuration-info.rkt")
            (lib "gtp-plot/scribblings/gtp-plot.scrbl")
            (lib "gtp-plot/private/performance-info.rkt")
            (lib "gtp-plot/util.rkt")
            (lib "gtp-plot/scribblings/supporting.scrbl")
            (lib "gtp-plot/system.rkt")
            (lib "gtp-plot/private/system.rkt")
            (lib "gtp-plot/scribblings/data-definition.scrbl")
            (lib "gtp-plot/performance-info.rkt")
            (lib "gtp-plot/plot.rkt")))
          (name . "gtp-plot")
          (nix-sha256
           .
           "06zj3sar3wqfv90y7gq4whs0ypvp07qs2ili27jn9fr70pmkkml3")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:types@ccs.neu.edu . #t)
                   (gtp . #t)
                   (plot . #t)
                   (ring:1 . #t)
                   (util . #t)))
          (source . "git://github.com/bennn/gtp-plot")
          (tags . ("gtp" "plot" "util"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "ce87a80d55923643495ee201e83edde3d7ab0c55")
                          (source . "git://github.com/bennn/gtp-plot")
                          (source_url
                           .
                           "http://github.com/bennn/gtp-plot/tree/master")))))))
 ("gtp-util"
  .
  #hasheq((author . "types@ccs.neu.edu")
          (authors . ("types@ccs.neu.edu"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "gtp-util" "doc/gtp-util@gtp-util/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/gtp-util.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/gtp-util.txt")))
          (checksum . "42009ee50d3f601739fb57ac3873f9b55ea04a8a")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "math-lib"
            "pict-lib"
            "rackunit-lib"
            "racket-doc"
            "scribble-lib"
            "scribble-doc"
            "rackunit-abbrevs"
            "pict-doc"))
          (dependency-names
           .
           ("base"
            "math-lib"
            "pict-lib"
            "rackunit-lib"
            "racket-doc"
            "scribble-lib"
            "scribble-doc"
            "rackunit-abbrevs"
            "pict-doc"))
          (description . "37 helper functions you won't find anywhere else")
          (implies . ())
          (last-checked . 1557339599)
          (last-edit . 1525061541)
          (last-updated . 1552755832)
          (modules
           .
           ((lib "gtp-util/scribblings/gtp-util.scrbl")
            (lib "gtp-util/main.rkt")
            (lib "gtp-util/system.rkt")))
          (name . "gtp-util")
          (nix-sha256
           .
           "13gxb6ivqgxbldva3q6ramw42zc2jklzs8d9n67p7jvarba2rm10")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:types@ccs.neu.edu . #t)
                   (gtp . #t)
                   (ring:2 . #t)
                   (util . #t)))
          (source . "https://github.com/bennn/gtp-util.git")
          (tags . ("gtp" "util"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "42009ee50d3f601739fb57ac3873f9b55ea04a8a")
                          (source . "https://github.com/bennn/gtp-util.git")
                          (source_url
                           .
                           "https://github.com/bennn/gtp-util.git")))))))
 ("gui"
  .
  #hash((author . "mflatt@racket-lang.org robby@racket-lang.org")
        (checksum . "44093de5b6b7540615e230ffaeead4428f6a2924")
        (dependencies . ("gui-lib" "gui-doc"))
        (dependency-names . ("gui-lib" "gui-doc"))
        (description . "mflatt@racket-lang.org robby@racket-lang.org")
        (modules . ())
        (name . "gui")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/gui.zip")
        (tags . ())))
 ("gui-doc"
  .
  #hash((author . "mflatt@racket-lang.org robby@racket-lang.org")
        (checksum . "312899a6a8bf6a1728f21ec4f4cfd596d812dbd7")
        (dependencies
         .
         ("base"
          "scheme-lib"
          "syntax-color-doc"
          "at-exp-lib"
          "draw-doc"
          "draw-lib"
          "scribble-lib"
          "snip-lib"
          "string-constants-lib"
          "syntax-color-lib"
          "wxme-lib"
          "gui-lib"
          "pict-lib"
          "racket-doc"
          "string-constants-doc"
          "xrepl-doc"))
        (dependency-names
         .
         ("base"
          "scheme-lib"
          "syntax-color-doc"
          "at-exp-lib"
          "draw-doc"
          "draw-lib"
          "scribble-lib"
          "snip-lib"
          "string-constants-lib"
          "syntax-color-lib"
          "wxme-lib"
          "gui-lib"
          "pict-lib"
          "racket-doc"
          "string-constants-doc"
          "xrepl-doc"))
        (description . "mflatt@racket-lang.org robby@racket-lang.org")
        (modules . ())
        (name . "gui-doc")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/gui-doc.zip")
        (tags . ())))
 ("gui-i386-macosx"
  .
  #hash((author . "mflatt@racket-lang.org")
        (checksum . "a2ee7bebc67f026ab5cc261deaeb7df95e9a6fad")
        (dependencies . ("base"))
        (dependency-names . ("base"))
        (description . "mflatt@racket-lang.org")
        (modules . ())
        (name . "gui-i386-macosx")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/gui-i386-macosx.zip")
        (tags . ())))
 ("gui-lib"
  .
  #hash((author . "mflatt@racket-lang.org robby@racket-lang.org")
        (checksum . "33a6592d0078283fe463406a277b03c278a1004b")
        (dependencies
         .
         ("srfi-lite-lib"
          "data-lib"
          "icons"
          ("base" #:version "7.0.0.19")
          "syntax-color-lib"
          ("draw-lib" #:version "1.13")
          ("snip-lib" #:version "1.2")
          "wxme-lib"
          "pict-lib"
          "scheme-lib"
          "scribble-lib"
          ("string-constants-lib" #:version "1.14")
          "option-contract-lib"
          "2d-lib"
          "compatibility-lib"
          "tex-table"
          ("gui-i386-macosx" #:platform "i386-macosx")
          ("gui-x86_64-macosx" #:platform "x86_64-macosx")
          ("gui-ppc-macosx" #:platform "ppc-macosx")
          ("gui-win32-i386" #:platform "win32\\i386")
          ("gui-win32-x86_64" #:platform "win32\\x86_64")
          ("gui-x86_64-linux-natipkg" #:platform "x86_64-linux-natipkg")
          "at-exp-lib"
          "rackunit-lib"))
        (dependency-names
         .
         ("srfi-lite-lib"
          "data-lib"
          "icons"
          "base"
          "syntax-color-lib"
          "draw-lib"
          "snip-lib"
          "wxme-lib"
          "pict-lib"
          "scheme-lib"
          "scribble-lib"
          "string-constants-lib"
          "option-contract-lib"
          "2d-lib"
          "compatibility-lib"
          "tex-table"
          "gui-i386-macosx"
          "gui-x86_64-macosx"
          "gui-ppc-macosx"
          "gui-win32-i386"
          "gui-win32-x86_64"
          "gui-x86_64-linux-natipkg"
          "at-exp-lib"
          "rackunit-lib"))
        (description . "mflatt@racket-lang.org robby@racket-lang.org")
        (modules . ())
        (name . "gui-lib")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/gui-lib.zip")
        (tags . ())))
 ("gui-pkg-manager"
  .
  #hash((author . "mflatt@racket-lang.org robby@racket-lang.org")
        (authors . ("mflatt@racket-lang.org" "robby@racket-lang.org"))
        (build
         .
         #hash((conflicts-log . #f)
               (dep-failure-log . #f)
               (docs . ())
               (failure-log . #f)
               (min-failure-log . #f)
               (success-log . "server/built/install/gui-pkg-manager.txt")
               (test-failure-log . #f)
               (test-success-log
                .
                "server/built/test-success/gui-pkg-manager.txt")))
        (checksum . "eb80f658a4b35757687eb26fa48a16d57685ef82")
        (checksum-error . #f)
        (conflicts . ())
        (dependencies
         .
         ("gui-pkg-manager-lib" "gui-pkg-manager-doc" "gui-lib" "base"))
        (dependency-names
         .
         ("gui-pkg-manager-lib" "gui-pkg-manager-doc" "gui-lib" "base"))
        (description
         .
         "Graphical tool for managing Racket package installations")
        (implies . ("gui-pkg-manager-lib" "gui-pkg-manager-doc"))
        (last-checked . 1557339601)
        (last-edit . 1417659583)
        (last-updated . 1543477388)
        (modules . ((lib "pkg/gui/start.rkt")))
        (name . "gui-pkg-manager")
        (nix-sha256 . "1f59a35lw537h5gcg8mhif70mmhaa0kmfw4i6bwv4d15pz3zzrlf")
        (ring . 0)
        (search-terms
         .
         #hasheq((:build-success: . #t)
                 (:no-tag: . #t)
                 (author:mflatt@racket-lang.org . #t)
                 (author:robby@racket-lang.org . #t)
                 (ring:0 . #t)))
        (source
         .
         "git://github.com/racket/gui-pkg-manager/?path=gui-pkg-manager")
        (tags . ())
        (versions
         .
         #hash((default
                .
                #hasheq((checksum
                         .
                         "eb80f658a4b35757687eb26fa48a16d57685ef82")
                        (source
                         .
                         "git://github.com/racket/gui-pkg-manager/?path=gui-pkg-manager")
                        (source_url
                         .
                         "git://github.com/racket/gui-pkg-manager/?path=gui-pkg-manager")))
               ("5.3.4"
                .
                #hash((checksum . "9f098dddde7f217879070816090c1e8e74d49432")
                      (source
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")
                      (source_url
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")))
               ("5.3.5"
                .
                #hash((checksum . "9f098dddde7f217879070816090c1e8e74d49432")
                      (source
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")
                      (source_url
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")))
               ("5.3.6"
                .
                #hash((checksum . "9f098dddde7f217879070816090c1e8e74d49432")
                      (source
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")
                      (source_url
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")))))))
 ("gui-pkg-manager-doc"
  .
  #hash((author . "mflatt@racket-lang.org robby@racket-lang.org")
        (authors . ("mflatt@racket-lang.org" "robby@racket-lang.org"))
        (build
         .
         #hash((conflicts-log . #f)
               (dep-failure-log . #f)
               (docs
                .
                (("main"
                  "gui-pkg-manager"
                  "doc/gui-pkg-manager@gui-pkg-manager-doc/index.html")))
               (failure-log . #f)
               (min-failure-log . #f)
               (success-log . "server/built/install/gui-pkg-manager-doc.txt")
               (test-failure-log . #f)
               (test-success-log
                .
                "server/built/test-success/gui-pkg-manager-doc.txt")))
        (checksum . "eb80f658a4b35757687eb26fa48a16d57685ef82")
        (checksum-error . #f)
        (conflicts . ())
        (dependencies . ("base" "racket-doc" "scribble-lib"))
        (dependency-names . ("base" "racket-doc" "scribble-lib"))
        (description . "documentation part of \"gui-pkg-manager\"")
        (implies . ())
        (last-checked . 1557339601)
        (last-edit . 1417659583)
        (last-updated . 1543477389)
        (modules . ((lib "pkg/gui/scribblings/gui-pkg-manager.scrbl")))
        (name . "gui-pkg-manager-doc")
        (nix-sha256 . "1f59a35lw537h5gcg8mhif70mmhaa0kmfw4i6bwv4d15pz3zzrlf")
        (ring . 0)
        (search-terms
         .
         #hasheq((:build-success: . #t)
                 (:docs: . #t)
                 (:no-tag: . #t)
                 (author:mflatt@racket-lang.org . #t)
                 (author:robby@racket-lang.org . #t)
                 (ring:0 . #t)))
        (source
         .
         "git://github.com/racket/gui-pkg-manager/?path=gui-pkg-manager-doc")
        (tags . ())
        (versions
         .
         #hash((default
                .
                #hasheq((checksum
                         .
                         "eb80f658a4b35757687eb26fa48a16d57685ef82")
                        (source
                         .
                         "git://github.com/racket/gui-pkg-manager/?path=gui-pkg-manager-doc")
                        (source_url
                         .
                         "git://github.com/racket/gui-pkg-manager/?path=gui-pkg-manager-doc")))
               ("5.3.4"
                .
                #hash((checksum . "9f098dddde7f217879070816090c1e8e74d49432")
                      (source
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")
                      (source_url
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")))
               ("5.3.5"
                .
                #hash((checksum . "9f098dddde7f217879070816090c1e8e74d49432")
                      (source
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")
                      (source_url
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")))
               ("5.3.6"
                .
                #hash((checksum . "9f098dddde7f217879070816090c1e8e74d49432")
                      (source
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")
                      (source_url
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")))))))
 ("gui-pkg-manager-lib"
  .
  #hash((author . "mflatt@racket-lang.org robby@racket-lang.org")
        (checksum . "0eacf8f041e668439ea4ebaf1a5ac17a2d727374")
        (dependencies
         .
         ("base" "gui-lib" ("string-constants-lib" #:version "1.9")))
        (dependency-names . ("base" "gui-lib" "string-constants-lib"))
        (description . "mflatt@racket-lang.org robby@racket-lang.org")
        (modules . ())
        (name . "gui-pkg-manager-lib")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/gui-pkg-manager-lib.zip")
        (tags . ())))
 ("gui-ppc-macosx"
  .
  #hash((author . "mflatt@racket-lang.org")
        (checksum . "2358d8c63039e6e7a6f580ea03bebe146039a4de")
        (dependencies . ("base"))
        (dependency-names . ("base"))
        (description . "mflatt@racket-lang.org")
        (modules . ())
        (name . "gui-ppc-macosx")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/gui-ppc-macosx.zip")
        (tags . ())))
 ("gui-test"
  .
  #hash((author . "mflatt@racket-lang.org robby@racket-lang.org")
        (checksum . "147868107f64cafba1590a817dbaa4cb8e15251b")
        (dependencies
         .
         ("base"
          "racket-index"
          "scheme-lib"
          "draw-lib"
          "racket-test"
          "sgl"
          "snip-lib"
          "wxme-lib"
          "gui-lib"
          "rackunit-lib"
          "pconvert-lib"
          "compatibility-lib"
          "sandbox-lib"))
        (dependency-names
         .
         ("base"
          "racket-index"
          "scheme-lib"
          "draw-lib"
          "racket-test"
          "sgl"
          "snip-lib"
          "wxme-lib"
          "gui-lib"
          "rackunit-lib"
          "pconvert-lib"
          "compatibility-lib"
          "sandbox-lib"))
        (description . "mflatt@racket-lang.org robby@racket-lang.org")
        (modules . ())
        (name . "gui-test")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/gui-test.zip")
        (tags . ())))
 ("gui-widget-mixins"
  .
  #hasheq((author . "AlexHarsanyi@gmail.com")
          (authors . ("AlexHarsanyi@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "gui-widget-mixins"
                    "doc/gui-widget-mixins@gui-widget-mixins/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/gui-widget-mixins.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/gui-widget-mixins.txt")))
          (checksum . "ad59413e8d2a06c2685bc6285c022e7ccedad719")
          (checksum-error . #f)
          (conflicts . ())
          (date-added . 1551414475)
          (dependencies
           .
           ("base"
            "gui-lib"
            "scribble-lib"
            "racket-doc"
            "rackunit-lib"
            "gui-doc"))
          (dependency-names
           .
           ("base"
            "gui-lib"
            "scribble-lib"
            "racket-doc"
            "rackunit-lib"
            "gui-doc"))
          (description
           .
           "Tool tips, cue text and validation for text-field% GUI widgets in Racket ")
          (implies . ())
          (last-checked . 1557339602)
          (last-edit . 1552898814)
          (last-updated . 1553306654)
          (modules
           .
           ((lib "gui-widget-mixins/main.rkt")
            (lib "gui-widget-mixins/private/decorate-mixin.rkt")
            (lib "gui-widget-mixins/private/validate-mixin.rkt")
            (lib "gui-widget-mixins/scribblings/gui-widget-mixins.scrbl")
            (lib "gui-widget-mixins/private/tooltip-mixin.rkt")
            (lib "gui-widget-mixins/private/cue-mixin.rkt")))
          (name . "gui-widget-mixins")
          (nix-sha256
           .
           "0y1hk8nf94cgc35ry3z8x5w00vb0wq11q6brb83ryscvx4682r4g")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:AlexHarsanyi@gmail.com . #t)
                   (gui . #t)
                   (ring:2 . #t)))
          (source . "https://github.com/alex-hhh/gui-widget-mixins.git")
          (tags . ("gui"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "ad59413e8d2a06c2685bc6285c022e7ccedad719")
                          (source
                           .
                           "https://github.com/alex-hhh/gui-widget-mixins.git")
                          (source_url
                           .
                           "https://github.com/alex-hhh/gui-widget-mixins.git")))))))
 ("gui-win32-i386"
  .
  #hash((author . "mflatt@racket-lang.org")
        (checksum . "d9f4be641d58756e8a3a11db1ef829f945224a9d")
        (dependencies . ("base"))
        (dependency-names . ("base"))
        (description . "mflatt@racket-lang.org")
        (modules . ())
        (name . "gui-win32-i386")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/gui-win32-i386.zip")
        (tags . ())))
 ("gui-win32-x86_64"
  .
  #hash((author . "mflatt@racket-lang.org")
        (checksum . "dc4f0e5183fff6f356d0e9e058ae534ea8d66141")
        (dependencies . ("base"))
        (dependency-names . ("base"))
        (description . "mflatt@racket-lang.org")
        (modules . ())
        (name . "gui-win32-x86_64")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/gui-win32-x86_64.zip")
        (tags . ())))
 ("gui-x86_64-linux-natipkg"
  .
  #hash((author . "mflatt@racket-lang.org")
        (checksum . "e098152d1a577abfe9f2df0d22996e3d62d93f9f")
        (dependencies . ("base"))
        (dependency-names . ("base"))
        (description . "mflatt@racket-lang.org")
        (modules . ())
        (name . "gui-x86_64-linux-natipkg")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/gui-x86_64-linux-natipkg.zip")
        (tags . ())))
 ("gui-x86_64-macosx"
  .
  #hash((author . "mflatt@racket-lang.org")
        (checksum . "3edd995ece02fc106ac90d33deb774d0818eda73")
        (dependencies . ("base"))
        (dependency-names . ("base"))
        (description . "mflatt@racket-lang.org")
        (modules . ())
        (name . "gui-x86_64-macosx")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/gui-x86_64-macosx.zip")
        (tags . ())))
 ("hackett"
  .
  #hasheq((author . "lexi.lambda@gmail.com")
          (authors . ("lexi.lambda@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/hackett.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/hackett.txt")))
          (checksum . "f5a080ebcf9e2ca1fbf5be98517f4991ec2405ea")
          (checksum-error . #f)
          (conflicts . ())
          (date-added . 1548924769)
          (dependencies . ("hackett-doc" "hackett-lib"))
          (dependency-names . ("hackett-doc" "hackett-lib"))
          (description . "")
          (implies . ("hackett-doc" "hackett-lib"))
          (last-checked . 1557339604)
          (last-edit . 1548924769)
          (last-updated . 1538608688)
          (modules . ())
          (name . "hackett")
          (nix-sha256
           .
           "0rfwrm6ddrwzc1j4x8sd1ld5lmnmj9qg34mhknmfi1jn28ya2zib")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:no-desc: . #t)
                   (author:lexi.lambda@gmail.com . #t)
                   (lang . #t)
                   (language . #t)
                   (ring:1 . #t)))
          (source
           .
           "https://github.com/lexi-lambda/hackett.git?path=hackett#f5a080ebcf9e2ca1fbf5be98517f4991ec2405ea")
          (tags . ("lang" "language"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "8e4e0e904ac37df58b8c8ef29c0f94ad4151246f")
                          (source
                           .
                           "https://github.com/lexi-lambda/hackett.git?path=hackett")
                          (source_url
                           .
                           "https://github.com/lexi-lambda/hackett.git?path=hackett")))
                 ("6.12"
                  .
                  #hasheq((checksum
                           .
                           "bca810ae7aea1b11e1f9b361d509c25a70d9733b")
                          (source
                           .
                           "https://github.com/lexi-lambda/hackett.git?path=hackett#bca810ae7aea1b11e1f9b361d509c25a70d9733b")
                          (source_url
                           .
                           "https://github.com/lexi-lambda/hackett.git?path=hackett#bca810ae7aea1b11e1f9b361d509c25a70d9733b")))
                 ("7.0"
                  .
                  #hasheq((checksum
                           .
                           "f5a080ebcf9e2ca1fbf5be98517f4991ec2405ea")
                          (source
                           .
                           "https://github.com/lexi-lambda/hackett.git?path=hackett#f5a080ebcf9e2ca1fbf5be98517f4991ec2405ea")
                          (source_url
                           .
                           "https://github.com/lexi-lambda/hackett.git?path=hackett#f5a080ebcf9e2ca1fbf5be98517f4991ec2405ea")))
                 ("7.1"
                  .
                  #hasheq((checksum
                           .
                           "f5a080ebcf9e2ca1fbf5be98517f4991ec2405ea")
                          (source
                           .
                           "https://github.com/lexi-lambda/hackett.git?path=hackett#f5a080ebcf9e2ca1fbf5be98517f4991ec2405ea")
                          (source_url
                           .
                           "https://github.com/lexi-lambda/hackett.git?path=hackett#f5a080ebcf9e2ca1fbf5be98517f4991ec2405ea")))
                 ("7.2"
                  .
                  #hasheq((checksum
                           .
                           "f5a080ebcf9e2ca1fbf5be98517f4991ec2405ea")
                          (source
                           .
                           "https://github.com/lexi-lambda/hackett.git?path=hackett#f5a080ebcf9e2ca1fbf5be98517f4991ec2405ea")
                          (source_url
                           .
                           "https://github.com/lexi-lambda/hackett.git?path=hackett#f5a080ebcf9e2ca1fbf5be98517f4991ec2405ea")))))))
 ("hackett-demo"
  .
  #hasheq((author . "lexi.lambda@gmail.com")
          (authors . ("lexi.lambda@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/hackett-demo.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/hackett-demo.txt")))
          (checksum . "f5a080ebcf9e2ca1fbf5be98517f4991ec2405ea")
          (checksum-error . #f)
          (conflicts . ())
          (date-added . 1548924807)
          (dependencies
           .
           ("base"
            "draw-lib"
            "hackett-lib"
            "htdp-lib"
            "pict-lib"
            "threading-lib"
            "web-server-lib"))
          (dependency-names
           .
           ("base"
            "draw-lib"
            "hackett-lib"
            "htdp-lib"
            "pict-lib"
            "threading-lib"
            "web-server-lib"))
          (description . "")
          (implies . ())
          (last-checked . 1557339605)
          (last-edit . 1548924807)
          (last-updated . 1538608689)
          (modules
           .
           ((lib "hackett/demo/web-server.rkt")
            (lib "hackett/demo/pict.rkt")
            (lib "hackett/demo/pict/universe.rkt")))
          (name . "hackett-demo")
          (nix-sha256
           .
           "0rfwrm6ddrwzc1j4x8sd1ld5lmnmj9qg34mhknmfi1jn28ya2zib")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:no-desc: . #t)
                   (:no-tag: . #t)
                   (author:lexi.lambda@gmail.com . #t)
                   (ring:1 . #t)))
          (source
           .
           "https://github.com/lexi-lambda/hackett.git?path=hackett-demo#f5a080ebcf9e2ca1fbf5be98517f4991ec2405ea")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "8e4e0e904ac37df58b8c8ef29c0f94ad4151246f")
                          (source
                           .
                           "https://github.com/lexi-lambda/hackett.git?path=hackett-demo")
                          (source_url
                           .
                           "https://github.com/lexi-lambda/hackett.git?path=hackett-demo")))
                 ("6.12"
                  .
                  #hasheq((checksum
                           .
                           "bca810ae7aea1b11e1f9b361d509c25a70d9733b")
                          (source
                           .
                           "https://github.com/lexi-lambda/hackett.git?path=hackett-demo#bca810ae7aea1b11e1f9b361d509c25a70d9733b")
                          (source_url
                           .
                           "https://github.com/lexi-lambda/hackett.git?path=hackett-demo#bca810ae7aea1b11e1f9b361d509c25a70d9733b")))
                 ("7.0"
                  .
                  #hasheq((checksum
                           .
                           "f5a080ebcf9e2ca1fbf5be98517f4991ec2405ea")
                          (source
                           .
                           "https://github.com/lexi-lambda/hackett.git?path=hackett-demo#f5a080ebcf9e2ca1fbf5be98517f4991ec2405ea")
                          (source_url
                           .
                           "https://github.com/lexi-lambda/hackett.git?path=hackett-demo#f5a080ebcf9e2ca1fbf5be98517f4991ec2405ea")))
                 ("7.1"
                  .
                  #hasheq((checksum
                           .
                           "f5a080ebcf9e2ca1fbf5be98517f4991ec2405ea")
                          (source
                           .
                           "https://github.com/lexi-lambda/hackett.git?path=hackett-demo#f5a080ebcf9e2ca1fbf5be98517f4991ec2405ea")
                          (source_url
                           .
                           "https://github.com/lexi-lambda/hackett.git?path=hackett-demo#f5a080ebcf9e2ca1fbf5be98517f4991ec2405ea")))
                 ("7.2"
                  .
                  #hasheq((checksum
                           .
                           "f5a080ebcf9e2ca1fbf5be98517f4991ec2405ea")
                          (source
                           .
                           "https://github.com/lexi-lambda/hackett.git?path=hackett-demo#f5a080ebcf9e2ca1fbf5be98517f4991ec2405ea")
                          (source_url
                           .
                           "https://github.com/lexi-lambda/hackett.git?path=hackett-demo#f5a080ebcf9e2ca1fbf5be98517f4991ec2405ea")))))))
 ("hackett-doc"
  .
  #hasheq((author . "lexi.lambda@gmail.com")
          (authors . ("lexi.lambda@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "hackett" "doc/hackett@hackett-doc/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/hackett-doc.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/hackett-doc.txt")))
          (checksum . "f5a080ebcf9e2ca1fbf5be98517f4991ec2405ea")
          (checksum-error . #f)
          (conflicts . ())
          (date-added . 1548924821)
          (dependencies
           .
           ("base"
            "hackett-lib"
            ("scribble-lib" #:version "1.16")
            "at-exp-lib"
            "racket-doc"))
          (dependency-names
           .
           ("base" "hackett-lib" "scribble-lib" "at-exp-lib" "racket-doc"))
          (description . "")
          (implies . ())
          (last-checked . 1557339605)
          (last-edit . 1548924821)
          (last-updated . 1538608690)
          (modules
           .
           ((lib "scribblings/hackett/private/util.rkt")
            (lib "scribblings/hackett/guide.scrbl")
            (lib "scribble/manual/hackett.rkt")
            (lib "scribblings/hackett/reference.scrbl")
            (lib "scribblings/hackett/main.scrbl")
            (lib "scribble/manual/hackett/private/manual-bind.rkt")))
          (name . "hackett-doc")
          (nix-sha256
           .
           "0rfwrm6ddrwzc1j4x8sd1ld5lmnmj9qg34mhknmfi1jn28ya2zib")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (:no-desc: . #t)
                   (:no-tag: . #t)
                   (author:lexi.lambda@gmail.com . #t)
                   (ring:1 . #t)))
          (source
           .
           "https://github.com/lexi-lambda/hackett.git?path=hackett-doc#f5a080ebcf9e2ca1fbf5be98517f4991ec2405ea")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "8e4e0e904ac37df58b8c8ef29c0f94ad4151246f")
                          (source
                           .
                           "https://github.com/lexi-lambda/hackett.git?path=hackett-doc")
                          (source_url
                           .
                           "https://github.com/lexi-lambda/hackett.git?path=hackett-doc")))
                 ("6.12"
                  .
                  #hasheq((checksum
                           .
                           "bca810ae7aea1b11e1f9b361d509c25a70d9733b")
                          (source
                           .
                           "https://github.com/lexi-lambda/hackett.git?path=hackett-doc#bca810ae7aea1b11e1f9b361d509c25a70d9733b")
                          (source_url
                           .
                           "https://github.com/lexi-lambda/hackett.git?path=hackett-doc#bca810ae7aea1b11e1f9b361d509c25a70d9733b")))
                 ("7.0"
                  .
                  #hasheq((checksum
                           .
                           "f5a080ebcf9e2ca1fbf5be98517f4991ec2405ea")
                          (source
                           .
                           "https://github.com/lexi-lambda/hackett.git?path=hackett-doc#f5a080ebcf9e2ca1fbf5be98517f4991ec2405ea")
                          (source_url
                           .
                           "https://github.com/lexi-lambda/hackett.git?path=hackett-doc#f5a080ebcf9e2ca1fbf5be98517f4991ec2405ea")))
                 ("7.1"
                  .
                  #hasheq((checksum
                           .
                           "f5a080ebcf9e2ca1fbf5be98517f4991ec2405ea")
                          (source
                           .
                           "https://github.com/lexi-lambda/hackett.git?path=hackett-doc#f5a080ebcf9e2ca1fbf5be98517f4991ec2405ea")
                          (source_url
                           .
                           "https://github.com/lexi-lambda/hackett.git?path=hackett-doc#f5a080ebcf9e2ca1fbf5be98517f4991ec2405ea")))
                 ("7.2"
                  .
                  #hasheq((checksum
                           .
                           "f5a080ebcf9e2ca1fbf5be98517f4991ec2405ea")
                          (source
                           .
                           "https://github.com/lexi-lambda/hackett.git?path=hackett-doc#f5a080ebcf9e2ca1fbf5be98517f4991ec2405ea")
                          (source_url
                           .
                           "https://github.com/lexi-lambda/hackett.git?path=hackett-doc#f5a080ebcf9e2ca1fbf5be98517f4991ec2405ea")))))))
 ("hackett-lib"
  .
  #hasheq((author . "lexi.lambda@gmail.com")
          (authors . ("lexi.lambda@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/hackett-lib.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/hackett-lib.txt")))
          (checksum . "f5a080ebcf9e2ca1fbf5be98517f4991ec2405ea")
          (checksum-error . #f)
          (conflicts . ())
          (date-added . 1548924837)
          (dependencies
           .
           (("base" #:version "7.0.0.2")
            "curly-fn-lib"
            "data-lib"
            "syntax-classes-lib"
            "threading-lib"))
          (dependency-names
           .
           ("base"
            "curly-fn-lib"
            "data-lib"
            "syntax-classes-lib"
            "threading-lib"))
          (description . "")
          (implies . ())
          (last-checked . 1557339605)
          (last-edit . 1548924837)
          (last-updated . 1538608690)
          (modules
           .
           ((lib "hackett/private/pattern-alias.rkt")
            (lib "hackett/private/type-reqprov.rkt")
            (lib "hackett/private/util/cond-expand.rkt")
            (lib "hackett/private/util/contract.rkt")
            (lib "hackett/private/prim/type.rkt")
            (lib "hackett/private/provide.rkt")
            (lib "hackett/private/prim/base.rkt")
            (lib "hackett/private/prim/type-provide.rkt")
            (lib "hackett/private/adt.rkt")
            (lib "hackett/private/deferred-transformer.rkt")
            (lib "hackett/private/base.rkt")
            (lib "hackett/private/reader.rkt")
            (lib "hackett/monad/error.rkt")
            (lib "hackett/monad/base.rkt")
            (lib "hackett/data/either.rkt")
            (lib "hackett/private/class.rkt")
            (lib "hackett/private/util/stx.rkt")
            (lib "hackett/todo.rkt")
            (lib "hackett/private/util/require.rkt")
            (lib "hackett/main.rkt")
            (lib "hackett/private/kernel.rkt")
            (lib "hackett/private/typeclass.rkt")
            (lib "hackett/monad/reader.rkt")
            (lib "hackett/private/expand+elaborate.rkt")
            (lib "hackett/private/type-alias.rkt")
            (lib "hackett/prelude.rkt")
            (lib "hackett/base.rkt")
            (lib "hackett/data/identity.rkt")
            (lib "hackett/private/toplevel.rkt")
            (lib "hackett/private/prop-case-pattern-expander.rkt")
            (lib "hackett/private/type-language.rkt")
            (lib "hackett/private/infix.rkt")
            (lib "hackett/private/prim/op.rkt")
            (lib "hackett/monad/trans.rkt")
            (lib "hackett/private/prim.rkt")
            (lib "hackett/monad/trans/error.rkt")
            (lib "hackett/private/util/list.rkt")
            (lib "hackett/private/typecheck.rkt")
            (lib "hackett/monad/trans/signatures.rkt")
            (lib "hackett/data/maybe.rkt")
            (lib "hackett/data/list.rkt")
            (lib "hackett/monad/trans/reader.rkt")))
          (name . "hackett-lib")
          (nix-sha256
           .
           "0rfwrm6ddrwzc1j4x8sd1ld5lmnmj9qg34mhknmfi1jn28ya2zib")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:no-desc: . #t)
                   (:no-tag: . #t)
                   (author:lexi.lambda@gmail.com . #t)
                   (ring:1 . #t)))
          (source
           .
           "https://github.com/lexi-lambda/hackett.git?path=hackett-lib#f5a080ebcf9e2ca1fbf5be98517f4991ec2405ea")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "8e4e0e904ac37df58b8c8ef29c0f94ad4151246f")
                          (source
                           .
                           "https://github.com/lexi-lambda/hackett.git?path=hackett-lib")
                          (source_url
                           .
                           "https://github.com/lexi-lambda/hackett.git?path=hackett-lib")))
                 ("6.12"
                  .
                  #hasheq((checksum
                           .
                           "bca810ae7aea1b11e1f9b361d509c25a70d9733b")
                          (source
                           .
                           "https://github.com/lexi-lambda/hackett.git?path=hackett-lib#bca810ae7aea1b11e1f9b361d509c25a70d9733b")
                          (source_url
                           .
                           "https://github.com/lexi-lambda/hackett.git?path=hackett-lib#bca810ae7aea1b11e1f9b361d509c25a70d9733b")))
                 ("7.0"
                  .
                  #hasheq((checksum
                           .
                           "f5a080ebcf9e2ca1fbf5be98517f4991ec2405ea")
                          (source
                           .
                           "https://github.com/lexi-lambda/hackett.git?path=hackett-lib#f5a080ebcf9e2ca1fbf5be98517f4991ec2405ea")
                          (source_url
                           .
                           "https://github.com/lexi-lambda/hackett.git?path=hackett-lib#f5a080ebcf9e2ca1fbf5be98517f4991ec2405ea")))
                 ("7.1"
                  .
                  #hasheq((checksum
                           .
                           "f5a080ebcf9e2ca1fbf5be98517f4991ec2405ea")
                          (source
                           .
                           "https://github.com/lexi-lambda/hackett.git?path=hackett-lib#f5a080ebcf9e2ca1fbf5be98517f4991ec2405ea")
                          (source_url
                           .
                           "https://github.com/lexi-lambda/hackett.git?path=hackett-lib#f5a080ebcf9e2ca1fbf5be98517f4991ec2405ea")))
                 ("7.2"
                  .
                  #hasheq((checksum
                           .
                           "f5a080ebcf9e2ca1fbf5be98517f4991ec2405ea")
                          (source
                           .
                           "https://github.com/lexi-lambda/hackett.git?path=hackett-lib#f5a080ebcf9e2ca1fbf5be98517f4991ec2405ea")
                          (source_url
                           .
                           "https://github.com/lexi-lambda/hackett.git?path=hackett-lib#f5a080ebcf9e2ca1fbf5be98517f4991ec2405ea")))))))
 ("hackett-test"
  .
  #hasheq((author . "lexi.lambda@gmail.com")
          (authors . ("lexi.lambda@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/hackett-test.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/hackett-test.txt")))
          (checksum . "f5a080ebcf9e2ca1fbf5be98517f4991ec2405ea")
          (checksum-error . #f)
          (conflicts . ())
          (date-added . 1548924852)
          (dependencies
           .
           ("base"
            "hackett-lib"
            "rackunit-lib"
            "sandbox-lib"
            "testing-util-lib"))
          (dependency-names
           .
           ("base"
            "hackett-lib"
            "rackunit-lib"
            "sandbox-lib"
            "testing-util-lib"))
          (description . "")
          (implies . ())
          (last-checked . 1557339606)
          (last-edit . 1548924852)
          (last-updated . 1538608691)
          (modules
           .
           ((lib "tests/hackett/integration/int-pattern.rkt")
            (lib "tests/hackett/integration/fundeps-arithmetic.rkt")
            (lib "tests/hackett/integration/top-level-recursive-def.rkt")
            (lib "hackett/private/test.rkt")
            (lib "tests/hackett/integration/generalize.rkt")
            (lib "tests/hackett/integration/laar-lens.rkt")
            (lib "tests/hackett/integration/multi-param-typeclasses.rkt")
            (lib "tests/hackett/integration/variadic-list.rkt")
            (lib "tests/hackett/regression/github-issue-85.rkt")
            (lib "tests/hackett/regression/github-issue-46.rkt")
            (lib "tests/hackett/integration/pattern-alias.rkt")
            (lib "tests/hackett/integration/str-pattern.rkt")
            (lib "tests/hackett/typecheck.rkt")
            (lib "tests/hackett/regression/github-issue-36.rkt")
            (lib "tests/hackett/regression/github-issue-60.rkt")
            (lib "tests/hackett/integration/type-alias.rkt")
            (lib
             "tests/hackett/integration/typeclass-instance-context-reduction.rkt")
            (lib "tests/hackett/integration/scoped-type-variables.rkt")
            (lib "tests/hackett/regression/lazy-case.rkt")
            (lib "tests/hackett/integration/pattern-app.rkt")
            (lib
             "tests/hackett/integration/recursive-unannotated-definition.rkt")
            (lib "tests/hackett/regression/github-issue-63.rkt")))
          (name . "hackett-test")
          (nix-sha256
           .
           "0rfwrm6ddrwzc1j4x8sd1ld5lmnmj9qg34mhknmfi1jn28ya2zib")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:no-desc: . #t)
                   (:no-tag: . #t)
                   (author:lexi.lambda@gmail.com . #t)
                   (ring:1 . #t)))
          (source
           .
           "https://github.com/lexi-lambda/hackett.git?path=hackett-test#f5a080ebcf9e2ca1fbf5be98517f4991ec2405ea")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "8e4e0e904ac37df58b8c8ef29c0f94ad4151246f")
                          (source
                           .
                           "https://github.com/lexi-lambda/hackett.git?path=hackett-test")
                          (source_url
                           .
                           "https://github.com/lexi-lambda/hackett.git?path=hackett-test")))
                 ("6.12"
                  .
                  #hasheq((checksum
                           .
                           "bca810ae7aea1b11e1f9b361d509c25a70d9733b")
                          (source
                           .
                           "https://github.com/lexi-lambda/hackett.git?path=hackett-test#bca810ae7aea1b11e1f9b361d509c25a70d9733b")
                          (source_url
                           .
                           "https://github.com/lexi-lambda/hackett.git?path=hackett-test#bca810ae7aea1b11e1f9b361d509c25a70d9733b")))
                 ("7.0"
                  .
                  #hasheq((checksum
                           .
                           "f5a080ebcf9e2ca1fbf5be98517f4991ec2405ea")
                          (source
                           .
                           "https://github.com/lexi-lambda/hackett.git?path=hackett-test#f5a080ebcf9e2ca1fbf5be98517f4991ec2405ea")
                          (source_url
                           .
                           "https://github.com/lexi-lambda/hackett.git?path=hackett-test#f5a080ebcf9e2ca1fbf5be98517f4991ec2405ea")))
                 ("7.1"
                  .
                  #hasheq((checksum
                           .
                           "f5a080ebcf9e2ca1fbf5be98517f4991ec2405ea")
                          (source
                           .
                           "https://github.com/lexi-lambda/hackett.git?path=hackett-test#f5a080ebcf9e2ca1fbf5be98517f4991ec2405ea")
                          (source_url
                           .
                           "https://github.com/lexi-lambda/hackett.git?path=hackett-test#f5a080ebcf9e2ca1fbf5be98517f4991ec2405ea")))
                 ("7.2"
                  .
                  #hasheq((checksum
                           .
                           "f5a080ebcf9e2ca1fbf5be98517f4991ec2405ea")
                          (source
                           .
                           "https://github.com/lexi-lambda/hackett.git?path=hackett-test#f5a080ebcf9e2ca1fbf5be98517f4991ec2405ea")
                          (source_url
                           .
                           "https://github.com/lexi-lambda/hackett.git?path=hackett-test#f5a080ebcf9e2ca1fbf5be98517f4991ec2405ea")))))))
 ("hamt"
  .
  #hasheq((author . "zeppieri@gmail.com")
          (authors . ("zeppieri@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "hamt" "doc/hamt@hamt/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/hamt.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/hamt.txt")))
          (checksum . "561cb6a447e9766dcb8abf2c01b30b87d91135f5")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "r6rs-lib"
            "collections-lib"
            "racket-doc"
            "rackunit-lib"
            "scribble-lib"
            "collections-lib"))
          (dependency-names
           .
           ("base"
            "r6rs-lib"
            "collections-lib"
            "racket-doc"
            "rackunit-lib"
            "scribble-lib"
            "collections-lib"))
          (description . "Hash array mapped tries")
          (implies . ())
          (last-checked . 1557339606)
          (last-edit . 1380916167)
          (last-updated . 1502816110)
          (modules
           .
           ((lib "data/hamt/fast.rkt")
            (lib "tests/data/hamt/hamt.rkt")
            (lib "data/hamt.rkt")
            (lib "data/hamt/syntax.rkt")
            (lib "tests/data/hamt/perf.rkt")
            (lib "data/hamt/popcount.rkt")
            (lib "data/hamt/array.rkt")
            (lib "data/hamt/hamt.scrbl")))
          (name . "hamt")
          (nix-sha256
           .
           "02b1iaddimqyl58kq4l5dwnyqsgkzbfy5wg4yiky13k63ajw5gwi")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (:no-tag: . #t)
                   (author:zeppieri@gmail.com . #t)
                   (ring:1 . #t)))
          (source . "github://github.com/97jaz/hamt/master")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "561cb6a447e9766dcb8abf2c01b30b87d91135f5")
                          (source . "github://github.com/97jaz/hamt/master")
                          (source_url
                           .
                           "http://github.com/97jaz/hamt/tree/master")))))))
 ("handin"
  .
  #hasheq((author . "mflatt@cs.utah.edu")
          (authors . ("mflatt@cs.utah.edu"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "handin-server"
                    "doc/handin-server@handin/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/handin.txt")
                 (test-failure-log . "server/built/test-fail/handin.txt")
                 (test-success-log . #f)))
          (checksum . "233b17e820bdd9b859f551bf4714204718d04306")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "compatibility-lib"
            "drracket"
            "drracket-plugin-lib"
            "gui-lib"
            "htdp-lib"
            "net-lib"
            "pconvert-lib"
            "sandbox-lib"
            "rackunit-lib"
            "web-server-lib"
            "gui-doc"
            "racket-doc"
            "scribble-lib"))
          (dependency-names
           .
           ("base"
            "compatibility-lib"
            "drracket"
            "drracket-plugin-lib"
            "gui-lib"
            "htdp-lib"
            "net-lib"
            "pconvert-lib"
            "sandbox-lib"
            "rackunit-lib"
            "web-server-lib"
            "gui-doc"
            "racket-doc"
            "scribble-lib"))
          (description . "Handin server and client template")
          (implies . ())
          (last-checked . 1557339606)
          (last-edit . 1365690182)
          (last-updated . 1533350622)
          (modules
           .
           ((lib "handin-server/scribblings/hook-dummy.rkt")
            (lib "handin-server/utils.rkt")
            (lib "handin-server/scribblings/multifile.scrbl")
            (lib "handin-server/private/logger.rkt")
            (lib "handin-server/private/config.rkt")
            (lib "handin-server/scribblings/handin-server.scrbl")
            (lib "handin-server/scribblings/wheres-the-collection.scrbl")
            (lib "handin-server/web-status-server.rkt")
            (lib "handin-server/scribblings/other-utils.scrbl")
            (lib "handin-client/updater.rkt")
            (lib "handin-server/private/md5.rkt")
            (lib "handin-client/handin-multi.rkt")
            (lib "handin-server/scribblings/client-customization.scrbl")
            (lib "handin-server/scribblings/server-setup.scrbl")
            (lib "handin-client/client.rkt")
            (lib "handin-server/scribblings/utils.scrbl")
            (lib "handin-server/private/run-status.rkt")
            (lib "handin-server/checker.rkt")
            (lib "handin-server/overridden-collects/teachpack/htdp/guess.rkt")
            (lib "handin-server/scribblings/common.rkt")
            (lib "handin-server/sandbox.rkt")
            (lib "handin-server/scribblings/updater.scrbl")
            (lib "handin-server/private/lock.rkt")
            (lib "handin-server/run-servlet.rkt")
            (lib "handin-server/private/hooker.rkt")
            (lib "handin-server/main.rkt")
            (lib
             "handin-server/overridden-collects/teachpack/htdp/master.rkt")
            (lib "handin-client/this-collection.rkt")
            (lib "handin-client/client-gui.rkt")
            (lib "handin-server/scribblings/grading-utils.scrbl")
            (lib "handin-server/scribblings/checker-utils.scrbl")
            (lib "handin-server/scribblings/quick-start.scrbl")
            (lib "handin-server/private/reloadable.rkt")
            (lib "handin-server/scribblings/server-client.scrbl")
            (lib "handin-server/grading-utils.rkt")
            (lib "handin-server/scribblings/sandbox.scrbl")
            (lib "handin-server/scribblings/checker.scrbl")))
          (name . "handin")
          (nix-sha256
           .
           "1n46sj9wxq22gqbn1jd3q4pjhf3vmdxix5lji2h5zffa0rmakyda")
          (ring . 0)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (:no-tag: . #t)
                   (author:mflatt@cs.utah.edu . #t)
                   (ring:0 . #t)))
          (source . "github://github.com/plt/handin/master")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "233b17e820bdd9b859f551bf4714204718d04306")
                          (source . "github://github.com/plt/handin/master")
                          (source_url
                           .
                           "http://github.com/plt/handin/tree/master")))
                 ("5.3.5"
                  .
                  #hasheq((checksum
                           .
                           "3c31daccf0f61bb06aa65e36d72acc0ef2f453da")
                          (source
                           .
                           "github://github.com/plt/handin/for-v5.3.6")
                          (source_url
                           .
                           "http://github.com/plt/handin/tree/for-v5.3.6")))
                 ("5.3.6"
                  .
                  #hasheq((checksum
                           .
                           "3c31daccf0f61bb06aa65e36d72acc0ef2f453da")
                          (source
                           .
                           "github://github.com/plt/handin/for-v5.3.6")
                          (source_url
                           .
                           "http://github.com/plt/handin/tree/for-v5.3.6")))))))
 ("handy"
  .
  #hasheq((author . "david.storrs@gmail.com")
          (authors . ("david.storrs@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . "server/built/fail/handy.txt")
                 (min-failure-log . #f)
                 (success-log . #f)
                 (test-failure-log . #f)
                 (test-success-log . #f)))
          (checksum . "ebb093a17d6d75a6447f04b4a53e84069b70d24b")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("html-parsing"
            "base"
            "db-lib"
            "rackunit-lib"
            "sxml"
            "at-exp-lib"))
          (dependency-names
           .
           ("html-parsing"
            "base"
            "db-lib"
            "rackunit-lib"
            "sxml"
            "at-exp-lib"))
          (description
           .
           "Utility functions that are missing from Racket -- e.g. 'say' (variadic displayln), 'multi-partition' (partition into more than two lists), better exception creation / trapping, database management, etc")
          (implies . ())
          (last-checked . 1557339606)
          (last-edit . 1517612022)
          (last-updated . 1554844807)
          (modules
           .
           ((lib "handy/sql.rkt")
            (lib "handy/test-more.rkt")
            (lib "handy/hash.rkt")
            (lib "handy/db.rkt")
            (lib "handy/deprecated/list-utils.rkt")
            (lib "handy/main.rkt")
            (lib "handy/list-utils.rkt")
            (lib "handy/edgar.rkt")
            (lib "handy/net.rkt")
            (lib "handy/json.rkt")
            (lib "handy/try.rkt")
            (lib "handy/fsmonitor.rkt")
            (lib "handy/web.rkt")
            (lib "handy/struct.rkt")
            (lib "handy/utils.rkt")
            (lib "handy/thread.rkt")
            (lib "handy/HTML-TreeBuilder.rkt")
            (lib "handy/files/compression.rkt")
            (lib "handy/HTML-Element.rkt")
            (lib "handy/exceptions.rkt")))
          (name . "handy")
          (nix-sha256
           .
           "1k31qfmxrhdjvxsvdy5h91cw6mrrq99csfv1misi6ydivl7ha8s0")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-fail: . #t)
                   (author:david.storrs@gmail.com . #t)
                   (database . #t)
                   (exceptions . #t)
                   (ring:2 . #t)
                   (utility . #t)
                   (web . #t)))
          (source . "https://github.com/dstorrs/racket-dstorrs-libs.git")
          (tags . ("database" "exceptions" "utility" "web"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "ebb093a17d6d75a6447f04b4a53e84069b70d24b")
                          (source
                           .
                           "https://github.com/dstorrs/racket-dstorrs-libs.git")
                          (source_url
                           .
                           "https://github.com/dstorrs/racket-dstorrs-libs.git")))))))
 ("happy-names"
  .
  #hasheq((author . "stephen@thoughtstem.com")
          (authors . ("stephen@thoughtstem.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . "server/built/deps/happy-names.txt")
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/happy-names.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/happy-names.txt")))
          (checksum . "3a74d689059e77106318b751e65b113233008d19")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("memoize"))
          (dependency-names . ("memoize"))
          (description
           .
           "Simple generator for Heroku-like names (random adj + random noun)")
          (implies . ())
          (last-checked . 1557339606)
          (last-edit . 1529086137)
          (last-updated . 1529086137)
          (modules
           .
           ((lib "happy-names/combiners.rkt")
            (lib "happy-names/adjectives.rkt")
            (lib "happy-names/main.rkt")
            (lib "happy-names/nouns.rkt")))
          (name . "happy-names")
          (nix-sha256
           .
           "0idx2v1s4c5nag26vwcqzk5qlnk7zf6a73zk8g774fr9cki3cbvc")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-dep-fail: . #t)
                   (:build-success: . #t)
                   (:no-tag: . #t)
                   (author:stephen@thoughtstem.com . #t)
                   (ring:2 . #t)))
          (source . "https://github.com/thoughtstem/happy-names.git")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "3a74d689059e77106318b751e65b113233008d19")
                          (source
                           .
                           "https://github.com/thoughtstem/happy-names.git")
                          (source_url
                           .
                           "https://github.com/thoughtstem/happy-names.git")))))))
 ("hash-lambda"
  .
  #hasheq((author . "alexander@knauth.org")
          (authors . ("alexander@knauth.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "hash-lambda-toc"
                    "doc/hash-lambda-toc@hash-lambda/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/hash-lambda.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/hash-lambda.txt")))
          (checksum . "d65df820d1c16e4d2f8c6e1519f3a0ec838387c8")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "unstable-lib"
            "unstable-list-lib"
            "kw-utils"
            "mutable-match-lambda"
            "rackunit-lib"
            "at-exp-lib"
            "scribble-lib"
            "sandbox-lib"
            "racket-doc"))
          (dependency-names
           .
           ("base"
            "unstable-lib"
            "unstable-list-lib"
            "kw-utils"
            "mutable-match-lambda"
            "rackunit-lib"
            "at-exp-lib"
            "scribble-lib"
            "sandbox-lib"
            "racket-doc"))
          (description
           .
           "using hash-tables for rest-arguments that include keyword-arguments")
          (implies . ())
          (last-checked . 1557339607)
          (last-edit . 1397156000)
          (last-updated . 1502816111)
          (modules
           .
           ((lib "keyword-lambda/docs/keyword-lambda.scrbl")
            (lib "hash-lambda/docs/mutable-match-lambda.scrbl")
            (lib "keyword-lambda/docs/keyword-case-lambda.scrbl")
            (lib "keyword-lambda/keyword-lambda.rkt")
            (lib "keyword-lambda/keyword-apply-sort.rkt")
            (lib "hash-lambda/docs/hash-lambda-toc.scrbl")
            (lib "keyword-lambda/main.rkt")
            (lib "keyword-lambda/kw-apply.rkt")
            (lib "hash-lambda/mutable-match-lambda.rkt")
            (lib "hash-lambda/docs/hash-lambda.scrbl")
            (lib "hash-lambda/main.rkt")
            (lib "keyword-lambda/keyword-case-lambda.rkt")
            (lib "keyword-lambda/arity+keywords.rkt")
            (lib "hash-lambda/all.rkt")
            (lib "hash-lambda/prop-object-name.rkt")))
          (name . "hash-lambda")
          (nix-sha256
           .
           "14bcj5s62mfm8j8zjmzq8r9nk7caqnk7jaqjmn1096nkijl4028v")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:alexander@knauth.org . #t)
                   (deprecated . #t)
                   (keywords . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/AlexKnauth/hash-lambda")
          (tags . ("deprecated" "keywords"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "d65df820d1c16e4d2f8c6e1519f3a0ec838387c8")
                          (source . "git://github.com/AlexKnauth/hash-lambda")
                          (source_url
                           .
                           "http://github.com/AlexKnauth/hash-lambda/tree/master")))))))
 ("hdf5"
  .
  #hasheq((author . "petersamarin@gmail.com")
          (authors . ("petersamarin@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/hdf5.txt")
                 (test-failure-log . "server/built/test-fail/hdf5.txt")
                 (test-success-log . #f)))
          (checksum . "5836fc438ee36f94c80362b7da79b252a6429009")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "rackunit" "math"))
          (dependency-names . ("base" "rackunit" "math"))
          (description . "FFI bindings to the hdf5 library")
          (implies . ())
          (last-checked . 1557339607)
          (last-edit . 1524859998)
          (last-updated . 1544510595)
          (modules
           .
           ((lib "examples/hl-open.rkt")
            (lib "hdf5/unsafe.rkt")
            (lib "examples/h5ex_d_unlimgzip.rkt")
            (lib "examples/h5ex_t_commit.rkt")
            (lib "examples/getting-data-format.rkt")
            (lib "hdf5/unsafe/h5spublic.rkt")
            (lib "hdf5/unsafe/h5opublic.rkt")
            (lib "hdf5/unsafe/hdf5.rkt")
            (lib "hdf5/hl.rkt")
            (lib "hdf5/unsafe/h5mmpublic.rkt")
            (lib "examples/h5ex_g_traverse.rkt")
            (lib "examples/h5ex_t_vlen.rkt")
            (lib "examples/h5ex_t_enum.rkt")
            (lib "hdf5/hl/hdf5.rkt")
            (lib "hdf5/hl/utilities.rkt")
            (lib "hdf5/unsafe/h5dpublic.rkt")
            (lib "hdf5/unsafe/h5public.rkt")
            (lib "examples/h5ex_d_unlimadd.rkt")
            (lib "hdf5/unsafe/utilities.rkt")
            (lib "hdf5/unsafe/h5fdpublic.rkt")
            (lib "hdf5/unsafe/h5cpublic.rkt")
            (lib "examples/h5ex_t_cmpd.rkt")
            (lib "hdf5/unsafe/h5ppublic.rkt")
            (lib "hdf5/unsafe/h5tpublic.rkt")
            (lib "hdf5/unsafe/h5fpublic.rkt")
            (lib "hdf5/unsafe/h5acpublic.rkt")
            (lib "hdf5/unsafe/h5rpublic.rkt")
            (lib "examples/h5ex_t_array.rkt")
            (lib "hdf5/unsafe/h5gpublic.rkt")
            (lib "examples/h5ex_t_int.rkt")
            (lib "hdf5/unsafe/h5epublic.rkt")
            (lib "hdf5/unsafe/h5apublic.rkt")
            (lib "examples/h5ex_t_opaque.rkt")
            (lib "hdf5/unsafe/h5zpublic.rkt")
            (lib "hdf5/unsafe/h5lpublic.rkt")
            (lib "hdf5/unsafe/h5-utilities.rkt")
            (lib "hdf5/unsafe/h5epubgen.rkt")
            (lib "hdf5/hl/h5file.rkt")
            (lib "examples/h5ex_g_iterate.rkt")
            (lib "examples/h5ex_t_string.rkt")
            (lib "examples/h5ex_t_cpxcmpd.rkt")
            (lib "hdf5/unsafe/h5ipublic.rkt")))
          (name . "hdf5")
          (nix-sha256
           .
           "1kl44s3fhkyv5yf8ya69wx8yw905zskjv79k6sj97hjm8f9rls1h")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:petersamarin@gmail.com . #t)
                   (data . #t)
                   (ffi . #t)
                   (hdf5 . #t)
                   (ring:2 . #t)))
          (source . "https://github.com/oetr/racket-hdf5.git")
          (tags . ("data" "ffi" "hdf5"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "5836fc438ee36f94c80362b7da79b252a6429009")
                          (source . "https://github.com/oetr/racket-hdf5.git")
                          (source_url
                           .
                           "https://github.com/oetr/racket-hdf5.git")))))))
 ("herbie"
  .
  #hasheq((author . "me@pavpanchekha.com")
          (authors . ("me@pavpanchekha.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/herbie.txt")
                 (test-failure-log . "server/built/test-fail/herbie.txt")
                 (test-success-log . #f)))
          (checksum . "e26cdb8327c62adb02cbaae52bdd24dae3fab69e")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           (("base" #:version "6.3")
            "math-lib"
            "plot-lib"
            "profile-lib"
            "rackunit-lib"
            "web-server-lib"
            "rackunit-lib"))
          (dependency-names
           .
           ("base"
            "math-lib"
            "plot-lib"
            "profile-lib"
            "rackunit-lib"
            "web-server-lib"
            "rackunit-lib"))
          (description
           .
           "A tool for automatically improving the accuracy of floating point expressions")
          (implies . ())
          (last-checked . 1557339607)
          (last-edit . 1504172938)
          (last-updated . 1550808207)
          (modules
           .
           ((lib "herbie/formats/datafile.rkt")
            (lib "herbie/sandbox.rkt")
            (lib "herbie/core/matcher.rkt")
            (lib "herbie/core/localize.rkt")
            (lib "herbie/points.rkt")
            (lib "herbie/reports/fpcore.rkt")
            (lib "herbie/syntax/syntax.rkt")
            (lib "herbie/formats/test.rkt")
            (lib "herbie/core/reduce.rkt")
            (lib "herbie/errors.rkt")
            (lib "herbie/core/regimes.rkt")
            (lib "herbie/formats/c.rkt")
            (lib "herbie/reports/make-graph.rkt")
            (lib "herbie/reports/fpcore-common.rkt")
            (lib "herbie/type-check.rkt")
            (lib "herbie/old/data.rkt")
            (lib "herbie/herbie.rkt")
            (lib "herbie/old/herbie.rkt")
            (lib "herbie/multi-command-line.rkt")
            (lib "herbie/core/simplify.rkt")
            (lib "herbie/common.rkt")
            (lib "herbie/reports/common.rkt")
            (lib "herbie/function-definitions.rkt")
            (lib "herbie/reports/rerun.rkt")
            (lib "herbie/glue.rkt")
            (lib "herbie/bigcomplex.rkt")
            (lib "herbie/plot.rkt")
            (lib "herbie/web/common.rkt")
            (lib "herbie/old/util.rkt")
            (lib "herbie/core/egraph.rkt")
            (lib "herbie/improve.rkt")
            (lib "herbie/core/enode.rkt")
            (lib "herbie/programs.rkt")
            (lib "herbie/alternative.rkt")
            (lib "herbie/syntax/rules.rkt")
            (lib "herbie/web/tools.rkt")
            (lib "herbie/core/periodicity.rkt")
            (lib "herbie/reports/thread-pool.rkt")
            (lib "herbie/reports/run.rkt")
            (lib "herbie/shell.rkt")
            (lib "herbie/formats/tex.rkt")
            (lib "herbie/syntax-check.rkt")
            (lib "herbie/debug.rkt")
            (lib "herbie/reports/make-report.rkt")
            (lib "herbie/web/demo.rkt")
            (lib "herbie/range-analysis.rkt")
            (lib "herbie/config.rkt")
            (lib "herbie/core/taylor.rkt")
            (lib "herbie/reports/core2js.rkt")
            (lib "herbie/web/session.rkt")
            (lib "herbie/float.rkt")
            (lib "herbie/mainloop.rkt")
            (lib "herbie/core/alt-table.rkt")
            (lib "herbie/old/inout.rkt")
            (lib "herbie/core/ematch.rkt")
            (lib "herbie/web/viz.rkt")))
          (name . "herbie")
          (nix-sha256
           .
           "1sp3pk5p1vmx8cki0r6am9mrmmnfbl320k4bfpps43vgydf27vmb")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:me@pavpanchekha.com . #t)
                   (floating-point . #t)
                   (ring:1 . #t)
                   (synthesis . #t)))
          (source . "git://github.com/uwplse/herbie?path=src")
          (tags . ("floating-point" "synthesis"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "e26cdb8327c62adb02cbaae52bdd24dae3fab69e")
                          (source . "git://github.com/uwplse/herbie?path=src")
                          (source_url
                           .
                           "http://github.com/uwplse/herbie/tree/master?path=src")))))))
 ("heresy"
  .
  #hasheq((author . "jarcane@gmail.com")
          (authors . ("jarcane@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "heresy" "doc/heresy@heresy/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/heresy.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/heresy.txt")))
          (checksum . "693b31ed884e01624ae47c21e963b5fc443ebcbb")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "unstable-lib"
            "rackjure"
            "racket-doc"
            "rackunit-lib"
            "sandbox-lib"
            "scribble-lib"))
          (dependency-names
           .
           ("base"
            "unstable-lib"
            "rackjure"
            "racket-doc"
            "rackunit-lib"
            "sandbox-lib"
            "scribble-lib"))
          (description
           .
           "A functional Lisp dialect with BASIC-inspired syntax")
          (implies . ())
          (last-checked . 1557339607)
          (last-edit . 1420033563)
          (last-updated . 1525084624)
          (modules
           .
           ((lib "heresy/examples/do-action.rkt")
            (lib "heresy/examples/list-do.rkt")
            (lib "heresy/examples/cards.rkt")
            (lib "heresy/examples/cons-things.rkt")
            (lib "heresy/examples/brainfuck.rkt")
            (lib "heresy/examples/fizzbuzz.rkt")
            (lib "heresy/lib/identity.rkt")
            (lib "heresy/tests/infix-math.rkt")
            (lib "heresy/examples/99bottles.rkt")
            (lib "heresy/lib/monadology.rkt")
            (lib "heresy/tests/Y.rkt")
            (lib "heresy/examples/hole-test.rkt")
            (lib "heresy/examples/collatz.rkt")
            (lib "heresy/lib/maybe.rkt")
            (lib "heresy/lang/reader.rkt")
            (lib "heresy/lib/math.rkt")
            (lib "heresy/private/base.rkt")
            (lib "heresy/examples/option-type.rkt")
            (lib "heresy/docs/heresy.scrbl")
            (lib "heresy/private/io.rkt")
            (lib "heresy/lib/string.rkt")
            (lib "heresy/lib/pipes.rkt")
            (lib "heresy/lib/infix-math.rkt")
            (lib "heresy/lib/require-stuff.rkt")
            (lib "heresy/tests/app.rkt")
            (lib "heresy/lib/things.rkt")
            (lib "heresy/lib/list.rkt")
            (lib "heresy/lib/hole.rkt")
            (lib "heresy/examples/celebrate.rkt")
            (lib "heresy/examples/fact.rkt")
            (lib "heresy/examples/id-do.rkt")
            (lib "heresy/examples/pipeland.rkt")
            (lib "heresy/lib/theory.rkt")
            (lib "heresy/tests/things.rkt")
            (lib "heresy/main.rkt")
            (lib "heresy/private/random.rkt")))
          (name . "heresy")
          (nix-sha256
           .
           "117b4mbk0klxq8jj1594d92f015m50jl5qdxxj8r2i00nzfcr8f1")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:jarcane@gmail.com . #t)
                   (language . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/jarcane/heresy")
          (tags . ("language"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "693b31ed884e01624ae47c21e963b5fc443ebcbb")
                          (source . "git://github.com/jarcane/heresy")
                          (source_url
                           .
                           "http://github.com/jarcane/heresy/tree/master")))))))
 ("hidapi"
  .
  #hasheq((author . "jpathy@lazycons.xyz github@lazycons.xyz")
          (authors . ("jpathy@lazycons.xyz" "github@lazycons.xyz"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "hidapi" "doc/hidapi@hidapi/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/hidapi.txt")
                 (test-failure-log . "server/built/test-fail/hidapi.txt")
                 (test-success-log . #f)))
          (checksum . "91c5e5b8eb7380d3b6031d736e6d8fc9121a7cb0")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "scribble-lib" "racket-doc"))
          (dependency-names . ("base" "scribble-lib" "racket-doc"))
          (description . "Racket bindings to hidapi library.")
          (implies . ())
          (last-checked . 1557339607)
          (last-edit . 1534410224)
          (last-updated . 1508907677)
          (modules
           .
           ((lib "hidapi/main.rkt")
            (lib "hidapi/scribblings/hidapi.scrbl")
            (lib "hidapi/private/ffi.rkt")))
          (name . "hidapi")
          (nix-sha256
           .
           "0b310wydvw5kvjxmzd4r15ghhrbwn3hyqckbh25ys8ydjh6zwlpn")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:github@lazycons.xyz . #t)
                   (author:jpathy@lazycons.xyz . #t)
                   (ffi . #t)
                   (hid . #t)
                   (hidapi . #t)
                   (ring:2 . #t)
                   (usb . #t)))
          (source . "https://github.com/jpathy/hidapi.git")
          (tags . ("ffi" "hid" "hidapi" "usb"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "91c5e5b8eb7380d3b6031d736e6d8fc9121a7cb0")
                          (source . "https://github.com/jpathy/hidapi.git")
                          (source_url
                           .
                           "https://github.com/jpathy/hidapi.git")))))))
 ("hive-client"
  .
  #hasheq((author . "kalimehtar@mail.ru")
          (authors . ("kalimehtar@mail.ru"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/hive-client.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/hive-client.txt")))
          (checksum . "2f715e3a6eca475e4a003194e233479bb2edc8bc")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base" "scribble-lib" "hive-common" "gui-lib" "racket-doc"))
          (dependency-names
           .
           ("base" "scribble-lib" "hive-common" "gui-lib" "racket-doc"))
          (description
           .
           "Hive: client-server framework. This is client package.")
          (implies . ())
          (last-checked . 1557339607)
          (last-edit . 1466352183)
          (last-updated . 1556510520)
          (modules
           .
           ((lib "hive/client/string-constants.rkt")
            (lib "hive/client/defaults.rkt")
            (lib "hive/client/users.rkt")
            (lib "hive/client/commands.rkt")
            (lib "hive/client/string-constants-en.rkt")
            (lib "hive/client/string-constants-ru.rkt")
            (lib "hive/client.rkt")))
          (name . "hive-client")
          (nix-sha256
           .
           "1hrn1375f6zpb25dsbvkbwjr3wybb7lrq9kacyqqv8n2v0zgq0y9")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:kalimehtar@mail.ru . #t)
                   (client . #t)
                   (ipc . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/Kalimehtar/hive-client")
          (tags . ("client" "ipc"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "2f715e3a6eca475e4a003194e233479bb2edc8bc")
                          (source . "git://github.com/Kalimehtar/hive-client")
                          (source_url
                           .
                           "http://github.com/Kalimehtar/hive-client/tree/master")))))))
 ("hive-common"
  .
  #hasheq((author . "kalimehtar@mail.ru")
          (authors . ("kalimehtar@mail.ru"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "hive-common"
                    "doc/hive-common@hive-common/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/hive-common.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/hive-common.txt")))
          (checksum . "ed6e4740addaf74466a387200616137b5a9b05f4")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "scribble-lib" "thread-utils" "racket-doc"))
          (dependency-names
           .
           ("base" "scribble-lib" "thread-utils" "racket-doc"))
          (description
           .
           "Hive: client-server framework. This is library for both client and server.")
          (implies . ())
          (last-checked . 1557339607)
          (last-edit . 1466352121)
          (last-updated . 1532976231)
          (modules
           .
           ((lib "hive/common/read-write.rkt")
            (lib "hive/common/users.rkt")
            (lib "hive/common/serialize.rkt")
            (lib "hive/common/hive-common.scrbl")))
          (name . "hive-common")
          (nix-sha256
           .
           "0xw57r2rfi78aw1ksl218jvn5p3ncnq7iaaqq55vn48rckbbii36")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:kalimehtar@mail.ru . #t)
                   (ipc . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/Kalimehtar/hive-common")
          (tags . ("ipc"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "ed6e4740addaf74466a387200616137b5a9b05f4")
                          (source . "git://github.com/Kalimehtar/hive-common")
                          (source_url
                           .
                           "http://github.com/Kalimehtar/hive-common/tree/master")))))))
 ("hive-server"
  .
  #hasheq((author . "kalimehtar@mail.ru")
          (authors . ("kalimehtar@mail.ru"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/hive-server.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/hive-server.txt")))
          (checksum . "f1ea7b39c94724e87de293b2264a1e1da639c41e")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "scribble-lib"
            "hive-common"
            "rackunit-lib"
            "srfi-lib"
            "racket-doc"))
          (dependency-names
           .
           ("base"
            "scribble-lib"
            "hive-common"
            "rackunit-lib"
            "srfi-lib"
            "racket-doc"))
          (description
           .
           "Hive: client-server framework. This is server-side package.")
          (implies . ())
          (last-checked . 1557339607)
          (last-edit . 1525272140)
          (last-updated . 1556510520)
          (modules
           .
           ((lib "hive/server.rkt")
            (lib "hive/server/catalog.rkt")
            (lib "hive/server/commands.rkt")
            (lib "hive/server/file-store.rkt")
            (lib "hive/server/users.rkt")
            (lib "hive/server/make-next.rkt")
            (lib "hive/server/session.rkt")))
          (name . "hive-server")
          (nix-sha256
           .
           "0b6504bbhvvkkczxbpry60iadyhnczbc6ma7q99pjqz6vl6lllmr")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:kalimehtar@mail.ru . #t)
                   (ipc . #t)
                   (ring:1 . #t)
                   (server . #t)))
          (source . "https://github.com/Kalimehtar/hive-server.git")
          (tags . ("ipc" "server"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "f1ea7b39c94724e87de293b2264a1e1da639c41e")
                          (source
                           .
                           "https://github.com/Kalimehtar/hive-server.git")
                          (source_url
                           .
                           "https://github.com/Kalimehtar/hive-server.git")))))))
 ("honu"
  .
  #hash((author . "mflatt@racket-lang.org rafkind@racket-lang.org")
        (authors . ("mflatt@racket-lang.org" "rafkind@racket-lang.org"))
        (build
         .
         #hash((conflicts-log . #f)
               (dep-failure-log . #f)
               (docs . (("main" "honu" "doc/honu@honu/index.html")))
               (failure-log . #f)
               (min-failure-log . #f)
               (success-log . "server/built/install/honu.txt")
               (test-failure-log . #f)
               (test-success-log . "server/built/test-success/honu.txt")))
        (checksum . "fd89d2af7df5aa3db770049663437484d7700820")
        (checksum-error . #f)
        (conflicts . ())
        (dependencies
         .
         ("scheme-lib"
          "macro-debugger"
          "base"
          "parser-tools-lib"
          "rackunit-lib"
          "racket-index"
          "scribble-lib"
          "at-exp-lib"
          "sandbox-lib"
          "racket-doc"))
        (dependency-names
         .
         ("scheme-lib"
          "macro-debugger"
          "base"
          "parser-tools-lib"
          "rackunit-lib"
          "racket-index"
          "scribble-lib"
          "at-exp-lib"
          "sandbox-lib"
          "racket-doc"))
        (description . "The implementation of the Honu language")
        (implies . ())
        (last-checked . 1557339607)
        (last-edit . 1417659583)
        (last-updated . 1548722434)
        (modules
         .
         ((lib "honu/tests/test-docs-complete.rkt")
          (lib "honu/private/lang/reader.rkt")
          (lib "honu-parse/syntax.rkt")
          (lib "honu/debug.rkt")
          (lib "honu-parse/wrap.rkt")
          (lib "honu-parse/operator.rkt")
          (lib "honu/syntax-parse.rkt")
          (lib "honu/core/private/macro.rkt")
          (lib "honu/core/runtime.rkt")
          (lib "honu/private/common.rkt")
          (lib "honu/core/api.rkt")
          (lib "honu/core/private/struct.rkt")
          (lib "honu/main.rkt")
          (lib "honu/tests/linq.rkt")
          (lib "honu-parse/debug.rkt")
          (lib "honu/syntax.rkt")
          (lib "honu-parse/literals.rkt")
          (lib "honu-parse/macro.rkt")
          (lib "honu/core/lang/reader.rkt")
          (lib "honu-parse/transformer.rkt")
          (lib "honu/lang/reader.rkt")
          (lib "honu-parse/arithmetic.rkt")
          (lib "honu-parse/define.rkt")
          (lib "honu/core/private/honu-top.rkt")
          (lib "honu/private/main.rkt")
          (lib "honu-parse/template.rkt")
          (lib "honu/core/read.rkt")
          (lib "honu/core/main.rkt")
          (lib "honu/core/private/util.rkt")
          (lib "honu/core/private/literals.rkt")
          (lib "honu-parse/unparsed-begin.rkt")
          (lib "honu/core/private/honu.rkt")
          (lib "honu-parse/main.rkt")
          (lib "honu-parse/old-literals.rkt")
          (lib "honu/tests/xml.rkt")
          (lib "honu/scribblings/honu.scrbl")
          (lib "honu-parse/compile.rkt")
          (lib "honu/core/private/class.rkt")
          (lib "honu-parse/parse.rkt")
          (lib "honu/core/private/operator.rkt")
          (lib "honu/core/language.rkt")
          (lib "honu/tests/macros.rkt")
          (lib "honu/tests/check.rkt")))
        (name . "honu")
        (nix-sha256 . "10ph1fj376drx8p9g4ak5cdjrhmjgwpd4w7h334b6fx4aja2bkss")
        (ring . 0)
        (search-terms
         .
         #hasheq((:build-success: . #t)
                 (:docs: . #t)
                 (:no-tag: . #t)
                 (author:mflatt@racket-lang.org . #t)
                 (author:rafkind@racket-lang.org . #t)
                 (ring:0 . #t)))
        (source . "git://github.com/racket/honu")
        (tags . ())
        (versions
         .
         #hash((default
                .
                #hasheq((checksum
                         .
                         "fd89d2af7df5aa3db770049663437484d7700820")
                        (source . "git://github.com/racket/honu")
                        (source_url
                         .
                         "http://github.com/racket/honu/tree/master")))
               ("5.3.4"
                .
                #hash((checksum . "9f098dddde7f217879070816090c1e8e74d49432")
                      (source
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")
                      (source_url
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")))
               ("5.3.5"
                .
                #hash((checksum . "9f098dddde7f217879070816090c1e8e74d49432")
                      (source
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")
                      (source_url
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")))
               ("5.3.6"
                .
                #hash((checksum . "9f098dddde7f217879070816090c1e8e74d49432")
                      (source
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")
                      (source_url
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")))))))
 ("hostname"
  .
  #hasheq((author . "neil@neilvandyke.org")
          (authors . ("neil@neilvandyke.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "hostname" "doc/hostname@hostname/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/hostname.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/hostname.txt")))
          (checksum . "e235b0ed0e00388dfc80c4a20577458885679cdd")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base" "mcfly" "racket-doc" "scribble-lib" "overeasy"))
          (dependency-names
           .
           ("base" "mcfly" "racket-doc" "scribble-lib" "overeasy"))
          (description . "Getting Hostname, FQDN, and IP Addresses")
          (implies . ())
          (last-checked . 1557339607)
          (last-edit . 1456469042)
          (last-updated . 1502816119)
          (modules
           .
           ((lib "hostname/main.rkt") (lib "hostname/hostname.scrbl")))
          (name . "hostname")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (:no-tag: . #t)
                   (author:neil@neilvandyke.org . #t)
                   (ring:1 . #t)))
          (source . "http://www.neilvandyke.org/racket/hostname.zip")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "e235b0ed0e00388dfc80c4a20577458885679cdd")
                          (source
                           .
                           "http://www.neilvandyke.org/racket/hostname.zip")
                          (source_url
                           .
                           "http://www.neilvandyke.org/racket/hostname.zip")))))))
 ("htdp"
  .
  #hash((author
         .
         "matthias@racket-lang.org mflatt@racket-lang.org robby@racket-lang.org")
        (checksum . "c64660b9513a013d6d37ca24c14c0613d452ef61")
        (dependencies . ("htdp-lib" "htdp-doc"))
        (dependency-names . ("htdp-lib" "htdp-doc"))
        (description
         .
         "matthias@racket-lang.org mflatt@racket-lang.org robby@racket-lang.org")
        (modules . ())
        (name . "htdp")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/htdp.zip")
        (tags . ())))
 ("htdp-doc"
  .
  #hash((author
         .
         "matthias@racket-lang.org mflatt@racket-lang.org robby@racket-lang.org")
        (checksum . "018aa935ac4688e20e768012a5ebbf4df926329a")
        (dependencies
         .
         ("base"
          "scribble-lib"
          "at-exp-lib"
          "draw-lib"
          ("gui-lib" #:version "1.37")
          "htdp-lib"
          "plai"
          "sandbox-lib"
          "pict-lib"
          "mzscheme-doc"
          "scheme-lib"
          "compatibility-doc"
          "draw-doc"
          "drracket"
          "gui-doc"
          "pict-doc"
          "racket-doc"))
        (dependency-names
         .
         ("base"
          "scribble-lib"
          "at-exp-lib"
          "draw-lib"
          "gui-lib"
          "htdp-lib"
          "plai"
          "sandbox-lib"
          "pict-lib"
          "mzscheme-doc"
          "scheme-lib"
          "compatibility-doc"
          "draw-doc"
          "drracket"
          "gui-doc"
          "pict-doc"
          "racket-doc"))
        (description
         .
         "matthias@racket-lang.org mflatt@racket-lang.org robby@racket-lang.org")
        (modules . ())
        (name . "htdp-doc")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/htdp-doc.zip")
        (tags . ())))
 ("htdp-json"
  .
  #hasheq((author . "samth@ccs.neu.edu ccshan@indiana.edu")
          (authors . ("samth@ccs.neu.edu" "ccshan@indiana.edu"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "htdp-json" "doc/htdp-json@htdp-json/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/htdp-json.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/htdp-json.txt")))
          (checksum . "154ce5f272bb9c271f6225ddc0f60a52485e1ec4")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base" "scribble-lib" "racket-doc" "rackunit-lib" "htdp-lib"))
          (dependency-names
           .
           ("base" "scribble-lib" "racket-doc" "rackunit-lib" "htdp-lib"))
          (description . "A library for teaching with JSON")
          (implies . ())
          (last-checked . 1557339609)
          (last-edit . 1509457385)
          (last-updated . 1541564037)
          (modules
           .
           ((lib "2htdp/json.rkt") (lib "2htdp/scribblings/htdp-json.scrbl")))
          (name . "htdp-json")
          (nix-sha256
           .
           "01vvmlfbnba6s3bdca174wkcp16zldxs5ndqkvxx2ylcbzxrbrs2")
          (ring . 2)
          (search-terms
           .
           #hasheq((2htdp . #t)
                   (:build-success: . #t)
                   (:docs: . #t)
                   (author:ccshan@indiana.edu . #t)
                   (author:samth@ccs.neu.edu . #t)
                   (json . #t)
                   (ring:2 . #t)))
          (source . "https://github.com/samth/htdp-json.git")
          (tags . ("2htdp" "json"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "154ce5f272bb9c271f6225ddc0f60a52485e1ec4")
                          (source . "https://github.com/samth/htdp-json.git")
                          (source_url
                           .
                           "https://github.com/samth/htdp-json.git")))))))
 ("htdp-lib"
  .
  #hash((author
         .
         "matthias@racket-lang.org mflatt@racket-lang.org robby@racket-lang.org")
        (checksum . "bee28da51a329762e9128f50da38fdbc8dbb0476")
        (dependencies
         .
         (("base" #:version "6.8.0.2")
          "compatibility-lib"
          "draw-lib"
          ("drracket-plugin-lib" #:version "1.1")
          "errortrace-lib"
          "html-lib"
          "images-gui-lib"
          "images-lib"
          "net-lib"
          "pconvert-lib"
          "plai-lib"
          "r5rs-lib"
          "sandbox-lib"
          "scheme-lib"
          "scribble-lib"
          "slideshow-lib"
          "snip-lib"
          "srfi-lite-lib"
          ("string-constants-lib" #:version "1.20")
          "typed-racket-lib"
          "typed-racket-more"
          "web-server-lib"
          "wxme-lib"
          ("gui-lib" #:version "1.36")
          "deinprogramm-signature"
          "pict-lib"
          "racket-index"
          "at-exp-lib"
          ("rackunit-lib" #:version "1.10")))
        (dependency-names
         .
         ("base"
          "compatibility-lib"
          "draw-lib"
          "drracket-plugin-lib"
          "errortrace-lib"
          "html-lib"
          "images-gui-lib"
          "images-lib"
          "net-lib"
          "pconvert-lib"
          "plai-lib"
          "r5rs-lib"
          "sandbox-lib"
          "scheme-lib"
          "scribble-lib"
          "slideshow-lib"
          "snip-lib"
          "srfi-lite-lib"
          "string-constants-lib"
          "typed-racket-lib"
          "typed-racket-more"
          "web-server-lib"
          "wxme-lib"
          "gui-lib"
          "deinprogramm-signature"
          "pict-lib"
          "racket-index"
          "at-exp-lib"
          "rackunit-lib"))
        (description
         .
         "matthias@racket-lang.org mflatt@racket-lang.org robby@racket-lang.org")
        (modules . ())
        (name . "htdp-lib")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/htdp-lib.zip")
        (tags . ())))
 ("htdp-test"
  .
  #hash((author
         .
         "matthias@racket-lang.org mflatt@racket-lang.org robby@racket-lang.org")
        (checksum . "fd2ff50302707a46d57c2ce1563cfbc48ee333d5")
        (dependencies
         .
         ("base"
          "htdp-lib"
          "scheme-lib"
          "srfi-lite-lib"
          "compatibility-lib"
          "gui-lib"
          "racket-test"
          "rackunit-lib"
          "profile-lib"
          "wxme-lib"
          "pconvert-lib"))
        (dependency-names
         .
         ("base"
          "htdp-lib"
          "scheme-lib"
          "srfi-lite-lib"
          "compatibility-lib"
          "gui-lib"
          "racket-test"
          "rackunit-lib"
          "profile-lib"
          "wxme-lib"
          "pconvert-lib"))
        (description
         .
         "matthias@racket-lang.org mflatt@racket-lang.org robby@racket-lang.org")
        (modules . ())
        (name . "htdp-test")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/htdp-test.zip")
        (tags . ())))
 ("html"
  .
  #hash((author . "jay@racket-lang.org mflatt@racket-lang.org")
        (checksum . "59dc92c3a301848aba676146e15c0f2cd6aa38a9")
        (dependencies . ("html-lib" "html-doc"))
        (dependency-names . ("html-lib" "html-doc"))
        (description . "jay@racket-lang.org mflatt@racket-lang.org")
        (modules . ())
        (name . "html")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/html.zip")
        (tags . ())))
 ("html-doc"
  .
  #hash((author . "jay@racket-lang.org mflatt@racket-lang.org")
        (checksum . "b654a0a3f5e38b78d3226f4000ff1f85de3eb0f6")
        (dependencies . ("base" "scribble-lib" "html-lib" "racket-doc"))
        (dependency-names . ("base" "scribble-lib" "html-lib" "racket-doc"))
        (description . "jay@racket-lang.org mflatt@racket-lang.org")
        (modules . ())
        (name . "html-doc")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/html-doc.zip")
        (tags . ())))
 ("html-lib"
  .
  #hash((author . "jay@racket-lang.org mflatt@racket-lang.org")
        (checksum . "9050e4524334429cf2ec3bf9995ebce270941154")
        (dependencies . ("base"))
        (dependency-names . ("base"))
        (description . "jay@racket-lang.org mflatt@racket-lang.org")
        (modules . ())
        (name . "html-lib")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/html-lib.zip")
        (tags . ())))
 ("html-parsing"
  .
  #hasheq((author . "neil@neilvandyke.org")
          (authors . ("neil@neilvandyke.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "html-parsing"
                    "doc/html-parsing@html-parsing/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/html-parsing.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/html-parsing.txt")))
          (checksum . "948da802f479758bbc3ddcda446c0243f1a65fe7")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base" "mcfly" "racket-doc" "scribble-lib" "overeasy"))
          (dependency-names
           .
           ("base" "mcfly" "racket-doc" "scribble-lib" "overeasy"))
          (description . "Permissive Parsing of HTML to SXML")
          (implies . ())
          (last-checked . 1557339609)
          (last-edit . 1456770495)
          (last-updated . 1527044792)
          (modules
           .
           ((lib "html-parsing/main.rkt")
            (lib "html-parsing/html-parsing.scrbl")))
          (name . "html-parsing")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:neil@neilvandyke.org . #t)
                   (html . #t)
                   (ring:1 . #t)
                   (sxml . #t)
                   (web . #t)))
          (source . "http://www.neilvandyke.org/racket/html-parsing.zip")
          (tags . ("html" "sxml" "web"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "948da802f479758bbc3ddcda446c0243f1a65fe7")
                          (source
                           .
                           "http://www.neilvandyke.org/racket/html-parsing.zip")
                          (source_url
                           .
                           "http://www.neilvandyke.org/racket/html-parsing.zip")))))))
 ("html-template"
  .
  #hasheq((author . "neil@neilvandyke.org")
          (authors . ("neil@neilvandyke.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "html-template"
                    "doc/html-template@html-template/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/html-template.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/html-template.txt")))
          (checksum . "9a51d5dda4dffd81cc9f3e2d7d971c808d4ad2c0")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "mcfly"
            "html-writing"
            "racket-doc"
            "scribble-lib"
            "overeasy"))
          (dependency-names
           .
           ("base"
            "mcfly"
            "html-writing"
            "racket-doc"
            "scribble-lib"
            "overeasy"))
          (description . "HTML-Writing Template Language in SXML")
          (implies . ())
          (last-checked . 1557339610)
          (last-edit . 1456718098)
          (last-updated . 1502816129)
          (modules
           .
           ((lib "html-template/html-template-generate.rkt")
            (lib "html-template/html-template-parse.rkt")
            (lib "html-template/main.rkt")
            (lib "html-template/html-template.scrbl")
            (lib "html-template/html-template-generate-helpers.rkt")
            (lib "html-template/html-template.rkt")
            (lib "html-template/test-html-template.rkt")))
          (name . "html-template")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:neil@neilvandyke.org . #t)
                   (html . #t)
                   (ring:1 . #t)
                   (sxml . #t)
                   (web . #t)))
          (source . "http://www.neilvandyke.org/racket/html-template.zip")
          (tags . ("html" "sxml" "web"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "9a51d5dda4dffd81cc9f3e2d7d971c808d4ad2c0")
                          (source
                           .
                           "http://www.neilvandyke.org/racket/html-template.zip")
                          (source_url
                           .
                           "http://www.neilvandyke.org/racket/html-template.zip")))))))
 ("html-test"
  .
  #hash((author . "jay@racket-lang.org mflatt@racket-lang.org")
        (checksum . "f3010cf8e1f2a5b92097200f2cdef27c23173bd4")
        (dependencies . ("racket-index" "base" "html-lib" "rackunit-lib"))
        (dependency-names . ("racket-index" "base" "html-lib" "rackunit-lib"))
        (description . "jay@racket-lang.org mflatt@racket-lang.org")
        (modules . ())
        (name . "html-test")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/html-test.zip")
        (tags . ())))
 ("html-writing"
  .
  #hasheq((author . "neil@neilvandyke.org")
          (authors . ("neil@neilvandyke.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "html-writing"
                    "doc/html-writing@html-writing/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/html-writing.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/html-writing.txt")))
          (checksum . "d0e12121d24dc7f1aebbac048bae09fa1f6507b6")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base" "mcfly" "racket-doc" "scribble-lib" "overeasy"))
          (dependency-names
           .
           ("base" "mcfly" "racket-doc" "scribble-lib" "overeasy"))
          (description . "Writing HTML from SXML")
          (implies . ())
          (last-checked . 1557339611)
          (last-edit . 1456770509)
          (last-updated . 1502816131)
          (modules
           .
           ((lib "html-writing/html-writing.scrbl")
            (lib "html-writing/main.rkt")))
          (name . "html-writing")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:neil@neilvandyke.org . #t)
                   (html . #t)
                   (ring:1 . #t)
                   (sxml . #t)
                   (web . #t)))
          (source . "http://www.neilvandyke.org/racket/html-writing.zip")
          (tags . ("html" "sxml" "web"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "d0e12121d24dc7f1aebbac048bae09fa1f6507b6")
                          (source
                           .
                           "http://www.neilvandyke.org/racket/html-writing.zip")
                          (source_url
                           .
                           "http://www.neilvandyke.org/racket/html-writing.zip")))))))
 ("html5-lang"
  .
  #hasheq((author . "stephen@thoughtstem.com")
          (authors . ("stephen@thoughtstem.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("none" "vr-lang")))
                 (failure-log . "server/built/fail/html5-lang.txt")
                 (min-failure-log . #f)
                 (success-log . #f)
                 (test-failure-log . #f)
                 (test-success-log . #f)))
          (checksum . "ae39387ef2dfd6b7df630940e1d338e854c10de8")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("hostname" "simple-qr" "urlang"))
          (dependency-names . ("hostname" "simple-qr" "urlang"))
          (description
           .
           "Educational language for making simple HTML5, mobile-friendly web apps.")
          (implies . ())
          (last-checked . 1557339611)
          (last-edit . 1529348272)
          (last-updated . 1530916995)
          (modules
           .
           ((lib
             "html5-lang/demos/remote-component-demo5/vr-star-system-demo.rkt")
            (lib
             "html5-lang/demos/remote-component-demo4/vr-star-system-demo4.rkt")
            (lib "html5-lang/html5-lang.rkt")
            (lib "html5-lang/templates.rkt")
            (lib "html5-lang/demos/hello-world3/vr-hello-world3.rkt")
            (lib "html5-lang/main.rkt")
            (lib
             "html5-lang/demos/remote-component-demo2/vr-star-system-demo2.rkt")
            (lib "html5-lang/styles.rkt")
            (lib "html5-lang/test.rkt")
            (lib
             "html5-lang/demos/remote-component-demo/vr-star-system-demo.rkt")
            (lib
             "html5-lang/demos/remote-component-demo3/remote-component-demo3.rkt")
            (lib "html5-lang/demos/hello-world/vr-hello-world.rkt")
            (lib "html5-lang/demos/demo1/testvr.rkt")
            (lib "html5-lang/demos/hello-world2/vr-hello-world2.rkt")
            (lib "html5-lang/my-ip-qr.rkt")))
          (name . "html5-lang")
          (nix-sha256
           .
           "16jv9fmz6dp2jjs6n6paygcv512710n7hc773sq3zz66562gs995")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-fail: . #t)
                   (:docs-error: . #t)
                   (:no-tag: . #t)
                   (author:stephen@thoughtstem.com . #t)
                   (ring:2 . #t)))
          (source
           .
           "https://github.com/thoughtstem/html5-lang.git?path=html5-lang")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "ae39387ef2dfd6b7df630940e1d338e854c10de8")
                          (source
                           .
                           "https://github.com/thoughtstem/html5-lang.git?path=html5-lang")
                          (source_url
                           .
                           "https://github.com/thoughtstem/html5-lang.git?path=html5-lang")))))))
 ("http"
  .
  #hasheq((author . "greghendershott@gmail.com")
          (authors . ("greghendershott@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "http" "doc/http@http/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/http.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/http.txt")))
          (checksum . "c3a739e1ba556aece3157a06f32cf1afaeea1b11")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           (("base" #:version "6.2")
            "html-lib"
            "rackunit-lib"
            "net-doc"
            "racket-doc"
            "rackunit-lib"
            "scribble-lib"))
          (dependency-names
           .
           ("base"
            "html-lib"
            "rackunit-lib"
            "net-doc"
            "racket-doc"
            "rackunit-lib"
            "scribble-lib"))
          (description
           .
           "Support for HTTP 1.1 including automatic connection pooling.")
          (implies . ())
          (last-checked . 1557339612)
          (last-edit . 1504135191)
          (last-updated . 1552076121)
          (modules
           .
           ((lib "http/request.rkt")
            (lib "http/http.scrbl")
            (lib "http/util.rkt")
            (lib "http/main.rkt")
            (lib "http/head.rkt")))
          (name . "http")
          (nix-sha256
           .
           "1kscsy5lh08sa5ws9yyxxanl4xlxgkzc765r0iqxl1736qld6qqz")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:greghendershott@gmail.com . #t)
                   (http . #t)
                   (net . #t)
                   (ring:1 . #t)
                   (web . #t)))
          (source . "git://github.com/greghendershott/http")
          (tags . ("http" "net" "web"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "c3a739e1ba556aece3157a06f32cf1afaeea1b11")
                          (source . "git://github.com/greghendershott/http")
                          (source_url
                           .
                           "http://github.com/greghendershott/http/tree/master")))))))
 ("http11"
  .
  #hasheq((author . "ray.racine@gmail.com")
          (authors . ("ray.racine@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "http11" "doc/http11@http11/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/http11.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/http11.txt")))
          (checksum . "5d9a2f182168c01ca366cdd45c7bcf78cf8037be")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("uri"
            "date"
            "opt"
            "string-util"
            "typed-racket-more"
            "typed-racket-lib"
            "base"
            "scribble-lib"
            "typed-racket-lib"
            "typed-racket-more"
            "racket-doc"
            "rackunit-lib"))
          (dependency-names
           .
           ("uri"
            "date"
            "opt"
            "string-util"
            "typed-racket-more"
            "typed-racket-lib"
            "base"
            "scribble-lib"
            "typed-racket-lib"
            "typed-racket-more"
            "racket-doc"
            "rackunit-lib"))
          (description
           .
           "HTTP v1.1  low level protocol library in Typed Racket.")
          (implies . ())
          (last-checked . 1557339612)
          (last-edit . 1528480830)
          (last-updated . 1537567014)
          (modules
           .
           ((lib "http11/http/param.rkt")
            (lib "http11/http/encoding.rkt")
            (lib "http11/http/header.rkt")
            (lib "http11/main.rkt")
            (lib "http11/http/proxy.rkt")
            (lib "http11/http/heading.rkt")
            (lib "http11/http/cookie.rkt")
            (lib "http11/http/encode.rkt")
            (lib "http11/scribblings/http11.scrbl")
            (lib "http11/http/mimetype.rkt")
            (lib "http11/http/parse.rkt")
            (lib "http11/http/mimetype-const.rkt")))
          (name . "http11")
          (nix-sha256
           .
           "050f4mnc3m0qll2k507amwklsj5hjkhykdx7n8r7m29myrgxsqak")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:ray.racine@gmail.com . #t)
                   (http . #t)
                   (ring:2 . #t)))
          (source . "https://gitlab.com/RayRacine/http11.git")
          (tags . ("http"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "5d9a2f182168c01ca366cdd45c7bcf78cf8037be")
                          (source . "https://gitlab.com/RayRacine/http11.git")
                          (source_url
                           .
                           "https://gitlab.com/RayRacine/http11.git")))))))
 ("http11-server"
  .
  #hasheq((author . "ray.racine@gmail.com")
          (authors . ("ray.racine@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "http11-server"
                    "doc/http11-server@http11-server/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/http11-server.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/http11-server.txt")))
          (checksum . "f45e745600995225fb492adc86bc31597b6b9b3d")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("http11"
            "string-util"
            "uri"
            "base"
            "typed-racket-lib"
            "typed-racket-more"
            "scribble-lib"
            "racket-doc"
            "rackunit-lib"
            "typed-racket-lib"
            "typed-racket-more"))
          (dependency-names
           .
           ("http11"
            "string-util"
            "uri"
            "base"
            "typed-racket-lib"
            "typed-racket-more"
            "scribble-lib"
            "racket-doc"
            "rackunit-lib"
            "typed-racket-lib"
            "typed-racket-more"))
          (description
           .
           "Minimal low level routines in Typed Racket sufficient to handle a RPC/API HTTP(S) endpoint server.  It is NOT a full blown HTTP Content Server.  Simple endpoint server.")
          (implies . ())
          (last-checked . 1557339612)
          (last-edit . 1537641673)
          (last-updated . 1543675523)
          (modules
           .
           ((lib "http11-server/main.rkt")
            (lib "http11-server/scribblings/http11-server.scrbl")
            (lib "http11-server/endpoint.rkt")
            (lib "http11-server/types.rkt")))
          (name . "http11-server")
          (nix-sha256
           .
           "12mzzsv3zxsvjqxqyzhblk3jww652hj0jqmfb6lkcarj3qzih8ki")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:ray.racine@gmail.com . #t)
                   (endpoint . #t)
                   (http . #t)
                   (https . #t)
                   (ring:2 . #t)))
          (source . "https://gitlab.com/RayRacine/http11-server.git")
          (tags . ("endpoint" "http" "https"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "f45e745600995225fb492adc86bc31597b6b9b3d")
                          (source
                           .
                           "https://gitlab.com/RayRacine/http11-server.git")
                          (source_url
                           .
                           "https://gitlab.com/RayRacine/http11-server.git")))))))
 ("hygienic-quote-lang"
  .
  #hasheq((author . "alexander@knauth.org")
          (authors . ("alexander@knauth.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "hygienic-quote"
                    "doc/hygienic-quote@hygienic-quote-lang/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log
                  .
                  "server/built/install/hygienic-quote-lang.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/hygienic-quote-lang.txt")))
          (checksum . "82963703d47bafd51c284067771f46ea410dc725")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "hygienic-reader-extension"
            "rackunit-lib"
            "scribble-lib"
            "racket-doc"))
          (dependency-names
           .
           ("base"
            "hygienic-reader-extension"
            "rackunit-lib"
            "scribble-lib"
            "racket-doc"))
          (description
           .
           "hygienic versions of quote-like racket reader macros")
          (implies . ())
          (last-checked . 1557339613)
          (last-edit . 1444966530)
          (last-updated . 1502816131)
          (modules
           .
           ((lib "hygienic-quote/reader.rkt")
            (lib "hygienic-quote/scribblings/hygienic-quote.scrbl")
            (lib "hygienic-quote/lang/reader.rkt")
            (lib "hygienic-quote/tests/test.rkt")
            (lib "hygienic-quote/private/make-quote-proc.rkt")))
          (name . "hygienic-quote-lang")
          (nix-sha256
           .
           "1rljr5l9c6ca37snz5li6sp2g2w0d7jghr017cnavihsmhmcbrrm")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:alexander@knauth.org . #t)
                   (lang-extension . #t)
                   (ring:1 . #t)
                   (syntax . #t)))
          (source . "git://github.com/AlexKnauth/hygienic-quote-lang")
          (tags . ("lang-extension" "syntax"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "82963703d47bafd51c284067771f46ea410dc725")
                          (source
                           .
                           "git://github.com/AlexKnauth/hygienic-quote-lang")
                          (source_url
                           .
                           "http://github.com/AlexKnauth/hygienic-quote-lang/tree/master")))))))
 ("hygienic-reader-extension"
  .
  #hasheq((author . "alexander@knauth.org")
          (authors . ("alexander@knauth.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "hygienic-reader-extension"
                    "doc/hygienic-reader-extension@hygienic-reader-extension/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log
                  .
                  "server/built/install/hygienic-reader-extension.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/hygienic-reader-extension.txt")))
          (checksum . "e00ab648d34f7ea33abd5f9c8b372404bf64aa79")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "rackunit-lib" "scribble-lib" "racket-doc"))
          (dependency-names
           .
           ("base" "rackunit-lib" "scribble-lib" "racket-doc"))
          (description . "adding hygiene to racket reader extensions")
          (implies . ())
          (last-checked . 1557339613)
          (last-edit . 1466174297)
          (last-updated . 1553738665)
          (modules
           .
           ((lib
             "hygienic-reader-extension/tests/hygienically-introduce-unhygienic-macro/test.rkt")
            (lib "lang-extension/meta-reader-util.rkt")
            (lib "hygienic-reader-extension/tests/hygienic-quote/test.rkt")
            (lib "lang-reader/syntax-module-reader/lang/reader.rkt")
            (lib
             "hygienic-reader-extension/tests/hygienic-quote/lang/reader.rkt")
            (lib "lang-reader/lang-reader.rkt")
            (lib "hygienic-reader-extension/extend-reader.rkt")
            (lib
             "hygienic-reader-extension/tests/hygienically-introduce-unhygienic-macro/lang/reader.rkt")
            (lib "lang-extension/lang-extension-lang.rkt")
            (lib
             "hygienic-reader-extension/tests/hygienic-quote/racket/lang/reader.rkt")
            (lib "lang-reader/lang/reader.rkt")
            (lib "lang-reader/lang-reader-lang.rkt")
            (lib "lang-extension/lang/reader.rkt")
            (lib
             "hygienic-reader-extension/scribblings/hygienic-reader-extension.scrbl")
            (lib
             "hygienic-reader-extension/tests/hygienic-quote/racket/test.rkt")
            (lib "lang-reader/syntax-module-reader.rkt")
            (lib
             "hygienic-reader-extension/tests/hygienically-introduce-unhygienic-macro/unhygienic-macro.rkt")))
          (name . "hygienic-reader-extension")
          (nix-sha256
           .
           "0rys77fy4vrmzxfly6n47lrp6ibrcjzklwfv3j925b812jn3yv7a")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:alexander@knauth.org . #t)
                   (lang-extension . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/AlexKnauth/hygienic-reader-extension")
          (tags . ("lang-extension"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "e00ab648d34f7ea33abd5f9c8b372404bf64aa79")
                          (source
                           .
                           "git://github.com/AlexKnauth/hygienic-reader-extension")
                          (source_url
                           .
                           "http://github.com/AlexKnauth/hygienic-reader-extension/tree/master")))))))
 ("hyper-literate"
  .
  #hasheq((author . "georges.duperon@gmail.com")
          (authors . ("georges.duperon@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "test.hl" "doc/test.hl@hyper-literate/index.html")
                   ("main"
                    "test2.hl"
                    "doc/test2.hl@hyper-literate/index.html")
                   ("main"
                    "hyper-literate"
                    "doc/hyper-literate@hyper-literate/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/hyper-literate.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/hyper-literate.txt")))
          (checksum . "ebdeed4cd39196629c9c49f9df00f4ebaff462d1")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "rackunit-lib"
            "at-exp-lib"
            "scheme-lib"
            "scribble-lib"
            "typed-racket-lib"
            "typed-racket-more"
            "typed-racket-doc"
            "scribble-enhanced"
            "sexp-diff"
            "tr-immutable"
            "typed-map-lib"
            "debug-scopes"
            "syntax-color-lib"
            "scribble-lib"
            "racket-doc"
            "rackunit-doc"
            "scribble-doc"
            "rackunit-doc"))
          (dependency-names
           .
           ("base"
            "rackunit-lib"
            "at-exp-lib"
            "scheme-lib"
            "scribble-lib"
            "typed-racket-lib"
            "typed-racket-more"
            "typed-racket-doc"
            "scribble-enhanced"
            "sexp-diff"
            "tr-immutable"
            "typed-map-lib"
            "debug-scopes"
            "syntax-color-lib"
            "scribble-lib"
            "racket-doc"
            "rackunit-doc"
            "scribble-doc"
            "rackunit-doc"))
          (description
           .
           "Some tools which help build hyper-literate programs. For now, this only contains a few changes from scribble/lp2, including support for typed/racket literate programs.")
          (implies . ())
          (last-checked . 1557339613)
          (last-edit . 1483289613)
          (last-updated . 1556193873)
          (modules
           .
           ((lib "hyper-literate/scribblings/diff1-example.hl.rkt")
            (lib "hyper-literate/comments/syntax-properties.rkt")
            (lib "hyper-literate/comments/restore-comments.rkt")
            (lib "hyper-literate/lang/reader.rkt")
            (lib "hyper-literate/main.rkt")
            (lib "hyper-literate/test/comments/annotate-syntax-typed.rkt")
            (lib "hyper-literate/comments/hide-comments.rkt")
            (lib "hyper-literate/test/comments/test-comments-round-trip.rkt")
            (lib "hyper-literate/test/comments/same-syntax.rkt")
            (lib "hyper-literate/private/common.rkt")
            (lib "hyper-literate/comments/hide-comments-typed.rkt")
            (lib "hyper-literate/private/chunks-toc-prefix.rkt")
            (lib "hyper-literate/comments/restore-comments-typed.rkt")
            (lib "hyper-literate/test/test-chunks-order.rkt")
            (lib "hyper-literate/lang/first-line-utils.rkt")
            (lib "hyper-literate/comments/syntax-properties-typed.rkt")
            (lib "hyper-literate/diff1.rkt")
            (lib "hyper-literate/test/test.hl.rkt")
            (lib "hyper-literate/private/lp.rkt")
            (lib "hyper-literate/scribblings/hyper-literate.scrbl")
            (lib "hyper-literate/lang.rkt")
            (lib "hyper-literate/private/no-auto-require.rkt")
            (lib "hyper-literate/test/comments/same-syntax-typed.rkt")
            (lib "hyper-literate/spoiler1.rkt")
            (lib "hyper-literate/test/test-doc.rkt")
            (lib "hyper-literate/comment-reader.rkt")
            (lib "hyper-literate/test/test2.hl.rkt")
            (lib "hyper-literate/test/comments/annotate-syntax.rkt")
            (lib "hyper-literate/restore-comments.rkt")
            (lib "hyper-literate/lang/meta-first-line.rkt")))
          (name . "hyper-literate")
          (nix-sha256
           .
           "17yjwwr8hs69779qdq07bnrp9bjmapvyw50gkzq8gmrwvy1qpmxw")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:georges.duperon@gmail.com . #t)
                   (documentation . #t)
                   (lang . #t)
                   (language . #t)
                   (literate-programming . #t)
                   (ring:1 . #t)))
          (source . "https://github.com/jsmaniac/hyper-literate.git")
          (tags . ("documentation" "lang" "language" "literate-programming"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "ebdeed4cd39196629c9c49f9df00f4ebaff462d1")
                          (source
                           .
                           "https://github.com/jsmaniac/hyper-literate.git")
                          (source_url
                           .
                           "https://github.com/jsmaniac/hyper-literate.git")))
                 ("6.0"
                  .
                  #hasheq((checksum
                           .
                           "ae152d4ab9058a77128cad7c7aab839b99f3f5d9")
                          (source
                           .
                           "https://github.com/jsmaniac/hyper-literate.git#before-6.7.0.4")
                          (source_url
                           .
                           "https://github.com/jsmaniac/hyper-literate.git#before-6.7.0.4")))
                 ("6.1"
                  .
                  #hasheq((checksum
                           .
                           "ae152d4ab9058a77128cad7c7aab839b99f3f5d9")
                          (source
                           .
                           "https://github.com/jsmaniac/hyper-literate.git#before-6.7.0.4")
                          (source_url
                           .
                           "https://github.com/jsmaniac/hyper-literate.git#before-6.7.0.4")))
                 ("6.1.1"
                  .
                  #hasheq((checksum
                           .
                           "ae152d4ab9058a77128cad7c7aab839b99f3f5d9")
                          (source
                           .
                           "https://github.com/jsmaniac/hyper-literate.git#before-6.7.0.4")
                          (source_url
                           .
                           "https://github.com/jsmaniac/hyper-literate.git#before-6.7.0.4")))
                 ("6.2"
                  .
                  #hasheq((checksum
                           .
                           "ae152d4ab9058a77128cad7c7aab839b99f3f5d9")
                          (source
                           .
                           "https://github.com/jsmaniac/hyper-literate.git#before-6.7.0.4")
                          (source_url
                           .
                           "https://github.com/jsmaniac/hyper-literate.git#before-6.7.0.4")))
                 ("6.3"
                  .
                  #hasheq((checksum
                           .
                           "ae152d4ab9058a77128cad7c7aab839b99f3f5d9")
                          (source
                           .
                           "https://github.com/jsmaniac/hyper-literate.git#before-6.7.0.4")
                          (source_url
                           .
                           "https://github.com/jsmaniac/hyper-literate.git#before-6.7.0.4")))
                 ("6.4"
                  .
                  #hasheq((checksum
                           .
                           "ae152d4ab9058a77128cad7c7aab839b99f3f5d9")
                          (source
                           .
                           "https://github.com/jsmaniac/hyper-literate.git#before-6.7.0.4")
                          (source_url
                           .
                           "https://github.com/jsmaniac/hyper-literate.git#before-6.7.0.4")))
                 ("6.5"
                  .
                  #hasheq((checksum
                           .
                           "ae152d4ab9058a77128cad7c7aab839b99f3f5d9")
                          (source
                           .
                           "https://github.com/jsmaniac/hyper-literate.git#before-6.7.0.4")
                          (source_url
                           .
                           "https://github.com/jsmaniac/hyper-literate.git#before-6.7.0.4")))
                 ("6.6"
                  .
                  #hasheq((checksum
                           .
                           "ae152d4ab9058a77128cad7c7aab839b99f3f5d9")
                          (source
                           .
                           "https://github.com/jsmaniac/hyper-literate.git#before-6.7.0.4")
                          (source_url
                           .
                           "https://github.com/jsmaniac/hyper-literate.git#before-6.7.0.4")))
                 ("6.7"
                  .
                  #hasheq((checksum
                           .
                           "ae152d4ab9058a77128cad7c7aab839b99f3f5d9")
                          (source
                           .
                           "https://github.com/jsmaniac/hyper-literate.git#before-6.7.0.4")
                          (source_url
                           .
                           "https://github.com/jsmaniac/hyper-literate.git#before-6.7.0.4")))
                 ("6.7.0.4"
                  .
                  #hasheq((checksum
                           .
                           "ae152d4ab9058a77128cad7c7aab839b99f3f5d9")
                          (source
                           .
                           "https://github.com/jsmaniac/hyper-literate.git#before-6.7.0.4")
                          (source_url
                           .
                           "https://github.com/jsmaniac/hyper-literate.git#before-6.7.0.4")))))))
 ("hyphenate"
  .
  #hasheq((author . "mb@mbtype.com")
          (authors . ("mb@mbtype.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "hyphenate" "doc/hyphenate@hyphenate/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/hyphenate.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/hyphenate.txt")))
          (checksum . "e553df62ab842079a2ca6c5f716885623234438e")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            ("sugar" #:version "0.2")
            ("txexpr" #:version "0.2")
            "scribble-lib"
            "racket-doc"
            "rackunit-lib"))
          (dependency-names
           .
           ("base"
            "sugar"
            "txexpr"
            "scribble-lib"
            "racket-doc"
            "rackunit-lib"))
          (description
           .
           "Hyphenate X-expressions with the Knuth–Liang hyphenation algorithm")
          (implies . ())
          (last-checked . 1557339614)
          (last-edit . 1392847109)
          (last-updated . 1557076812)
          (modules
           .
           ((lib "hyphenate/private/exception-prep.rkt")
            (lib "hyphenate/private/bootstrap.rkt")
            (lib "hyphenate/us/exceptions.rkt")
            (lib "hyphenate/us/patterns.rkt")
            (lib "hyphenate/main.rkt")
            (lib "hyphenate/tests.rkt")
            (lib "hyphenate/fr/patterns.rkt")
            (lib "hyphenate/private/core.rkt")
            (lib "hyphenate/scribblings/hyphenate.scrbl")
            (lib "hyphenate/us.rkt")
            (lib "hyphenate/fr.rkt")
            (lib "hyphenate/private/pattern-prep.rkt")
            (lib "hyphenate/fr/exceptions.rkt")))
          (name . "hyphenate")
          (nix-sha256
           .
           "05973n46bmyzrr140dn9s6f4pm06z62wan65x7jb852cm8qp2vi1")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:mb@mbtype.com . #t)
                   (ring:1 . #t)
                   (scribble . #t)
                   (web . #t)))
          (source . "git://github.com/mbutterick/hyphenate")
          (tags . ("scribble" "web"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "e553df62ab842079a2ca6c5f716885623234438e")
                          (source . "git://github.com/mbutterick/hyphenate")
                          (source_url
                           .
                           "http://github.com/mbutterick/hyphenate/tree/master")))))))
 ("icfp-2014-contracts-talk"
  .
  #hasheq((author . "robby@racket-lang.org")
          (authors . ("robby@racket-lang.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log
                  .
                  "server/built/install/icfp-2014-contracts-talk.txt")
                 (test-failure-log
                  .
                  "server/built/test-fail/icfp-2014-contracts-talk.txt")
                 (test-success-log . #f)))
          (checksum . "e1df17f23d7cd4fbb4fa78c15d6eb3f79c576ddf")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("plot-lib"
            "base"
            "draw-lib"
            "gui-lib"
            "pict-lib"
            "plot-gui-lib"
            "rackunit-lib"
            "redex-gui-lib"
            "redex-lib"
            "slideshow-lib"))
          (dependency-names
           .
           ("plot-lib"
            "base"
            "draw-lib"
            "gui-lib"
            "pict-lib"
            "plot-gui-lib"
            "rackunit-lib"
            "redex-gui-lib"
            "redex-lib"
            "slideshow-lib"))
          (description
           .
           "Slideshow implementation of ICFP 2014 Contracts Keynote Talk")
          (implies . ())
          (last-checked . 1557339614)
          (last-edit . 1409943076)
          (last-updated . 1502816133)
          (modules
           .
           ((lib "icfp-2014-contracts-talk/color.rkt")
            (lib "icfp-2014-contracts-talk/boundaries-not-projections.rkt")
            (lib "icfp-2014-contracts-talk/redex-model.rkt")
            (lib "icfp-2014-contracts-talk/counts/time-vs-contracts.rkt")
            (lib "icfp-2014-contracts-talk/dep.rkt")
            (lib "icfp-2014-contracts-talk/talk.rkt")
            (lib "icfp-2014-contracts-talk/heap-slides.rkt")
            (lib "icfp-2014-contracts-talk/main.rkt")
            (lib "icfp-2014-contracts-talk/title-lib.rkt")
            (lib "icfp-2014-contracts-talk/boundary.rkt")
            (lib "icfp-2014-contracts-talk/random-generation.rkt")
            (lib "icfp-2014-contracts-talk/render-bytes.rkt")
            (lib "icfp-2014-contracts-talk/takeaways.rkt")
            (lib "icfp-2014-contracts-talk/model-lib.rkt")
            (lib "icfp-2014-contracts-talk/title.rkt")
            (lib "icfp-2014-contracts-talk/faces.rkt")
            (lib "icfp-2014-contracts-talk/intro.rkt")
            (lib "icfp-2014-contracts-talk/heap.rkt")
            (lib "icfp-2014-contracts-talk/function-machine.rkt")
            (lib "icfp-2014-contracts-talk/util.rkt")
            (lib "icfp-2014-contracts-talk/equations.rkt")
            (lib "icfp-2014-contracts-talk/redex-typeset.rkt")
            (lib "icfp-2014-contracts-talk/counts/contracts-vs-commits.rkt")
            (lib "icfp-2014-contracts-talk/code-combine.rkt")))
          (name . "icfp-2014-contracts-talk")
          (nix-sha256
           .
           "1slni73fvfwh2a57lcc2vf674gznzpqsg1dg975w4zwywwira26d")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:robby@racket-lang.org . #t)
                   (ring:1 . #t)
                   (slideshow . #t)))
          (source . "git://github.com/rfindler/icfp-2014-contracts-talk")
          (tags . ("slideshow"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "e1df17f23d7cd4fbb4fa78c15d6eb3f79c576ddf")
                          (source
                           .
                           "git://github.com/rfindler/icfp-2014-contracts-talk")
                          (source_url
                           .
                           "http://github.com/rfindler/icfp-2014-contracts-talk/tree/master")))))))
 ("icfp2017-minikanren"
  .
  #hasheq((author . "alexander@knauth.org greg.weiqi@gmail.com")
          (authors . ("alexander@knauth.org" "greg.weiqi@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log
                  .
                  "server/built/install/icfp2017-minikanren.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/icfp2017-minikanren.txt")))
          (checksum . "ff9eca58487ec393fc2d8580e5d1aafedcd20808")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . (("base" #:version "6.3") "r6rs-lib"))
          (dependency-names . ("base" "r6rs-lib"))
          (description
           .
           "A racket port of the version of minikanren from the artifact of the ICFP 2017 Pearl, A Unified Approach to Solving Seven Programming Problems by William E. Byrd, Michael Ballantyne, Gregory Rosenblatt, and Matthew Might. Includes evalo-optimized.")
          (implies . ())
          (last-checked . 1557339614)
          (last-edit . 1508085965)
          (last-updated . 1524178414)
          (modules
           .
           ((lib "icfp2017-minikanren/mk/test-type-infer.rkt")
            (lib "icfp2017-minikanren/mk/test-all.rkt")
            (lib "icfp2017-minikanren/mk/test-quines.rkt")
            (lib "icfp2017-minikanren/intro-examples.rkt")
            (lib "icfp2017-minikanren/mk/test-arithmetic.rkt")
            (lib "icfp2017-minikanren/mk/type-infer.rkt")
            (lib "icfp2017-minikanren/mk/mk.rkt")
            (lib "icfp2017-minikanren/evalo-standard.rkt")
            (lib "icfp2017-minikanren/mk/test-check.rkt")
            (lib "icfp2017-minikanren/evalo-scoping.rkt")
            (lib
             "icfp2017-minikanren/racket-scheme-compat/specialized-scheme-compat.rkt")
            (lib "icfp2017-minikanren/evalo-small.rkt")
            (lib "icfp2017-minikanren/evalo-optimized.rkt")
            (lib "icfp2017-minikanren/mk/evalo.rkt")
            (lib "icfp2017-minikanren/mk/test-interp.rkt")
            (lib "icfp2017-minikanren/mk/arithmetic.rkt")
            (lib "icfp2017-minikanren/racket-scheme-compat/lang/reader.rkt")))
          (name . "icfp2017-minikanren")
          (nix-sha256
           .
           "0gs430q9r6y1gyla08xdsxlbxav6273hlij32gyfahc892ca7jbv")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:alexander@knauth.org . #t)
                   (author:greg.weiqi@gmail.com . #t)
                   (logic . #t)
                   (ring:2 . #t)))
          (source
           .
           "git://github.com/AlexKnauth/icfp2017-artifact-auas7pp?path=src#racket")
          (tags . ("logic"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "ff9eca58487ec393fc2d8580e5d1aafedcd20808")
                          (source
                           .
                           "git://github.com/AlexKnauth/icfp2017-artifact-auas7pp?path=src#racket")
                          (source_url
                           .
                           "http://github.com/AlexKnauth/icfp2017-artifact-auas7pp/tree/master?path=src#racket")))))))
 ("icns"
  .
  #hasheq((author . "philip@philipmcgrath.com")
          (authors . ("philip@philipmcgrath.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "icns" "doc/icns@icns/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/icns.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/icns.txt")))
          (checksum . "91c3e4628845ccc6217b4f47b0bbc175b859c682")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "pict-lib"
            "scribble-lib"
            "racket-doc"
            "rackunit-lib"
            "pict-doc"))
          (dependency-names
           .
           ("base"
            "pict-lib"
            "scribble-lib"
            "racket-doc"
            "rackunit-lib"
            "pict-doc"))
          (description
           .
           "A Racket library for working with Apple's .icns icon file format.")
          (implies . ())
          (last-checked . 1557339614)
          (last-edit . 1534465714)
          (last-updated . 1543391012)
          (modules
           .
           ((lib "icns/scribblings/icns.scrbl") (lib "icns/main.rkt")))
          (name . "icns")
          (nix-sha256
           .
           "1kgd8z8rk2sgf1a5q4g9xnb99pw6jgs11m8k5r6lv82f2aixa0gn")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:philip@philipmcgrath.com . #t)
                   (graphics . #t)
                   (images . #t)
                   (pict . #t)
                   (ring:2 . #t)))
          (source . "https://github.com/LiberalArtist/icns.git")
          (tags . ("graphics" "images" "pict"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "91c3e4628845ccc6217b4f47b0bbc175b859c682")
                          (source
                           .
                           "https://github.com/LiberalArtist/icns.git")
                          (source_url
                           .
                           "https://github.com/LiberalArtist/icns.git")))))))
 ("icons"
  .
  #hash((author . "ntoronto@racket-lang.org")
        (checksum . "eeb4e49de168865c03b4351a907425f9c1e39078")
        (dependencies . ("base"))
        (dependency-names . ("base"))
        (description . "ntoronto@racket-lang.org")
        (modules . ())
        (name . "icons")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/icons.zip")
        (tags . ())))
 ("identikon"
  .
  #hasheq((author . "info@v25media.com")
          (authors . ("info@v25media.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "identikon" "doc/identikon@identikon/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/identikon.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/identikon.txt")))
          (checksum . "197439f4e7022351ddc4f0ce47241452ed7e5dc7")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("draw-lib"
            "gui-lib"
            "base"
            "sugar"
            "css-tools"
            "htdp-lib"
            "quickcheck"
            "rackunit-lib"
            "racket-doc"
            "scribble-lib"))
          (dependency-names
           .
           ("draw-lib"
            "gui-lib"
            "base"
            "sugar"
            "css-tools"
            "htdp-lib"
            "quickcheck"
            "rackunit-lib"
            "racket-doc"
            "scribble-lib"))
          (description . "Tiny framework for generating identicons")
          (implies . ())
          (last-checked . 1557339614)
          (last-edit . 1444010690)
          (last-updated . 1505183360)
          (modules
           .
           ((lib "identikon/rules/angles2.rkt")
            (lib "identikon/rules/stars.rkt")
            (lib "identikon/transforms.rkt")
            (lib "identikon/rules/default.rkt")
            (lib "identikon/rules/circles.rkt")
            (lib "identikon/main.rkt")
            (lib "identikon/rules/qbert.rkt")
            (lib "identikon/utils.rkt")
            (lib "identikon/rules/angles.rkt")
            (lib "identikon/rules/nineblock.rkt")
            (lib "identikon/rules/rings.rkt")
            (lib "identikon/scribblings/identikon.scrbl")
            (lib "identikon/rules/squares.rkt")))
          (name . "identikon")
          (nix-sha256
           .
           "001kw734ak6igv1x4svrjz0yaws5jh53q9m4a7nwy6k7jq0jxq9m")
          (ring . 1)
          (search-terms
           .
           #hasheq((2htdp . #t)
                   (:build-success: . #t)
                   (:docs: . #t)
                   (author:info@v25media.com . #t)
                   (graphics . #t)
                   (identicon . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/DarrenN/identikon.git")
          (tags . ("2htdp" "graphics" "identicon"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "197439f4e7022351ddc4f0ce47241452ed7e5dc7")
                          (source . "git://github.com/DarrenN/identikon.git")
                          (source_url
                           .
                           "http://github.com/DarrenN/identikon.git/tree/master")))
                 ("1.0.1"
                  .
                  #hasheq((checksum . "")
                          (source
                           .
                           "https://github.com/DarrenN/identikon/tree/1.0.1")
                          (source_url
                           .
                           "https://github.com/DarrenN/identikon/tree/1.0.1")))))))
 ("iloveck101"
  .
  #hasheq((author . "Dendoh@gmail.com")
          (authors . ("Dendoh@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . "server/built/fail/iloveck101.txt")
                 (min-failure-log . #f)
                 (success-log . #f)
                 (test-failure-log . #f)
                 (test-success-log . #f)))
          (checksum . "eef2eface1d4882e12b298429ed8739af67b9d16")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ())
          (dependency-names . ())
          (description
           .
           "A command-line tool to download images from ck101 threads.")
          (implies . ())
          (last-checked . 1557339614)
          (last-edit . 1387107040)
          (last-updated . 1502816135)
          (modules . ((lib "iloveck101/iloveck101.rkt")))
          (name . "iloveck101")
          (nix-sha256
           .
           "06rh64c3agwpdp1diwvp1x2b8ar8ql54488ijimd7560fnsqfh5c")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-fail: . #t)
                   (author:Dendoh@gmail.com . #t)
                   (ck101 . #t)
                   (ring:1 . #t)
                   (web . #t)))
          (source . "github://github.com/Domon/iloveck101/master")
          (tags . ("ck101" "web"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "eef2eface1d4882e12b298429ed8739af67b9d16")
                          (source
                           .
                           "github://github.com/Domon/iloveck101/master")
                          (source_url
                           .
                           "http://github.com/Domon/iloveck101/tree/master")))))))
 ("images"
  .
  #hash((author . "ntoronto@racket-lang.org")
        (checksum . "c0ddbc44a9760aff9cd1ade13d9fa364ae71c896")
        (dependencies . ("images-lib" "images-gui-lib" "images-doc"))
        (dependency-names . ("images-lib" "images-gui-lib" "images-doc"))
        (description . "ntoronto@racket-lang.org")
        (modules . ())
        (name . "images")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/images.zip")
        (tags . ())))
 ("images-doc"
  .
  #hash((author . "ntoronto@racket-lang.org")
        (checksum . "57bd684325371a0cd5892f7f153abd1d88383aa1")
        (dependencies
         .
         ("base"
          "images-lib"
          "draw-doc"
          "gui-doc"
          "pict-doc"
          "slideshow-doc"
          "typed-racket-doc"
          "draw-lib"
          "gui-lib"
          "pict-lib"
          "racket-doc"
          "scribble-lib"
          "slideshow-lib"
          "typed-racket-lib"))
        (dependency-names
         .
         ("base"
          "images-lib"
          "draw-doc"
          "gui-doc"
          "pict-doc"
          "slideshow-doc"
          "typed-racket-doc"
          "draw-lib"
          "gui-lib"
          "pict-lib"
          "racket-doc"
          "scribble-lib"
          "slideshow-lib"
          "typed-racket-lib"))
        (description . "ntoronto@racket-lang.org")
        (modules . ())
        (name . "images-doc")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/images-doc.zip")
        (tags . ())))
 ("images-gui-lib"
  .
  #hash((author . "ntoronto@racket-lang.org")
        (checksum . "aa9bd3460b81ce9186289f26dd6328ee48f97601")
        (dependencies . ("base" "draw-lib" "gui-lib" "string-constants-lib"))
        (dependency-names
         .
         ("base" "draw-lib" "gui-lib" "string-constants-lib"))
        (description . "ntoronto@racket-lang.org")
        (modules . ())
        (name . "images-gui-lib")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/images-gui-lib.zip")
        (tags . ())))
 ("images-lib"
  .
  #hash((author . "ntoronto@racket-lang.org")
        (checksum . "c62337be2226a3a8d8b8196154b112da57a91fa7")
        (dependencies . ("base" "draw-lib" "typed-racket-lib" "scribble-lib"))
        (dependency-names
         .
         ("base" "draw-lib" "typed-racket-lib" "scribble-lib"))
        (description . "ntoronto@racket-lang.org")
        (modules . ())
        (name . "images-lib")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/images-lib.zip")
        (tags . ())))
 ("images-test"
  .
  #hash((author . "ntoronto@racket-lang.org")
        (checksum . "ef9f18004722a5defe0b96c22f35b9e61fd2132b")
        (dependencies
         .
         ("base" "images-lib" "pict-lib" "slideshow-lib" "racket-doc"))
        (dependency-names
         .
         ("base" "images-lib" "pict-lib" "slideshow-lib" "racket-doc"))
        (description . "ntoronto@racket-lang.org")
        (modules . ())
        (name . "images-test")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/images-test.zip")
        (tags . ())))
 ("impl-excl"
  .
  #hasheq((author . "pcn@cs.umd.edu")
          (authors . ("pcn@cs.umd.edu"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/impl-excl.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/impl-excl.txt")))
          (checksum . "2be491f8acb71ec6115d96070382e1f5f2d3a2a0")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base" "typed-racket-lib" "typed-racket-more" "set-extras"))
          (dependency-names
           .
           ("base" "typed-racket-lib" "typed-racket-more" "set-extras"))
          (description
           .
           "Pre-compute procedures for fast checking of transitive implication and exclusion between simple predicates")
          (implies . ())
          (last-checked . 1557339615)
          (last-edit . 1509647973)
          (last-updated . 1509652940)
          (modules . ((lib "impl-excl/main.rkt") (lib "impl-excl/tests.rkt")))
          (name . "impl-excl")
          (nix-sha256
           .
           "11dd1y491ibwhxz9hbn0xrnmfpjsy12dj4p9gw36hd3w8bws56my")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:pcn@cs.umd.edu . #t)
                   (logic . #t)
                   (ring:2 . #t)))
          (source
           .
           "https://github.com/philnguyen/impl-excl.git?path=impl-excl")
          (tags . ("logic"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "2be491f8acb71ec6115d96070382e1f5f2d3a2a0")
                          (source
                           .
                           "https://github.com/philnguyen/impl-excl.git?path=impl-excl")
                          (source_url
                           .
                           "https://github.com/philnguyen/impl-excl.git?path=impl-excl")))))))
 ("in-new-directory"
  .
  #hasheq((author . "samth@ccs.neu.edu")
          (authors . ("samth@ccs.neu.edu"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "in-new-directory"
                    "doc/in-new-directory@in-new-directory/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/in-new-directory.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/in-new-directory.txt")))
          (checksum . "f7020748288df28ed8371a521781a5d0986582a6")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "compatibility-lib" "scribble-lib"))
          (dependency-names . ("base" "compatibility-lib" "scribble-lib"))
          (description . "Run things in new directories")
          (implies . ())
          (last-checked . 1557339615)
          (last-edit . 1405264770)
          (last-updated . 1502816137)
          (modules
           .
           ((lib "file/in-new-directory.rkt")
            (lib "file/in-new-directory.scrbl")))
          (name . "in-new-directory")
          (nix-sha256
           .
           "0jyaz7gpi3is016xzvy9xvlaapdkwpxqpldsj045hbhhcb2jkmjl")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:samth@ccs.neu.edu . #t)
                   (ring:1 . #t)
                   (testing . #t)))
          (source . "git://github.com/samth/in-new-directory")
          (tags . ("testing"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "f7020748288df28ed8371a521781a5d0986582a6")
                          (source . "git://github.com/samth/in-new-directory")
                          (source_url
                           .
                           "http://github.com/samth/in-new-directory/tree/master")))))))
 ("inexact-number-lang"
  .
  #hasheq((author . "alexander@knauth.org")
          (authors . ("alexander@knauth.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "inexact-number-lang"
                    "doc/inexact-number-lang@inexact-number-lang/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log
                  .
                  "server/built/install/inexact-number-lang.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/inexact-number-lang.txt")))
          (checksum . "b7821d0871a698af4c3833a7f8e2b49e3625eb4a")
          (checksum-error . #f)
          (conflicts . ())
          (date-added . 1548025992)
          (dependencies . ("base" "rackunit-lib" "scribble-lib" "racket-doc"))
          (dependency-names
           .
           ("base" "rackunit-lib" "scribble-lib" "racket-doc"))
          (description
           .
           "A lang-extension that reads every number as inexact")
          (implies . ())
          (last-checked . 1557339615)
          (last-edit . 1548025992)
          (last-updated . 1548053902)
          (modules
           .
           ((lib "inexact-number/scribblings/inexact-number-lang.scrbl")
            (lib "inexact-number/lang/readtable.rkt")
            (lib "inexact-number/lang/reader.rkt")
            (lib "inexact-number/test/inexact-number-racket.rkt")))
          (name . "inexact-number-lang")
          (nix-sha256
           .
           "0xlj9fc67h9zzhrcj1vr2lbzwdalc42yp40znr3mzc4cg5201pbi")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:alexander@knauth.org . #t)
                   (lang-extension . #t)
                   (ring:2 . #t)))
          (source . "https://github.com/AlexKnauth/inexact-number-lang.git")
          (tags . ("lang-extension"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "b7821d0871a698af4c3833a7f8e2b49e3625eb4a")
                          (source
                           .
                           "https://github.com/AlexKnauth/inexact-number-lang.git")
                          (source_url
                           .
                           "https://github.com/AlexKnauth/inexact-number-lang.git")))))))
 ("infix"
  .
  #hasheq((author . "jensaxel@soegaard.net")
          (authors . ("jensaxel@soegaard.net"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "infix-manual"
                    "doc/infix-manual@infix/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/infix.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/infix.txt")))
          (checksum . "3f7998e509f201f78eb986de0f09e0542a429ad0")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "parser-tools-lib"
            "scheme-lib"
            "at-exp-lib"
            "rackunit-lib"
            "scribble-lib"
            "racket-doc"
            "scribble-doc"))
          (dependency-names
           .
           ("base"
            "parser-tools-lib"
            "scheme-lib"
            "at-exp-lib"
            "rackunit-lib"
            "scribble-lib"
            "racket-doc"
            "scribble-doc"))
          (description . "Infix Expressions")
          (implies . ())
          (last-checked . 1557339615)
          (last-edit . 1429983020)
          (last-updated . 1513624529)
          (modules
           .
           ((lib "infix/scribblings/while.rkt")
            (lib "infix/parameter.rkt")
            (lib "infix/scribblings/util.rkt")
            (lib "infix/main.rkt")
            (lib "infix/tests/test-dollar.rkt")
            (lib "infix/tests/example.rkt")
            (lib "infix/parser.rkt")
            (lib "infix/scribblings/infix-manual.scrbl")
            (lib "infix/parse-string-lexeme.rkt")))
          (name . "infix")
          (nix-sha256
           .
           "14wg4dkv1wr3n3llf1fvshdm1fmnn0yjl39yqq7i1ja4ana81ry1")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:jensaxel@soegaard.net . #t)
                   (infix . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/soegaard/infix")
          (tags . ("infix"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "3f7998e509f201f78eb986de0f09e0542a429ad0")
                          (source . "git://github.com/soegaard/infix")
                          (source_url
                           .
                           "http://github.com/soegaard/infix/tree/master")))))))
 ("infix-syntax"
  .
  #hasheq((author . "mrmyers.random.suffix@gmail.com")
          (authors . ("mrmyers.random.suffix@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "infix-syntax"
                    "doc/infix-syntax@infix-syntax/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/infix-syntax.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/infix-syntax.txt")))
          (checksum . "8886395e31dc0b5d0db3a77a75255df15492806c")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "rackunit-lib" "scribble-lib" "racket-doc"))
          (dependency-names
           .
           ("base" "rackunit-lib" "scribble-lib" "racket-doc"))
          (description . "Expansion-time parsing of infix expressions.")
          (implies . ())
          (last-checked . 1557339615)
          (last-edit . 1505083871)
          (last-updated . 1537855041)
          (modules
           .
           ((lib "infix-syntax/private/operator/id-tools.rkt")
            (lib "infix-syntax/test/core/private/stx.rkt")
            (lib "infix-syntax/scribblings/infix-syntax.scrbl")
            (lib "infix-syntax/private/core.rkt")
            (lib "infix-syntax/private/core/parse.rkt")
            (lib "infix-syntax/test/core/private/util.rkt")
            (lib "infix-syntax/test/operator/private/stx.rkt")
            (lib "infix-syntax/test/core/base-test.rkt")
            (lib "infix-syntax/test/core/op-parse.rkt")
            (lib "infix-syntax/private/reprovide.rkt")
            (lib "infix-syntax/private/operator/make.rkt")
            (lib "infix-syntax/test/operator/private/macro.rkt")
            (lib "infix-syntax/main.rkt")
            (lib "infix-macro/main.rkt")
            (lib "infix-syntax/private/infix/token.rkt")
            (lib "infix-syntax/test/core/private/base.rkt")
            (lib "infix-syntax/test/scratch/scratch-test.rkt")
            (lib "infix-syntax/private/core/scope.rkt")
            (lib "infix-syntax/private/operator.rkt")
            (lib "infix-syntax/test/check.rkt")
            (lib "infix-syntax/private/infix.rkt")
            (lib "infix-syntax/private/core/props.rkt")
            (lib "infix-syntax/private/infix/sugar.rkt")
            (lib "infix-syntax/test/operator/op-proc.rkt")
            (lib "infix-syntax/test/core/private/macro.rkt")
            (lib "infix-syntax/private/operator/sugar.rkt")
            (lib "infix-syntax/test/operator/parse.rkt")
            (lib "infix-syntax/test/operator/id-test.rkt")
            (lib "infix-syntax/test/core/props.rkt")
            (lib "infix-syntax/private/operator/util.rkt")))
          (name . "infix-syntax")
          (nix-sha256
           .
           "075g3g2rs0wyc0iy1jjvl2yx2bll7a0xppc9wv2w944hh5r9x2kh")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:mrmyers.random.suffix@gmail.com . #t)
                   (ring:1 . #t)
                   (syntax . #t)))
          (source . "https://github.com/mromyers/infix-syntax.git")
          (tags . ("syntax"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "8886395e31dc0b5d0db3a77a75255df15492806c")
                          (source
                           .
                           "https://github.com/mromyers/infix-syntax.git")
                          (source_url
                           .
                           "https://github.com/mromyers/infix-syntax.git")))))))
 ("interactive-syntax"
  .
  #hasheq((author . "leif@leifandersen.net")
          (authors . ("leif@leifandersen.net"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . "server/built/fail/interactive-syntax.txt")
                 (min-failure-log . #f)
                 (success-log . #f)
                 (test-failure-log . #f)
                 (test-success-log . #f)))
          (checksum . "7f5553cf3a525f7a3a2b242dcde19b67c4bd4fc1")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           (("base" "7.1")
            "draw-lib"
            "data-lib"
            "drracket-plugin-lib"
            "gui-lib"
            "images-lib"
            "math-lib"
            "syntax-color-lib"
            "wxme-lib"
            "scribble-lib"
            "racket-doc"))
          (dependency-names
           .
           ("base"
            "draw-lib"
            "data-lib"
            "drracket-plugin-lib"
            "gui-lib"
            "images-lib"
            "math-lib"
            "syntax-color-lib"
            "wxme-lib"
            "scribble-lib"
            "racket-doc"))
          (description . "(Early) Prototype for Interactive Syntax")
          (implies . ())
          (last-checked . 1557339615)
          (last-edit . 1545248754)
          (last-updated . 1555617877)
          (modules
           .
           ((lib "editor/private/context-text.rkt")
            (lib "editor/test.rkt")
            (lib "editor/examples/matrix.rkt")
            (lib "editor/private/editor.rkt")
            (lib "editor/private/stdlib.rkt")
            (lib "editor/private/editselect.rkt")
            (lib "editor/private/lang.rkt")
            (lib "editor/base.rkt")
            (lib "editor/private/list.rkt")
            (lib "editor/private/log.rkt")
            (lib "editor/test/raco.rkt")
            (lib "editor/private/read-editor.rkt")
            (lib "editor/private/serialize.rkt")
            (lib "editor/main.rkt")
            (lib "editor/private/surrogate-base.rkt")
            (lib "editor/private/event.rkt")
            (lib "editor/private/context.rkt")
            (lib "editor/private/background.rkt")
            (lib "editor/lang.rkt")
            (lib "editor/private/surrogate.rkt")))
          (name . "interactive-syntax")
          (nix-sha256
           .
           "0lwqffhas2s93jhsmllcai3s86p4s1kn2087gzky4xpgcsjg50vq")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-fail: . #t)
                   (:no-tag: . #t)
                   (author:leif@leifandersen.net . #t)
                   (ring:2 . #t)))
          (source . "https://github.com/videolang/interactive-syntax.git")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "7f5553cf3a525f7a3a2b242dcde19b67c4bd4fc1")
                          (source
                           .
                           "https://github.com/videolang/interactive-syntax.git")
                          (source_url
                           .
                           "https://github.com/videolang/interactive-syntax.git")))))))
 ("intern"
  .
  #hasheq((author . "pcn@cs.umd.edu")
          (authors . ("pcn@cs.umd.edu"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/intern.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/intern.txt")))
          (checksum . "e2b46f803fe9d83368bde168fca8559f1210cfe3")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "typed-racket-lib" "typed-racket-more"))
          (dependency-names . ("base" "typed-racket-lib" "typed-racket-more"))
          (description
           .
           "Type-safe interning of datatype in Typed Racket as a new sub-type of Index")
          (implies . ())
          (last-checked . 1557339616)
          (last-edit . 1492825852)
          (last-updated . 1552453475)
          (modules . ((lib "intern/main.rkt") (lib "intern/tests.rkt")))
          (name . "intern")
          (nix-sha256
           .
           "04v26jn50kapqyi044drwlrhq6h50nn9lzygmrpdkv2ynq8k7pm6")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:pcn@cs.umd.edu . #t)
                   (ring:1 . #t)
                   (typed-racket . #t)))
          (source . "git://github.com/philnguyen/intern?path=intern")
          (tags . ("typed-racket"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "e2b46f803fe9d83368bde168fca8559f1210cfe3")
                          (source
                           .
                           "git://github.com/philnguyen/intern?path=intern")
                          (source_url
                           .
                           "http://github.com/philnguyen/intern/tree/master?path=intern")))))))
 ("io"
  .
  #hasheq((author . "samth@ccs.neu.edu")
          (authors . ("samth@ccs.neu.edu"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/io.txt")
                 (test-failure-log . "server/built/test-fail/io.txt")
                 (test-success-log . #f)))
          (checksum . "db8413c802782bfc3de706cc1cb8dab6fe4f941e")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("srfi-lite-lib"
            "base"
            "in-new-directory"
            "compatibility-lib"
            "rackunit-gui"
            "rackunit-lib"))
          (dependency-names
           .
           ("srfi-lite-lib"
            "base"
            "in-new-directory"
            "compatibility-lib"
            "rackunit-gui"
            "rackunit-lib"))
          (description . "I/O utilities from dherman's io.plt Planet package")
          (implies . ())
          (last-checked . 1557339616)
          (last-edit . 1503512193)
          (last-updated . 1510358514)
          (modules
           .
           ((lib "io/private/tests/file.rkt")
            (lib "io/private/tests/tests.rkt")
            (lib "io/main.rkt")
            (lib "io/file.rkt")
            (lib "io/private/tests/io.rkt")))
          (name . "io")
          (nix-sha256
           .
           "0m83nsi7ppviwc5yhfy0wmrwmcbvhb1f0cf4wgvgif9sa3k09nbg")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:samth@ccs.neu.edu . #t)
                   (io . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/samth/io.rkt")
          (tags . ("io"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "db8413c802782bfc3de706cc1cb8dab6fe4f941e")
                          (source . "git://github.com/samth/io.rkt")
                          (source_url
                           .
                           "http://github.com/samth/io.rkt/tree/master")))))))
 ("ipoe"
  .
  #hasheq((author . "types@ccs.neu.edu")
          (authors . ("types@ccs.neu.edu"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "ipoe" "doc/ipoe@ipoe/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/ipoe.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/ipoe.txt")))
          (checksum . "afdbc3baf2bcb8b7e09a23d8e656c6b69a61f3ad")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "basedir"
            "db-lib"
            "html-lib"
            "html-parsing"
            "levenshtein"
            "rackunit-lib"
            "readline-lib"
            "reprovide-lang"
            "sxml"
            "basedir"
            "net-doc"
            "racket-doc"
            "rackunit-abbrevs"
            "rackunit-lib"
            "scribble-doc"
            "scribble-lib"))
          (dependency-names
           .
           ("base"
            "basedir"
            "db-lib"
            "html-lib"
            "html-parsing"
            "levenshtein"
            "rackunit-lib"
            "readline-lib"
            "reprovide-lang"
            "sxml"
            "basedir"
            "net-doc"
            "racket-doc"
            "rackunit-abbrevs"
            "rackunit-lib"
            "scribble-doc"
            "scribble-lib"))
          (description . "interactive poetry editor")
          (implies . ())
          (last-checked . 1557339616)
          (last-edit . 1483520067)
          (last-updated . 1552755847)
          (modules
           .
           ((lib "ipoe/cinquain/lang/reader.rkt")
            (lib "ipoe/docs/ipoe-define.scrbl")
            (lib "ipoe/main.rkt")
            (lib "ipoe/tanaga/lang/reader.rkt")
            (lib "ipoe/private/poem.rkt")
            (lib "ipoe/scrape.rkt")
            (lib "ipoe/private/util/check-os.rkt")
            (lib "ipoe/private/command/update.rkt")
            (lib "ipoe/private/ui.rkt")
            (lib "ipoe/private/parameters.rkt")
            (lib "ipoe/villanelle/lang/reader.rkt")
            (lib "ipoe/lang/reader.rkt")
            (lib "ipoe/free-verse/lang/reader.rkt")
            (lib "ipoe/english.rkt")
            (lib "ipoe/docs/ipoe-use.scrbl")
            (lib "ipoe/private/command/common.rkt")
            (lib "ipoe/docs/ipoe-externals.scrbl")
            (lib "ipoe/sextilla/lang/reader.rkt")
            (lib "ipoe/private/poem/poetic-license.rkt")
            (lib "ipoe/private/command.rkt")
            (lib "ipoe/private/scrape/scrape-words.rkt")
            (lib "ipoe/private/command/show.rkt")
            (lib "ipoe/private/nlp/number.rkt")
            (lib "ipoe/private/db.rkt")
            (lib "ipoe/private/command/dbshell.rkt")
            (lib "ipoe/limerick/lang/reader.rkt")
            (lib "ipoe/docs/ipoe.scrbl")
            (lib "ipoe/italian-sonnet/lang/reader.rkt")
            (lib "ipoe/private/util/sequence.rkt")
            (lib "ipoe/private/suggest/spelling.rkt")
            (lib "ipoe/english-sonnet/lang/reader.rkt")
            (lib "ipoe/private/scrape.rkt")
            (lib "ipoe/poetic-form.rkt")
            (lib "ipoe/private/suggest.rkt")
            (lib "ipoe/private/scrape/scrape-util.rkt")
            (lib "ipoe/private/util/windows-readline.rkt")
            (lib "ipoe/docs/ipoe-api.scrbl")
            (lib "ipoe/haiku/lang/reader.rkt")
            (lib "ipoe/private/command/remove.rkt")
            (lib "ipoe/private/util/logging.rkt")
            (lib "ipoe/private/poem/spellcheck.rkt")
            (lib "ipoe/private/command/init.rkt")
            (lib "ipoe/private/util/string.rkt")
            (lib "ipoe/private/nlp/infer.rkt")
            (lib "ipoe/private/poem/rhymecheck.rkt")
            (lib "ipoe/sestina/lang/reader.rkt")
            (lib "ipoe/couplet/lang/reader.rkt")
            (lib "ipoe/private/scrape/scrape-rhymes.rkt")
            (lib "ipoe/private/nlp/parse.rkt")
            (lib "ipoe/private/poem/form.rkt")
            (lib "ipoe/private/command/check.rkt")
            (lib "ipoe/quaternion/lang/reader.rkt")
            (lib "ipoe/private/util/check-print.rkt")
            (lib "ipoe/private/db/migrate.rkt")
            (lib "ipoe/clerihew/lang/reader.rkt")
            (lib "ipoe/rondelet/lang/reader.rkt")
            (lib "ipoe/private/command/new.rkt")
            (lib "ipoe/tercet/lang/reader.rkt")))
          (name . "ipoe")
          (nix-sha256
           .
           "1q3ksarp0h1gbfqyqfbk2xay63z7nv96l3x44xz0lp6lkzcf5g49")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:types@ccs.neu.edu . #t)
                   (lang . #t)
                   (language . #t)
                   (poetry . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/bennn/ipoe?path=ipoe")
          (tags . ("lang" "language" "poetry"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "afdbc3baf2bcb8b7e09a23d8e656c6b69a61f3ad")
                          (source . "git://github.com/bennn/ipoe?path=ipoe")
                          (source_url
                           .
                           "http://github.com/bennn/ipoe/tree/master?path=ipoe")))))))
 ("iracket"
  .
  #hasheq((author . "ryanc@racket-lang.org")
          (authors . ("ryanc@racket-lang.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/iracket.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/iracket.txt")))
          (checksum . "27b83b439f4fff8b73c728742f97f7a7b2c1cd66")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "zeromq-r-lib"
            "sandbox-lib"
            "libuuid"
            "sha"
            "racket-doc"
            "scribble-lib"))
          (dependency-names
           .
           ("base"
            "zeromq-r-lib"
            "sandbox-lib"
            "libuuid"
            "sha"
            "racket-doc"
            "scribble-lib"))
          (description . "IPython/Jupyter kernel for Racket")
          (implies . ())
          (last-checked . 1557339616)
          (last-edit . 1501792829)
          (last-updated . 1544021110)
          (modules
           .
           ((lib "iracket/private/ipython-services.rkt")
            (lib "iracket/private/iracket-connect.rkt")
            (lib "iracket/iracket.rkt")
            (lib "iracket/install.rkt")
            (lib "iracket/private/iracket-complete.rkt")
            (lib "iracket/private/iracket-comm-info.rkt")
            (lib "iracket/private/iracket-kernel-info.rkt")
            (lib "iracket/private/iracket-execute.rkt")
            (lib "iracket/private/ipython.rkt")
            (lib "iracket/private/ipython-message.rkt")))
          (name . "iracket")
          (nix-sha256
           .
           "08y7xmrz5ydi6jqy19gyggsaj7nkx5pp06ln1nr0za0dkmr3p2s3")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:no-tag: . #t)
                   (author:ryanc@racket-lang.org . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/rmculpepper/iracket")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "27b83b439f4fff8b73c728742f97f7a7b2c1cd66")
                          (source . "git://github.com/rmculpepper/iracket")
                          (source_url
                           .
                           "http://github.com/rmculpepper/iracket/tree/master")))))))
 ("irc"
  .
  #hasheq((author . "schuster@ccs.neu.edu")
          (authors . ("schuster@ccs.neu.edu"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "irc" "doc/irc@irc/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/irc.txt")
                 (test-failure-log . "server/built/test-fail/irc.txt")
                 (test-success-log . #f)))
          (checksum . "50637fdc83da6c415b7ae26683a56d394c9ffe61")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "racket-doc" "rackunit-lib" "scribble-lib"))
          (dependency-names
           .
           ("base" "racket-doc" "rackunit-lib" "scribble-lib"))
          (description . "An IRC client library.")
          (implies . ())
          (last-checked . 1557339616)
          (last-edit . 1495646361)
          (last-updated . 1526865798)
          (modules
           .
           ((lib "irc/examples/echobot.rkt")
            (lib "irc/examples/disconnect-test.rkt")
            (lib "irc/private/numeric-replies.rkt")
            (lib "irc/irc.scrbl")
            (lib "irc/main.rkt")
            (lib "irc/ctcp.rkt")))
          (name . "irc")
          (nix-sha256
           .
           "01j1chmaka78jl2788bqa9w52s4siynv9cbr0l6g07hivpylxfb5")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:schuster@ccs.neu.edu . #t)
                   (irc . #t)
                   (net . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/schuster/racket-irc")
          (tags . ("irc" "net"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "50637fdc83da6c415b7ae26683a56d394c9ffe61")
                          (source . "git://github.com/schuster/racket-irc")
                          (source_url
                           .
                           "http://github.com/schuster/racket-irc/tree/master")))))))
 ("irc-client"
  .
  #hasheq((author . "lexi.lambda@gmail.com")
          (authors . ("lexi.lambda@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "irc-client"
                    "doc/irc-client@irc-client/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/irc-client.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/irc-client.txt")))
          (checksum . "dc3958adf0d8e7a8bf34820cb7bc6630eb18d622")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "irc"
            "typed-racket-lib"
            "typed-racket-more"
            "racket-doc"
            "scribble-lib"
            "typed-racket-doc"))
          (dependency-names
           .
           ("base"
            "irc"
            "typed-racket-lib"
            "typed-racket-more"
            "racket-doc"
            "scribble-lib"
            "typed-racket-doc"))
          (description
           .
           "A higher-level, typed wrapper around the irc package")
          (implies . ("irc"))
          (last-checked . 1557339616)
          (last-edit . 1422686391)
          (last-updated . 1527781442)
          (modules
           .
           ((lib "irc-client/scribblings/irc-client.scrbl")
            (lib "irc-client/private/typed/irc.rkt")
            (lib "irc-client/main.rkt")))
          (name . "irc-client")
          (nix-sha256
           .
           "06xvmf5p7vliy6cl5zyqif8dl2mvhwqkz94cd35n07rkfsrsxfzr")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:lexi.lambda@gmail.com . #t)
                   (irc . #t)
                   (net . #t)
                   (ring:1 . #t)
                   (typed-racket . #t)))
          (source . "git://github.com/lexi-lambda/racket-irc-client")
          (tags . ("irc" "net" "typed-racket"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "dc3958adf0d8e7a8bf34820cb7bc6630eb18d622")
                          (source
                           .
                           "git://github.com/lexi-lambda/racket-irc-client")
                          (source_url
                           .
                           "http://github.com/lexi-lambda/racket-irc-client/tree/master")))
                 ("6.1.1"
                  .
                  #hasheq((checksum
                           .
                           "705713d2af18c54d176197873269fc7ce5cc2092")
                          (source
                           .
                           "git://github.com/lexi-lambda/racket-irc-client#v6.1.1")
                          (source_url
                           .
                           "http://github.com/lexi-lambda/racket-irc-client/tree/master#v6.1.1")))))))
 ("iswim"
  .
  #hasheq((author . "jay.mccarthy@gmail.com")
          (authors . ("jay.mccarthy@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/iswim.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/iswim.txt")))
          (checksum . "7d6fe87391475b22828a39b344fd7b983f7018f7")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("draw-lib" "gui-lib" "pict-lib" "base"))
          (dependency-names . ("draw-lib" "gui-lib" "pict-lib" "base"))
          (description . "iswim implementation")
          (implies . ())
          (last-checked . 1557339616)
          (last-edit . 1539820691)
          (last-updated . 1539854057)
          (modules
           .
           ((lib "iswim/main.rkt")
            (lib "iswim/t/lc.rkt")
            (lib "iswim/t/basic.rkt")))
          (name . "iswim")
          (nix-sha256
           .
           "1igzw35qnf279zs18nb03k8gmi85xbri2giw2ld29xr5q7zzmy0a")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:jay.mccarthy@gmail.com . #t)
                   (language . #t)
                   (ring:2 . #t)))
          (source . "https://github.com/jeapostrophe/iswim.git")
          (tags . ("language"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "7d6fe87391475b22828a39b344fd7b983f7018f7")
                          (source
                           .
                           "https://github.com/jeapostrophe/iswim.git")
                          (source_url
                           .
                           "https://github.com/jeapostrophe/iswim.git")))))))
 ("iu-pict"
  .
  #hasheq((author . "david@davidchristiansen.dk")
          (authors . ("david@davidchristiansen.dk"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . "server/built/deps/iu-pict.txt")
                 (docs
                  .
                  (("main" "iu-pict" "doc/iu-pict@iu-pict/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/iu-pict.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/iu-pict.txt")))
          (checksum . "42072a907d65bbfd09077592a20bfb130fc5a35a")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "scribble-lib" "racket-doc"))
          (dependency-names . ("base" "scribble-lib" "racket-doc"))
          (description . "")
          (implies . ())
          (last-checked . 1557339616)
          (last-edit . 1484517979)
          (last-updated . 1502816141)
          (modules
           .
           ((lib "iu-pict/scribblings/iu-pict.scrbl")
            (lib "iu-pict/main.rkt")))
          (name . "iu-pict")
          (nix-sha256
           .
           "105ykgwfi4q9ckbswbb41yk859pflcid4mkayayzpzanpa4vjjw1")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-dep-fail: . #t)
                   (:build-success: . #t)
                   (:docs: . #t)
                   (:no-desc: . #t)
                   (:no-tag: . #t)
                   (author:david@davidchristiansen.dk . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/david-christiansen/iu-pict")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "42072a907d65bbfd09077592a20bfb130fc5a35a")
                          (source
                           .
                           "git://github.com/david-christiansen/iu-pict")
                          (source_url
                           .
                           "http://github.com/david-christiansen/iu-pict/tree/master")))))))
 ("j"
  .
  #hasheq((author . "leo@lwh.jp")
          (authors . ("leo@lwh.jp"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "j" "doc/j@j/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/j.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/j.txt")))
          (checksum . "021c40382f95d1a6dc0b329a152a171465b9bc75")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "data-lib"
            "math-lib"
            "parser-tools-lib"
            "math-doc"
            "racket-doc"
            "rackunit-lib"
            "sandbox-lib"
            "scribble-lib"))
          (dependency-names
           .
           ("base"
            "data-lib"
            "math-lib"
            "parser-tools-lib"
            "math-doc"
            "racket-doc"
            "rackunit-lib"
            "sandbox-lib"
            "scribble-lib"))
          (description
           .
           "Racket implementation of J language and related concepts")
          (implies . ())
          (last-checked . 1557339616)
          (last-edit . 1505821211)
          (last-updated . 1506918580)
          (modules
           .
           ((lib "j/private/sentence.rkt")
            (lib "j/rank/private/frame.rkt")
            (lib "j/private/eval.rkt")
            (lib "j/scribblings/main.scrbl")
            (lib "j/private/bindings.rkt")
            (lib "j/rank/item.rkt")
            (lib "j/private/read.rkt")
            (lib "j/private/vocab/verbs.rkt")
            (lib "j/main.rkt")
            (lib "j/private/module.rkt")
            (lib "j/rank/private/verb.rkt")
            (lib "j/private/vocab/nouns.rkt")
            (lib "j/rank.rkt")
            (lib "j/private/lex.rkt")
            (lib "j/console.rkt")
            (lib "j/private/parameters.rkt")
            (lib "j/private/word.rkt")
            (lib "j/scribblings/j.scrbl")
            (lib "j/rank/main.rkt")
            (lib "j/private/locale.rkt")
            (lib "j/private/vocabulary.rkt")
            (lib "j/lib/nouns.rkt")
            (lib "j/private/parse.rkt")
            (lib "j/private/type.rkt")
            (lib "j/private/vocab/conjunctions.rkt")
            (lib "j/scribblings/number.scrbl")
            (lib "j/obverse.rkt")
            (lib "j/lib/conjunctions.rkt")
            (lib "j/lang/reader.rkt")
            (lib "j/lib/verbs.rkt")
            (lib "j/private/coupla.rkt")
            (lib "j/private/verb.rkt")
            (lib "j/scribblings/rank.scrbl")
            (lib "j/rank/private/noun.rkt")
            (lib "j/rank/base.rkt")
            (lib "j/scribblings/lib.scrbl")
            (lib "j/lib/adverbs.rkt")
            (lib "j/private/vocab/adverbs.rkt")
            (lib "j/customize.rkt")
            (lib "j/private/executor.rkt")
            (lib "j/number.rkt")))
          (name . "j")
          (nix-sha256
           .
           "09k3qma019a7w2awspbbrg2rxdiamvh8bz8hjm4r7bgksmrny5g0")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (array . #t)
                   (author:leo@lwh.jp . #t)
                   (j . #t)
                   (language . #t)
                   (math . #t)
                   (ring:1 . #t)
                   (unstable . #t)))
          (source . "git://github.com/lwhjp/racket-jlang")
          (tags . ("array" "j" "language" "math" "unstable"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "021c40382f95d1a6dc0b329a152a171465b9bc75")
                          (source . "git://github.com/lwhjp/racket-jlang")
                          (source_url
                           .
                           "http://github.com/lwhjp/racket-jlang/tree/master")))))))
 ("jack-ease"
  .
  #hasheq((author . "jackhfirth@gmail.com")
          (authors . ("jackhfirth@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "ease" "doc/ease@jack-ease/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/jack-ease.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/jack-ease.txt")))
          (checksum . "3a7149ded68be348611e346742feac85fca6d74f")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("scribble-lib"
            "base"
            "sweet-exp"
            "lens"
            "fancy-app"
            "rackunit-lib"
            "cover"
            "racket-doc"
            "scribble-lib"
            "doc-coverage"))
          (dependency-names
           .
           ("scribble-lib"
            "base"
            "sweet-exp"
            "lens"
            "fancy-app"
            "rackunit-lib"
            "cover"
            "racket-doc"
            "scribble-lib"
            "doc-coverage"))
          (description
           .
           "Library for easing things between start and stop values fluidly")
          (implies . ())
          (last-checked . 1557339616)
          (last-edit . 1500074753)
          (last-updated . 1502816141)
          (modules
           .
           ((lib "ease/main.scrbl")
            (lib "ease/private/lens.rkt")
            (lib "ease/private/base.rkt")
            (lib "ease/private/invert.rkt")
            (lib "ease/main.rkt")
            (lib "ease/private/main.rkt")
            (lib "ease/private/polynomial.rkt")
            (lib "ease/private/util/doc.rkt")
            (lib "ease/private/lens.scrbl")
            (lib "ease/private/util/scribble-include-no-subsection.rkt")
            (lib "ease/private/polynomial.scrbl")
            (lib "ease/private/tests/doc-coverage.rkt")
            (lib "ease/private/base.scrbl")
            (lib "ease/private/invert.scrbl")))
          (name . "jack-ease")
          (nix-sha256
           .
           "1cq697hfsmq755d759j3lnz72596vz5zhgvl0ydzg5cf01jp8mls")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:jackhfirth@gmail.com . #t)
                   (experimental . #t)
                   (graphics . #t)
                   (personal . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/jackfirth/racket-ease")
          (tags . ("experimental" "graphics" "personal"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "3a7149ded68be348611e346742feac85fca6d74f")
                          (source . "git://github.com/jackfirth/racket-ease")
                          (source_url
                           .
                           "http://github.com/jackfirth/racket-ease/tree/master")))))))
 ("jack-posn"
  .
  #hasheq((author . "jackhfirth@gmail.com")
          (authors . ("jackhfirth@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "posn" "doc/posn@jack-posn/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/jack-posn.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/jack-posn.txt")))
          (checksum . "402ca7d3d5db28b04d82ff825a684c4995dcf355")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("scribble-lib"
            "base"
            "sweet-exp"
            "fancy-app"
            "cover"
            "rackunit-lib"
            "racket-doc"
            "scribble-lib"
            "doc-coverage"))
          (dependency-names
           .
           ("scribble-lib"
            "base"
            "sweet-exp"
            "fancy-app"
            "cover"
            "rackunit-lib"
            "racket-doc"
            "scribble-lib"
            "doc-coverage"))
          (description . "Library for working with points in 2d space")
          (implies . ())
          (last-checked . 1557339616)
          (last-edit . 1500074814)
          (last-updated . 1502816141)
          (modules
           .
           ((lib "posn/private/relative.rkt")
            (lib "posn/private/rotate.scrbl")
            (lib "posn/private/add.rkt")
            (lib "posn/private/main.rkt")
            (lib "posn/private/util/scribble-include-no-subsection.rkt")
            (lib "posn/private/util/doc.rkt")
            (lib "posn/private/degrees.rkt")
            (lib "posn/private/multiply.scrbl")
            (lib "posn/private/scale.rkt")
            (lib "posn/private/scale.scrbl")
            (lib "posn/private/multiply.rkt")
            (lib "posn/private/rotate.rkt")
            (lib "posn/private/add.scrbl")
            (lib "posn/tests/doc-coverage.rkt")
            (lib "posn/main.scrbl")
            (lib "posn/main.rkt")
            (lib "posn/private/base.rkt")
            (lib "posn/private/base.scrbl")
            (lib "posn/private/relative.scrbl")))
          (name . "jack-posn")
          (nix-sha256
           .
           "19npmcxj0ab5kv8f0n9cj8lnkvkxrsj17rpcrcia98ni0xbf3mc8")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:jackhfirth@gmail.com . #t)
                   (data . #t)
                   (experimental . #t)
                   (graphics . #t)
                   (personal . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/jackfirth/racket-posn")
          (tags . ("data" "experimental" "graphics" "personal"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "402ca7d3d5db28b04d82ff825a684c4995dcf355")
                          (source . "git://github.com/jackfirth/racket-posn")
                          (source_url
                           .
                           "http://github.com/jackfirth/racket-posn/tree/master")))))))
 ("jack-scribble-example"
  .
  #hasheq((author . "jackhfirth@gmail.com")
          (authors . ("jackhfirth@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "scribble-example"
                    "doc/scribble-example@jack-scribble-example/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log
                  .
                  "server/built/install/jack-scribble-example.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/jack-scribble-example.txt")))
          (checksum . "aca984f3c07b5030f7f6d8c6c4c03e45254bfe82")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("scribble-lib"
            "base"
            "sweet-exp-lib"
            "reprovide-lang"
            "fancy-app"
            "scribble-doc"
            "rackunit-lib"
            "racket-doc"
            "scribble-lib"
            "doc-coverage"))
          (dependency-names
           .
           ("scribble-lib"
            "base"
            "sweet-exp-lib"
            "reprovide-lang"
            "fancy-app"
            "scribble-doc"
            "rackunit-lib"
            "racket-doc"
            "scribble-lib"
            "doc-coverage"))
          (description
           .
           "Deprecated. Use the built in scribble/example instead.")
          (implies . ())
          (last-checked . 1557339616)
          (last-edit . 1468223203)
          (last-updated . 1502816141)
          (modules
           .
           ((lib
             "scribble-example/private/util/scribble-include-no-subsection.rkt")
            (lib "scribble-example/private/tests/doc-coverage.rkt")
            (lib "scribble-example/private/base.scrbl")
            (lib "scribble-example/main.rkt")
            (lib "scribble-example/private/util/doc.rkt")
            (lib "scribble-example/private/base.rkt")
            (lib "scribble-example/private/main.rkt")
            (lib "scribble-example/main.scrbl")))
          (name . "jack-scribble-example")
          (nix-sha256
           .
           "1mh997mrrvkylxb78chni3c0g18rys6rfgx230qq23xifmqvdrsh")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:jackhfirth@gmail.com . #t)
                   (deprecated . #t)
                   (ring:1 . #t)
                   (scribble . #t)))
          (source . "git://github.com/jackfirth/scribble-example")
          (tags . ("deprecated" "scribble"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "aca984f3c07b5030f7f6d8c6c4c03e45254bfe82")
                          (source
                           .
                           "git://github.com/jackfirth/scribble-example")
                          (source_url
                           .
                           "http://github.com/jackfirth/scribble-example/tree/master")))))))
 ("java"
  .
  #hasheq((author . "clements@racket-lang.org dherman@mozilla.com")
          (authors . ("clements@racket-lang.org" "dherman@mozilla.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "java" "doc/java@java/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/java.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/java.txt")))
          (checksum . "c2d1359b05567fb9352178cedeba2dfc30ddc9ca")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("dherman-struct"
            "io"
            "base"
            "compatibility-lib"
            "parser-tools-lib"
            "srfi-lite-lib"
            "rackunit-lib"
            "racket-doc"
            "scribble-lib"))
          (dependency-names
           .
           ("dherman-struct"
            "io"
            "base"
            "compatibility-lib"
            "parser-tools-lib"
            "srfi-lite-lib"
            "rackunit-lib"
            "racket-doc"
            "scribble-lib"))
          (description
           .
           "A port of David Herman's java.plt PLaneT package, without the PLaneT dependencies.")
          (implies . ())
          (last-checked . 1557339617)
          (last-edit . 1394568871)
          (last-updated . 1502816142)
          (modules
           .
           ((lib "java/path-params.rkt")
            (lib "java/syntax/ast.rkt")
            (lib "java/contract-utils.rkt")
            (lib "java/syntax/lexer.rkt")
            (lib "java/semantics/semantic-object.rkt")
            (lib "java/main.rkt")
            (lib "java/inspector/inspector.rkt")
            (lib "java/syntax/parser.rkt")
            (lib "java/tools/javap.rkt")
            (lib "java/tests/tests.rkt")
            (lib "java/semantics/resolve-binary.rkt")
            (lib "java/semantics/standard-resolver.rkt")
            (lib "java/semantics/utils.rkt")
            (lib "java/syntax/class-file.rkt")
            (lib "java/semantics/resolve-source.rkt")
            (lib "java/semantics/class-resolver.rkt")
            (lib "java/java.scrbl")))
          (name . "java")
          (nix-sha256
           .
           "0vldbmhzc3zjv6gbhbcqdrllan21dp59vjz1hk5xq85dgy0d9f67")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:clements@racket-lang.org . #t)
                   (author:dherman@mozilla.com . #t)
                   (parser . #t)
                   (parsing . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/jbclements/java")
          (tags . ("parser" "parsing"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "c2d1359b05567fb9352178cedeba2dfc30ddc9ca")
                          (source . "git://github.com/jbclements/java")
                          (source_url
                           .
                           "http://github.com/jbclements/java/tree/master")))))))
 ("java-lexer"
  .
  #hasheq((author . "stamourv@racket-lang.org")
          (authors . ("stamourv@racket-lang.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/java-lexer.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/java-lexer.txt")))
          (checksum . "83e12122919d4582d63bea5b051cbeab6ee32c57")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "profj" "scribble-lib"))
          (dependency-names . ("base" "profj" "scribble-lib"))
          (description . "Java syntax highlighting for Scribble.")
          (implies . ())
          (last-checked . 1557339617)
          (last-edit . 1422290537)
          (last-updated . 1502816142)
          (modules
           .
           ((lib "java-lexer/lang/reader.rkt") (lib "java-lexer/main.rkt")))
          (name . "java-lexer")
          (nix-sha256
           .
           "1a5dapfl7bwm2cqxgzlbv65ympgr19rmr530z4nzw0mmfbz2hzrp")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:stamourv@racket-lang.org . #t)
                   (java . #t)
                   (ring:1 . #t)
                   (scribble . #t)))
          (source . "git://github.com/stamourv/java-lexer")
          (tags . ("java" "scribble"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "83e12122919d4582d63bea5b051cbeab6ee32c57")
                          (source . "git://github.com/stamourv/java-lexer")
                          (source_url
                           .
                           "http://github.com/stamourv/java-lexer/tree/master")))))))
 ("java-processing"
  .
  #hasheq((author . "stephen@thoughtstem.com")
          (authors . ("stephen@thoughtstem.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . "server/built/deps/java-processing.txt")
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/java-processing.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/java-processing.txt")))
          (checksum . "8a232dac0405edf13067397364c9dbd702addca6")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("racket-to"))
          (dependency-names . ("racket-to"))
          (description
           .
           "The minimal amount of code necessary to write processing code in DrRacket (so I don't have to switch students to a different IDE in my classes).")
          (implies . ())
          (last-checked . 1557339617)
          (last-edit . 1515359369)
          (last-updated . 1515359369)
          (modules
           .
           ((lib "java-processing/processing-module.rkt")
            (lib "java-processing/main.rkt")))
          (name . "java-processing")
          (nix-sha256
           .
           "10264j04p1jc9ga1rpzr9x338rxbyn53kpknn48nsf5vlqi9s9a2")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-dep-fail: . #t)
                   (:build-success: . #t)
                   (:no-tag: . #t)
                   (author:stephen@thoughtstem.com . #t)
                   (ring:2 . #t)))
          (source . "https://github.com/thoughtstem/java-processing.git")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "8a232dac0405edf13067397364c9dbd702addca6")
                          (source
                           .
                           "https://github.com/thoughtstem/java-processing.git")
                          (source_url
                           .
                           "https://github.com/thoughtstem/java-processing.git")))))))
 ("javascript"
  .
  #hasheq((author . "samth@racket-lang.org")
          (authors . ("samth@racket-lang.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "javascript"
                    "doc/javascript@javascript/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/javascript.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/javascript.txt")))
          (checksum . "327c2de5e09f885b682f80524ff3c12ef6c47543")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "compatibility-lib"
            "drracket-plugin-lib"
            "gui-lib"
            "parameter"
            "parser-tools-lib"
            "planet-lib"
            "scheme-lib"
            "set"
            "srfi-lite-lib"
            "string-constants-lib"
            "unstable-contract-lib"
            "pprint"
            "in-new-directory"
            "parser-tools-doc"
            "racket-doc"
            "rackunit-lib"
            "scribble-lib"
            "unstable-doc"))
          (dependency-names
           .
           ("base"
            "compatibility-lib"
            "drracket-plugin-lib"
            "gui-lib"
            "parameter"
            "parser-tools-lib"
            "planet-lib"
            "scheme-lib"
            "set"
            "srfi-lite-lib"
            "string-constants-lib"
            "unstable-contract-lib"
            "pprint"
            "in-new-directory"
            "parser-tools-doc"
            "racket-doc"
            "rackunit-lib"
            "scribble-lib"
            "unstable-doc"))
          (description . "An implementation of JavaScript")
          (implies . ())
          (last-checked . 1557339617)
          (last-edit . 1451684329)
          (last-updated . 1524366175)
          (modules
           .
           ((lib "javascript/debug.rkt")
            (lib "javascript/private/evector.rkt")
            (lib "javascript/lang/lang.rkt")
            (lib "javascript/lang/module.rkt")
            (lib "javascript/scribblings/utils.rkt")
            (lib "javascript/private/syntax/ast-utils.rkt")
            (lib "javascript/private/runtime/object.rkt")
            (lib "javascript/private/tests/parse.rkt")
            (lib "javascript/scribblings/config.scrbl")
            (lib "javascript/private/runtime/runtime.rkt")
            (lib "javascript/scribblings/eval.scrbl")
            (lib "javascript/print.rkt")
            (lib "javascript/private/runtime/exceptions.rkt")
            (lib "javascript/private/compiler/compile.rkt")
            (lib "javascript/drscheme/syntax-color.rkt")
            (lib "javascript/private/tests/pretty-print.rkt")
            (lib "javascript/private/syntax/cursor.rkt")
            (lib "javascript/scribblings/intro.scrbl")
            (lib "javascript/private/runtime/standard-library.rkt")
            (lib "javascript/private/runtime/namespace.rkt")
            (lib "javascript/scribblings/javascript.scrbl")
            (lib "javascript/drscheme/debug-console.rkt")
            (lib "javascript/private/syntax/regexps.rkt")
            (lib "javascript/main.rkt")
            (lib "javascript/scribblings/compile.scrbl")
            (lib "javascript/config.rkt")
            (lib "javascript/private/runtime/operator.rkt")
            (lib "javascript/private/compiler/hoist-monad.rkt")
            (lib "javascript/compile.rkt")
            (lib "javascript/private/runtime/value.rkt")
            (lib "javascript/drscheme/tool.rkt")
            (lib "javascript/private/compiler/context.rkt")
            (lib "javascript/private/syntax/syntax.rkt")
            (lib "javascript/pjs.rkt")
            (lib "javascript/scribblings/pjs.scrbl")
            (lib "javascript/lang/reader.rkt")
            (lib "javascript/private/syntax/exceptions.rkt")
            (lib "javascript/private/config.rkt")
            (lib "javascript/private/syntax/token.rkt")
            (lib "javascript/ast.rkt")
            (lib "javascript/private/syntax/lex.rkt")
            (lib "javascript/private/syntax/parse.rkt")
            (lib "javascript/private/tests/test.rkt")
            (lib "javascript/private/syntax/input.rkt")
            (lib "javascript/runtime.rkt")
            (lib "javascript/scribblings/print.scrbl")
            (lib "javascript/scribblings/runtime.scrbl")
            (lib "javascript/private/runtime/gui-library.rkt")
            (lib "javascript/scribblings/parse.scrbl")
            (lib "javascript/drscheme/module-forms.rkt")
            (lib "javascript/private/runtime/native.rkt")
            (lib "javascript/private/tests/eval.rkt")
            (lib "javascript/scribblings/ast.scrbl")
            (lib "javascript/parse.rkt")
            (lib "javascript/private/tests/util.rkt")
            (lib "javascript/eval.rkt")
            (lib "javascript/private/syntax/abstract-regexps.rkt")
            (lib "javascript/private/compiler/helpers.rkt")
            (lib "javascript/private/syntax/ast-core.rkt")
            (lib "javascript/scribblings/history.scrbl")
            (lib "javascript/private/tests/array.rkt")
            (lib "javascript/private/compiler/hoist.rkt")
            (lib "javascript/private/planet.rkt")))
          (name . "javascript")
          (nix-sha256
           .
           "0vvjqyhl30wgi5bc82fjr30i5dvfa68fh4b9xyqy921m1gp6xgzw")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (:no-tag: . #t)
                   (author:samth@racket-lang.org . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/samth/javascript.plt")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "327c2de5e09f885b682f80524ff3c12ef6c47543")
                          (source . "git://github.com/samth/javascript.plt")
                          (source_url
                           .
                           "http://github.com/samth/javascript.plt/tree/master")))))))
 ("job-queue"
  .
  #hasheq((author . "jay.mccarthy@gmail.com")
          (authors . ("jay.mccarthy@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/job-queue.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/job-queue.txt")))
          (checksum . "0a2c349636aa88b06c9c299ef201494df648b164")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "job-queue-lib" "job-queue-doc"))
          (dependency-names . ("base" "job-queue-lib" "job-queue-doc"))
          (description
           .
           "A library for managing sets of workers and their jobs.")
          (implies . ())
          (last-checked . 1557339617)
          (last-edit . 1490026009)
          (last-updated . 1502816142)
          (modules . ())
          (name . "job-queue")
          (nix-sha256
           .
           "066m6rjc3qvlnr15jm6n5mdl4cgc5n12imwkj3aw56sc2cyhs1kd")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:jay.mccarthy@gmail.com . #t)
                   (concurrency . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/jeapostrophe/job-queue?path=job-queue")
          (tags . ("concurrency"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "0a2c349636aa88b06c9c299ef201494df648b164")
                          (source
                           .
                           "git://github.com/jeapostrophe/job-queue?path=job-queue")
                          (source_url
                           .
                           "http://github.com/jeapostrophe/job-queue/tree/master?path=job-queue")))))))
 ("job-queue-doc"
  .
  #hasheq((author . "jay.mccarthy@gmail.com")
          (authors . ("jay.mccarthy@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "job-queue"
                    "doc/job-queue@job-queue-doc/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/job-queue-doc.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/job-queue-doc.txt")))
          (checksum . "0a2c349636aa88b06c9c299ef201494df648b164")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base" "job-queue-lib" "racket-doc" "scribble-lib"))
          (dependency-names
           .
           ("base" "job-queue-lib" "racket-doc" "scribble-lib"))
          (description
           .
           "A library for managing sets of workers and their jobs. (doc)")
          (implies . ())
          (last-checked . 1557339617)
          (last-edit . 1504535594)
          (last-updated . 1502816143)
          (modules . ((lib "job-queue/job-queue.scrbl")))
          (name . "job-queue-doc")
          (nix-sha256
           .
           "066m6rjc3qvlnr15jm6n5mdl4cgc5n12imwkj3aw56sc2cyhs1kd")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:jay.mccarthy@gmail.com . #t)
                   (concurrency . #t)
                   (ring:1 . #t)))
          (source
           .
           "git://github.com/jeapostrophe/job-queue?path=job-queue-doc")
          (tags . ("concurrency"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "0a2c349636aa88b06c9c299ef201494df648b164")
                          (source
                           .
                           "git://github.com/jeapostrophe/job-queue?path=job-queue-doc")
                          (source_url
                           .
                           "http://github.com/jeapostrophe/job-queue/tree/master?path=job-queue-doc")))))))
 ("job-queue-lib"
  .
  #hasheq((author . "jay.mccarthy@gmail.com")
          (authors . ("jay.mccarthy@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/job-queue-lib.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/job-queue-lib.txt")))
          (checksum . "0a2c349636aa88b06c9c299ef201494df648b164")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base"))
          (dependency-names . ("base"))
          (description
           .
           "A library for managing sets of workers and their jobs. (lib)")
          (implies . ())
          (last-checked . 1557339617)
          (last-edit . 1504535520)
          (last-updated . 1502816143)
          (modules . ((lib "job-queue/main.rkt")))
          (name . "job-queue-lib")
          (nix-sha256
           .
           "066m6rjc3qvlnr15jm6n5mdl4cgc5n12imwkj3aw56sc2cyhs1kd")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:jay.mccarthy@gmail.com . #t)
                   (concurrency . #t)
                   (ring:1 . #t)))
          (source
           .
           "git://github.com/jeapostrophe/job-queue?path=job-queue-lib")
          (tags . ("concurrency"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "0a2c349636aa88b06c9c299ef201494df648b164")
                          (source
                           .
                           "git://github.com/jeapostrophe/job-queue?path=job-queue-lib")
                          (source_url
                           .
                           "http://github.com/jeapostrophe/job-queue/tree/master?path=job-queue-lib")))))))
 ("json-parsing"
  .
  #hasheq((author . "neil@neilvandyke.org")
          (authors . ("neil@neilvandyke.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "json-parsing"
                    "doc/json-parsing@json-parsing/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/json-parsing.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/json-parsing.txt")))
          (checksum . "28a5d163d4785990b265ff5d3499e8ce594c672d")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base" "mcfly" "racket-doc" "scribble-lib" "overeasy"))
          (dependency-names
           .
           ("base" "mcfly" "racket-doc" "scribble-lib" "overeasy"))
          (description . "JSON Parsing, Folding, and Conversion")
          (implies . ())
          (last-checked . 1557339617)
          (last-edit . 1456463303)
          (last-updated . 1502816143)
          (modules
           .
           ((lib "json-parsing/main.rkt")
            (lib "json-parsing/json-parsing.scrbl")))
          (name . "json-parsing")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:neil@neilvandyke.org . #t)
                   (json . #t)
                   (ring:1 . #t)
                   (sxml . #t)))
          (source . "http://www.neilvandyke.org/racket/json-parsing.zip")
          (tags . ("json" "sxml"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "28a5d163d4785990b265ff5d3499e8ce594c672d")
                          (source
                           .
                           "http://www.neilvandyke.org/racket/json-parsing.zip")
                          (source_url
                           .
                           "http://www.neilvandyke.org/racket/json-parsing.zip")))))))
 ("json-pointer"
  .
  #hasheq((author . "jesse@lisp.sh")
          (authors . ("jesse@lisp.sh"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "json-pointer"
                    "doc/json-pointer@json-pointer/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/json-pointer.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/json-pointer.txt")))
          (checksum . "ea3be1fe2c48c4c6096e8b1d36779b3ccd1913cb")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "rackunit-lib"
            "ejs"
            "scribble-lib"
            "racket-doc"
            "rackunit-lib"))
          (dependency-names
           .
           ("base"
            "rackunit-lib"
            "ejs"
            "scribble-lib"
            "racket-doc"
            "rackunit-lib"))
          (description
           .
           "Parse, render, and evaluate JSON Pointers (RFC 6901).")
          (implies . ())
          (last-checked . 1557339618)
          (last-edit . 1514274680)
          (last-updated . 1543571003)
          (modules
           .
           ((lib "json-pointer/eval.rkt")
            (lib "json-pointer/scribblings/eval.scrbl")
            (lib "json-pointer/parser.rkt")
            (lib "json-pointer/main.rkt")
            (lib "json-pointer/scribblings/expr.scrbl")
            (lib "json-pointer/scribblings/parse.scrbl")
            (lib "json-pointer/scribblings/license.scrbl")
            (lib "json-pointer/json.rkt")
            (lib "json-pointer/escape.rkt")
            (lib "json-pointer/expr.rkt")
            (lib "json-pointer/scribblings/json-pointer.scrbl")))
          (name . "json-pointer")
          (nix-sha256
           .
           "0p6g6a2awavkspl17cvfnldpqcny1syk4lfh1y3nimmv0jplhdgs")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:jesse@lisp.sh . #t)
                   (json . #t)
                   (ring:2 . #t)))
          (source . "https://github.com/jessealama/json-pointer.git")
          (tags . ("json"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "ea3be1fe2c48c4c6096e8b1d36779b3ccd1913cb")
                          (source
                           .
                           "https://github.com/jessealama/json-pointer.git")
                          (source_url
                           .
                           "https://github.com/jessealama/json-pointer.git")))))))
 ("json-socket"
  .
  #hasheq((author . "mordae@anilinux.org")
          (authors . ("mordae@anilinux.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/json-socket.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/json-socket.txt")))
          (checksum . "0acf5117ed335133e30a4ab6593278a4534ac42e")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "scribble-lib" "misc1"))
          (dependency-names . ("base" "scribble-lib" "misc1"))
          (description . "JSON-Talking TCP Sockets")
          (implies . ())
          (last-checked . 1557339618)
          (last-edit . 1404737271)
          (last-updated . 1502816144)
          (modules . ((lib "json-socket/main.rkt")))
          (name . "json-socket")
          (nix-sha256
           .
           "16xj5ny2146dmpql3izid78qqdx40h1gmdxs5fpfy1b8sg75rb1w")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:mordae@anilinux.org . #t)
                   (ring:1 . #t)
                   (tcp . #t)))
          (source . "github://github.com/mordae/racket-json-socket/master")
          (tags . ("tcp"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "0acf5117ed335133e30a4ab6593278a4534ac42e")
                          (source
                           .
                           "github://github.com/mordae/racket-json-socket/master")
                          (source_url
                           .
                           "http://github.com/mordae/racket-json-socket/tree/master")))))))
 ("json-sourcery"
  .
  #hasheq((author . "adjkant@gmail.com")
          (authors . ("adjkant@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . "server/built/deps/json-sourcery.txt")
                 (docs
                  .
                  (("main"
                    "json-sourcery"
                    "doc/json-sourcery@json-sourcery/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/json-sourcery.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/json-sourcery.txt")))
          (checksum . "a0b1646afedabb022550fd2b1f7c8052ac8ae5b6")
          (checksum-error . #f)
          (conflicts . ())
          (date-added . 1552422973)
          (dependencies
           .
           ("base"
            "syntax-classes"
            "scribble-lib"
            "racket-doc"
            "rackunit-lib"))
          (dependency-names
           .
           ("base"
            "syntax-classes"
            "scribble-lib"
            "racket-doc"
            "rackunit-lib"))
          (description
           .
           "A library built on top of the json package for improving JSON serialization and adding clearer syntax macros.")
          (implies . ())
          (last-checked . 1557339618)
          (last-edit . 1553094174)
          (last-updated . 1553094423)
          (modules
           .
           ((lib "json-sourcery/struct.rkt")
            (lib "json-sourcery/scribblings/json-sourcery.scrbl")
            (lib "json-sourcery/main.rkt")
            (lib "json-sourcery/basics.rkt")
            (lib "json-sourcery/testing.rkt")))
          (name . "json-sourcery")
          (nix-sha256
           .
           "0aiag9pq48yjp622syw9b2yggsqq8d1sdzbaxri9lajhcyq5pwil")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-dep-fail: . #t)
                   (:build-success: . #t)
                   (:docs: . #t)
                   (author:adjkant@gmail.com . #t)
                   (json . #t)
                   (racket-sourcery . #t)
                   (ring:2 . #t)
                   (serialization . #t)))
          (source
           .
           "https://github.com/adjkant/json-sourcery.git?path=json-sourcery#a0b1646afedabb022550fd2b1f7c8052ac8ae5b6")
          (tags . ("json" "racket-sourcery" "serialization"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "a0b1646afedabb022550fd2b1f7c8052ac8ae5b6")
                          (source
                           .
                           "https://github.com/adjkant/json-sourcery.git?path=json-sourcery#a0b1646afedabb022550fd2b1f7c8052ac8ae5b6")
                          (source_url
                           .
                           "https://github.com/adjkant/json-sourcery.git?path=json-sourcery#a0b1646afedabb022550fd2b1f7c8052ac8ae5b6")))))))
 ("k-infix"
  .
  #hasheq((author . "macocio@gmail.com")
          (authors . ("macocio@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "k-infix" "doc/k-infix@k-infix/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/k-infix.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/k-infix.txt")))
          (checksum . "07ed4c23905ea8b2b85a5f321d56ad038170766f")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "rackunit-lib"
            "sandbox-lib"
            "scribble-lib"
            "racket-doc"
            "memoize"))
          (dependency-names
           .
           ("base"
            "rackunit-lib"
            "sandbox-lib"
            "scribble-lib"
            "racket-doc"
            "memoize"))
          (description
           .
           "Simple but versatile infix parsing for arbitrary expressions. Fully customizable. Comes with basic math expressions implemented.")
          (implies . ())
          (last-checked . 1557339618)
          (last-edit . 1511202550)
          (last-updated . 1511489204)
          (modules
           .
           ((lib "k-infix/private/primitive.rkt")
            (lib "k-infix/scribblings/k-infix.scrbl")
            (lib "k-infix/private/default-parse-table.rkt")
            (lib "k-infix/define.rkt")
            (lib "k-infix/custom.rkt")
            (lib "k-infix/test.rkt")
            (lib "k-infix/main.rkt")
            (lib "k-infix/private/parse-lookup-entry.rkt")
            (lib "k-infix/private/helper.rkt")))
          (name . "k-infix")
          (nix-sha256
           .
           "0ig2m5syvxwx25nzw7w8dib512gy1wnydxykrhfbw3j59bkk4shw")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:macocio@gmail.com . #t)
                   (infix . #t)
                   (ring:2 . #t)))
          (source . "https://github.com/BourgondAries/k-infix.git")
          (tags . ("infix"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "07ed4c23905ea8b2b85a5f321d56ad038170766f")
                          (source
                           .
                           "https://github.com/BourgondAries/k-infix.git")
                          (source_url
                           .
                           "https://github.com/BourgondAries/k-infix.git")))))))
 ("kernel"
  .
  #hasheq((author . "mordae@anilinux.org")
          (authors . ("mordae@anilinux.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/kernel.txt")
                 (test-failure-log . "server/built/test-fail/kernel.txt")
                 (test-success-log . #f)))
          (checksum . "8602042a9d6109399dfa7f492b5af7af6c88f597")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "scribble-lib" "misc1" "rtnl" "sysfs"))
          (dependency-names . ("base" "scribble-lib" "misc1" "rtnl" "sysfs"))
          (description . "Interface to Linux kernel runtime configuration.")
          (implies . ())
          (last-checked . 1557339618)
          (last-edit . 1405684736)
          (last-updated . 1502816144)
          (modules
           .
           ((lib "kernel/private/socket.rkt")
            (lib "kernel/private/sysfs-net.rkt")
            (lib "kernel/main.rkt")
            (lib "kernel/private/ffi.rkt")
            (lib "kernel/address.rkt")
            (lib "kernel/private/sysfs-util.rkt")
            (lib "kernel/link.rkt")))
          (name . "kernel")
          (nix-sha256
           .
           "00n53nfy90nadiv5x6ik3rkvlc6dd5z23vpvmc3wvmjyjxk5jji8")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:mordae@anilinux.org . #t)
                   (linux . #t)
                   (net . #t)
                   (ring:1 . #t)))
          (source . "github://github.com/mordae/racket-kernel/master")
          (tags . ("linux" "net"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "8602042a9d6109399dfa7f492b5af7af6c88f597")
                          (source
                           .
                           "github://github.com/mordae/racket-kernel/master")
                          (source_url
                           .
                           "http://github.com/mordae/racket-kernel/tree/master")))))))
 ("kitco"
  .
  #hasheq((author . "neil@neilvandyke.org")
          (authors . ("neil@neilvandyke.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "kitco" "doc/kitco@kitco/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/kitco.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/kitco.txt")))
          (checksum . "f26e9472df8d0fd74c6128d9c342d205c4003916")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base" "mcfly" "racket-doc" "scribble-lib" "overeasy"))
          (dependency-names
           .
           ("base" "mcfly" "racket-doc" "scribble-lib" "overeasy"))
          (description . "Precious Metals Market Info. Access")
          (implies . ())
          (last-checked . 1557339618)
          (last-edit . 1456713739)
          (last-updated . 1502816145)
          (modules . ((lib "kitco/main.rkt") (lib "kitco/kitco.scrbl")))
          (name . "kitco")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:neil@neilvandyke.org . #t)
                   (finance . #t)
                   (ring:1 . #t)
                   (sxml . #t)))
          (source . "http://www.neilvandyke.org/racket/kitco.zip")
          (tags . ("finance" "sxml"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "f26e9472df8d0fd74c6128d9c342d205c4003916")
                          (source
                           .
                           "http://www.neilvandyke.org/racket/kitco.zip")
                          (source_url
                           .
                           "http://www.neilvandyke.org/racket/kitco.zip")))))))
 ("kw-make-struct"
  .
  #hasheq((author . "alexander@knauth.org")
          (authors . ("alexander@knauth.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "kw-make-struct"
                    "doc/kw-make-struct@kw-make-struct/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/kw-make-struct.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/kw-make-struct.txt")))
          (checksum . "212153a2be827f66004f6c49403b2646b5539955")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "syntax-classes-lib"
            "rackunit-lib"
            "scribble-lib"
            "racket-doc"))
          (dependency-names
           .
           ("base"
            "syntax-classes-lib"
            "rackunit-lib"
            "scribble-lib"
            "racket-doc"))
          (description
           .
           "like make from unstable/struct except allowing keywords, and it can also be a match pattern")
          (implies . ())
          (last-checked . 1557339619)
          (last-edit . 1472189035)
          (last-updated . 1502816145)
          (modules
           .
           ((lib "kw-make-struct/docs/kw-make-struct.scrbl")
            (lib "kw-make-struct/main.rkt")))
          (name . "kw-make-struct")
          (nix-sha256
           .
           "1y6wwgignidswy7r1350pwla1s0a52mrdd8fhv1hi77sj17ifyj9")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:alexander@knauth.org . #t)
                   (keywords . #t)
                   (ring:1 . #t)
                   (structs . #t)))
          (source . "git://github.com/AlexKnauth/kw-make-struct")
          (tags . ("keywords" "structs"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "212153a2be827f66004f6c49403b2646b5539955")
                          (source
                           .
                           "git://github.com/AlexKnauth/kw-make-struct")
                          (source_url
                           .
                           "http://github.com/AlexKnauth/kw-make-struct/tree/master")))))))
 ("kw-utils"
  .
  #hasheq((author . "alexander@knauth.org")
          (authors . ("alexander@knauth.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "kw-utils" "doc/kw-utils@kw-utils/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/kw-utils.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/kw-utils.txt")))
          (checksum . "1acb6feff772064010574c0a68d464146cd7d29c")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "sweet-exp-lib"
            "rackunit-lib"
            "scribble-lib"
            "racket-doc"
            "rackjure"))
          (dependency-names
           .
           ("base"
            "sweet-exp-lib"
            "rackunit-lib"
            "scribble-lib"
            "racket-doc"
            "rackjure"))
          (description . "misc kw utils")
          (implies . ())
          (last-checked . 1557339619)
          (last-edit . 1415761892)
          (last-updated . 1502816145)
          (modules
           .
           ((lib "kw-utils/partial.rkt")
            (lib "kw-utils/docs/arity+keywords.scrbl")
            (lib "kw-utils/docs/kw-utils.scrbl")
            (lib "kw-utils/arity+keywords.rkt")
            (lib "kw-utils/kw-map.rkt")
            (lib "kw-utils/docs/partial.scrbl")
            (lib "kw-utils/docs/kw-hash.scrbl")
            (lib "kw-utils/mapper.rkt")
            (lib "kw-utils/docs/keyword-lambda.scrbl")
            (lib "kw-utils/docs/mapper.scrbl")
            (lib "kw-utils/kw-hash/contract.rkt")
            (lib "kw-utils/docs/keyword-apply-sort.scrbl")
            (lib "kw-utils/docs/kw-lists-lambda.scrbl")
            (lib "kw-utils/kw-apply.rkt")
            (lib "kw-utils/kw-lists-lambda.rkt")
            (lib "kw-utils/kw-hash.rkt")
            (lib "kw-utils/docs/kw-map.scrbl")
            (lib "kw-utils/keyword-app.rkt")
            (lib "kw-utils/keyword-lambda.rkt")
            (lib "kw-utils/keyword-apply-sort.rkt")
            (lib "kw-utils/arity+keywords/syntax.rkt")
            (lib "kw-utils/kw-hash-lambda.rkt")))
          (name . "kw-utils")
          (nix-sha256
           .
           "1vg64zlsf8pmd307w9f7kybslagbza1dv95g7kkr74iwrgfbjwfs")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:alexander@knauth.org . #t)
                   (keywords . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/AlexKnauth/kw-utils")
          (tags . ("keywords"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "1acb6feff772064010574c0a68d464146cd7d29c")
                          (source . "git://github.com/AlexKnauth/kw-utils")
                          (source_url
                           .
                           "http://github.com/AlexKnauth/kw-utils/tree/master")))))))
 ("lambda-calculus"
  .
  #hasheq((author . "oran.simhony@gmail.com")
          (authors . ("oran.simhony@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "lambda-calculus"
                    "doc/lambda-calculus@lambda-calculus/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/lambda-calculus.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/lambda-calculus.txt")))
          (checksum . "c82dcd80f609fbc905670b9fec12c0c955d73778")
          (checksum-error . #f)
          (conflicts . ())
          (date-added . 1555331717)
          (dependencies
           .
           ("beautiful-racket-lib"
            "rackunit-lib"
            "base"
            "brag"
            "beautiful-racket"
            "scribble-lib"
            "racket-doc"
            "rackunit-lib"))
          (dependency-names
           .
           ("beautiful-racket-lib"
            "rackunit-lib"
            "base"
            "brag"
            "beautiful-racket"
            "scribble-lib"
            "racket-doc"
            "rackunit-lib"))
          (description . "A lambda-calculus DSL in Racket")
          (implies . ())
          (last-checked . 1557339619)
          (last-edit . 1555331717)
          (last-updated . 1556201020)
          (modules
           .
           ((lib "lambda-calculus/tokenizer.rkt")
            (lib "lambda-calculus/parser.rkt")
            (lib "lambda-calculus/expander.rkt")
            (lib "lambda-calculus/main.rkt")
            (lib "lambda-calculus/reader.rkt")
            (lib "lambda-calculus/identity.rkt")
            (lib "lambda-calculus/lexer.rkt")
            (lib "lambda-calculus/scribblings/lambda-calculus.scrbl")))
          (name . "lambda-calculus")
          (nix-sha256
           .
           "0pc8kmqbf962dh7jy95yc9k19aj9hcnhf9jgk1vwm9jp27v05ih8")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:oran.simhony@gmail.com . #t)
                   (dsl . #t)
                   (functional . #t)
                   (lambda-calculus . #t)
                   (ring:2 . #t)))
          (source . "https://github.com/oransimhony/lambda-calculus.git")
          (tags . ("dsl" "functional" "lambda-calculus"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "c82dcd80f609fbc905670b9fec12c0c955d73778")
                          (source
                           .
                           "https://github.com/oransimhony/lambda-calculus.git")
                          (source_url
                           .
                           "https://github.com/oransimhony/lambda-calculus.git")))))))
 ("lambda-sh"
  .
  #hasheq((author . "juzhenliang@gmail.com")
          (authors . ("juzhenliang@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("salvage" "ssh" "doc/ssh@lambda-sh/index.html")))
                 (failure-log . "server/built/fail/lambda-sh.txt")
                 (min-failure-log . #f)
                 (success-log . #f)
                 (test-failure-log . #f)
                 (test-success-log . #f)))
          (checksum . "ee62b220214a9af0791ea67bd23a5e88b20d8c50")
          (checksum-error . #f)
          (conflicts . ())
          (date-added . 1552095762)
          (dependencies . ())
          (dependency-names . ())
          (description
           .
           "Do we really need a \"Typed Shell\"? Nevertheless, Unix Shell and Powershell are not friends.")
          (implies . ())
          (last-checked . 1557339619)
          (last-edit . 1552096269)
          (last-updated . 1557051615)
          (modules
           .
           ((lib "ssh/tamer/message.rkt")
            (lib "ssh/digitama/conditional-message.rkt")
            (lib "ssh/digitama/transport/packet.rkt")
            (lib "ssh/digitama/algorithm/crypto/pretty.rkt")
            (lib "ssh/transport.rkt")
            (lib "ssh/tamer/ssh.scrbl")
            (lib "ssh/digivice/sshd.rkt")
            (lib "ssh/assignment.rkt")
            (lib "ssh/digitama/asn-der/sequence.rkt")
            (lib "ssh/digitama/transport/identification.rkt")
            (lib "ssh/tamer/asnder.scrbl")
            (lib "ssh/digitama/algorithm/crypto/ctr.rkt")
            (lib "ssh/digitama/transport.rkt")
            (lib "ssh/tamer/walkthrough.scrbl")
            (lib "ssh/digitama/algorithm/pkcs/primitive.rkt")
            (lib "ssh/digitama/assignment.rkt")
            (lib "ssh/tamer/architecture.rkt")
            (lib "ssh/digivice/keygen/rsa/keygen.rkt")
            (lib "ssh/digitama/rsa.rkt")
            (lib "ssh/digitama/asn-der/pretty.rkt")
            (lib "ssh/digitama/algorithm/pkcs/emsa-v1_5.rkt")
            (lib "ssh/authentication.rkt")
            (lib "ssh/digitama/userauth.rkt")
            (lib "ssh/digitama/algorithm/diffie-hellman.rkt")
            (lib "ssh/digitama/assignment/authentication.rkt")
            (lib "ssh/digitama/assignment/compression.rkt")
            (lib "ssh/tamer/authentication.rkt")
            (lib "ssh/digitama/algorithm/random.rkt")
            (lib "ssh/digitama/algorithm/oakley-group.rkt")
            (lib "ssh/digitama/authentication/publickey.rkt")
            (lib "ssh/digitama/algorithm/crypto/aes.rkt")
            (lib "ssh/configuration.rkt")
            (lib "ssh/userauth.rkt")
            (lib "ssh/digitama/datatype.rkt")
            (lib "ssh/digitama/asn-der/primitive.rkt")
            (lib "ssh/digitama/algorithm/rsa.rkt")
            (lib "ssh/digitama/algorithm/hmac.rkt")
            (lib "ssh/digitama/pem.rkt")
            (lib "ssh/message.rkt")
            (lib "ssh/digitama/assignment/cipher.rkt")
            (lib "ssh/main.rkt")
            (lib "ssh/tamer/transport.rkt")
            (lib "ssh/base.rkt")
            (lib "ssh/digitama/message.rkt")
            (lib "ssh/kex.rkt")
            (lib "ssh/tamer/asn/sequence.rkt")
            (lib "ssh/tamer/asn/primitive.rkt")
            (lib "ssh/digitama/algorithm/hostkey.rkt")
            (lib "ssh/tamer/aes.rkt")
            (lib "ssh/digitama/algorithm/crypto/s-box.rkt")
            (lib "ssh/digivice/keygen.rkt")
            (lib "ssh/digitama/algorithm/crypto/state.rkt")
            (lib "ssh/digivice/keygen/rsa/cmdenv.rkt")
            (lib "ssh/digitama/diagnostics.rkt")
            (lib "ssh/digitama/algorithm/crypto/math.rkt")
            (lib "ssh/digitama/assignment/diffie-hellman.rkt")
            (lib "ssh/digitama/kex.rkt")
            (lib "ssh/digitama/algorithm/pkcs/key.rkt")
            (lib "ssh/digitama/asn-der/base.rkt")
            (lib "ssh/digivice/ssh.rkt")
            (lib "ssh/digitama/transport/message.rkt")
            (lib "ssh/digivice/keygen/cmdenv.rkt")
            (lib "ssh/datatype.rkt")
            (lib "ssh/digitama/asn-der/octets.rkt")
            (lib "ssh/digitama/assignment/mac.rkt")
            (lib "ssh/digitama/authentication/message.rkt")
            (lib "ssh/digitama/transport/kex.rkt")
            (lib "ssh/digitama/transport/newkeys.rkt")
            (lib "ssh/digitama/algorithm/pkcs/hash.rkt")
            (lib "ssh/digitama/assignment/hostkey.rkt")))
          (name . "lambda-sh")
          (nix-sha256
           .
           "1qisjx050kbyfzjlpw0va32dkqj41v7nw916h3fsg3p1fmgbb2pf")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-fail: . #t)
                   (:docs-error: . #t)
                   (:docs: . #t)
                   (author:juzhenliang@gmail.com . #t)
                   (lang . #t)
                   (parser . #t)
                   (ring:2 . #t)
                   (shell . #t)
                   (ssh . #t)
                   (unsafe . #t)
                   (unstable . #t)))
          (source . "https://github.com/wargrey/lambda-shell.git")
          (tags . ("lang" "parser" "shell" "ssh" "unsafe" "unstable"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "ee62b220214a9af0791ea67bd23a5e88b20d8c50")
                          (source
                           .
                           "https://github.com/wargrey/lambda-shell.git")
                          (source_url
                           .
                           "https://github.com/wargrey/lambda-shell.git")))))))
 ("lambdajam-2015-racket-pl-pl"
  .
  #hasheq((author . "robby@racket-lang.org")
          (authors . ("robby@racket-lang.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log
                  .
                  "server/built/install/lambdajam-2015-racket-pl-pl.txt")
                 (test-failure-log
                  .
                  "server/built/test-fail/lambdajam-2015-racket-pl-pl.txt")
                 (test-success-log . #f)))
          (checksum . "4c9001dca9fb72c885d8cc1bef057ac8f56c24d0")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "gui-lib"
            "lazy"
            "parser-tools-lib"
            "rackunit-lib"
            "scheme-lib"
            "schemeunit"
            "slideshow-lib"
            "typed-racket-lib"
            "lang-slide"))
          (dependency-names
           .
           ("base"
            "gui-lib"
            "lazy"
            "parser-tools-lib"
            "rackunit-lib"
            "scheme-lib"
            "schemeunit"
            "slideshow-lib"
            "typed-racket-lib"
            "lang-slide"))
          (description . "")
          (implies . ())
          (last-checked . 1557339619)
          (last-edit . 1445998661)
          (last-updated . 1502816146)
          (modules
           .
           ((lib "lambdajam-2015-racket-pl-pl/lang-slide.rkt")
            (lib "lambdajam-2015-racket-pl-pl/or.rkt")
            (lib "mini-hdl/rca-hdl.rkt")
            (lib "lambdajam-2015-racket-pl-pl/open-compiler.rkt")
            (lib "lambdajam-2015-racket-pl-pl/thanks.rkt")
            (lib "mini-hdl/gc/lang/reader.rkt")
            (lib "mini-hdl/runtime.rkt")
            (lib "mini-hdl/rca-2-hdl.rkt")
            (lib "lambdajam-2015-racket-pl-pl/intro-code/fibs.rkt")
            (lib "lambdajam-2015-racket-pl-pl/enum.rkt")
            (lib "mini-hdl/gc-runtime.rkt")
            (lib "lambdajam-2015-racket-pl-pl/intro-code/fib.scrbl")
            (lib "mini-hdl/parser.rkt")
            (lib "lambdajam-2015-racket-pl-pl/salad-bar.rkt")
            (lib "lambdajam-2015-racket-pl-pl/title-lib.rkt")
            (lib "lambdajam-2015-racket-pl-pl/title.rkt")
            (lib "lambdajam-2015-racket-pl-pl/intro-code/lazy.rkt")
            (lib "lambdajam-2015-racket-pl-pl/util.rkt")
            (lib "lambdajam-2015-racket-pl-pl/main.rkt")
            (lib "mini-hdl/lang/reader.rkt")
            (lib "lambdajam-2015-racket-pl-pl/hdl-ex.rkt")))
          (name . "lambdajam-2015-racket-pl-pl")
          (nix-sha256
           .
           "1n6vsl5dj1zb83dqzdl5h8fdckmn78lr0gfnsfk98sva9szg6whv")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:no-desc: . #t)
                   (:no-tag: . #t)
                   (author:robby@racket-lang.org . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/rfindler/lambdajam-2015-racket-pl-pl")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "4c9001dca9fb72c885d8cc1bef057ac8f56c24d0")
                          (source
                           .
                           "git://github.com/rfindler/lambdajam-2015-racket-pl-pl")
                          (source_url
                           .
                           "http://github.com/rfindler/lambdajam-2015-racket-pl-pl/tree/master")))))))
 ("lang-file"
  .
  #hasheq((author . "alexander@knauth.org")
          (authors . ("alexander@knauth.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "read-lang-file"
                    "doc/read-lang-file@lang-file/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/lang-file.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/lang-file.txt")))
          (checksum . "4dc0385056a7e723a788adfd42078d3766f4f5bf")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "rackunit-lib" "scribble-lib" "racket-doc"))
          (dependency-names
           .
           ("base" "rackunit-lib" "scribble-lib" "racket-doc"))
          (description . "Functions for dealing with #lang files")
          (implies . ())
          (last-checked . 1557339619)
          (last-edit . 1464223872)
          (last-updated . 1502816147)
          (modules
           .
           ((lib "lang-file/scribblings/read-lang-file.scrbl")
            (lib "lang-file/read-lang-file.rkt")))
          (name . "lang-file")
          (nix-sha256
           .
           "0d1pm5xnz2vs21al6s3vlyqi0l0il683qxrv9qr0z1zk57rm12kj")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:alexander@knauth.org . #t)
                   (file . #t)
                   (lang . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/AlexKnauth/lang-file")
          (tags . ("file" "lang"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "4dc0385056a7e723a788adfd42078d3766f4f5bf")
                          (source . "git://github.com/AlexKnauth/lang-file")
                          (source_url
                           .
                           "http://github.com/AlexKnauth/lang-file/tree/master")))))))
 ("lang-slide"
  .
  #hasheq((author . "samth@ccs.neu.edu")
          (authors . ("samth@ccs.neu.edu"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "lang-slide"
                    "doc/lang-slide@lang-slide/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/lang-slide.txt")
                 (test-failure-log . "server/built/test-fail/lang-slide.txt")
                 (test-success-log . #f)))
          (checksum . "aba984d801e4826c0b4a16323b2cd42272a3984a")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "draw-lib"
            "gui-lib"
            "scheme-lib"
            "slideshow-lib"
            "unstable-lib"
            "scribble-lib"
            "racket-doc"
            "pict-doc"))
          (dependency-names
           .
           ("base"
            "draw-lib"
            "gui-lib"
            "scheme-lib"
            "slideshow-lib"
            "unstable-lib"
            "scribble-lib"
            "racket-doc"
            "pict-doc"))
          (description
           .
           "A picture showing all the languages used to implement Racket.")
          (implies . ())
          (last-checked . 1557339619)
          (last-edit . 1352762812)
          (last-updated . 1534996610)
          (modules
           .
           ((lib "lang-slide/orig-colors.rkt")
            (lib "lang-slide/main.rkt")
            (lib "lang-slide/mk-img.rkt")
            (lib "lang-slide/pictures.rkt")
            (lib "lang-slide/scribblings/lang-slide.scrbl")
            (lib "lang-slide/find.rkt")
            (lib "lang-slide/draw-plain.rkt")
            (lib "lang-slide/hudak-quote.rkt")))
          (name . "lang-slide")
          (nix-sha256
           .
           "0z1vmafcjxjxxdf2m5rajb0i7c7p8a3sgk96day92kckjlqk8013")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:samth@ccs.neu.edu . #t)
                   (language . #t)
                   (ring:1 . #t)
                   (slideshow . #t)))
          (source . "github://github.com/samth/lang-slide/master")
          (tags . ("language" "slideshow"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "aba984d801e4826c0b4a16323b2cd42272a3984a")
                          (source
                           .
                           "github://github.com/samth/lang-slide/master")
                          (source_url
                           .
                           "http://github.com/samth/lang-slide/tree/master")))))))
 ("latex-utils"
  .
  #hasheq((author . "matias@fortlogic.net")
          (authors . ("matias@fortlogic.net"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "utils" "doc/utils@latex-utils/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/latex-utils.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/latex-utils.txt")))
          (checksum . "631ad9b13b837f4109932252c85bc1bf6f0ae752")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "scheme-lib"
            "scribble-lib"
            "seq-no-order"
            "at-exp-lib"
            "racket-doc"
            "scribble-doc"))
          (dependency-names
           .
           ("base"
            "scheme-lib"
            "scribble-lib"
            "seq-no-order"
            "at-exp-lib"
            "racket-doc"
            "scribble-doc"))
          (description
           .
           "Some utilities for generating LaTeX markup of various descriptions.")
          (implies . ())
          (last-checked . 1557339619)
          (last-edit . 1476262536)
          (last-updated . 1502816147)
          (modules
           .
           ((lib "latex-utils/scribble/references.rkt")
            (lib "latex-utils/scribble/private/theorem.rkt")
            (lib "latex-utils/scribble.rkt")
            (lib "latex-utils/scribble/private/unmap.rkt")
            (lib "latex-utils/scribble/private/utils.rkt")
            (lib "latex-utils/scribble/private/syntax.rkt")
            (lib "latex-utils/scribblings/utils.scrbl")
            (lib "latex-utils/scribble/utils.rkt")
            (lib "latex-utils/scribble/unmap.rkt")
            (lib "latex-utils/scribble/private/math.rkt")
            (lib "latex-utils/scribble/math.rkt")
            (lib "latex-utils/scribble/homework.rkt")
            (lib "latex-utils/scribble/theorem.rkt")))
          (name . "latex-utils")
          (nix-sha256
           .
           "06slak52xlr6zmsrbf9bkvnhpkqk0bp7ni7y7r5r8m5i99jd56d3")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (LaTeX . #t)
                   (author:matias@fortlogic.net . #t)
                   (ring:1 . #t)
                   (scribble . #t)))
          (source . "git://github.com/dented42/latex-utils.git#master")
          (tags . ("LaTeX" "scribble"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "631ad9b13b837f4109932252c85bc1bf6f0ae752")
                          (source
                           .
                           "git://github.com/dented42/latex-utils.git#master")
                          (source_url
                           .
                           "http://github.com/dented42/latex-utils.git/tree/master#master")))))))
 ("lathe-comforts"
  .
  #hasheq((author . "rokitna@hotmail.com")
          (authors . ("rokitna@hotmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/lathe-comforts.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/lathe-comforts.txt")))
          (checksum . "dc813555d68f0c2bfb9bbf5c76d8c0fc355381b6")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("lathe-comforts-doc" "lathe-comforts-lib"))
          (dependency-names . ("lathe-comforts-doc" "lathe-comforts-lib"))
          (description . "A collection of utilities.")
          (implies . ("lathe-comforts-doc" "lathe-comforts-lib"))
          (last-checked . 1557339619)
          (last-edit . 1523461397)
          (last-updated . 1551600269)
          (modules . ())
          (name . "lathe-comforts")
          (nix-sha256
           .
           "19k5sxqjlg6gi7sp2h2sifbjj1jg3vjmzjmppcjvzynf8kqx3pym")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:rokitna@hotmail.com . #t)
                   (lathe . #t)
                   (ring:2 . #t)
                   (unstable . #t)
                   (util . #t)
                   (utility . #t)))
          (source
           .
           "https://github.com/lathe/lathe-comforts-for-racket.git?path=lathe-comforts")
          (tags . ("lathe" "unstable" "util" "utility"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "dc813555d68f0c2bfb9bbf5c76d8c0fc355381b6")
                          (source
                           .
                           "https://github.com/lathe/lathe-comforts-for-racket.git?path=lathe-comforts")
                          (source_url
                           .
                           "https://github.com/lathe/lathe-comforts-for-racket.git?path=lathe-comforts")))))))
 ("lathe-comforts-doc"
  .
  #hasheq((author . "rokitna@hotmail.com")
          (authors . ("rokitna@hotmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "lathe-comforts"
                    "doc/lathe-comforts@lathe-comforts-doc/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/lathe-comforts-doc.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/lathe-comforts-doc.txt")))
          (checksum . "dc813555d68f0c2bfb9bbf5c76d8c0fc355381b6")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "lathe-comforts-lib"
            "parendown-doc"
            "parendown-lib"
            "racket-doc"
            "scribble-lib"))
          (dependency-names
           .
           ("base"
            "lathe-comforts-lib"
            "parendown-doc"
            "parendown-lib"
            "racket-doc"
            "scribble-lib"))
          (description . "A collection of utilities. (doc)")
          (implies . ())
          (last-checked . 1557339620)
          (last-edit . 1523461261)
          (last-updated . 1551600270)
          (modules
           .
           ((lib "lathe-comforts/scribblings/lathe-comforts.scrbl")))
          (name . "lathe-comforts-doc")
          (nix-sha256
           .
           "19k5sxqjlg6gi7sp2h2sifbjj1jg3vjmzjmppcjvzynf8kqx3pym")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:rokitna@hotmail.com . #t)
                   (lathe . #t)
                   (ring:2 . #t)
                   (unstable . #t)
                   (util . #t)
                   (utility . #t)))
          (source
           .
           "https://github.com/lathe/lathe-comforts-for-racket.git?path=lathe-comforts-doc")
          (tags . ("lathe" "unstable" "util" "utility"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "dc813555d68f0c2bfb9bbf5c76d8c0fc355381b6")
                          (source
                           .
                           "https://github.com/lathe/lathe-comforts-for-racket.git?path=lathe-comforts-doc")
                          (source_url
                           .
                           "https://github.com/lathe/lathe-comforts-for-racket.git?path=lathe-comforts-doc")))))))
 ("lathe-comforts-lib"
  .
  #hasheq((author . "rokitna@hotmail.com")
          (authors . ("rokitna@hotmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/lathe-comforts-lib.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/lathe-comforts-lib.txt")))
          (checksum . "dc813555d68f0c2bfb9bbf5c76d8c0fc355381b6")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "parendown"))
          (dependency-names . ("base" "parendown"))
          (description . "A collection of utilities. (lib)")
          (implies . ())
          (last-checked . 1557339620)
          (last-edit . 1523461176)
          (last-updated . 1551600270)
          (modules
           .
           ((lib "lathe-comforts/list.rkt")
            (lib "lathe-comforts/trivial.rkt")
            (lib "lathe-comforts/private.rkt")
            (lib "lathe-comforts/contract.rkt")
            (lib "lathe-comforts/struct.rkt")
            (lib "lathe-comforts/private/experimental/match.rkt")
            (lib "lathe-comforts/match.rkt")
            (lib "lathe-comforts/main.rkt")
            (lib "lathe-comforts/hash.rkt")
            (lib "lathe-comforts/string.rkt")
            (lib "lathe-comforts/maybe.rkt")))
          (name . "lathe-comforts-lib")
          (nix-sha256
           .
           "19k5sxqjlg6gi7sp2h2sifbjj1jg3vjmzjmppcjvzynf8kqx3pym")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:rokitna@hotmail.com . #t)
                   (lathe . #t)
                   (ring:2 . #t)
                   (unstable . #t)
                   (util . #t)
                   (utility . #t)))
          (source
           .
           "https://github.com/lathe/lathe-comforts-for-racket.git?path=lathe-comforts-lib")
          (tags . ("lathe" "unstable" "util" "utility"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "dc813555d68f0c2bfb9bbf5c76d8c0fc355381b6")
                          (source
                           .
                           "https://github.com/lathe/lathe-comforts-for-racket.git?path=lathe-comforts-lib")
                          (source_url
                           .
                           "https://github.com/lathe/lathe-comforts-for-racket.git?path=lathe-comforts-lib")))))))
 ("lathe-comforts-test"
  .
  #hasheq((author . "rokitna@hotmail.com")
          (authors . ("rokitna@hotmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log
                  .
                  "server/built/install/lathe-comforts-test.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/lathe-comforts-test.txt")))
          (checksum . "dc813555d68f0c2bfb9bbf5c76d8c0fc355381b6")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base" "lathe-comforts-lib" "parendown-lib" "rackunit-lib"))
          (dependency-names
           .
           ("base" "lathe-comforts-lib" "parendown-lib" "rackunit-lib"))
          (description . "A collection of utilities. (test)")
          (implies . ())
          (last-checked . 1557339620)
          (last-edit . 1523461311)
          (last-updated . 1551600270)
          (modules
           .
           ((lib "lathe-comforts/tests/experimental/cross-phase-utils-b.rkt")
            (lib "lathe-comforts/tests.rkt")
            (lib "lathe-comforts/tests/experimental/cross-phase-utils.rkt")))
          (name . "lathe-comforts-test")
          (nix-sha256
           .
           "19k5sxqjlg6gi7sp2h2sifbjj1jg3vjmzjmppcjvzynf8kqx3pym")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:rokitna@hotmail.com . #t)
                   (lathe . #t)
                   (ring:2 . #t)
                   (unstable . #t)
                   (util . #t)
                   (utility . #t)))
          (source
           .
           "https://github.com/lathe/lathe-comforts-for-racket.git?path=lathe-comforts-test")
          (tags . ("lathe" "unstable" "util" "utility"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "dc813555d68f0c2bfb9bbf5c76d8c0fc355381b6")
                          (source
                           .
                           "https://github.com/lathe/lathe-comforts-for-racket.git?path=lathe-comforts-test")
                          (source_url
                           .
                           "https://github.com/lathe/lathe-comforts-for-racket.git?path=lathe-comforts-test")))))))
 ("lathe-ordinals"
  .
  #hasheq((author . "rokitna@hotmail.com")
          (authors . ("rokitna@hotmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/lathe-ordinals.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/lathe-ordinals.txt")))
          (checksum . "d6261936fbd274104c923fc70a2bb7c2a5908339")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("lathe-ordinals-doc" "lathe-ordinals-lib"))
          (dependency-names . ("lathe-ordinals-doc" "lathe-ordinals-lib"))
          (description
           .
           "Ordinal numbers supporting addition, multiplication, and exponentiation.")
          (implies . ("lathe-ordinals-doc" "lathe-ordinals-lib"))
          (last-checked . 1557339620)
          (last-edit . 1527731628)
          (last-updated . 1548787244)
          (modules . ())
          (name . "lathe-ordinals")
          (nix-sha256
           .
           "04ra9bzlx7v77nwb8q6cwv23mc2c6rq1xzwgl4r6385ca8cnm7yf")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (arithmetic . #t)
                   (author:rokitna@hotmail.com . #t)
                   (data . #t)
                   (lathe . #t)
                   (math . #t)
                   (ring:2 . #t)
                   (unstable . #t)))
          (source
           .
           "https://github.com/lathe/lathe-ordinals-for-racket.git?path=lathe-ordinals")
          (tags . ("arithmetic" "data" "lathe" "math" "unstable"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "d6261936fbd274104c923fc70a2bb7c2a5908339")
                          (source
                           .
                           "https://github.com/lathe/lathe-ordinals-for-racket.git?path=lathe-ordinals")
                          (source_url
                           .
                           "https://github.com/lathe/lathe-ordinals-for-racket.git?path=lathe-ordinals")))))))
 ("lathe-ordinals-doc"
  .
  #hasheq((author . "rokitna@hotmail.com")
          (authors . ("rokitna@hotmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "lathe-ordinals"
                    "doc/lathe-ordinals@lathe-ordinals-doc/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/lathe-ordinals-doc.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/lathe-ordinals-doc.txt")))
          (checksum . "d6261936fbd274104c923fc70a2bb7c2a5908339")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "lathe-comforts-doc"
            "lathe-comforts-lib"
            "lathe-ordinals-lib"
            "parendown-lib"
            "racket-doc"
            "scribble-lib"))
          (dependency-names
           .
           ("base"
            "lathe-comforts-doc"
            "lathe-comforts-lib"
            "lathe-ordinals-lib"
            "parendown-lib"
            "racket-doc"
            "scribble-lib"))
          (description
           .
           "Ordinal numbers supporting addition, multiplication, and exponentiation. (doc)")
          (implies . ())
          (last-checked . 1557339620)
          (last-edit . 1527731566)
          (last-updated . 1548787244)
          (modules
           .
           ((lib "lathe-ordinals/scribblings/lathe-ordinals.scrbl")))
          (name . "lathe-ordinals-doc")
          (nix-sha256
           .
           "04ra9bzlx7v77nwb8q6cwv23mc2c6rq1xzwgl4r6385ca8cnm7yf")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (arithmetic . #t)
                   (author:rokitna@hotmail.com . #t)
                   (data . #t)
                   (lathe . #t)
                   (math . #t)
                   (ring:2 . #t)
                   (unstable . #t)))
          (source
           .
           "https://github.com/lathe/lathe-ordinals-for-racket.git?path=lathe-ordinals-doc")
          (tags . ("arithmetic" "data" "lathe" "math" "unstable"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "d6261936fbd274104c923fc70a2bb7c2a5908339")
                          (source
                           .
                           "https://github.com/lathe/lathe-ordinals-for-racket.git?path=lathe-ordinals-doc")
                          (source_url
                           .
                           "https://github.com/lathe/lathe-ordinals-for-racket.git?path=lathe-ordinals-doc")))))))
 ("lathe-ordinals-lib"
  .
  #hasheq((author . "rokitna@hotmail.com")
          (authors . ("rokitna@hotmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/lathe-ordinals-lib.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/lathe-ordinals-lib.txt")))
          (checksum . "d6261936fbd274104c923fc70a2bb7c2a5908339")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "lathe-comforts-lib" "parendown"))
          (dependency-names . ("base" "lathe-comforts-lib" "parendown"))
          (description
           .
           "Ordinal numbers supporting addition, multiplication, and exponentiation. (lib)")
          (implies . ())
          (last-checked . 1557339620)
          (last-edit . 1527731356)
          (last-updated . 1548787244)
          (modules
           .
           ((lib "lathe-ordinals/olist-codata.rkt")
            (lib "lathe-ordinals/main.rkt")
            (lib "lathe-ordinals/olist.rkt")))
          (name . "lathe-ordinals-lib")
          (nix-sha256
           .
           "04ra9bzlx7v77nwb8q6cwv23mc2c6rq1xzwgl4r6385ca8cnm7yf")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (arithmetic . #t)
                   (author:rokitna@hotmail.com . #t)
                   (data . #t)
                   (lathe . #t)
                   (math . #t)
                   (ring:2 . #t)
                   (unstable . #t)))
          (source
           .
           "https://github.com/lathe/lathe-ordinals-for-racket.git?path=lathe-ordinals-lib")
          (tags . ("arithmetic" "data" "lathe" "math" "unstable"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "d6261936fbd274104c923fc70a2bb7c2a5908339")
                          (source
                           .
                           "https://github.com/lathe/lathe-ordinals-for-racket.git?path=lathe-ordinals-lib")
                          (source_url
                           .
                           "https://github.com/lathe/lathe-ordinals-for-racket.git?path=lathe-ordinals-lib")))))))
 ("lathe-ordinals-test"
  .
  #hasheq((author . "rokitna@hotmail.com")
          (authors . ("rokitna@hotmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log
                  .
                  "server/built/install/lathe-ordinals-test.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/lathe-ordinals-test.txt")))
          (checksum . "d6261936fbd274104c923fc70a2bb7c2a5908339")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base" "lathe-ordinals-lib" "parendown-lib" "rackunit-lib"))
          (dependency-names
           .
           ("base" "lathe-ordinals-lib" "parendown-lib" "rackunit-lib"))
          (description
           .
           "Ordinal numbers supporting addition, multiplication, and exponentiation. (test)")
          (implies . ())
          (last-checked . 1557339620)
          (last-edit . 1527731425)
          (last-updated . 1548787244)
          (modules . ((lib "lathe-ordinals/tests.rkt")))
          (name . "lathe-ordinals-test")
          (nix-sha256
           .
           "04ra9bzlx7v77nwb8q6cwv23mc2c6rq1xzwgl4r6385ca8cnm7yf")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (arithmetic . #t)
                   (author:rokitna@hotmail.com . #t)
                   (data . #t)
                   (lathe . #t)
                   (math . #t)
                   (ring:2 . #t)
                   (unstable . #t)))
          (source
           .
           "https://github.com/lathe/lathe-ordinals-for-racket.git?path=lathe-ordinals-test")
          (tags . ("arithmetic" "data" "lathe" "math" "unstable"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "d6261936fbd274104c923fc70a2bb7c2a5908339")
                          (source
                           .
                           "https://github.com/lathe/lathe-ordinals-for-racket.git?path=lathe-ordinals-test")
                          (source_url
                           .
                           "https://github.com/lathe/lathe-ordinals-for-racket.git?path=lathe-ordinals-test")))))))
 ("lazy"
  .
  #hash((author . "eli@racket-lang.org stchang@racket-lang.org")
        (checksum . "7660e1e77bdb63416ef94b902df40b5d82c67387")
        (dependencies
         .
         ("base"
          "drracket-plugin-lib"
          "htdp-lib"
          "string-constants-lib"
          "compatibility-lib"
          "mzscheme-doc"
          "scheme-lib"
          "eli-tester"
          "racket-doc"
          "scribble-lib"))
        (dependency-names
         .
         ("base"
          "drracket-plugin-lib"
          "htdp-lib"
          "string-constants-lib"
          "compatibility-lib"
          "mzscheme-doc"
          "scheme-lib"
          "eli-tester"
          "racket-doc"
          "scribble-lib"))
        (description . "eli@racket-lang.org stchang@racket-lang.org")
        (modules . ())
        (name . "lazy")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/lazy.zip")
        (tags . ())))
 ("ldap"
  .
  #hasheq((author . "jay.mccarthy@gmail.com")
          (authors . ("jay.mccarthy@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "ldap" "doc/ldap@ldap/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/ldap.txt")
                 (test-failure-log . "server/built/test-fail/ldap.txt")
                 (test-success-log . #f)))
          (checksum . "e7440a2632f01563182f277135ab066c41157639")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           (("base" #:version "6.2.900.15")
            "eli-tester"
            "racket-doc"
            "scribble-lib"))
          (dependency-names
           .
           ("base" "eli-tester" "racket-doc" "scribble-lib"))
          (description . "A native Racket interface to LDAP authentication.")
          (implies . ())
          (last-checked . 1557339620)
          (last-edit . 1352832285)
          (last-updated . 1502816149)
          (modules
           .
           ((lib "tests/net/test.rkt")
            (lib "net/ldap.rkt")
            (lib "net/ldap/ldap.scrbl")))
          (name . "ldap")
          (nix-sha256
           .
           "0qrnz71q2rbdwskxnbfcabvz3d6hjjmv55nfisvi540wv704hvcq")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:jay.mccarthy@gmail.com . #t)
                   (net . #t)
                   (ring:1 . #t)))
          (source . "github://github.com/jeapostrophe/ldap/master")
          (tags . ("net"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "e7440a2632f01563182f277135ab066c41157639")
                          (source
                           .
                           "github://github.com/jeapostrophe/ldap/master")
                          (source_url
                           .
                           "http://github.com/jeapostrophe/ldap/tree/master")))))))
 ("ldap-ffi"
  .
  #hasheq((author . "kalimehtar@mail.ru dmitryhertz@gmail.com")
          (authors . ("kalimehtar@mail.ru" "dmitryhertz@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "ldap-ffi" "doc/ldap-ffi@ldap-ffi/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/ldap-ffi.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/ldap-ffi.txt")))
          (checksum . "e3d610b15e8680642c8d4ee844ffcd38ea1a20e4")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "rackunit-lib" "scribble-lib" "racket-doc"))
          (dependency-names
           .
           ("base" "rackunit-lib" "scribble-lib" "racket-doc"))
          (description
           .
           "ldap-ffi: a Racket LDAP client built on top of libldap C API")
          (implies . ())
          (last-checked . 1557339620)
          (last-edit . 1502735833)
          (last-updated . 1555877074)
          (modules
           .
           ((lib "ldap-ffi/scribblings/ldap-ffi.scrbl")
            (lib "ldap-ffi/ldap.rkt")
            (lib "ldap-ffi/test.rkt")
            (lib "ldap-ffi/ffi.rkt")
            (lib "ldap-ffi/main.rkt")))
          (name . "ldap-ffi")
          (nix-sha256
           .
           "1nzlvq0snp4js2g03gwm8srg9507xsnawzwjm6lsmzlj6zygvbdb")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:dmitryhertz@gmail.com . #t)
                   (author:kalimehtar@mail.ru . #t)
                   (ffi . #t)
                   (ldap . #t)
                   (net . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/DmHertz/ldap-ffi")
          (tags . ("ffi" "ldap" "net"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "e3d610b15e8680642c8d4ee844ffcd38ea1a20e4")
                          (source . "git://github.com/DmHertz/ldap-ffi")
                          (source_url
                           .
                           "http://github.com/DmHertz/ldap-ffi/tree/master")))))))
 ("learn-to-type"
  .
  #hasheq((author . "laurent.orseau@gmail.com")
          (authors . ("laurent.orseau@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/learn-to-type.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/learn-to-type.txt")))
          (checksum . "e92730f9e7c1560a9f1dc82fbed6046c4532d167")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "gui-lib" "images-lib"))
          (dependency-names . ("base" "gui-lib" "images-lib"))
          (description
           .
           "A very simple GUI program to learn to type by copying a text.")
          (implies . ())
          (last-checked . 1557339620)
          (last-edit . 1383320998)
          (last-updated . 1516438252)
          (modules
           .
           ((lib "learn-to-type/ltt-gui.rkt") (lib "learn-to-type/main.rkt")))
          (name . "learn-to-type")
          (nix-sha256
           .
           "1spvn8vrd9yfj3vamaqa1ljm060kjnzc3j5qr9rhxgip33g9kjjh")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:laurent.orseau@gmail.com . #t)
                   (gui . #t)
                   (ring:1 . #t)))
          (source . "github://github.com/Metaxal/learn-to-type/master")
          (tags . ("gui"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "e92730f9e7c1560a9f1dc82fbed6046c4532d167")
                          (source
                           .
                           "github://github.com/Metaxal/learn-to-type/master")
                          (source_url
                           .
                           "http://github.com/Metaxal/learn-to-type/tree/master")))))))
 ("left-pad"
  .
  #hasheq((author . "types@ccs.neu.edu")
          (authors . ("types@ccs.neu.edu"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "left-pad" "doc/left-pad@left-pad/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/left-pad.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/left-pad.txt")))
          (checksum . "1a3a06e71e0a61d51ded71bc7c66b3fdcd2b843b")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "typed-racket-lib"
            "typed-racket-more"
            "rackunit-lib"
            "scribble-lib"
            "racket-doc"))
          (dependency-names
           .
           ("base"
            "typed-racket-lib"
            "typed-racket-more"
            "rackunit-lib"
            "scribble-lib"
            "racket-doc"))
          (description . "String left pad")
          (implies . ())
          (last-checked . 1557339620)
          (last-edit . 1480731742)
          (last-updated . 1552755854)
          (modules
           .
           ((lib "left-pad/docs/left-pad.scrbl")
            (lib "left-pad/main.rkt")
            (lib "left-pad/docs/typed-left-pad.scrbl")
            (lib "left-pad/tests/typed.rkt")
            (lib "left-pad/private/left-pad.rkt")
            (lib "left-pad/typed.rkt")
            (lib "left-pad/tests/untyped.rkt")))
          (name . "left-pad")
          (nix-sha256
           .
           "1j8cwnqvwm9k8xxsnxg3h7jlslydz5mh6hba52pkkrjdlzqhfd1a")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:types@ccs.neu.edu . #t)
                   (ring:1 . #t)
                   (string . #t)))
          (source . "git://github.com/bennn/racket-left-pad")
          (tags . ("string"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "1a3a06e71e0a61d51ded71bc7c66b3fdcd2b843b")
                          (source . "git://github.com/bennn/racket-left-pad")
                          (source_url
                           .
                           "http://github.com/bennn/racket-left-pad/tree/master")))))))
 ("leftist-tree"
  .
  #hasheq((author . "zeppieri@gmail.com")
          (authors . ("zeppieri@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "leftist-tree"
                    "doc/leftist-tree@leftist-tree/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/leftist-tree.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/leftist-tree.txt")))
          (checksum . "3e4f55aecdd0978f282dde6964f444b5da71ed52")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base" "racket-doc" "scribble-lib" "data-enumerate-lib"))
          (dependency-names
           .
           ("base" "racket-doc" "scribble-lib" "data-enumerate-lib"))
          (description . "Functional priority queues")
          (implies . ())
          (last-checked . 1557339620)
          (last-edit . 1440881081)
          (last-updated . 1502816149)
          (modules
           .
           ((lib "data/leftist-tree/leftist-tree.scrbl")
            (lib "data/leftist-tree.rkt")))
          (name . "leftist-tree")
          (nix-sha256
           .
           "0wsaq65mngsagnckrcii7v2dclfxy22fgqj3b5zz7xl32ljdyxav")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:zeppieri@gmail.com . #t)
                   (data . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/97jaz/leftist-tree")
          (tags . ("data"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "3e4f55aecdd0978f282dde6964f444b5da71ed52")
                          (source . "git://github.com/97jaz/leftist-tree")
                          (source_url
                           .
                           "http://github.com/97jaz/leftist-tree/tree/master")))))))
 ("lens"
  .
  #hasheq((author . "jackhfirth@gmail.com alexander@knauth.org")
          (authors . ("jackhfirth@gmail.com" "alexander@knauth.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/lens.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/lens.txt")))
          (checksum . "376c286a68ed34ee723cf5c5a76dcba9828db0c1")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "lens-common"
            "lens-data"
            "lens-lib"
            "lens-unstable"
            "lens-doc"))
          (dependency-names
           .
           ("base"
            "lens-common"
            "lens-data"
            "lens-lib"
            "lens-unstable"
            "lens-doc"))
          (description . "Composable, functional lenses")
          (implies
           .
           ("lens-common" "lens-data" "lens-lib" "lens-unstable" "lens-doc"))
          (last-checked . 1557339621)
          (last-edit . 1500074979)
          (last-updated . 1514736112)
          (modules . ())
          (name . "lens")
          (nix-sha256
           .
           "0x4v6pd5l15wqppxmd2k8jg6g151rbvv7qmyyzr4vsl399mlyljz")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:alexander@knauth.org . #t)
                   (author:jackhfirth@gmail.com . #t)
                   (data . #t)
                   (functional . #t)
                   (lens . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/jackfirth/lens?path=lens")
          (tags . ("data" "functional" "lens"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "376c286a68ed34ee723cf5c5a76dcba9828db0c1")
                          (source
                           .
                           "git://github.com/jackfirth/lens?path=lens")
                          (source_url
                           .
                           "http://github.com/jackfirth/lens/tree/master?path=lens")))))))
 ("lens-common"
  .
  #hasheq((author . "jackhfirth@gmail.com alexander@knauth.org")
          (authors . ("jackhfirth@gmail.com" "alexander@knauth.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/lens-common.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/lens-common.txt")))
          (checksum . "376c286a68ed34ee723cf5c5a76dcba9828db0c1")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           (("racket" #:version "6.3")
            "base"
            "fancy-app"
            "rackunit-lib"
            "reprovide-lang"
            "lens-data"
            "sweet-exp-lib"))
          (dependency-names
           .
           ("base"
            "fancy-app"
            "rackunit-lib"
            "reprovide-lang"
            "lens-data"
            "sweet-exp-lib"))
          (description . "Base lens constructors and additional combinators")
          (implies . ())
          (last-checked . 1557339621)
          (last-edit . 1500074998)
          (last-updated . 1514736112)
          (modules
           .
           ((lib "lens/private/base/base.rkt")
            (lib "lens/private/isomorphism/compound.rkt")
            (lib "lens/private/test-util/test-multi.rkt")
            (lib "lens/private/compound/identity.rkt")
            (lib "lens/private/base/view-set.rkt")
            (lib "lens/private/util/rest-contract.rkt")
            (lib "lens/private/compound/arrow.rkt")
            (lib "lens/private/base/transform.rkt")
            (lib "lens/private/common/applicable.rkt")
            (lib "lens/private/compound/if.rkt")
            (lib "lens/private/util/id-append.rkt")
            (lib "lens/private/base/contract.rkt")
            (lib "lens/private/compound/lazy.rkt")
            (lib "lens/private/isomorphism/base.rkt")
            (lib "lens/private/compound/thrush.rkt")
            (lib "lens/private/compound/zoom.rkt")
            (lib "lens/private/test-util/test-lens.rkt")
            (lib "lens/private/util/list-pair-contract.rkt")
            (lib "lens/private/compound/main.rkt")
            (lib "lens/private/base/make-lens.rkt")
            (lib "lens/private/compound/compose.rkt")
            (lib "lens/private/base/gen-lens.rkt")
            (lib "lens/common.rkt")
            (lib "lens/private/compound/define-nested.rkt")
            (lib "lens/private/base/main.rkt")))
          (name . "lens-common")
          (nix-sha256
           .
           "0x4v6pd5l15wqppxmd2k8jg6g151rbvv7qmyyzr4vsl399mlyljz")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:alexander@knauth.org . #t)
                   (author:jackhfirth@gmail.com . #t)
                   (data . #t)
                   (functional . #t)
                   (lens . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/jackfirth/lens?path=lens-common")
          (tags . ("data" "functional" "lens"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "376c286a68ed34ee723cf5c5a76dcba9828db0c1")
                          (source
                           .
                           "git://github.com/jackfirth/lens?path=lens-common")
                          (source_url
                           .
                           "http://github.com/jackfirth/lens/tree/master?path=lens-common")))))))
 ("lens-data"
  .
  #hasheq((author . "jackhfirth@gmail.com alexander@knauth.org")
          (authors . ("jackhfirth@gmail.com" "alexander@knauth.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/lens-data.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/lens-data.txt")))
          (checksum . "376c286a68ed34ee723cf5c5a76dcba9828db0c1")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           (("racket" #:version "6.3")
            "base"
            "lens-common"
            "rackunit-lib"
            "fancy-app"
            "syntax-classes-lib"
            "struct-update-lib"
            "kw-make-struct"
            "reprovide-lang"
            "sweet-exp-lib"))
          (dependency-names
           .
           ("base"
            "lens-common"
            "rackunit-lib"
            "fancy-app"
            "syntax-classes-lib"
            "struct-update-lib"
            "kw-make-struct"
            "reprovide-lang"
            "sweet-exp-lib"))
          (description
           .
           "Lens constructors for various Racket data structures")
          (implies . ())
          (last-checked . 1557339621)
          (last-edit . 1500075017)
          (last-updated . 1514736112)
          (modules
           .
           ((lib "lens/private/struct/struct-list.rkt")
            (lib "lens/private/hash/join-hash.rkt")
            (lib "lens/private/vector/ref.rkt")
            (lib "lens/private/set/set-filterer.rkt")
            (lib "lens/private/struct/main.rkt")
            (lib "lens/private/list/main.rkt")
            (lib "lens/private/struct/struct-nested.rkt")
            (lib "lens/private/syntax/syntax.rkt")
            (lib "lens/private/struct/struct.rkt")
            (lib "lens/private/string/main.rkt")
            (lib "lens/private/hash/pick.rkt")
            (lib "lens/private/util/functional-dict.rkt")
            (lib "lens/private/vector/nested.rkt")
            (lib "lens/private/vector/pick.rkt")
            (lib "lens/private/string/substring.rkt")
            (lib "lens/private/struct/field.rkt")
            (lib "lens/private/dict/dict.rkt")
            (lib "lens/private/syntax/stx.rkt")
            (lib "lens/private/stream/stream.rkt")
            (lib "lens/private/dict/dict-nested.rkt")
            (lib "lens/private/list/map.rkt")
            (lib "lens/private/syntax/main.rkt")
            (lib "lens/data/dict.rkt")
            (lib "lens/private/list/sublist.rkt")
            (lib "lens/private/hash/hash-filterer.rkt")
            (lib "lens/private/list/append.rkt")
            (lib "lens/private/tests/gen-lens-fallback-loop.rkt")
            (lib "lens/data/string.rkt")
            (lib "lens/data.rkt")
            (lib "lens/private/list/cadr-etc.rkt")
            (lib "lens/private/string/join-string.rkt")
            (lib "lens/private/hash/main.rkt")
            (lib "lens/private/util/immutable.rkt")
            (lib "lens/private/syntax/syntax-keyword.rkt")
            (lib "lens/private/list/join-list.rkt")
            (lib "lens/private/string/string.rkt")
            (lib "lens/private/list/multi.rkt")
            (lib "lens/data/hash.rkt")
            (lib "lens/private/list/list-ref-take-drop.rkt")
            (lib "lens/private/match.rkt")
            (lib "lens/private/list/join-assoc.rkt")
            (lib "lens/data/stream.rkt")
            (lib "lens/private/hash/nested.rkt")
            (lib "lens/private/util/functional-set.rkt")
            (lib "lens/private/list/assoc.rkt")
            (lib "lens/private/list/reverse.rkt")
            (lib "lens/private/hash/ref.rkt")
            (lib "lens/private/util/improper-list-length.rkt")
            (lib "lens/private/util/alternating-list.rkt")
            (lib "lens/private/string/string-split.rkt")
            (lib "lens/data/vector.rkt")
            (lib "lens/private/vector/main.rkt")
            (lib "lens/private/struct/struct-join.rkt")
            (lib "lens/data/list.rkt")
            (lib "lens/private/view-set/set-all.rkt")
            (lib "lens/private/vector/join-vector.rkt")
            (lib "lens/private/isomorphism/data.rkt")
            (lib "lens/data/struct.rkt")
            (lib "lens/private/set/set-member.rkt")
            (lib "lens/private/list/flatten.rkt")
            (lib "lens/private/list/car-cdr.rkt")
            (lib "lens/private/isomorphism/main.rkt")
            (lib "lens/private/syntax/srcloc.rkt")))
          (name . "lens-data")
          (nix-sha256
           .
           "0x4v6pd5l15wqppxmd2k8jg6g151rbvv7qmyyzr4vsl399mlyljz")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:alexander@knauth.org . #t)
                   (author:jackhfirth@gmail.com . #t)
                   (data . #t)
                   (functional . #t)
                   (lens . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/jackfirth/lens?path=lens-data")
          (tags . ("data" "functional" "lens"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "376c286a68ed34ee723cf5c5a76dcba9828db0c1")
                          (source
                           .
                           "git://github.com/jackfirth/lens?path=lens-data")
                          (source_url
                           .
                           "http://github.com/jackfirth/lens/tree/master?path=lens-data")))))))
 ("lens-doc"
  .
  #hasheq((author . "jackhfirth@gmail.com alexander@knauth.org")
          (authors . ("jackhfirth@gmail.com" "alexander@knauth.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "lens" "doc/lens@lens-doc/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/lens-doc.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/lens-doc.txt")))
          (checksum . "376c286a68ed34ee723cf5c5a76dcba9828db0c1")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "lens-lib"
            "lens-unstable"
            "scribble-lib"
            "reprovide-lang"
            "jack-scribble-example"
            "at-exp-lib"
            "doc-coverage"
            "racket-doc"
            "sweet-exp-lib"))
          (dependency-names
           .
           ("base"
            "lens-lib"
            "lens-unstable"
            "scribble-lib"
            "reprovide-lang"
            "jack-scribble-example"
            "at-exp-lib"
            "doc-coverage"
            "racket-doc"
            "sweet-exp-lib"))
          (description . "Documentation for the lens libraries")
          (implies . ())
          (last-checked . 1557339621)
          (last-edit . 1500075042)
          (last-updated . 1514736113)
          (modules
           .
           ((lib "lens/private/scribblings/reference/data.scrbl")
            (lib "lens/private/tests/doc-coverage.rkt")
            (lib "lens/private/doc-util/lenses-examples.rkt")
            (lib "unstable/lens/string-split.scrbl")
            (lib "lens/private/scribblings/guide/user-defined/custom.scrbl")
            (lib "lens/private/doc-util/main.rkt")
            (lib "unstable/lens/dict-nested.scrbl")
            (lib "lens/private/scribblings/guide/built-in/key-value.scrbl")
            (lib "lens/private/hash/join-hash.scrbl")
            (lib "lens/private/string/string.scrbl")
            (lib "lens/private/list/multi.scrbl")
            (lib "lens/private/vector/pick.scrbl")
            (lib "lens/private/list/assoc.scrbl")
            (lib "lens/private/syntax/srcloc.scrbl")
            (lib "unstable/lens/set-filterer.scrbl")
            (lib "lens/private/scribblings/guide/introduction.scrbl")
            (lib "lens/private/struct/struct.scrbl")
            (lib "unstable/lens/struct-join.scrbl")
            (lib "lens/private/list/car-cdr.scrbl")
            (lib "lens/private/dict/dict.scrbl")
            (lib "unstable/lens/map.scrbl")
            (lib "lens/private/stream/stream.scrbl")
            (lib "lens/private/doc-util/lens-tech.rkt")
            (lib "unstable/lens/isomorphism.scrbl")
            (lib "lens/private/scribblings/guide.scrbl")
            (lib "unstable/lens/tests/doc-coverage.rkt")
            (lib "unstable/lens/main.scrbl")
            (lib "lens/private/doc-util/deflenses.rkt")
            (lib "lens/private/scribblings/guide/built-in.scrbl")
            (lib "lens/private/string/join-string.scrbl")
            (lib "lens/private/base/view-set.scrbl")
            (lib "lens/private/list/list-ref-take-drop.scrbl")
            (lib "lens/private/hash/main.scrbl")
            (lib "lens/main.scrbl")
            (lib "lens/private/compound/main.scrbl")
            (lib "unstable/lens/sublist.scrbl")
            (lib "lens/private/base/laws.scrbl")
            (lib "lens/private/base/transform.scrbl")
            (lib "lens/private/base/main.scrbl")
            (lib "unstable/lens/set-all.scrbl")
            (lib "lens/private/list/flatten.scrbl")
            (lib "lens/private/vector/main.scrbl")
            (lib "lens/private/hash/ref.scrbl")
            (lib "unstable/lens/arrow.scrbl")
            (lib "lens/private/doc-util/other-reference.rkt")
            (lib "unstable/lens/hash-filterer.scrbl")
            (lib "lens/private/struct/field.scrbl")
            (lib "lens/private/scribblings/guide/user-defined.scrbl")
            (lib "lens/private/doc-util/include-sections.rkt")
            (lib "lens/private/string/main.scrbl")
            (lib "unstable/lens/define-nested.scrbl")
            (lib "unstable/lens/struct-list.scrbl")
            (lib "unstable/lens/zoom.scrbl")
            (lib "lens/private/list/main.scrbl")
            (lib "unstable/lens/lazy.scrbl")
            (lib "lens/private/scribblings/guide/built-in/ordered.scrbl")
            (lib "lens/private/compound/compose.scrbl")
            (lib "unstable/lens/struct-provide.scrbl")
            (lib "unstable/lens/substring.scrbl")
            (lib "lens/private/doc-util/scribble-include-no-subsection.rkt")
            (lib "lens/private/base/base.scrbl")
            (lib "unstable/lens/if.scrbl")
            (lib "lens/private/vector/join-vector.scrbl")
            (lib "lens/private/vector/ref.scrbl")
            (lib "lens/private/list/join-list.scrbl")
            (lib "lens/private/scribblings/guide/user-defined/struct.scrbl")
            (lib "unstable/lens/syntax.scrbl")
            (lib "unstable/lens/set-member.scrbl")
            (lib "lens/private/hash/pick.scrbl")
            (lib "unstable/lens/join-assoc.scrbl")
            (lib "lens/private/base/contract.scrbl")
            (lib "lens/private/hash/nested.scrbl")
            (lib "lens/private/doc-util/stability-notice.rkt")
            (lib "lens/private/compound/thrush.scrbl")
            (lib "unstable/lens/match.scrbl")
            (lib "lens/private/vector/nested.scrbl")
            (lib "unstable/lens/struct-nested.scrbl")
            (lib "lens/private/scribblings/reference/common.scrbl")
            (lib "lens/private/scribblings/reference.scrbl")
            (lib "lens/private/syntax/stx.scrbl")
            (lib "lens/private/struct/main.scrbl")
            (lib "lens/applicable.scrbl")))
          (name . "lens-doc")
          (nix-sha256
           .
           "0x4v6pd5l15wqppxmd2k8jg6g151rbvv7qmyyzr4vsl399mlyljz")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:alexander@knauth.org . #t)
                   (author:jackhfirth@gmail.com . #t)
                   (data . #t)
                   (functional . #t)
                   (lens . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/jackfirth/lens?path=lens-doc")
          (tags . ("data" "functional" "lens"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "376c286a68ed34ee723cf5c5a76dcba9828db0c1")
                          (source
                           .
                           "git://github.com/jackfirth/lens?path=lens-doc")
                          (source_url
                           .
                           "http://github.com/jackfirth/lens/tree/master?path=lens-doc")))))))
 ("lens-lib"
  .
  #hasheq((author . "jackhfirth@gmail.com alexander@knauth.org")
          (authors . ("jackhfirth@gmail.com" "alexander@knauth.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/lens-lib.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/lens-lib.txt")))
          (checksum . "376c286a68ed34ee723cf5c5a76dcba9828db0c1")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "lens-common"
            "lens-data"
            "reprovide-lang"
            "rackunit-lib"
            "sweet-exp-lib"))
          (dependency-names
           .
           ("base"
            "lens-common"
            "lens-data"
            "reprovide-lang"
            "rackunit-lib"
            "sweet-exp-lib"))
          (description
           .
           "Implementation (no docs) of the lens library, includes lens-data and lens-common")
          (implies . ("lens-common" "lens-data"))
          (last-checked . 1557339621)
          (last-edit . 1500075070)
          (last-updated . 1514736113)
          (modules . ((lib "lens/applicable.rkt") (lib "lens/main.rkt")))
          (name . "lens-lib")
          (nix-sha256
           .
           "0x4v6pd5l15wqppxmd2k8jg6g151rbvv7qmyyzr4vsl399mlyljz")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:alexander@knauth.org . #t)
                   (author:jackhfirth@gmail.com . #t)
                   (data . #t)
                   (functional . #t)
                   (lens . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/jackfirth/lens?path=lens-lib")
          (tags . ("data" "functional" "lens"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "376c286a68ed34ee723cf5c5a76dcba9828db0c1")
                          (source
                           .
                           "git://github.com/jackfirth/lens?path=lens-lib")
                          (source_url
                           .
                           "http://github.com/jackfirth/lens/tree/master?path=lens-lib")))))))
 ("lens-unstable"
  .
  #hasheq((author . "jackhfirth@gmail.com alexander@knauth.org")
          (authors . ("jackhfirth@gmail.com" "alexander@knauth.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/lens-unstable.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/lens-unstable.txt")))
          (checksum . "376c286a68ed34ee723cf5c5a76dcba9828db0c1")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base" "lens-lib" "reprovide-lang" "sweet-exp-lib"))
          (dependency-names
           .
           ("base" "lens-lib" "reprovide-lang" "sweet-exp-lib"))
          (description . "Unstable and experimental features for lenses")
          (implies . ())
          (last-checked . 1557339621)
          (last-edit . 1500075095)
          (last-updated . 1514736114)
          (modules
           .
           ((lib "unstable/lens/string-split.rkt")
            (lib "unstable/lens/set-member.rkt")
            (lib "unstable/lens/struct-join.rkt")
            (lib "unstable/lens/struct-list.rkt")
            (lib "unstable/lens/if.rkt")
            (lib "unstable/lens/syntax/stx.rkt")
            (lib "unstable/lens/dict-nested.rkt")
            (lib "unstable/lens/zoom.rkt")
            (lib "unstable/lens/define-nested.rkt")
            (lib "unstable/lens/struct-provide.rkt")
            (lib "unstable/lens/map.rkt")
            (lib "unstable/lens/arrow.rkt")
            (lib "unstable/lens/hash-filterer.rkt")
            (lib "unstable/lens/struct-nested.rkt")
            (lib "unstable/lens/syntax.rkt")
            (lib "unstable/lens/isomorphism.rkt")
            (lib "unstable/lens.rkt")
            (lib "unstable/lens/join-assoc.rkt")
            (lib "unstable/lens/sublist.rkt")
            (lib "unstable/lens/substring.rkt")
            (lib "unstable/lens/lazy.rkt")
            (lib "unstable/lens/match.rkt")
            (lib "unstable/lens/reverse.rkt")
            (lib "unstable/lens/main.rkt")
            (lib "unstable/lens/syntax/srcloc.rkt")
            (lib "unstable/lens/flatten.rkt")
            (lib "unstable/lens/set-all.rkt")
            (lib "unstable/lens/set-filterer.rkt")))
          (name . "lens-unstable")
          (nix-sha256
           .
           "0x4v6pd5l15wqppxmd2k8jg6g151rbvv7qmyyzr4vsl399mlyljz")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:alexander@knauth.org . #t)
                   (author:jackhfirth@gmail.com . #t)
                   (data . #t)
                   (functional . #t)
                   (lens . #t)
                   (ring:1 . #t)
                   (unstable . #t)))
          (source . "git://github.com/jackfirth/lens?path=lens-unstable")
          (tags . ("data" "functional" "lens" "unstable"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "376c286a68ed34ee723cf5c5a76dcba9828db0c1")
                          (source
                           .
                           "git://github.com/jackfirth/lens?path=lens-unstable")
                          (source_url
                           .
                           "http://github.com/jackfirth/lens/tree/master?path=lens-unstable")))))))
 ("levenshtein"
  .
  #hasheq((author . "neil@neilvandyke.org")
          (authors . ("neil@neilvandyke.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "levenshtein"
                    "doc/levenshtein@levenshtein/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/levenshtein.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/levenshtein.txt")))
          (checksum . "47882e819e941121e4c1873f907502120ebb4382")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base" "mcfly" "racket-doc" "scribble-lib" "overeasy"))
          (dependency-names
           .
           ("base" "mcfly" "racket-doc" "scribble-lib" "overeasy"))
          (description . "Levenshtein Distance Metric")
          (implies . ())
          (last-checked . 1557339621)
          (last-edit . 1456707768)
          (last-updated . 1502816152)
          (modules
           .
           ((lib "levenshtein/main.rkt")
            (lib "levenshtein/levenshtein.scrbl")))
          (name . "levenshtein")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (:no-tag: . #t)
                   (author:neil@neilvandyke.org . #t)
                   (ring:1 . #t)))
          (source . "http://www.neilvandyke.org/racket/levenshtein.zip")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "47882e819e941121e4c1873f907502120ebb4382")
                          (source
                           .
                           "http://www.neilvandyke.org/racket/levenshtein.zip")
                          (source_url
                           .
                           "http://www.neilvandyke.org/racket/levenshtein.zip")))))))
 ("libgit2"
  .
  #hasheq((author . "clements@racket-lang.org bradley.busching@gmail.com")
          (authors
           .
           ("clements@racket-lang.org" "bradley.busching@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "libgit2" "doc/libgit2@libgit2/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/libgit2.txt")
                 (test-failure-log . "server/built/test-fail/libgit2.txt")
                 (test-success-log . #f)))
          (checksum . "6d6a007543900eb7a6fbbeba55850288665bdde5")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "rackunit-lib"
            ("libgit2-x86_64-linux-natipkg" #:platform "x86_64-linux-natipkg")
            "rackunit-lib"
            "scribble-lib"
            "racket-doc"))
          (dependency-names
           .
           ("base"
            "rackunit-lib"
            "libgit2-x86_64-linux-natipkg"
            "rackunit-lib"
            "scribble-lib"
            "racket-doc"))
          (description . "Racket bindings for the Libgit2 library.")
          (implies . ())
          (last-checked . 1557339622)
          (last-edit . 1541465024)
          (last-updated . 1557181205)
          (modules
           .
           ((lib "libgit2/scribblings/message.scrbl")
            (lib "libgit2/include/oidarray.rkt")
            (lib "libgit2/include/filter.rkt")
            (lib "libgit2/scribblings/signature.scrbl")
            (lib "libgit2/include/buffer.rkt")
            (lib "libgit2/include/trace.rkt")
            (lib "libgit2/include/blame.rkt")
            (lib "libgit2/scribblings/treebuilder.scrbl")
            (lib "libgit2/scribblings/stash.scrbl")
            (lib "libgit2/include/errors.rkt")
            (lib "libgit2/scribblings/fetch.scrbl")
            (lib "libgit2/include/checkout.rkt")
            (lib "libgit2/include/transaction.rkt")
            (lib "libgit2/scribblings/revert.scrbl")
            (lib "libgit2/include/branch.rkt")
            (lib "libgit2/scribblings/errors.scrbl")
            (lib "libgit2/scribblings/merge.scrbl")
            (lib "libgit2/scribblings/libgit2.scrbl")
            (lib "libgit2/scribblings/filter.scrbl")
            (lib "libgit2/include/net.rkt")
            (lib "libgit2/test/test-libgit2.rkt")
            (lib "libgit2/include/pack.rkt")
            (lib "libgit2/include/indexer.rkt")
            (lib "libgit2/scribblings/odb.scrbl")
            (lib "libgit2/include/revert.rkt")
            (lib "libgit2/scribblings/describe.scrbl")
            (lib "libgit2/include/describe.rkt")
            (lib "libgit2/include/strarray.rkt")
            (lib "libgit2/scribblings/note.scrbl")
            (lib "libgit2/include/refspec.rkt")
            (lib "libgit2/scribblings/ignore.scrbl")
            (lib "libgit2/scribblings/oid_array.scrbl")
            (lib "libgit2/include/cred_helpers.rkt")
            (lib "libgit2/scribblings/reset.scrbl")
            (lib "libgit2/include/revwalk.rkt")
            (lib "libgit2/scribblings/clone.scrbl")
            (lib "libgit2/include/odb_backend.rkt")
            (lib "libgit2/scribblings/patch.scrbl")
            (lib "libgit2/include/cherrypick.rkt")
            (lib "libgit2/scribblings/proxy.scrbl")
            (lib "libgit2/scribblings/commit.scrbl")
            (lib "libgit2/include/status.rkt")
            (lib "libgit2/scribblings/tree.scrbl")
            (lib "libgit2/scribblings/repository.scrbl")
            (lib "libgit2/include/submodule.rkt")
            (lib "libgit2/scribblings/tag.scrbl")
            (lib "libgit2/scribblings/remote.scrbl")
            (lib "libgit2/scribblings/object.scrbl")
            (lib "libgit2/scribblings/revparse.scrbl")
            (lib "libgit2/scribblings/cherrypick.scrbl")
            (lib "libgit2/scribblings/oid.scrbl")
            (lib "libgit2/include/reflog.rkt")
            (lib "libgit2/include/reset.rkt")
            (lib "libgit2/scribblings/refdb.scrbl")
            (lib "libgit2/scribblings/global.scrbl")
            (lib "libgit2/include/index.rkt")
            (lib "libgit2/scribblings/config.scrbl")
            (lib "libgit2/scribblings/diff.scrbl")
            (lib "libgit2/include/define.rkt")
            (lib "libgit2/include/ignore.rkt")
            (lib "libgit2/include/types.rkt")
            (lib "libgit2/include/oid.rkt")
            (lib "libgit2/include/clone.rkt")
            (lib "libgit2/scribblings/refs.scrbl")
            (lib "libgit2/scribblings/refspec.scrbl")
            (lib "libgit2/scribblings/cherrpick.scrbl")
            (lib "libgit2/scribblings/indexer.scrbl")
            (lib "libgit2/scribblings/buffer.scrbl")
            (lib "libgit2/include/rebase.rkt")
            (lib "libgit2/scribblings/pathspec.scrbl")
            (lib "libgit2/include/pathspec.rkt")
            (lib "libgit2/include/graph.rkt")
            (lib "libgit2/scribblings/cred.scrbl")
            (lib "libgit2/include/remote.rkt")
            (lib "libgit2/include/stash.rkt")
            (lib "libgit2/scribblings/blob.scrbl")
            (lib "libgit2/include/merge.rkt")
            (lib "libgit2/scribblings/push.scrbl")
            (lib "libgit2/include/signature.rkt")
            (lib "libgit2/scribblings/branch.scrbl")
            (lib "libgit2/scribblings/index.scrbl")
            (lib "libgit2/scribblings/packbuilder.scrbl")
            (lib "libgit2/scribblings/revwalk.scrbl")
            (lib "libgit2/include/config.rkt")
            (lib "libgit2/include/blob.rkt")
            (lib "libgit2/main.rkt")
            (lib "libgit2/include/patch.rkt")
            (lib "libgit2/scribblings/status.scrbl")
            (lib "libgit2/include/diff.rkt")
            (lib "libgit2/include/odb.rkt")
            (lib "libgit2/include/refs.rkt")
            (lib "libgit2/scribblings/trace.scrbl")
            (lib "libgit2/include/proxy.rkt")
            (lib "libgit2/scribblings/rebase.scrbl")
            (lib "libgit2/include/notes.rkt")
            (lib "libgit2/include/tag.rkt")
            (lib "libgit2/include/transport.rkt")
            (lib "libgit2/include/refdb.rkt")
            (lib "libgit2/include/utils.rkt")
            (lib "libgit2/scribblings/submodule.scrbl")
            (lib "libgit2/scribblings/annotated_commit.scrbl")
            (lib "libgit2/include/tree.rkt")
            (lib "libgit2/scribblings/checkout.scrbl")
            (lib "libgit2/scribblings/strarray.scrbl")
            (lib "libgit2/scribblings/functions.scrbl")
            (lib "libgit2/include/repository.rkt")
            (lib "libgit2/include/revparse.rkt")
            (lib "libgit2/scribblings/graph.scrbl")
            (lib "libgit2/include/message.rkt")
            (lib "libgit2/scribblings/blame.scrbl")
            (lib "libgit2/scribblings/reflog.scrbl")
            (lib "libgit2/include/commit.rkt")
            (lib "libgit2/include/global.rkt")
            (lib "libgit2/include/object.rkt")
            (lib "libgit2/include/annotated_commit.rkt")))
          (name . "libgit2")
          (nix-sha256
           .
           "0cfqhmyi4ci6jl9wgb40mi24qmlw7qv6dmhvdjlgz9d8j7i5an5c")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:bradley.busching@gmail.com . #t)
                   (author:clements@racket-lang.org . #t)
                   (ffi . #t)
                   (git . #t)
                   (ring:1 . #t)))
          (source . "https://github.com/bbusching/libgit2.git")
          (tags . ("ffi" "git"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "6d6a007543900eb7a6fbbeba55850288665bdde5")
                          (source
                           .
                           "https://github.com/bbusching/libgit2.git")
                          (source_url
                           .
                           "https://github.com/bbusching/libgit2.git")))))))
 ("libgit2-x86_64-linux"
  .
  #hasheq((author . "philip@philipmcgrath.com")
          (authors . ("philip@philipmcgrath.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log
                  .
                  "server/built/install/libgit2-x86_64-linux.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/libgit2-x86_64-linux.txt")))
          (checksum . "cc360a4d87c3b861152d13591e99151544cf3998")
          (checksum-error . #f)
          (conflicts . ())
          (date-added . 1549747129)
          (dependencies . ("base"))
          (dependency-names . ("base"))
          (description
           .
           "native libraries for \"libgit2\" on \"libgit2-x86_64-linux\"")
          (implies . ())
          (last-checked . 1557339622)
          (last-edit . 1549747129)
          (last-updated . 1549935641)
          (modules . ())
          (name . "libgit2-x86_64-linux")
          (nix-sha256
           .
           "1i8ijndgysry7izggqmhqyc4n96f5xr38jp32j5gx0dqnq6k8mg0")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:philip@philipmcgrath.com . #t)
                   (binary . #t)
                   (git . #t)
                   (ring:2 . #t)))
          (source
           .
           "https://github.com/LiberalArtist/native-libgit2-pkgs.git?path=libgit2-x86_64-linux")
          (tags . ("binary" "git"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "cc360a4d87c3b861152d13591e99151544cf3998")
                          (source
                           .
                           "https://github.com/LiberalArtist/native-libgit2-pkgs.git?path=libgit2-x86_64-linux")
                          (source_url
                           .
                           "https://github.com/LiberalArtist/native-libgit2-pkgs.git?path=libgit2-x86_64-linux")))))))
 ("libgit2-x86_64-linux-natipkg"
  .
  #hasheq((author . "clements@racket-lang.org")
          (authors . ("clements@racket-lang.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log
                  .
                  "server/built/install/libgit2-x86_64-linux-natipkg.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/libgit2-x86_64-linux-natipkg.txt")))
          (checksum . "800f798d74af301135f6921bbc914097778b8a20")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base"))
          (dependency-names . ("base"))
          (description
           .
           "This package contains the x86_64 linux build of the libgit2 library, for use by the libgit2 package.")
          (implies . ())
          (last-checked . 1557339622)
          (last-edit . 1514333423)
          (last-updated . 1514333423)
          (modules . ())
          (name . "libgit2-x86_64-linux-natipkg")
          (nix-sha256
           .
           "1wx8f8ng6jmgk4mrp6p0d47h4l4f98pwbf0z1vm81ry3nvld44b4")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:clements@racket-lang.org . #t)
                   (git . #t)
                   (ring:2 . #t)))
          (source
           .
           "https://github.com/jbclements/libgit2-x86_64-linux-natipkg.git?path=libgit2-x86_64-linux")
          (tags . ("git"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "800f798d74af301135f6921bbc914097778b8a20")
                          (source
                           .
                           "https://github.com/jbclements/libgit2-x86_64-linux-natipkg.git?path=libgit2-x86_64-linux")
                          (source_url
                           .
                           "https://github.com/jbclements/libgit2-x86_64-linux-natipkg.git?path=libgit2-x86_64-linux")))))))
 ("libgit2-x86_64-macosx"
  .
  #hasheq((author . "philip@philipmcgrath.com")
          (authors . ("philip@philipmcgrath.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log
                  .
                  "server/built/install/libgit2-x86_64-macosx.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/libgit2-x86_64-macosx.txt")))
          (checksum . "cc360a4d87c3b861152d13591e99151544cf3998")
          (checksum-error . #f)
          (conflicts . ())
          (date-added . 1549575756)
          (dependencies . ("base"))
          (dependency-names . ("base"))
          (description
           .
           "native libraries for \"libgit2\" on \"x86_64-macosx\"")
          (implies . ())
          (last-checked . 1557339622)
          (last-edit . 1549575756)
          (last-updated . 1549935644)
          (modules . ())
          (name . "libgit2-x86_64-macosx")
          (nix-sha256
           .
           "1i8ijndgysry7izggqmhqyc4n96f5xr38jp32j5gx0dqnq6k8mg0")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:philip@philipmcgrath.com . #t)
                   (binary . #t)
                   (git . #t)
                   (ring:2 . #t)))
          (source
           .
           "https://github.com/LiberalArtist/native-libgit2-pkgs.git?path=libgit2-x86_64-macosx")
          (tags . ("binary" "git"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "cc360a4d87c3b861152d13591e99151544cf3998")
                          (source
                           .
                           "https://github.com/LiberalArtist/native-libgit2-pkgs.git?path=libgit2-x86_64-macosx")
                          (source_url
                           .
                           "https://github.com/LiberalArtist/native-libgit2-pkgs.git?path=libgit2-x86_64-macosx")))))))
 ("libkenji"
  .
  #hasheq((author . "yd2dong@uwaterloo.ca")
          (authors . ("yd2dong@uwaterloo.ca"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/libkenji.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/libkenji.txt")))
          (checksum . "319a80f51bba4224f87a01e6a368d3a936371f88")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("pfds"
            "typed-racket-lib"
            "base"
            "compatibility-lib"
            "data-lib"
            "srfi-lib"))
          (dependency-names
           .
           ("pfds"
            "typed-racket-lib"
            "base"
            "compatibility-lib"
            "data-lib"
            "srfi-lib"))
          (description . "")
          (implies . ())
          (last-checked . 1557339622)
          (last-edit . 1415725724)
          (last-updated . 1502816155)
          (modules
           .
           ((lib "libkenji/concurrency.rkt")
            (lib "libkenji/misc.rkt")
            (lib "libkenji/assert.rkt")
            (lib "libkenji/sockets.rkt")
            (lib "libkenji/logging.rkt")
            (lib "libkenji/wire-struct.rkt")
            (lib "libkenji/main.rkt")
            (lib "libkenji/ports.rkt")
            (lib "libkenji/typed.rkt")
            (lib "libkenji/control-flow.rkt")
            (lib "libkenji/vector.rkt")))
          (name . "libkenji")
          (nix-sha256
           .
           "08ik1szpf19yrh65gkpr2cam9q75pm4zic9y4kbnzxgz9i6d1n50")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:no-desc: . #t)
                   (:no-tag: . #t)
                   (author:yd2dong@uwaterloo.ca . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/quantum1423/libkenji")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "319a80f51bba4224f87a01e6a368d3a936371f88")
                          (source . "git://github.com/quantum1423/libkenji")
                          (source_url
                           .
                           "http://github.com/quantum1423/libkenji/tree/master")))))))
 ("libnotify"
  .
  #hasheq((author . "asumu@ccs.neu.edu")
          (authors . ("asumu@ccs.neu.edu"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "libnotify" "doc/libnotify@libnotify/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/libnotify.txt")
                 (test-failure-log . "server/built/test-fail/libnotify.txt")
                 (test-success-log . #f)))
          (checksum . "c1112e8095f53dde26da994c5d2025871cec9d12")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base" "draw-lib" "scribble-lib" "racket-doc" "draw-doc"))
          (dependency-names
           .
           ("base" "draw-lib" "scribble-lib" "racket-doc" "draw-doc"))
          (description . "FFI bindings for libnotify (desktop notifications)")
          (implies . ())
          (last-checked . 1557339622)
          (last-edit . 1428255877)
          (last-updated . 1502816155)
          (modules
           .
           ((lib "libnotify/ffi.rkt")
            (lib "libnotify/libnotify.rkt")
            (lib "libnotify/libnotify.scrbl")
            (lib "libnotify/ffi-test.rkt")
            (lib "libnotify/example.rkt")
            (lib "libnotify/main.rkt")))
          (name . "libnotify")
          (nix-sha256
           .
           "1jygjz6zd3f3pybglc5ljppzbxbpg9vssadpc9wxg934l7qirdr7")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:asumu@ccs.neu.edu . #t)
                   (ffi . #t)
                   (gui . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/takikawa/racket-libnotify")
          (tags . ("ffi" "gui"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "c1112e8095f53dde26da994c5d2025871cec9d12")
                          (source
                           .
                           "git://github.com/takikawa/racket-libnotify")
                          (source_url
                           .
                           "http://github.com/takikawa/racket-libnotify/tree/master")))))))
 ("libopenal-racket"
  .
  #hasheq((author . "lehi@tosk.in")
          (authors . ("lehi@tosk.in"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . "server/built/deps/libopenal-racket.txt")
                 (docs
                  .
                  (("main"
                    "libopenal-racket"
                    "doc/libopenal-racket@libopenal-racket/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/libopenal-racket.txt")
                 (test-failure-log
                  .
                  "server/built/test-fail/libopenal-racket.txt")
                 (test-success-log . #f)))
          (checksum . "30ce8d3f2e225b65d0502a0c4feb75e1dea35cc6")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ())
          (dependency-names . ())
          (description . "Racket wrapper for the OpenAL library")
          (implies . ())
          (last-checked . 1557339622)
          (last-edit . 1471306400)
          (last-updated . 1513746941)
          (modules
           .
           ((lib "libopenal-racket/libopenal-racket.rkt")
            (lib "libopenal-racket/doc/libopenal-racket.scrbl")
            (lib "libopenal-racket/test/test.rkt")
            (lib "libopenal-racket/test/openal-test.rkt")
            (lib "libopenal-racket/main.rkt")))
          (name . "libopenal-racket")
          (nix-sha256
           .
           "0x39z2yw7kdqhx0i0jdd9l1qpnvjn2x4iqprac1qswy8zy6vn4s6")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-dep-fail: . #t)
                   (:build-success: . #t)
                   (:docs: . #t)
                   (audio . #t)
                   (author:lehi@tosk.in . #t)
                   (openal . #t)
                   (ring:1 . #t)
                   (wrapper . #t)))
          (source . "git://github.com/lehitoskin/libopenal-racket")
          (tags . ("audio" "openal" "wrapper"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "30ce8d3f2e225b65d0502a0c4feb75e1dea35cc6")
                          (source
                           .
                           "git://github.com/lehitoskin/libopenal-racket")
                          (source_url
                           .
                           "http://github.com/lehitoskin/libopenal-racket/tree/master")))))))
 ("libscrypt"
  .
  #hasheq((author . "mordae@anilinux.org")
          (authors . ("mordae@anilinux.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("none" "libscrypt")))
                 (failure-log . "server/built/fail/libscrypt.txt")
                 (min-failure-log . #f)
                 (success-log . #f)
                 (test-failure-log . #f)
                 (test-success-log . #f)))
          (checksum . "544c692f6d492275002d55fc933049e4abff56d8")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base" "scribble-lib" "unstable-lib" "racket-doc" "unstable-lib"))
          (dependency-names
           .
           ("base" "scribble-lib" "unstable-lib" "racket-doc" "unstable-lib"))
          (description
           .
           "Colin Percival's scrypt bindings for Racket, uses system library.")
          (implies . ())
          (last-checked . 1557339622)
          (last-edit . 1406302416)
          (last-updated . 1502816156)
          (modules
           .
           ((lib "libscrypt/libscrypt.scrbl")
            (lib "libscrypt/private/ffi.rkt")
            (lib "libscrypt/main.rkt")))
          (name . "libscrypt")
          (nix-sha256
           .
           "0fagb1871a89rxvjlj4mazz41cpq5cb010n5ffh7r2iq93p4bb1g")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-fail: . #t)
                   (:docs-error: . #t)
                   (author:mordae@anilinux.org . #t)
                   (crypto . #t)
                   (ffi . #t)
                   (ring:1 . #t)))
          (source . "github://github.com/mordae/racket-libscrypt/master")
          (tags . ("crypto" "ffi"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "544c692f6d492275002d55fc933049e4abff56d8")
                          (source
                           .
                           "github://github.com/mordae/racket-libscrypt/master")
                          (source_url
                           .
                           "http://github.com/mordae/racket-libscrypt/tree/master")))))))
 ("libserialport"
  .
  #hasheq((author . "mordae@anilinux.org")
          (authors . ("mordae@anilinux.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "libserialport"
                    "doc/libserialport@libserialport/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/libserialport.txt")
                 (test-failure-log
                  .
                  "server/built/test-fail/libserialport.txt")
                 (test-success-log . #f)))
          (checksum . "51f85372a6e51cc3268c4e45c0bef0f89c836b25")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "scribble-lib"
            "misc1"
            "mordae"
            "typed-racket-lib"
            "racket-doc"
            "typed-racket-lib"
            "typed-racket-doc"
            "unstable-lib"))
          (dependency-names
           .
           ("base"
            "scribble-lib"
            "misc1"
            "mordae"
            "typed-racket-lib"
            "racket-doc"
            "typed-racket-lib"
            "typed-racket-doc"
            "unstable-lib"))
          (description . "FFI bindings for the libserialport library.")
          (implies . ())
          (last-checked . 1557339622)
          (last-edit . 1438605311)
          (last-updated . 1526649589)
          (modules
           .
           ((lib "libserialport/private/ffi.rkt")
            (lib "libserialport/libserialport.scrbl")
            (lib "libserialport/main.rkt")))
          (name . "libserialport")
          (nix-sha256
           .
           "15g37nkvwlvv9y64m96qhaafx58qf2vdrcgzckq574z6a5x3ryr2")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:mordae@anilinux.org . #t)
                   (ffi . #t)
                   (linux . #t)
                   (ring:1 . #t)
                   (windows . #t)))
          (source . "git://github.com/mordae/racket-libserialport")
          (tags . ("ffi" "linux" "windows"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "51f85372a6e51cc3268c4e45c0bef0f89c836b25")
                          (source
                           .
                           "git://github.com/mordae/racket-libserialport")
                          (source_url
                           .
                           "http://github.com/mordae/racket-libserialport/tree/master")))))))
 ("libtoxcore-racket"
  .
  #hasheq((author . "lehi@tosk.in")
          (authors . ("lehi@tosk.in"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "libtoxcore-racket"
                    "doc/libtoxcore-racket@libtoxcore-racket/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/libtoxcore-racket.txt")
                 (test-failure-log
                  .
                  "server/built/test-fail/libtoxcore-racket.txt")
                 (test-success-log . #f)))
          (checksum . "8baa14d6835ec4371de4ce7aa73237cd509d8f48")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "scribble-lib" "racket-doc"))
          (dependency-names . ("base" "scribble-lib" "racket-doc"))
          (description . "A Racket wrapper for the Tox libraries.")
          (implies . ())
          (last-checked . 1557339622)
          (last-edit . 1415417025)
          (last-updated . 1502816156)
          (modules
           .
           ((lib "libtoxcore-racket/av.rkt")
            (lib "libtoxcore-racket/main.rkt")
            (lib "libtoxcore-racket/doc/av.scrbl")
            (lib "libtoxcore-racket/doc/common.rkt")
            (lib "libtoxcore-racket/functions.rkt")
            (lib "libtoxcore-racket/doc/examples.scrbl")
            (lib "libtoxcore-racket/doc/license.scrbl")
            (lib "libtoxcore-racket/dns.rkt")
            (lib "libtoxcore-racket/doc/constants.scrbl")
            (lib "libtoxcore-racket/test/test.rkt")
            (lib "libtoxcore-racket/encrypt.rkt")
            (lib "libtoxcore-racket/enums.rkt")
            (lib "libtoxcore-racket/doc/functions.scrbl")
            (lib "libtoxcore-racket/doc/libtoxcore-racket.scrbl")))
          (name . "libtoxcore-racket")
          (nix-sha256
           .
           "0r88wv557bkliw2xlzkljyn2vnkqjk7pymq0v35zdiczflrspz50")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (API . #t)
                   (author:lehi@tosk.in . #t)
                   (crypto . #t)
                   (ffi . #t)
                   (ring:1 . #t)
                   (wrapper . #t)))
          (source . "git://github.com/lehitoskin/libtoxcore-racket.git")
          (tags . ("API" "crypto" "ffi" "wrapper"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "8baa14d6835ec4371de4ce7aa73237cd509d8f48")
                          (source
                           .
                           "git://github.com/lehitoskin/libtoxcore-racket.git")
                          (source_url
                           .
                           "http://github.com/lehitoskin/libtoxcore-racket.git/tree/master")))))))
 ("libuuid"
  .
  #hasheq((author . "mordae@anilinux.org")
          (authors . ("mordae@anilinux.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "libuuid" "doc/libuuid@libuuid/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/libuuid.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/libuuid.txt")))
          (checksum . "4bead1a3ccfc1714c1c494f8720c764e4f3b182f")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "racket-doc" "scribble-lib"))
          (dependency-names . ("base" "racket-doc" "scribble-lib"))
          (description . "FFI bindings for the libuuid library.")
          (implies . ())
          (last-checked . 1557339622)
          (last-edit . 1408365245)
          (last-updated . 1515587056)
          (modules . ((lib "libuuid/libuuid.scrbl") (lib "libuuid/main.rkt")))
          (name . "libuuid")
          (nix-sha256
           .
           "0gk279gk9cs4jxdpmwdk61mlxplrk94jzzbyfw9mwxzv0l6ngpbh")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:mordae@anilinux.org . #t)
                   (ffi . #t)
                   (ring:1 . #t)))
          (source . "github://github.com/mordae/racket-libuuid/master")
          (tags . ("ffi"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "4bead1a3ccfc1714c1c494f8720c764e4f3b182f")
                          (source
                           .
                           "github://github.com/mordae/racket-libuuid/master")
                          (source_url
                           .
                           "http://github.com/mordae/racket-libuuid/tree/master")))))))
 ("libvid-i386-linux"
  .
  #hasheq((author . "leif@leifandersen.net")
          (authors . ("leif@leifandersen.net"))
          (build
           .
           #hash((conflicts-log . "conflicts.txt")
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/libvid-i386-linux.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/libvid-i386-linux.txt")))
          (checksum . "61c4b07ffd82127a049cf12f74c09c20730eba1d")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base"))
          (dependency-names . ("base"))
          (description . "Library for Video log messages")
          (implies . ())
          (last-checked . 1557339622)
          (last-edit . 1504986160)
          (last-updated . 1546557308)
          (modules . ())
          (name . "libvid-i386-linux")
          (nix-sha256
           .
           "0mqw649562qx823iw76q5v8m40z2n5psbhva6r7n53497a83hmpn")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-conflicts: . #t)
                   (:build-success: . #t)
                   (author:leif@leifandersen.net . #t)
                   (libvid . #t)
                   (ring:1 . #t)
                   (video . #t)))
          (source
           .
           "git://github.com/videolang/native-pkgs?path=libvid-i386-linux")
          (tags . ("libvid" "video"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "61c4b07ffd82127a049cf12f74c09c20730eba1d")
                          (source
                           .
                           "git://github.com/videolang/native-pkgs?path=libvid-i386-linux")
                          (source_url
                           .
                           "http://github.com/videolang/native-pkgs/tree/master?path=libvid-i386-linux")))))))
 ("libvid-i386-linux-0-2"
  .
  #hasheq((author . "leif@leifandersen.net")
          (authors . ("leif@leifandersen.net"))
          (build
           .
           #hash((conflicts-log . "conflicts.txt")
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log
                  .
                  "server/built/install/libvid-i386-linux-0-2.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/libvid-i386-linux-0-2.txt")))
          (checksum . "61c4b07ffd82127a049cf12f74c09c20730eba1d")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base"))
          (dependency-names . ("base"))
          (description . "")
          (implies . ())
          (last-checked . 1557339623)
          (last-edit . 1528476846)
          (last-updated . 1546557375)
          (modules . ())
          (name . "libvid-i386-linux-0-2")
          (nix-sha256
           .
           "0mqw649562qx823iw76q5v8m40z2n5psbhva6r7n53497a83hmpn")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-conflicts: . #t)
                   (:build-success: . #t)
                   (:no-desc: . #t)
                   (author:leif@leifandersen.net . #t)
                   (ring:2 . #t)
                   (video . #t)))
          (source
           .
           "https://github.com/videolang/native-pkgs.git?path=libvid-i386-linux")
          (tags . ("video"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "61c4b07ffd82127a049cf12f74c09c20730eba1d")
                          (source
                           .
                           "https://github.com/videolang/native-pkgs.git?path=libvid-i386-linux")
                          (source_url
                           .
                           "https://github.com/videolang/native-pkgs.git?path=libvid-i386-linux")))))))
 ("libvid-i386-win32"
  .
  #hasheq((author . "leif@leifandersen.net")
          (authors . ("leif@leifandersen.net"))
          (build
           .
           #hash((conflicts-log . "conflicts.txt")
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/libvid-i386-win32.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/libvid-i386-win32.txt")))
          (checksum . "61c4b07ffd82127a049cf12f74c09c20730eba1d")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base"))
          (dependency-names . ("base"))
          (description . "32-bit windows build of libvid")
          (implies . ())
          (last-checked . 1557339691)
          (last-edit . 1503854359)
          (last-updated . 1546557509)
          (modules . ())
          (name . "libvid-i386-win32")
          (nix-sha256
           .
           "0mqw649562qx823iw76q5v8m40z2n5psbhva6r7n53497a83hmpn")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-conflicts: . #t)
                   (:build-success: . #t)
                   (author:leif@leifandersen.net . #t)
                   (libvid . #t)
                   (ring:1 . #t)
                   (video . #t)))
          (source
           .
           "git://github.com/videolang/native-pkgs?path=libvid-i386-win32")
          (tags . ("libvid" "video"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "61c4b07ffd82127a049cf12f74c09c20730eba1d")
                          (source
                           .
                           "git://github.com/videolang/native-pkgs?path=libvid-i386-win32")
                          (source_url
                           .
                           "http://github.com/videolang/native-pkgs/tree/master?path=libvid-i386-win32")))))))
 ("libvid-i386-win32-0-2"
  .
  #hasheq((author . "leif@leifandersen.net")
          (authors . ("leif@leifandersen.net"))
          (build
           .
           #hash((conflicts-log . "conflicts.txt")
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log
                  .
                  "server/built/install/libvid-i386-win32-0-2.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/libvid-i386-win32-0-2.txt")))
          (checksum . "61c4b07ffd82127a049cf12f74c09c20730eba1d")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base"))
          (dependency-names . ("base"))
          (description . "")
          (implies . ())
          (last-checked . 1557339691)
          (last-edit . 1528476858)
          (last-updated . 1546557576)
          (modules . ())
          (name . "libvid-i386-win32-0-2")
          (nix-sha256
           .
           "0mqw649562qx823iw76q5v8m40z2n5psbhva6r7n53497a83hmpn")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-conflicts: . #t)
                   (:build-success: . #t)
                   (:no-desc: . #t)
                   (author:leif@leifandersen.net . #t)
                   (ring:2 . #t)
                   (video . #t)))
          (source
           .
           "https://github.com/videolang/native-pkgs.git?path=libvid-i386-win32")
          (tags . ("video"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "61c4b07ffd82127a049cf12f74c09c20730eba1d")
                          (source
                           .
                           "https://github.com/videolang/native-pkgs.git?path=libvid-i386-win32")
                          (source_url
                           .
                           "https://github.com/videolang/native-pkgs.git?path=libvid-i386-win32")))))))
 ("libvid-x86_64-linux"
  .
  #hasheq((author . "leif@leifandersen.net")
          (authors . ("leif@leifandersen.net"))
          (build
           .
           #hash((conflicts-log . "conflicts.txt")
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log
                  .
                  "server/built/install/libvid-x86_64-linux.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/libvid-x86_64-linux.txt")))
          (checksum . "61c4b07ffd82127a049cf12f74c09c20730eba1d")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base"))
          (dependency-names . ("base"))
          (description . "Libvid for 64-bit linux")
          (implies . ())
          (last-checked . 1557339691)
          (last-edit . 1504986223)
          (last-updated . 1546557643)
          (modules . ())
          (name . "libvid-x86_64-linux")
          (nix-sha256
           .
           "0mqw649562qx823iw76q5v8m40z2n5psbhva6r7n53497a83hmpn")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-conflicts: . #t)
                   (:build-success: . #t)
                   (author:leif@leifandersen.net . #t)
                   (libvid . #t)
                   (ring:1 . #t)
                   (video . #t)))
          (source
           .
           "git://github.com/videolang/native-pkgs?path=libvid-x86_64-linux")
          (tags . ("libvid" "video"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "61c4b07ffd82127a049cf12f74c09c20730eba1d")
                          (source
                           .
                           "git://github.com/videolang/native-pkgs?path=libvid-x86_64-linux")
                          (source_url
                           .
                           "http://github.com/videolang/native-pkgs/tree/master?path=libvid-x86_64-linux")))))))
 ("libvid-x86_64-linux-0-2"
  .
  #hasheq((author . "leif@leifandersen.net")
          (authors . ("leif@leifandersen.net"))
          (build
           .
           #hash((conflicts-log . "conflicts.txt")
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log
                  .
                  "server/built/install/libvid-x86_64-linux-0-2.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/libvid-x86_64-linux-0-2.txt")))
          (checksum . "61c4b07ffd82127a049cf12f74c09c20730eba1d")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base"))
          (dependency-names . ("base"))
          (description . "")
          (implies . ())
          (last-checked . 1557339691)
          (last-edit . 1528476829)
          (last-updated . 1546557710)
          (modules . ())
          (name . "libvid-x86_64-linux-0-2")
          (nix-sha256
           .
           "0mqw649562qx823iw76q5v8m40z2n5psbhva6r7n53497a83hmpn")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-conflicts: . #t)
                   (:build-success: . #t)
                   (:no-desc: . #t)
                   (author:leif@leifandersen.net . #t)
                   (ring:2 . #t)
                   (video . #t)))
          (source
           .
           "https://github.com/videolang/native-pkgs.git?path=libvid-x86_64-linux")
          (tags . ("video"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "61c4b07ffd82127a049cf12f74c09c20730eba1d")
                          (source
                           .
                           "https://github.com/videolang/native-pkgs.git?path=libvid-x86_64-linux")
                          (source_url
                           .
                           "https://github.com/videolang/native-pkgs.git?path=libvid-x86_64-linux")))))))
 ("libvid-x86_64-macosx"
  .
  #hasheq((author . "leif@leifandersen.net")
          (authors . ("leif@leifandersen.net"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log
                  .
                  "server/built/install/libvid-x86_64-macosx.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/libvid-x86_64-macosx.txt")))
          (checksum . "61c4b07ffd82127a049cf12f74c09c20730eba1d")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base"))
          (dependency-names . ("base"))
          (description
           .
           "An optional helper library for Video, to enable ffmpeg level logging.")
          (implies . ())
          (last-checked . 1557339691)
          (last-edit . 1503584840)
          (last-updated . 1546557777)
          (modules . ())
          (name . "libvid-x86_64-macosx")
          (nix-sha256
           .
           "0mqw649562qx823iw76q5v8m40z2n5psbhva6r7n53497a83hmpn")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:leif@leifandersen.net . #t)
                   (libvid . #t)
                   (ring:1 . #t)
                   (video . #t)))
          (source
           .
           "git://github.com/videolang/native-pkgs?path=libvid-x86_64-macosx")
          (tags . ("libvid" "video"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "61c4b07ffd82127a049cf12f74c09c20730eba1d")
                          (source
                           .
                           "git://github.com/videolang/native-pkgs?path=libvid-x86_64-macosx")
                          (source_url
                           .
                           "http://github.com/videolang/native-pkgs/tree/master?path=libvid-x86_64-macosx")))))))
 ("libvid-x86_64-macosx-0-2"
  .
  #hasheq((author . "leif@leifandersen.net")
          (authors . ("leif@leifandersen.net"))
          (build
           .
           #hash((conflicts-log . "conflicts.txt")
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log
                  .
                  "server/built/install/libvid-x86_64-macosx-0-2.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/libvid-x86_64-macosx-0-2.txt")))
          (checksum . "61c4b07ffd82127a049cf12f74c09c20730eba1d")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base"))
          (dependency-names . ("base"))
          (description . "")
          (implies . ())
          (last-checked . 1557339691)
          (last-edit . 1528476786)
          (last-updated . 1546557844)
          (modules . ())
          (name . "libvid-x86_64-macosx-0-2")
          (nix-sha256
           .
           "0mqw649562qx823iw76q5v8m40z2n5psbhva6r7n53497a83hmpn")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-conflicts: . #t)
                   (:build-success: . #t)
                   (:no-desc: . #t)
                   (author:leif@leifandersen.net . #t)
                   (ring:2 . #t)
                   (video . #t)))
          (source
           .
           "https://github.com/videolang/native-pkgs.git?path=libvid-x86_64-macosx")
          (tags . ("video"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "61c4b07ffd82127a049cf12f74c09c20730eba1d")
                          (source
                           .
                           "https://github.com/videolang/native-pkgs.git?path=libvid-x86_64-macosx")
                          (source_url
                           .
                           "https://github.com/videolang/native-pkgs.git?path=libvid-x86_64-macosx")))))))
 ("libvid-x86_64-win32"
  .
  #hasheq((author . "leif@leifandersen.net")
          (authors . ("leif@leifandersen.net"))
          (build
           .
           #hash((conflicts-log . "conflicts.txt")
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log
                  .
                  "server/built/install/libvid-x86_64-win32.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/libvid-x86_64-win32.txt")))
          (checksum . "61c4b07ffd82127a049cf12f74c09c20730eba1d")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base"))
          (dependency-names . ("base"))
          (description . "64-bit windows build of the libvid library.")
          (implies . ())
          (last-checked . 1557339691)
          (last-edit . 1503854804)
          (last-updated . 1546557911)
          (modules . ())
          (name . "libvid-x86_64-win32")
          (nix-sha256
           .
           "0mqw649562qx823iw76q5v8m40z2n5psbhva6r7n53497a83hmpn")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-conflicts: . #t)
                   (:build-success: . #t)
                   (author:leif@leifandersen.net . #t)
                   (libvid . #t)
                   (ring:1 . #t)
                   (video . #t)))
          (source
           .
           "git://github.com/videolang/native-pkgs?path=libvid-x86_64-win32")
          (tags . ("libvid" "video"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "61c4b07ffd82127a049cf12f74c09c20730eba1d")
                          (source
                           .
                           "git://github.com/videolang/native-pkgs?path=libvid-x86_64-win32")
                          (source_url
                           .
                           "http://github.com/videolang/native-pkgs/tree/master?path=libvid-x86_64-win32")))))))
 ("libvid-x86_64-win32-0-2"
  .
  #hasheq((author . "leif@leifandersen.net")
          (authors . ("leif@leifandersen.net"))
          (build
           .
           #hash((conflicts-log . "conflicts.txt")
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log
                  .
                  "server/built/install/libvid-x86_64-win32-0-2.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/libvid-x86_64-win32-0-2.txt")))
          (checksum . "61c4b07ffd82127a049cf12f74c09c20730eba1d")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base"))
          (dependency-names . ("base"))
          (description . "")
          (implies . ())
          (last-checked . 1557339691)
          (last-edit . 1528476804)
          (last-updated . 1546557978)
          (modules . ())
          (name . "libvid-x86_64-win32-0-2")
          (nix-sha256
           .
           "0mqw649562qx823iw76q5v8m40z2n5psbhva6r7n53497a83hmpn")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-conflicts: . #t)
                   (:build-success: . #t)
                   (:no-desc: . #t)
                   (author:leif@leifandersen.net . #t)
                   (ring:2 . #t)
                   (video . #t)))
          (source
           .
           "https://github.com/videolang/native-pkgs.git?path=libvid-x86_64-win32")
          (tags . ("video"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "61c4b07ffd82127a049cf12f74c09c20730eba1d")
                          (source
                           .
                           "https://github.com/videolang/native-pkgs.git?path=libvid-x86_64-win32")
                          (source_url
                           .
                           "https://github.com/videolang/native-pkgs.git?path=libvid-x86_64-win32")))))))
 ("libxml2"
  .
  #hasheq((author . "philip@philipmcgrath.com")
          (authors . ("philip@philipmcgrath.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "libxml2" "doc/libxml2@libxml2/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/libxml2.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/libxml2.txt")))
          (checksum . "34f26243e8f35ae84f248e02dfbd7214ec2c619d")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           (("base" #:version "7.0")
            ("xmllint-win32-x86_64"
             #:platform
             "win32\\x86_64"
             #:version
             "0.1")
            ("libxml2-x86_64-linux-natipkg" #:platform "x86_64-linux-natipkg")
            "scribble-lib"
            "racket-doc"
            "rackunit-lib"
            "rackunit-spec"))
          (dependency-names
           .
           ("base"
            "xmllint-win32-x86_64"
            "libxml2-x86_64-linux-natipkg"
            "scribble-lib"
            "racket-doc"
            "rackunit-lib"
            "rackunit-spec"))
          (description . "Racket bindings for libxml2")
          (implies . ())
          (last-checked . 1557339691)
          (last-edit . 1535421176)
          (last-updated . 1543391193)
          (modules
           .
           ((lib "libxml2/define-fail.rkt")
            (lib "libxml2/scribblings/libxml2.scrbl")
            (lib "libxml2/test.rkt")
            (lib "libxml2/main.rkt")))
          (name . "libxml2")
          (nix-sha256
           .
           "1ccda18waf368jp3qq9k8rnjmnjjd8bypcbfavjskcwszip4jcz4")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:philip@philipmcgrath.com . #t)
                   (ffi . #t)
                   (ring:2 . #t)
                   (xml . #t)))
          (source . "https://github.com/LiberalArtist/libxml2-ffi.git")
          (tags . ("ffi" "xml"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "34f26243e8f35ae84f248e02dfbd7214ec2c619d")
                          (source
                           .
                           "https://github.com/LiberalArtist/libxml2-ffi.git")
                          (source_url
                           .
                           "https://github.com/LiberalArtist/libxml2-ffi.git")))))))
 ("libxml2-x86_64-linux-natipkg"
  .
  #hasheq((author . "philip@philipmcgrath.com")
          (authors . ("philip@philipmcgrath.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log
                  .
                  "server/built/install/libxml2-x86_64-linux-natipkg.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/libxml2-x86_64-linux-natipkg.txt")))
          (checksum . "8175b0d1bd6842fb2f1e814f99ad96035e50e734")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base"))
          (dependency-names . ("base"))
          (description . "Packages libxml2 for the package build server")
          (implies . ())
          (last-checked . 1557339691)
          (last-edit . 1535475662)
          (last-updated . 1535475662)
          (modules . ())
          (name . "libxml2-x86_64-linux-natipkg")
          (nix-sha256
           .
           "181676p64qzw1xfxa3lzf59cizc5xxh3pbbb6rhkmx9n8shrx1wi")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:philip@philipmcgrath.com . #t)
                   (ffi . #t)
                   (ring:2 . #t)
                   (xml . #t)))
          (source
           .
           "https://github.com/LiberalArtist/libxml2-x86_64-linux-natipkg.git")
          (tags . ("ffi" "xml"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "8175b0d1bd6842fb2f1e814f99ad96035e50e734")
                          (source
                           .
                           "https://github.com/LiberalArtist/libxml2-x86_64-linux-natipkg.git")
                          (source_url
                           .
                           "https://github.com/LiberalArtist/libxml2-x86_64-linux-natipkg.git")))))))
 ("lindenmayer"
  .
  #hasheq((author
           .
           "robby@racket-lang.org spencer@florence.io daniel.feltey@eecs.northwestern.edu stamourv@racket-lang.org")
          (authors
           .
           ("robby@racket-lang.org"
            "spencer@florence.io"
            "daniel.feltey@eecs.northwestern.edu"
            "stamourv@racket-lang.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "lindenmayer"
                    "doc/lindenmayer@lindenmayer/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/lindenmayer.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/lindenmayer.txt")))
          (checksum . "d87c3d536eabbb96e563b127c396a3421127329d")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "data-lib"
            "drracket-plugin-lib"
            "gui-lib"
            ("htdp-lib" #:version "1.5")
            "parser-tools-lib"
            "pict-lib"
            "pict3d"
            "syntax-color-lib"
            "typed-racket-lib"
            "math-lib"
            "2d-lib"
            "rackunit-lib"
            "pict-doc"
            "racket-doc"
            "scribble-lib"
            "htdp-doc"
            "syntax-color-doc"
            "typed-racket-doc"
            "typed-racket-more"))
          (dependency-names
           .
           ("base"
            "data-lib"
            "drracket-plugin-lib"
            "gui-lib"
            "htdp-lib"
            "parser-tools-lib"
            "pict-lib"
            "pict3d"
            "syntax-color-lib"
            "typed-racket-lib"
            "math-lib"
            "2d-lib"
            "rackunit-lib"
            "pict-doc"
            "racket-doc"
            "scribble-lib"
            "htdp-doc"
            "syntax-color-doc"
            "typed-racket-doc"
            "typed-racket-more"))
          (description . "")
          (implies . ())
          (last-checked . 1557339691)
          (last-edit . 1488204750)
          (last-updated . 1504022025)
          (modules
           .
           ((lib "lindenmayer/simple/compile.rkt")
            (lib "lindenmayer/examples/twisty-trees.rkt")
            (lib "lindenmayer/main.rkt")
            (lib "lindenmayer/3d.rkt")
            (lib "lindenmayer/process-syntax.rkt")
            (lib "lindenmayer/scribblings/3d-turtle.scrbl")
            (lib "lindenmayer/examples/abop-page25-f-refactored.rkt")
            (lib "lindenmayer/examples/leaf-fern.rkt")
            (lib "lindenmayer/examples/trees.rkt")
            (lib "lindenmayer/syntax-properties.rkt")
            (lib "lindenmayer/examples/flowery-bush.rkt")
            (lib "lindenmayer/lexer.rkt")
            (lib "lindenmayer/examples/lily-of-the-valley.rkt")
            (lib "lindenmayer/examples/3d-leaf.rkt")
            (lib "lindenmayer/scribblings/util.rkt")
            (lib "lindenmayer/examples/fib.rkt")
            (lib "lindenmayer/simple/lang/reader.rkt")
            (lib "lindenmayer/examples/dragon.rkt")
            (lib "lindenmayer/examples/sunflower.rkt")
            (lib "lindenmayer/examples/seaweed.rkt")
            (lib "lindenmayer/structs.rkt")
            (lib "lindenmayer/examples/leaf-alternating.rkt")
            (lib "lindenmayer/scribblings/deflsymbol.rkt")
            (lib "lindenmayer/examples/3d-with-leaves.rkt")
            (lib "lindenmayer/examples/abop-page25-e.rkt")
            (lib "lindenmayer/examples/koch.rkt")
            (lib "lindenmayer/scribblings/simple.scrbl")
            (lib "lindenmayer/examples/gaols.rkt")
            (lib "lindenmayer/scribblings/turtles.scrbl")
            (lib "lindenmayer/examples/abop-page25-f.rkt")
            (lib "lindenmayer/examples/abop-page-25-d-refactored.rkt")
            (lib "lindenmayer/examples/abop-page25-d.rkt")
            (lib "lindenmayer/examples/leaf.rkt")
            (lib "lindenmayer/examples/abop-page25-a.rkt")
            (lib "lindenmayer/search.rkt")
            (lib
             "lindenmayer/examples/wierd-not-really-tree-looking-thing.rkt")
            (lib "lindenmayer/3d-turtle.rkt")
            (lib "lindenmayer/examples/skew-tree.rkt")
            (lib "lindenmayer/runtime.rkt")
            (lib "lindenmayer/tool.rkt")
            (lib "lindenmayer/examples/better-trees.rkt")
            (lib "lindenmayer/configure-runtime.rkt")
            (lib "lindenmayer/turtle.rkt")
            (lib "lindenmayer/simple/structs.rkt")
            (lib "lindenmayer/private/expression-parse.rkt")
            (lib "lindenmayer/examples/normal-trees.rkt")
            (lib "lindenmayer/examples/hilbert.rkt")
            (lib "lindenmayer/simple/lex.rkt")
            (lib "lindenmayer/private/define-arity.rkt")
            (lib "lindenmayer/examples/serp.rkt")
            (lib "lindenmayer/simple/parse.rkt")
            (lib "lindenmayer/scribblings/lindenmayer.scrbl")
            (lib "lindenmayer/lang.rkt")
            (lib "lindenmayer/examples/abop-page25-c.rkt")
            (lib "lindenmayer/examples/golden-mean.rkt")
            (lib "lindenmayer/examples/abop-page25-b.rkt")
            (lib "lindenmayer/simple/run.rkt")))
          (name . "lindenmayer")
          (nix-sha256
           .
           "0q6g0jhk90i5cqxcb58d70lyv01x71x9hq6xslhsa7kbwkmhl8fy")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (:no-desc: . #t)
                   (:no-tag: . #t)
                   (author:daniel.feltey@eecs.northwestern.edu . #t)
                   (author:robby@racket-lang.org . #t)
                   (author:spencer@florence.io . #t)
                   (author:stamourv@racket-lang.org . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/rfindler/lindenmayer")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "d87c3d536eabbb96e563b127c396a3421127329d")
                          (source . "git://github.com/rfindler/lindenmayer")
                          (source_url
                           .
                           "http://github.com/rfindler/lindenmayer/tree/master")))))))
 ("linea"
  .
  #hasheq((author . "willghatch@gmail.com")
          (authors . ("willghatch@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "linea" "doc/linea@linea/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/linea.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/linea.txt")))
          (checksum . "77363527621054ca4e64eda4f542a5c45f7b4861")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base" "udelim" "rackunit-lib" "scribble-lib" "racket-doc"))
          (dependency-names
           .
           ("base" "udelim" "rackunit-lib" "scribble-lib" "racket-doc"))
          (description . "line-oriented reader")
          (implies . ())
          (last-checked . 1557339692)
          (last-edit . 1523469658)
          (last-updated . 1556572078)
          (modules
           .
           ((lib "linea/line-macro-prop.rkt")
            (lib "linea/line-macro.rkt")
            (lib "linea/defaults.rkt")
            (lib "linea/read-syntax-string.rkt")
            (lib "linea/scribblings/linea.scrbl")
            (lib "linea/private/line-macro-definitions.rkt")
            (lib "linea/private/line-macro-detect.rkt")
            (lib "linea/private/test/test-lang.rkt")
            (lib "linea/read.rkt")
            (lib "linea/private/test/test-lexical-line-macro.rkt")
            (lib "linea/lang/reader.rkt")))
          (name . "linea")
          (nix-sha256
           .
           "1jliy66bs5kgxyck7yg0nr4hn7cp9ifspvhn6vr4sgwmk3d0l4jh")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:willghatch@gmail.com . #t)
                   (reader . #t)
                   (ring:2 . #t)))
          (source
           .
           "https://github.com/willghatch/racket-rash.git?path=linea")
          (tags . ("reader"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "77363527621054ca4e64eda4f542a5c45f7b4861")
                          (source
                           .
                           "https://github.com/willghatch/racket-rash.git?path=linea")
                          (source_url
                           .
                           "https://github.com/willghatch/racket-rash.git?path=linea")))))))
 ("linkeddata"
  .
  #hasheq((author . "cwebber@dustycloud.org")
          (authors . ("cwebber@dustycloud.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("none" "hello")))
                 (failure-log . "server/built/fail/linkeddata.txt")
                 (min-failure-log . #f)
                 (success-log . #f)
                 (test-failure-log . #f)
                 (test-success-log . #f)))
          (checksum . "4d59948bb978d6d0abf06ec4de8eb6b946f5f291")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base" "functional-lib" "megaparsack" "crypto" "rackunit-lib"))
          (dependency-names
           .
           ("base" "functional-lib" "megaparsack" "crypto" "rackunit-lib"))
          (description
           .
           "linkeddata is a package that provides various types of linked data tooling, from RDF tooling to json-ld")
          (implies . ())
          (last-checked . 1557339692)
          (last-edit . 1528326160)
          (last-updated . 1534874255)
          (modules
           .
           ((lib "linkeddata/json-ld.rkt")
            (lib "linkeddata/pem.rkt")
            (lib "linkeddata/pk.rkt")
            (lib "linkeddata/urdna2015.rkt")
            (lib "linkeddata/n-quads.rkt")
            (lib "linkeddata/ld-sigs.rkt")
            (lib "linkeddata/date-utils.rkt")
            (lib "linkeddata/jsonld-tests.rkt")
            (lib "linkeddata/rdf.rkt")))
          (name . "linkeddata")
          (nix-sha256
           .
           "068pk94nymnpbb3f5xx7k9jr1dvazn56cfh2w8bknxp1qqf3g029")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-fail: . #t)
                   (:docs-error: . #t)
                   (author:cwebber@dustycloud.org . #t)
                   (json . #t)
                   (json-ld . #t)
                   (linkeddata . #t)
                   (rdf . #t)
                   (ring:2 . #t)))
          (source
           .
           "https://github.com/cwebber/racket-linkeddata.git?path=linkeddata")
          (tags . ("json" "json-ld" "linkeddata" "rdf"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "4d59948bb978d6d0abf06ec4de8eb6b946f5f291")
                          (source
                           .
                           "https://github.com/cwebber/racket-linkeddata.git?path=linkeddata")
                          (source_url
                           .
                           "https://github.com/cwebber/racket-linkeddata.git?path=linkeddata")))))))
 ("lipics"
  .
  #hasheq((author . "asumu@ccs.neu.edu stamourv@racket-lang.org")
          (authors . ("asumu@ccs.neu.edu" "stamourv@racket-lang.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "lipics" "doc/lipics@lipics/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/lipics.txt")
                 (test-failure-log . "server/built/test-fail/lipics.txt")
                 (test-success-log . #f)))
          (checksum . "32a8cb9782493e237c25994f70aa7c572d7ea567")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "scribble-lib"
            "at-exp-lib"
            "sha"
            "racket-doc"
            "scribble-doc"))
          (dependency-names
           .
           ("base"
            "scribble-lib"
            "at-exp-lib"
            "sha"
            "racket-doc"
            "scribble-doc"))
          (description . "Scribble languages for the LIPIcs paper format")
          (implies . ())
          (last-checked . 1557339692)
          (last-edit . 1425674877)
          (last-updated . 1504309961)
          (modules
           .
           ((lib "lipics/download.rkt")
            (lib "lipics/lipics.scrbl")
            (lib "lipics/example.scrbl")
            (lib "lipics/example-abstract.scrbl")
            (lib "lipics/main.rkt")))
          (name . "lipics")
          (nix-sha256
           .
           "1r37j9bvlcxdky9h00jdz6m2rfg7igl022ypzaj7q3zvnjb2329n")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:asumu@ccs.neu.edu . #t)
                   (author:stamourv@racket-lang.org . #t)
                   (ring:1 . #t)
                   (scribble . #t)))
          (source . "git://github.com/takikawa/lipics-scribble")
          (tags . ("scribble"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "32a8cb9782493e237c25994f70aa7c572d7ea567")
                          (source
                           .
                           "git://github.com/takikawa/lipics-scribble")
                          (source_url
                           .
                           "http://github.com/takikawa/lipics-scribble/tree/master")))))))
 ("list-util"
  .
  #hasheq((author . "ray.racine@gmail.com")
          (authors . ("ray.racine@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "list-util" "doc/list-util@list-util/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/list-util.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/list-util.txt")))
          (checksum . "e538fd85b38e7bfcaf2aace75ced7d0183e91073")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("typed-racket-more"
            "typed-racket-lib"
            "base"
            "scribble-lib"
            "racket-doc"
            "rackunit-lib"))
          (dependency-names
           .
           ("typed-racket-more"
            "typed-racket-lib"
            "base"
            "scribble-lib"
            "racket-doc"
            "rackunit-lib"))
          (description . "Additional List utilities in Typed Racket.")
          (implies . ())
          (last-checked . 1557339692)
          (last-edit . 1528473038)
          (last-updated . 1528473038)
          (modules
           .
           ((lib "list-util/main.rkt")
            (lib "list-util/scribblings/list-util.scrbl")))
          (name . "list-util")
          (nix-sha256
           .
           "079g1p49yss184hqi9av3lnid48zchf15na0ygavlhbnx8vffxa9")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:ray.racine@gmail.com . #t)
                   (list . #t)
                   (ring:2 . #t)
                   (typed . #t)))
          (source . "https://gitlab.com/RayRacine/list-util.git")
          (tags . ("list" "typed"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "e538fd85b38e7bfcaf2aace75ced7d0183e91073")
                          (source
                           .
                           "https://gitlab.com/RayRacine/list-util.git")
                          (source_url
                           .
                           "https://gitlab.com/RayRacine/list-util.git")))))))
 ("list-utils"
  .
  #hasheq((author . "vincentnys@gmail.com")
          (authors . ("vincentnys@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "list-utils"
                    "doc/list-utils@list-utils/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/list-utils.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/list-utils.txt")))
          (checksum . "d364b7d3e508abc4da31d6e600ee201f76d05217")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("at-exp-lib" "base" "racket-doc" "rackunit-lib" "scribble-lib"))
          (dependency-names
           .
           ("at-exp-lib" "base" "racket-doc" "rackunit-lib" "scribble-lib"))
          (description
           .
           "Some additional list-processing functions which I have found useful.")
          (implies . ())
          (last-checked . 1557339692)
          (last-edit . 1513667842)
          (last-updated . 1513667842)
          (modules
           .
           ((lib "list-utils/main.rkt")
            (lib "list-utils/scribblings/list-utils.scrbl")))
          (name . "list-utils")
          (nix-sha256
           .
           "15dm33kq62pamm38ly7jqs7dcc3ywdhz38r6v93imymjgczvz9vk")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:vincentnys@gmail.com . #t)
                   (lists . #t)
                   (ring:2 . #t)
                   (utilities . #t)))
          (source . "https://github.com/v-nys/list-utils.git")
          (tags . ("lists" "utilities"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "d364b7d3e508abc4da31d6e600ee201f76d05217")
                          (source . "https://github.com/v-nys/list-utils.git")
                          (source_url
                           .
                           "https://github.com/v-nys/list-utils.git")))))))
 ("literify"
  .
  #hasheq((author . "kludev@gmail.com")
          (authors . ("kludev@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . "server/built/deps/literify.txt")
                 (docs
                  .
                  (("main" "literify" "doc/literify@literify/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/literify.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/literify.txt")))
          (checksum . "0c574bc88dc9de870063589cc49a7ad41899fc67")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "rackunit-lib" "scribble-lib" "racket-doc"))
          (dependency-names
           .
           ("base" "rackunit-lib" "scribble-lib" "racket-doc"))
          (description
           .
           "racket literate programming in scribble to enable simultaneously display and evaluate code chunks")
          (implies . ())
          (last-checked . 1557339692)
          (last-edit . 1497765715)
          (last-updated . 1502816158)
          (modules
           .
           ((lib "literify/main.rkt")
            (lib "literify/demo/union-find.scrbl")
            (lib "literify/scribblings/literify.scrbl")))
          (name . "literify")
          (nix-sha256
           .
           "0qvw16civ9zcajhcg25mzw0v9bj17d4sdkx49k65g1nvjp65738v")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-dep-fail: . #t)
                   (:build-success: . #t)
                   (:docs: . #t)
                   (author:kludev@gmail.com . #t)
                   (documentation . #t)
                   (literate-programming . #t)
                   (ring:1 . #t)
                   (scribble . #t)))
          (source . "git://github.com/kflu/literify")
          (tags . ("documentation" "literate-programming" "scribble"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "0c574bc88dc9de870063589cc49a7ad41899fc67")
                          (source . "git://github.com/kflu/literify")
                          (source_url
                           .
                           "http://github.com/kflu/literify/tree/master")))))))
 ("live-free-or-die"
  .
  #hasheq((author . "jay.mccarthy@gmail.com")
          (authors . ("jay.mccarthy@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "live-free-or-die"
                    "doc/live-free-or-die@live-free-or-die/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/live-free-or-die.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/live-free-or-die.txt")))
          (checksum . "b6fbe5364c51eb793a7f88fb916e41506b1d519e")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base" "typed-racket-lib" "racket-doc" "scribble-lib"))
          (dependency-names
           .
           ("base" "typed-racket-lib" "racket-doc" "scribble-lib"))
          (description . "Freedom from Typed Racket")
          (implies . ())
          (last-checked . 1557339692)
          (last-edit . 1474511539)
          (last-updated . 1509742919)
          (modules
           .
           ((lib "live-free-or-die/main.rkt")
            (lib "live-free-or-die/tests/client-safe.rkt")
            (lib "live-free-or-die/tests/client-unsafe.rkt")
            (lib "live-free-or-die/live-free-or-die.scrbl")
            (lib "live-free-or-die/tests/server.rkt")))
          (name . "live-free-or-die")
          (nix-sha256
           .
           "0h90zfsk75fc1aa8vlm9dph1x40h30wsqqmaab345wj7if2whddy")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:jay.mccarthy@gmail.com . #t)
                   (crashing . #t)
                   (performance . #t)
                   (ring:1 . #t)
                   (unsafe . #t)))
          (source . "git://github.com/jeapostrophe/live-free-or-die")
          (tags . ("crashing" "performance" "unsafe"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "b6fbe5364c51eb793a7f88fb916e41506b1d519e")
                          (source
                           .
                           "git://github.com/jeapostrophe/live-free-or-die")
                          (source_url
                           .
                           "http://github.com/jeapostrophe/live-free-or-die/tree/master")))))))
 ("livefrog"
  .
  #hasheq((author . "ebzzry@ebzzry.io")
          (authors . ("ebzzry@ebzzry.io"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . "server/built/deps/livefrog.txt")
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/livefrog.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/livefrog.txt")))
          (checksum . "ba9bb8156d9363203ea3454c9b15e3133d043315")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("sxml" "frog" "find-parent-dir"))
          (dependency-names . ("sxml" "frog" "find-parent-dir"))
          (description . "Convert ljdump/ljmigrate files for Frog")
          (implies . ())
          (last-checked . 1557339692)
          (last-edit . 1506942446)
          (last-updated . 1502816158)
          (modules
           .
           ((lib "livefrog/utils.rkt")
            (lib "livefrog/main.rkt")
            (lib "livefrog/symbols.rkt")))
          (name . "livefrog")
          (nix-sha256
           .
           "0m0sq2z8hhhsg6yb8rpqxcnf1d4wv1s029khaykgzw7zxnsl3p9a")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-dep-fail: . #t)
                   (:build-success: . #t)
                   (author:ebzzry@ebzzry.io . #t)
                   (blog . #t)
                   (ring:1 . #t)
                   (terminal . #t)
                   (web . #t)))
          (source . "git://github.com/ebzzry/livefrog")
          (tags . ("blog" "terminal" "web"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "ba9bb8156d9363203ea3454c9b15e3133d043315")
                          (source . "git://github.com/ebzzry/livefrog")
                          (source_url
                           .
                           "http://github.com/ebzzry/livefrog/tree/master")))))))
 ("loci"
  .
  #hasheq((author . "pmatos@linki.tools")
          (authors . ("pmatos@linki.tools"))
          (build
           .
           #hash((conflicts-log . "conflicts.txt")
                 (dep-failure-log . #f)
                 (docs . (("extract" "loci" "doc/loci@loci/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/loci.txt")
                 (test-failure-log . "server/built/test-fail/loci.txt")
                 (test-success-log . #f)))
          (checksum . "80e70c1facb8aa32f8849e01736e5426db972ddc")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "unix-socket-lib"
            "scribble-lib"
            "racket-doc"
            "rackunit-lib"
            "unix-socket-lib"))
          (dependency-names
           .
           ("base"
            "unix-socket-lib"
            "scribble-lib"
            "racket-doc"
            "rackunit-lib"
            "unix-socket-lib"))
          (description
           .
           "Loci provides access to locus, an entity similar to a place based on OS processes, instead of threads.")
          (implies . ())
          (last-checked . 1557339693)
          (last-edit . 1538998310)
          (last-updated . 1539965712)
          (modules
           .
           ((lib "loci/main.rkt")
            (lib "test/test_locus-print.rkt")
            (lib "loci/private/locus_gen.rkt")
            (lib "loci/private/locus-local.rkt")
            (lib "loci/private/loci-log.rkt")
            (lib "loci/scribblings/loci.scrbl")
            (lib "loci/private/locus-channel.rkt")
            (lib "test/test_locus-context.rkt")
            (lib "test/test_locus-error.rkt")
            (lib "loci/private/locus-transferable_gen.rkt")
            (lib "loci/private/utils.rkt")
            (lib "test/test_locus-messaging.rkt")))
          (name . "loci")
          (nix-sha256
           .
           "01x2dhznb9dshpgjk3gdg7d0dbx3rfb6kzrwa6w7s8v7db5dj29w")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-conflicts: . #t)
                   (:build-success: . #t)
                   (:docs-error: . #t)
                   (:docs: . #t)
                   (author:pmatos@linki.tools . #t)
                   (parallel . #t)
                   (places . #t)
                   (ring:2 . #t)))
          (source
           .
           "https://github.com/LinkiTools/racket-loci.git#production")
          (tags . ("parallel" "places"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "80e70c1facb8aa32f8849e01736e5426db972ddc")
                          (source
                           .
                           "https://github.com/LinkiTools/racket-loci.git#production")
                          (source_url
                           .
                           "https://github.com/LinkiTools/racket-loci.git#production")))))))
 ("loci-dev"
  .
  #hasheq((author . "pmatos@linki.tools")
          (authors . ("pmatos@linki.tools"))
          (build
           .
           #hash((conflicts-log . "conflicts.txt")
                 (dep-failure-log . #f)
                 (docs . (("extract" "loci" "doc/loci@loci-dev/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/loci-dev.txt")
                 (test-failure-log . "server/built/test-fail/loci-dev.txt")
                 (test-success-log . #f)))
          (checksum . "2fdd83c29dc2588b0229c0d931f743e4725b7faf")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "unix-socket-lib"
            "scribble-lib"
            "racket-doc"
            "rackunit-lib"
            "unix-socket-lib"))
          (dependency-names
           .
           ("base"
            "unix-socket-lib"
            "scribble-lib"
            "racket-doc"
            "rackunit-lib"
            "unix-socket-lib"))
          (description
           .
           "Loci provides access to locus, an entity similar to a place based on OS processes, instead of threads - see pkg loci for stable version.")
          (implies . ())
          (last-checked . 1557339693)
          (last-edit . 1538998294)
          (last-updated . 1539940482)
          (modules
           .
           ((lib "loci/main.rkt")
            (lib "test/test_locus-print.rkt")
            (lib "loci/private/locus_gen.rkt")
            (lib "loci/private/locus-local.rkt")
            (lib "loci/private/loci-log.rkt")
            (lib "loci/scribblings/loci.scrbl")
            (lib "loci/private/locus-channel.rkt")
            (lib "test/test_locus-context.rkt")
            (lib "test/test_locus-error.rkt")
            (lib "loci/private/locus-transferable_gen.rkt")
            (lib "loci/private/utils.rkt")
            (lib "test/test_locus-messaging.rkt")))
          (name . "loci-dev")
          (nix-sha256
           .
           "01x2dhznb9dshpgjk3gdg7d0dbx3rfb6kzrwa6w7s8v7db5dj29w")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-conflicts: . #t)
                   (:build-success: . #t)
                   (:docs-error: . #t)
                   (:docs: . #t)
                   (author:pmatos@linki.tools . #t)
                   (dev . #t)
                   (parallel . #t)
                   (places . #t)
                   (ring:2 . #t)))
          (source . "https://github.com/LinkiTools/racket-loci.git")
          (tags . ("dev" "parallel" "places"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "2fdd83c29dc2588b0229c0d931f743e4725b7faf")
                          (source
                           .
                           "https://github.com/LinkiTools/racket-loci.git")
                          (source_url
                           .
                           "https://github.com/LinkiTools/racket-loci.git")))))))
 ("logbook"
  .
  #hasheq((author . "tonygarnockjones@gmail.com")
          (authors . ("tonygarnockjones@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . "server/built/fail/logbook.txt")
                 (min-failure-log . #f)
                 (success-log . #f)
                 (test-failure-log . #f)
                 (test-success-log . #f)))
          (checksum . "6772003b5e8663426559d245451b82ec748c07c7")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "compatibility-lib"
            "plot-gui-lib"
            "plot-lib"
            "web-server-lib"
            "csv-reading"))
          (dependency-names
           .
           ("base"
            "compatibility-lib"
            "plot-gui-lib"
            "plot-lib"
            "web-server-lib"
            "csv-reading"))
          (description
           .
           "Tool for recording a database of experimental results")
          (implies . ())
          (last-checked . 1557339693)
          (last-edit . 1482289778)
          (last-updated . 1502816159)
          (modules
           .
           ((lib "logbook/private/raco-logbook-serve.rkt")
            (lib "logbook/private/raco-logbook.rkt")
            (lib "logbook/main.rkt")
            (lib "logbook/private/raco-logbook-launcher.rkt")
            (lib "logbook/notes.rkt")
            (lib "logbook/plot-utils.rkt")
            (lib "logbook/store.rkt")
            (lib "logbook/machine-info.rkt")
            (lib "logbook/private/raco-logbook-plot.rkt")
            (lib "logbook/export.rkt")))
          (name . "logbook")
          (nix-sha256
           .
           "080rapi6hbsi8baw3wi1xhawgyfmplaqb5nlak2awcsgdjwkddf8")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-fail: . #t)
                   (:no-tag: . #t)
                   (author:tonygarnockjones@gmail.com . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/tonyg/racket-logbook")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "6772003b5e8663426559d245451b82ec748c07c7")
                          (source . "git://github.com/tonyg/racket-logbook")
                          (source_url
                           .
                           "http://github.com/tonyg/racket-logbook/tree/master")))))))
 ("logger"
  .
  #hasheq((author . "macocio@gmail.com")
          (authors . ("macocio@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "logger" "doc/logger@logger/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/logger.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/logger.txt")))
          (checksum . "a4cb492d14d2e65840818ed4fe169011b30be23a")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base" "sandbox-lib" "scribble-lib" "racket-doc" "rackunit-lib"))
          (dependency-names
           .
           ("base" "sandbox-lib" "scribble-lib" "racket-doc" "rackunit-lib"))
          (description
           .
           "A simple logging library with color and 7 log levels.")
          (implies . ())
          (last-checked . 1557339693)
          (last-edit . 1533978718)
          (last-updated . 1534589081)
          (modules
           .
           ((lib "logger/scribblings/logger.scrbl") (lib "logger/main.rkt")))
          (name . "logger")
          (nix-sha256
           .
           "1a25wf88gqvgvb5h0gybqmw1q6rqgkqkhiaap836v29qngisk4fz")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:macocio@gmail.com . #t)
                   (logger . #t)
                   (ring:2 . #t)))
          (source . "https://github.com/BourgondAries/logger.git")
          (tags . ("logger"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "a4cb492d14d2e65840818ed4fe169011b30be23a")
                          (source
                           .
                           "https://github.com/BourgondAries/logger.git")
                          (source_url
                           .
                           "https://github.com/BourgondAries/logger.git")))))))
 ("logo"
  .
  #hasheq((author . "leo@lwh.jp")
          (authors . ("leo@lwh.jp"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "logo" "doc/logo@logo/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/logo.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/logo.txt")))
          (checksum . "2e9f3f7ffb4b8100aeb52943098f150c1cf7441a")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "htdp-lib"
            "math-lib"
            "parser-tools-lib"
            "racket-doc"
            "scribble-lib"))
          (dependency-names
           .
           ("base"
            "htdp-lib"
            "math-lib"
            "parser-tools-lib"
            "racket-doc"
            "scribble-lib"))
          (description . "A #lang for Logo")
          (implies . ())
          (last-checked . 1557339693)
          (last-edit . 1544536748)
          (last-updated . 1549201303)
          (modules
           .
           ((lib "logo/lang/reader.rkt")
            (lib "logo/turtle.rkt")
            (lib "logo/scribblings/logo.scrbl")
            (lib "logo/language.rkt")
            (lib "logo/sierpinski.rkt")
            (lib "logo/parser.rkt")))
          (name . "logo")
          (nix-sha256
           .
           "0kd23zm2m7njiwakbi3fshwa3kd9zq7wkc4vrmrn4q80yg3zq91g")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (:no-tag: . #t)
                   (author:leo@lwh.jp . #t)
                   (ring:2 . #t)))
          (source . "https://github.com/lwhjp/logo.git")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "2e9f3f7ffb4b8100aeb52943098f150c1cf7441a")
                          (source . "https://github.com/lwhjp/logo.git")
                          (source_url
                           .
                           "https://github.com/lwhjp/logo.git")))))))
 ("loop"
  .
  #hasheq((author . "sorawee.pwase@gmail.com")
          (authors . ("sorawee.pwase@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "loop" "doc/loop@loop/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/loop.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/loop.txt")))
          (checksum . "3b979523c56d7052cb342f51a72a2e8cd4743c19")
          (checksum-error . #f)
          (conflicts . ())
          (date-added . 1556792786)
          (dependencies . ("base" "scribble-lib" "racket-doc" "rackunit-lib"))
          (dependency-names
           .
           ("base" "scribble-lib" "racket-doc" "rackunit-lib"))
          (description . "Advanced named let")
          (implies . ())
          (last-checked . 1557339693)
          (last-edit . 1556792786)
          (last-updated . 1556852753)
          (modules
           .
           ((lib "loop/main.rkt") (lib "loop/scribblings/loop.scrbl")))
          (name . "loop")
          (nix-sha256
           .
           "04kry3rzxq5wapf5si7qj2kcqr2srmb2c8xncs77mqfqjxb8cjyk")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:sorawee.pwase@gmail.com . #t)
                   (loop . #t)
                   (ring:2 . #t)))
          (source . "https://github.com/sorawee/loop.git")
          (tags . ("loop"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "3b979523c56d7052cb342f51a72a2e8cd4743c19")
                          (source . "https://github.com/sorawee/loop.git")
                          (source_url
                           .
                           "https://github.com/sorawee/loop.git")))))))
 ("lti-freq-domain-toolbox"
  .
  #hasheq((author . "iastefan@outlook.com")
          (authors . ("iastefan@outlook.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log
                  .
                  "server/built/install/lti-freq-domain-toolbox.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/lti-freq-domain-toolbox.txt")))
          (checksum . "955e4d40f46766f55750c99356b427327d4df5de")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("plot-lib" "base" "math-lib" "plot-gui-lib"))
          (dependency-names . ("plot-lib" "base" "math-lib" "plot-gui-lib"))
          (description
           .
           "Functions for dealing with lti dynamical systems in the frequency domain")
          (implies . ())
          (last-checked . 1557339693)
          (last-edit . 1432138496)
          (last-updated . 1502816159)
          (modules
           .
           ((lib "lti-freq-domain-toolbox/functions.rkt")
            (lib "lti-freq-domain-toolbox/main.rkt")
            (lib "lti-freq-domain-toolbox/symbolic_algebra.rkt")
            (lib "lti-freq-domain-toolbox/arithmetic_analysis.rkt")
            (lib "lti-freq-domain-toolbox/lib.rkt")))
          (name . "lti-freq-domain-toolbox")
          (nix-sha256
           .
           "1cr4qcha4gw6k4qw866sb32yn1qp0iy7lvh6dp3f21hxyxw6m4a8")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:iastefan@outlook.com . #t)
                   (engineering . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/iastefan/lti-freq-domain-toolbox")
          (tags . ("engineering"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "955e4d40f46766f55750c99356b427327d4df5de")
                          (source
                           .
                           "git://github.com/iastefan/lti-freq-domain-toolbox")
                          (source_url
                           .
                           "http://github.com/iastefan/lti-freq-domain-toolbox/tree/master")))))))
 ("lux"
  .
  #hasheq((author . "jay.mccarthy@gmail.com")
          (authors . ("jay.mccarthy@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "lux" "doc/lux@lux/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/lux.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/lux.txt")))
          (checksum . "c0a494de5aa2486e857a17e5ba0611268e563cc5")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("draw-lib"
            "drracket"
            ("gui-lib" #:version "1.13")
            "htdp-lib"
            "pict-lib"
            ("base" #:version "6.3.0.2")
            "rackunit-lib"
            "draw-doc"
            "gui-doc"
            "htdp-doc"
            "pict-doc"
            "scribble-lib"
            "racket-doc"))
          (dependency-names
           .
           ("draw-lib"
            "drracket"
            "gui-lib"
            "htdp-lib"
            "pict-lib"
            "base"
            "rackunit-lib"
            "draw-doc"
            "gui-doc"
            "htdp-doc"
            "pict-doc"
            "scribble-lib"
            "racket-doc"))
          (description . "brilliant interactive programs")
          (implies . ())
          (last-checked . 1557339693)
          (last-edit . 1416699529)
          (last-updated . 1544640387)
          (modules
           .
           ((lib "lux/chaos/gui/mouse.rkt")
            (lib "lux/examples/spin.rkt")
            (lib "lux/chaos/gui/key.rkt")
            (lib "lux/main.rkt")
            (lib "lux/chaos/gui.rkt")
            (lib "lux/chaos/gui/val.rkt")
            (lib "lux/chaos/gui/utils.rkt")
            (lib "lux/chaos/pair.rkt")
            (lib "lux/chaos.rkt")
            (lib "lux/examples/val-demo.rkt")
            (lib "lux/scribblings/lux.scrbl")
            (lib "lux/word.rkt")))
          (name . "lux")
          (nix-sha256
           .
           "03klvjqm3bjbvm05g44zvwqyyhr70jli3c1fkmhw6b4z7g1nychg")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:jay.mccarthy@gmail.com . #t)
                   (graphics . #t)
                   (gui . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/jeapostrophe/lux")
          (tags . ("graphics" "gui"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "c0a494de5aa2486e857a17e5ba0611268e563cc5")
                          (source . "git://github.com/jeapostrophe/lux")
                          (source_url
                           .
                           "http://github.com/jeapostrophe/lux/tree/master")))))))
 ("lux-charterm"
  .
  #hasheq((author . "jay.mccarthy@gmail.com")
          (authors . ("jay.mccarthy@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "lux-charterm"
                    "doc/lux-charterm@lux-charterm/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/lux-charterm.txt")
                 (test-failure-log
                  .
                  "server/built/test-fail/lux-charterm.txt")
                 (test-success-log . #f)))
          (checksum . "8d3d7c39c4cf2160f3912fea34996fe0177c78d7")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("lux" "base" "racket-doc" "scribble-lib"))
          (dependency-names . ("lux" "base" "racket-doc" "scribble-lib"))
          (description . "a lux chaos for terminal programs")
          (implies . ())
          (last-checked . 1557339693)
          (last-edit . 1416789148)
          (last-updated . 1512418034)
          (modules
           .
           ((lib "charterm-fork/charterm.rkt")
            (lib "charterm-fork/test-charterm.rkt")
            (lib "charterm-fork/main.rkt")
            (lib "lux/chaos/charterm.rkt")
            (lib "lux/chaos/lux-charterm.scrbl")
            (lib "lux/examples/charterm.rkt")))
          (name . "lux-charterm")
          (nix-sha256
           .
           "0zpdcpb16lb48phyznxavnk2mscxxn39h83gm219fkzgr793w4lm")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:jay.mccarthy@gmail.com . #t)
                   (ring:1 . #t)
                   (terminal . #t)))
          (source . "git://github.com/jeapostrophe/lux-charterm")
          (tags . ("terminal"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "8d3d7c39c4cf2160f3912fea34996fe0177c78d7")
                          (source
                           .
                           "git://github.com/jeapostrophe/lux-charterm")
                          (source_url
                           .
                           "http://github.com/jeapostrophe/lux-charterm/tree/master")))))))
 ("lwc2016"
  .
  #hasheq((author . "daniel.feltey@eecs.northwestern.edu")
          (authors . ("daniel.feltey@eecs.northwestern.edu"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/lwc2016.txt")
                 (test-failure-log . "server/built/test-fail/lwc2016.txt")
                 (test-success-log . #f)))
          (checksum . "8b8b98a9d9a8a16538176a561a5ebf3c3df84087")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           (("2d-lib" #:version "1.1")
            "base"
            "data-lib"
            "drracket-plugin-lib"
            "drracket-tool-lib"
            "gui-lib"
            "parser-tools-lib"
            "pict-lib"
            "rackunit-lib"
            "scribble-lib"
            "syntax-color-lib"
            "draw-lib"
            "ppict"
            "slideshow-lib"
            "unstable-lib"
            "at-exp-lib"))
          (dependency-names
           .
           ("2d-lib"
            "base"
            "data-lib"
            "drracket-plugin-lib"
            "drracket-tool-lib"
            "gui-lib"
            "parser-tools-lib"
            "pict-lib"
            "rackunit-lib"
            "scribble-lib"
            "syntax-color-lib"
            "draw-lib"
            "ppict"
            "slideshow-lib"
            "unstable-lib"
            "at-exp-lib"))
          (description
           .
           "PLT submision to the 2016 language workbench challenge")
          (implies . ())
          (last-checked . 1557339693)
          (last-edit . 1470110494)
          (last-updated . 1502816160)
          (modules
           .
           ((lib "examples/even-odd/even-odd-prefix.rkt")
            (lib "mini-java/parser-sig.rkt")
            (lib "paper/check-fonts.rkt")
            (lib "paper/racket.scrbl")
            (lib "mini-java/parser-unit.rkt")
            (lib "test/parser-test.rkt")
            (lib "examples/programs/fact.rkt")
            (lib "examples/programs/ParityMachine.rkt")
            (lib "mini-java/infix-mini-java.rkt")
            (lib "paper/bib.rkt")
            (lib "examples/programs/receiver-machine.rkt")
            (lib "talk/slides.rkt")
            (lib "paper/evolution.scrbl")
            (lib "test/test-examples.rkt")
            (lib "paper/mj-examples.rkt")
            (lib "paper/minijava.scrbl")
            (lib "examples/programs/typecheck-test.rkt")
            (lib "editing/syntax-info.rkt")
            (lib "paper/setup.rkt")
            (lib "mini-java/tokens.rkt")
            (lib "editing/property.rkt")
            (lib "mini-java/lexer-sig.rkt")
            (lib "examples/programs/state-machine-example.rkt")
            (lib "editing/context-table.rkt")
            (lib "examples/even-odd/expanded-even-odd.rkt")
            (lib "paper/paper.scrbl")
            (lib "talk/langs.rkt")
            (lib "talk/util.rkt")
            (lib "talk/mj-code.rkt")
            (lib "mini-java/prefix-mini-java.rkt")
            (lib "talk/racket-lwc-pict.rkt")
            (lib "paper/intro.scrbl")
            (lib "examples/programs/inheritance.rkt")
            (lib "examples/programs/inheritance2.rkt")
            (lib "examples/even-odd/even-odd.rkt")
            (lib "editing/refactor-tool.rkt")
            (lib "mini-java/main.rkt")
            (lib "examples/programs/break-example.rkt")
            (lib "editing/if-refactor.rkt")
            (lib "paper/notation.scrbl")
            (lib "examples/programs/even-odd.rkt")
            (lib "mini-java/error.rkt")
            (lib "mini-java/typecheck.rkt")
            (lib "mini-java/state-machine-classes.rkt")
            (lib "mini-java/lexer-unit.rkt")
            (lib "paper/conclusion.scrbl")
            (lib "test/test.rkt")
            (lib "paper/editing.scrbl")
            (lib "examples/programs/inheritance3.rkt")))
          (name . "lwc2016")
          (nix-sha256
           .
           "1i1zqkxi872cq3ig7n61qi9qh1caip2fj7h18g8hylzav0nvf8bi")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:no-tag: . #t)
                   (author:daniel.feltey@eecs.northwestern.edu . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/dfeltey/lwc2016")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "8b8b98a9d9a8a16538176a561a5ebf3c3df84087")
                          (source . "git://github.com/dfeltey/lwc2016")
                          (source_url
                           .
                           "http://github.com/dfeltey/lwc2016/tree/master")))))))
 ("macro-debugger"
  .
  #hash((author . "ryanc@racket-lang.org")
        (checksum . "f6989b65c75811ab3a6435037eaffe96b71114a2")
        (dependencies
         .
         ("base"
          "class-iop-lib"
          "compatibility-lib"
          "data-lib"
          "gui-lib"
          "images-lib"
          "images-gui-lib"
          "parser-tools-lib"
          "macro-debugger-text-lib"
          ("draw-lib" #:version "1.7")
          "racket-index"
          "rackunit-lib"
          "scribble-lib"
          "racket-doc"))
        (dependency-names
         .
         ("base"
          "class-iop-lib"
          "compatibility-lib"
          "data-lib"
          "gui-lib"
          "images-lib"
          "images-gui-lib"
          "parser-tools-lib"
          "macro-debugger-text-lib"
          "draw-lib"
          "racket-index"
          "rackunit-lib"
          "scribble-lib"
          "racket-doc"))
        (description . "ryanc@racket-lang.org")
        (modules . ())
        (name . "macro-debugger")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/macro-debugger.zip")
        (tags . ())))
 ("macro-debugger-text-lib"
  .
  #hash((author . "ryanc@racket-lang.org")
        (checksum . "6a4018450a1ba6aebab54c2d3f78063f21c9ce07")
        (dependencies . ("base" "db-lib" "class-iop-lib" "parser-tools-lib"))
        (dependency-names
         .
         ("base" "db-lib" "class-iop-lib" "parser-tools-lib"))
        (description . "ryanc@racket-lang.org")
        (modules . ())
        (name . "macro-debugger-text-lib")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/macro-debugger-text-lib.zip")
        (tags . ())))
 ("macrotypes-example"
  .
  #hasheq((author . "stchang@racket-lang.org")
          (authors . ("stchang@racket-lang.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/macrotypes-example.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/macrotypes-example.txt")))
          (checksum . "5111e55fd15ef2284455085b7bf770736dc12235")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           (("base" #:version "7.0") ("macrotypes-lib" #:version "0.3.2")))
          (dependency-names . ("base" "macrotypes-lib"))
          (description . "")
          (implies . ())
          (last-checked . 1557339694)
          (last-edit . 1540411876)
          (last-updated . 1544046384)
          (modules
           .
           ((lib "macrotypes/examples/stlc+tup.rkt")
            (lib "macrotypes/examples/fomega.rkt")
            (lib "macrotypes/examples/exist.rkt")
            (lib "macrotypes/examples/sysf.rkt")
            (lib "macrotypes/examples/fomega2.rkt")
            (lib "macrotypes/examples/stlc+rec-iso.rkt")
            (lib "macrotypes/examples/stlc+effect.rkt")
            (lib "macrotypes/examples/stlc+cons.rkt")
            (lib "macrotypes/examples/perf.rkt")
            (lib "macrotypes/examples/stlc+box.rkt")
            (lib "macrotypes/examples/stlc+reco+sub.rkt")
            (lib "macrotypes/examples/stlc.rkt")
            (lib "macrotypes/examples/stlc+reco+var.rkt")
            (lib "macrotypes/examples/mlish+adhoc.rkt")
            (lib "macrotypes/examples/infer.rkt")
            (lib "macrotypes/examples/stlc+lit.rkt")
            (lib "macrotypes/examples/stlc+overloading.rkt")
            (lib "macrotypes/examples/fsub.rkt")
            (lib "macrotypes/examples/perfsysf.rkt")
            (lib "macrotypes/examples/stlc+sub.rkt")
            (lib "macrotypes/examples/mlish-do.rkt")
            (lib "macrotypes/examples/stlc+occurrence.rkt")
            (lib "macrotypes/examples/mlish.rkt")
            (lib "macrotypes/examples/ext-stlc.rkt")))
          (name . "macrotypes-example")
          (nix-sha256
           .
           "1nb4f81a0q8j347ilmvgl0mzc6ivfm2d78i8vp1nk5wx1wn0zg5h")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:no-desc: . #t)
                   (:no-tag: . #t)
                   (author:stchang@racket-lang.org . #t)
                   (ring:2 . #t)))
          (source
           .
           "https://github.com/stchang/macrotypes.git?path=macrotypes-example")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "5111e55fd15ef2284455085b7bf770736dc12235")
                          (source
                           .
                           "https://github.com/stchang/macrotypes.git?path=macrotypes-example")
                          (source_url
                           .
                           "https://github.com/stchang/macrotypes.git?path=macrotypes-example")))))))
 ("macrotypes-lib"
  .
  #hasheq((author . "stchang@racket-lang.org")
          (authors . ("stchang@racket-lang.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/macrotypes-lib.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/macrotypes-lib.txt")))
          (checksum . "5111e55fd15ef2284455085b7bf770736dc12235")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . (("base" #:version "7.0")))
          (dependency-names . ("base"))
          (description
           .
           "\"Types as macros\" core api, used to create Turnstile lang")
          (implies . ())
          (last-checked . 1557339694)
          (last-edit . 1540411854)
          (last-updated . 1544046385)
          (modules
           .
           ((lib "macrotypes/type-constraints.rkt")
            (lib "macrotypes/variance-constraints.rkt")
            (lib "macrotypes/stx-utils.rkt")
            (lib "macrotypes/typecheck-core.rkt")
            (lib "macrotypes/typecheck.rkt")
            (lib "macrotypes/postfix-in.rkt")))
          (name . "macrotypes-lib")
          (nix-sha256
           .
           "1nb4f81a0q8j347ilmvgl0mzc6ivfm2d78i8vp1nk5wx1wn0zg5h")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:no-tag: . #t)
                   (author:stchang@racket-lang.org . #t)
                   (ring:2 . #t)))
          (source
           .
           "https://github.com/stchang/macrotypes.git?path=macrotypes-lib")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "5111e55fd15ef2284455085b7bf770736dc12235")
                          (source
                           .
                           "https://github.com/stchang/macrotypes.git?path=macrotypes-lib")
                          (source_url
                           .
                           "https://github.com/stchang/macrotypes.git?path=macrotypes-lib")))))))
 ("macrotypes-nonstx"
  .
  #hasheq((author . "alexander@knauth.org iitalics@gmail.com")
          (authors . ("alexander@knauth.org" "iitalics@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "macrotypes-nonstx"
                    "doc/macrotypes-nonstx@macrotypes-nonstx/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/macrotypes-nonstx.txt")
                 (test-failure-log
                  .
                  "server/built/test-fail/macrotypes-nonstx.txt")
                 (test-success-log . #f)))
          (checksum . "b3f9839b6f8dcce4bf3fe9c15d5017214300924d")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "agile"
            "rackunit-lib"
            "syntax-classes-lib"
            "racket-doc"
            "scribble-lib"))
          (dependency-names
           .
           ("base"
            "agile"
            "rackunit-lib"
            "syntax-classes-lib"
            "racket-doc"
            "scribble-lib"))
          (description
           .
           "A version of the macrotypes / Turnstile idea where types don't have to be syntax objects")
          (implies . ())
          (last-checked . 1557339694)
          (last-edit . 1523556901)
          (last-updated . 1525378796)
          (modules
           .
           ((lib "macrotypes-nonstx/expand-check-info.rkt")
            (lib "macrotypes-nonstx/example/test/test.rkt")
            (lib "macrotypes-nonstx/type-prop.rkt")
            (lib "macrotypes-nonstx/id-transformer.rkt")
            (lib "macrotypes-nonstx/expand-check-sugar-info.rkt")
            (lib "macrotypes-nonstx/example/testing.rkt")
            (lib "macrotypes-nonstx/example/test/vec-thing.rkt")
            (lib "macrotypes-nonstx/type-macros.rkt")
            (lib "macrotypes-nonstx/scribblings/macrotypes-nonstx.scrbl")
            (lib "macrotypes-nonstx/example/example-lang.rkt")
            (lib "macrotypes-nonstx/example/test/def.rkt")
            (lib "macrotypes-nonstx/expand-check-sugar.rkt")
            (lib "macrotypes-nonstx/expand-check.rkt")
            (lib "macrotypes-nonstx/type-check.rkt")
            (lib "macrotypes-nonstx/stxparse-match.rkt")
            (lib "macrotypes-nonstx/example/definition-lang.rkt")
            (lib "macrotypes-nonstx/prop.rkt")
            (lib "macrotypes-nonstx/scribblings/docs-example.rkt")
            (lib "macrotypes-nonstx/expand-stop.rkt")
            (lib "macrotypes-nonstx/example/vec-thing.rkt")))
          (name . "macrotypes-nonstx")
          (nix-sha256
           .
           "0mhylhr08a7a3jivbqb43r5wmj7n957dazpbzi0z5f050n4v81k8")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (:no-tag: . #t)
                   (author:alexander@knauth.org . #t)
                   (author:iitalics@gmail.com . #t)
                   (ring:2 . #t)))
          (source
           .
           "https://github.com/macrotypefunctors/macrotypes-nonstx.git")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "b3f9839b6f8dcce4bf3fe9c15d5017214300924d")
                          (source
                           .
                           "https://github.com/macrotypefunctors/macrotypes-nonstx.git")
                          (source_url
                           .
                           "https://github.com/macrotypefunctors/macrotypes-nonstx.git")))))))
 ("macrotypes-test"
  .
  #hasheq((author . "stchang@racket-lang.org")
          (authors . ("stchang@racket-lang.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/macrotypes-test.txt")
                 (test-failure-log
                  .
                  "server/built/test-fail/macrotypes-test.txt")
                 (test-success-log . #f)))
          (checksum . "5111e55fd15ef2284455085b7bf770736dc12235")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           (("base" #:version "7.0")
            ("macrotypes-example" #:version "0.3.2")
            ("rackunit-macrotypes-lib" #:version "0.3.1")))
          (dependency-names
           .
           ("base" "macrotypes-example" "rackunit-macrotypes-lib"))
          (description . "")
          (implies . ())
          (last-checked . 1557339694)
          (last-edit . 1540411900)
          (last-updated . 1544046386)
          (modules
           .
           ((lib "tests/macrotypes/variance-constraints.rkt")
            (lib "tests/macrotypes/sysf-tests.rkt")
            (lib "tests/macrotypes/mlish-internal-tests.rkt")
            (lib "tests/macrotypes/perfsysf.rkt")
            (lib "tests/macrotypes/stlc+overloading-tests.rkt")
            (lib "tests/macrotypes/ext-stlc-tests.rkt")
            (lib "tests/macrotypes/stlc+reco+var-tests.rkt")
            (lib "tests/macrotypes/stlc+cons-tests.rkt")
            (lib "tests/macrotypes/stlc+reco+sub-tests.rkt")
            (lib "tests/macrotypes/rackunit-typechecking.rkt")
            (lib "tests/macrotypes/stlc+occurrence-tests.rkt")
            (lib "tests/macrotypes/mlish/sweet-map.rkt")
            (lib "tests/macrotypes/fomega2-tests.rkt")
            (lib "tests/macrotypes/do-tests.rkt")
            (lib "tests/macrotypes/stlc+tup-tests.rkt")
            (lib "tests/macrotypes/postfix-in.rkt")
            (lib "tests/macrotypes/fomega-tests.rkt")
            (lib "tests/macrotypes/stlc+lit-tests.rkt")
            (lib "tests/macrotypes/stlc+box-tests.rkt")
            (lib "tests/macrotypes/stlc+sub-tests.rkt")
            (lib "tests/macrotypes/stlc-tests.rkt")
            (lib "tests/macrotypes/stlc+rec-iso-tests.rkt")
            (lib "tests/macrotypes/general-tests.rkt")
            (lib "tests/macrotypes/stlc+effect-tests.rkt")
            (lib "tests/macrotypes/typecheck-core.rkt")
            (lib "tests/macrotypes/rackunit-kindchecking.rkt")
            (lib "tests/macrotypes/fsub-tests.rkt")
            (lib "tests/macrotypes/mlish-tests.rkt")
            (lib "tests/macrotypes/perf.rkt")
            (lib "tests/macrotypes/infer-tests.rkt")
            (lib "tests/macrotypes/exist-tests.rkt")))
          (name . "macrotypes-test")
          (nix-sha256
           .
           "1nb4f81a0q8j347ilmvgl0mzc6ivfm2d78i8vp1nk5wx1wn0zg5h")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:no-desc: . #t)
                   (:no-tag: . #t)
                   (author:stchang@racket-lang.org . #t)
                   (ring:2 . #t)))
          (source
           .
           "https://github.com/stchang/macrotypes.git?path=macrotypes-test")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "5111e55fd15ef2284455085b7bf770736dc12235")
                          (source
                           .
                           "https://github.com/stchang/macrotypes.git?path=macrotypes-test")
                          (source_url
                           .
                           "https://github.com/stchang/macrotypes.git?path=macrotypes-test")))))))
 ("magenc"
  .
  #hasheq((author . "cwebber@dustycloud.org")
          (authors . ("cwebber@dustycloud.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "magenc" "doc/magenc@magenc/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/magenc.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/magenc.txt")))
          (checksum . "89f64e39ea91e9b341479fd5611be23a6ed6a920")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "crypto-lib"
            "csexp"
            "db-lib"
            "gui-lib"
            "sql"
            "web-server-lib"
            "rackunit-lib"
            "scribble-lib"))
          (dependency-names
           .
           ("base"
            "crypto-lib"
            "csexp"
            "db-lib"
            "gui-lib"
            "sql"
            "web-server-lib"
            "rackunit-lib"
            "scribble-lib"))
          (description
           .
           "Symmetric encryption for magnet URIs (code and docs)")
          (implies . ())
          (last-checked . 1557339694)
          (last-edit . 1536087294)
          (last-updated . 1556831303)
          (modules
           .
           ((lib "magenc/sqlite-store.rkt")
            (lib "magenc/sha256d.rkt")
            (lib "magenc/scribblings/magenc.scrbl")
            (lib "magenc/hungry-store.rkt")
            (lib "magenc/memory-store.rkt")
            (lib "magenc/install-factory.rkt")
            (lib "magenc/url-base64.rkt")
            (lib "magenc/web-store.rkt")
            (lib "magenc/cas-server.rkt")
            (lib "magenc/debug-store.rkt")
            (lib "magenc/client.rkt")
            (lib "magenc/store-interface.rkt")
            (lib "magenc/get-put.rkt")))
          (name . "magenc")
          (nix-sha256
           .
           "1g9akwnzsyy11md1zpr8jhim4fsw17wdmjc5ws0wjkfwms9snrl4")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:cwebber@dustycloud.org . #t)
                   (crypto . #t)
                   (demos . #t)
                   (ring:2 . #t)))
          (source . "https://gitlab.com/dustyweb/magenc.git?path=magenc")
          (tags . ("crypto" "demos"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "89f64e39ea91e9b341479fd5611be23a6ed6a920")
                          (source
                           .
                           "https://gitlab.com/dustyweb/magenc.git?path=magenc")
                          (source_url
                           .
                           "https://gitlab.com/dustyweb/magenc.git?path=magenc")))))))
 ("magic-loader"
  .
  #hasheq((author . "stephen@thoughtstem.com")
          (authors . ("stephen@thoughtstem.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . "server/built/deps/magic-loader.txt")
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/magic-loader.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/magic-loader.txt")))
          (checksum . "ed983737b383bc527e54f6db7044df503baf2a14")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("comm-panel"))
          (dependency-names . ("comm-panel"))
          (description
           .
           "We use this at ThoughtSTEM to help kids get demo code into DrRacket quickly.  I don't recommend using this package directly -- but it could be useful as a  demonstration of extending DrRacket.  ")
          (implies . ())
          (last-checked . 1557339694)
          (last-edit . 1529089348)
          (last-updated . 1529088545)
          (modules . ((lib "magic-loader/tool.rkt")))
          (name . "magic-loader")
          (nix-sha256
           .
           "12g7qz8v4mn4lqyv1i506i5z3v9ccrqafhsfwkql7njrfm2zj99b")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-dep-fail: . #t)
                   (:build-success: . #t)
                   (author:stephen@thoughtstem.com . #t)
                   (drracket . #t)
                   (ring:2 . #t)
                   (tools . #t)))
          (source . "https://github.com/thoughtstem/magic-loader.git")
          (tags . ("drracket" "tools"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "ed983737b383bc527e54f6db7044df503baf2a14")
                          (source
                           .
                           "https://github.com/thoughtstem/magic-loader.git")
                          (source_url
                           .
                           "https://github.com/thoughtstem/magic-loader.git")))))))
 ("magnolisp"
  .
  #hasheq((author . "tero@hasu.is")
          (authors . ("tero@hasu.is"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "magnolisp" "doc/magnolisp@magnolisp/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/magnolisp.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/magnolisp.txt")))
          (checksum . "191d529486e688e5dda2be677ad8fe3b654e0d4f")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           (("base" #:version "6.3")
            "data-lib"
            "scribble-lib"
            "unstable-debug-lib"
            "at-exp-lib"
            "racket-doc"
            "rackunit-lib"))
          (dependency-names
           .
           ("base"
            "data-lib"
            "scribble-lib"
            "unstable-debug-lib"
            "at-exp-lib"
            "racket-doc"
            "rackunit-lib"))
          (description . "Magnolisp")
          (implies . ())
          (last-checked . 1557339694)
          (last-edit . 1459903864)
          (last-updated . 1502816161)
          (modules
           .
           ((lib "magnolisp/tests/test-run-assign-1.rkt")
            (lib "magnolisp/app-util.rkt")
            (lib "magnolisp/tests/test-if-1.rkt")
            (lib "magnolisp/tests/test-sum2-1.rkt")
            (lib "magnolisp/tests/test-match-1.rkt")
            (lib "magnolisp/tests/test-predicate-2.rkt")
            (lib "magnolisp/tests/test-discard-2.rkt")
            (lib "magnolisp/tests/test-for-all-3.rkt")
            (lib "magnolisp/compiler-api.rkt")
            (lib "magnolisp/util/let.rkt")
            (lib "magnolisp/tests/test-discard-1.rkt")
            (lib "magnolisp/tests/test-foreign-3.rkt")
            (lib "magnolisp/util/racket-5-compat.rkt")
            (lib "magnolisp/tests/test-sum2-2.rkt")
            (lib "magnolisp/2014/reader-ext.rkt")
            (lib "magnolisp/tests/test-if-4.rkt")
            (lib "magnolisp/tests/test-packages-2.rkt")
            (lib "magnolisp/tests/test-run-sum3-1.rkt")
            (lib "magnolisp/backend-build-writer.rkt")
            (lib "magnolisp/tests/test-pass-2.rkt")
            (lib "magnolisp/tests/test-struct-1.rkt")
            (lib "magnolisp/2014/surface.rkt")
            (lib "magnolisp/tests/test-locals-3.rkt")
            (lib "magnolisp/tests/test-run-begin0-1.rkt")
            (lib "magnolisp/util.rkt")
            (lib "magnolisp/2014.rkt")
            (lib "magnolisp/ir-ast.rkt")
            (lib "magnolisp/tests/test-macro-1.rkt")
            (lib "magnolisp/tests/test-block-expr-3.rkt")
            (lib "magnolisp/tests/test-pretty-1.rkt")
            (lib "magnolisp/tests/lib-names-3.rkt")
            (lib "magnolisp/util/system.rkt")
            (lib "magnolisp/tests/test-packages-3.rkt")
            (lib "magnolisp/tests/test-type-infer-3.rkt")
            (lib "magnolisp/util/field.rkt")
            (lib "magnolisp/tests/test-modules-3.rkt")
            (lib "magnolisp/tests/test-foreign-1.rkt")
            (lib "magnolisp/tests/lib-modules-1.rkt")
            (lib "magnolisp/lang/reader.rkt")
            (lib "magnolisp/tests/test-lifts-7.rkt")
            (lib "magnolisp/tests/test-run-lifts-3.rkt")
            (lib "magnolisp/tests/test-lifts-5.rkt")
            (lib "magnolisp/tests/test-for-all-4.rkt")
            (lib "magnolisp/tests/lib-modules-3.rkt")
            (lib "magnolisp/tests/test-type-infer-a.rkt")
            (lib "magnolisp/strategy-term.rkt")
            (lib "magnolisp/tests/run-repr-tests.rkt")
            (lib "magnolisp/util/syntax-quote-main.rkt")
            (lib "magnolisp/tests/test-sum2-5.rkt")
            (lib "magnolisp/struct.rkt")
            (lib "magnolisp/tests/test-for-all-1.rkt")
            (lib "magnolisp/tests/test-for-all-5.rkt")
            (lib "magnolisp/std/list.rkt")
            (lib "magnolisp/tests/test-type-infer-1.rkt")
            (lib "magnolisp/tests/test-literal-2.rkt")
            (lib "magnolisp/tests/lib-modules-2.rkt")
            (lib "magnolisp/tests/test-names-2.rkt")
            (lib "magnolisp/tests/test-type-infer-e.rkt")
            (lib "magnolisp/ast-repr.rkt")
            (lib "magnolisp/module-load.rkt")
            (lib "magnolisp/tests/test-packages-4.rkt")
            (lib "magnolisp/tests/test-let-expr-1.rkt")
            (lib "magnolisp/tests/test-surface-1.rkt")
            (lib "magnolisp/compiler-cli.rkt")
            (lib "magnolisp/tests/test-type-infer-b.rkt")
            (lib "magnolisp/tests/test-build-2.rkt")
            (lib "magnolisp/tests/test-sum2-3.rkt")
            (lib "magnolisp/tests/test-simple-1.rkt")
            (lib "magnolisp/tests/lib-surface-provide.rkt")
            (lib "magnolisp/strategy.rkt")
            (lib "magnolisp/tests/test-macro-2.rkt")
            (lib "magnolisp/tests/test-let-expr-2.rkt")
            (lib "magnolisp/tests/test-lifts-1.rkt")
            (lib "magnolisp/strategy-list.rkt")
            (lib "magnolisp/tests/test-locals-2.rkt")
            (lib "magnolisp/tests/test-type-infer-2.rkt")
            (lib "magnolisp/tests/test-type-infer-7.rkt")
            (lib "magnolisp/util/syntax-quote-extras.rkt")
            (lib "magnolisp/tests/test-macro-3.rkt")
            (lib "magnolisp/tests/test-type-infer-8.rkt")
            (lib "magnolisp/tests/test-modules-1.rkt")
            (lib "magnolisp/tests/test-lifts-2.rkt")
            (lib "magnolisp/tests/test-struct-2.rkt")
            (lib "magnolisp/tests/test-anno-1.rkt")
            (lib "magnolisp/tests/test-declare-2.rkt")
            (lib "magnolisp/tests/run-ast-tests.rkt")
            (lib "magnolisp/util/print.rkt")
            (lib "magnolisp/util/order.rkt")
            (lib "magnolisp/core.rkt")
            (lib "magnolisp/2014/base.rkt")
            (lib "magnolisp/tests/test-literal-3.rkt")
            (lib "magnolisp/tests/test-sum2-4.rkt")
            (lib "magnolisp/modbeg.rkt")
            (lib "magnolisp/tests/test-build-3.rkt")
            (lib "magnolisp/ast-serialize.rkt")
            (lib "magnolisp/tests/test-run-simple-1.rkt")
            (lib "magnolisp/tests/run-view-tests.rkt")
            (lib "magnolisp/backend-cxx-print.rkt")
            (lib "magnolisp/tests/run-cc-on-files.rkt")
            (lib "magnolisp/tests/test-block-expr-2.rkt")
            (lib "magnolisp/tests/test-for-all-2.rkt")
            (lib "magnolisp/util/module.rkt")
            (lib "magnolisp/tests/test-run-compsys-1.rkt")
            (lib "magnolisp/tests/test-macro-4.rkt")
            (lib "magnolisp/tests/test-anno-2.rkt")
            (lib "magnolisp/tests/test-closure-1.rkt")
            (lib "magnolisp/util/struct.rkt")
            (lib "magnolisp/tests/test-modules-4.rkt")
            (lib "magnolisp/backend-mgl-print.rkt")
            (lib "magnolisp/tests/lib-cxx-runner.rkt")
            (lib "magnolisp/tests/test-type-infer-c.rkt")
            (lib "magnolisp/tests/test-type-infer-9.rkt")
            (lib "magnolisp/tests/test-type-infer-d.rkt")
            (lib "magnolisp/util/assert.rkt")
            (lib "magnolisp/ast-view.rkt")
            (lib "magnolisp/ir-transform.rkt")
            (lib "magnolisp/surface.rkt")
            (lib "magnolisp/tests/run-stratego-tests.rkt")
            (lib "magnolisp/pp-yield.rkt")
            (lib "magnolisp/tests/test-letrec-1.rkt")
            (lib "magnolisp/tests/test-literal-1.rkt")
            (lib "magnolisp/util/debug.rkt")
            (lib "magnolisp/tests/test-assign-2.rkt")
            (lib "magnolisp/tests/test-lifts-6.rkt")
            (lib "magnolisp/tests/test-foreign-6.rkt")
            (lib "magnolisp/backend-cxx-ast.rkt")
            (lib "magnolisp/tests/lib-declare-1.rkt")
            (lib "magnolisp/tests/run-mglc-on-files.rkt")
            (lib "magnolisp/tests/test-foreign-4.rkt")
            (lib "magnolisp/tests/test-if-2.rkt")
            (lib "magnolisp/tests/test-macro-5.rkt")
            (lib "magnolisp/prelude.rkt")
            (lib "magnolisp/tests/test-export-1.rkt")
            (lib "magnolisp/base/main.rkt")
            (lib "magnolisp/tests/run-misc-tests.rkt")
            (lib "magnolisp/tests/test-foreign-2.rkt")
            (lib "magnolisp/tests/test-type-infer-4.rkt")
            (lib "magnolisp/tests/test-assign-3.rkt")
            (lib "magnolisp/tests/test-names-3.rkt")
            (lib "magnolisp/strategy-stratego.rkt")
            (lib "magnolisp/tests/test-declare-1.rkt")
            (lib "magnolisp/util/bankers-deque.rkt")
            (lib "magnolisp/backend-build-main.rkt")
            (lib "magnolisp/tests/test-locals-1.rkt")
            (lib "magnolisp/tests/test-build-1.rkt")
            (lib "magnolisp/tests/test-run-discard-3.rkt")
            (lib "magnolisp/reader-ext.rkt")
            (lib "magnolisp/tests/test-foreign-5.rkt")
            (lib "magnolisp/tests/test-let-expr-3.rkt")
            (lib "magnolisp/backend-util.rkt")
            (lib "magnolisp/tests/test-run-target-1.rkt")
            (lib "magnolisp/util/syntax-quote-macros.rkt")
            (lib "magnolisp/tests/test-run-letrec-1.rkt")
            (lib "magnolisp/base/lang/reader.rkt")
            (lib "magnolisp/tests/test-predicate-1.rkt")
            (lib "magnolisp/type-infer.rkt")
            (lib "magnolisp/backend-cxx-main.rkt")
            (lib "magnolisp/tests/test-run-lifts-4.rkt")
            (lib "magnolisp/ir-id-coll.rkt")
            (lib "magnolisp/manual-src/util.rkt")
            (lib "magnolisp/parse.rkt")
            (lib "magnolisp/tests/test-lifts-8.rkt")
            (lib "magnolisp/tests/test-type-infer-6.rkt")
            (lib "magnolisp/tests/test-pass-1.rkt")
            (lib "magnolisp/tests/test-modules-2.rkt")
            (lib "magnolisp/main.rkt")
            (lib "magnolisp/2014/prelude.rkt")
            (lib "magnolisp/manual-src/magnolisp.scrbl")
            (lib "magnolisp/tests/test-if-3.rkt")
            (lib "magnolisp/tests/test-type-infer-5.rkt")
            (lib "magnolisp/tests/test-names-1.rkt")))
          (name . "magnolisp")
          (nix-sha256
           .
           "09814h5qqzi0rnm4w5nwiiq63jg0brmfr3kabxpanin8miymdf88")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:tero@hasu.is . #t)
                   (language . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/bldl/magnolisp")
          (tags . ("language"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "191d529486e688e5dda2be677ad8fe3b654e0d4f")
                          (source . "git://github.com/bldl/magnolisp")
                          (source_url
                           .
                           "http://github.com/bldl/magnolisp/tree/master")))))))
 ("main-distribution"
  .
  #hash((author
         .
         "eli@racket-lang.org jay@racket-lang.org matthias@racket-lang.org mflatt@racket-lang.org robby@racket-lang.org")
        (checksum . "4d09880d797bd4f1b69ea043ac228f27806540d9")
        (dependencies
         .
         ("2d"
          "algol60"
          "at-exp-lib"
          "compatibility"
          "contract-profile"
          "compiler"
          "data"
          "datalog"
          "db"
          "deinprogramm"
          "draw"
          "draw-doc"
          "draw-lib"
          "drracket"
          "drracket-tool"
          "eopl"
          "errortrace"
          "future-visualizer"
          "future-visualizer-typed"
          "frtime"
          "games"
          "gui"
          "htdp"
          "html"
          "icons"
          "images"
          "lazy"
          "macro-debugger"
          "macro-debugger-text-lib"
          "make"
          "math"
          "mysterx"
          "mzcom"
          "mzscheme"
          "net"
          "net-cookies"
          "optimization-coach"
          "option-contract"
          "parser-tools"
          "pconvert-lib"
          "pict"
          "pict-snip"
          "picturing-programs"
          "plai"
          "planet"
          "plot"
          "preprocessor"
          "profile"
          "r5rs"
          "r6rs"
          "racket-doc"
          "distributed-places"
          "racket-cheat"
          "racket-index"
          "racket-lib"
          "racklog"
          "rackunit"
          "rackunit-typed"
          "readline"
          "realm"
          "redex"
          "sandbox-lib"
          "sasl"
          "schemeunit"
          "scribble"
          "serialize-cstruct-lib"
          "sgl"
          "shell-completion"
          "slatex"
          "slideshow"
          "snip"
          "srfi"
          "string-constants"
          "swindle"
          "syntax-color"
          "trace"
          "typed-racket"
          "typed-racket-more"
          "unix-socket"
          "web-server"
          "wxme"
          "xrepl"
          "ds-store"))
        (dependency-names
         .
         ("2d"
          "algol60"
          "at-exp-lib"
          "compatibility"
          "contract-profile"
          "compiler"
          "data"
          "datalog"
          "db"
          "deinprogramm"
          "draw"
          "draw-doc"
          "draw-lib"
          "drracket"
          "drracket-tool"
          "eopl"
          "errortrace"
          "future-visualizer"
          "future-visualizer-typed"
          "frtime"
          "games"
          "gui"
          "htdp"
          "html"
          "icons"
          "images"
          "lazy"
          "macro-debugger"
          "macro-debugger-text-lib"
          "make"
          "math"
          "mysterx"
          "mzcom"
          "mzscheme"
          "net"
          "net-cookies"
          "optimization-coach"
          "option-contract"
          "parser-tools"
          "pconvert-lib"
          "pict"
          "pict-snip"
          "picturing-programs"
          "plai"
          "planet"
          "plot"
          "preprocessor"
          "profile"
          "r5rs"
          "r6rs"
          "racket-doc"
          "distributed-places"
          "racket-cheat"
          "racket-index"
          "racket-lib"
          "racklog"
          "rackunit"
          "rackunit-typed"
          "readline"
          "realm"
          "redex"
          "sandbox-lib"
          "sasl"
          "schemeunit"
          "scribble"
          "serialize-cstruct-lib"
          "sgl"
          "shell-completion"
          "slatex"
          "slideshow"
          "snip"
          "srfi"
          "string-constants"
          "swindle"
          "syntax-color"
          "trace"
          "typed-racket"
          "typed-racket-more"
          "unix-socket"
          "web-server"
          "wxme"
          "xrepl"
          "ds-store"))
        (description
         .
         "eli@racket-lang.org jay@racket-lang.org matthias@racket-lang.org mflatt@racket-lang.org robby@racket-lang.org")
        (modules . ())
        (name . "main-distribution")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/main-distribution.zip")
        (tags . ())))
 ("main-distribution-test"
  .
  #hash((author
         .
         "eli@racket-lang.org jay@racket-lang.org matthias@racket-lang.org mflatt@racket-lang.org robby@racket-lang.org")
        (checksum . "88094147743f7c364bf352a6f397a2e9ad290121")
        (dependencies
         .
         ("racket-test"
          "racket-test-extra"
          "rackunit-test"
          "draw-test"
          "gui-test"
          "db-test"
          "htdp-test"
          "html-test"
          "redex-test"
          "drracket-test"
          "profile-test"
          "srfi-test"
          "errortrace-test"
          "r6rs-test"
          "web-server-test"
          "typed-racket-test"
          "xrepl-test"
          "scribble-test"
          "compiler-test"
          "compatibility-test"
          "data-test"
          "net-test"
          "net-cookies-test"
          "pconvert-test"
          "planet-test"
          "syntax-color-test"
          "images-test"
          "plot-test"
          "pict-test"
          "pict-snip-test"
          "math-test"
          "racket-benchmarks"
          "drracket-tool-test"
          "2d-test"
          "option-contract-test"
          "sasl-test"
          "unix-socket-test"))
        (dependency-names
         .
         ("racket-test"
          "racket-test-extra"
          "rackunit-test"
          "draw-test"
          "gui-test"
          "db-test"
          "htdp-test"
          "html-test"
          "redex-test"
          "drracket-test"
          "profile-test"
          "srfi-test"
          "errortrace-test"
          "r6rs-test"
          "web-server-test"
          "typed-racket-test"
          "xrepl-test"
          "scribble-test"
          "compiler-test"
          "compatibility-test"
          "data-test"
          "net-test"
          "net-cookies-test"
          "pconvert-test"
          "planet-test"
          "syntax-color-test"
          "images-test"
          "plot-test"
          "pict-test"
          "pict-snip-test"
          "math-test"
          "racket-benchmarks"
          "drracket-tool-test"
          "2d-test"
          "option-contract-test"
          "sasl-test"
          "unix-socket-test"))
        (description
         .
         "eli@racket-lang.org jay@racket-lang.org matthias@racket-lang.org mflatt@racket-lang.org robby@racket-lang.org")
        (modules . ())
        (name . "main-distribution-test")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/main-distribution-test.zip")
        (tags . ())))
 ("make"
  .
  #hash((author . "mflatt@racket-lang.org")
        (checksum . "a1aa7d92639a5990ccba1824b0cd2b4f1659653f")
        (dependencies
         .
         ("scheme-lib"
          "base"
          "cext-lib"
          "compiler-lib"
          "compatibility-lib"
          "racket-doc"
          "scribble-lib"))
        (dependency-names
         .
         ("scheme-lib"
          "base"
          "cext-lib"
          "compiler-lib"
          "compatibility-lib"
          "racket-doc"
          "scribble-lib"))
        (description . "mflatt@racket-lang.org")
        (modules . ())
        (name . "make")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/make.zip")
        (tags . ())))
 ("make-log-interceptor"
  .
  #hasheq((author . "types@ccs.neu.edu")
          (authors . ("types@ccs.neu.edu"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "make-log-interceptor"
                    "doc/make-log-interceptor@make-log-interceptor/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log
                  .
                  "server/built/install/make-log-interceptor.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/make-log-interceptor.txt")))
          (checksum . "e87fdc1a9049b659261906df5f40aa884e878f14")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           (("base" #:version "6.7")
            "scribble-lib"
            "racket-doc"
            "rackunit-lib"))
          (dependency-names
           .
           ("base" "scribble-lib" "racket-doc" "rackunit-lib"))
          (description . "Collect events for a logger, organized by level")
          (implies . ())
          (last-checked . 1557339695)
          (last-edit . 1526323995)
          (last-updated . 1552755928)
          (modules
           .
           ((lib "make-log-interceptor/test/main.rkt")
            (lib "make-log-interceptor/main.rkt")
            (lib
             "make-log-interceptor/scribblings/make-log-interceptor.scrbl")))
          (name . "make-log-interceptor")
          (nix-sha256
           .
           "0shbqhb61y2c9lk41c55hpp15s3ryrdl59dkz90r0fhbcc9adqap")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:types@ccs.neu.edu . #t)
                   (logging . #t)
                   (ring:2 . #t)
                   (util . #t)))
          (source . "https://github.com/bennn/make-log-interceptor.git")
          (tags . ("logging" "util"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "e87fdc1a9049b659261906df5f40aa884e878f14")
                          (source
                           .
                           "https://github.com/bennn/make-log-interceptor.git")
                          (source_url
                           .
                           "https://github.com/bennn/make-log-interceptor.git")))))))
 ("map-widget"
  .
  #hasheq((author . "alexharsanyi@gmail.com")
          (authors . ("alexharsanyi@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "map-widget"
                    "doc/map-widget@map-widget/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/map-widget.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/map-widget.txt")))
          (checksum . "f43665cb3e0c0ec72a99670b88c6251c40dc2bc7")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("draw-lib"
            "errortrace-lib"
            "gui-lib"
            "db-lib"
            "math-lib"
            "base"
            "scribble-lib"
            "draw-doc"
            "gui-doc"
            "racket-doc"
            "rackunit-lib"))
          (dependency-names
           .
           ("draw-lib"
            "errortrace-lib"
            "gui-lib"
            "db-lib"
            "math-lib"
            "base"
            "scribble-lib"
            "draw-doc"
            "gui-doc"
            "racket-doc"
            "rackunit-lib"))
          (description
           .
           "A Racket GUI Widget to display maps based on OpenStreetMap tiles ")
          (implies . ())
          (last-checked . 1557339695)
          (last-edit . 1528802622)
          (last-updated . 1555218343)
          (modules
           .
           ((lib "map-widget/private/map-util.rkt")
            (lib "map-widget/private/map-tiles.rkt")
            (lib "map-widget/private/utilities.rkt")
            (lib "map-widget/main.rkt")
            (lib "map-widget/scribblings/map-widget.scrbl")
            (lib "map-widget/private/dbutil.rkt")
            (lib "map-widget/private/map-widget.rkt")))
          (name . "map-widget")
          (nix-sha256
           .
           "11vrghi8wx6aczb2advdf4jnprrp65c2rbj9wm0i039q8zyqljnb")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:alexharsanyi@gmail.com . #t)
                   (gui . #t)
                   (ring:2 . #t)))
          (source . "https://github.com/alex-hhh/map-widget.git")
          (tags . ("gui"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "f43665cb3e0c0ec72a99670b88c6251c40dc2bc7")
                          (source
                           .
                           "https://github.com/alex-hhh/map-widget.git")
                          (source_url
                           .
                           "https://github.com/alex-hhh/map-widget.git")))))))
 ("margrave"
  .
  #hasheq((author . "clements@racket-lang.org tn@cs.brown.edu")
          (authors . ("clements@racket-lang.org" "tn@cs.brown.edu"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "margrave" "doc/margrave@margrave/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/margrave.txt")
                 (test-failure-log . "server/built/test-fail/margrave.txt")
                 (test-success-log . #f)))
          (checksum . "09780169700c463def0d6c66192f3b07048671d8")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "gui-lib"
            "parser-tools-lib"
            "rackunit-lib"
            "scheme-lib"
            "srfi-lite-lib"
            "racket-doc"
            "scribble-lib"))
          (dependency-names
           .
           ("base"
            "gui-lib"
            "parser-tools-lib"
            "rackunit-lib"
            "scheme-lib"
            "srfi-lite-lib"
            "racket-doc"
            "scribble-lib"))
          (description . "A policy analyzer")
          (implies . ())
          (last-checked . 1557339695)
          (last-edit . 1539061496)
          (last-updated . 1539288900)
          (modules
           .
           ((lib "margrave/extended-examples/iptables-parser/margrave.rkt")
            (lib "margrave/scribblings/api.scrbl")
            (lib "margrave/visualization/application/example.rkt")
            (lib "margrave/visualization/application/test.rkt")
            (lib "margrave/extra-files/scratch.rkt")
            (lib "margrave/extra-files/sup-ios-new.rkt")
            (lib "margrave/scribblings/margrave.scrbl")
            (lib "margrave/extended-examples/IOS-simple/demo.rkt")
            (lib "margrave/lang/reader.rkt")
            (lib "margrave/extra-files/sup-iptables.rkt")
            (lib "margrave/extra-files/sup-ios.rkt")
            (lib "margrave/extended-examples/iptables-parser/ip.rkt")
            (lib "margrave/scribblings/representing-policies.scrbl")
            (lib "margrave/extended-examples/IOS-example1/forum1.rkt")
            (lib "margrave/extra-files/lang_test.rkt")
            (lib "margrave/compiler.rkt")
            (lib "margrave/helpers.rkt")
            (lib "margrave/scribblings/commands.scrbl")
            (lib "margrave/margrave-policy-vocab.rkt")
            (lib "margrave/racket/runtime-config.rkt")
            (lib "margrave/racket/language-info.rkt")
            (lib "margrave/visualization/application/load-netgraph.rkt")
            (lib "margrave/extended-examples/IOS-simple/network.rkt")
            (lib "margrave/xml-test.rkt")
            (lib "margrave/parser.rkt")
            (lib "margrave/scribblings/getting-started.scrbl")
            (lib "margrave/visualization/application/netgraph.rkt")
            (lib "margrave/racket.rkt")
            (lib "margrave/IOS-parser/ios-compile.rkt")
            (lib "margrave/examples/scripts/ios-demo.rkt")
            (lib "margrave/racket/lang/reader.rkt")
            (lib "margrave/tests.rkt")
            (lib "margrave/visualization/application/example2.rkt")
            (lib "margrave/visualization/application/visualize.rkt")
            (lib "margrave/main.rkt")
            (lib "margrave/extra-files/margrave-full-main.rkt")
            (lib "margrave/IOS-parser/ios.rkt")
            (lib "margrave/lexer.rkt")
            (lib "margrave/extra-files/margrave-lite-main.rkt")
            (lib "margrave/extended-examples/iptables-parser/iptables.rkt")
            (lib "margrave/extended-examples/IOS-example2/forum2.rkt")
            (lib "margrave/IOS-parser/ios-parse.rkt")
            (lib "margrave/visualization/application/apply-model.rkt")
            (lib "margrave/visualization/application/controls.rkt")
            (lib "margrave/examples/scripts/network.rkt")
            (lib "margrave/runtime-config.rkt")
            (lib "margrave/visualization/application/modelgraph.rkt")
            (lib "margrave/extended-examples/IOS-example1/testack.rkt")
            (lib "margrave/margrave.rkt")
            (lib "margrave/examples/scripts/examples.rkt")
            (lib "margrave/scribblings/helper.rkt")
            (lib "margrave/extra-files/large-ios.rkt")
            (lib "margrave/margrave-ios.rkt")
            (lib "margrave/language-info.rkt")
            (lib "margrave/margrave-xml.rkt")
            (lib "margrave/visualization/application/visxml.rkt")
            (lib "margrave/tests/lang-margrave-tests.rkt")))
          (name . "margrave")
          (nix-sha256
           .
           "0sbjndhknhdbk7q6kg4zmkk2mic7lmr7y9w12nc4myj1mx70yl9q")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (:no-tag: . #t)
                   (author:clements@racket-lang.org . #t)
                   (author:tn@cs.brown.edu . #t)
                   (ring:2 . #t)))
          (source . "https://github.com/jbclements/margrave.git#LISA10-pkg")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "09780169700c463def0d6c66192f3b07048671d8")
                          (source
                           .
                           "https://github.com/jbclements/margrave.git#LISA10-pkg")
                          (source_url
                           .
                           "https://github.com/jbclements/margrave.git#LISA10-pkg")))))))
 ("mario"
  .
  #hasheq((author . "mlang@blind.guru")
          (authors . ("mlang@blind.guru"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . "server/built/deps/mario.txt")
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/mario.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/mario.txt")))
          (checksum . "4604f58610230176abdde0ffca38c9df77810a49")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ())
          (dependency-names . ())
          (description
           .
           "An interpreter for the 2d programming language MarioLANG")
          (implies . ())
          (last-checked . 1557339695)
          (last-edit . 1516019981)
          (last-updated . 1516105047)
          (modules
           .
           ((lib "mario/semantics.rkt")
            (lib "mario/99bottles.rkt")
            (lib "mario/main.rkt")))
          (name . "mario")
          (nix-sha256
           .
           "0iv7njr1b6k03mgk5nnjw6j90qd6a8ji0cj6cisk9jndicc5y0gs")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-dep-fail: . #t)
                   (:build-success: . #t)
                   (MarioLANG . #t)
                   (author:mlang@blind.guru . #t)
                   (language . #t)
                   (ring:2 . #t)))
          (source . "https://github.com/mlang/mario.git")
          (tags . ("language" "MarioLANG"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "4604f58610230176abdde0ffca38c9df77810a49")
                          (source . "https://github.com/mlang/mario.git")
                          (source_url
                           .
                           "https://github.com/mlang/mario.git")))))))
 ("markdown"
  .
  #hasheq((author . "greghendershott@gmail.com")
          (authors . ("greghendershott@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "markdown" "doc/markdown@markdown/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/markdown.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/markdown.txt")))
          (checksum . "4c79d5654392c112b0f35c8847d7a8991a56a0d0")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           (("base" #:version "6.2")
            ("parsack" #:version "0.4")
            "sandbox-lib"
            "scribble-lib"
            "srfi-lite-lib"
            ("threading-lib" #:version "1.1")
            "at-exp-lib"
            "html-lib"
            "racket-doc"
            "rackunit-lib"
            "redex-lib"
            "scribble-doc"
            "sexp-diff"))
          (dependency-names
           .
           ("base"
            "parsack"
            "sandbox-lib"
            "scribble-lib"
            "srfi-lite-lib"
            "threading-lib"
            "at-exp-lib"
            "html-lib"
            "racket-doc"
            "rackunit-lib"
            "redex-lib"
            "scribble-doc"
            "sexp-diff"))
          (description . "Markdown format parser.")
          (implies . ())
          (last-checked . 1557339695)
          (last-edit . 1504135050)
          (last-updated . 1552071946)
          (modules
           .
           ((lib "markdown/xexpr.rkt")
            (lib "markdown/example.rkt")
            (lib "markdown/display-xexpr.rkt")
            (lib "markdown/toc.rkt")
            (lib "markdown/scrib.rkt")
            (lib "markdown/ci-environment.rkt")
            (lib "markdown/xexpr2text.rkt")
            (lib "markdown/suite-test.rkt")
            (lib "markdown/main.rkt")
            (lib "markdown/parse.rkt")
            (lib "markdown/perf-test.rkt")
            (lib "markdown/html.rkt")
            (lib "markdown/entity.rkt")
            (lib "markdown/parsack.rkt")
            (lib "markdown/random-test.rkt")
            (lib "markdown/markdown.scrbl")
            (lib "markdown/test.rkt")
            (lib "markdown/redex-test.rkt")))
          (name . "markdown")
          (nix-sha256
           .
           "0d5pws7b6izxa77hjw0vas8glv40wc9bxwav1rvn442fw9s4qnj4")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:greghendershott@gmail.com . #t)
                   (markdown . #t)
                   (parser . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/greghendershott/markdown")
          (tags . ("markdown" "parser"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "4c79d5654392c112b0f35c8847d7a8991a56a0d0")
                          (source
                           .
                           "git://github.com/greghendershott/markdown")
                          (source_url
                           .
                           "http://github.com/greghendershott/markdown/tree/master")))))))
 ("markparam"
  .
  #hasheq((author . "jay.mccarthy@gmail.com")
          (authors . ("jay.mccarthy@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/markparam.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/markparam.txt")))
          (checksum . "f6393494334318ef497606001f2e83bab2c8c15d")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("markparam-lib" "markparam-doc"))
          (dependency-names . ("markparam-lib" "markparam-doc"))
          (description
           .
           "a convenience library for continuation marks like parameters")
          (implies . ("markparam-lib" "markparam-doc"))
          (last-checked . 1557339695)
          (last-edit . 1438288079)
          (last-updated . 1502816163)
          (modules . ())
          (name . "markparam")
          (nix-sha256
           .
           "1fj9xn8s5b1n3qz881qibj29dhzbyjgkj2g0yxaav02580qgvxs0")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:jay.mccarthy@gmail.com . #t)
                   (continuation-marks . #t)
                   (ring:1 . #t)
                   (utility . #t)))
          (source . "git://github.com/jeapostrophe/markparam/?path=markparam")
          (tags . ("continuation-marks" "utility"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "f6393494334318ef497606001f2e83bab2c8c15d")
                          (source
                           .
                           "git://github.com/jeapostrophe/markparam/?path=markparam")
                          (source_url
                           .
                           "git://github.com/jeapostrophe/markparam/?path=markparam")))
                 ("6.2"
                  .
                  #hasheq((checksum
                           .
                           "9f098dddde7f217879070816090c1e8e74d49432")
                          (source
                           .
                           "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")
                          (source_url
                           .
                           "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")))))))
 ("markparam-doc"
  .
  #hasheq((author . "jay.mccarthy@gmail.com")
          (authors . ("jay.mccarthy@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "markparam"
                    "doc/markparam@markparam-doc/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/markparam-doc.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/markparam-doc.txt")))
          (checksum . "f6393494334318ef497606001f2e83bab2c8c15d")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           (("base" #:version "6.2.900.4")
            "markparam-lib"
            "scribble-lib"
            "racket-doc"))
          (dependency-names
           .
           ("base" "markparam-lib" "scribble-lib" "racket-doc"))
          (description
           .
           "a convenience library for continuation marks like parameters")
          (implies . ())
          (last-checked . 1557339695)
          (last-edit . 1504535618)
          (last-updated . 1502816163)
          (modules . ((lib "markparam/scribblings/markparam.scrbl")))
          (name . "markparam-doc")
          (nix-sha256
           .
           "1fj9xn8s5b1n3qz881qibj29dhzbyjgkj2g0yxaav02580qgvxs0")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:jay.mccarthy@gmail.com . #t)
                   (continuation-marks . #t)
                   (ring:1 . #t)
                   (utility . #t)))
          (source
           .
           "git://github.com/jeapostrophe/markparam?path=markparam-doc")
          (tags . ("continuation-marks" "utility"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "f6393494334318ef497606001f2e83bab2c8c15d")
                          (source
                           .
                           "git://github.com/jeapostrophe/markparam?path=markparam-doc")
                          (source_url
                           .
                           "http://github.com/jeapostrophe/markparam/tree/master?path=markparam-doc")))
                 ("6.2"
                  .
                  #hasheq((checksum
                           .
                           "9f098dddde7f217879070816090c1e8e74d49432")
                          (source
                           .
                           "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")
                          (source_url
                           .
                           "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")))))))
 ("markparam-lib"
  .
  #hasheq((author . "jay.mccarthy@gmail.com")
          (authors . ("jay.mccarthy@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/markparam-lib.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/markparam-lib.txt")))
          (checksum . "f6393494334318ef497606001f2e83bab2c8c15d")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . (("base" #:version "6.2.900.4")))
          (dependency-names . ("base"))
          (description
           .
           "a convenience library for continuation marks like parameters")
          (implies . ())
          (last-checked . 1557339695)
          (last-edit . 1504535542)
          (last-updated . 1502816163)
          (modules . ((lib "markparam/main.rkt")))
          (name . "markparam-lib")
          (nix-sha256
           .
           "1fj9xn8s5b1n3qz881qibj29dhzbyjgkj2g0yxaav02580qgvxs0")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:jay.mccarthy@gmail.com . #t)
                   (continuation-marks . #t)
                   (ring:1 . #t)
                   (utility . #t)))
          (source
           .
           "git://github.com/jeapostrophe/markparam?path=markparam-lib")
          (tags . ("continuation-marks" "utility"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "f6393494334318ef497606001f2e83bab2c8c15d")
                          (source
                           .
                           "git://github.com/jeapostrophe/markparam?path=markparam-lib")
                          (source_url
                           .
                           "http://github.com/jeapostrophe/markparam/tree/master?path=markparam-lib")))
                 ("6.2"
                  .
                  #hasheq((checksum
                           .
                           "9f098dddde7f217879070816090c1e8e74d49432")
                          (source
                           .
                           "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")
                          (source_url
                           .
                           "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")))))))
 ("markparam-test"
  .
  #hasheq((author . "jay.mccarthy@gmail.com")
          (authors . ("jay.mccarthy@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/markparam-test.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/markparam-test.txt")))
          (checksum . "f6393494334318ef497606001f2e83bab2c8c15d")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           (("base" #:version "6.2.900.4")
            "markparam-lib"
            "racket-index"
            "eli-tester"))
          (dependency-names
           .
           ("base" "markparam-lib" "racket-index" "eli-tester"))
          (description
           .
           "a convenience library for continuation marks like parameters")
          (implies . ())
          (last-checked . 1557339695)
          (last-edit . 1504535546)
          (last-updated . 1502816164)
          (modules . ((lib "markparam/tests/main.rkt")))
          (name . "markparam-test")
          (nix-sha256
           .
           "1fj9xn8s5b1n3qz881qibj29dhzbyjgkj2g0yxaav02580qgvxs0")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:jay.mccarthy@gmail.com . #t)
                   (continuation-marks . #t)
                   (ring:1 . #t)
                   (utility . #t)))
          (source
           .
           "git://github.com/jeapostrophe/markparam?path=markparam-test")
          (tags . ("continuation-marks" "utility"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "f6393494334318ef497606001f2e83bab2c8c15d")
                          (source
                           .
                           "git://github.com/jeapostrophe/markparam?path=markparam-test")
                          (source_url
                           .
                           "http://github.com/jeapostrophe/markparam/tree/master?path=markparam-test")))
                 ("6.2"
                  .
                  #hasheq((checksum
                           .
                           "9f098dddde7f217879070816090c1e8e74d49432")
                          (source
                           .
                           "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")
                          (source_url
                           .
                           "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")))))))
 ("match-count"
  .
  #hasheq((author . "samth@ccs.neu.edu")
          (authors . ("samth@ccs.neu.edu"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/match-count.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/match-count.txt")))
          (checksum . "99dc72c1dc254602d92d46f12552b95fab6f2ee5")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base"))
          (dependency-names . ("base"))
          (description . "Instrumented match")
          (implies . ())
          (last-checked . 1557339696)
          (last-edit . 1383076503)
          (last-updated . 1502816164)
          (modules . ((lib "match-count/main.rkt")))
          (name . "match-count")
          (nix-sha256
           .
           "0918y8wfvyvkmmir7kcjwfhy8j3x1mqmc069ls01cjkmbha288ph")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:samth@ccs.neu.edu . #t)
                   (match . #t)
                   (profiling . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/samth/match-count")
          (tags . ("match" "profiling"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "99dc72c1dc254602d92d46f12552b95fab6f2ee5")
                          (source . "git://github.com/samth/match-count")
                          (source_url
                           .
                           "http://github.com/samth/match-count/tree/master")))))))
 ("match-plus"
  .
  #hasheq((author . "lexi.lambda@gmail.com")
          (authors . ("lexi.lambda@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "match-plus"
                    "doc/match-plus@match-plus/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/match-plus.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/match-plus.txt")))
          (checksum . "cd72471c582f5c20ec35a96fa08936f4f3fd6c47")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "racket-doc" "rackunit-lib" "scribble-lib"))
          (dependency-names
           .
           ("base" "racket-doc" "rackunit-lib" "scribble-lib"))
          (description . "")
          (implies . ())
          (last-checked . 1557339696)
          (last-edit . 1449952359)
          (last-updated . 1502816164)
          (modules
           .
           ((lib "match-plus/scribblings/match-plus.scrbl")
            (lib "match-plus/main.rkt")))
          (name . "match-plus")
          (nix-sha256
           .
           "05hwcpjh8ybd86izsq5fx292nm842c1gb5zlrlpxj3y3s6hg618d")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (:no-desc: . #t)
                   (:no-tag: . #t)
                   (author:lexi.lambda@gmail.com . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/lexi-lambda/racket-match-plus.git")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "cd72471c582f5c20ec35a96fa08936f4f3fd6c47")
                          (source
                           .
                           "git://github.com/lexi-lambda/racket-match-plus.git")
                          (source_url
                           .
                           "http://github.com/lexi-lambda/racket-match-plus.git/tree/master")))))))
 ("match-string"
  .
  #hasheq((author . "alexander@knauth.org")
          (authors . ("alexander@knauth.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . "server/built/deps/match-string.txt")
                 (docs
                  .
                  (("main"
                    "match-string"
                    "doc/match-string@match-string/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/match-string.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/match-string.txt")))
          (checksum . "b625d3dd2685d1c40613cfc7dceb0b3e967b1c5a")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "anaphoric"
            "rackunit-lib"
            "htdp-lib"
            "racket-doc"
            "scribble-lib"
            "sandbox-lib"))
          (dependency-names
           .
           ("base"
            "anaphoric"
            "rackunit-lib"
            "htdp-lib"
            "racket-doc"
            "scribble-lib"
            "sandbox-lib"))
          (description . "string-append and append as a match patterns")
          (implies . ())
          (last-checked . 1557339696)
          (last-edit . 1408914307)
          (last-updated . 1552881949)
          (modules
           .
           ((lib "match-string/syntax-classes.rkt")
            (lib "match-string/util/seq-matcher.rkt")
            (lib "match-string/util/matcher.rkt")
            (lib "match-string/util/match-bound-vars.rkt")
            (lib "match-string/docs/match-string.scrbl")
            (lib "list-with-splicing/main.rkt")
            (lib "match-string/util/string-seq-matcher.rkt")
            (lib "match-string/ooo.rkt")
            (lib "match-string/main.rkt")))
          (name . "match-string")
          (nix-sha256
           .
           "1iqf132hswvdwf5mcyvpkcqb1zfklj55ak77m6762jlzcxfdi0gz")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-dep-fail: . #t)
                   (:build-success: . #t)
                   (:docs: . #t)
                   (author:alexander@knauth.org . #t)
                   (match . #t)
                   (ring:1 . #t)
                   (string . #t)))
          (source . "git://github.com/AlexKnauth/match-string")
          (tags . ("match" "string"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "b625d3dd2685d1c40613cfc7dceb0b3e967b1c5a")
                          (source
                           .
                           "git://github.com/AlexKnauth/match-string")
                          (source_url
                           .
                           "http://github.com/AlexKnauth/match-string/tree/master")))))))
 ("math"
  .
  #hash((author . "ntoronto@racket-lang.org")
        (checksum . "29e118367f13d86932fc7c3193863545dcd5ade0")
        (dependencies . ("math-lib" "math-doc"))
        (dependency-names . ("math-lib" "math-doc"))
        (description . "ntoronto@racket-lang.org")
        (modules . ())
        (name . "math")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/math.zip")
        (tags . ())))
 ("math-doc"
  .
  #hash((author . "ntoronto@racket-lang.org")
        (checksum . "d0a27803b7df926badd94b2fac6001ce267b1374")
        (dependencies
         .
         ("base"
          "at-exp-lib"
          "math-lib"
          "plot-doc"
          "plot-gui-lib"
          "racket-doc"
          "sandbox-lib"
          "scribble-lib"
          "typed-racket-doc"
          "typed-racket-lib"
          "2d-lib"))
        (dependency-names
         .
         ("base"
          "at-exp-lib"
          "math-lib"
          "plot-doc"
          "plot-gui-lib"
          "racket-doc"
          "sandbox-lib"
          "scribble-lib"
          "typed-racket-doc"
          "typed-racket-lib"
          "2d-lib"))
        (description . "ntoronto@racket-lang.org")
        (modules . ())
        (name . "math-doc")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/math-doc.zip")
        (tags . ())))
 ("math-i386-macosx"
  .
  #hash((author . "mflatt@racket-lang.org")
        (checksum . "c9b04e83d4b74b5c64dc78539a7d49f4baaf9c0c")
        (dependencies . ("base"))
        (dependency-names . ("base"))
        (description . "mflatt@racket-lang.org")
        (modules . ())
        (name . "math-i386-macosx")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/math-i386-macosx.zip")
        (tags . ())))
 ("math-lib"
  .
  #hash((author . "ntoronto@racket-lang.org")
        (checksum . "fc7c7d42f6397ae9fb0b46565fdfdc94e1ee000f")
        (dependencies
         .
         (("base" #:version "6.11.0.6")
          "r6rs-lib"
          "typed-racket-lib"
          "typed-racket-more"
          ("math-i386-macosx" #:platform "i386-macosx")
          ("math-x86_64-macosx" #:platform "x86_64-macosx")
          ("math-ppc-macosx" #:platform "ppc-macosx")
          ("math-win32-i386" #:platform "win32\\i386")
          ("math-win32-x86_64" #:platform "win32\\x86_64")
          ("math-x86_64-linux-natipkg" #:platform "x86_64-linux-natipkg")))
        (dependency-names
         .
         ("base"
          "r6rs-lib"
          "typed-racket-lib"
          "typed-racket-more"
          "math-i386-macosx"
          "math-x86_64-macosx"
          "math-ppc-macosx"
          "math-win32-i386"
          "math-win32-x86_64"
          "math-x86_64-linux-natipkg"))
        (description . "ntoronto@racket-lang.org")
        (modules . ())
        (name . "math-lib")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/math-lib.zip")
        (tags . ())))
 ("math-ppc-macosx"
  .
  #hash((author . "mflatt@racket-lang.org")
        (checksum . "a74f4e6eaef3eae2c0b54f271175127f6bc49c2f")
        (dependencies . ("base"))
        (dependency-names . ("base"))
        (description . "mflatt@racket-lang.org")
        (modules . ())
        (name . "math-ppc-macosx")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/math-ppc-macosx.zip")
        (tags . ())))
 ("math-test"
  .
  #hash((author . "ntoronto@racket-lang.org")
        (checksum . "597c8cfd5db15135f326cd212789d9c5aed72a77")
        (dependencies
         .
         ("base"
          "math-lib"
          "racket-test"
          "rackunit-lib"
          "typed-racket-lib"
          "typed-racket-more"))
        (dependency-names
         .
         ("base"
          "math-lib"
          "racket-test"
          "rackunit-lib"
          "typed-racket-lib"
          "typed-racket-more"))
        (description . "ntoronto@racket-lang.org")
        (modules . ())
        (name . "math-test")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/math-test.zip")
        (tags . ())))
 ("math-win32-i386"
  .
  #hash((author . "mflatt@racket-lang.org")
        (checksum . "6a5233b4aeea7a13da95002a619f3a72a2da8997")
        (dependencies . ("base"))
        (dependency-names . ("base"))
        (description . "mflatt@racket-lang.org")
        (modules . ())
        (name . "math-win32-i386")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/math-win32-i386.zip")
        (tags . ())))
 ("math-win32-x86_64"
  .
  #hash((author . "mflatt@racket-lang.org")
        (checksum . "93159768526a0b7e111bf00985382ada52705e9f")
        (dependencies . ("base"))
        (dependency-names . ("base"))
        (description . "mflatt@racket-lang.org")
        (modules . ())
        (name . "math-win32-x86_64")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/math-win32-x86_64.zip")
        (tags . ())))
 ("math-x86_64-linux-natipkg"
  .
  #hash((author . "mflatt@racket-lang.org")
        (checksum . "321b98a5a731c457c14c7517c7b00176e3efc3e6")
        (dependencies . ("base"))
        (dependency-names . ("base"))
        (description . "mflatt@racket-lang.org")
        (modules . ())
        (name . "math-x86_64-linux-natipkg")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/math-x86_64-linux-natipkg.zip")
        (tags . ())))
 ("math-x86_64-macosx"
  .
  #hash((author . "mflatt@racket-lang.org")
        (checksum . "498a74fc889c269718886e1a87a98ff7db631139")
        (dependencies . ("base"))
        (dependency-names . ("base"))
        (description . "mflatt@racket-lang.org")
        (modules . ())
        (name . "math-x86_64-macosx")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/math-x86_64-macosx.zip")
        (tags . ())))
 ("mboxrd-read"
  .
  #hasheq((author . "clements@racket-lang.org")
          (authors . ("clements@racket-lang.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "mboxrd-read"
                    "doc/mboxrd-read@mboxrd-read/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/mboxrd-read.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/mboxrd-read.txt")))
          (checksum . "b123593ab3a67f46d816c9c31a6d98fce46c9b18")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "compatibility-lib"
            "rackunit-lib"
            "scribble-lib"
            "net-doc"
            "racket-doc"))
          (dependency-names
           .
           ("base"
            "compatibility-lib"
            "rackunit-lib"
            "scribble-lib"
            "net-doc"
            "racket-doc"))
          (description
           .
           "Racket functions for reading mboxrd and mboxcl2 (used by dovecot) format")
          (implies . ())
          (last-checked . 1557339700)
          (last-edit . 1540570710)
          (last-updated . 1502816173)
          (modules
           .
           ((lib "mboxrd-read/main.rkt")
            (lib "mboxrd-read/mboxrd-read.scrbl")
            (lib "mboxrd-read/tests.rkt")
            (lib "mboxrd-read/mboxrd.rkt")
            (lib "mboxrd-read/mboxcl2.rkt")))
          (name . "mboxrd-read")
          (nix-sha256
           .
           "0ihdmr3yckg9gfm3xc4kz3dvx50jarvjfp65yiwy7bbrl2kkfdvv")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:clements@racket-lang.org . #t)
                   (io . #t)
                   (ring:1 . #t)))
          (source . "https://github.com/jbclements/mboxrd-read.git")
          (tags . ("io"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "b123593ab3a67f46d816c9c31a6d98fce46c9b18")
                          (source
                           .
                           "https://github.com/jbclements/mboxrd-read.git")
                          (source_url
                           .
                           "https://github.com/jbclements/mboxrd-read.git")))))))
 ("mcfly"
  .
  #hasheq((author . "neil@neilvandyke.org")
          (authors . ("neil@neilvandyke.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "mcfly" "doc/mcfly@mcfly/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/mcfly.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/mcfly.txt")))
          (checksum . "e670b083eefe6ac27c23cc9423bac0f31720d58c")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("at-exp-lib" "base" "scribble-lib" "racket-doc"))
          (dependency-names
           .
           ("at-exp-lib" "base" "scribble-lib" "racket-doc"))
          (description . "Embedded Package Documentation Runtime")
          (implies . ())
          (last-checked . 1557339700)
          (last-edit . 1456463369)
          (last-updated . 1502816174)
          (modules
           .
           ((lib "mcfly/mcfly-parse.rkt")
            (lib "mcfly/main.rkt")
            (lib "mcfly/doc.rkt")
            (lib "mcfly/mcfly-misc.rkt")
            (lib "mcfly/mcfly-expand.rkt")
            (lib "mcfly/mcfly.scrbl")
            (lib "mcfly/mcfly-scribble.rkt")
            (lib "mcfly/mcfly-format.rkt")
            (lib "mcfly/mcfly-spec.rkt")
            (lib "mcfly/test-mcfly-spec.rkt")))
          (name . "mcfly")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:neil@neilvandyke.org . #t)
                   (documentation . #t)
                   (ring:1 . #t)))
          (source . "http://www.neilvandyke.org/racket/mcfly.zip")
          (tags . ("documentation"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "e670b083eefe6ac27c23cc9423bac0f31720d58c")
                          (source
                           .
                           "http://www.neilvandyke.org/racket/mcfly.zip")
                          (source_url
                           .
                           "http://www.neilvandyke.org/racket/mcfly.zip")))))))
 ("measures"
  .
  #hasheq((author . "laurent.orseau@gmail.com")
          (authors . ("laurent.orseau@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "measures" "doc/measures@measures/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/measures.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/measures.txt")))
          (checksum . "f75e2361a767cab6fb662c761cc93d15b00c964a")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base" "at-exp-lib" "rackunit-lib" "scribble-lib" "racket-doc"))
          (dependency-names
           .
           ("base" "at-exp-lib" "rackunit-lib" "scribble-lib" "racket-doc"))
          (description
           .
           "Units and measures with basic arithmetic operations.")
          (implies . ())
          (last-checked . 1557339701)
          (last-edit . 1383054219)
          (last-updated . 1516476620)
          (modules
           .
           ((lib "measures/tests/test-measure.rkt")
            (lib "measures/functions.rkt")
            (lib "measures/default-units.rkt")
            (lib "measures/main.rkt")
            (lib "measures/lang.rkt")
            (lib "measures/convert.rkt")
            (lib "measures/README.scrbl")
            (lib "measures/tests/test-convert.rkt")
            (lib "measures/measure.rkt")
            (lib "measures/private/fetch-parse-elements.rkt")
            (lib "measures/chemical-elements.rkt")))
          (name . "measures")
          (nix-sha256
           .
           "183vsj914zkvpnbrfk4s8bid4rlpi3c9z40r9y06zmryi9c8rins")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:laurent.orseau@gmail.com . #t)
                   (math . #t)
                   (ring:1 . #t)))
          (source . "github://github.com/Metaxal/measures/master")
          (tags . ("math"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "f75e2361a767cab6fb662c761cc93d15b00c964a")
                          (source
                           .
                           "github://github.com/Metaxal/measures/master")
                          (source_url
                           .
                           "http://github.com/Metaxal/measures/tree/master")))))))
 ("measures-with-dimensions"
  .
  #hasheq((author . "alexander@knauth.org")
          (authors . ("alexander@knauth.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "measures-with-dimensions"
                    "doc/measures-with-dimensions@measures-with-dimensions/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log
                  .
                  "server/built/install/measures-with-dimensions.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/measures-with-dimensions.txt")))
          (checksum . "b42f2a008b08ad45498b457c818f450666deefb7")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "typed-racket-lib"
            "typed-racket-more"
            "threading"
            "math-lib"
            "htdp-lib"
            "unstable-lib"
            "sweet-exp"
            "reprovide-lang"
            "predicates"
            "colon-match"
            "scribble-lib"
            "rackunit-lib"
            "scribble-lib"
            "sandbox-lib"
            "racket-doc"
            "typed-racket-doc"
            "at-exp-lib"))
          (dependency-names
           .
           ("base"
            "typed-racket-lib"
            "typed-racket-more"
            "threading"
            "math-lib"
            "htdp-lib"
            "unstable-lib"
            "sweet-exp"
            "reprovide-lang"
            "predicates"
            "colon-match"
            "scribble-lib"
            "rackunit-lib"
            "scribble-lib"
            "sandbox-lib"
            "racket-doc"
            "typed-racket-doc"
            "at-exp-lib"))
          (description . "based on measures, but with dimensions and types")
          (implies . ())
          (last-checked . 1557339701)
          (last-edit . 1420328908)
          (last-updated . 1556662111)
          (modules
           .
           ((lib
             "typed/measures-with-dimensions/docs/units-and-dimensions.scrbl")
            (lib "typed/measures-with-dimensions/vector-operations.rkt")
            (lib "typed/measures-with-dimensions/chemistry/elements.rkt")
            (lib "typed/measures-with-dimensions/docs/short-names.scrbl")
            (lib
             "typed/measures-with-dimensions/measures/typed-operations.rkt")
            (lib "typed/measures-with-dimensions/preds.rkt")
            (lib "typed/measures-with-dimensions/chemistry/misc.rkt")
            (lib "typed/measures-with-dimensions/units/units.rkt")
            (lib
             "typed/measures-with-dimensions/measures/untyped-operations.rkt")
            (lib
             "typed/measures-with-dimensions/dimensions/dimension-struct.rkt")
            (lib
             "typed/measures-with-dimensions/chemistry/element-struct.rkt")
            (lib "typed/measures-with-dimensions/docs/deftype.rkt")
            (lib "typed/measures-with-dimensions/old/main.rkt")
            (lib "typed/measures-with-dimensions/relativity/beta-gamma.rkt")
            (lib "typed/measures-with-dimensions.rkt")
            (lib "measures-with-dimensions/temperature.rkt")
            (lib
             "typed/measures-with-dimensions/docs/measures-with-dimensions.scrbl")
            (lib "typed/measures-with-dimensions/exact-tau-pi-eta.rkt")
            (lib "typed/measures-with-dimensions/measures/0-1-measures.rkt")
            (lib "measures-with-dimensions/main.rkt")
            (lib
             "typed/measures-with-dimensions/docs/operations-types-structs.scrbl")
            (lib "typed/measures-with-dimensions/chemistry.rkt")
            (lib "typed/measures-with-dimensions/measures/measure-struct.rkt")
            (lib
             "typed/measures-with-dimensions/relativity/lorentz-transform.rkt")
            (lib "typed/measures-with-dimensions/measures.rkt")
            (lib
             "typed/measures-with-dimensions/temperature/match-expanders.rkt")
            (lib "typed/measures-with-dimensions/docs/short/SI.scrbl")
            (lib
             "typed/measures-with-dimensions/measures/typed-operations-1.rkt")
            (lib "typed/measures-with-dimensions/dimensions/dimensions.rkt")
            (lib "typed/measures-with-dimensions/docs/temperature.scrbl")
            (lib "typed/measures-with-dimensions/docs/short/US.scrbl")
            (lib "typed/measures-with-dimensions/short/SI.rkt")
            (lib "measures-with-dimensions/chemistry.rkt")
            (lib
             "typed/measures-with-dimensions/docs/chemistry/elements.scrbl")
            (lib
             "typed/measures-with-dimensions/docs/chemistry/molar-mass.scrbl")
            (lib "typed/measures-with-dimensions/dimensions.rkt")
            (lib "typed/measures-with-dimensions/chemistry/molar-mass.rkt")
            (lib "typed/measures-with-dimensions/untyped-utils.rkt")
            (lib "typed/measures-with-dimensions/short/US.rkt")
            (lib
             "typed/measures-with-dimensions/temperature/temperature-functions.rkt")
            (lib
             "typed/measures-with-dimensions/docs/chemistry/compounds.scrbl")
            (lib "typed/measures-with-dimensions/units/unit-struct.rkt")
            (lib
             "typed/measures-with-dimensions/measures/physical-constants.rkt")
            (lib "typed/measures-with-dimensions/defmulti.rkt")
            (lib "typed/measures-with-dimensions/chemistry/compound.rkt")
            (lib "typed/measures-with-dimensions/temperature.rkt")
            (lib "typed/measures-with-dimensions/units/unit-operations.rkt")
            (lib "typed/measures-with-dimensions/units.rkt")
            (lib "typed/measures-with-dimensions/measures/measure-types.rkt")
            (lib
             "typed/measures-with-dimensions/chemistry/compound-struct.rkt")
            (lib
             "typed/measures-with-dimensions/dimensions/dimension-operations.rkt")
            (lib "typed/measures-with-dimensions/docs/chemistry.scrbl")
            (lib
             "typed/measures-with-dimensions/docs/physical-constants.scrbl")))
          (name . "measures-with-dimensions")
          (nix-sha256
           .
           "0m2yznk4ji96ymd8kd1c653bk7arbh08cd0j1snz79cqnyr2jx0k")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:alexander@knauth.org . #t)
                   (dimensional-analysis . #t)
                   (math . #t)
                   (ring:1 . #t)
                   (units . #t)))
          (source . "git://github.com/AlexKnauth/measures-with-dimensions")
          (tags . ("dimensional-analysis" "math" "units"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "b42f2a008b08ad45498b457c818f450666deefb7")
                          (source
                           .
                           "git://github.com/AlexKnauth/measures-with-dimensions")
                          (source_url
                           .
                           "http://github.com/AlexKnauth/measures-with-dimensions/tree/master")))))))
 ("mediafile"
  .
  #hasheq((author . "neil@neilvandyke.org")
          (authors . ("neil@neilvandyke.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "mediafile" "doc/mediafile@mediafile/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/mediafile.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/mediafile.txt")))
          (checksum . "3d87ac5b4e35a527d7f9263af40e014d1400edb7")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "mcfly"
            "canonicalize-path"
            "racket-doc"
            "scribble-lib"
            "overeasy"))
          (dependency-names
           .
           ("base"
            "mcfly"
            "canonicalize-path"
            "racket-doc"
            "scribble-lib"
            "overeasy"))
          (description . "Media File Metadata Utilities")
          (implies . ())
          (last-checked . 1557339701)
          (last-edit . 1456618671)
          (last-updated . 1502816175)
          (modules
           .
           ((lib "mediafile/mediafile.rkt")
            (lib "mediafile/mediafile.scrbl")
            (lib "mediafile/mediafile-exif.rkt")
            (lib "mediafile/mediafile-misc.rkt")
            (lib "mediafile/main.rkt")
            (lib "mediafile/mediafile-ogg.rkt")))
          (name . "mediafile")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:neil@neilvandyke.org . #t)
                   (jpeg . #t)
                   (media . #t)
                   (ogg . #t)
                   (ring:1 . #t)
                   (tiff . #t)))
          (source . "http://www.neilvandyke.org/racket/mediafile.zip")
          (tags . ("jpeg" "media" "ogg" "tiff"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "3d87ac5b4e35a527d7f9263af40e014d1400edb7")
                          (source
                           .
                           "http://www.neilvandyke.org/racket/mediafile.zip")
                          (source_url
                           .
                           "http://www.neilvandyke.org/racket/mediafile.zip")))))))
 ("medic"
  .
  #hasheq((author . "artlessu@gmail.com")
          (authors . ("artlessu@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "medic" "doc/medic@medic/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/medic.txt")
                 (test-failure-log . "server/built/test-fail/medic.txt")
                 (test-success-log . #f)))
          (checksum . "0920090d3c77d6873b8481841622a5f2d13a732c")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("at-exp-lib"
            "base"
            "scheme-lib"
            "compatibility-lib"
            "gui-lib"
            "images-lib"
            "pict-lib"
            "draw-lib"
            "racket-doc"
            "scribble-lib"
            "redex-pict-lib"))
          (dependency-names
           .
           ("at-exp-lib"
            "base"
            "scheme-lib"
            "compatibility-lib"
            "gui-lib"
            "images-lib"
            "pict-lib"
            "draw-lib"
            "racket-doc"
            "scribble-lib"
            "redex-pict-lib"))
          (description . "A debugging tool for better printf")
          (implies . ())
          (last-checked . 1557339701)
          (last-edit . 1422318926)
          (last-updated . 1502816176)
          (modules
           .
           ((lib "medic/trace-browser/time-slider.rkt")
            (lib "medic/demos/same/same-medic.rkt")
            (lib "medic/demos/aggregate/debug.rkt")
            (lib "medic/scribblings/demo.scrbl")
            (lib "medic/demos/factorial/fact.rkt")
            (lib "medic/scribblings/medic.scrbl")
            (lib "medic/trace-util.rkt")
            (lib "medic/trace-browser/tooltip.rkt")
            (lib "medic/demos/timeline-event/debug.rkt")
            (lib "medic/demos/demo2/debug.rkt")
            (lib "medic/demos/demo1/debug.rkt")
            (lib "medic/demos/find-path/debug.rkt")
            (lib "medic/demos/count-length/debug.rkt")
            (lib "medic/medic-structs.rkt")
            (lib "medic/demos/factorial/debug.rkt")
            (lib "medic/syntax-traversal.rkt")
            (lib "medic/trace-browser/graph-pasteboard.rkt")
            (lib
             "medic/demos/doubly-linked-list/doubly-linked-list-medic.rkt")
            (lib "medic/demos/demo4/src4.rkt")
            (lib "medic/insert.rkt")
            (lib "medic/trace-browser/scrub-slider.rkt")
            (lib "medic/trace.rkt")
            (lib "medic/demos/doubly-linked-list/doubly-linked-list.rkt")
            (lib "medic/demos/demo5/src5-medic.rkt")
            (lib "medic/demos/same/debug.rkt")
            (lib "medic/demos/demo5/src5.rkt")
            (lib "medic/demos/demo2/src2-medic.rkt")
            (lib "medic/demos/doubly-linked-list/debug.rkt")
            (lib "medic/trace-browser/browser.rkt")
            (lib "medic/demos/demo4/src4-medic.rkt")
            (lib "medic/trace-browser/log-text.rkt")
            (lib "medic/demos/timeline-event/event-medic.rkt")
            (lib "medic/trace-browser/aggregate-editor.rkt")
            (lib "medic/demos/count-length/count.rkt")
            (lib "medic/demos/timeline-event/se.rkt")
            (lib "medic/core.rkt")
            (lib "medic/trace-browser/timeline-canvas.rkt")
            (lib "medic/demos/aggregate/fact-iter.rkt")
            (lib "medic/main.rkt")
            (lib "medic/demos/demo5/f.rkt")
            (lib "medic/demos/demo2/src2.rkt")
            (lib "medic/demos/demo3/debug.rkt")
            (lib "medic/demos/demo3/src3-medic.rkt")
            (lib "medic/demos/demo5/debug.rkt")
            (lib "medic/demos/demo4/debug.rkt")
            (lib "medic/trace-browser/quadtree.rkt")
            (lib "medic/demos/factorial/fact-medic.rkt")
            (lib "medic/demos/find-path/find-path.rkt")
            (lib "medic/load-annotator.rkt")
            (lib "medic/demos/demo1/src1.rkt")
            (lib "medic/demos/find-path/find-path-medic.rkt")
            (lib "medic/demos/demo1/src1-medic.rkt")
            (lib "medic/demos/demo3/src3.rkt")
            (lib "medic/scribblings/language.scrbl")
            (lib "medic/demos/aggregate/fact-iter-medic.rkt")
            (lib "medic/demos/count-length/count-medic.rkt")
            (lib "medic/trace-browser/time-frame.rkt")
            (lib "medic/demos/same/same.rkt")))
          (name . "medic")
          (nix-sha256
           .
           "01as5556dkrxxfj3awff3a4d7z5hj8vnx5p182hmk5vmnlq5sj9w")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (:no-tag: . #t)
                   (author:artlessu@gmail.com . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/lixiangqi/medic")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "0920090d3c77d6873b8481841622a5f2d13a732c")
                          (source . "git://github.com/lixiangqi/medic")
                          (source_url
                           .
                           "http://github.com/lixiangqi/medic/tree/master")))))))
 ("megaparsack"
  .
  #hasheq((author . "lexi.lambda@gmail.com")
          (authors . ("lexi.lambda@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/megaparsack.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/megaparsack.txt")))
          (checksum . "45168f1833ff9002016c3a3234e90315015c0cee")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "megaparsack-lib"
            "megaparsack-doc"
            "megaparsack-parser"
            "megaparsack-parser-tools"))
          (dependency-names
           .
           ("base"
            "megaparsack-lib"
            "megaparsack-doc"
            "megaparsack-parser"
            "megaparsack-parser-tools"))
          (description . "practical parser combinators")
          (implies
           .
           ("megaparsack-lib"
            "megaparsack-doc"
            "megaparsack-parser"
            "megaparsack-parser-tools"))
          (last-checked . 1557339702)
          (last-edit . 1462746746)
          (last-updated . 1534387500)
          (modules . ())
          (name . "megaparsack")
          (nix-sha256
           .
           "1afplsa19s5gsbnk3yzxdsc2yi5z3l819zv5zc8l9qkfbqn94244")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:lexi.lambda@gmail.com . #t)
                   (parser . #t)
                   (parsing . #t)
                   (ring:1 . #t)))
          (source
           .
           "git://github.com/lexi-lambda/megaparsack?path=megaparsack")
          (tags . ("parser" "parsing"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "45168f1833ff9002016c3a3234e90315015c0cee")
                          (source
                           .
                           "git://github.com/lexi-lambda/megaparsack?path=megaparsack")
                          (source_url
                           .
                           "http://github.com/lexi-lambda/megaparsack/tree/master?path=megaparsack")))))))
 ("megaparsack-doc"
  .
  #hasheq((author . "lexi.lambda@gmail.com")
          (authors . ("lexi.lambda@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "megaparsack"
                    "doc/megaparsack@megaparsack-doc/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/megaparsack-doc.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/megaparsack-doc.txt")))
          (checksum . "45168f1833ff9002016c3a3234e90315015c0cee")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "functional-doc"
            "functional-lib"
            ("megaparsack-lib" #:version "0.2")
            "megaparsack-parser-tools"
            "parser-tools-doc"
            "parser-tools-lib"
            "racket-doc"
            "scribble-lib"))
          (dependency-names
           .
           ("base"
            "functional-doc"
            "functional-lib"
            "megaparsack-lib"
            "megaparsack-parser-tools"
            "parser-tools-doc"
            "parser-tools-lib"
            "racket-doc"
            "scribble-lib"))
          (description
           .
           "documentation (no implementation) for “megaparsack”")
          (implies . ())
          (last-checked . 1557339702)
          (last-edit . 1462746765)
          (last-updated . 1534387500)
          (modules
           .
           ((lib "scribblings/megaparsack/differences-from-parsack.scrbl")
            (lib "scribblings/megaparsack/syntax.scrbl")
            (lib "scribblings/megaparsack/util.rkt")
            (lib "scribblings/megaparsack.scrbl")
            (lib "scribblings/megaparsack/basics.scrbl")
            (lib "scribblings/megaparsack/reference.scrbl")
            (lib "scribblings/megaparsack/choice.scrbl")))
          (name . "megaparsack-doc")
          (nix-sha256
           .
           "1afplsa19s5gsbnk3yzxdsc2yi5z3l819zv5zc8l9qkfbqn94244")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:lexi.lambda@gmail.com . #t)
                   (parser . #t)
                   (parsing . #t)
                   (ring:1 . #t)))
          (source
           .
           "git://github.com/lexi-lambda/megaparsack?path=megaparsack-doc")
          (tags . ("parser" "parsing"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "45168f1833ff9002016c3a3234e90315015c0cee")
                          (source
                           .
                           "git://github.com/lexi-lambda/megaparsack?path=megaparsack-doc")
                          (source_url
                           .
                           "http://github.com/lexi-lambda/megaparsack/tree/master?path=megaparsack-doc")))))))
 ("megaparsack-lib"
  .
  #hasheq((author . "lexi.lambda@gmail.com")
          (authors . ("lexi.lambda@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/megaparsack-lib.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/megaparsack-lib.txt")))
          (checksum . "45168f1833ff9002016c3a3234e90315015c0cee")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           (("base" #:version "6.5")
            "curly-fn-lib"
            ("functional-lib" #:version "0.6")
            "match-plus"))
          (dependency-names
           .
           ("base" "curly-fn-lib" "functional-lib" "match-plus"))
          (description
           .
           "implementation (no documentation) for “megaparsack”")
          (implies . ())
          (last-checked . 1557339702)
          (last-edit . 1462746781)
          (last-updated . 1534387501)
          (modules
           .
           ((lib "megaparsack/text.rkt")
            (lib "megaparsack/main.rkt")
            (lib "megaparsack/base.rkt")
            (lib "megaparsack/combinator.rkt")))
          (name . "megaparsack-lib")
          (nix-sha256
           .
           "1afplsa19s5gsbnk3yzxdsc2yi5z3l819zv5zc8l9qkfbqn94244")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:lexi.lambda@gmail.com . #t)
                   (parser . #t)
                   (parsing . #t)
                   (ring:1 . #t)))
          (source
           .
           "git://github.com/lexi-lambda/megaparsack?path=megaparsack-lib")
          (tags . ("parser" "parsing"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "45168f1833ff9002016c3a3234e90315015c0cee")
                          (source
                           .
                           "git://github.com/lexi-lambda/megaparsack?path=megaparsack-lib")
                          (source_url
                           .
                           "http://github.com/lexi-lambda/megaparsack/tree/master?path=megaparsack-lib")))))))
 ("megaparsack-parser"
  .
  #hasheq((author . "lexi.lambda@gmail.com")
          (authors . ("lexi.lambda@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/megaparsack-parser.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/megaparsack-parser.txt")))
          (checksum . "45168f1833ff9002016c3a3234e90315015c0cee")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "collections-lib"
            "curly-fn-lib"
            "functional-lib"
            "megaparsack-lib"))
          (dependency-names
           .
           ("base"
            "collections-lib"
            "curly-fn-lib"
            "functional-lib"
            "megaparsack-lib"))
          (description . "built-in parsers implemented using megaparsack")
          (implies . ())
          (last-checked . 1557339702)
          (last-edit . 1462746808)
          (last-updated . 1534387501)
          (modules . ((lib "megaparsack/parser/json.rkt")))
          (name . "megaparsack-parser")
          (nix-sha256
           .
           "1afplsa19s5gsbnk3yzxdsc2yi5z3l819zv5zc8l9qkfbqn94244")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:lexi.lambda@gmail.com . #t)
                   (parser . #t)
                   (parsing . #t)
                   (ring:1 . #t)))
          (source
           .
           "git://github.com/lexi-lambda/megaparsack?path=megaparsack-parser")
          (tags . ("parser" "parsing"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "45168f1833ff9002016c3a3234e90315015c0cee")
                          (source
                           .
                           "git://github.com/lexi-lambda/megaparsack?path=megaparsack-parser")
                          (source_url
                           .
                           "http://github.com/lexi-lambda/megaparsack/tree/master?path=megaparsack-parser")))))))
 ("megaparsack-parser-tools"
  .
  #hasheq((author . "lexi.lambda@gmail.com")
          (authors . ("lexi.lambda@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log
                  .
                  "server/built/install/megaparsack-parser-tools.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/megaparsack-parser-tools.txt")))
          (checksum . "45168f1833ff9002016c3a3234e90315015c0cee")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base" "functional-lib" "megaparsack-lib" "parser-tools-lib"))
          (dependency-names
           .
           ("base" "functional-lib" "megaparsack-lib" "parser-tools-lib"))
          (description . "helpers for using megaparsack with parser-tools")
          (implies . ())
          (last-checked . 1557339702)
          (last-edit . 1462746839)
          (last-updated . 1534387501)
          (modules . ((lib "megaparsack/parser-tools/lex.rkt")))
          (name . "megaparsack-parser-tools")
          (nix-sha256
           .
           "1afplsa19s5gsbnk3yzxdsc2yi5z3l819zv5zc8l9qkfbqn94244")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:lexi.lambda@gmail.com . #t)
                   (parser . #t)
                   (parsing . #t)
                   (ring:1 . #t)))
          (source
           .
           "git://github.com/lexi-lambda/megaparsack?path=megaparsack-parser-tools")
          (tags . ("parser" "parsing"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "45168f1833ff9002016c3a3234e90315015c0cee")
                          (source
                           .
                           "git://github.com/lexi-lambda/megaparsack?path=megaparsack-parser-tools")
                          (source_url
                           .
                           "http://github.com/lexi-lambda/megaparsack/tree/master?path=megaparsack-parser-tools")))))))
 ("memcached"
  .
  #hasheq((author . "jay.mccarthy@gmail.com")
          (authors . ("jay.mccarthy@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "memcached" "doc/memcached@memcached/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/memcached.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/memcached.txt")))
          (checksum . "465d1bfc700140232c4abd0b854d807740895237")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "eli-tester" "racket-doc" "scribble-lib"))
          (dependency-names
           .
           ("base" "eli-tester" "racket-doc" "scribble-lib"))
          (description . "A native Racket interface to memcached")
          (implies . ())
          (last-checked . 1557339702)
          (last-edit . 1353009237)
          (last-updated . 1502816178)
          (modules
           .
           ((lib "net/memcached/binary.rkt")
            (lib "net/memcached.rkt")
            (lib "tests/net/memcached.rkt")
            (lib "net/memcached/memcached.scrbl")))
          (name . "memcached")
          (nix-sha256
           .
           "1xcwykqx4qsfl2k3imr147dpg7jlvx538q7ycq02c3y326f5m7vd")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:jay.mccarthy@gmail.com . #t)
                   (net . #t)
                   (ring:1 . #t)))
          (source . "github://github.com/jeapostrophe/memcached/master")
          (tags . ("net"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "465d1bfc700140232c4abd0b854d807740895237")
                          (source
                           .
                           "github://github.com/jeapostrophe/memcached/master")
                          (source_url
                           .
                           "http://github.com/jeapostrophe/memcached/tree/master")))))))
 ("memo"
  .
  #hasheq((author . "macocio@gmail.com")
          (authors . ("macocio@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "memo" "doc/memo@memo/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/memo.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/memo.txt")))
          (checksum . "3ecfa4ad20c38ce97fedaed848d08348e92c56d3")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "finalizer"
            "nested-hash"
            "sandbox-lib"
            "scribble-lib"
            "racket-doc"
            "rackunit-lib"
            "thread-utils"))
          (dependency-names
           .
           ("base"
            "finalizer"
            "nested-hash"
            "sandbox-lib"
            "scribble-lib"
            "racket-doc"
            "rackunit-lib"
            "thread-utils"))
          (description . "Memoization with finalizers and cleanup")
          (implies . ())
          (last-checked . 1557339702)
          (last-edit . 1533987723)
          (last-updated . 1543063570)
          (modules
           .
           ((lib "memo/main.rkt") (lib "memo/scribblings/memo.scrbl")))
          (name . "memo")
          (nix-sha256
           .
           "02sdi28c2qvyqsx8dpf9wsnlxs42ahvxrkrqqwym0kh0qvl5irxp")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:macocio@gmail.com . #t)
                   (memoization . #t)
                   (ring:2 . #t)))
          (source . "https://github.com/BourgondAries/memo.git")
          (tags . ("memoization"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "3ecfa4ad20c38ce97fedaed848d08348e92c56d3")
                          (source
                           .
                           "https://github.com/BourgondAries/memo.git")
                          (source_url
                           .
                           "https://github.com/BourgondAries/memo.git")))))))
 ("memoize"
  .
  #hasheq((author . "clements@racket-lang.org dherman@mozilla.com")
          (authors . ("clements@racket-lang.org" "dherman@mozilla.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "memoize" "doc/memoize@memoize/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/memoize.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/memoize.txt")))
          (checksum . "9cdbf7512b8a531b1b26ffc02160aa9e8125f2ed")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "rackunit-lib" "scribble-lib" "racket-doc"))
          (dependency-names
           .
           ("base" "rackunit-lib" "scribble-lib" "racket-doc"))
          (description . "Memoization for functions")
          (implies . ())
          (last-checked . 1557339702)
          (last-edit . 1386376011)
          (last-updated . 1513624543)
          (modules
           .
           ((lib "memoize/main.rkt")
            (lib "memoize/memoize.scrbl")
            (lib "memoize/private/tests.rkt")))
          (name . "memoize")
          (nix-sha256
           .
           "07w8y0pfhikmj12raq12d7z8kmg9n6lp5npp0lvhlaanp1hffwhh")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (:no-tag: . #t)
                   (author:clements@racket-lang.org . #t)
                   (author:dherman@mozilla.com . #t)
                   (ring:1 . #t)))
          (source . "github://github.com/jbclements/memoize/master")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "9cdbf7512b8a531b1b26ffc02160aa9e8125f2ed")
                          (source
                           .
                           "github://github.com/jbclements/memoize/master")
                          (source_url
                           .
                           "http://github.com/jbclements/memoize/tree/master")))))))
 ("metapict"
  .
  #hasheq((author . "jensaxel@soegaard.net")
          (authors . ("jensaxel@soegaard.net"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "metapict" "doc/metapict@metapict/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/metapict.txt")
                 (test-failure-log . "server/built/test-fail/metapict.txt")
                 (test-success-log . #f)))
          (checksum . "b515f1f9577d8c928917ce452c6ba7750232f0af")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "draw-lib"
            "math-lib"
            "gui-lib"
            "parser-tools-lib"
            "pict-lib"
            "slideshow-lib"
            "srfi-lite-lib"
            "ppict"
            "htdp-lib"
            "compatibility-lib"
            "at-exp-lib"
            "rackunit-lib"
            "scribble-lib"
            "racket-doc"
            "draw-doc"
            "pict-doc"))
          (dependency-names
           .
           ("base"
            "draw-lib"
            "math-lib"
            "gui-lib"
            "parser-tools-lib"
            "pict-lib"
            "slideshow-lib"
            "srfi-lite-lib"
            "ppict"
            "htdp-lib"
            "compatibility-lib"
            "at-exp-lib"
            "rackunit-lib"
            "scribble-lib"
            "racket-doc"
            "draw-doc"
            "pict-doc"))
          (description . "Create beautiful pictures and diagrams")
          (implies . ())
          (last-checked . 1557339702)
          (last-edit . 1422737600)
          (last-updated . 1547319598)
          (modules
           .
           ((lib "metapict/examples/convex-hull.rkt")
            (lib "metapict/examples/geometry-exercises.rkt")
            (lib "metapict/adaptive-plot.rkt")
            (lib "metapict/scribblings/guide.rkt")
            (lib "metapict/scribblings/coordinates.scrbl")
            (lib "metapict/label.rkt")
            (lib "metapict/pen-and-brush.rkt")
            (lib "metapict/arrow.rkt")
            (lib "metapict/box-and-pointer-diagram.rkt")
            (lib "metapict/snake.rkt")
            (lib "metapict/examples/root-spiral.rkt")
            (lib "metapict/color.rkt")
            (lib "metapict/examples/asymptote-hobby-control.rkt")
            (lib "metapict/examples/kmiecik-examples-from-tug-boat.rkt")
            (lib "metapict/parameters.rkt")
            (lib "metapict/examples/triangle-sss.rkt")
            (lib "metapict/scribblings/metapict.scrbl")
            (lib "metapict/examples/integral-left-sum.rkt")
            (lib "metapict/extras/function-tables.rkt")
            (lib "metapict/examples/pointilism2.rkt")
            (lib "metapict/scribblings/construction-of-bezier-curve.rkt")
            (lib "metapict/hom.rkt")
            (lib "metapict/scribblings/examples5.scrbl")
            (lib "metapict/scribblings/colors.scrbl")
            (lib "metapict/mat.rkt")
            (lib "metapict/examples/asymptote-venn-diagram.rkt")
            (lib "metapict/exp/render-math-using-picts.rkt")
            (lib "metapict/main.rkt")
            (lib "metapict/examples/exercises-angles-in-right-triangle.rkt")
            (lib "metapict/todo/tagged-pict.rkt")
            (lib "metapict/todo/lexer.rkt")
            (lib "metapict/scribblings/reference.scrbl")
            (lib "metapict/scribblings/moonlanding.rkt")
            (lib "metapict/examples/polygonal-numbers.rkt")
            (lib "metapict/scribblings/curves.scrbl")
            (lib "metapict/pict-lite.rkt")
            (lib "metapict/cubic-equation.rkt")
            (lib "metapict/exp/tex/render-tex-formula.rkt")
            (lib "metapict/list3-sequence.rkt")
            (lib "metapict/dc.rkt")
            (lib "metapict/shapes.rkt")
            (lib "metapict/examples/metafont-book.rkt")
            (lib "metapict/examples/glider.rkt")
            (lib "metapict/geometry.rkt")
            (lib "metapict/structs.rkt")
            (lib "metapict/scribblings/examples.scrbl")
            (lib "metapict/debug.rkt")
            (lib "metapict/scribblings/pict.scrbl")
            (lib "metapict/examples/gradient-example.rkt")
            (lib "metapict/scribblings/utils.rkt")
            (lib "metapict/bez.rkt")
            (lib "metapict/examples/pointilism.rkt")
            (lib "metapict/examples/reuleaux-triangle.rkt")
            (lib "metapict/window.rkt")
            (lib "metapict/pt-vec.rkt")
            (lib "metapict/examples/cuboid.rkt")
            (lib "metapict/device.rkt")
            (lib "metapict/examples/sine-cosine-drawing.rkt")
            (lib "metapict/path.rkt")
            (lib "metapict/todo/linear-equations.rkt")
            (lib "metapict/scribblings/curve.scrbl")
            (lib "metapict/examples/olympic-rings.rkt")
            (lib "metapict/trans.rkt")
            (lib "metapict/exp/font-root-test.rkt")
            (lib "metapict/examples/rotating-triangle.rkt")
            (lib "metapict/examples/missing-square-puzzle.rkt")
            (lib "metapict/pict.rkt")
            (lib "metapict/examples/arbelos.rkt")
            (lib "metapict/todo/grammar.rkt")
            (lib "metapict/exp/framed-table.rkt")
            (lib "metapict/dc-path-to-curve.rkt")
            (lib "metapict/examples/metapost-examples.rkt")
            (lib "metapict/node.rkt")
            (lib "metapict/scribblings/pt.scrbl")
            (lib "metapict/bitmap.rkt")
            (lib "metapict/line.rkt")
            (lib "metapict/examples/generate-exercises-to-pdf.rkt")
            (lib "metapict/angles.rkt")
            (lib "metapict/match-case-lambda.rkt")
            (lib "metapict/scribblings/bez.scrbl")
            (lib "metapict/examples/metapost-manual.rkt")
            (lib "metapict/scribblings/representation.scrbl")
            (lib "metapict/examples/state-machine.rkt")
            (lib "metapict/metapict.rkt")
            (lib "metapict/curve.rkt")
            (lib "metapict/graph.rkt")
            (lib "metapict/todo/test-grammar-and-lexer.rkt")
            (lib "metapict/examples/truncated-cone.rkt")
            (lib "metapict/grid.rkt")
            (lib "metapict/examples/peano.rkt")
            (lib "metapict/draw.rkt")
            (lib "metapict/examples/vector-diagrams.rkt")
            (lib "metapict/todo/grammar-expressions.rkt")
            (lib "metapict/def.rkt")
            (lib "metapict/markings.rkt")
            (lib "metapict/dc-path.rkt")
            (lib "metapict/draw-bezier.rkt")
            (lib "metapict/extras/flags.rkt")
            (lib "metapict/save-pdf.rkt")
            (lib "metapict/scribblings/guide.scrbl")
            (lib "metapict/scribblings/draw-and-fill.scrbl")
            (lib "metapict/trig.rkt")
            (lib "metapict/tree.rkt")
            (lib "metapict/polygons.rkt")))
          (name . "metapict")
          (nix-sha256
           .
           "0dh3cm8631m9qji6zqq6s8gs8qv1315visifzf714jpl4r8b2w77")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:jensaxel@soegaard.net . #t)
                   (graphics . #t)
                   (images . #t)
                   (metapict . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/soegaard/metapict")
          (tags . ("graphics" "images" "metapict"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "b515f1f9577d8c928917ce452c6ba7750232f0af")
                          (source . "git://github.com/soegaard/metapict")
                          (source_url
                           .
                           "http://github.com/soegaard/metapict/tree/master")))))))
 ("mf-apply"
  .
  #hasheq((author . "types@ccs.neu.edu")
          (authors . ("types@ccs.neu.edu"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "mf-apply" "doc/mf-apply@mf-apply/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/mf-apply.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/mf-apply.txt")))
          (checksum . "1cb5c40d4c4cc0dd025e26be80c05d17a189ec2a")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "redex-lib"
            "scribble-lib"
            "racket-doc"
            "rackunit-lib"
            "redex-doc"))
          (dependency-names
           .
           ("base"
            "redex-lib"
            "scribble-lib"
            "racket-doc"
            "rackunit-lib"
            "redex-doc"))
          (description
           .
           "PLT Redex lang-extension for checked metafunction application")
          (implies . ())
          (last-checked . 1557339703)
          (last-edit . 1488257334)
          (last-updated . 1552755935)
          (modules
           .
           ((lib "mf-apply/docs/mf-apply.scrbl")
            (lib "mf-apply/lang/reader.rkt")))
          (name . "mf-apply")
          (nix-sha256
           .
           "0ypy95qfla8127gby2w8d5j4wgwircwdvr120wy9pqkg74qw4r3k")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:types@ccs.neu.edu . #t)
                   (lang-extension . #t)
                   (redex . #t)
                   (ring:1 . #t)
                   (utility . #t)))
          (source . "git://github.com/bennn/mf-apply")
          (tags . ("lang-extension" "redex" "utility"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "1cb5c40d4c4cc0dd025e26be80c05d17a189ec2a")
                          (source . "git://github.com/bennn/mf-apply")
                          (source_url
                           .
                           "http://github.com/bennn/mf-apply/tree/master")))))))
 ("mic1"
  .
  #hasheq((author . "jay.mccarthy@gmail.com")
          (authors . ("jay.mccarthy@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "mic1" "doc/mic1@mic1/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/mic1.txt")
                 (test-failure-log . "server/built/test-fail/mic1.txt")
                 (test-success-log . #f)))
          (checksum . "f9076f110cd6a2a8005db35f0af1f29d20c3b34c")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "parser-tools-lib"
            "readline-lib"
            "racket-doc"
            "scribble-lib"
            "chk"))
          (dependency-names
           .
           ("base"
            "parser-tools-lib"
            "readline-lib"
            "racket-doc"
            "scribble-lib"
            "chk"))
          (description . "tools for MIC-1 CPU architecture")
          (implies . ())
          (last-checked . 1557339703)
          (last-edit . 1495592344)
          (last-updated . 1530416688)
          (modules
           .
           ((lib "mic1/mcc.rkt")
            (lib "mic1/masm.rkt")
            (lib "mic1/high-level.rkt")
            (lib "mic1/mic1.rkt")
            (lib "mic1/lib.rkt")
            (lib "mic1/low-level.rkt")
            (lib "mic1/mic1.scrbl")
            (lib "mic1/simulator.rkt")
            (lib "mic1/hdl.rkt")
            (lib "mic1/mic1-test.rkt")))
          (name . "mic1")
          (nix-sha256
           .
           "0yga2b50wc21w32mdvrldhh4z4w6bi06hg02b6b3ddk1iqp2g535")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:jay.mccarthy@gmail.com . #t)
                   (hardware . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/jeapostrophe/mic1?path=rkt")
          (tags . ("hardware"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "f9076f110cd6a2a8005db35f0af1f29d20c3b34c")
                          (source
                           .
                           "git://github.com/jeapostrophe/mic1?path=rkt")
                          (source_url
                           .
                           "http://github.com/jeapostrophe/mic1/tree/master?path=rkt")))))))
 ("midi-readwrite"
  .
  #hasheq((author . "clements@racket-lang.org")
          (authors . ("clements@racket-lang.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "midi" "doc/midi@midi-readwrite/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/midi-readwrite.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/midi-readwrite.txt")))
          (checksum . "92953cfef013e2c654e8f972b5d55f0da220fae4")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "rackunit-lib"
            "typed-racket-lib"
            "typed-racket-more"
            "scribble-lib"
            "racket-doc"))
          (dependency-names
           .
           ("base"
            "rackunit-lib"
            "typed-racket-lib"
            "typed-racket-more"
            "scribble-lib"
            "racket-doc"))
          (description . "simple functions to read MIDI (.mid) files")
          (implies . ())
          (last-checked . 1557339703)
          (last-edit . 1383343365)
          (last-updated . 1502816180)
          (modules
           .
           ((lib "midi-readwrite/notestream.rkt")
            (lib "midi-readwrite/sort-helper.rkt")
            (lib "midi-readwrite/main.rkt")
            (lib "midi-readwrite/midi.scrbl")
            (lib "midi-readwrite/test/example-read.rkt")
            (lib "midi-readwrite/midi-read.rkt")
            (lib "midi-readwrite/midi-write.rkt")
            (lib "midi-readwrite/midi-to-notes.rkt")
            (lib "midi-readwrite/midi-structs.rkt")
            (lib "midi-readwrite/controller-name.rkt")))
          (name . "midi-readwrite")
          (nix-sha256
           .
           "0y3frsdyb3r8i2f7pbkmrk2r1k01samrfz3s4vymwwr13yqsqby0")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (audio . #t)
                   (author:clements@racket-lang.org . #t)
                   (io . #t)
                   (midi . #t)
                   (ring:1 . #t)))
          (source . "github://github.com/jbclements/midi-readwrite/master")
          (tags . ("audio" "io" "midi"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "92953cfef013e2c654e8f972b5d55f0da220fae4")
                          (source
                           .
                           "github://github.com/jbclements/midi-readwrite/master")
                          (source_url
                           .
                           "http://github.com/jbclements/midi-readwrite/tree/master")))))))
 ("minetest"
  .
  #hasheq((author . "stephen@thoughtstem.com")
          (authors . ("stephen@thoughtstem.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("salvage" "minetest" "doc/minetest@minetest/index.html")))
                 (failure-log . "server/built/fail/minetest.txt")
                 (min-failure-log . #f)
                 (success-log . #f)
                 (test-failure-log . #f)
                 (test-success-log . #f)))
          (checksum . "74ba2d02511e96bfc477ab6db4937d1732bd1e2b")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ())
          (dependency-names . ())
          (description
           .
           "Compile-time framework for getting 2htdp/image objects into Minetest (as blocks, items, recipes, and/or schematics).  Only works on Linux.")
          (implies . ())
          (last-checked . 1557339703)
          (last-edit . 1514502227)
          (last-updated . 1530218676)
          (modules
           .
           ((lib "minetest/rocket-module.rkt")
            (lib "minetest/blocks.rkt")
            (lib "minetest/entities.rkt")
            (lib "minetest/main.rkt")
            (lib "minetest/textures.rkt")
            (lib "minetest/core.rkt")
            (lib "minetest/examples/example-mod.rkt")
            (lib "minetest/rules.rkt")
            (lib "minetest/lua.rkt")
            (lib "minetest/examples/hello-world.rkt")
            (lib "minetest/recipes.rkt")
            (lib "minetest/examples/quick-demo.rkt")
            (lib "minetest/items.rkt")
            (lib "minetest/compiler.rkt")
            (lib "minetest/mob-api-raw.rkt")
            (lib "minetest/schematics-writer-raw.rkt")
            (lib "minetest/examples/example2.rkt")
            (lib "minetest/minetest.scrbl")
            (lib "minetest/schematics.rkt")))
          (name . "minetest")
          (nix-sha256
           .
           "1bicjwxxg673fbbxqx8314ij55ln4xgqqn17362lwqn9g6jynvik")
          (ring . 2)
          (search-terms
           .
           #hasheq((2htdp . #t)
                   (:build-fail: . #t)
                   (:docs-error: . #t)
                   (:docs: . #t)
                   (author:stephen@thoughtstem.com . #t)
                   (education . #t)
                   (games . #t)
                   (minetest . #t)
                   (ring:2 . #t)))
          (source . "https://github.com/thoughtstem/minetest.git")
          (tags . ("2htdp" "education" "games" "minetest"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "74ba2d02511e96bfc477ab6db4937d1732bd1e2b")
                          (source
                           .
                           "https://github.com/thoughtstem/minetest.git")
                          (source_url
                           .
                           "https://github.com/thoughtstem/minetest.git")))))))
 ("minikanren"
  .
  #hasheq((author . "asumu@ccs.neu.edu jhemann@umail.iu.edu")
          (authors . ("asumu@ccs.neu.edu" "jhemann@umail.iu.edu"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "minikanren"
                    "doc/minikanren@minikanren/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/minikanren.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/minikanren.txt")))
          (checksum . "659404d009e9cec9695805f4d4465447796a663a")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "racket-doc" "scribble-lib"))
          (dependency-names . ("base" "racket-doc" "scribble-lib"))
          (description . "A Planet 2 package for minikanren")
          (implies . ())
          (last-checked . 1557339703)
          (last-edit . 1358887007)
          (last-updated . 1502816180)
          (modules
           .
           ((lib "minikanren/main.rkt")
            (lib "minikanren/minikanren.scrbl")
            (lib "minikanren/minikanren.rkt")))
          (name . "minikanren")
          (nix-sha256
           .
           "1bjv0adc9clfw97r3rpav5jmfjlbjj13nv4psfrvsl7inhw5pdf0")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:asumu@ccs.neu.edu . #t)
                   (author:jhemann@umail.iu.edu . #t)
                   (logic . #t)
                   (ring:1 . #t)))
          (source . "github://github.com/takikawa/minikanren/master")
          (tags . ("logic"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "659404d009e9cec9695805f4d4465447796a663a")
                          (source
                           .
                           "github://github.com/takikawa/minikanren/master")
                          (source_url
                           .
                           "http://github.com/takikawa/minikanren/tree/master")))))))
 ("minipascal"
  .
  #hasheq((author . "jensaxel@soegaard.net")
          (authors . ("jensaxel@soegaard.net"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/minipascal.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/minipascal.txt")))
          (checksum . "6c028051ba9c151c5b6e8fddd6c2442c1abb0601")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("ragg"
            "base"
            "parser-tools-lib"
            "base"
            "parser-tools-lib"
            "at-exp-lib"
            "rackunit-lib"
            "scribble-lib"
            "racket-doc"))
          (dependency-names
           .
           ("ragg"
            "base"
            "parser-tools-lib"
            "base"
            "parser-tools-lib"
            "at-exp-lib"
            "rackunit-lib"
            "scribble-lib"
            "racket-doc"))
          (description . "MiniPascal as a Racket language")
          (implies . ())
          (last-checked . 1557339703)
          (last-edit . 1359470626)
          (last-updated . 1502816180)
          (modules
           .
           ((lib "minipascal/tests-medium/function-with-one-argument.rkt")
            (lib "minipascal/tests-real/primes.rkt")
            (lib "minipascal/lang/reader.rkt")
            (lib "minipascal/tests-medium/procedure-with-no-arguments.rkt")
            (lib "minipascal/tests-medium/nested-functions.rkt")
            (lib "minipascal/compiler-fpc.rkt")
            (lib "minipascal/tests-basic/stdlib-chr.rkt")
            (lib "minipascal/tests-medium/function-with-two-arguments.rkt")
            (lib "minipascal/tests-basic/negative-constants.rkt")
            (lib "minipascal/tests-basic/const-var-scope.rkt")
            (lib "minipascal/tests-basic/export-of-global-functions.rkt")
            (lib "minipascal/tests-basic/char.rkt")
            (lib "minipascal/tests-medium/strings.rkt")
            (lib "minipascal/tests-basic/type-definitions2.rkt")
            (lib "minipascal/tests-basic/lowhigh.rkt")
            (lib "minipascal/tests-medium/horner.rkt")
            (lib "minipascal/mini-pascal-lexer.rkt")
            (lib "minipascal/tests-basic/compound-statement.rkt")
            (lib "minipascal/tests-basic/relational-operators.rkt")
            (lib "minipascal/tests-medium/array-of-char.rkt")
            (lib "minipascal/types.rkt")
            (lib "minipascal/semantics.rkt")
            (lib "minipascal/tests-basic/arithmetic.rkt")
            (lib "minipascal/compiler-simple.rkt")
            (lib "minipascal/compiler.rkt")
            (lib "minipascal/tests-basic/fibonacci.rkt")
            (lib "minipascal/tests-basic/long-sum.rkt")
            (lib "minipascal/tests-basic/hello.rkt")
            (lib "minipascal/tests-basic/gcd.rkt")
            (lib "minipascal/tests-basic/boolean.rkt")
            (lib "minipascal/experiments/terminal.rkt")
            (lib "minipascal/tests-medium/write-natural.rkt")
            (lib "minipascal/tests-medium/hcf.rkt")
            (lib "minipascal/tests-basic/negative-index-range.rkt")
            (lib "minipascal/tests-medium/array-with-char-index.rkt")
            (lib "minipascal/mini-pascal-grammar.rkt")
            (lib "minipascal/tests-fpc/fpc-test.rkt")
            (lib "minipascal/semantics-simple.rkt")
            (lib "minipascal/tests-real/stackoverflow-primes.rkt")
            (lib "minipascal/tests-basic/for-statement.rkt")
            (lib "minipascal/tests-medium/function-with-no-arguments.rkt")
            (lib "minipascal/tests-medium/array-of-integer.rkt")
            (lib "minipascal/tests-basic/constant-definitions.rkt")
            (lib "minipascal/tests-medium/procedure-with-two-arguments.rkt")
            (lib "minipascal/runtime.rkt")
            (lib "minipascal/tests-basic/type-definitions1.rkt")))
          (name . "minipascal")
          (nix-sha256
           .
           "15vk03nqa7mngns0smzrdmcbiiay7vh6z19gn0ad82kwpm1zhf0b")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:jensaxel@soegaard.net . #t)
                   (compiler . #t)
                   (language . #t)
                   (pascal . #t)
                   (ring:1 . #t)))
          (source . "github://github.com/soegaard/minipascal/master")
          (tags . ("compiler" "language" "pascal"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "6c028051ba9c151c5b6e8fddd6c2442c1abb0601")
                          (source
                           .
                           "github://github.com/soegaard/minipascal/master")
                          (source_url
                           .
                           "http://github.com/soegaard/minipascal/tree/master")))))))
 ("misc1"
  .
  #hasheq((author . "mordae@anilinux.org")
          (authors . ("mordae@anilinux.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "misc1" "doc/misc1@misc1/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/misc1.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/misc1.txt")))
          (checksum . "92d66c9c2c5fefe4762acc221b69c5e716a6873d")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "unstable-lib"
            "racket-doc"
            "unstable-lib"
            "unstable-doc"
            "scribble-lib"))
          (dependency-names
           .
           ("base"
            "unstable-lib"
            "racket-doc"
            "unstable-lib"
            "unstable-doc"
            "scribble-lib"))
          (description . "Miscellaneous utilities collection.")
          (implies . ())
          (last-checked . 1557339703)
          (last-edit . 1401802372)
          (last-updated . 1502816181)
          (modules
           .
           ((lib "misc1/list.scrbl")
            (lib "misc1/async.scrbl")
            (lib "misc1/async.rkt")
            (lib "misc1/list.rkt")
            (lib "misc1/syntax.rkt")
            (lib "misc1/match.rkt")
            (lib "misc1/throw.rkt")
            (lib "misc1/dict.scrbl")
            (lib "misc1/locking.rkt")
            (lib "misc1/evt.scrbl")
            (lib "misc1/match.scrbl")
            (lib "misc1/syntax.scrbl")
            (lib "misc1/evt.rkt")
            (lib "misc1/throw.scrbl")
            (lib "misc1/dict.rkt")
            (lib "misc1/locking.scrbl")
            (lib "misc1/fast-channel.rkt")
            (lib "misc1/misc1.scrbl")
            (lib "misc1/fast-channel.scrbl")))
          (name . "misc1")
          (nix-sha256
           .
           "0zk7afqsxcxgq223a4hb854nqqkf1mzclb3b8idsgmjcm2vryr8l")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (:no-tag: . #t)
                   (author:mordae@anilinux.org . #t)
                   (ring:1 . #t)))
          (source . "github://github.com/mordae/racket-misc1/master")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "92d66c9c2c5fefe4762acc221b69c5e716a6873d")
                          (source
                           .
                           "github://github.com/mordae/racket-misc1/master")
                          (source_url
                           .
                           "http://github.com/mordae/racket-misc1/tree/master")))))))
 ("mischief"
  .
  #hasheq((author . "cce@racket-lang.org")
          (authors . ("cce@racket-lang.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "mischief" "doc/mischief@mischief/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/mischief.txt")
                 (test-failure-log . "server/built/test-fail/mischief.txt")
                 (test-success-log . #f)))
          (checksum . "c6f95a774b60950cabd7238e639f7e5f0d8737cd")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "compatibility-lib"
            "macro-debugger"
            "macro-debugger-text-lib"
            "pconvert-lib"
            "sandbox-lib"
            "scribble-lib"
            "srfi-lib"
            "srfi-lite-lib"
            "compatibility-doc"
            "data-doc"
            "racket-doc"
            "scribble-doc"
            "racket-index"
            "rackunit-gui"
            "rackunit-lib"))
          (dependency-names
           .
           ("base"
            "compatibility-lib"
            "macro-debugger"
            "macro-debugger-text-lib"
            "pconvert-lib"
            "sandbox-lib"
            "scribble-lib"
            "srfi-lib"
            "srfi-lite-lib"
            "compatibility-doc"
            "data-doc"
            "racket-doc"
            "scribble-doc"
            "racket-index"
            "rackunit-gui"
            "rackunit-lib"))
          (description . "Mischief: A Racketeer's Toolkit")
          (implies . ())
          (last-checked . 1557339703)
          (last-edit . 1365619321)
          (last-updated . 1537235893)
          (modules
           .
           ((lib "mischief/stylish.rkt")
            (lib "mischief/scope.rkt")
            (lib "mischief/symbol.rkt")
            (lib "mischief/scribblings/contract.scrbl")
            (lib "mischief/scribblings/modular.scrbl")
            (lib "mischief/values.rkt")
            (lib "mischief/define.rkt")
            (lib "mischief/string.rkt")
            (lib "mischief/scribblings/transform.scrbl")
            (lib "debug/syntax.rkt")
            (lib "mischief/stylish/print-style.rkt")
            (lib "mischief/sort.rkt")
            (lib "debug/racket/base.rkt")
            (lib "mischief/scribblings/metaprogramming.scrbl")
            (lib "mischief/module.rkt")
            (lib "mischief/stepper.rkt")
            (lib "mischief/error.rkt")
            (lib "mischief/stylish/expression.rkt")
            (lib "mischief/scribblings/metaprogramming-moderate.scrbl")
            (lib "mischief/keyword.rkt")
            (lib "debug/mischief.rkt")
            (lib "mischief/scribblings/metaprogramming-simple.scrbl")
            (lib "mischief/id-table.rkt")
            (lib "mischief/memoize.rkt")
            (lib "mischief/kernel-syntax.rkt")
            (lib "mischief/scribblings/printing.scrbl")
            (lib "mischief/scribblings/higher-order.scrbl")
            (lib "mischief/scribblings/id-table.scrbl")
            (lib "mischief/lang/config.rkt")
            (lib "debug/racket/base/lang/reader.rkt")
            (lib "mischief/scribblings/parse.scrbl")
            (lib "no-debug/racket/lang/reader.rkt")
            (lib "mischief/explode.rkt")
            (lib "mischief/match.rkt")
            (lib "mischief/scribblings/mischief.scrbl")
            (lib "mischief/fold.rkt")
            (lib "mischief/scribblings/examples.scrbl")
            (lib "mischief/function.rkt")
            (lib "mischief/contract.rkt")
            (lib "mischief/for.rkt")
            (lib "mischief/private/render-expression.rkt")
            (lib "mischief/preserve-expensive-metadata.rkt")
            (lib "mischief/scribblings/no-debug.scrbl")
            (lib "mischief/place.rkt")
            (lib "mischief/stylish/signatures.rkt")
            (lib "mischief/json.rkt")
            (lib "mischief/scribblings/fold.scrbl")
            (lib "mischief/scribblings/dye-pack.scrbl")
            (lib "mischief/scribblings/datatypes.scrbl")
            (lib "no-debug/main.rkt")
            (lib "mischief/transform.rkt")
            (lib "mischief/quotation.rkt")
            (lib "no-debug/racket/base.rkt")
            (lib "mischief/lang/runtime.rkt")
            (lib "no-debug/racket/base/lang/reader.rkt")
            (lib "mischief/scribblings/memoize.scrbl")
            (lib "debug/racket.rkt")
            (lib "mischief/examples.rkt")
            (lib "mischief/props/lang/reader.rkt")
            (lib "mischief/scribblings/typesetting.scrbl")
            (lib "mischief/scribblings/web.scrbl")
            (lib "mischief/scribblings/debug.scrbl")
            (lib "no-debug/syntax.rkt")
            (lib "mischief/scribblings/metaprogramming-complex.scrbl")
            (lib "mischief/scribblings/stylish.scrbl")
            (lib "mischief/scribblings/scope.scrbl")
            (lib "debug/main.rkt")
            (lib "mischief/web.rkt")
            (lib "mischief/scribblings/visitor.scrbl")
            (lib "mischief/scribblings/for.scrbl")
            (lib "mischief/parse.rkt")
            (lib "mischief/maybe.rkt")
            (lib "mischief/lang/reader.rkt")
            (lib "no-debug/low-level.rkt")
            (lib "debug/low-level.rkt")
            (lib "no-debug/mischief/lang/reader.rkt")
            (lib "mischief/stylish/expr-style.rkt")
            (lib "mischief/shorthand.rkt")
            (lib "mischief/scribblings/debugging.scrbl")
            (lib "mischief/discrim.rkt")
            (lib "mischief/require.rkt")
            (lib "mischief/list.rkt")
            (lib "no-debug/mischief.rkt")
            (lib "debug/mischief/lang/reader.rkt")
            (lib "mischief/visitor.rkt")
            (lib "mischief/private/reify-value.rkt")
            (lib "mischief/dye-pack.rkt")
            (lib "no-debug/racket.rkt")
            (lib "mischief/stylish/stylish.rkt")
            (lib "mischief/scribblings/kernel-syntax.scrbl")
            (lib "mischief/stylish/format.rkt")
            (lib "debug/racket/lang/reader.rkt")
            (lib "debug/provide.rkt")
            (lib "mischief/dict.rkt")
            (lib "mischief/struct.rkt")
            (lib "mischief/scribblings/bindings.scrbl")
            (lib "mischief/tests/stylish.rkt")
            (lib "mischief/stream.rkt")
            (lib "mischief/stylish/print.rkt")
            (lib "mischief/scribblings/function.scrbl")
            (lib "mischief/main.rkt")
            (lib "mischief/phrase.rkt")
            (lib "mischief/boolean.rkt")))
          (name . "mischief")
          (nix-sha256
           .
           "15kvjdk2v8723pz3ph2iyl0wyx4kr259idi62rmbix6037qczi1g")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:cce@racket-lang.org . #t)
                   (data . #t)
                   (debug . #t)
                   (dev . #t)
                   (documentation . #t)
                   (language . #t)
                   (ring:1 . #t)
                   (syntax . #t)))
          (source . "github://github.com/carl-eastlund/mischief/stable")
          (tags . ("data" "debug" "dev" "documentation" "language" "syntax"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "c6f95a774b60950cabd7238e639f7e5f0d8737cd")
                          (source
                           .
                           "github://github.com/carl-eastlund/mischief/stable")
                          (source_url
                           .
                           "http://github.com/carl-eastlund/mischief/tree/stable")))))))
 ("mischief-dev"
  .
  #hasheq((author . "cce@racket-lang.org")
          (authors . ("cce@racket-lang.org"))
          (build
           .
           #hash((conflicts-log . "conflicts.txt")
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("extract"
                    "mischief"
                    "doc/mischief@mischief-dev/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/mischief-dev.txt")
                 (test-failure-log
                  .
                  "server/built/test-fail/mischief-dev.txt")
                 (test-success-log . #f)))
          (checksum . "ce58c3170240f12297e2f98475f53c9514225825")
          (checksum-error . #f)
          (conflicts . ("mischief"))
          (dependencies
           .
           ("base"
            "compatibility-lib"
            "macro-debugger"
            "macro-debugger-text-lib"
            "pconvert-lib"
            "sandbox-lib"
            "scribble-lib"
            "srfi-lib"
            "srfi-lite-lib"
            "compatibility-doc"
            "data-doc"
            "racket-doc"
            "scribble-doc"
            "racket-index"
            "rackunit-gui"
            "rackunit-lib"))
          (dependency-names
           .
           ("base"
            "compatibility-lib"
            "macro-debugger"
            "macro-debugger-text-lib"
            "pconvert-lib"
            "sandbox-lib"
            "scribble-lib"
            "srfi-lib"
            "srfi-lite-lib"
            "compatibility-doc"
            "data-doc"
            "racket-doc"
            "scribble-doc"
            "racket-index"
            "rackunit-gui"
            "rackunit-lib"))
          (description
           .
           "Mischief: A Racketeer's Toolkit [development branch]")
          (implies . ())
          (last-checked . 1557339703)
          (last-edit . 1365619456)
          (last-updated . 1537034394)
          (modules
           .
           ((lib "mischief/stylish.rkt")
            (lib "mischief/scope.rkt")
            (lib "mischief/symbol.rkt")
            (lib "mischief/scribblings/contract.scrbl")
            (lib "mischief/scribblings/modular.scrbl")
            (lib "mischief/values.rkt")
            (lib "mischief/define.rkt")
            (lib "mischief/string.rkt")
            (lib "mischief/scribblings/transform.scrbl")
            (lib "debug/syntax.rkt")
            (lib "mischief/stylish/print-style.rkt")
            (lib "mischief/sort.rkt")
            (lib "debug/racket/base.rkt")
            (lib "mischief/scribblings/metaprogramming.scrbl")
            (lib "mischief/module.rkt")
            (lib "mischief/stepper.rkt")
            (lib "mischief/error.rkt")
            (lib "mischief/stylish/expression.rkt")
            (lib "mischief/scribblings/metaprogramming-moderate.scrbl")
            (lib "mischief/keyword.rkt")
            (lib "debug/mischief.rkt")
            (lib "mischief/scribblings/metaprogramming-simple.scrbl")
            (lib "mischief/id-table.rkt")
            (lib "mischief/memoize.rkt")
            (lib "mischief/kernel-syntax.rkt")
            (lib "mischief/scribblings/printing.scrbl")
            (lib "mischief/scribblings/higher-order.scrbl")
            (lib "mischief/scribblings/id-table.scrbl")
            (lib "mischief/lang/config.rkt")
            (lib "debug/racket/base/lang/reader.rkt")
            (lib "mischief/scribblings/parse.scrbl")
            (lib "no-debug/racket/lang/reader.rkt")
            (lib "mischief/explode.rkt")
            (lib "mischief/match.rkt")
            (lib "mischief/scribblings/mischief.scrbl")
            (lib "mischief/fold.rkt")
            (lib "mischief/scribblings/examples.scrbl")
            (lib "mischief/function.rkt")
            (lib "mischief/contract.rkt")
            (lib "mischief/for.rkt")
            (lib "mischief/private/render-expression.rkt")
            (lib "mischief/preserve-expensive-metadata.rkt")
            (lib "mischief/scribblings/no-debug.scrbl")
            (lib "mischief/place.rkt")
            (lib "mischief/stylish/signatures.rkt")
            (lib "mischief/json.rkt")
            (lib "mischief/scribblings/fold.scrbl")
            (lib "mischief/scribblings/dye-pack.scrbl")
            (lib "mischief/scribblings/datatypes.scrbl")
            (lib "no-debug/main.rkt")
            (lib "mischief/transform.rkt")
            (lib "mischief/quotation.rkt")
            (lib "no-debug/racket/base.rkt")
            (lib "mischief/lang/runtime.rkt")
            (lib "no-debug/racket/base/lang/reader.rkt")
            (lib "mischief/scribblings/memoize.scrbl")
            (lib "debug/racket.rkt")
            (lib "mischief/examples.rkt")
            (lib "mischief/props/lang/reader.rkt")
            (lib "mischief/scribblings/typesetting.scrbl")
            (lib "mischief/scribblings/web.scrbl")
            (lib "mischief/scribblings/debug.scrbl")
            (lib "no-debug/syntax.rkt")
            (lib "mischief/scribblings/metaprogramming-complex.scrbl")
            (lib "mischief/scribblings/stylish.scrbl")
            (lib "mischief/scribblings/scope.scrbl")
            (lib "debug/main.rkt")
            (lib "mischief/web.rkt")
            (lib "mischief/scribblings/visitor.scrbl")
            (lib "mischief/scribblings/for.scrbl")
            (lib "mischief/parse.rkt")
            (lib "mischief/maybe.rkt")
            (lib "mischief/lang/reader.rkt")
            (lib "no-debug/low-level.rkt")
            (lib "debug/low-level.rkt")
            (lib "no-debug/mischief/lang/reader.rkt")
            (lib "mischief/stylish/expr-style.rkt")
            (lib "mischief/shorthand.rkt")
            (lib "mischief/scribblings/debugging.scrbl")
            (lib "mischief/discrim.rkt")
            (lib "mischief/require.rkt")
            (lib "mischief/list.rkt")
            (lib "no-debug/mischief.rkt")
            (lib "debug/mischief/lang/reader.rkt")
            (lib "mischief/visitor.rkt")
            (lib "mischief/private/reify-value.rkt")
            (lib "mischief/dye-pack.rkt")
            (lib "no-debug/racket.rkt")
            (lib "mischief/stylish/stylish.rkt")
            (lib "mischief/scribblings/kernel-syntax.scrbl")
            (lib "mischief/stylish/format.rkt")
            (lib "debug/racket/lang/reader.rkt")
            (lib "debug/provide.rkt")
            (lib "mischief/dict.rkt")
            (lib "mischief/struct.rkt")
            (lib "mischief/scribblings/bindings.scrbl")
            (lib "mischief/tests/stylish.rkt")
            (lib "mischief/stream.rkt")
            (lib "mischief/stylish/print.rkt")
            (lib "mischief/scribblings/function.scrbl")
            (lib "mischief/main.rkt")
            (lib "mischief/phrase.rkt")
            (lib "mischief/boolean.rkt")))
          (name . "mischief-dev")
          (nix-sha256
           .
           "15kvjdk2v8723pz3ph2iyl0wyx4kr259idi62rmbix6037qczi1g")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-conflicts: . #t)
                   (:build-success: . #t)
                   (:conflicts: . #t)
                   (:docs-error: . #t)
                   (:docs: . #t)
                   (author:cce@racket-lang.org . #t)
                   (data . #t)
                   (debug . #t)
                   (dev . #t)
                   (documentation . #t)
                   (language . #t)
                   (ring:2 . #t)
                   (syntax . #t)))
          (source . "github://github.com/carl-eastlund/mischief/master")
          (tags . ("data" "debug" "dev" "documentation" "language" "syntax"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "ce58c3170240f12297e2f98475f53c9514225825")
                          (source
                           .
                           "github://github.com/carl-eastlund/mischief/master")
                          (source_url
                           .
                           "http://github.com/carl-eastlund/mischief/tree/master")))))))
 ("mm"
  .
  #hasheq((author . "jay.mccarthy@gmail.com")
          (authors . ("jay.mccarthy@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/mm.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/mm.txt")))
          (checksum . "9b733818036f340181cb5f5d5083e481f4709cd9")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "gui-lib" "data-lib" "rackunit-chk"))
          (dependency-names . ("base" "gui-lib" "data-lib" "rackunit-chk"))
          (description . "an environment for exploring memory management")
          (implies . ())
          (last-checked . 1557339703)
          (last-edit . 1385068728)
          (last-updated . 1502816182)
          (modules
           .
           ((lib "mm/main.rkt")
            (lib "mm/tests/collectors/stop-and-copy.rkt")
            (lib "mm/heap-gui.rkt")
            (lib "mm/id-table.rkt")
            (lib "mm/ast.rkt")
            (lib "mm/tests/all.rkt")
            (lib "mm/tests/suite.rkt")
            (lib "mm/heap.rkt")
            (lib "mm/collector.rkt")
            (lib "mm/compiler.rkt")
            (lib "mm/tests/collectors/infinite.rkt")
            (lib "mm/tests/collectors/mark-and-sweep.rkt")
            (lib "mm/runtime.rkt")
            (lib "mm/tests/collectors/generic-ms.rkt")))
          (name . "mm")
          (nix-sha256
           .
           "0qgpkzblp7kiw9b94li4hibz6zn91lin4fc9pylk89n9wsg6ainj")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:jay.mccarthy@gmail.com . #t)
                   (ring:1 . #t)
                   (textbook . #t)))
          (source . "git://github.com/jeapostrophe/mm")
          (tags . ("textbook"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "9b733818036f340181cb5f5d5083e481f4709cd9")
                          (source . "git://github.com/jeapostrophe/mm")
                          (source_url
                           .
                           "http://github.com/jeapostrophe/mm/tree/master")))))))
 ("mmap"
  .
  #hasheq((author . "samth@ccs.neu.edu")
          (authors . ("samth@ccs.neu.edu"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/mmap.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/mmap.txt")))
          (checksum . "4d75782ebac990ae85a2b456f9d138cb666deed5")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "rackunit-lib"))
          (dependency-names . ("base" "rackunit-lib"))
          (description . "Wrapper for the system mmap() function")
          (implies . ())
          (last-checked . 1557339703)
          (last-edit . 1503521896)
          (last-updated . 1502816182)
          (modules . ((lib "mmap/main.rkt")))
          (name . "mmap")
          (nix-sha256
           .
           "1m5blkzxlcdli6bxalvrscjkbk11fsxipqabjz2i7r32pvdahafq")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:samth@ccs.neu.edu . #t)
                   (mmap . #t)
                   (process . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/samth/mmap")
          (tags . ("mmap" "process"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "4d75782ebac990ae85a2b456f9d138cb666deed5")
                          (source . "git://github.com/samth/mmap")
                          (source_url
                           .
                           "http://github.com/samth/mmap/tree/master")))))))
 ("mock"
  .
  #hasheq((author . "jackhfirth@gmail.com")
          (authors . ("jackhfirth@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "mock" "doc/mock@mock/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/mock.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/mock.txt")))
          (checksum . "1a27bb7a1444effc034bf8b2df4ba1845f51478f")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("arguments"
            ("base" #:version "6.4")
            "fancy-app"
            "reprovide-lang"
            "racket-doc"
            "scribble-lib"
            "sweet-exp"))
          (dependency-names
           .
           ("arguments"
            "base"
            "fancy-app"
            "reprovide-lang"
            "racket-doc"
            "scribble-lib"
            "sweet-exp"))
          (description . "A library for creating test mocks")
          (implies . ("arguments"))
          (last-checked . 1557339703)
          (last-edit . 1500077019)
          (last-updated . 1508918526)
          (modules
           .
           ((lib "mock/private/function.scrbl")
            (lib "mock/private/history.scrbl")
            (lib "mock/private/base.scrbl")
            (lib "mock/private/guide.scrbl")
            (lib "mock/private/syntax.rkt")
            (lib "mock/private/base.rkt")
            (lib "mock/private/syntax-util.rkt")
            (lib "mock/private/function.rkt")
            (lib "mock/private/not-implemented.rkt")
            (lib "mock/private/util-doc.rkt")
            (lib "mock/private/syntax-class.rkt")
            (lib "mock/private/stub-class.rkt")
            (lib "mock/private/syntax-param.rkt")
            (lib "mock/private/reference.scrbl")
            (lib "mock/private/syntax-test.rkt")
            (lib "mock/main.rkt")
            (lib "mock/private/opaque.rkt")
            (lib "mock/private/stub.scrbl")
            (lib "mock/main.scrbl")
            (lib "mock/private/stub.rkt")
            (lib "mock/private/util.rkt")
            (lib "mock/private/history.rkt")
            (lib "mock/private/syntax.scrbl")
            (lib "mock/private/opaque.scrbl")))
          (name . "mock")
          (nix-sha256
           .
           "1d7y7f08ys0lg3m89zy66whkzpd7vdn4xhkp5nv99vg0pdl2zilm")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:jackhfirth@gmail.com . #t)
                   (mock . #t)
                   (ring:1 . #t)
                   (testing . #t)))
          (source . "git://github.com/jackfirth/racket-mock?path=mock")
          (tags . ("mock" "testing"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "1a27bb7a1444effc034bf8b2df4ba1845f51478f")
                          (source
                           .
                           "git://github.com/jackfirth/racket-mock?path=mock")
                          (source_url
                           .
                           "http://github.com/jackfirth/racket-mock/tree/master?path=mock")))))))
 ("mock-rackunit"
  .
  #hasheq((author . "jackhfirth@gmail.com")
          (authors . ("jackhfirth@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "mock-rackunit"
                    "doc/mock-rackunit@mock-rackunit/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/mock-rackunit.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/mock-rackunit.txt")))
          (checksum . "1a27bb7a1444effc034bf8b2df4ba1845f51478f")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           (("base" #:version "6.4")
            ("mock" #:version "2.0")
            "rackunit-lib"
            "racket-doc"
            "rackunit-doc"
            "scribble-lib"
            "sweet-exp"))
          (dependency-names
           .
           ("base"
            "mock"
            "rackunit-lib"
            "racket-doc"
            "rackunit-doc"
            "scribble-lib"
            "sweet-exp"))
          (description
           .
           "RackUnit checks for testing with mocks from the mock package")
          (implies . ())
          (last-checked . 1557339703)
          (last-edit . 1469662289)
          (last-updated . 1508918527)
          (modules . ((lib "mock/rackunit.rkt") (lib "mock/rackunit.scrbl")))
          (name . "mock-rackunit")
          (nix-sha256
           .
           "1d7y7f08ys0lg3m89zy66whkzpd7vdn4xhkp5nv99vg0pdl2zilm")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:jackhfirth@gmail.com . #t)
                   (mock . #t)
                   (rackunit . #t)
                   (ring:1 . #t)
                   (testing . #t)))
          (source
           .
           "git://github.com/jackfirth/racket-mock?path=mock-rackunit")
          (tags . ("mock" "rackunit" "testing"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "1a27bb7a1444effc034bf8b2df4ba1845f51478f")
                          (source
                           .
                           "git://github.com/jackfirth/racket-mock?path=mock-rackunit")
                          (source_url
                           .
                           "http://github.com/jackfirth/racket-mock/tree/master?path=mock-rackunit")))))))
 ("mockfighter"
  .
  #hasheq((author . "euler90h@gmail.com")
          (authors . ("euler90h@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . "server/built/deps/mockfighter.txt")
                 (docs
                  .
                  (("main"
                    "mockfighter"
                    "doc/mockfighter@mockfighter/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/mockfighter.txt")
                 (test-failure-log . "server/built/test-fail/mockfighter.txt")
                 (test-success-log . #f)))
          (checksum . "63906eff874e90644725dbff5365889d959e2294")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "rackunit-lib"
            "stockfighter-racket"
            "scribble-lib"
            "racket-doc"))
          (dependency-names
           .
           ("base"
            "rackunit-lib"
            "stockfighter-racket"
            "scribble-lib"
            "racket-doc"))
          (description . "Stockfighter-like API for a limit order exchange")
          (implies . ())
          (last-checked . 1557339704)
          (last-edit . 1450936598)
          (last-updated . 1502816182)
          (modules
           .
           ((lib "mockfighter/noise-trader.rkt")
            (lib "mockfighter/venue.rkt")
            (lib "mockfighter/game-master.rkt")
            (lib "mockfighter/server.rkt")
            (lib "mockfighter/main.rkt")
            (lib "mockfighter/scribblings/mockfighter.scrbl")
            (lib "mockfighter/websocket-test.rkt")
            (lib "mockfighter/matching-engine.rkt")
            (lib "mockfighter/mm.rkt")
            (lib "mockfighter/server-test.rkt")
            (lib "mockfighter/orderbook.rkt")
            (lib "mockfighter/utils.rkt")
            (lib "mockfighter/retail-trader.rkt")))
          (name . "mockfighter")
          (nix-sha256
           .
           "0682hmmd04r3a90d2510mhf092sa6nzvzq9qgclgp4hdp7324pk7")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-dep-fail: . #t)
                   (:build-success: . #t)
                   (:docs: . #t)
                   (author:euler90h@gmail.com . #t)
                   (finance . #t)
                   (ring:1 . #t)
                   (stockfighter . #t)))
          (source . "git://github.com/eu90h/mockfighter")
          (tags . ("finance" "stockfighter"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "63906eff874e90644725dbff5365889d959e2294")
                          (source . "git://github.com/eu90h/mockfighter")
                          (source_url
                           .
                           "http://github.com/eu90h/mockfighter/tree/master")))))))
 ("mode-lambda"
  .
  #hasheq((author . "jay.mccarthy@gmail.com")
          (authors . ("jay.mccarthy@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "mode-lambda"
                    "doc/mode-lambda@mode-lambda/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/mode-lambda.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/mode-lambda.txt")))
          (checksum . "cae93f719f51fb4e621f5c51691902fd40bf8a60")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("gui-lib"
            "scheme-lib"
            "web-server-lib"
            "lux"
            "base"
            "srfi-lite-lib"
            "draw-lib"
            "opengl"
            "htdp-lib"
            "pict-lib"
            "draw-lib"
            "draw-doc"
            "racket-doc"
            "scribble-lib"
            "rackunit-lib"))
          (dependency-names
           .
           ("gui-lib"
            "scheme-lib"
            "web-server-lib"
            "lux"
            "base"
            "srfi-lite-lib"
            "draw-lib"
            "opengl"
            "htdp-lib"
            "pict-lib"
            "draw-lib"
            "draw-doc"
            "racket-doc"
            "scribble-lib"
            "rackunit-lib"))
          (description . "2d sprite-based graphics engine")
          (implies . ())
          (last-checked . 1557339704)
          (last-edit . 1431992260)
          (last-updated . 1530708286)
          (modules
           .
           ((lib "mode-lambda/korf-bin.rkt")
            (lib "mode-lambda/text/static.rkt")
            (lib "mode-lambda/util.rkt")
            (lib "mode-lambda/backend/software.rkt")
            (lib "mode-lambda/examples/transparency/open-gl-issue.rkt")
            (lib "mode-lambda/backend/software/2d-hash.rkt")
            (lib "mode-lambda/backend/gl.rkt")
            (lib "mode-lambda/examples/jens.rkt")
            (lib "mode-lambda/sprite-index.rkt")
            (lib "mode-lambda/scribblings/mode-lambda.scrbl")
            (lib "mode-lambda/backend/lib.rkt")
            (lib "mode-lambda/backend/gl/util.rkt")
            (lib "mode-lambda/examples/one.rkt")
            (lib "mode-lambda/color.rkt")
            (lib "mode-lambda/main.rkt")
            (lib "mode-lambda/static.rkt")
            (lib "mode-lambda/scribblings/backend-gl.scrbl")
            (lib "mode-lambda/shot.rkt")
            (lib "mode-lambda/scribblings/backend-software.scrbl")
            (lib "mode-lambda/text/runtime.rkt")
            (lib "mode-lambda/text.rkt")
            (lib "mode-lambda/core.rkt")))
          (name . "mode-lambda")
          (nix-sha256
           .
           "0f4xs558a5hq9gnss9fhldjjar8wb5zi3n362xvhl8y7kz86j6bc")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (OpenGL . #t)
                   (author:jay.mccarthy@gmail.com . #t)
                   (graphics . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/jeapostrophe/mode-lambda")
          (tags . ("graphics" "OpenGL"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "cae93f719f51fb4e621f5c51691902fd40bf8a60")
                          (source
                           .
                           "git://github.com/jeapostrophe/mode-lambda")
                          (source_url
                           .
                           "http://github.com/jeapostrophe/mode-lambda/tree/master")))))))
 ("molis-hai"
  .
  #hasheq((author . "clements@racket-lang.org")
          (authors . ("clements@racket-lang.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "molis-hai" "doc/molis-hai@molis-hai/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/molis-hai.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/molis-hai.txt")))
          (checksum . "6a335ec73c144f9d8ac538752ca8e6fd0b3b3cce")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "rackunit-lib"
            "scribble-lib"
            "typed-racket-lib"
            "typed-racket-more"
            "web-server-lib"
            "pfds"
            "rackunit-lib"
            "racket-doc"))
          (dependency-names
           .
           ("base"
            "rackunit-lib"
            "scribble-lib"
            "typed-racket-lib"
            "typed-racket-more"
            "web-server-lib"
            "pfds"
            "rackunit-lib"
            "racket-doc"))
          (description
           .
           "This package includes the code associated with my Dickens-based (or any-corpus-based) password generator, Molis Hai. See also http://www.brinckerhoff.org/molis-hai/pwgen.html")
          (implies . ())
          (last-checked . 1557339704)
          (last-edit . 1429738549)
          (last-updated . 1549845730)
          (modules
           .
           ((lib "molis-hai/json-read-write.rkt")
            (lib "molis-hai/paper/pr-slides.rkt")
            (lib "molis-hai/word-frequency.rkt")
            (lib "molis-hai/pw-chars.rkt")
            (lib "molis-hai/soups-paper/pr-slides.rkt")
            (lib "molis-hai/huffman-encode-decode.rkt")
            (lib "molis-hai/huffman.rkt")
            (lib "molis-hai/experimental/unicode-scrub-lib.rkt")
            (lib
             "molis-hai/experimental/extract-crime-and-punishment-text.rkt")
            (lib "molis-hai/model-comparison.rkt")
            (lib "molis-hai/user-study-2016/log-analysis.rkt")
            (lib "molis-hai/js-model/generate-pages.rkt")
            (lib "molis-hai/experimental/enumeration.rkt")
            (lib "molis-hai/example-model.rkt")
            (lib "molis-hai/user-study-2016/delayed-recall.rkt")
            (lib "molis-hai/user-study-2016/levenshtein-words-paths.rkt")
            (lib "molis-hai/user-study-2016/string-editing.rkt")
            (lib "molis-hai/use-model.rkt")
            (lib "molis-hai/word-model.rkt")
            (lib "molis-hai/user-study-2016/example-passwords.rkt")
            (lib "molis-hai/letter-frequency.rkt")
            (lib "molis-hai/pronounce3.rkt")
            (lib "molis-hai/user-study-2016/fingerprints.rkt")
            (lib "molis-hai/molis-hai.scrbl")
            (lib "molis-hai/cmd-line.rkt")
            (lib "molis-hai/inverse-mapping.rkt")
            (lib "molis-hai/user-study-2016/anonymize-log.rkt")
            (lib "molis-hai/shared-types.rkt")
            (lib "molis-hai/char-model.rkt")
            (lib "molis-hai/paper/bib.rkt")
            (lib "molis-hai/user-study-2016/levenshtein-paths.rkt")
            (lib "molis-hai/paper/paper.scrbl")
            (lib "molis-hai/soups-paper/bib.rkt")
            (lib "molis-hai/user-study-2016/table.rkt")
            (lib "molis-hai/random-bits.rkt")
            (lib "molis-hai/user-study-2016/research-protocol.scrbl")
            (lib "molis-hai/user-study-2016/pre-registration.scrbl")
            (lib "molis-hai/experimental/unicode-scrub.rkt")
            (lib "molis-hai/build-model.rkt")
            (lib "molis-hai/random-password.rkt")
            (lib "molis-hai/user-study-2016/best-fit.rkt")
            (lib "molis-hai/huffman-convert.rkt")
            (lib "molis-hai/soups-paper/paper.scrbl")
            (lib "molis-hai/experimental/sent-email-text-extraction.rkt")))
          (name . "molis-hai")
          (nix-sha256
           .
           "04v7s5y5idiwagb6q7gc13zmjrp4zxyrkmr7qdhx335zzqzzk3lw")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (Dickens . #t)
                   (author:clements@racket-lang.org . #t)
                   (ring:1 . #t)
                   (security . #t)))
          (source . "git://github.com/jbclements/molis-hai/")
          (tags . ("Dickens" "security"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "6a335ec73c144f9d8ac538752ca8e6fd0b3b3cce")
                          (source . "git://github.com/jbclements/molis-hai/")
                          (source_url
                           .
                           "git://github.com/jbclements/molis-hai/")))))))
 ("monad"
  .
  #hasheq((author . "tonygarnockjones@gmail.com")
          (authors . ("tonygarnockjones@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/monad.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/monad.txt")))
          (checksum . "e61a1b940cac3e85a0408d4463c9324bb3615413")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base"))
          (dependency-names . ("base"))
          (description . "A generic/polymorphic monad library for Racket.")
          (implies . ())
          (last-checked . 1557339704)
          (last-edit . 1443058483)
          (last-updated . 1502816184)
          (modules
           .
           ((lib "monad/state.rkt")
            (lib "monad/examples/example.rkt")
            (lib "monad/io.rkt")
            (lib "monad/main.rkt")))
          (name . "monad")
          (nix-sha256
           .
           "1viw97g2l0faplyky4rql6hsahkhx66gy8h4hz7j05xb7kmki47s")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:tonygarnockjones@gmail.com . #t)
                   (io . #t)
                   (monad . #t)
                   (ring:1 . #t)))
          (source . "github://github.com/tonyg/racket-monad/master")
          (tags . ("io" "monad"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "e61a1b940cac3e85a0408d4463c9324bb3615413")
                          (source
                           .
                           "github://github.com/tonyg/racket-monad/master")
                          (source_url
                           .
                           "http://github.com/tonyg/racket-monad/tree/master")))))))
 ("mongodb"
  .
  #hasheq((author . "jay.mccarthy@gmail.com")
          (authors . ("jay.mccarthy@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "mongodb" "doc/mongodb@mongodb/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/mongodb.txt")
                 (test-failure-log . "server/built/test-fail/mongodb.txt")
                 (test-success-log . #f)))
          (checksum . "1a0d1ee82be28888d7cb9ca679b7598c5798f586")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           (("base" #:version "6.2.900.15")
            "web-server-lib"
            "srfi-lite-lib"
            "eli-tester"
            "racket-doc"
            "scribble-lib"
            "srfi-doc"
            "web-server-doc"))
          (dependency-names
           .
           ("base"
            "web-server-lib"
            "srfi-lite-lib"
            "eli-tester"
            "racket-doc"
            "scribble-lib"
            "srfi-doc"
            "web-server-doc"))
          (description . "A native Racket interface to MongoDB & BSON")
          (implies . ())
          (last-checked . 1557339704)
          (last-edit . 1353196115)
          (last-updated . 1521391496)
          (modules
           .
           ((lib "tests/db/mongodb/basic.rkt")
            (lib "net/bson/binio.rkt")
            (lib "tests/db/mongodb/wire.rkt")
            (lib "tests/net/bson.rkt")
            (lib "net/bson/write.rkt")
            (lib "db/mongodb/wire/driver.rkt")
            (lib "db/mongodb/orm/struct.rkt")
            (lib "net/bson.rkt")
            (lib "db/mongodb/orm/dict.rkt")
            (lib "net/bson/shared.rkt")
            (lib "db/mongodb.rkt")
            (lib "tests/db/mongodb/orm.rkt")
            (lib "net/bson/mapping.rkt")
            (lib "db/mongodb/basic/main.rkt")
            (lib "net/bson/read.rkt")
            (lib "db/mongodb/basic/driver.rkt")
            (lib "tests/db/mongodb/quick-start.rkt")
            (lib "db/mongodb/orm/main.rkt")
            (lib "net/bson/driver.rkt")
            (lib "db/mongodb/wire/format.rkt")
            (lib "db/mongodb/seq.rkt")
            (lib "db/mongodb/mongodb.scrbl")
            (lib "db/mongodb/wire/main.rkt")
            (lib "web-server/dispatch/mongodb.rkt")
            (lib "tests/db/mongodb/util.rkt")))
          (name . "mongodb")
          (nix-sha256
           .
           "1vv3aivr4x8ws7r8nnbxxdpipzg5ms397dwygyawvkbgmpazd1yy")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:jay.mccarthy@gmail.com . #t)
                   (db . #t)
                   (net . #t)
                   (ring:1 . #t)))
          (source . "github://github.com/jeapostrophe/mongodb/master")
          (tags . ("db" "net"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "1a0d1ee82be28888d7cb9ca679b7598c5798f586")
                          (source
                           .
                           "github://github.com/jeapostrophe/mongodb/master")
                          (source_url
                           .
                           "http://github.com/jeapostrophe/mongodb/tree/master")))
                 ("6.2.1"
                  .
                  #hasheq((checksum
                           .
                           "76b8b080be58e2f641b8bda12c6d08ebcff803a8")
                          (source
                           .
                           "git://github.com/jeapostrophe/mongodb#76b8b080be58e2f641b8bda12c6d08ebcff803a8")
                          (source_url
                           .
                           "http://github.com/jeapostrophe/mongodb/tree/master#76b8b080be58e2f641b8bda12c6d08ebcff803a8")))))))
 ("monitors"
  .
  #hasheq((author . "samc@ccs.neu.edu")
          (authors . ("samc@ccs.neu.edu"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "monitors" "doc/monitors@monitors/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/monitors.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/monitors.txt")))
          (checksum . "928a1b27b15ad46eb0f715b3bccfe06b437edf30")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base" "data-lib" "rackunit-lib" "scribble-lib" "racket-doc"))
          (dependency-names
           .
           ("base" "data-lib" "rackunit-lib" "scribble-lib" "racket-doc"))
          (description . "Java style monitors for Racket objects")
          (implies . ())
          (last-checked . 1557339704)
          (last-edit . 1502996613)
          (last-updated . 1503002347)
          (modules
           .
           ((lib "monitors/scribblings/monitors.scrbl")
            (lib "monitors/main.rkt")
            (lib "monitors/monitor.rkt")))
          (name . "monitors")
          (nix-sha256
           .
           "0043biv8lkwy22p3421y5ch10mp4mrs5mrnmg6mjxs5glnf13alf")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:samc@ccs.neu.edu . #t)
                   (concurrency . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/howell/monitors")
          (tags . ("concurrency"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "928a1b27b15ad46eb0f715b3bccfe06b437edf30")
                          (source . "git://github.com/howell/monitors")
                          (source_url
                           .
                           "http://github.com/howell/monitors/tree/master")))))))
 ("mordae"
  .
  #hasheq((author . "mordae@anilinux.org")
          (authors . ("mordae@anilinux.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/mordae.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/mordae.txt")))
          (checksum . "01d86a7453241f438b01a37f991a28feeb43df8e")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "scribble-lib"
            "typed-racket-lib"
            "racket-doc"
            "typed-racket-lib"))
          (dependency-names
           .
           ("base"
            "scribble-lib"
            "typed-racket-lib"
            "racket-doc"
            "typed-racket-lib"))
          (description . "Personal utilities, do not use directly!")
          (implies . ())
          (last-checked . 1557339704)
          (last-edit . 1438605357)
          (last-updated . 1502816185)
          (modules
           .
           ((lib "mordae/evt.rkt")
            (lib "mordae/async.rkt")
            (lib "mordae/match.rkt")
            (lib "mordae/syntax.rkt")))
          (name . "mordae")
          (nix-sha256
           .
           "1kvqgk906mzbmijbr9cxwmski7dgw2bz3dnd65vhci1kg0cvppcy")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:no-tag: . #t)
                   (author:mordae@anilinux.org . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/mordae/racket-mordae")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "01d86a7453241f438b01a37f991a28feeb43df8e")
                          (source . "git://github.com/mordae/racket-mordae")
                          (source_url
                           .
                           "http://github.com/mordae/racket-mordae/tree/master")))))))
 ("mosquitto-ffi"
  .
  #hasheq((author . "bartbes+racket@gmail.com")
          (authors . ("bartbes+racket@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/mosquitto-ffi.txt")
                 (test-failure-log
                  .
                  "server/built/test-fail/mosquitto-ffi.txt")
                 (test-success-log . #f)))
          (checksum . "03b969b3f8806f7cfeb31b281981628fe8e2ca8b")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base"))
          (dependency-names . ("base"))
          (description . "An FFI binding of libmosquitto for racket")
          (implies . ())
          (last-checked . 1557339704)
          (last-edit . 1425477234)
          (last-updated . 1502816185)
          (modules . ((lib "mosquitto/api.rkt") (lib "mosquitto/main.rkt")))
          (name . "mosquitto-ffi")
          (nix-sha256
           .
           "1cxa8vw9wm3dq5f3zs9fwl9qqsm433xxw75s5pnjg79q4ypbqchj")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:bartbes+racket@gmail.com . #t)
                   (ffi . #t)
                   (mosquitto . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/bartbes/mosquitto-racket")
          (tags . ("ffi" "mosquitto"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "03b969b3f8806f7cfeb31b281981628fe8e2ca8b")
                          (source
                           .
                           "git://github.com/bartbes/mosquitto-racket")
                          (source_url
                           .
                           "http://github.com/bartbes/mosquitto-racket/tree/master")))))))
 ("mred-designer"
  .
  #hasheq((author . "laurent.orseau@gmail.com")
          (authors . ("laurent.orseau@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/mred-designer.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/mred-designer.txt")))
          (checksum . "bd5ced9658cdb7f1f1ca45526b3708075fc3cab5")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base" "gui-lib" "net-lib" "planet-lib" "rackunit-lib"))
          (dependency-names
           .
           ("base" "gui-lib" "net-lib" "planet-lib" "rackunit-lib"))
          (description . "A WYSIWYG GUI generator for Racket")
          (implies . ())
          (last-checked . 1557339704)
          (last-edit . 1506853991)
          (last-updated . 1542570646)
          (modules
           .
           ((lib "mred-designer/widgets/text-field/widget.rkt")
            (lib "mred-designer/template-load.rkt")
            (lib "mred-designer/widgets.rkt")
            (lib "mred-designer/widgets/menu-bar/widget.rkt")
            (lib "mred-designer/widgets/tab-panel/widget.rkt")
            (lib "mred-designer/main.rkt")
            (lib "mred-designer/edit-list.rkt")
            (lib "mred-designer/help.rkt")
            (lib "mred-designer/widgets/panel/widget.rkt")
            (lib "mred-designer/preview-widgets.rkt")
            (lib "mred-designer/property-widgets.rkt")
            (lib "mred-designer/toolbox-frame.rkt")
            (lib "mred-designer/widgets/menu-item/widget.rkt")
            (lib "mred-designer/code-write.rkt")
            (lib "mred-designer/property-frame.rkt")
            (lib "mred-designer/widgets/editor-canvas/widget.rkt")
            (lib "mred-designer/widgets/project/widget.rkt")
            (lib "mred-designer/tests/mred-designer.rkt")
            (lib "mred-designer/widgets/frame/widget.rkt")
            (lib "mred-designer/widgets/button/widget.rkt")
            (lib "mred-designer/mred-id.rkt")
            (lib "mred-designer/widgets/group-box-panel/widget.rkt")
            (lib "mred-designer/mred-plugin.rkt")
            (lib "mred-designer/hierarchy-frame.rkt")
            (lib "mred-designer/widgets/choice/widget.rkt")
            (lib "mred-designer/default-values.rkt")
            (lib "mred-designer/templates.rkt")
            (lib "mred-designer/widgets/tab/widget.rkt")
            (lib "mred-designer/widgets/frame/preview.rkt")
            (lib "mred-designer/widgets/vertical-pane/widget.rkt")
            (lib "mred-designer/code-generation.rkt")
            (lib "mred-designer/controller.rkt")
            (lib "mred-designer/widgets/check-box/widget.rkt")
            (lib "mred-designer/widgets/separator-menu-item/widget.rkt")
            (lib "mred-designer/plugin.rkt")
            (lib "mred-designer/widgets/project/preview.rkt")
            (lib "mred-designer/tooltip.rkt")
            (lib "mred-designer/project-manager.rkt")
            (lib "mred-designer/widgets/canvas/widget.rkt")
            (lib "mred-designer/widgets/gauge/widget.rkt")
            (lib "mred-designer/properties.rkt")
            (lib "mred-designer/widgets/combo-field/widget.rkt")
            (lib "mred-designer/widgets/slider/widget.rkt")
            (lib "mred-designer/widgets/menu/widget.rkt")
            (lib "mred-designer/widgets/dialog/widget.rkt")
            (lib "mred-designer/widgets/horizontal-pane/widget.rkt")
            (lib "mred-designer/widgets/radio-box/widget.rkt")
            (lib "mred-designer/widgets/list-box/widget.rkt")
            (lib "mred-designer/widgets/pane/widget.rkt")
            (lib "mred-designer/widgets/grow-box-spacer-pane/widget.rkt")
            (lib "mred-designer/misc.rkt")
            (lib "mred-designer/widgets/message/widget.rkt")
            (lib "mred-designer/widgets/vertical-panel/widget.rkt")
            (lib "mred-designer/widgets/horizontal-panel/widget.rkt")))
          (name . "mred-designer")
          (nix-sha256
           .
           "1ls1yhny1vvawxn71x9cjc5awq8ghf2638cjabymdf6a3vsgq8kz")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:laurent.orseau@gmail.com . #t)
                   (dev . #t)
                   (gui . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/Metaxal/MrEd-Designer")
          (tags . ("dev" "gui"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "bd5ced9658cdb7f1f1ca45526b3708075fc3cab5")
                          (source . "git://github.com/Metaxal/MrEd-Designer")
                          (source_url
                           .
                           "http://github.com/Metaxal/MrEd-Designer/tree/master")))
                 ("3.12"
                  .
                  #hasheq((checksum
                           .
                           "89e001c524d2d54cf636be2a77fc128c63ed8e19")
                          (source
                           .
                           "git://github.com/Metaxal/MrEd-Designer#v3.12")
                          (source_url
                           .
                           "http://github.com/Metaxal/MrEd-Designer/tree/master#v3.12")))
                 ("3.16"
                  .
                  #hasheq((checksum
                           .
                           "34ed02e70f9a757c56c3ae24b83164c34d477565")
                          (source
                           .
                           "git://github.com/Metaxal/MrEd-Designer#v3.16")
                          (source_url
                           .
                           "http://github.com/Metaxal/MrEd-Designer/tree/master#v3.16")))))))
 ("msgpack"
  .
  #hasheq((author . "hiphish@posteo.de hiphish@openmailbox.org")
          (authors . ("hiphish@posteo.de" "hiphish@openmailbox.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "msgpack" "doc/msgpack@msgpack/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/msgpack.txt")
                 (test-failure-log . "server/built/test-fail/msgpack.txt")
                 (test-success-log . #f)))
          (checksum . "64a60986b149703ff9436877da1dd3e86c6e4094")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "typed-racket-lib"
            "quickcheck"
            "racket-doc"
            "rackunit-lib"
            "scribble-lib"))
          (dependency-names
           .
           ("base"
            "typed-racket-lib"
            "quickcheck"
            "racket-doc"
            "rackunit-lib"
            "scribble-lib"))
          (description . "Implementation of the MessagePack protocol.")
          (implies . ())
          (last-checked . 1557339704)
          (last-edit . 1541764868)
          (last-updated . 1541764868)
          (modules
           .
           ((lib "msgpack/test/pack/string.rkt")
            (lib "msgpack/main.rkt")
            (lib "msgpack/test/unpack/map.rkt")
            (lib "msgpack/test/unpack/boolean.rkt")
            (lib "msgpack/test/pack/nil.rkt")
            (lib "msgpack/test/unpack/float.rkt")
            (lib "msgpack/test/unpack/array.rkt")
            (lib "msgpack/test/unpack/extension.rkt")
            (lib "msgpack/packable.rkt")
            (lib "msgpack/test/pack/extension.rkt")
            (lib "msgpack/test/pack/integers.rkt")
            (lib "msgpack/pack.rkt")
            (lib "msgpack/ext.rkt")
            (lib "msgpack/test/unpack/nil.rkt")
            (lib "msgpack/test/unpack/binary.rkt")
            (lib "msgpack/test/pack/float.rkt")
            (lib "msgpack/test/pack/map.rkt")
            (lib "msgpack/test/pack/boolean.rkt")
            (lib "msgpack/test/unpack/string.rkt")
            (lib "msgpack/test/ext.rkt")
            (lib "msgpack/unpack.rkt")
            (lib "msgpack/scribblings/msgpack.scrbl")
            (lib "msgpack/test/pack/array.rkt")
            (lib "msgpack/test/pack/binary.rkt")
            (lib "msgpack/test/unpack/integers.rkt")))
          (name . "msgpack")
          (nix-sha256
           .
           "0hdngx7hdkxbc1rakch8q58am7vwkd4is3zkx74y557an61pr1ql")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:hiphish@openmailbox.org . #t)
                   (author:hiphish@posteo.de . #t)
                   (binary . #t)
                   (messagepack . #t)
                   (msgpack . #t)
                   (protocol . #t)
                   (ring:1 . #t)))
          (source . "https://gitlab.com/HiPhish/MsgPack.rkt.git?path=msgpack")
          (tags . ("binary" "messagepack" "msgpack" "protocol"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "64a60986b149703ff9436877da1dd3e86c6e4094")
                          (source
                           .
                           "https://gitlab.com/HiPhish/MsgPack.rkt.git?path=msgpack")
                          (source_url
                           .
                           "https://gitlab.com/HiPhish/MsgPack.rkt.git?path=msgpack")))))))
 ("msgpack-rpc"
  .
  #hasheq((author . "wbthomason@cs.cornell.edu")
          (authors . ("wbthomason@cs.cornell.edu"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "msgpack-rpc"
                    "doc/msgpack-rpc@msgpack-rpc/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/msgpack-rpc.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/msgpack-rpc.txt")))
          (checksum . "52da60bbcd1ff812c5b2022f576254e3e77760ae")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "msgpack"
            "unix-socket-lib"
            "scribble-lib"
            "racket-doc"
            "rackunit-lib"))
          (dependency-names
           .
           ("base"
            "msgpack"
            "unix-socket-lib"
            "scribble-lib"
            "racket-doc"
            "rackunit-lib"))
          (description . "A MessagePack-RPC client for Racket")
          (implies . ())
          (last-checked . 1557339705)
          (last-edit . 1539054172)
          (last-updated . 1542068230)
          (modules
           .
           ((lib "msgpack-rpc/main.rkt")
            (lib "msgpack-rpc/scribblings/msgpack-rpc.scrbl")))
          (name . "msgpack-rpc")
          (nix-sha256
           .
           "1l0vr7y7lsmmw6y3sf1wjfwd6i209f4hwks83hwajiv29rplm0r2")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:wbthomason@cs.cornell.edu . #t)
                   (messagepack . #t)
                   (msgpack . #t)
                   (msgpack-rpc . #t)
                   (protocol . #t)
                   (remote . #t)
                   (ring:2 . #t)
                   (rpc . #t)))
          (source . "https://github.com/wbthomason/msgpack-rpc-racket.git")
          (tags
           .
           ("messagepack" "msgpack" "msgpack-rpc" "protocol" "remote" "rpc"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "52da60bbcd1ff812c5b2022f576254e3e77760ae")
                          (source
                           .
                           "https://github.com/wbthomason/msgpack-rpc-racket.git")
                          (source_url
                           .
                           "https://github.com/wbthomason/msgpack-rpc-racket.git")))))))
 ("multi-file-lang"
  .
  #hasheq((author . "alexander@knauth.org")
          (authors . ("alexander@knauth.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "multi-file-lang"
                    "doc/multi-file-lang@multi-file-lang/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/multi-file-lang.txt")
                 (test-failure-log
                  .
                  "server/built/test-fail/multi-file-lang.txt")
                 (test-success-log . #f)))
          (checksum . "346f982bf702ea550f230fad32520c676fceac76")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "lang-file"
            "rackunit-lib"
            "typed-racket-lib"
            "scribble-lib"
            "racket-doc"))
          (dependency-names
           .
           ("base"
            "lang-file"
            "rackunit-lib"
            "typed-racket-lib"
            "scribble-lib"
            "racket-doc"))
          (description . "a #lang language for multiple files in one")
          (implies . ())
          (last-checked . 1557339705)
          (last-edit . 1501823181)
          (last-updated . 1545605840)
          (modules
           .
           ((lib "multi-file/lang.rkt")
            (lib "multi-file/private/make-parent-directory.rkt")
            (lib "multi-file/tests/1/multi-test.rkt")
            (lib "multi-file/lang/reader.rkt")
            (lib "multi-file/private/fallback-make-parent-directory.rkt")
            (lib "multi-file/tests/1/d.rkt")
            (lib "multi-file/scribblings/multi-file-lang.scrbl")
            (lib "multi-file/tests/2/multi-test.rkt")))
          (name . "multi-file-lang")
          (nix-sha256
           .
           "1r4xb5m5fqhrwydj6nqxpr5sl88gpz5c7gw8azbbm66sb06009c9")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:alexander@knauth.org . #t)
                   (lang . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/AlexKnauth/multi-file-lang")
          (tags . ("lang"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "346f982bf702ea550f230fad32520c676fceac76")
                          (source
                           .
                           "git://github.com/AlexKnauth/multi-file-lang")
                          (source_url
                           .
                           "http://github.com/AlexKnauth/multi-file-lang/tree/master")))))))
 ("multi-id"
  .
  #hasheq((author . "georges.duperon@gmail.com")
          (authors . ("georges.duperon@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "multi-id.hl"
                    "doc/multi-id.hl@multi-id/index.html")
                   ("main" "multi-id" "doc/multi-id@multi-id/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/multi-id.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/multi-id.txt")))
          (checksum . "d0e61ac7e9a18a079f5671075604c68abd43b1ef")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "rackunit-lib"
            "typed-racket-lib"
            "typed-racket-more"
            "phc-toolkit"
            "type-expander"
            "scribble-lib"
            "hyper-literate"
            "scribble-lib"
            "racket-doc"
            "scribble-enhanced"
            "typed-racket-doc"))
          (dependency-names
           .
           ("base"
            "rackunit-lib"
            "typed-racket-lib"
            "typed-racket-more"
            "phc-toolkit"
            "type-expander"
            "scribble-lib"
            "hyper-literate"
            "scribble-lib"
            "racket-doc"
            "scribble-enhanced"
            "typed-racket-doc"))
          (description
           .
           "Define identifiers which act as a type-expander and match-expander and macro and identifier macro and set! transformer")
          (implies . ())
          (last-checked . 1557339705)
          (last-edit . 1500986234)
          (last-updated . 1555923960)
          (modules
           .
           ((lib "multi-id/multi-id.hl.rkt")
            (lib "multi-id/scribblings/multi-id.scrbl")
            (lib "multi-id/test/test-multi-id.rkt")
            (lib "multi-id/main.rkt")))
          (name . "multi-id")
          (nix-sha256
           .
           "16dfl0vjxd9l9z4hmn2728v86cd2n7m1z568pwxrzij88160m18x")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:georges.duperon@gmail.com . #t)
                   (define . #t)
                   (multimethods . #t)
                   (ring:1 . #t)
                   (syntax . #t)))
          (source . "https://github.com/jsmaniac/multi-id.git")
          (tags . ("define" "multimethods" "syntax"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "d0e61ac7e9a18a079f5671075604c68abd43b1ef")
                          (source
                           .
                           "https://github.com/jsmaniac/multi-id.git")
                          (source_url
                           .
                           "https://github.com/jsmaniac/multi-id.git")))))))
 ("multicolumn"
  .
  #hasheq((author . "kalimehtar@mail.ru")
          (authors . ("kalimehtar@mail.ru"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/multicolumn.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/multicolumn.txt")))
          (checksum . "ba50cc0fe7f35ef1a8059273416245e70408e8d9")
          (checksum-error . #f)
          (conflicts . ())
          (date-added . 1550465815)
          (dependencies . ("base" "stretchable-snip" "gui-lib"))
          (dependency-names . ("base" "stretchable-snip" "gui-lib"))
          (description
           .
           "GUI widget with multicolumn data table. Columns width may be set in pixels or in percents.")
          (implies . ())
          (last-checked . 1557339705)
          (last-edit . 1550465815)
          (last-updated . 1557123697)
          (modules . ((lib "multicolumn/multicolumn.rkt")))
          (name . "multicolumn")
          (nix-sha256
           .
           "054qng20wlb0svagvs0hk59q1zh2w9ldcg1f2qi364i2kx8rc8d1")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:kalimehtar@mail.ru . #t)
                   (gui . #t)
                   (ring:2 . #t)))
          (source . "https://github.com/Kalimehtar/multicolumn.git")
          (tags . ("gui"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "ba50cc0fe7f35ef1a8059273416245e70408e8d9")
                          (source
                           .
                           "https://github.com/Kalimehtar/multicolumn.git")
                          (source_url
                           .
                           "https://github.com/Kalimehtar/multicolumn.git")))))))
 ("multimethod"
  .
  #hasheq((author . "lexi.lambda@gmail.com")
          (authors . ("lexi.lambda@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/multimethod.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/multimethod.txt")))
          (checksum . "8a0903ebaedd919971c382eeb785f05080c7a8d6")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "multimethod-lib" "multimethod-doc"))
          (dependency-names . ("base" "multimethod-lib" "multimethod-doc"))
          (description . "")
          (implies . ("multimethod-lib" "multimethod-doc"))
          (last-checked . 1557339705)
          (last-edit . 1460257060)
          (last-updated . 1502816188)
          (modules . ())
          (name . "multimethod")
          (nix-sha256
           .
           "0jbmvs6q14f58hfi9qvz8g4ndq13ybyy80y375w7455s7y3w3af0")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:no-desc: . #t)
                   (:no-tag: . #t)
                   (author:lexi.lambda@gmail.com . #t)
                   (ring:1 . #t)))
          (source
           .
           "git://github.com/lexi-lambda/racket-multimethod?path=multimethod")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "8a0903ebaedd919971c382eeb785f05080c7a8d6")
                          (source
                           .
                           "git://github.com/lexi-lambda/racket-multimethod?path=multimethod")
                          (source_url
                           .
                           "http://github.com/lexi-lambda/racket-multimethod/tree/master?path=multimethod")))))))
 ("multimethod-doc"
  .
  #hasheq((author . "lexi.lambda@gmail.com")
          (authors . ("lexi.lambda@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "multimethod"
                    "doc/multimethod@multimethod-doc/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/multimethod-doc.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/multimethod-doc.txt")))
          (checksum . "8a0903ebaedd919971c382eeb785f05080c7a8d6")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base" "multimethod-lib" "racket-doc" "scribble-lib"))
          (dependency-names
           .
           ("base" "multimethod-lib" "racket-doc" "scribble-lib"))
          (description . "")
          (implies . ())
          (last-checked . 1557339705)
          (last-edit . 1461048601)
          (last-updated . 1502816188)
          (modules . ((lib "scribblings/multimethod.scrbl")))
          (name . "multimethod-doc")
          (nix-sha256
           .
           "0jbmvs6q14f58hfi9qvz8g4ndq13ybyy80y375w7455s7y3w3af0")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (:no-desc: . #t)
                   (:no-tag: . #t)
                   (author:lexi.lambda@gmail.com . #t)
                   (ring:1 . #t)))
          (source
           .
           "git://github.com/lexi-lambda/racket-multimethod?path=multimethod-doc")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "8a0903ebaedd919971c382eeb785f05080c7a8d6")
                          (source
                           .
                           "git://github.com/lexi-lambda/racket-multimethod?path=multimethod-doc")
                          (source_url
                           .
                           "http://github.com/lexi-lambda/racket-multimethod/tree/master?path=multimethod-doc")))))))
 ("multimethod-lib"
  .
  #hasheq((author . "lexi.lambda@gmail.com")
          (authors . ("lexi.lambda@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/multimethod-lib.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/multimethod-lib.txt")))
          (checksum . "8a0903ebaedd919971c382eeb785f05080c7a8d6")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           (("base" #:version "6.3") "rackunit-lib" "rackunit-spec"))
          (dependency-names . ("base" "rackunit-lib" "rackunit-spec"))
          (description . "")
          (implies . ())
          (last-checked . 1557339705)
          (last-edit . 1460256973)
          (last-updated . 1502816188)
          (modules
           .
           ((lib "multimethod/multimethod.rkt")
            (lib "multimethod/privilege.rkt")
            (lib "multimethod/main.rkt")))
          (name . "multimethod-lib")
          (nix-sha256
           .
           "0jbmvs6q14f58hfi9qvz8g4ndq13ybyy80y375w7455s7y3w3af0")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:no-desc: . #t)
                   (:no-tag: . #t)
                   (author:lexi.lambda@gmail.com . #t)
                   (ring:1 . #t)))
          (source
           .
           "git://github.com/lexi-lambda/racket-multimethod?path=multimethod-lib")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "8a0903ebaedd919971c382eeb785f05080c7a8d6")
                          (source
                           .
                           "git://github.com/lexi-lambda/racket-multimethod?path=multimethod-lib")
                          (source_url
                           .
                           "http://github.com/lexi-lambda/racket-multimethod/tree/master?path=multimethod-lib")))))))
 ("multimethod-test"
  .
  #hasheq((author . "lexi.lambda@gmail.com")
          (authors . ("lexi.lambda@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/multimethod-test.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/multimethod-test.txt")))
          (checksum . "8a0903ebaedd919971c382eeb785f05080c7a8d6")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "multimethod-lib" "rackunit-lib"))
          (dependency-names . ("base" "multimethod-lib" "rackunit-lib"))
          (description . "")
          (implies . ())
          (last-checked . 1557339705)
          (last-edit . 1460257049)
          (last-updated . 1502816189)
          (modules
           .
           ((lib "tests/multimethod/multimethod.rkt")
            (lib "tests/multimethod/ignored-params.rkt")))
          (name . "multimethod-test")
          (nix-sha256
           .
           "0jbmvs6q14f58hfi9qvz8g4ndq13ybyy80y375w7455s7y3w3af0")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:no-desc: . #t)
                   (:no-tag: . #t)
                   (author:lexi.lambda@gmail.com . #t)
                   (ring:1 . #t)))
          (source
           .
           "git://github.com/lexi-lambda/racket-multimethod?path=multimethod-test")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "8a0903ebaedd919971c382eeb785f05080c7a8d6")
                          (source
                           .
                           "git://github.com/lexi-lambda/racket-multimethod?path=multimethod-test")
                          (source_url
                           .
                           "http://github.com/lexi-lambda/racket-multimethod/tree/master?path=multimethod-test")))))))
 ("multipath-daemon"
  .
  #hasheq((author . "mordae@anilinux.org")
          (authors . ("mordae@anilinux.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "multipath-daemon"
                    "doc/multipath-daemon@multipath-daemon/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/multipath-daemon.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/multipath-daemon.txt")))
          (checksum . "4d8a2644d2641e9d263e83caef28b3bf6af63b88")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "scribble-lib"
            "misc1"
            "unix-socket-lib"
            "racket-doc"
            "unstable-doc"
            "unix-socket-doc"))
          (dependency-names
           .
           ("base"
            "scribble-lib"
            "misc1"
            "unix-socket-lib"
            "racket-doc"
            "unstable-doc"
            "unix-socket-doc"))
          (description
           .
           "Library for communication with the multipathd process via it's UNIX domain socket.")
          (implies . ())
          (last-checked . 1557339705)
          (last-edit . 1384508962)
          (last-updated . 1502816189)
          (modules
           .
           ((lib "multipath-daemon/main.rkt")
            (lib "multipath-daemon/multipath-daemon.scrbl")))
          (name . "multipath-daemon")
          (nix-sha256
           .
           "0c8phvqx38201m7l8pza4g2rxlbpmign0pxmbcyx08x5wpfqqq83")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (:no-tag: . #t)
                   (author:mordae@anilinux.org . #t)
                   (ring:1 . #t)))
          (source
           .
           "github://github.com/mordae/racket-multipath-daemon/master")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "4d8a2644d2641e9d263e83caef28b3bf6af63b88")
                          (source
                           .
                           "github://github.com/mordae/racket-multipath-daemon/master")
                          (source_url
                           .
                           "http://github.com/mordae/racket-multipath-daemon/tree/master")))))))
 ("multiscope"
  .
  #hasheq((author . "michael.ballantyne@gmail.com")
          (authors . ("michael.ballantyne@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/multiscope.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/multiscope.txt")))
          (checksum . "bc59bd53462a72ed3e67ec2555e94e871bc7e314")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "rackunit-lib"))
          (dependency-names . ("base" "rackunit-lib"))
          (description . "")
          (implies . ())
          (last-checked . 1557339706)
          (last-edit . 1470432532)
          (last-updated . 1506709788)
          (modules
           .
           ((lib "multiscope/test/provide.rkt")
            (lib "multiscope/test/all-defined-out.rkt")
            (lib "multiscope/test/basic.rkt")
            (lib "multiscope/test/macros-broken-sep-comp1.rkt")
            (lib "multiscope/test/macros.rkt")
            (lib "multiscope/test/macros-broken-sep-comp2.rkt")
            (lib "multiscope/test/macros-sep-comp1.rkt")
            (lib "multiscope/test/macros-sep-comp2.rkt")
            (lib "multiscope/main.rkt")))
          (name . "multiscope")
          (nix-sha256
           .
           "027d7wpiq68k9qfspnb5qzx9zg59nz8vqdcwzbfnv9x4fzjhl2q1")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:no-desc: . #t)
                   (:no-tag: . #t)
                   (author:michael.ballantyne@gmail.com . #t)
                   (ring:1 . #t)))
          (source . "https://github.com/michaelballantyne/multiscope.git")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "bc59bd53462a72ed3e67ec2555e94e871bc7e314")
                          (source
                           .
                           "https://github.com/michaelballantyne/multiscope.git")
                          (source_url
                           .
                           "https://github.com/michaelballantyne/multiscope.git")))))))
 ("music"
  .
  #hasheq((author . "npfaro@indiana.edu")
          (authors . ("npfaro@indiana.edu"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("none" "music")))
                 (failure-log . "server/built/fail/music.txt")
                 (min-failure-log . #f)
                 (success-log . #f)
                 (test-failure-log . #f)
                 (test-success-log . #f)))
          (checksum . "a5f9a6c456351d1b80950241cb1d82585043bc65")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base" "binaryio-lib" "scribble-lib" "racket-doc" "rackunit-lib"))
          (dependency-names
           .
           ("base" "binaryio-lib" "scribble-lib" "racket-doc" "rackunit-lib"))
          (description
           .
           "A music notation language. Outputs MIDI. See more on github.")
          (implies . ())
          (last-checked . 1557339706)
          (last-edit . 1547598761)
          (last-updated . 1546446213)
          (modules
           .
           ((lib "lang-music/lang/reader.rkt")
            (lib "lang-music/examples/algorithms.rkt")
            (lib "lang-music/examples/example-from-slide.rkt")
            (lib "lang-music/coroutines.rkt")
            (lib "lang-music/examples/sweet.rkt")
            (lib "lang-music/lang.rkt")
            (lib "lang-music/voices.rkt")
            (lib "lang-music/examples/more_examples.rkt")
            (lib "lang-music/examples/allstar.rkt")
            (lib "lang-music/examples/schtuff.rkt")
            (lib "lang-music/examples/morecowbell.rkt")))
          (name . "music")
          (nix-sha256
           .
           "1lri1b378bvvdljggg2rbhdjdbda32ljb4b2zgb5vs9aap59whf9")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-fail: . #t)
                   (:docs-error: . #t)
                   (audio . #t)
                   (author:npfaro@indiana.edu . #t)
                   (composition . #t)
                   (midi . #t)
                   (music . #t)
                   (ring:2 . #t)
                   (sound . #t)))
          (source . "https://github.com/SuperDisk/lang-music.git#a5f9a6c")
          (tags . ("audio" "composition" "midi" "music" "sound"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "a5f9a6c456351d1b80950241cb1d82585043bc65")
                          (source
                           .
                           "https://github.com/SuperDisk/lang-music.git#a5f9a6c")
                          (source_url
                           .
                           "https://github.com/SuperDisk/lang-music.git#a5f9a6c")))))))
 ("mutable-match-lambda"
  .
  #hasheq((author . "alexander@knauth.org")
          (authors . ("alexander@knauth.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "mutable-match-lambda"
                    "doc/mutable-match-lambda@mutable-match-lambda/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log
                  .
                  "server/built/install/mutable-match-lambda.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/mutable-match-lambda.txt")))
          (checksum . "371cb7e5407cc888ffd96ee5fff6facd9568a3fe")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "kw-utils"
            "rackunit-lib"
            "at-exp-lib"
            "scribble-lib"
            "sandbox-lib"
            "racket-doc"))
          (dependency-names
           .
           ("base"
            "kw-utils"
            "rackunit-lib"
            "at-exp-lib"
            "scribble-lib"
            "sandbox-lib"
            "racket-doc"))
          (description . "")
          (implies . ())
          (last-checked . 1557339706)
          (last-edit . 1472014493)
          (last-updated . 1502816190)
          (modules
           .
           ((lib "mutable-match-lambda/syntax-to-string.rkt")
            (lib "mutable-match-lambda/main.rkt")
            (lib "mutable-match-lambda/docs/mutable-match-lambda.scrbl")
            (lib "mutable-match-lambda/make-clause-proc.rkt")
            (lib "mutable-match-lambda/prop-object-name.rkt")
            (lib "mutable-match-lambda/communication.rkt")
            (lib "mutable-match-lambda/mutable-match-lambda-procedure.rkt")
            (lib "mutable-match-lambda/let-inferred-name.rkt")))
          (name . "mutable-match-lambda")
          (nix-sha256
           .
           "04gbp47dpcinb4j7fmbr1m4288bkdgpj9nad1rgv1gkzipsgs3vb")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (:no-desc: . #t)
                   (author:alexander@knauth.org . #t)
                   (deprecated . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/AlexKnauth/mutable-match-lambda")
          (tags . ("deprecated"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "371cb7e5407cc888ffd96ee5fff6facd9568a3fe")
                          (source
                           .
                           "git://github.com/AlexKnauth/mutable-match-lambda")
                          (source_url
                           .
                           "http://github.com/AlexKnauth/mutable-match-lambda/tree/master")))))))
 ("mutt"
  .
  #hasheq((author . "types@ccs.neu.edu")
          (authors . ("types@ccs.neu.edu"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "mutt" "doc/mutt@mutt/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/mutt.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/mutt.txt")))
          (checksum . "ccefee1c58c30c1c06862ba4dd2b760615372b37")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "typed-racket-lib"
            "typed-racket-more"
            "make-log-interceptor"
            "scribble-lib"
            "racket-doc"
            "rackunit-lib"
            "rackunit-abbrevs"
            "typed-racket-doc"))
          (dependency-names
           .
           ("base"
            "typed-racket-lib"
            "typed-racket-more"
            "make-log-interceptor"
            "scribble-lib"
            "racket-doc"
            "rackunit-lib"
            "rackunit-abbrevs"
            "typed-racket-doc"))
          (description . "Racket API for the Mutt email client")
          (implies . ())
          (last-checked . 1557339706)
          (last-edit . 1539179405)
          (last-updated . 1552071956)
          (modules
           .
           ((lib "mutt/test/untyped.rkt")
            (lib "mutt/test/util.rkt")
            (lib "mutt/test/typed.rkt")
            (lib "mutt/scribblings/mutt.scrbl")
            (lib "mutt/scribblings/typed-mutt.scrbl")
            (lib "mutt/main.rkt")
            (lib "mutt/typed.rkt")
            (lib "mutt/private/parameters.rkt")
            (lib "mutt/private/pre-install.rkt")
            (lib "mutt/private/main.rkt")
            (lib "mutt/setup.rkt")))
          (name . "mutt")
          (nix-sha256
           .
           "0qwfv9gj38gk0vjkvx617q07fbahrag4jv2z1p440ffn2imk19zl")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (api . #t)
                   (author:types@ccs.neu.edu . #t)
                   (email . #t)
                   (ring:1 . #t)
                   (utility . #t)))
          (source . "https://github.com/bennn/racket-mutt.git")
          (tags . ("api" "email" "utility"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "ccefee1c58c30c1c06862ba4dd2b760615372b37")
                          (source
                           .
                           "https://github.com/bennn/racket-mutt.git")
                          (source_url
                           .
                           "https://github.com/bennn/racket-mutt.git")))
                 ("6.6"
                  .
                  #hasheq((checksum . "")
                          (source
                           .
                           "https://github.com/bennn/racket-mutt/archive/0.2.zip")
                          (source_url
                           .
                           "https://github.com/bennn/racket-mutt/archive/0.2.zip")))))))
 ("my-cond"
  .
  #hasheq((author . "alexander@knauth.org")
          (authors . ("alexander@knauth.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "my-cond-iffy"
                    "doc/my-cond-iffy@my-cond/index.html")
                   ("main" "my-cond" "doc/my-cond@my-cond/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/my-cond.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/my-cond.txt")))
          (checksum . "dfc969924a5cfbb7250acb6e301167bc6684f75f")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "typed-racket-lib"
            "typed-racket-more"
            "sweet-exp-lib"
            "rackunit-lib"
            "racket-doc"
            "scribble-lib"
            "sweet-exp"))
          (dependency-names
           .
           ("base"
            "typed-racket-lib"
            "typed-racket-more"
            "sweet-exp-lib"
            "rackunit-lib"
            "racket-doc"
            "scribble-lib"
            "sweet-exp"))
          (description
           .
           "a version of cond that supports \"cond-expanders\" and a for/cond-clause form, allowing it to iterate though conditions")
          (implies . ())
          (last-checked . 1557339706)
          (last-edit . 1415219449)
          (last-updated . 1502816190)
          (modules
           .
           ((lib "my-cond/cond-expander.rkt")
            (lib "my-cond/docs/my-cond.scrbl")
            (lib "my-cond/proc+condexp.rkt")
            (lib "my-cond/main.rkt")
            (lib "my-cond/parse-for-cond-clause.rkt")
            (lib "my-cond/for-cond-clause.rkt")
            (lib "my-cond/cond-expander-prop.rkt")
            (lib "my-cond/my-cond.rkt")
            (lib "typed/my-cond.rkt")
            (lib "my-cond/define-syntax-parser.rkt")
            (lib "my-cond/iffy.rkt")
            (lib "typed/my-cond/failure-sym.rkt")
            (lib "my-cond/typed.rkt")
            (lib "my-cond/cond-expander-struct.rkt")
            (lib "my-cond/docs/my-cond-iffy.scrbl")
            (lib "my-cond/failure-sym.rkt")
            (lib "typed/my-cond/parse-for-cond-clause.rkt")))
          (name . "my-cond")
          (nix-sha256
           .
           "0rly1lf1qfwjqjwcmsnjk28y1acimm09i19j5hqjp24wf6w97rl8")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:alexander@knauth.org . #t)
                   (cond . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/AlexKnauth/my-cond")
          (tags . ("cond"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "dfc969924a5cfbb7250acb6e301167bc6684f75f")
                          (source . "git://github.com/AlexKnauth/my-cond")
                          (source_url
                           .
                           "http://github.com/AlexKnauth/my-cond/tree/master")))))))
 ("mysterx"
  .
  #hash((author . "mflatt@racket-lang.org")
        (checksum . "c80e39384b017bbb8ba6078c212d20b53427d553")
        (dependencies
         .
         ("scheme-lib" "base" "racket-doc" "at-exp-lib" "scribble-lib"))
        (dependency-names
         .
         ("scheme-lib" "base" "racket-doc" "at-exp-lib" "scribble-lib"))
        (description . "mflatt@racket-lang.org")
        (modules . ())
        (name . "mysterx")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/mysterx.zip")
        (tags . ())))
 ("mzcom"
  .
  #hash((author . "mflatt@racket-lang.org")
        (checksum . "f63616f5cbd4d52a4488f42dc88c0afd15a53f41")
        (dependencies
         .
         ("base"
          "compatibility-lib"
          "scheme-lib"
          "racket-doc"
          "mysterx"
          "scribble-lib"))
        (dependency-names
         .
         ("base"
          "compatibility-lib"
          "scheme-lib"
          "racket-doc"
          "mysterx"
          "scribble-lib"))
        (description . "mflatt@racket-lang.org")
        (modules . ())
        (name . "mzcom")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/mzcom.zip")
        (tags . ())))
 ("mzscheme"
  .
  #hash((author . "mflatt@racket-lang.org")
        (checksum . "c29755337ea5b41d363b7b0dab97a5b6ad4623fb")
        (dependencies . ("mzscheme-lib" "mzscheme-doc"))
        (dependency-names . ("mzscheme-lib" "mzscheme-doc"))
        (description . "mflatt@racket-lang.org")
        (modules . ())
        (name . "mzscheme")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/mzscheme.zip")
        (tags . ())))
 ("mzscheme-doc"
  .
  #hash((author . "mflatt@racket-lang.org")
        (checksum . "1a5787ba3851173354880412cf7db0fb8b539177")
        (dependencies
         .
         ("base"
          "compatibility-lib"
          "r5rs-doc"
          "r5rs-lib"
          "racket-doc"
          "scheme-lib"
          "scribble-lib"))
        (dependency-names
         .
         ("base"
          "compatibility-lib"
          "r5rs-doc"
          "r5rs-lib"
          "racket-doc"
          "scheme-lib"
          "scribble-lib"))
        (description . "mflatt@racket-lang.org")
        (modules . ())
        (name . "mzscheme-doc")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/mzscheme-doc.zip")
        (tags . ())))
 ("mzscheme-lib"
  .
  #hash((author . "mflatt@racket-lang.org")
        (checksum . "147295fb618de988d3cfbf02ba5d155119203d35")
        (dependencies . ("scheme-lib" ("base" #:version "6.5.0.2")))
        (dependency-names . ("scheme-lib" "base"))
        (description . "mflatt@racket-lang.org")
        (modules . ())
        (name . "mzscheme-lib")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/mzscheme-lib.zip")
        (tags . ())))
 ("namespaced-transformer"
  .
  #hasheq((author . "lexi.lambda@gmail.com")
          (authors . ("lexi.lambda@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log
                  .
                  "server/built/install/namespaced-transformer.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/namespaced-transformer.txt")))
          (checksum . "4cdc1bdae09a07b78f23665267f2c7df4be5a7f6")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("namespaced-transformer-doc" "namespaced-transformer-lib"))
          (dependency-names
           .
           ("namespaced-transformer-doc" "namespaced-transformer-lib"))
          (description . "")
          (implies
           .
           ("namespaced-transformer-doc" "namespaced-transformer-lib"))
          (last-checked . 1557339707)
          (last-edit . 1473370456)
          (last-updated . 1502816193)
          (modules . ())
          (name . "namespaced-transformer")
          (nix-sha256
           .
           "0lfcxyb76iadqh7vhxqzg5fdgd3pyx6nsjqdibgam10dlppck45y")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:no-desc: . #t)
                   (:no-tag: . #t)
                   (author:lexi.lambda@gmail.com . #t)
                   (ring:1 . #t)))
          (source
           .
           "git://github.com/lexi-lambda/namespaced-transformer?path=namespaced-transformer")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "4cdc1bdae09a07b78f23665267f2c7df4be5a7f6")
                          (source
                           .
                           "git://github.com/lexi-lambda/namespaced-transformer?path=namespaced-transformer")
                          (source_url
                           .
                           "http://github.com/lexi-lambda/namespaced-transformer/tree/master?path=namespaced-transformer")))))))
 ("namespaced-transformer-doc"
  .
  #hasheq((author . "lexi.lambda@gmail.com")
          (authors . ("lexi.lambda@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "namespaced-transformer"
                    "doc/namespaced-transformer@namespaced-transformer-doc/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log
                  .
                  "server/built/install/namespaced-transformer-doc.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/namespaced-transformer-doc.txt")))
          (checksum . "4cdc1bdae09a07b78f23665267f2c7df4be5a7f6")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base" "namespaced-transformer-lib" "racket-doc" "scribble-lib"))
          (dependency-names
           .
           ("base" "namespaced-transformer-lib" "racket-doc" "scribble-lib"))
          (description . "")
          (implies . ())
          (last-checked . 1557339707)
          (last-edit . 1473370424)
          (last-updated . 1502816193)
          (modules . ((lib "scribblings/namespaced-transformer.scrbl")))
          (name . "namespaced-transformer-doc")
          (nix-sha256
           .
           "0lfcxyb76iadqh7vhxqzg5fdgd3pyx6nsjqdibgam10dlppck45y")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (:no-desc: . #t)
                   (:no-tag: . #t)
                   (author:lexi.lambda@gmail.com . #t)
                   (ring:1 . #t)))
          (source
           .
           "git://github.com/lexi-lambda/namespaced-transformer?path=namespaced-transformer-doc")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "4cdc1bdae09a07b78f23665267f2c7df4be5a7f6")
                          (source
                           .
                           "git://github.com/lexi-lambda/namespaced-transformer?path=namespaced-transformer-doc")
                          (source_url
                           .
                           "http://github.com/lexi-lambda/namespaced-transformer/tree/master?path=namespaced-transformer-doc")))))))
 ("namespaced-transformer-lib"
  .
  #hasheq((author . "lexi.lambda@gmail.com")
          (authors . ("lexi.lambda@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log
                  .
                  "server/built/install/namespaced-transformer-lib.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/namespaced-transformer-lib.txt")))
          (checksum . "4cdc1bdae09a07b78f23665267f2c7df4be5a7f6")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base"))
          (dependency-names . ("base"))
          (description . "")
          (implies . ())
          (last-checked . 1557339707)
          (last-edit . 1473370346)
          (last-updated . 1502816193)
          (modules
           .
           ((lib "namespaced-transformer/info-key.rkt")
            (lib "namespaced-transformer/main.rkt")))
          (name . "namespaced-transformer-lib")
          (nix-sha256
           .
           "0lfcxyb76iadqh7vhxqzg5fdgd3pyx6nsjqdibgam10dlppck45y")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:no-desc: . #t)
                   (:no-tag: . #t)
                   (author:lexi.lambda@gmail.com . #t)
                   (ring:1 . #t)))
          (source
           .
           "git://github.com/lexi-lambda/namespaced-transformer?path=namespaced-transformer-lib")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "4cdc1bdae09a07b78f23665267f2c7df4be5a7f6")
                          (source
                           .
                           "git://github.com/lexi-lambda/namespaced-transformer?path=namespaced-transformer-lib")
                          (source_url
                           .
                           "http://github.com/lexi-lambda/namespaced-transformer/tree/master?path=namespaced-transformer-lib")))))))
 ("nanopass"
  .
  #hasheq((author . "leif@leifandersen.net")
          (authors . ("leif@leifandersen.net"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "nanopass" "doc/nanopass@nanopass/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/nanopass.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/nanopass.txt")))
          (checksum . "6c7f9905f462f0b08635e4005a48a15b6c5090f2")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "rackunit-lib"
            "compatibility-lib"
            "unstable-pretty-lib"
            "scribble-lib"
            "racket-doc"))
          (dependency-names
           .
           ("base"
            "rackunit-lib"
            "compatibility-lib"
            "unstable-pretty-lib"
            "scribble-lib"
            "racket-doc"))
          (description . "")
          (implies . ())
          (last-checked . 1557339707)
          (last-edit . 1450983821)
          (last-updated . 1556287560)
          (modules
           .
           ((lib "nanopass/tests/coresheme-to-javascript-compiler.rkt")
            (lib "nanopass/tests/compiler-test.rkt")
            (lib "nanopass/tests/test-driver.rkt")
            (lib "nanopass/private/unparser.rkt")
            (lib "nanopass/private/language.rkt")
            (lib "nanopass/private/helpers.rkt")
            (lib "nanopass/tests/synforms.rkt")
            (lib "nanopass/private/meta-parser.rkt")
            (lib "nanopass/private/records.rkt")
            (lib "nanopass/lang/reader.rkt")
            (lib "nanopass/private/pass-helper.rkt")
            (lib "nanopass/tests/alltests.rkt")
            (lib "nanopass/private/meta-syntax-dispatch.rkt")
            (lib "nanopass/main.rkt")
            (lib "nanopass/private/language-node-counter.rkt")
            (lib "nanopass/private/pass.rkt")
            (lib "nanopass/tests/test-all.rkt")
            (lib "nanopass/private/language-helpers.rkt")
            (lib "nanopass/tests/helpers.rkt")
            (lib "nanopass/tests/compiler.rkt")
            (lib "nanopass/tests/unit-tests.rkt")
            (lib "nanopass/base.rkt")
            (lib "nanopass/private/nano-syntax-dispatch.rkt")
            (lib "nanopass/scribblings/nanopass.scrbl")
            (lib "nanopass/private/syntaxconvert.rkt")
            (lib "nanopass/private/parser.rkt")))
          (name . "nanopass")
          (nix-sha256
           .
           "1rxmq53r7dhbziz2zq2n1725vp693rvvw6v7qfvxzqc8rqficcpn")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (:no-desc: . #t)
                   (author:leif@leifandersen.net . #t)
                   (compiler . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/nanopass/nanopass-framework-racket")
          (tags . ("compiler"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "6c7f9905f462f0b08635e4005a48a15b6c5090f2")
                          (source
                           .
                           "git://github.com/nanopass/nanopass-framework-racket")
                          (source_url
                           .
                           "http://github.com/nanopass/nanopass-framework-racket/tree/master")))
                 ("6.0"
                  .
                  #hasheq((checksum
                           .
                           "1422f5183e0d15492bbba2a77f7ad927f9349681")
                          (source
                           .
                           "git://github.com/nanopass/nanopass-framework-racket#old-racket")
                          (source_url
                           .
                           "http://github.com/nanopass/nanopass-framework-racket/tree/master#old-racket")))
                 ("6.0.1"
                  .
                  #hasheq((checksum
                           .
                           "1422f5183e0d15492bbba2a77f7ad927f9349681")
                          (source
                           .
                           "git://github.com/nanopass/nanopass-framework-racket#old-racket")
                          (source_url
                           .
                           "http://github.com/nanopass/nanopass-framework-racket/tree/master#old-racket")))
                 ("6.1"
                  .
                  #hasheq((checksum
                           .
                           "1422f5183e0d15492bbba2a77f7ad927f9349681")
                          (source
                           .
                           "git://github.com/nanopass/nanopass-framework-racket#old-racket")
                          (source_url
                           .
                           "http://github.com/nanopass/nanopass-framework-racket/tree/master#old-racket")))
                 ("6.1.1"
                  .
                  #hasheq((checksum
                           .
                           "1422f5183e0d15492bbba2a77f7ad927f9349681")
                          (source
                           .
                           "git://github.com/nanopass/nanopass-framework-racket#old-racket")
                          (source_url
                           .
                           "http://github.com/nanopass/nanopass-framework-racket/tree/master#old-racket")))
                 ("6.2"
                  .
                  #hasheq((checksum
                           .
                           "1422f5183e0d15492bbba2a77f7ad927f9349681")
                          (source
                           .
                           "git://github.com/nanopass/nanopass-framework-racket#old-racket")
                          (source_url
                           .
                           "http://github.com/nanopass/nanopass-framework-racket/tree/master#old-racket")))
                 ("6.2.1"
                  .
                  #hasheq((checksum
                           .
                           "1422f5183e0d15492bbba2a77f7ad927f9349681")
                          (source
                           .
                           "git://github.com/nanopass/nanopass-framework-racket#old-racket")
                          (source_url
                           .
                           "http://github.com/nanopass/nanopass-framework-racket/tree/master#old-racket")))))))
 ("nat-traversal"
  .
  #hasheq((author . "tonygarnockjones@gmail.com")
          (authors . ("tonygarnockjones@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "nat-traversal"
                    "doc/nat-traversal@nat-traversal/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/nat-traversal.txt")
                 (test-failure-log
                  .
                  "server/built/test-fail/nat-traversal.txt")
                 (test-success-log . #f)))
          (checksum . "3983b52e1e23b820da1b90f514ddbe7d6398e0cb")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base" "bitsyntax" "web-server-lib" "racket-doc" "scribble-lib"))
          (dependency-names
           .
           ("base" "bitsyntax" "web-server-lib" "racket-doc" "scribble-lib"))
          (description
           .
           "NAT traversal utilities, including NAT-PMP and UPnP.")
          (implies . ())
          (last-checked . 1557339708)
          (last-edit . 1520872802)
          (last-updated . 1520872930)
          (modules
           .
           ((lib "nat-traversal/examples/example-high-level-tcp.rkt")
            (lib "nat-traversal/interfaces.rkt")
            (lib "nat-traversal/main.rkt")
            (lib "nat-traversal/examples/example-high-level-udp.rkt")
            (lib "nat-traversal/high-level.rkt")
            (lib "nat-traversal/examples/example-upnp-ip-gateway.rkt")
            (lib "nat-traversal/timer.rkt")
            (lib "nat-traversal/upnp.rkt")
            (lib "nat-traversal/scribblings/nat-traversal.scrbl")
            (lib "nat-traversal/examples/map-udp-port.rkt")
            (lib "nat-traversal/mapping.rkt")
            (lib "nat-traversal/nat-pmp.rkt")
            (lib "nat-traversal/upnp-ip-gateway.rkt")))
          (name . "nat-traversal")
          (nix-sha256
           .
           "1jm51mxd8isg18lb7nrlzrszws92i7khk4b9g41bskmn8ka86ly4")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:tonygarnockjones@gmail.com . #t)
                   (firewall . #t)
                   (nat . #t)
                   (net . #t)
                   (network . #t)
                   (ring:2 . #t)))
          (source . "https://github.com/tonyg/racket-nat-traversal.git")
          (tags . ("firewall" "nat" "net" "network"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "3983b52e1e23b820da1b90f514ddbe7d6398e0cb")
                          (source
                           .
                           "https://github.com/tonyg/racket-nat-traversal.git")
                          (source_url
                           .
                           "https://github.com/tonyg/racket-nat-traversal.git")))))))
 ("neologia"
  .
  #hasheq((author . "gamecodeshark@gmail.com")
          (authors . ("gamecodeshark@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "neologia" "doc/neologia@neologia/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/neologia.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/neologia.txt")))
          (checksum . "92d6ccde9041dc07b5c0db1849b4e1c65cb3cf2d")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "rackunit-lib"
            "brag"
            "beautiful-racket"
            "beautiful-racket-lib"
            "br-parser-tools-lib"
            "scribble-lib"
            "racket-doc"))
          (dependency-names
           .
           ("base"
            "rackunit-lib"
            "brag"
            "beautiful-racket"
            "beautiful-racket-lib"
            "br-parser-tools-lib"
            "scribble-lib"
            "racket-doc"))
          (description
           .
           "A language for creating and managing dictionaries and lexicons")
          (implies . ())
          (last-checked . 1557339708)
          (last-edit . 1509944026)
          (last-updated . 1510027329)
          (modules
           .
           ((lib "neologia/lexer.rkt")
            (lib "neologia/parser.rkt")
            (lib "neologia/tokenizer.rkt")
            (lib "neologia/tokenize-only.rkt")
            (lib "neologia/scribblings/neologia.scrbl")
            (lib "neologia/colorer.rkt")
            (lib "neologia/examples/test.rkt")
            (lib "neologia/main.rkt")
            (lib "neologia/parser-only.rkt")
            (lib "neologia/generator.rkt")))
          (name . "neologia")
          (nix-sha256
           .
           "15hw5xigknxg08pg0p9hwg7kmwm6j04dny0lfzipkh2gnwg69nzn")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:gamecodeshark@gmail.com . #t)
                   (dictionaries . #t)
                   (lang . #t)
                   (lang-extension . #t)
                   (lexicon . #t)
                   (ring:2 . #t)))
          (source . "https://github.com/robertkleffner/neologia.git")
          (tags . ("dictionaries" "lang" "lang-extension" "lexicon"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "92d6ccde9041dc07b5c0db1849b4e1c65cb3cf2d")
                          (source
                           .
                           "https://github.com/robertkleffner/neologia.git")
                          (source_url
                           .
                           "https://github.com/robertkleffner/neologia.git")))))))
 ("nested-hash"
  .
  #hasheq((author . "macocio@gmail.com")
          (authors . ("macocio@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "nested-hash"
                    "doc/nested-hash@nested-hash/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/nested-hash.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/nested-hash.txt")))
          (checksum . "c562dbe1cf54d8604e56db14526f03c9b6c75b5b")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base" "sandbox-lib" "scribble-lib" "racket-doc" "rackunit-lib"))
          (dependency-names
           .
           ("base" "sandbox-lib" "scribble-lib" "racket-doc" "rackunit-lib"))
          (description
           .
           "Functions to allow for easy nested hash setting and getting.")
          (implies . ())
          (last-checked . 1557339708)
          (last-edit . 1533388916)
          (last-updated . 1543020393)
          (modules
           .
           ((lib "nested-hash/main.rkt")
            (lib "nested-hash/scribblings/nested-hash.scrbl")))
          (name . "nested-hash")
          (nix-sha256
           .
           "1yph4fy05gxcqi1gkq3xphmk9vfkq2wgsbvj31b30fp2misswvw1")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:macocio@gmail.com . #t)
                   (hash . #t)
                   (hash-ref . #t)
                   (hash-set . #t)
                   (nested-hash-ref . #t)
                   (nested-hash-set . #t)
                   (ring:2 . #t)))
          (source . "https://github.com/BourgondAries/nested-hash.git")
          (tags
           .
           ("hash" "hash-ref" "hash-set" "nested-hash-ref" "nested-hash-set"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "c562dbe1cf54d8604e56db14526f03c9b6c75b5b")
                          (source
                           .
                           "https://github.com/BourgondAries/nested-hash.git")
                          (source_url
                           .
                           "https://github.com/BourgondAries/nested-hash.git")))))))
 ("net"
  .
  #hash((author . "mflatt@racket-lang.org")
        (checksum . "305df93eaee9f37021321c6559857381d90ddf8f")
        (dependencies . ("net-lib" "net-doc"))
        (dependency-names . ("net-lib" "net-doc"))
        (description . "mflatt@racket-lang.org")
        (modules . ())
        (name . "net")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/net.zip")
        (tags . ())))
 ("net-cookies"
  .
  #hash((author . "jmj@fellowhuman.com jay.mccarthy@gmail.com")
        (checksum . "37fdf96cc17bdc71ba97c30f53451d12831b996d")
        (dependencies . ("net-cookies-lib" "net-cookies-doc"))
        (dependency-names . ("net-cookies-lib" "net-cookies-doc"))
        (description . "jmj@fellowhuman.com jay.mccarthy@gmail.com")
        (modules . ())
        (name . "net-cookies")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/net-cookies.zip")
        (tags . ())))
 ("net-cookies-doc"
  .
  #hash((author . "jay.mccarthy@gmail.com jmj@fellowhuman.com")
        (checksum . "9d60d69283b0cf1fab89046b495fb3ede7bc7c35")
        (dependencies
         .
         ("base"
          "net-cookies-lib"
          "racket-doc"
          "web-server-lib"
          "web-server-doc"
          "net-doc"
          "scribble-lib"))
        (dependency-names
         .
         ("base"
          "net-cookies-lib"
          "racket-doc"
          "web-server-lib"
          "web-server-doc"
          "net-doc"
          "scribble-lib"))
        (description . "jay.mccarthy@gmail.com jmj@fellowhuman.com")
        (modules . ())
        (name . "net-cookies-doc")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/net-cookies-doc.zip")
        (tags . ())))
 ("net-cookies-lib"
  .
  #hash((author . "jay.mccarthy@gmail.com jmj@fellowhuman.com")
        (checksum . "cfc340ff7565704a17e0a4aabe7b45c963272e61")
        (dependencies . ("srfi-lite-lib" "base"))
        (dependency-names . ("srfi-lite-lib" "base"))
        (description . "jay.mccarthy@gmail.com jmj@fellowhuman.com")
        (modules . ())
        (name . "net-cookies-lib")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/net-cookies-lib.zip")
        (tags . ())))
 ("net-cookies-test"
  .
  #hash((author . "jay.mccarthy@gmail.com jmj@fellowhuman.com")
        (checksum . "ab5f9d3a472b79e4f774ab67b5ed7109cbe12abe")
        (dependencies . ("base" "net-cookies-lib" "rackunit-lib"))
        (dependency-names . ("base" "net-cookies-lib" "rackunit-lib"))
        (description . "jay.mccarthy@gmail.com jmj@fellowhuman.com")
        (modules . ())
        (name . "net-cookies-test")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/net-cookies-test.zip")
        (tags . ())))
 ("net-doc"
  .
  #hash((author . "mflatt@racket-lang.org")
        (checksum . "a0e46b75bb480dfe18100ed79e43848c02b4afbc")
        (dependencies
         .
         ("base"
          "compatibility-lib"
          "net-lib"
          "racket-doc"
          "scribble-lib"
          "web-server-doc"
          "web-server-lib"))
        (dependency-names
         .
         ("base"
          "compatibility-lib"
          "net-lib"
          "racket-doc"
          "scribble-lib"
          "web-server-doc"
          "web-server-lib"))
        (description . "mflatt@racket-lang.org")
        (modules . ())
        (name . "net-doc")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/net-doc.zip")
        (tags . ())))
 ("net-ip"
  .
  #hasheq((author . "bogdan@defn.io")
          (authors . ("bogdan@defn.io"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/net-ip.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/net-ip.txt")))
          (checksum . "ac3bd647d95c3f7f7b61e7aec7603c509314728f")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("net-ip-doc" "net-ip-lib"))
          (dependency-names . ("net-ip-doc" "net-ip-lib"))
          (description . "IP address utilities (implementation and docs).")
          (implies . ("net-ip-doc" "net-ip-lib"))
          (last-checked . 1557339708)
          (last-edit . 1542196549)
          (last-updated . 1542399513)
          (modules . ())
          (name . "net-ip")
          (nix-sha256
           .
           "1yaj2f4clhvpnxcb85da2rr3j6ibrbp31nmx8j8na8z0y9j2dcys")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:bogdan@defn.io . #t)
                   (ip-address . #t)
                   (net . #t)
                   (ring:2 . #t)))
          (source
           .
           "https://github.com/Bogdanp/racket-net-ip.git?path=net-ip")
          (tags . ("ip-address" "net"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "ac3bd647d95c3f7f7b61e7aec7603c509314728f")
                          (source
                           .
                           "https://github.com/Bogdanp/racket-net-ip.git?path=net-ip")
                          (source_url
                           .
                           "https://github.com/Bogdanp/racket-net-ip.git?path=net-ip")))))))
 ("net-ip-doc"
  .
  #hasheq((author . "bogdan@defn.io")
          (authors . ("bogdan@defn.io"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "net-ip" "doc/net-ip@net-ip-doc/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/net-ip-doc.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/net-ip-doc.txt")))
          (checksum . "ac3bd647d95c3f7f7b61e7aec7603c509314728f")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "net-ip-lib" "racket-doc" "scribble-lib"))
          (dependency-names
           .
           ("base" "net-ip-lib" "racket-doc" "scribble-lib"))
          (description . "IP address utilities (docs only).")
          (implies . ())
          (last-checked . 1557339708)
          (last-edit . 1542196612)
          (last-updated . 1542399513)
          (modules . ((lib "net/scribblings/net-ip.scrbl")))
          (name . "net-ip-doc")
          (nix-sha256
           .
           "1yaj2f4clhvpnxcb85da2rr3j6ibrbp31nmx8j8na8z0y9j2dcys")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:bogdan@defn.io . #t)
                   (ip-address . #t)
                   (net . #t)
                   (ring:2 . #t)))
          (source
           .
           "https://github.com/Bogdanp/racket-net-ip.git?path=net-ip-doc")
          (tags . ("ip-address" "net"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "ac3bd647d95c3f7f7b61e7aec7603c509314728f")
                          (source
                           .
                           "https://github.com/Bogdanp/racket-net-ip.git?path=net-ip-doc")
                          (source_url
                           .
                           "https://github.com/Bogdanp/racket-net-ip.git?path=net-ip-doc")))))))
 ("net-ip-lib"
  .
  #hasheq((author . "bogdan@defn.io")
          (authors . ("bogdan@defn.io"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/net-ip-lib.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/net-ip-lib.txt")))
          (checksum . "ac3bd647d95c3f7f7b61e7aec7603c509314728f")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base"))
          (dependency-names . ("base"))
          (description . "IP address utilities (implementation only).")
          (implies . ())
          (last-checked . 1557339708)
          (last-edit . 1542196581)
          (last-updated . 1542399514)
          (modules
           .
           ((lib "net/ip/address.rkt")
            (lib "net/ip/network.rkt")
            (lib "net/ip.rkt")
            (lib "net/ip/common.rkt")))
          (name . "net-ip-lib")
          (nix-sha256
           .
           "1yaj2f4clhvpnxcb85da2rr3j6ibrbp31nmx8j8na8z0y9j2dcys")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:bogdan@defn.io . #t)
                   (ip-address . #t)
                   (net . #t)
                   (ring:2 . #t)))
          (source
           .
           "https://github.com/Bogdanp/racket-net-ip.git?path=net-ip-lib")
          (tags . ("ip-address" "net"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "ac3bd647d95c3f7f7b61e7aec7603c509314728f")
                          (source
                           .
                           "https://github.com/Bogdanp/racket-net-ip.git?path=net-ip-lib")
                          (source_url
                           .
                           "https://github.com/Bogdanp/racket-net-ip.git?path=net-ip-lib")))))))
 ("net-ip-test"
  .
  #hasheq((author . "bogdan@defn.io")
          (authors . ("bogdan@defn.io"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/net-ip-test.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/net-ip-test.txt")))
          (checksum . "ac3bd647d95c3f7f7b61e7aec7603c509314728f")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "net-ip-lib" "quickcheck" "rackunit-lib"))
          (dependency-names
           .
           ("base" "net-ip-lib" "quickcheck" "rackunit-lib"))
          (description . "Tests for net-ip-lib.")
          (implies . ())
          (last-checked . 1557339709)
          (last-edit . 1542215487)
          (last-updated . 1542399514)
          (modules
           .
           ((lib "tests/net/ip/network.rkt")
            (lib "tests/net/ip/address.rkt")
            (lib "tests/net/run-all-tests.rkt")
            (lib "tests/net/ip/common.rkt")))
          (name . "net-ip-test")
          (nix-sha256
           .
           "1yaj2f4clhvpnxcb85da2rr3j6ibrbp31nmx8j8na8z0y9j2dcys")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:bogdan@defn.io . #t)
                   (ip-address . #t)
                   (net . #t)
                   (ring:2 . #t)))
          (source
           .
           "https://github.com/Bogdanp/racket-net-ip.git?path=net-ip-test")
          (tags . ("ip-address" "net"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "ac3bd647d95c3f7f7b61e7aec7603c509314728f")
                          (source
                           .
                           "https://github.com/Bogdanp/racket-net-ip.git?path=net-ip-test")
                          (source_url
                           .
                           "https://github.com/Bogdanp/racket-net-ip.git?path=net-ip-test")))))))
 ("net-jwt"
  .
  #hasheq((author . "jmj@fellowhuman.com")
          (authors . ("jmj@fellowhuman.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "jwt" "doc/jwt@net-jwt/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/net-jwt.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/net-jwt.txt")))
          (checksum . "9ba9f06101b71f2f148dc338e2d577389b588ec4")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("srfi-lite-lib"
            ("base" #:version "6.10")
            "typed-racket-lib"
            "typed-racket-more"
            "sha"
            "rackunit-lib"
            "web-server-lib"
            "racket-doc"
            "scribble-lib"
            "typed-racket-lib"
            "typed-racket-more"
            "typed-racket-doc"
            "option-bind"))
          (dependency-names
           .
           ("srfi-lite-lib"
            "base"
            "typed-racket-lib"
            "typed-racket-more"
            "sha"
            "rackunit-lib"
            "web-server-lib"
            "racket-doc"
            "scribble-lib"
            "typed-racket-lib"
            "typed-racket-more"
            "typed-racket-doc"
            "option-bind"))
          (description
           .
           "JSON Web Token / JSON Web Signature codec, verification, signing")
          (implies . ())
          (last-checked . 1557339709)
          (last-edit . 1439185700)
          (last-updated . 1537246670)
          (modules
           .
           ((lib "net/jwt/encode-decode.rkt")
            (lib "net/jwt.rkt")
            (lib "tests/net/jwt/base64.rkt")
            (lib "net/jwt/misc.rkt")
            (lib "net/jwt/base64.rkt")
            (lib "net/jwt/algorithms.rkt")
            (lib "net/jwt/jwt.scrbl")
            (lib "net/jwt/structs.rkt")
            (lib "tests/net/jwt/algorithms.rkt")
            (lib "tests/net/jwt/encode-decode.rkt")))
          (name . "net-jwt")
          (nix-sha256
           .
           "09ad6lw8cm9f2nzqzafckc151n6134cd8d4dlwj8wlsd47maa6kf")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:jmj@fellowhuman.com . #t)
                   (json . #t)
                   (net . #t)
                   (ring:1 . #t)
                   (web . #t)))
          (source . "git://github.com/RenaissanceBug/racket-jwt")
          (tags . ("json" "net" "web"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "9ba9f06101b71f2f148dc338e2d577389b588ec4")
                          (source
                           .
                           "git://github.com/RenaissanceBug/racket-jwt")
                          (source_url
                           .
                           "http://github.com/RenaissanceBug/racket-jwt/tree/master")))))))
 ("net-jwt-temp"
  .
  #hasheq((author . "answerw16@gmail.com jmj@fellowhuman.com")
          (authors . ("answerw16@gmail.com" "jmj@fellowhuman.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("none" "jwt")))
                 (failure-log . "server/built/fail/net-jwt-temp.txt")
                 (min-failure-log . #f)
                 (success-log . #f)
                 (test-failure-log . #f)
                 (test-success-log . #f)))
          (checksum . "9ade29cdfb7a6c0508b96a9d2c5a6463577516ec")
          (checksum-error . #f)
          (conflicts . ("net-jwt"))
          (dependencies
           .
           ("srfi-lite-lib"
            "base"
            "typed-racket-lib"
            "sha"
            "typed-racket-more"
            "rackunit-lib"
            "web-server-lib"
            "racket-doc"
            "scribble-lib"
            "typed-racket-lib"
            "typed-racket-more"
            "typed-racket-doc"
            "option-bind"))
          (dependency-names
           .
           ("srfi-lite-lib"
            "base"
            "typed-racket-lib"
            "sha"
            "typed-racket-more"
            "rackunit-lib"
            "web-server-lib"
            "racket-doc"
            "scribble-lib"
            "typed-racket-lib"
            "typed-racket-more"
            "typed-racket-doc"
            "option-bind"))
          (description . "")
          (implies . ())
          (last-checked . 1557339709)
          (last-edit . 1536247799)
          (last-updated . 1536253070)
          (modules
           .
           ((lib "net/jwt/encode-decode.rkt")
            (lib "net/jwt.rkt")
            (lib "tests/net/jwt/base64.rkt")
            (lib "net/jwt/misc.rkt")
            (lib "net/jwt/base64.rkt")
            (lib "net/jwt/algorithms.rkt")
            (lib "net/jwt/jwt.scrbl")
            (lib "net/jwt/structs.rkt")
            (lib "tests/net/jwt/algorithms.rkt")
            (lib "tests/net/jwt/encode-decode.rkt")))
          (name . "net-jwt-temp")
          (nix-sha256
           .
           "1676jx45q3wxj9hpync2xddxhxj3w8jw40s5vy90ryjd4xbspnsh")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-fail: . #t)
                   (:conflicts: . #t)
                   (:docs-error: . #t)
                   (:no-desc: . #t)
                   (:no-tag: . #t)
                   (author:answerw16@gmail.com . #t)
                   (author:jmj@fellowhuman.com . #t)
                   (ring:2 . #t)))
          (source . "https://github.com/nuty/racket-jwt.git")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "9ade29cdfb7a6c0508b96a9d2c5a6463577516ec")
                          (source . "https://github.com/nuty/racket-jwt.git")
                          (source_url
                           .
                           "https://github.com/nuty/racket-jwt.git")))))))
 ("net-lib"
  .
  #hash((author . "mflatt@racket-lang.org")
        (checksum . "9f0ab82754cb36ed44f19bef8f70bb231025d3cc")
        (dependencies . ("srfi-lite-lib" "base"))
        (dependency-names . ("srfi-lite-lib" "base"))
        (description . "mflatt@racket-lang.org")
        (modules . ())
        (name . "net-lib")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/net-lib.zip")
        (tags . ())))
 ("net-test"
  .
  #hash((author . "mflatt@racket-lang.org")
        (checksum . "82021a2f6c95b6b9d66342bd2c8aab79263ad287")
        (dependencies
         .
         ("base"
          "at-exp-lib"
          "compatibility-lib"
          "eli-tester"
          "net-lib"
          "racket-test"
          "rackunit-lib"
          "sandbox-lib"
          "web-server-lib"))
        (dependency-names
         .
         ("base"
          "at-exp-lib"
          "compatibility-lib"
          "eli-tester"
          "net-lib"
          "racket-test"
          "rackunit-lib"
          "sandbox-lib"
          "web-server-lib"))
        (description . "mflatt@racket-lang.org")
        (modules . ())
        (name . "net-test")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/net-test.zip")
        (tags . ())))
 ("net2"
  .
  #hasheq((author . "jackhfirth@gmail.com dedbox@gmail.com")
          (authors . ("jackhfirth@gmail.com" "dedbox@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "net2" "doc/net2@net2/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/net2.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/net2.txt")))
          (checksum . "b4247d52177120ff246b60c400b070dc962ee24b")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("reprovide-lang"
            "base"
            "unix-socket-doc"
            "unix-socket-lib"
            "disposable"
            "racket-doc"
            "scribble-lib"))
          (dependency-names
           .
           ("reprovide-lang"
            "base"
            "unix-socket-doc"
            "unix-socket-lib"
            "disposable"
            "racket-doc"
            "scribble-lib"))
          (description
           .
           "Highly experimental and aspirational networking library. Not yet fit for public consumption.")
          (implies . ())
          (last-checked . 1557339709)
          (last-edit . 1514952527)
          (last-updated . 1515041642)
          (modules
           .
           ((lib "net2/scribblings/util.rkt")
            (lib "net2/scribblings/listener.scrbl")
            (lib "net2/scribblings/main.scrbl")
            (lib "net2/scribblings/data.scrbl")
            (lib "net2/scribblings/tech.rkt")
            (lib "net2/main.rkt")
            (lib "net2/scribblings/connector.scrbl")
            (lib "net2/transport.rkt")
            (lib "net2/scribblings/base.rkt")
            (lib "net2/system.rkt")
            (lib "net2/listener.rkt")
            (lib "net2/scribblings/system.scrbl")
            (lib "net2/scribblings/transport.scrbl")
            (lib "net2/data.rkt")
            (lib "net2/connector.rkt")))
          (name . "net2")
          (nix-sha256
           .
           "15glddf0dh2kgp4fki4d80fw5v4a3fdivcjhik95xmrblmyg7myv")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:dedbox@gmail.com . #t)
                   (author:jackhfirth@gmail.com . #t)
                   (concurrency . #t)
                   (experimental . #t)
                   (io . #t)
                   (network . #t)
                   (ring:2 . #t)))
          (source . "https://github.com/jackfirth/racket-net2.git")
          (tags . ("concurrency" "experimental" "io" "network"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "b4247d52177120ff246b60c400b070dc962ee24b")
                          (source
                           .
                           "https://github.com/jackfirth/racket-net2.git")
                          (source_url
                           .
                           "https://github.com/jackfirth/racket-net2.git")))))))
 ("netrc"
  .
  #hasheq((author . "me@apgwoz.com")
          (authors . ("me@apgwoz.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "netrc" "doc/netrc@netrc/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/netrc.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/netrc.txt")))
          (checksum . "af814d20a77910ab6de2161ac37d02586604a192")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "rackunit-lib" "scribble-lib" "racket-doc"))
          (dependency-names
           .
           ("base" "rackunit-lib" "scribble-lib" "racket-doc"))
          (description . "Find entries in ~/.netrc files")
          (implies . ())
          (last-checked . 1557339709)
          (last-edit . 1437660604)
          (last-updated . 1502816196)
          (modules
           .
           ((lib "netrc/scribblings/netrc.scrbl") (lib "netrc/main.rkt")))
          (name . "netrc")
          (nix-sha256
           .
           "1fvxn76cly5p7n7bvnsw1g4264mfcs9bz1h6xqpv9as88pvyj9pk")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:me@apgwoz.com . #t)
                   (net . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/apg/netrc")
          (tags . ("net"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "af814d20a77910ab6de2161ac37d02586604a192")
                          (source . "git://github.com/apg/netrc")
                          (source_url
                           .
                           "http://github.com/apg/netrc/tree/master")))))))
 ("neu-cs2500-handin"
  .
  #hasheq((author . "leif@leifandersen.net")
          (authors . ("leif@leifandersen.net"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/neu-cs2500-handin.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/neu-cs2500-handin.txt")))
          (checksum . "d48c433d69d75ea03c029ec0207faa928796e757")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base" "gui-lib" "net-lib" "drracket" "drracket-plugin-lib"))
          (dependency-names
           .
           ("base" "gui-lib" "net-lib" "drracket" "drracket-plugin-lib"))
          (description . "")
          (implies . ())
          (last-checked . 1557339709)
          (last-edit . 1471636915)
          (last-updated . 1502816196)
          (modules
           .
           ((lib "neu-cs2500-handin/handin-multi.rkt")
            (lib "neu-cs2500-handin/updater.rkt")
            (lib "neu-cs2500-handin/client-gui.rkt")
            (lib "neu-cs2500-handin/this-collection.rkt")
            (lib "neu-cs2500-handin/client.rkt")))
          (name . "neu-cs2500-handin")
          (nix-sha256
           .
           "1ccam253vr421cgy0531lvminr3b8lj66v1a7db4q5z32j8wa8di")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:no-desc: . #t)
                   (:no-tag: . #t)
                   (author:leif@leifandersen.net . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/nuprl/cs2500-client#f2016")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "d48c433d69d75ea03c029ec0207faa928796e757")
                          (source
                           .
                           "git://github.com/nuprl/cs2500-client#f2016")
                          (source_url
                           .
                           "http://github.com/nuprl/cs2500-client/tree/master#f2016")))))))
 ("neu-fall18"
  .
  #hasheq((author . "matthias@ccs.neu.edu")
          (authors . ("matthias@ccs.neu.edu"))
          (build
           .
           #hash((conflicts-log . ("indirect" "conflicts.txt"))
                 (dep-failure-log . "server/built/deps/neu-fall18.txt")
                 (docs
                  .
                  (("extract"
                    "neu-fall18"
                    "doc/neu-fall18@neu-fall18/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/neu-fall18.txt")
                 (test-failure-log . "server/built/test-fail/neu-fall18.txt")
                 (test-success-log . #f)))
          (checksum . "836419273e3e89aa68e5e73ad0ce06ecf4eec847")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           (("base" "7.0")
            "video-v0-2"
            "scribble-lib"
            "racket-doc"
            "rackunit-lib"))
          (dependency-names
           .
           ("base" "video-v0-2" "scribble-lib" "racket-doc" "rackunit-lib"))
          (description
           .
           "A teachpack for the Fall '19 edition of Fundamentals I (regular) ")
          (implies . ())
          (last-checked . 1557339709)
          (last-edit . 1535842648)
          (last-updated . 1535842759)
          (modules
           .
           ((lib "neu-fall18/scribblings/neu-fall18.scrbl")
            (lib "neu-fall18/main.rkt")
            (lib "neu-fall18/private/students-can-write-this.rkt")
            (lib "neu-fall18/private/our-server.rkt")))
          (name . "neu-fall18")
          (nix-sha256
           .
           "19xxqb05az1f3axv9kzxqwhk75kchpkl6iq5nxn0hw3x5pxwzin5")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-conflicts: . #t)
                   (:build-dep-fail: . #t)
                   (:build-success: . #t)
                   (:docs-error: . #t)
                   (:docs: . #t)
                   (author:matthias@ccs.neu.edu . #t)
                   (ring:2 . #t)
                   (teachpack . #t)))
          (source . "https://github.com/mfelleisen/neu-fall18.git")
          (tags . ("teachpack"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "836419273e3e89aa68e5e73ad0ce06ecf4eec847")
                          (source
                           .
                           "https://github.com/mfelleisen/neu-fall18.git")
                          (source_url
                           .
                           "https://github.com/mfelleisen/neu-fall18.git")))))))
 ("neuron"
  .
  #hasheq((author . "dedbox@gmail.com")
          (authors . ("dedbox@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/neuron.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/neuron.txt")))
          (checksum . "21b78aaddde4199026b9f27fa25ecadf58334d17")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("neuron-lib" "neuron-doc"))
          (dependency-names . ("neuron-lib" "neuron-doc"))
          (description . "Decentralized Software Organisms")
          (implies . ("neuron-lib" "neuron-doc"))
          (last-checked . 1557339709)
          (last-edit . 1531026540)
          (last-updated . 1538222273)
          (modules . ())
          (name . "neuron")
          (nix-sha256
           .
           "09b2v8jpsz939qxji71dy1xihrfx41xfrk5z0ac9nzhv1ypwklmd")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:dedbox@gmail.com . #t)
                   (concurrency . #t)
                   (experimental . #t)
                   (network . #t)
                   (ring:2 . #t)
                   (serialization . #t)))
          (source . "https://github.com/dedbox/racket-neuron.git?path=neuron")
          (tags . ("concurrency" "experimental" "network" "serialization"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "21b78aaddde4199026b9f27fa25ecadf58334d17")
                          (source
                           .
                           "https://github.com/dedbox/racket-neuron.git?path=neuron")
                          (source_url
                           .
                           "https://github.com/dedbox/racket-neuron.git?path=neuron")))))))
 ("neuron-doc"
  .
  #hasheq((author . "dedbox@gmail.com")
          (authors . ("dedbox@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "neuron" "doc/neuron@neuron-doc/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/neuron-doc.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/neuron-doc.txt")))
          (checksum . "21b78aaddde4199026b9f27fa25ecadf58334d17")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "cmx"
            "draw-lib"
            "event-lang"
            "neuron-lib"
            "pict-lib"
            "racket-doc"
            "sandbox-lib"
            "scribble-lib"))
          (dependency-names
           .
           ("base"
            "cmx"
            "draw-lib"
            "event-lang"
            "neuron-lib"
            "pict-lib"
            "racket-doc"
            "sandbox-lib"
            "scribble-lib"))
          (description . "Documentation for neuron")
          (implies . ())
          (last-checked . 1557339709)
          (last-edit . 1523807242)
          (last-updated . 1538222273)
          (modules
           .
           ((lib "neuron/scribblings/base.rkt")
            (lib "neuron/scribblings/reference/control-your-resources.scrbl")
            (lib "neuron/scribblings/reference/concurrency.scrbl")
            (lib "neuron/scribblings/reference.scrbl")
            (lib "neuron/scribblings/neuron.scrbl")
            (lib "neuron/scribblings/reference/data-flow.scrbl")
            (lib "neuron/scribblings/drawings.rkt")
            (lib "neuron/scribblings/reference/evaluation.scrbl")
            (lib "neuron/scribblings/guide.scrbl")))
          (name . "neuron-doc")
          (nix-sha256
           .
           "09b2v8jpsz939qxji71dy1xihrfx41xfrk5z0ac9nzhv1ypwklmd")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (:no-tag: . #t)
                   (author:dedbox@gmail.com . #t)
                   (ring:2 . #t)))
          (source
           .
           "https://github.com/dedbox/racket-neuron.git?path=neuron-doc")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "21b78aaddde4199026b9f27fa25ecadf58334d17")
                          (source
                           .
                           "https://github.com/dedbox/racket-neuron.git?path=neuron-doc")
                          (source_url
                           .
                           "https://github.com/dedbox/racket-neuron.git?path=neuron-doc")))))))
 ("neuron-lib"
  .
  #hasheq((author . "dedbox@gmail.com")
          (authors . ("dedbox@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/neuron-lib.txt")
                 (test-failure-log . "server/built/test-fail/neuron-lib.txt")
                 (test-success-log . #f)))
          (checksum . "21b78aaddde4199026b9f27fa25ecadf58334d17")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "cmx" "event-lang" "rackunit-lib"))
          (dependency-names . ("base" "cmx" "event-lang" "rackunit-lib"))
          (description . "Impelementation of neuron")
          (implies . ())
          (last-checked . 1557339710)
          (last-edit . 1523807272)
          (last-updated . 1538222273)
          (modules
           .
           ((lib "neuron/process.rkt")
            (lib "neuron/network/tcp.rkt")
            (lib "neuron/process/control.rkt")
            (lib "neuron/process/messaging.rkt")
            (lib "neuron/evaluation.rkt")
            (lib "neuron/socket.rkt")
            (lib "neuron/main.rkt")
            (lib "neuron/network/udp.rkt")
            (lib "neuron/event.rkt")
            (lib "neuron/codec.rkt")
            (lib "neuron/syntax.rkt")))
          (name . "neuron-lib")
          (nix-sha256
           .
           "09b2v8jpsz939qxji71dy1xihrfx41xfrk5z0ac9nzhv1ypwklmd")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:no-tag: . #t)
                   (author:dedbox@gmail.com . #t)
                   (ring:2 . #t)))
          (source
           .
           "https://github.com/dedbox/racket-neuron.git?path=neuron-lib")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "21b78aaddde4199026b9f27fa25ecadf58334d17")
                          (source
                           .
                           "https://github.com/dedbox/racket-neuron.git?path=neuron-lib")
                          (source_url
                           .
                           "https://github.com/dedbox/racket-neuron.git?path=neuron-lib")))))))
 ("neuron-shell"
  .
  #hasheq((author . "dedbox@gmail.com")
          (authors . ("dedbox@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . "server/built/fail/neuron-shell.txt")
                 (min-failure-log . #f)
                 (success-log . #f)
                 (test-failure-log . #f)
                 (test-success-log . #f)))
          (checksum . "6f60ede1866a8a419e44972ea11220d0457e8acb")
          (checksum-error . #f)
          (conflicts . ())
          (date-added . 1555373198)
          (dependencies . ("base" "scribble-lib"))
          (dependency-names . ("base" "scribble-lib"))
          (description . "Interactive UI for Neuron")
          (implies . ())
          (last-checked . 1557339710)
          (last-edit . 1555608963)
          (last-updated . 1555625168)
          (modules
           .
           ((lib "scribblings/neuron-shell.scrbl") (lib "neuron/shell.rkt")))
          (name . "neuron-shell")
          (nix-sha256
           .
           "07qyc9kz20jg2247vn0219fgsnnfcqg8k867llj69dkn7z2hsbad")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-fail: . #t)
                   (:no-tag: . #t)
                   (author:dedbox@gmail.com . #t)
                   (ring:2 . #t)))
          (source . "https://github.com/dedbox/racket-neuron-shell.git")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "6f60ede1866a8a419e44972ea11220d0457e8acb")
                          (source
                           .
                           "https://github.com/dedbox/racket-neuron-shell.git")
                          (source_url
                           .
                           "https://github.com/dedbox/racket-neuron-shell.git")))))))
 ("nix"
  .
  #hasheq((author . "jubnzv@gmail.com")
          (authors . ("jubnzv@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . "server/built/deps/nix.txt")
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/nix.txt")
                 (test-failure-log . "server/built/test-fail/nix.txt")
                 (test-success-log . #f)))
          (checksum . "a0e4107110c15880606b6098b97b73654e4cb50a")
          (checksum-error . #f)
          (conflicts . ())
          (date-added . 1551250919)
          (dependencies . ())
          (dependency-names . ())
          (description . "Racket bindings to common UNIX APIs.")
          (implies . ())
          (last-checked . 1557339710)
          (last-edit . 1551250919)
          (last-updated . 1551250919)
          (modules
           .
           ((lib "nix/nix/private/errors.rkt")
            (lib "nix/nix/test.rkt")
            (lib "nix/nix/main.rkt")
            (lib "nix/nix/shm.rkt")
            (lib "nix/nix/defines.rkt")
            (lib "nix/nix/semaphores.rkt")))
          (name . "nix")
          (nix-sha256
           .
           "0ggxhrbhbgz850qqfvx5bq5abx9rs5nmr294yldy462marwl367s")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-dep-fail: . #t)
                   (:build-success: . #t)
                   (author:jubnzv@gmail.com . #t)
                   (ffi . #t)
                   (libc . #t)
                   (ring:2 . #t)
                   (systems . #t)
                   (unix . #t)))
          (source . "https://github.com/jubnzv/nix.rkt.git")
          (tags . ("ffi" "libc" "systems" "unix"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "a0e4107110c15880606b6098b97b73654e4cb50a")
                          (source . "https://github.com/jubnzv/nix.rkt.git")
                          (source_url
                           .
                           "https://github.com/jubnzv/nix.rkt.git")))))))
 ("nlopt"
  .
  #hasheq((author . "kominek@gmail.com")
          (authors . ("kominek@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . "server/built/deps/nlopt.txt")
                 (docs . (("main" "nlopt" "doc/nlopt@nlopt/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/nlopt.txt")
                 (test-failure-log . "server/built/test-fail/nlopt.txt")
                 (test-success-log . #f)))
          (checksum . "52946146fe798bb35d1e601500d87e34f4c7365b")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base" "math-lib" "math-doc" "racket-doc" "scribble-lib"))
          (dependency-names
           .
           ("base" "math-lib" "math-doc" "racket-doc" "scribble-lib"))
          (description
           .
           "FFI wrapper for the NLopt nonlinear optimization library.")
          (implies . ())
          (last-checked . 1557339710)
          (last-edit . 1430604051)
          (last-updated . 1547998902)
          (modules
           .
           ((lib "nlopt/docs/nlopt.scrbl")
            (lib "nlopt/main.rkt")
            (lib "nlopt/safe.rkt")
            (lib "nlopt/docs/algorithms.scrbl")
            (lib "examples/unsafe-example2.rkt")
            (lib "nlopt/docs/safe.scrbl")
            (lib "examples/highlevel-example.rkt")
            (lib "examples/safe-example2.rkt")
            (lib "examples/unsafe-example1.rkt")
            (lib "examples/stress-test.rkt")
            (lib "nlopt/highlevel.rkt")
            (lib "examples/safe-example1.rkt")
            (lib "nlopt/docs/unsafe.scrbl")
            (lib "nlopt/unsafe.rkt")
            (lib "tests/highlevel.rkt")
            (lib "nlopt/docs/highlevel.scrbl")
            (lib "tests/unsafe.rkt")))
          (name . "nlopt")
          (nix-sha256
           .
           "1mq4arkaj6zhk47qcrcfkrphh65y1bnlzz1dhmajnxyz33cfcbn4")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-dep-fail: . #t)
                   (:build-success: . #t)
                   (:docs: . #t)
                   (author:kominek@gmail.com . #t)
                   (ffi . #t)
                   (numerical . #t)
                   (optimization . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/jkominek/nlopt")
          (tags . ("ffi" "numerical" "optimization"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "52946146fe798bb35d1e601500d87e34f4c7365b")
                          (source . "git://github.com/jkominek/nlopt")
                          (source_url
                           .
                           "http://github.com/jkominek/nlopt/tree/master")))))))
 ("no-vert-bar-lang"
  .
  #hasheq((author . "alexander@knauth.org")
          (authors . ("alexander@knauth.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "no-vert-bar-lang"
                    "doc/no-vert-bar-lang@no-vert-bar-lang/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/no-vert-bar-lang.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/no-vert-bar-lang.txt")))
          (checksum . "3e31489f2b3aff73f50cade704b724b5578af7fb")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "rackunit" "scribble-lib" "racket-doc"))
          (dependency-names . ("base" "rackunit" "scribble-lib" "racket-doc"))
          (description
           .
           "a lang-extension that reads `|` as a normal character")
          (implies . ())
          (last-checked . 1557339710)
          (last-edit . 1468330488)
          (last-updated . 1549910535)
          (modules
           .
           ((lib "no-vert-bar/scribblings/no-vert-bar-lang.scrbl")
            (lib "no-vert-bar/tests/test.rkt")
            (lib "no-vert-bar/reader.rkt")
            (lib "no-backslash/lang/reader.rkt")
            (lib "no-backslash/tests/test.rkt")
            (lib "no-backslash/reader.rkt")
            (lib "no-vert-bar/lang/reader.rkt")))
          (name . "no-vert-bar-lang")
          (nix-sha256
           .
           "0vsgn7qhx145fiq5c988q3vjvm3sgf1j3blcxkgp1wr5v7g13chi")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:alexander@knauth.org . #t)
                   (lang-extension . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/AlexKnauth/no-vert-bar-lang")
          (tags . ("lang-extension"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "3e31489f2b3aff73f50cade704b724b5578af7fb")
                          (source
                           .
                           "git://github.com/AlexKnauth/no-vert-bar-lang")
                          (source_url
                           .
                           "http://github.com/AlexKnauth/no-vert-bar-lang/tree/master")))))))
 ("non-det"
  .
  #hasheq((author . "jay.mccarthy@gmail.com")
          (authors . ("jay.mccarthy@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . "server/built/deps/non-det.txt")
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/non-det.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/non-det.txt")))
          (checksum . "e26cdb7cb8152df912e239323fad8bb6b3a8b05f")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("chk-lib" "base" "text-table"))
          (dependency-names . ("chk-lib" "base" "text-table"))
          (description . "Racket non-determinism")
          (implies . ())
          (last-checked . 1557339710)
          (last-edit . 1511196489)
          (last-updated . 1512418057)
          (modules
           .
           ((lib "non-det/examples/steam-cart.rkt")
            (lib "non-det/logic.rkt")
            (lib "non-det/examples/linear-std.rkt")
            (lib "non-det/main.rkt")
            (lib "non-det/opt.rkt")))
          (name . "non-det")
          (nix-sha256
           .
           "12gqids2g2cnn8vgzwkpzwmx1mzykp1i8lisq1abvqhaq1y0vrpl")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-dep-fail: . #t)
                   (:build-success: . #t)
                   (author:jay.mccarthy@gmail.com . #t)
                   (logic . #t)
                   (ring:1 . #t)))
          (source . "https://github.com/jeapostrophe/non-det.git")
          (tags . ("logic"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "e26cdb7cb8152df912e239323fad8bb6b3a8b05f")
                          (source
                           .
                           "https://github.com/jeapostrophe/non-det.git")
                          (source_url
                           .
                           "https://github.com/jeapostrophe/non-det.git")))))))
 ("north"
  .
  #hasheq((author . "bogdan@defn.io")
          (authors . ("bogdan@defn.io"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "north" "doc/north@north/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/north.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/north.txt")))
          (checksum . "ee8e98891e2d5652bf6e78a0cfac0d11c337a921")
          (checksum-error . #f)
          (conflicts . ())
          (date-added . 1548674759)
          (dependencies
           .
           ("base"
            "db-lib"
            "gregor-lib"
            "at-exp-lib"
            "racket-doc"
            "rackunit-lib"
            "scribble-lib"))
          (dependency-names
           .
           ("base"
            "db-lib"
            "gregor-lib"
            "at-exp-lib"
            "racket-doc"
            "rackunit-lib"
            "scribble-lib"))
          (description . "A database migration tool.")
          (implies . ())
          (last-checked . 1557339710)
          (last-edit . 1548674759)
          (last-updated . 1557303709)
          (modules
           .
           ((lib "north/cli.rkt")
            (lib "north/adapter/sqlite.rkt")
            (lib "north/north.scrbl")
            (lib "north/lang/reader.rkt")
            (lib "north/adapter/postgres.rkt")
            (lib "north/main.rkt")
            (lib "north/adapter/base.rkt")
            (lib "north/base.rkt")))
          (name . "north")
          (nix-sha256
           .
           "08d74a6xa95wi5xlsx7iafzlsi3jba21cj33zig2mgj53by87g1a")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:bogdan@defn.io . #t)
                   (db . #t)
                   (migrations . #t)
                   (ring:2 . #t)
                   (web . #t)))
          (source . "https://github.com/Bogdanp/racket-north.git?path=north")
          (tags . ("db" "migrations" "web"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "ee8e98891e2d5652bf6e78a0cfac0d11c337a921")
                          (source
                           .
                           "https://github.com/Bogdanp/racket-north.git?path=north")
                          (source_url
                           .
                           "https://github.com/Bogdanp/racket-north.git?path=north")))))))
 ("numformat-old"
  .
  #hasheq((author . "neil@neilvandyke.org")
          (authors . ("neil@neilvandyke.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "numformat-old"
                    "doc/numformat-old@numformat-old/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/numformat-old.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/numformat-old.txt")))
          (checksum . "e0b44f190a7a8c03169e4671a5d15cec5a619598")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base" "mcfly" "racket-doc" "scribble-lib" "overeasy"))
          (dependency-names
           .
           ("base" "mcfly" "racket-doc" "scribble-lib" "overeasy"))
          (description . "Number Formatting")
          (implies . ())
          (last-checked . 1557339710)
          (last-edit . 1456794591)
          (last-updated . 1502816197)
          (modules
           .
           ((lib "numformat-old/numformat-old.scrbl")
            (lib "numformat-old/main.rkt")))
          (name . "numformat-old")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:neil@neilvandyke.org . #t)
                   (finance . #t)
                   (ring:1 . #t)))
          (source . "http://www.neilvandyke.org/racket/numformat-old.zip")
          (tags . ("finance"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "e0b44f190a7a8c03169e4671a5d15cec5a619598")
                          (source
                           .
                           "http://www.neilvandyke.org/racket/numformat-old.zip")
                          (source_url
                           .
                           "http://www.neilvandyke.org/racket/numformat-old.zip")))))))
 ("numspell"
  .
  #hasheq((author . "neil@neilvandyke.org")
          (authors . ("neil@neilvandyke.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "numspell" "doc/numspell@numspell/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/numspell.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/numspell.txt")))
          (checksum . "60f30a535e6e11bb4c3596af14708fb6cd9402ea")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base" "mcfly" "racket-doc" "scribble-lib" "overeasy"))
          (dependency-names
           .
           ("base" "mcfly" "racket-doc" "scribble-lib" "overeasy"))
          (description . "Spelling Numbers as English")
          (implies . ())
          (last-checked . 1557339711)
          (last-edit . 1456649070)
          (last-updated . 1502816197)
          (modules
           .
           ((lib "numspell/numspell.scrbl") (lib "numspell/main.rkt")))
          (name . "numspell")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:neil@neilvandyke.org . #t)
                   (finance . #t)
                   (ring:1 . #t)))
          (source . "http://www.neilvandyke.org/racket/numspell.zip")
          (tags . ("finance"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "60f30a535e6e11bb4c3596af14708fb6cd9402ea")
                          (source
                           .
                           "http://www.neilvandyke.org/racket/numspell.zip")
                          (source_url
                           .
                           "http://www.neilvandyke.org/racket/numspell.zip")))))))
 ("nvim-client"
  .
  #hasheq((author . "hiphish@posteo.de hiphish@openmailbox.org")
          (authors . ("hiphish@posteo.de" "hiphish@openmailbox.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "nvim-client"
                    "doc/nvim-client@nvim-client/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/nvim-client.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/nvim-client.txt")))
          (checksum . "c7d0a3d7ceaebd59955e6d2aee16352098c82d8a")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "msgpack"
            "unix-socket-lib"
            "typed-racket-lib"
            "typed-racket-more"
            "scribble-lib"
            "unix-socket-doc"
            "rackunit-lib"
            "racket-doc"
            "scribble-lib"))
          (dependency-names
           .
           ("base"
            "msgpack"
            "unix-socket-lib"
            "typed-racket-lib"
            "typed-racket-more"
            "scribble-lib"
            "unix-socket-doc"
            "rackunit-lib"
            "racket-doc"
            "scribble-lib"))
          (description . "API client for the Neovim text editor")
          (implies . ())
          (last-checked . 1557339711)
          (last-edit . 1541802329)
          (last-updated . 1548031518)
          (modules
           .
           ((lib "nvim/client/exn-fail-rpc.rkt")
            (lib "nvim/api/tabpage.rkt")
            (lib "nvim/client/types.rkt")
            (lib "nvim/scribblings/intro.scrbl")
            (lib "nvim/scribblings/api.scrbl")
            (lib "nvim/scribblings/rplugin.scrbl")
            (lib "nvim/api/buffer.rkt")
            (lib "nvim/scribblings/nvim-client.scrbl")
            (lib "nvim/client.rkt")
            (lib "nvim/client/rpc-session.rkt")
            (lib "nvim/scribblings/rpc.scrbl")
            (lib "nvim/rplugin.rkt")
            (lib "nvim/main.rkt")
            (lib "nvim/api/window.rkt")
            (lib "nvim/api.rkt")
            (lib "nvim/api/nvim.rkt")))
          (name . "nvim-client")
          (nix-sha256
           .
           "0hczdaah91bm19d1ilnrpzpf3ds4wmnl6n2dxjpmgas43hpiyqa4")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:hiphish@openmailbox.org . #t)
                   (author:hiphish@posteo.de . #t)
                   (neovim . #t)
                   (nvim . #t)
                   (ring:1 . #t)))
          (source
           .
           "https://gitlab.com/HiPhish/neovim.rkt.git?path=nvim-client")
          (tags . ("neovim" "nvim"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "c7d0a3d7ceaebd59955e6d2aee16352098c82d8a")
                          (source
                           .
                           "https://gitlab.com/HiPhish/neovim.rkt.git?path=nvim-client")
                          (source_url
                           .
                           "https://gitlab.com/HiPhish/neovim.rkt.git?path=nvim-client")))))))
 ("ocelot"
  .
  #hasheq((author . "bornholt@cs.washington.edu")
          (authors . ("bornholt@cs.washington.edu"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "ocelot" "doc/ocelot@ocelot/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/ocelot.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/ocelot.txt")))
          (checksum . "58b687cdf22f6c1db4b3322fdbc5b82e9d1bce2b")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "rackunit-lib"
            "sandbox-lib"
            "rosette"
            "scribble-lib"
            "racket-doc"))
          (dependency-names
           .
           ("base"
            "rackunit-lib"
            "sandbox-lib"
            "rosette"
            "scribble-lib"
            "racket-doc"))
          (description . "A solver-aided relational logic DSL")
          (implies . ())
          (last-checked . 1557339712)
          (last-edit . 1491969739)
          (last-updated . 1505334600)
          (modules
           .
           ((lib "ocelot/lib/simplify.rkt")
            (lib "ocelot/test/util.rkt")
            (lib "ocelot/engine/matrix-ops.rkt")
            (lib "ocelot/test/symbolic/alloy/ceilingsandfloors.rkt")
            (lib "ocelot/lang/sketch.rkt")
            (lib "ocelot/lib/simplify-solve.rkt")
            (lib "ocelot/test/symbolic/symmetry-test.rkt")
            (lib "ocelot/test/symbolic/alloy/basic.rkt")
            (lib "ocelot/engine/tuple.rkt")
            (lib "ocelot/test/symbolic/symbolic-test.rkt")
            (lib "ocelot/lang/universe.rkt")
            (lib "ocelot/engine/engine.rkt")
            (lib "ocelot/lib/alloy.rkt")
            (lib "ocelot/lang/ast.rkt")
            (lib "ocelot/lang/bounds.rkt")
            (lib "ocelot/test/symbolic/simplify-solve-test.rkt")
            (lib "ocelot/engine/interpretation.rkt")
            (lib "ocelot/test/symbolic/alloy/test.rkt")
            (lib "ocelot/lib/print.rkt")
            (lib "ocelot/ocelot.rkt")
            (lib "ocelot/test/symbolic/simplify-test.rkt")
            (lib "ocelot/scribblings/ocelot.scrbl")
            (lib "ocelot/scribblings/log.rkt")
            (lib "ocelot/engine/matrix.rkt")
            (lib "ocelot/test/concrete/concrete-test.rkt")
            (lib "ocelot/engine/symmetry.rkt")
            (lib "ocelot/main.rkt")))
          (name . "ocelot")
          (nix-sha256
           .
           "115c4xppapwv7yldhacingrx2klks3vbqrjrsdyrpfqqgvr3g7pf")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (alloy . #t)
                   (author:bornholt@cs.washington.edu . #t)
                   (relational . #t)
                   (ring:1 . #t)
                   (rosette . #t)))
          (source . "git://github.com/jamesbornholt/ocelot")
          (tags . ("alloy" "relational" "rosette"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "58b687cdf22f6c1db4b3322fdbc5b82e9d1bce2b")
                          (source . "git://github.com/jamesbornholt/ocelot")
                          (source_url
                           .
                           "http://github.com/jamesbornholt/ocelot/tree/master")))))))
 ("oii-422-handin-client"
  .
  #hasheq((author . "ifigueroap@gmail.com ")
          (authors . ("ifigueroap@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log
                  .
                  "server/built/install/oii-422-handin-client.txt")
                 (test-failure-log
                  .
                  "server/built/test-fail/oii-422-handin-client.txt")
                 (test-success-log . #f)))
          (checksum . "29d62748d335a1ab283efc3e28c5c93c3737501a")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base" "drracket" "drracket-plugin-lib" "gui-lib" "net-lib"))
          (dependency-names
           .
           ("base" "drracket" "drracket-plugin-lib" "gui-lib" "net-lib"))
          (description . "Handin Client for PUCV PL course OII-422")
          (implies . ())
          (last-checked . 1557339712)
          (last-edit . 1440188264)
          (last-updated . 1502816198)
          (modules
           .
           ((lib "oii-422-handin-client/client.rkt")
            (lib "oii-422-handin-client/this-collection.rkt")
            (lib "oii-422-handin-client/handin-multi.rkt")
            (lib "oii-422-handin-client/client-gui.rkt")
            (lib "oii-422-handin-client/updater.rkt")))
          (name . "oii-422-handin-client")
          (nix-sha256
           .
           "01pk0pkyld49ri9y1c7k7mvs0j3lifplzjrycx96pizgixb2pqam")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:no-tag: . #t)
                   (author:ifigueroap@gmail.com . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/ifigueroap/oii-422-handin-client.git")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "29d62748d335a1ab283efc3e28c5c93c3737501a")
                          (source
                           .
                           "git://github.com/ifigueroap/oii-422-handin-client.git")
                          (source_url
                           .
                           "http://github.com/ifigueroap/oii-422-handin-client.git/tree/master")))))))
 ("onlog"
  .
  #hasheq((author . "med.hur@gmail.com")
          (authors . ("med.hur@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("none" "onlog")))
                 (failure-log . "server/built/fail/onlog.txt")
                 (min-failure-log . #f)
                 (success-log . #f)
                 (test-failure-log . #f)
                 (test-success-log . #f)))
          (checksum . "d6756ca99c8f647f47126716fb24698a7f77c80f")
          (checksum-error . #f)
          (conflicts . ())
          (date-added . 1555013294)
          (dependencies . ())
          (dependency-names . ())
          (description . "Perform operations on log files")
          (implies . ())
          (last-checked . 1557339712)
          (last-edit . 1555055196)
          (last-updated . 1555055196)
          (modules . ((lib "onlog/main.rkt") (lib "onlog/onlog.scrbl")))
          (name . "onlog")
          (nix-sha256
           .
           "1zv3mycncr32z5z4k7n9kl2ldy39wsg4dq78g16w3g0mzngxd2bz")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-fail: . #t)
                   (:docs-error: . #t)
                   (author:med.hur@gmail.com . #t)
                   (commandline . #t)
                   (logging . #t)
                   (ring:2 . #t)
                   (tools . #t)))
          (source . "https://github.com/fmind/onlog.git")
          (tags . ("commandline" "logging" "tools"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "d6756ca99c8f647f47126716fb24698a7f77c80f")
                          (source . "https://github.com/fmind/onlog.git")
                          (source_url
                           .
                           "https://github.com/fmind/onlog.git")))))))
 ("open-app"
  .
  #hasheq((author . "schlee.simon@gmail.com")
          (authors . ("schlee.simon@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "open-app" "doc/open-app@open-app/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/open-app.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/open-app.txt")))
          (checksum . "5503f0d2b5e398c864e6bdacfac9c672bf9b9869")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "scribble-lib" "racket-doc" "rackunit-lib"))
          (dependency-names
           .
           ("base" "scribble-lib" "racket-doc" "rackunit-lib"))
          (description
           .
           "A utility for opening a file or url with the default application.")
          (implies . ())
          (last-checked . 1557339712)
          (last-edit . 1527421314)
          (last-updated . 1527871421)
          (modules
           .
           ((lib "open-app/main.rkt")
            (lib "open-app/scribblings/open-app.scrbl")))
          (name . "open-app")
          (nix-sha256
           .
           "0i3cicyl6x9sx8ly93fv4q34i979kg9plpzg1bjh0vd9c7r7d6bf")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (app . #t)
                   (application . #t)
                   (author:schlee.simon@gmail.com . #t)
                   (ring:2 . #t)
                   (util . #t)
                   (utilities . #t)
                   (utility . #t)))
          (source . "https://github.com/SimonLSchlee/open-app.git")
          (tags . ("app" "application" "util" "utilities" "utility"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "5503f0d2b5e398c864e6bdacfac9c672bf9b9869")
                          (source
                           .
                           "https://github.com/SimonLSchlee/open-app.git")
                          (source_url
                           .
                           "https://github.com/SimonLSchlee/open-app.git")))))))
 ("openal"
  .
  #hasheq((author . "jay.mccarthy@gmail.com")
          (authors . ("jay.mccarthy@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "openal" "doc/openal@openal/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/openal.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/openal.txt")))
          (checksum . "50b52525426f4bf2e0c3fd4c2ab4d0c59598e99a")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "racket-doc" "rackunit-lib" "scribble-lib"))
          (dependency-names
           .
           ("base" "racket-doc" "rackunit-lib" "scribble-lib"))
          (description . "FFI for OpenAL")
          (implies . ())
          (last-checked . 1557339712)
          (last-edit . 1447718757)
          (last-updated . 1504538990)
          (modules
           .
           ((lib "openal/main.rkt")
            (lib "openal/path.rkt")
            (lib "openal/openal.scrbl")))
          (name . "openal")
          (nix-sha256
           .
           "1gl4sag5v5zp44i4rjp5wp4knqnf1icnxw8sxl7x3a2rr6f28srs")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (audio . #t)
                   (author:jay.mccarthy@gmail.com . #t)
                   (ffi . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/jeapostrophe/openal")
          (tags . ("audio" "ffi"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "50b52525426f4bf2e0c3fd4c2ab4d0c59598e99a")
                          (source . "git://github.com/jeapostrophe/openal")
                          (source_url
                           .
                           "http://github.com/jeapostrophe/openal/tree/master")))))))
 ("opencl"
  .
  #hasheq((author . "jay.mccarthy@gmail.com")
          (authors . ("jay.mccarthy@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "opencl" "doc/opencl@opencl/index.html")))
                 (failure-log . #f)
                 (min-failure-log . "server/built/min-fail/opencl.txt")
                 (success-log . "server/built/install/opencl.txt")
                 (test-failure-log . "server/built/test-fail/opencl.txt")
                 (test-success-log . #f)))
          (checksum . "f984050b0c02beb6df186d1d531c4a92a98df1a1")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base" "scribble-lib" "superc" "at-exp-lib" "racket-doc"))
          (dependency-names
           .
           ("base" "scribble-lib" "superc" "at-exp-lib" "racket-doc"))
          (description . "A Racket interface to OpenCL using an FFI")
          (implies . ())
          (last-checked . 1557339712)
          (last-edit . 1353449271)
          (last-updated . 1502816199)
          (modules
           .
           ((lib
             "tests/opencl/samples/nvidiaSamples/oclDotProduct/oclDotProduct.rkt")
            (lib
             "tests/opencl/samples/atiSamples/BinarySearch/BinarySearch.rkt")
            (lib "opencl/c/lib.rkt")
            (lib "opencl/c/constants.rkt")
            (lib "opencl/c/4-1.rkt")
            (lib
             "tests/opencl/samples/atiSamples/BitonicSort/BitonicSort.rkt")
            (lib "opencl/c/util.rkt")
            (lib "tests/opencl/test.rkt")
            (lib "opencl/c/include/cl.rkt")
            (lib "tests/opencl/examples/vmult/c-kernel.rkt")
            (lib
             "tests/opencl/samples/atiSamples/MatrixMultiplication/MatrixMultiplication.rkt")
            (lib "tests/opencl/examples/vmult/make-data.rkt")
            (lib "tests/opencl/samples/atiSamples/Template/Template.rkt")
            (lib
             "tests/opencl/samples/atiSamples/FloydWarshall/FloydWarshall.rkt")
            (lib
             "tests/opencl/samples/nvidiaSamples/oclDeviceQuery/oclDeviceQuery.rkt")
            (lib "opencl/c/5-10.rkt")
            (lib "tests/opencl/examples/pps/scan.rkt")
            (lib "opencl/scribblings/opencl.scrbl")
            (lib "opencl/c/syntax.rkt")
            (lib "opencl/c/5-5.rkt")
            (lib "tests/opencl/examples/vmult/racket-unsafe-vector.rkt")
            (lib
             "tests/opencl/samples/nvidiaSamples/oclBandwidthTest/oclBandwidthTest.rkt")
            (lib "opencl/c/5-3.rkt")
            (lib
             "tests/opencl/samples/atiSamples/MatrixTranspose/MatrixTranspose.rkt")
            (lib
             "tests/opencl/samples/atiSamples/BlackScholes/BlackScholes.rkt")
            (lib "tests/opencl/examples/vmult/racket-vector.rkt")
            (lib "opencl/racket.rkt")
            (lib "opencl/c/5-6.rkt")
            (lib "opencl/c/tsyntax.rkt")
            (lib "opencl/c/5-2.rkt")
            (lib "opencl/scribblings/c/4.scrbl")
            (lib "opencl/c/5.rkt")
            (lib "opencl/c/4-2.rkt")
            (lib "tests/opencl/examples/vmult/opencl.rkt")
            (lib
             "tests/opencl/samples/atiSamples/FastWalshTransform/FastWalshTransform.rkt")
            (lib "tests/opencl/samples/atiSamples/EigenValue/EigenValue.rkt")
            (lib "tests/opencl/samples/atiSamples/DwtHaar1D/DwtHaar1D.rkt")
            (lib "opencl/c/5-7.rkt")
            (lib "opencl/scribblings/c/types.scrbl")
            (lib
             "tests/opencl/samples/atiSamples/BinomialOption/BinomialOption.rkt")
            (lib
             "tests/opencl/samples/nvidiaSamples/oclTranspose/oclTranspose.rkt")
            (lib "opencl/c/5-1.rkt")
            (lib
             "tests/opencl/samples/nvidiaSamples/oclVectorAdd/oclVectorAdd.rkt")
            (lib "opencl/scribblings/c/5.scrbl")
            (lib "tests/opencl/examples/vmult/racket-list.rkt")
            (lib "tests/opencl/samples/nvidiaSamples/utils/utils.rkt")
            (lib "opencl/scribblings/c.scrbl")
            (lib "opencl/c/5-4.rkt")
            (lib "tests/opencl/examples/matrix-transpose/transpose.rkt")
            (lib "opencl/c/4.rkt")
            (lib "opencl/c/include/extract-defines.rkt")
            (lib "opencl/c/5-9.rkt")
            (lib "opencl/c/4-3.rkt")
            (lib "opencl/c/types.rkt")
            (lib
             "tests/opencl/samples/nvidiaSamples/oclMatVecMul/oclMatVecMul.rkt")
            (lib "opencl/c/5-8.rkt")
            (lib "tests/opencl/samples/atiSamples/atiUtils/utils.rkt")
            (lib "opencl/c.rkt")
            (lib "tests/opencl/examples/vmult/c-loop.rkt")))
          (name . "opencl")
          (nix-sha256
           .
           "1q4agl1125ksyps616q58lglzymp7dp7qw63jbvfja2zcn947yb1")
          (ring . 1)
          (search-terms
           .
           #hasheq((|| . #t)
                   (:build-success: . #t)
                   (:docs: . #t)
                   (author:jay.mccarthy@gmail.com . #t)
                   (ffi . #t)
                   (parallel . #t)
                   (ring:1 . #t)))
          (source . "github://github.com/jeapostrophe/opencl/master")
          (tags . ("" "ffi" "parallel"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "f984050b0c02beb6df186d1d531c4a92a98df1a1")
                          (source
                           .
                           "github://github.com/jeapostrophe/opencl/master")
                          (source_url
                           .
                           "http://github.com/jeapostrophe/opencl/tree/master")))))))
 ("opencpu"
  .
  #hasheq((author . "philip@philipmcgrath.com")
          (authors . ("philip@philipmcgrath.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "opencpu" "doc/opencpu@opencpu/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/opencpu.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/opencpu.txt")))
          (checksum . "ab5433418a3a19aeafe239901c3a530d745e2dbd")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "rackunit-lib"
            "adjutor"
            "scribble-lib"
            "racket-doc"
            "net-doc"))
          (dependency-names
           .
           ("base"
            "rackunit-lib"
            "adjutor"
            "scribble-lib"
            "racket-doc"
            "net-doc"))
          (description
           .
           "A Racket library for calling R functions through the OpenCPU API.")
          (implies . ())
          (last-checked . 1557339712)
          (last-edit . 1501019293)
          (last-updated . 1535932669)
          (modules
           .
           ((lib "opencpu/scribblings/opencpu.scrbl")
            (lib "opencpu/main.rkt")))
          (name . "opencpu")
          (nix-sha256
           .
           "092f1dic9w4bkwajzh90ds21srwshgi9cq2qx946c6j56gcfbahb")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (API . #t)
                   (R . #t)
                   (api . #t)
                   (author:philip@philipmcgrath.com . #t)
                   (net . #t)
                   (ring:1 . #t)
                   (web . #t)))
          (source . "git://github.com/LiberalArtist/opencpu")
          (tags . ("API" "api" "net" "R" "web"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "ab5433418a3a19aeafe239901c3a530d745e2dbd")
                          (source . "git://github.com/LiberalArtist/opencpu")
                          (source_url
                           .
                           "http://github.com/LiberalArtist/opencpu/tree/master")))))))
 ("opencv"
  .
  #hasheq((author . "petersamarin@gmail.com")
          (authors . ("petersamarin@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/opencv.txt")
                 (test-failure-log . "server/built/test-fail/opencv.txt")
                 (test-success-log . #f)))
          (checksum . "8124eb6b620769137656547e83f9d9587ab37c23")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base"))
          (dependency-names . ("base"))
          (description . "FFI bindings to the OpenCV library")
          (implies . ())
          (last-checked . 1557339712)
          (last-edit . 1496527503)
          (last-updated . 1502816199)
          (modules
           .
           ((lib "tutorials/08_objdetect/CascadeClassifier.rkt")
            (lib "tutorials/03_imgproc/01-smoothing-images.rkt")
            (lib "opencv/objdetect.rkt")
            (lib "opencv/types.rkt")
            (lib "tutorials/03_imgproc/VideoSimple.rkt")
            (lib "tutorials/06_feature2d/01-Harris-corner-detector.rkt")
            (lib "opencv/main.rkt")
            (lib "opencv/core.rkt")
            (lib "opencv/imgproc.rkt")
            (lib "opencv/calib3d.rkt")
            (lib "tutorials/03_imgproc/VideoSobel.rkt")
            (lib "tutorials/03_imgproc/SimpleImageProcessing.rkt")
            (lib
             "tutorials/03_imgproc/20-2-finding-contours-in-your-video.rkt")
            (lib "opencv/utilities.rkt")
            (lib "tutorials/01_introduction/02-load-save-image.rkt")
            (lib "opencv/videoio.rkt")
            (lib "tutorials/01_introduction/01-display-image.rkt")
            (lib "tutorials/03_imgproc/VideoCanny.rkt")
            (lib "opencv/highgui.rkt")))
          (name . "opencv")
          (nix-sha256
           .
           "0qis0gbcchhxi7f3v4ijrdyh3wbdnf10v0vvam2pqx6m53i59hfr")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:petersamarin@gmail.com . #t)
                   (computer-vision . #t)
                   (ffi . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/oetr/racket-opencv")
          (tags . ("computer-vision" "ffi"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "8124eb6b620769137656547e83f9d9587ab37c23")
                          (source . "git://github.com/oetr/racket-opencv")
                          (source_url
                           .
                           "http://github.com/oetr/racket-opencv/tree/master")))))))
 ("opengl"
  .
  #hasheq((author . "stephanh42@gmail.com")
          (authors . ("stephanh42@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "opengl" "doc/opengl@opengl/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/opengl.txt")
                 (test-failure-log . "server/built/test-fail/opengl.txt")
                 (test-success-log . #f)))
          (checksum . "1aaf2b2836680f807fbec5234ed475585b41b4ab")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "draw-lib"
            "scribble-lib"
            "srfi-lite-lib"
            "draw-doc"
            "gui-doc"
            "gui-lib"
            "racket-doc"))
          (dependency-names
           .
           ("base"
            "draw-lib"
            "scribble-lib"
            "srfi-lite-lib"
            "draw-doc"
            "gui-doc"
            "gui-lib"
            "racket-doc"))
          (description . "Exhaustive Racket bindings to OpenGL")
          (implies . ())
          (last-checked . 1557339712)
          (last-edit . 1353008427)
          (last-updated . 1513718131)
          (modules
           .
           ((lib "opengl/util.rkt")
            (lib "opengl/opengl.scrbl")
            (lib "tests/opengl/gltest.rkt")
            (lib "tests/opengl/viewer.rkt")
            (lib "tests/opengl/gears.rkt")
            (lib "tests/opengl/shadertest.rkt")
            (lib "opengl/main.rkt")
            (lib "tests/opengl/bitmaptest.rkt")
            (lib "opengl/readspec.rkt")
            (lib "tests/opengl/planet.rkt")
            (lib "tests/opengl/vbotest.rkt")))
          (name . "opengl")
          (nix-sha256
           .
           "1dc55jhwydin6f1c2bpzls3fzip3gg2j5aq2gwrkzvifj6p8wxj6")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:stephanh42@gmail.com . #t)
                   (ffi . #t)
                   (graphics . #t)
                   (opengl . #t)
                   (ring:1 . #t)))
          (source . "github://github.com/stephanh42/RacketGL/master")
          (tags . ("ffi" "graphics" "opengl"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "1aaf2b2836680f807fbec5234ed475585b41b4ab")
                          (source
                           .
                           "github://github.com/stephanh42/RacketGL/master")
                          (source_url
                           .
                           "http://github.com/stephanh42/RacketGL/tree/master")))))))
 ("openh264-x86_64-macosx"
  .
  #hasheq((author . "leif@leifandersen.net")
          (authors . ("leif@leifandersen.net"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log
                  .
                  "server/built/install/openh264-x86_64-macosx.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/openh264-x86_64-macosx.txt")))
          (checksum . "61c4b07ffd82127a049cf12f74c09c20730eba1d")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base"))
          (dependency-names . ("base"))
          (description . "")
          (implies . ())
          (last-checked . 1557339712)
          (last-edit . 1499546884)
          (last-updated . 1546558065)
          (modules . ())
          (name . "openh264-x86_64-macosx")
          (nix-sha256
           .
           "0mqw649562qx823iw76q5v8m40z2n5psbhva6r7n53497a83hmpn")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:no-desc: . #t)
                   (author:leif@leifandersen.net . #t)
                   (openh264 . #t)
                   (ring:1 . #t)
                   (video . #t)))
          (source
           .
           "git://github.com/videolang/native-pkgs?path=openh264-x86_64-macosx")
          (tags . ("openh264" "video"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "61c4b07ffd82127a049cf12f74c09c20730eba1d")
                          (source
                           .
                           "git://github.com/videolang/native-pkgs?path=openh264-x86_64-macosx")
                          (source_url
                           .
                           "http://github.com/videolang/native-pkgs/tree/master?path=openh264-x86_64-macosx")))))))
 ("openmpi"
  .
  #hasheq((author . "jay.mccarthy@gmail.com")
          (authors . ("jay.mccarthy@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "mpi" "doc/mpi@openmpi/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/openmpi.txt")
                 (test-failure-log . "server/built/test-fail/openmpi.txt")
                 (test-success-log . #f)))
          (checksum . "5aea47a93cf08efdd1bf2cb470c059b5197d04c1")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "parser-tools-lib"
            "scribble-lib"
            "at-exp-lib"
            "racket-doc"))
          (dependency-names
           .
           ("base"
            "parser-tools-lib"
            "scribble-lib"
            "at-exp-lib"
            "racket-doc"))
          (description
           .
           "A Racket interface to MPI based on an FFI to OpenMPI")
          (implies . ())
          (last-checked . 1557339713)
          (last-edit . 1353357473)
          (last-updated . 1502816236)
          (modules
           .
           ((lib "mpi/ffi/types.rkt")
            (lib "mpi/mpi.scrbl")
            (lib "mpi/ffi/parsec.rkt")
            (lib "tests/mpi/master_server.rkt")
            (lib "mpi/main.rkt")
            (lib "mpi/ffi/constants.rkt")
            (lib "mpi/ffi/mpi.rkt")
            (lib "mpi/ffi/lib.rkt")
            (lib "mpi/ffi.rkt")))
          (name . "openmpi")
          (nix-sha256
           .
           "0h61kv9bpzbyb2i7hhwg6wy3vdjhr1inj7a8y36wc29gxzm7krvm")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:jay.mccarthy@gmail.com . #t)
                   (ffi . #t)
                   (parallel . #t)
                   (ring:1 . #t)))
          (source . "github://github.com/jeapostrophe/openmpi/master")
          (tags . ("ffi" "parallel"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "5aea47a93cf08efdd1bf2cb470c059b5197d04c1")
                          (source
                           .
                           "github://github.com/jeapostrophe/openmpi/master")
                          (source_url
                           .
                           "http://github.com/jeapostrophe/openmpi/tree/master")))))))
 ("openweather"
  .
  #hasheq((author . "ray.racine@gmail.com")
          (authors . ("ray.racine@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "openweather"
                    "doc/openweather@openweather/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/openweather.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/openweather.txt")))
          (checksum . "a0c4e4832b3ac05c1c38fbf64c6ce3ff583882e7")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("opt"
            "uri"
            "http11"
            "tjson"
            "typed-racket-lib"
            "base"
            "scribble-lib"
            "racket-doc"
            "typed-racket-lib"
            "typed-racket-more"
            "rackunit-lib"))
          (dependency-names
           .
           ("opt"
            "uri"
            "http11"
            "tjson"
            "typed-racket-lib"
            "base"
            "scribble-lib"
            "racket-doc"
            "typed-racket-lib"
            "typed-racket-more"
            "rackunit-lib"))
          (description
           .
           "Library for OpenWeatherMap's API.  Only US, with zipcode is currently supported.")
          (implies . ())
          (last-checked . 1557339713)
          (last-edit . 1544801063)
          (last-updated . 1546304765)
          (modules
           .
           ((lib "openweather/main.rkt")
            (lib "openweather/scribblings/openweather.scrbl")
            (lib "openweather/src/invoke.rkt")))
          (name . "openweather")
          (nix-sha256
           .
           "0vmfkis5r96iq5d12b9p79pa67d5j3mi5fqzh67001z5iicgisf3")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (api . #t)
                   (author:ray.racine@gmail.com . #t)
                   (ring:2 . #t)
                   (weather . #t)))
          (source . "https://gitlab.com/RayRacine/openweather.git")
          (tags . ("api" "weather"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "a0c4e4832b3ac05c1c38fbf64c6ce3ff583882e7")
                          (source
                           .
                           "https://gitlab.com/RayRacine/openweather.git")
                          (source_url
                           .
                           "https://gitlab.com/RayRacine/openweather.git")))))))
 ("operational-transformation"
  .
  #hasheq((author . "tonygarnockjones@gmail.com")
          (authors . ("tonygarnockjones@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log
                  .
                  "server/built/install/operational-transformation.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/operational-transformation.txt")))
          (checksum . "1960b7f70138a9de6e3ceb2943b8ca46c83d94ae")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "operational-transformation-demo"
            "operational-transformation-lib"
            "profile-lib"))
          (dependency-names
           .
           ("base"
            "operational-transformation-demo"
            "operational-transformation-lib"
            "profile-lib"))
          (description
           .
           "Operational Transformation (OT) for Racket. Wrapper package for both operational-transformation-lib and operational-transformation-demo.")
          (implies . ())
          (last-checked . 1557339713)
          (last-edit . 1470267088)
          (last-updated . 1527795751)
          (modules . ())
          (name . "operational-transformation")
          (nix-sha256
           .
           "0z6np1k73kacb5731xa1bsbgsjch4cwzbilrjnfs6llhsh2yhrnc")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:no-tag: . #t)
                   (author:tonygarnockjones@gmail.com . #t)
                   (ring:1 . #t)))
          (source
           .
           "git://github.com/tonyg/racket-operational-transformation?path=operational-transformation")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "1960b7f70138a9de6e3ceb2943b8ca46c83d94ae")
                          (source
                           .
                           "git://github.com/tonyg/racket-operational-transformation?path=operational-transformation")
                          (source_url
                           .
                           "http://github.com/tonyg/racket-operational-transformation/tree/master?path=operational-transformation")))))))
 ("operational-transformation-demo"
  .
  #hasheq((author . "tonygarnockjones@gmail.com")
          (authors . ("tonygarnockjones@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log
                  .
                  "server/built/install/operational-transformation-demo.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/operational-transformation-demo.txt")))
          (checksum . "1960b7f70138a9de6e3ceb2943b8ca46c83d94ae")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "operational-transformation-lib" "gui-lib"))
          (dependency-names
           .
           ("base" "operational-transformation-lib" "gui-lib"))
          (description
           .
           "Demo collaborative editor using Operational Transformation (OT).")
          (implies . ())
          (last-checked . 1557339713)
          (last-edit . 1469237883)
          (last-updated . 1527795752)
          (modules
           .
           ((lib "operational-transformation-demo/multiserver.rkt")
            (lib "operational-transformation-demo/multiclient.rkt")
            (lib "operational-transformation-demo/client.rkt")
            (lib "operational-transformation-demo/server.rkt")))
          (name . "operational-transformation-demo")
          (nix-sha256
           .
           "0z6np1k73kacb5731xa1bsbgsjch4cwzbilrjnfs6llhsh2yhrnc")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:no-tag: . #t)
                   (author:tonygarnockjones@gmail.com . #t)
                   (ring:1 . #t)))
          (source
           .
           "git://github.com/tonyg/racket-operational-transformation?path=operational-transformation-demo")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "1960b7f70138a9de6e3ceb2943b8ca46c83d94ae")
                          (source
                           .
                           "git://github.com/tonyg/racket-operational-transformation?path=operational-transformation-demo")
                          (source_url
                           .
                           "http://github.com/tonyg/racket-operational-transformation/tree/master?path=operational-transformation-demo")))))))
 ("operational-transformation-lib"
  .
  #hasheq((author . "tonygarnockjones@gmail.com")
          (authors . ("tonygarnockjones@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log
                  .
                  "server/built/install/operational-transformation-lib.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/operational-transformation-lib.txt")))
          (checksum . "1960b7f70138a9de6e3ceb2943b8ca46c83d94ae")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "rackunit-lib" "profile-lib"))
          (dependency-names . ("base" "rackunit-lib" "profile-lib"))
          (description
           .
           "Operational Transformation (OT) for Racket. Just the operational-transformation collect, no demo included.")
          (implies . ())
          (last-checked . 1557339713)
          (last-edit . 1469237930)
          (last-updated . 1527795752)
          (modules
           .
           ((lib "operational-transformation/operation.rkt")
            (lib "operational-transformation/server.rkt")
            (lib "operational-transformation/text/simple-document.rkt")
            (lib "operational-transformation/main.rkt")
            (lib "operational-transformation/client.rkt")
            (lib "operational-transformation/text.rkt")))
          (name . "operational-transformation-lib")
          (nix-sha256
           .
           "0z6np1k73kacb5731xa1bsbgsjch4cwzbilrjnfs6llhsh2yhrnc")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:no-tag: . #t)
                   (author:tonygarnockjones@gmail.com . #t)
                   (ring:1 . #t)))
          (source
           .
           "git://github.com/tonyg/racket-operational-transformation?path=operational-transformation-lib")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "1960b7f70138a9de6e3ceb2943b8ca46c83d94ae")
                          (source
                           .
                           "git://github.com/tonyg/racket-operational-transformation?path=operational-transformation-lib")
                          (source_url
                           .
                           "http://github.com/tonyg/racket-operational-transformation/tree/master?path=operational-transformation-lib")))))))
 ("opt"
  .
  #hasheq((author . "ray.racine@gmail.com")
          (authors . ("ray.racine@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "opt" "doc/opt@opt/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/opt.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/opt.txt")))
          (checksum . "83544737512709bfbdf5d65a956ee12c4cc7e822")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("typed-racket-lib"
            "base"
            "scribble-lib"
            "typed-racket-lib"
            "typed-racket-more"
            "racket-doc"
            "rackunit-lib"))
          (dependency-names
           .
           ("typed-racket-lib"
            "base"
            "scribble-lib"
            "typed-racket-lib"
            "typed-racket-more"
            "racket-doc"
            "rackunit-lib"))
          (description
           .
           "Optional and Either data type utilities.\r\nProvides util function for Typed Racket's Option type as well as defines an Either type.")
          (implies . ())
          (last-checked . 1557339713)
          (last-edit . 1528392570)
          (last-updated . 1528481709)
          (modules
           .
           ((lib "opt/option.rkt")
            (lib "opt/either.rkt")
            (lib "opt/scribblings/opt.scrbl")))
          (name . "opt")
          (nix-sha256
           .
           "0ybbpq5a42lp12sgl5c78i5bav24v43sl8yjbax9f8d6i158vb4q")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:ray.racine@gmail.com . #t)
                   (datatype . #t)
                   (either . #t)
                   (option . #t)
                   (ring:2 . #t)))
          (source . "https://gitlab.com/RayRacine/opt.git")
          (tags . ("datatype" "either" "option"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "83544737512709bfbdf5d65a956ee12c4cc7e822")
                          (source . "https://gitlab.com/RayRacine/opt.git")
                          (source_url
                           .
                           "https://gitlab.com/RayRacine/opt.git")))))))
 ("optimization-coach"
  .
  #hash((author . "stamourv@racket-lang.org")
        (checksum . "af6d98c959796dab585c0f2ae50b12a8b05a014a")
        (dependencies
         .
         (("base" #:version "6.2.900.6")
          ("drracket" #:version "1.6")
          ("typed-racket-lib" #:version "1.7")
          "profile-lib"
          "rackunit-lib"
          "gui-lib"
          "data-lib"
          "source-syntax"
          "images-lib"
          "sandbox-lib"
          "string-constants-lib"
          "scribble-lib"))
        (dependency-names
         .
         ("base"
          "drracket"
          "typed-racket-lib"
          "profile-lib"
          "rackunit-lib"
          "gui-lib"
          "data-lib"
          "source-syntax"
          "images-lib"
          "sandbox-lib"
          "string-constants-lib"
          "scribble-lib"))
        (description . "stamourv@racket-lang.org")
        (modules . ())
        (name . "optimization-coach")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/optimization-coach.zip")
        (tags . ())))
 ("option-bind"
  .
  #hasheq((author . "jmj@fellowhuman.com")
          (authors . ("jmj@fellowhuman.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "option-bind"
                    "doc/option-bind@option-bind/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/option-bind.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/option-bind.txt")))
          (checksum . "8d8346d612e401d7b44a04a121881f66e5a43cf6")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "typed-racket-lib"
            "scribble-lib"
            "racket-doc"
            "typed-racket-lib"
            "typed-racket-more"))
          (dependency-names
           .
           ("base"
            "typed-racket-lib"
            "scribble-lib"
            "racket-doc"
            "typed-racket-lib"
            "typed-racket-more"))
          (description
           .
           "Monadic shorthand for propagating #f in Option types")
          (implies . ())
          (last-checked . 1557339714)
          (last-edit . 1439185026)
          (last-updated . 1502816238)
          (modules
           .
           ((lib "option-bind/scribblings/option-bind.scrbl")
            (lib "option-bind/main.rkt")))
          (name . "option-bind")
          (nix-sha256
           .
           "03p2s29r798pm72mfmnskq5s28zy8hm9szj7v024qdi37xv93way")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (:no-tag: . #t)
                   (author:jmj@fellowhuman.com . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/RenaissanceBug/option-bind")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "8d8346d612e401d7b44a04a121881f66e5a43cf6")
                          (source
                           .
                           "git://github.com/RenaissanceBug/option-bind")
                          (source_url
                           .
                           "http://github.com/RenaissanceBug/option-bind/tree/master")))))))
 ("option-contract"
  .
  #hash((author . "chrdimo@seas.harvard.edu robby@racket-lang.org")
        (checksum . "28f07dc6775defc535354fa85186438c6508efb1")
        (dependencies . ("option-contract-lib" "option-contract-doc"))
        (dependency-names . ("option-contract-lib" "option-contract-doc"))
        (description . "chrdimo@seas.harvard.edu robby@racket-lang.org")
        (modules . ())
        (name . "option-contract")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/option-contract.zip")
        (tags . ())))
 ("option-contract-doc"
  .
  #hash((author . "chrdimo@seas.harvard.edu robby@racket-lang.org")
        (checksum . "320ae5715648ae1926f9d0c89c3133fd7c1f01fc")
        (dependencies
         .
         (("base" #:version "6.2.900.17")
          "option-contract-lib"
          "scribble-lib"
          "racket-doc"))
        (dependency-names
         .
         ("base" "option-contract-lib" "scribble-lib" "racket-doc"))
        (description . "chrdimo@seas.harvard.edu robby@racket-lang.org")
        (modules . ())
        (name . "option-contract-doc")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/option-contract-doc.zip")
        (tags . ())))
 ("option-contract-lib"
  .
  #hash((author . "chrdimo@seas.harvard.edu robby@racket-lang.org")
        (checksum . "fa72efcee2df86c26868ce892d64a46223a4600b")
        (dependencies . (("base" #:version "6.2.900.17")))
        (dependency-names . ("base"))
        (description . "chrdimo@seas.harvard.edu robby@racket-lang.org")
        (modules . ())
        (name . "option-contract-lib")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/option-contract-lib.zip")
        (tags . ())))
 ("option-contract-test"
  .
  #hash((author . "chrdimo@seas.harvard.edu robby@racket-lang.org")
        (checksum . "f9b552b92b9fa74804baa4edeae37be861f0d06f")
        (dependencies
         .
         (("base" #:version "6.2.900.17")
          "rackunit-lib"
          "option-contract-lib"))
        (dependency-names . ("base" "rackunit-lib" "option-contract-lib"))
        (description . "chrdimo@seas.harvard.edu robby@racket-lang.org")
        (modules . ())
        (name . "option-contract-test")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/option-contract-test.zip")
        (tags . ())))
 ("org-mode"
  .
  #hasheq((author . "jay.mccarthy@gmail.com")
          (authors . ("jay.mccarthy@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/org-mode.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/org-mode.txt")))
          (checksum . "49b1f46aaccc02fa1cedde36b8eda3ffa6a772ec")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base"))
          (dependency-names . ("base"))
          (description
           .
           "A native Racket reader and writer for org-mode files.")
          (implies . ())
          (last-checked . 1557339715)
          (last-edit . 1354315195)
          (last-updated . 1502816239)
          (modules . ((lib "file/org-mode.rkt")))
          (name . "org-mode")
          (nix-sha256
           .
           "10al372q0xbkxpl1955l4s58spsx382d7jq36xrcq4d9n3dzi50g")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:jay.mccarthy@gmail.com . #t)
                   (file . #t)
                   (ring:1 . #t)))
          (source . "github://github.com/jeapostrophe/org-mode/master")
          (tags . ("file"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "49b1f46aaccc02fa1cedde36b8eda3ffa6a772ec")
                          (source
                           .
                           "github://github.com/jeapostrophe/org-mode/master")
                          (source_url
                           .
                           "http://github.com/jeapostrophe/org-mode/tree/master")))))))
 ("osc"
  .
  #hasheq((author . "clements@racket-lang.org")
          (authors . ("clements@racket-lang.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "osc" "doc/osc@osc/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/osc.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/osc.txt")))
          (checksum . "18caebb14eefe3482976e738654aee2f18c5f88d")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "rackunit-lib" "scribble-lib" "racket-doc"))
          (dependency-names
           .
           ("base" "rackunit-lib" "scribble-lib" "racket-doc"))
          (description . "Open Sound Control data definitions")
          (implies . ())
          (last-checked . 1557339715)
          (last-edit . 1389819505)
          (last-updated . 1513624552)
          (modules
           .
           ((lib "osc/examples/send-to-renoise.rkt")
            (lib "osc/osc.scrbl")
            (lib "osc/bytes-to-osc.rkt")
            (lib "osc/osc-defns.rkt")
            (lib "osc/examples/try-sending.rkt")
            (lib "osc/examples/decode-supercollider.rkt")
            (lib "osc/examples/decode-helper.rkt")
            (lib "osc/osc-to-bytes.rkt")
            (lib "osc/osc-common.rkt")
            (lib "osc/examples/libpcap-read.rkt")
            (lib "osc/osc-time.rkt")
            (lib "osc/osc-quickcheck.rkt")
            (lib "osc/main.rkt")))
          (name . "osc")
          (nix-sha256
           .
           "0y195jbxivj93zv469ll8w7n0x6259fm70rj5d2pzk5gfdns8ivl")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (audio . #t)
                   (author:clements@racket-lang.org . #t)
                   (io . #t)
                   (ring:1 . #t)))
          (source . "github://github.com/jbclements/osc/master")
          (tags . ("audio" "io"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "18caebb14eefe3482976e738654aee2f18c5f88d")
                          (source
                           .
                           "github://github.com/jbclements/osc/master")
                          (source_url
                           .
                           "http://github.com/jbclements/osc/tree/master")))))))
 ("overeasy"
  .
  #hasheq((author . "neil@neilvandyke.org")
          (authors . ("neil@neilvandyke.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "overeasy" "doc/overeasy@overeasy/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/overeasy.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/overeasy.txt")))
          (checksum . "01df274d364d0fd0925c50d87c4caeab19c37c6e")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "racket-doc" "scribble-lib" "mcfly"))
          (dependency-names . ("base" "racket-doc" "scribble-lib" "mcfly"))
          (description . "Racket Language Test Engine")
          (implies . ())
          (last-checked . 1557339715)
          (last-edit . 1456463388)
          (last-updated . 1502816240)
          (modules
           .
           ((lib "overeasy/test-overeasy.rkt")
            (lib "overeasy/overeasy.rkt")
            (lib "overeasy/overeasy.scrbl")
            (lib "overeasy/main.rkt")))
          (name . "overeasy")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:neil@neilvandyke.org . #t)
                   (ring:1 . #t)
                   (testing . #t)))
          (source . "http://www.neilvandyke.org/racket/overeasy.zip")
          (tags . ("testing"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "01df274d364d0fd0925c50d87c4caeab19c37c6e")
                          (source
                           .
                           "http://www.neilvandyke.org/racket/overeasy.zip")
                          (source_url
                           .
                           "http://www.neilvandyke.org/racket/overeasy.zip")))))))
 ("overscan"
  .
  #hasheq((author . "mark@markwunsch.com")
          (authors . ("mark@markwunsch.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . "server/built/deps/overscan.txt")
                 (docs
                  .
                  (("main" "overscan" "doc/overscan@overscan/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/overscan.txt")
                 (test-failure-log . "server/built/test-fail/overscan.txt")
                 (test-success-log . #f)))
          (checksum . "f198e6b4c1f64cf5720e66ab5ad27fdc4b9e67e9")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "rackunit-lib"
            "draw-lib"
            "gui-lib"
            "sgl"
            "scribble-lib"
            "racket-doc"))
          (dependency-names
           .
           ("base"
            "rackunit-lib"
            "draw-lib"
            "gui-lib"
            "sgl"
            "scribble-lib"
            "racket-doc"))
          (description
           .
           "A toolkit and live coding environment for broadcasting video.")
          (implies . ())
          (last-checked . 1557339715)
          (last-edit . 1530804520)
          (last-updated . 1537559888)
          (modules
           .
           ((lib "overscan/scribblings/overscan/introspection.scrbl")
            (lib "gstreamer/gst.rkt")
            (lib "gstreamer/video.rkt")
            (lib "gstreamer/event.rkt")
            (lib "gstreamer/element.rkt")
            (lib "overscan/scribblings/overscan/gstreamer/pad.scrbl")
            (lib "overscan/macos.rkt")
            (lib "gstreamer/private/opengl.rkt")
            (lib "gstreamer/main.rkt")
            (lib "gstreamer/draw.rkt")
            (lib "overscan/video.rkt")
            (lib "overscan/scribblings/overscan/gstreamer/elements.scrbl")
            (lib "gstreamer/buffer.rkt")
            (lib "gstreamer/context.rkt")
            (lib "overscan/scribblings/overscan/gstreamer/buffer.scrbl")
            (lib "overscan/scribblings/overscan/gstreamer/bin.scrbl")
            (lib "overscan/scribblings/overscan/getting-started.scrbl")
            (lib "gstreamer/caps.rkt")
            (lib "gstreamer/message.rkt")
            (lib "gstreamer/clock.rkt")
            (lib "overscan/scribblings/overscan.scrbl")
            (lib "overscan/main.rkt")
            (lib "overscan/scribblings/examples/logo.rkt")
            (lib "gstreamer/elements.rkt")
            (lib "overscan/scribblings/overscan/gstreamer/bus.scrbl")
            (lib "gstreamer/factories.rkt")
            (lib "gstreamer/bin.rkt")
            (lib "overscan/scribblings/overscan/gstreamer/caps.scrbl")
            (lib "overscan/draw.rkt")
            (lib "gstreamer/private/structure.rkt")
            (lib "gstreamer/bus.rkt")
            (lib "overscan/twitch.rkt")
            (lib "ffi/unsafe/introspection.rkt")
            (lib "overscan/scribblings/overscan/gstreamer.scrbl")
            (lib "overscan/scribblings/overscan/gstreamer/element.scrbl")
            (lib "overscan/scribblings/utilities.rkt")
            (lib "gstreamer/device.rkt")
            (lib "overscan/scribblings/overscan/gstreamer/clock.scrbl")
            (lib "overscan/scribblings/overscan/gstreamer/device.scrbl")
            (lib "overscan/scribblings/overscan/broadcasting.scrbl")
            (lib "gstreamer/private/core.rkt")
            (lib "overscan/youtube.rkt")
            (lib "gstreamer/appsink.rkt")
            (lib "gstreamer/gui.rkt")
            (lib "gstreamer/pipeline.rkt")))
          (name . "overscan")
          (nix-sha256
           .
           "1dpliav9wa1aaniqm5ynwy7c0wsrq4v582wvkl3fpzvgd5ldpclz")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-dep-fail: . #t)
                   (:build-success: . #t)
                   (:docs: . #t)
                   (author:mark@markwunsch.com . #t)
                   (broadcasting . #t)
                   (ffi . #t)
                   (gobject-introspection . #t)
                   (gstreamer . #t)
                   (media . #t)
                   (ring:2 . #t)
                   (video . #t)))
          (source . "https://github.com/mwunsch/overscan.git")
          (tags
           .
           ("broadcasting"
            "ffi"
            "gobject-introspection"
            "gstreamer"
            "media"
            "video"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "f198e6b4c1f64cf5720e66ab5ad27fdc4b9e67e9")
                          (source . "https://github.com/mwunsch/overscan.git")
                          (source_url
                           .
                           "https://github.com/mwunsch/overscan.git")))))))
 ("packet-socket"
  .
  #hasheq((author . "tonygarnockjones@gmail.com schuster@ccs.neu.edu")
          (authors . ("tonygarnockjones@gmail.com" "schuster@ccs.neu.edu"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . "server/built/min-fail/packet-socket.txt")
                 (success-log . "server/built/install/packet-socket.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/packet-socket.txt")))
          (checksum . "a937da460f9c50bb0a1051475b883d3a128645ab")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "make" "bitsyntax"))
          (dependency-names . ("base" "make" "bitsyntax"))
          (description . "Access to raw Ethernet frames from Racket")
          (implies . ())
          (last-checked . 1557339715)
          (last-edit . 1402690841)
          (last-updated . 1502816241)
          (modules
           .
           ((lib "packet-socket/private/install.rkt")
            (lib "packet-socket/main.rkt")))
          (name . "packet-socket")
          (nix-sha256
           .
           "0j0fgsqy78xd3iar0y2phidyrj9yh5q9xndlvk8sqx7b3165093m")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:schuster@ccs.neu.edu . #t)
                   (author:tonygarnockjones@gmail.com . #t)
                   (net . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/tonyg/racket-packet-socket")
          (tags . ("net"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "a937da460f9c50bb0a1051475b883d3a128645ab")
                          (source
                           .
                           "git://github.com/tonyg/racket-packet-socket")
                          (source_url
                           .
                           "http://github.com/tonyg/racket-packet-socket/tree/master")))))))
 ("paddle"
  .
  #hasheq((author . "matt@jadud.com")
          (authors . ("matt@jadud.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("salvage" "paddle" "doc/paddle@paddle/index.html")))
                 (failure-log . "server/built/fail/paddle.txt")
                 (min-failure-log . #f)
                 (success-log . #f)
                 (test-failure-log . #f)
                 (test-success-log . #f)))
          (checksum . "538ab7ae5523121841f4d4d8793981004dafe29e")
          (checksum-error . #f)
          (conflicts . ())
          (date-added . 1547908613)
          (dependencies . ("base" "draw-lib" "gui-lib" "sgl"))
          (dependency-names . ("base" "draw-lib" "gui-lib" "sgl"))
          (description . "Paddle is a microworld. ")
          (implies . ())
          (last-checked . 1557339716)
          (last-edit . 1547908613)
          (last-updated . 1547916132)
          (modules
           .
           ((lib "paddle/src/types.rkt")
            (lib "paddle/examples/sheep-wolves.rkt")
            (lib "paddle/examples/gameoflife.rkt")
            (lib "paddle/examples/diffusion.rkt")
            (lib "paddle/examples/direction-test.rkt")
            (lib "paddle/src/util.rkt")
            (lib "paddle/scribblings/misc.scrbl")
            (lib "paddle/examples/termites.rkt")
            (lib "paddle/src/netlogo.rkt")
            (lib "paddle/src/agents.rkt")
            (lib "paddle/src/log.rkt")
            (lib "paddle/src/patches.rkt")
            (lib "paddle/scribblings/paddle.scrbl")
            (lib "paddle/main.rkt")
            (lib "paddle/examples/boids.rkt")
            (lib "paddle/src/world.rkt")
            (lib "paddle/src/gui.rkt")
            (lib "paddle/src/get-set.rkt")
            (lib "paddle/examples/rle-patterns.rkt")
            (lib "paddle/src/state.rkt")
            (lib "paddle/src/agentsets.rkt")
            (lib "paddle/src/breeds.rkt")
            (lib "paddle/src/quadtree.rkt")
            (lib "paddle/src/plot.rkt")
            (lib "paddle/examples/rle.rkt")))
          (name . "paddle")
          (nix-sha256
           .
           "1l2md5y4cl7lv9blibjwmc08231cby8manqg04rqhj99bydwm42l")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-fail: . #t)
                   (:docs-error: . #t)
                   (:docs: . #t)
                   (agent-based . #t)
                   (author:matt@jadud.com . #t)
                   (microworld . #t)
                   (ring:2 . #t)
                   (turtles . #t)))
          (source . "https://github.com/jadudm/paddle.git")
          (tags . ("agent-based" "microworld" "turtles"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "538ab7ae5523121841f4d4d8793981004dafe29e")
                          (source . "https://github.com/jadudm/paddle.git")
                          (source_url
                           .
                           "https://github.com/jadudm/paddle.git")))))))
 ("parameter"
  .
  #hasheq((author . "samth@racket-lang.org")
          (authors . ("samth@racket-lang.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . "server/built/deps/parameter.txt")
                 (docs
                  .
                  (("main" "parameter" "doc/parameter@parameter/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/parameter.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/parameter.txt")))
          (checksum . "d084723e260a133e792317286fb05494aabc29ed")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "scheme-lib" "scribble-lib"))
          (dependency-names . ("base" "scheme-lib" "scribble-lib"))
          (description . "Parameter utilities")
          (implies . ())
          (last-checked . 1557339716)
          (last-edit . 1451684399)
          (last-updated . 1502816241)
          (modules
           .
           ((lib "parameter/main.rkt") (lib "parameter/parameter.scrbl")))
          (name . "parameter")
          (nix-sha256
           .
           "15i75ccjrq544qkwlwfyx4j4kfyxainfdvm3za62dq0sbmsm2g2n")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-dep-fail: . #t)
                   (:build-success: . #t)
                   (:docs: . #t)
                   (:no-tag: . #t)
                   (author:samth@racket-lang.org . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/samth/parameter.plt")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "d084723e260a133e792317286fb05494aabc29ed")
                          (source . "git://github.com/samth/parameter.plt")
                          (source_url
                           .
                           "http://github.com/samth/parameter.plt/tree/master")))))))
 ("paren-shape"
  .
  #hasheq((author . "alexander@knauth.org")
          (authors . ("alexander@knauth.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "paren-shape-pattern-expanders"
                    "doc/paren-shape-pattern-expanders@paren-shape/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/paren-shape.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/paren-shape.txt")))
          (checksum . "0ad6a34d3e93088e3e6c5a69b78a0724d5f4290f")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            ("syntax-classes-lib" #:version "1.1")
            "rackunit-lib"
            "scribble-lib"
            "racket-doc"
            "syntax-classes-doc"))
          (dependency-names
           .
           ("base"
            "syntax-classes-lib"
            "rackunit-lib"
            "scribble-lib"
            "racket-doc"
            "syntax-classes-doc"))
          (description . "Deprecated. Use syntax-classes-lib instead.")
          (implies . ())
          (last-checked . 1557339716)
          (last-edit . 1486111652)
          (last-updated . 1502816241)
          (modules
           .
           ((lib
             "paren-shape/scribblings/paren-shape-pattern-expanders.scrbl")
            (lib "paren-shape/pattern-expander.rkt")))
          (name . "paren-shape")
          (nix-sha256
           .
           "059zasy5wc3ipn5krcn2masv9xvbfxva98570d7kicx0an1n46cw")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:alexander@knauth.org . #t)
                   (deprecated . #t)
                   (ring:1 . #t)
                   (syntax-parse . #t)))
          (source . "git://github.com/AlexKnauth/paren-shape")
          (tags . ("deprecated" "syntax-parse"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "0ad6a34d3e93088e3e6c5a69b78a0724d5f4290f")
                          (source . "git://github.com/AlexKnauth/paren-shape")
                          (source_url
                           .
                           "http://github.com/AlexKnauth/paren-shape/tree/master")))
                 ("6.1.1"
                  .
                  #hasheq((checksum
                           .
                           "a3eba0a54826a9b3d7277fbd983d677fce6c7dd3")
                          (source
                           .
                           "git://github.com/AlexKnauth/paren-shape#up-to-v6.2.1")
                          (source_url
                           .
                           "http://github.com/AlexKnauth/paren-shape/tree/master#up-to-v6.2.1")))
                 ("6.2"
                  .
                  #hasheq((checksum
                           .
                           "a3eba0a54826a9b3d7277fbd983d677fce6c7dd3")
                          (source
                           .
                           "git://github.com/AlexKnauth/paren-shape#up-to-v6.2.1")
                          (source_url
                           .
                           "http://github.com/AlexKnauth/paren-shape/tree/master#up-to-v6.2.1")))
                 ("6.2.1"
                  .
                  #hasheq((checksum
                           .
                           "a3eba0a54826a9b3d7277fbd983d677fce6c7dd3")
                          (source
                           .
                           "git://github.com/AlexKnauth/paren-shape#up-to-v6.2.1")
                          (source_url
                           .
                           "http://github.com/AlexKnauth/paren-shape/tree/master#up-to-v6.2.1")))))))
 ("parendown"
  .
  #hasheq((author . "rokitna@hotmail.com")
          (authors . ("rokitna@hotmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/parendown.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/parendown.txt")))
          (checksum . "f89879042a7a868bc0a83acd8bdaf4eb9427ff76")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("parendown-lib"))
          (dependency-names . ("parendown-lib"))
          (description
           .
           "A weak opening parenthesis, good for eliminating indentation.")
          (implies . ("parendown-lib"))
          (last-checked . 1557339716)
          (last-edit . 1546002299)
          (last-updated . 1554260777)
          (modules . ())
          (name . "parendown")
          (nix-sha256
           .
           "1gqld322bnmyvzxm3sbkrzqv0ycykznw8hkz7cfcbwraw9zb1i9c")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:rokitna@hotmail.com . #t)
                   (lang . #t)
                   (lang-extension . #t)
                   (language . #t)
                   (lathe . #t)
                   (ring:1 . #t)))
          (source
           .
           "https://github.com/lathe/parendown-for-racket.git?path=parendown")
          (tags . ("lang" "lang-extension" "language" "lathe"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "f89879042a7a868bc0a83acd8bdaf4eb9427ff76")
                          (source
                           .
                           "https://github.com/lathe/parendown-for-racket.git?path=parendown")
                          (source_url
                           .
                           "https://github.com/lathe/parendown-for-racket.git?path=parendown")))))))
 ("parendown-doc"
  .
  #hasheq((author . "rokitna@hotmail.com")
          (authors . ("rokitna@hotmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "parendown"
                    "doc/parendown@parendown-doc/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/parendown-doc.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/parendown-doc.txt")))
          (checksum . "f89879042a7a868bc0a83acd8bdaf4eb9427ff76")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base" "parendown-lib" "racket-doc" "scribble-lib"))
          (dependency-names
           .
           ("base" "parendown-lib" "racket-doc" "scribble-lib"))
          (description
           .
           "A weak opening parenthesis, good for eliminating indentation. (doc)")
          (implies . ())
          (last-checked . 1557339716)
          (last-edit . 1546002407)
          (last-updated . 1554260777)
          (modules . ((lib "parendown/scribblings/parendown.scrbl")))
          (name . "parendown-doc")
          (nix-sha256
           .
           "1gqld322bnmyvzxm3sbkrzqv0ycykznw8hkz7cfcbwraw9zb1i9c")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:rokitna@hotmail.com . #t)
                   (lang . #t)
                   (lang-extension . #t)
                   (language . #t)
                   (lathe . #t)
                   (ring:2 . #t)))
          (source
           .
           "https://github.com/lathe/parendown-for-racket.git?path=parendown-doc")
          (tags . ("lang" "lang-extension" "language" "lathe"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "f89879042a7a868bc0a83acd8bdaf4eb9427ff76")
                          (source
                           .
                           "https://github.com/lathe/parendown-for-racket.git?path=parendown-doc")
                          (source_url
                           .
                           "https://github.com/lathe/parendown-for-racket.git?path=parendown-doc")))))))
 ("parendown-lib"
  .
  #hasheq((author . "rokitna@hotmail.com")
          (authors . ("rokitna@hotmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/parendown-lib.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/parendown-lib.txt")))
          (checksum . "f89879042a7a868bc0a83acd8bdaf4eb9427ff76")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base"))
          (dependency-names . ("base"))
          (description
           .
           "A weak opening parenthesis, good for eliminating indentation. (lib)")
          (implies . ())
          (last-checked . 1557339716)
          (last-edit . 1537186724)
          (last-updated . 1554260777)
          (modules
           .
           ((lib "parendown/main.rkt") (lib "parendown/lang/reader.rkt")))
          (name . "parendown-lib")
          (nix-sha256
           .
           "1gqld322bnmyvzxm3sbkrzqv0ycykznw8hkz7cfcbwraw9zb1i9c")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:rokitna@hotmail.com . #t)
                   (lang . #t)
                   (lang-extension . #t)
                   (language . #t)
                   (lathe . #t)
                   (ring:1 . #t)))
          (source
           .
           "https://github.com/lathe/parendown-for-racket.git?path=parendown-lib")
          (tags . ("lang" "lang-extension" "language" "lathe"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "f89879042a7a868bc0a83acd8bdaf4eb9427ff76")
                          (source
                           .
                           "https://github.com/lathe/parendown-for-racket.git?path=parendown-lib")
                          (source_url
                           .
                           "https://github.com/lathe/parendown-for-racket.git?path=parendown-lib")))))))
 ("parendown-test"
  .
  #hasheq((author . "rokitna@hotmail.com")
          (authors . ("rokitna@hotmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/parendown-test.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/parendown-test.txt")))
          (checksum . "f89879042a7a868bc0a83acd8bdaf4eb9427ff76")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "parendown-lib" "rackunit-lib"))
          (dependency-names . ("base" "parendown-lib" "rackunit-lib"))
          (description
           .
           "A weak opening parenthesis, good for eliminating indentation. (test)")
          (implies . ())
          (last-checked . 1557339716)
          (last-edit . 1546002471)
          (last-updated . 1554260777)
          (modules . ((lib "parendown/tests.rkt")))
          (name . "parendown-test")
          (nix-sha256
           .
           "1gqld322bnmyvzxm3sbkrzqv0ycykznw8hkz7cfcbwraw9zb1i9c")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:rokitna@hotmail.com . #t)
                   (lang . #t)
                   (lang-extension . #t)
                   (language . #t)
                   (lathe . #t)
                   (ring:2 . #t)))
          (source
           .
           "https://github.com/lathe/parendown-for-racket.git?path=parendown-test")
          (tags . ("lang" "lang-extension" "language" "lathe"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "f89879042a7a868bc0a83acd8bdaf4eb9427ff76")
                          (source
                           .
                           "https://github.com/lathe/parendown-for-racket.git?path=parendown-test")
                          (source_url
                           .
                           "https://github.com/lathe/parendown-for-racket.git?path=parendown-test")))))))
 ("parenlog"
  .
  #hasheq((author . "jay.mccarthy@gmail.com")
          (authors . ("jay.mccarthy@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . "server/built/deps/parenlog.txt")
                 (docs
                  .
                  (("main" "parenlog" "doc/parenlog@parenlog/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/parenlog.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/parenlog.txt")))
          (checksum . "b02b9960c18b3c238b08a68d334f7ac2641e785c")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "chk-lib" "racket-doc" "scribble-lib"))
          (dependency-names . ("base" "chk-lib" "racket-doc" "scribble-lib"))
          (description . "A language that is like Prolog, but parenthetical.")
          (implies . ())
          (last-checked . 1557339716)
          (last-edit . 1375448743)
          (last-updated . 1513635359)
          (modules
           .
           ((lib "parenlog/examples/type.rkt")
            (lib "parenlog/examples/family-tree.rkt")
            (lib "parenlog/examples/linear.rkt")
            (lib "parenlog/parenlog.rkt")
            (lib "parenlog/core.rkt")
            (lib "parenlog/examples/short.rkt")
            (lib "parenlog/lang/reader.rkt")
            (lib "parenlog/main.rkt")
            (lib "parenlog/stx.rkt")
            (lib "parenlog/parenlog.scrbl")
            (lib "parenlog/lang.rkt")
            (lib "parenlog/examples/type-class.rkt")))
          (name . "parenlog")
          (nix-sha256
           .
           "1514rvhdc2j1hmkb6701ps36f6538am0a90k8l40k3nlm44dm5p8")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-dep-fail: . #t)
                   (:build-success: . #t)
                   (:docs: . #t)
                   (author:jay.mccarthy@gmail.com . #t)
                   (language . #t)
                   (logic . #t)
                   (ring:1 . #t)))
          (source . "github://github.com/jeapostrophe/parenlog/master")
          (tags . ("language" "logic"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "b02b9960c18b3c238b08a68d334f7ac2641e785c")
                          (source
                           .
                           "github://github.com/jeapostrophe/parenlog/master")
                          (source_url
                           .
                           "http://github.com/jeapostrophe/parenlog/tree/master")))
                 ("5.3.4.11"
                  .
                  #hasheq((checksum
                           .
                           "8b4167b95636f2fdd86ef6b6df68a0c6f11abcd5")
                          (source
                           .
                           "github://github.com/jeapostrophe/parenlog/old")
                          (source_url
                           .
                           "http://github.com/jeapostrophe/parenlog/tree/old")))))))
 ("parquet"
  .
  #hasheq((author . "johnstonskj@gmail.com")
          (authors . ("johnstonskj@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "parquet" "doc/parquet@parquet/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/parquet.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/parquet.txt")))
          (checksum . "19a26155d832d1102003ddd67dcd40c2fb1c5325")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "thrift"
            "rackunit-lib"
            "racket-index"
            "scribble-lib"
            "racket-doc"
            "sandbox-lib"
            "cover-coveralls"))
          (dependency-names
           .
           ("base"
            "thrift"
            "rackunit-lib"
            "racket-index"
            "scribble-lib"
            "racket-doc"
            "sandbox-lib"
            "cover-coveralls"))
          (description
           .
           "Support for the Apache Parquet column-oriented file format. Uses the thrift package for actual file handling.")
          (implies . ())
          (last-checked . 1557339716)
          (last-edit . 1544220183)
          (last-updated . 1544047190)
          (modules
           .
           ((lib "parquet/tests/file.rkt")
            (lib "parquet/scribblings/_parquet.scrbl")
            (lib "parquet/scribblings/file.scrbl")
            (lib "parquet/generated/parquet-encode.rkt")
            (lib "parquet/format.rkt")
            (lib "parquet/main.rkt")
            (lib "parquet/tests/test-doc-complete.rkt")
            (lib "parquet/scribblings/parquet.scrbl")
            (lib "parquet/generated/parquet-decode.rkt")
            (lib "parquet/generated/parquet.rkt")
            (lib "parquet/file.rkt")
            (lib "parquet/tests/parquet.rkt")
            (lib "parquet/scribblings/generated-parquet.scrbl")))
          (name . "parquet")
          (nix-sha256
           .
           "1www83niqy5fpzywmsrd3kv1dlrbw7k3bkafg5s1xy39ll9aw9m2")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:johnstonskj@gmail.com . #t)
                   (data . #t)
                   (ring:2 . #t)))
          (source . "https://github.com/johnstonskj/racket-parquet.git")
          (tags . ("data"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "19a26155d832d1102003ddd67dcd40c2fb1c5325")
                          (source
                           .
                           "https://github.com/johnstonskj/racket-parquet.git")
                          (source_url
                           .
                           "https://github.com/johnstonskj/racket-parquet.git")))))))
 ("parsack"
  .
  #hasheq((author . "stchang@racket-lang.org")
          (authors . ("stchang@racket-lang.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "parsack" "doc/parsack@parsack/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/parsack.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/parsack.txt")))
          (checksum . "b45f0f5ed5f8dd3f1ccebaaec3204b27032843c6")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "rackunit-lib" "scribble-lib" "racket-doc"))
          (dependency-names
           .
           ("base" "rackunit-lib" "scribble-lib" "racket-doc"))
          (description
           .
           "A basic Parsec (Haskell's monadic parser combinator library) implementation.")
          (implies . ())
          (last-checked . 1557339716)
          (last-edit . 1374792748)
          (last-updated . 1502816242)
          (modules
           .
           ((lib "parsack/examples/http-request-parser.rkt")
            (lib "parsack/examples/url-query-parser.rkt")
            (lib "parsack/examples/tests/json-parser-tests.rkt")
            (lib "parsack/examples/csv-parser-quoted.rkt")
            (lib "parsack/parsack.scrbl")
            (lib "parsack/tests/run-all-tests.rkt")
            (lib "parsack/tests/test-utils.rkt")
            (lib "parsack/examples/tests/http-request-parser-tests.rkt")
            (lib "parsack/tests/bytestring-tests.rkt")
            (lib "parsack/examples/csv-parser-sepBy.rkt")
            (lib "parsack/examples/tests/csv-parser-quoted-tests.rkt")
            (lib "parsack/parsack.rkt")
            (lib "parsack/examples/json-parser.rkt")
            (lib "parsack/main.rkt")
            (lib "parsack/examples/tests/json-perf-test.rkt")
            (lib "parsack/examples/tests/url-query-parser-tests.rkt")
            (lib "parsack/examples/scheme-parser.rkt")
            (lib "parsack/tests/parsack-tests.rkt")
            (lib "parsack/examples/tests/csv-parser-sepBy-tests.rkt")
            (lib "parsack/examples/csv-parser-basic.rkt")
            (lib "parsack/string-helpers.rkt")
            (lib "parsack/examples/tests/csv-parser-basic-tests.rkt")
            (lib "parsack/tests/parse-result-tests.rkt")))
          (name . "parsack")
          (nix-sha256
           .
           "05gv7pmcj0hfk42q1fjbz2l2lymv1m2azxrrq2scsfdwvfwz96xq")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:stchang@racket-lang.org . #t)
                   (parsing . #t)
                   (ring:1 . #t)))
          (source . "github://github.com/stchang/parsack/master/")
          (tags . ("parsing"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "b45f0f5ed5f8dd3f1ccebaaec3204b27032843c6")
                          (source
                           .
                           "github://github.com/stchang/parsack/master/")
                          (source_url
                           .
                           "http://github.com/stchang/parsack/tree/master/")))))))
 ("parse-qif"
  .
  #hasheq((author . "clements@racket-lang.org")
          (authors . ("clements@racket-lang.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . "server/built/deps/parse-qif.txt")
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/parse-qif.txt")
                 (test-failure-log . "server/built/test-fail/parse-qif.txt")
                 (test-success-log . #f)))
          (checksum . "b4e61555e589bec83d90b4d66e43a827a352c775")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ())
          (dependency-names . ())
          (description
           .
           "Basic QIF-parsing code, used to apply categories to downloaded transactions")
          (implies . ())
          (last-checked . 1557339717)
          (last-edit . 1520224880)
          (last-updated . 1548142935)
          (modules
           .
           ((lib "parse-qif/parse-qif.rkt") (lib "parse-qif/main.rkt")))
          (name . "parse-qif")
          (nix-sha256
           .
           "06m3q0pjs1599zks8czfxb5ska2xlq5bfyfpn0jcr2bic377bj1h")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-dep-fail: . #t)
                   (:build-success: . #t)
                   (author:clements@racket-lang.org . #t)
                   (parser . #t)
                   (parsing . #t)
                   (qif . #t)
                   (ring:2 . #t)))
          (source . "https://github.com/jbclements/parse-qif.git")
          (tags . ("parser" "parsing" "qif"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "b4e61555e589bec83d90b4d66e43a827a352c775")
                          (source
                           .
                           "https://github.com/jbclements/parse-qif.git")
                          (source_url
                           .
                           "https://github.com/jbclements/parse-qif.git")))))))
 ("parser-combinator"
  .
  #hasheq((author . "nathan@nixpulvis.com")
          (authors . ("nathan@nixpulvis.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . "server/built/deps/parser-combinator.txt")
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/parser-combinator.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/parser-combinator.txt")))
          (checksum . "9635c0479c1841e122a75faa35d1d76333ef3cb6")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base" "scribble-lib" "racket-doc" "rackunit-lib" "htdp-lib"))
          (dependency-names
           .
           ("base" "scribble-lib" "racket-doc" "rackunit-lib" "htdp-lib"))
          (description . "Parser / Lexer Library, and JSON Implementation.")
          (implies . ())
          (last-checked . 1557339717)
          (last-edit . 1528595197)
          (last-updated . 1557019310)
          (modules
           .
           ((lib "parser-combinator/json.rkt")
            (lib "parser-combinator/json-tests.rkt")
            (lib "parser-combinator/parse.rkt")
            (lib "parser-combinator/parse-tests.rkt")))
          (name . "parser-combinator")
          (nix-sha256
           .
           "18vqvdbjs8a808crk21ynh3p7ghah71zwdilmgwn231h02cd9555")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-dep-fail: . #t)
                   (:build-success: . #t)
                   (author:nathan@nixpulvis.com . #t)
                   (json . #t)
                   (parser . #t)
                   (ring:2 . #t)))
          (source . "https://github.com/nixpulvis/parser-combinator.git")
          (tags . ("json" "parser"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "9635c0479c1841e122a75faa35d1d76333ef3cb6")
                          (source
                           .
                           "https://github.com/nixpulvis/parser-combinator.git")
                          (source_url
                           .
                           "https://github.com/nixpulvis/parser-combinator.git")))))))
 ("parser-tools"
  .
  #hash((author . "mflatt@racket-lang.org")
        (checksum . "9e2986821afdab92acdb99c3c2d7b13ab8d4ba73")
        (dependencies . ("parser-tools-lib" "parser-tools-doc"))
        (dependency-names . ("parser-tools-lib" "parser-tools-doc"))
        (description . "mflatt@racket-lang.org")
        (modules . ())
        (name . "parser-tools")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/parser-tools.zip")
        (tags . ())))
 ("parser-tools-doc"
  .
  #hash((author . "mflatt@racket-lang.org")
        (checksum . "afc80b25e0313dd95412252e46735d23b7564ad2")
        (dependencies
         .
         ("base"
          "scheme-lib"
          "racket-doc"
          "syntax-color-doc"
          "parser-tools-lib"
          "scribble-lib"))
        (dependency-names
         .
         ("base"
          "scheme-lib"
          "racket-doc"
          "syntax-color-doc"
          "parser-tools-lib"
          "scribble-lib"))
        (description . "mflatt@racket-lang.org")
        (modules . ())
        (name . "parser-tools-doc")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/parser-tools-doc.zip")
        (tags . ())))
 ("parser-tools-lib"
  .
  #hash((author . "mflatt@racket-lang.org")
        (checksum . "d553885950a02faad1791223464192aac3891727")
        (dependencies
         .
         ("scheme-lib" "base" "compatibility-lib" "rackunit-lib"))
        (dependency-names
         .
         ("scheme-lib" "base" "compatibility-lib" "rackunit-lib"))
        (description . "mflatt@racket-lang.org")
        (modules . ())
        (name . "parser-tools-lib")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/parser-tools-lib.zip")
        (tags . ())))
 ("parted"
  .
  #hasheq((author . "neil@neilvandyke.org")
          (authors . ("neil@neilvandyke.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "parted" "doc/parted@parted/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/parted.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/parted.txt")))
          (checksum . "32e6a6df9f53a568022c1fb7e50d96fc8025fdef")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base" "racket-doc" "scribble-lib" "mcfly" "overeasy" "sudo"))
          (dependency-names
           .
           ("base" "racket-doc" "scribble-lib" "mcfly" "overeasy" "sudo"))
          (description . "Interface to GNU Parted Disk Partion Utility")
          (implies . ())
          (last-checked . 1557339717)
          (last-edit . 1456470449)
          (last-updated . 1502816244)
          (modules
           .
           ((lib "parted/parted.rkt")
            (lib "parted/main.rkt")
            (lib "parted/parted.scrbl")))
          (name . "parted")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (:no-tag: . #t)
                   (author:neil@neilvandyke.org . #t)
                   (ring:1 . #t)))
          (source . "http://www.neilvandyke.org/racket/parted.zip")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "32e6a6df9f53a568022c1fb7e50d96fc8025fdef")
                          (source
                           .
                           "http://www.neilvandyke.org/racket/parted.zip")
                          (source_url
                           .
                           "http://www.neilvandyke.org/racket/parted.zip")))))))
 ("pcf"
  .
  #hasheq((author . "dvanhorn@racket-lang.org")
          (authors . ("dvanhorn@racket-lang.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("salvage"
                    "redex-to-lang"
                    "doc/redex-to-lang@pcf/index.html")
                   ("none" "pcf")))
                 (failure-log . "server/built/fail/pcf.txt")
                 (min-failure-log . #f)
                 (success-log . #f)
                 (test-failure-log . #f)
                 (test-success-log . #f)))
          (checksum . "f04e2ff7f34b89a3dc6c2a70a6a3283f954d3a67")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "redex-lib"
            "redex-pict-lib"
            "unstable-lib"
            "scribble-lib"
            "racket-doc"
            "sandbox-lib"
            "redex-doc"
            "scribble-doc"))
          (dependency-names
           .
           ("base"
            "redex-lib"
            "redex-pict-lib"
            "unstable-lib"
            "scribble-lib"
            "racket-doc"
            "sandbox-lib"
            "redex-doc"
            "scribble-doc"))
          (description . "PCF with Contracts and Symbolic Values")
          (implies . ())
          (last-checked . 1557339718)
          (last-edit . 1354677836)
          (last-updated . 1502816244)
          (modules
           .
           ((lib "scpcf/heap/examples.rkt")
            (lib "pcf/heap/lang.rkt")
            (lib "scpcf/lang/reader.rkt")
            (lib "spcf/redex.rkt")
            (lib "pcf/semantics.rkt")
            (lib "tests/pcf/redex.rkt")
            (lib "tests/spcf/redex.rkt")
            (lib "scpcf/semantics.rkt")
            (lib "pcf/types.rkt")
            (lib "scpcf/lang.rkt")
            (lib "scpcf/syntax.rkt")
            (lib "cpcf/types.rkt")
            (lib "pcf/source/lang/reader.rkt")
            (lib "pcf/syntax.rkt")
            (lib "pcf/heap/test.rkt")
            (lib "pcf/test.rkt")
            (lib "spcf/semantics.rkt")
            (lib "scribblings/pcf/pcf.scrbl")
            (lib "spcf/lang.rkt")
            (lib "cpcf/examples.rkt")
            (lib "scpcf/heap/test.rkt")
            (lib "cpcf/lang/reader.rkt")
            (lib "scribblings/redex-to-lang/redex-to-lang.scrbl")
            (lib "pcf/private/racket-pcf.rkt")
            (lib "pcf/private/make-lang.rkt")
            (lib "tests/spcf/make-tests.rkt")
            (lib "tests/scpcf/redex.rkt")
            (lib "scpcf/heap/lang/reader.rkt")
            (lib "spcf/syntax.rkt")
            (lib "pcf/private/lexical.rkt")
            (lib "tests/cpcf/redex.rkt")
            (lib "cpcf/test.rkt")
            (lib "cpcf/heap/syntax.rkt")
            (lib "scpcf/examples.rkt")
            (lib "pcf/lang/reader.rkt")
            (lib "pcf/source/lang.rkt")
            (lib "pcf/redex.rkt")
            (lib "cpcf/syntax.rkt")
            (lib "pcf/source.rkt")
            (lib "cpcf/heap/lang/reader.rkt")
            (lib "cpcf/heap/semantics.rkt")
            (lib "spcf/types.rkt")
            (lib "cpcf/heap/test.rkt")
            (lib "pcf/heap/syntax.rkt")
            (lib "scpcf/redex.rkt")
            (lib "spcf/heap/semantics.rkt")
            (lib "cpcf/semantics.rkt")
            (lib "tests/pcf/make-tests.rkt")
            (lib "cpcf/heap/lang.rkt")
            (lib "spcf/heap/lang.rkt")
            (lib "tests/scpcf/make-tests.rkt")
            (lib "cpcf/redex.rkt")
            (lib "pcf/private/subst.rkt")
            (lib "scpcf/types.rkt")
            (lib "scpcf/heap/syntax.rkt")
            (lib "spcf/examples.rkt")
            (lib "spcf/heap/lang/reader.rkt")
            (lib "spcf/heap/test.rkt")
            (lib "spcf/lang/reader.rkt")
            (lib "pcf/private/return.rkt")
            (lib "scpcf/heap/semantics.rkt")
            (lib "pcf/examples.rkt")
            (lib "pcf/private/prover.rkt")
            (lib "pcf/heap/examples/fact5.rkt")
            (lib "scpcf/heap/lang.rkt")
            (lib "pcf/heap/semantics.rkt")
            (lib "spcf/heap/syntax.rkt")
            (lib "pcf/private/label.rkt")
            (lib "pcf/lang.rkt")
            (lib "pcf/heap/lang/reader.rkt")
            (lib "tests/cpcf/make-tests.rkt")
            (lib "cpcf/lang.rkt")))
          (name . "pcf")
          (nix-sha256
           .
           "0f279rbzrcy0hxrx5cmyyhfbsmh38ym06d289sjjqh3bdk6wlzkh")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-fail: . #t)
                   (:docs-error: . #t)
                   (author:dvanhorn@racket-lang.org . #t)
                   (language . #t)
                   (ring:1 . #t)))
          (source . "github://github.com/dvanhorn/pcf/master/")
          (tags . ("language"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "f04e2ff7f34b89a3dc6c2a70a6a3283f954d3a67")
                          (source
                           .
                           "github://github.com/dvanhorn/pcf/master/")
                          (source_url
                           .
                           "http://github.com/dvanhorn/pcf/tree/master/")))))))
 ("pcg"
  .
  #hasheq((author . "macocio@gmail.com")
          (authors . ("macocio@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "pcg" "doc/pcg@pcg/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/pcg.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/pcg.txt")))
          (checksum . "4a03a774377ff84aae29c563bc5170edd9a200e0")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base" "sandbox-lib" "scribble-lib" "racket-doc" "rackunit-lib"))
          (dependency-names
           .
           ("base" "sandbox-lib" "scribble-lib" "racket-doc" "rackunit-lib"))
          (description . "Permuted congruential generators (PCG) in Racket")
          (implies . ())
          (last-checked . 1557339718)
          (last-edit . 1514881130)
          (last-updated . 1529977495)
          (modules . ((lib "pcg/scribblings/pcg.scrbl") (lib "pcg/main.rkt")))
          (name . "pcg")
          (nix-sha256
           .
           "0hi5dfkgi19b9wq8qa1gxxfdnq8q0ch4wj0yxli6ai8j8nnr9kmg")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:macocio@gmail.com . #t)
                   (pcg . #t)
                   (random . #t)
                   (ring:2 . #t)))
          (source . "https://github.com/BourgondAries/pcg.git")
          (tags . ("pcg" "random"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "4a03a774377ff84aae29c563bc5170edd9a200e0")
                          (source
                           .
                           "https://github.com/BourgondAries/pcg.git")
                          (source_url
                           .
                           "https://github.com/BourgondAries/pcg.git")))))))
 ("pconvert-lib"
  .
  #hash((author . "robby@racket-lang.org")
        (checksum . "6b506420a43d764e3bd47723481a19c56be45d72")
        (dependencies . ("base" "compatibility-lib"))
        (dependency-names . ("base" "compatibility-lib"))
        (description . "robby@racket-lang.org")
        (modules . ())
        (name . "pconvert-lib")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/pconvert-lib.zip")
        (tags . ())))
 ("pconvert-test"
  .
  #hash((author . "robby@racket-lang.org")
        (checksum . "e5386cece28623b846ba2e39935b4568b89b3434")
        (dependencies . ("base" "compatibility-lib"))
        (dependency-names . ("base" "compatibility-lib"))
        (description . "robby@racket-lang.org")
        (modules . ())
        (name . "pconvert-test")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/pconvert-test.zip")
        (tags . ())))
 ("pdf-read"
  .
  #hasheq((author . "gcr@sneakygcr.net")
          (authors . ("gcr@sneakygcr.net"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "pdf-read" "doc/pdf-read@pdf-read/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/pdf-read.txt")
                 (test-failure-log . "server/built/test-fail/pdf-read.txt")
                 (test-success-log . #f)))
          (checksum . "088f8831864625b04c93dc5a52b927625400804e")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "gui-lib"
            "draw-lib"
            "slideshow-lib"
            "scribble-lib"
            "racket-doc"
            "pict-doc"
            "draw-doc"))
          (dependency-names
           .
           ("base"
            "gui-lib"
            "draw-lib"
            "slideshow-lib"
            "scribble-lib"
            "racket-doc"
            "pict-doc"
            "draw-doc"))
          (description
           .
           "PDF reading library. Read PDF documents into picts and bitmap%s. You can also gather text and layout information. Requires liboppler.")
          (implies . ())
          (last-checked . 1557339718)
          (last-edit . 1391289735)
          (last-updated . 1502816245)
          (modules
           .
           ((lib "pdf-read/main.rkt")
            (lib "pdf-read/pdf-read.scrbl")
            (lib "pdf-read/ffi.rkt")))
          (name . "pdf-read")
          (nix-sha256
           .
           "0gppfa0qmaisj9k5bzjmaw1f33anfq25azwv18z0brz9q1nr7ixp")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:gcr@sneakygcr.net . #t)
                   (documents . #t)
                   (graphics . #t)
                   (io . #t)
                   (media . #t)
                   (pdf . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/gcr/pdf-read/")
          (tags . ("documents" "graphics" "io" "media" "pdf"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "088f8831864625b04c93dc5a52b927625400804e")
                          (source . "git://github.com/gcr/pdf-read/")
                          (source_url
                           .
                           "git://github.com/gcr/pdf-read/")))))))
 ("peg"
  .
  #hasheq((author . "rain1@airmail.cc")
          (authors . ("rain1@airmail.cc"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "peg" "doc/peg@peg/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/peg.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/peg.txt")))
          (checksum . "5191749fa13686045f2170358097eb81d710a9de")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "rackunit-lib" "scribble-lib" "racket-doc"))
          (dependency-names
           .
           ("base" "rackunit-lib" "scribble-lib" "racket-doc"))
          (description . "PEG parser generator")
          (implies . ())
          (last-checked . 1557339718)
          (last-edit . 1547239227)
          (last-updated . 1547239227)
          (modules
           .
           ((lib "peg/scribblings/peg.scrbl")
            (lib "peg/tests/peg-syntax-harness/peg-test-guile-passwd.rkt")
            (lib "peg/tests/s-exp/tests.rkt")
            (lib "peg/tests/docs-example-1.rkt")
            (lib "peg/tests/peg-syntax/peg-example-named-pattern.rkt")
            (lib "peg/tests/peg-syntax/peg-example-canopy.rkt")
            (lib "peg/tests/test-regex-range.rkt")
            (lib "peg/tests/peg-syntax/peg-example-float.rkt")
            (lib
             "peg/tests/peg-syntax-harness/peg-test-peg-in-peg-comments.rkt")
            (lib "peg/tests/peg-syntax-harness/peg-test-peg-as-peg.rkt")
            (lib "peg/tests/peg-syntax/peg-example-bracket-expand.rkt")
            (lib "peg/push-pop-boxes.rkt")
            (lib "peg/tests/peg-syntax/peg-example-shell.rkt")
            (lib "peg/tests/docs-example-2.rkt")
            (lib "peg/tests/peg-syntax/peg-example-peg-as-peg.rkt")
            (lib "peg/tests/peg-syntax/peg-example-guile-passwd.rkt")
            (lib "peg/tests/test-shell.rkt")
            (lib "peg/tests/docs-example-3.rkt")
            (lib "peg/tests/peg-syntax/peg-example-guile-cfunc.rkt")
            (lib "peg/tests/test-json.rkt")
            (lib "peg/tests/test-multibrack.rkt")
            (lib "peg/peg-to-scheme.rkt")
            (lib "peg/tests/test-etc-passwd.rkt")
            (lib "peg/tests/list-monad.rkt")
            (lib "peg/tests/peg-syntax-harness/test-named-pattern.rkt")
            (lib
             "peg/tests/peg-syntax-harness/peg-test-antlr-query-language.rkt")
            (lib "peg/tests/test-bracket-expand.rkt")
            (lib "peg/tests/test-unicode.rkt")
            (lib "peg/tests/test-quests.rkt")
            (lib "peg/tests/peg-syntax-harness/peg-test-expr.rkt")
            (lib
             "peg/tests/peg-syntax-harness/test-comma-separated-number.rkt")
            (lib "peg/tests/peg-syntax/peg-example-peg-in-peg-comments.rkt")
            (lib "peg/tests/peg-syntax/peg-example-imp.rkt")
            (lib "peg/tests/peg-syntax/peg-example-newick.rkt")
            (lib "peg/tests/peg-syntax-harness/peg-test-guile-cfunc.rkt")
            (lib "peg/s-exp.rkt")
            (lib "peg/tests/peg-syntax/peg-example-antlr-query-language.rkt")
            (lib "peg/tests/peg-syntax/peg-example-expr.rkt")
            (lib "peg/tests/peg-syntax/peg-example-positive-lookahead.rkt")
            (lib "peg/tests/peg-syntax-harness/test-imp.rkt")
            (lib "peg/tests/s-exp/test-dotted-pair.rkt")
            (lib "peg/tests/peg-syntax/peg-example-empty.rkt")
            (lib "peg/tests/peg-syntax/peg-example-quests.rkt")
            (lib "peg/tests/test-blg.rkt")
            (lib
             "peg/tests/peg-syntax-harness/peg-test-positive-lookahead.rkt")
            (lib "peg/tests/test-cfunc.rkt")
            (lib "peg/tests/test-verbose.rkt")
            (lib "peg/main.rkt")
            (lib "peg/tests/peg-syntax-harness/test-newick.rkt")
            (lib "peg/tests/s-exp/test-chars.rkt")
            (lib "peg/peg-result.rkt")
            (lib "peg/tests/test-tiny.rkt")
            (lib "peg/tests/s-exp/test-numbers.rkt")
            (lib "peg/tests/peg-syntax/peg-example-n.rkt")
            (lib "peg/tests/peg-syntax/peg-example-false-action.rkt")
            (lib "peg/peg.rkt")
            (lib "peg/tests/peg-syntax-harness/peg-test-false-action.rkt")
            (lib
             "peg/tests/peg-syntax/peg-example-comma-separated-number.rkt")
            (lib "peg/tests/peg-syntax-harness/test-import.rkt")
            (lib "peg/tests/peg-syntax/peg-example-import.rkt")
            (lib "peg/tests/peg-syntax-harness/peg-test-canopy.rkt")
            (lib "peg/tests/test-palindrome.rkt")
            (lib "peg/peg-in-peg.rkt")))
          (name . "peg")
          (nix-sha256
           .
           "0ylha9afhrv53qswxsiw43pdh8v5bwajr1i49nfjzx29m2gkzjwr")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:rain1@airmail.cc . #t)
                   (parser . #t)
                   (ring:2 . #t)))
          (source
           .
           "https://github.com/rain-1/racket-peg.git#5191749fa13686045f2170358097eb81d710a9de")
          (tags . ("parser"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "5191749fa13686045f2170358097eb81d710a9de")
                          (source
                           .
                           "https://github.com/rain-1/racket-peg.git#5191749fa13686045f2170358097eb81d710a9de")
                          (source_url
                           .
                           "https://github.com/rain-1/racket-peg.git#5191749fa13686045f2170358097eb81d710a9de")))
                 ("0.2"
                  .
                  #hasheq((checksum
                           .
                           "acecfd1ad746b90a5833cda547acf63ea4f22d89")
                          (source
                           .
                           "https://github.com/rain-1/racket-peg.git#acecfd1ad746b90a5833cda547acf63ea4f22d89")
                          (source_url
                           .
                           "https://github.com/rain-1/racket-peg.git#acecfd1ad746b90a5833cda547acf63ea4f22d89")))
                 ("0.3"
                  .
                  #hasheq((checksum
                           .
                           "b15157f762eca7e179862162aa619f3ca92812d9")
                          (source
                           .
                           "https://github.com/rain-1/racket-peg.git#b15157f762eca7e179862162aa619f3ca92812d9")
                          (source_url
                           .
                           "https://github.com/rain-1/racket-peg.git#b15157f762eca7e179862162aa619f3ca92812d9")))
                 ("0.4"
                  .
                  #hasheq((checksum
                           .
                           "5191749fa13686045f2170358097eb81d710a9de")
                          (source
                           .
                           "https://github.com/rain-1/racket-peg.git#5191749fa13686045f2170358097eb81d710a9de")
                          (source_url
                           .
                           "https://github.com/rain-1/racket-peg.git#5191749fa13686045f2170358097eb81d710a9de")))))))
 ("persistent-array"
  .
  #hasheq((author . "samth@ccs.neu.edu")
          (authors . ("samth@ccs.neu.edu"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "persistent-array"
                    "doc/persistent-array@persistent-array/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/persistent-array.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/persistent-array.txt")))
          (checksum . "9299dd5b6b33a953bdc4bfca3edcb956a86a35e2")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "racket-doc" "scribble-lib"))
          (dependency-names . ("base" "racket-doc" "scribble-lib"))
          (description . "A semi-persistent array")
          (implies . ())
          (last-checked . 1557339718)
          (last-edit . 1399935741)
          (last-updated . 1503067163)
          (modules . ((lib "data/p-array.scrbl") (lib "data/p-array.rkt")))
          (name . "persistent-array")
          (nix-sha256
           .
           "0816mgqnd10pbyi7s6a2wb83nb22ywpvg03vaff6qd6h9sd219l8")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:samth@ccs.neu.edu . #t)
                   (data . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/samth/persistent-array")
          (tags . ("data"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "9299dd5b6b33a953bdc4bfca3edcb956a86a35e2")
                          (source . "git://github.com/samth/persistent-array")
                          (source_url
                           .
                           "http://github.com/samth/persistent-array/tree/master")))))))
 ("persistent-union-find"
  .
  #hasheq((author . "samth@ccs.neu.edu")
          (authors . ("samth@ccs.neu.edu"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log
                  .
                  "server/built/install/persistent-union-find.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/persistent-union-find.txt")))
          (checksum . "f95278e362550a59dae327bd15f9f609009de6d0")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "persistent-array" "r6rs-lib"))
          (dependency-names . ("base" "persistent-array" "r6rs-lib"))
          (description
           .
           "A persistent implementation of the union-find data structure")
          (implies . ())
          (last-checked . 1557339718)
          (last-edit . 1410271570)
          (last-updated . 1502816246)
          (modules . ((lib "data/p-union-find.rkt")))
          (name . "persistent-union-find")
          (nix-sha256
           .
           "1dv855lmdimasaanbd2i2py1mv957s6brjgf6ac840zy0xhv7j73")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:samth@ccs.neu.edu . #t)
                   (data . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/samth/persistent-union-find")
          (tags . ("data"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "f95278e362550a59dae327bd15f9f609009de6d0")
                          (source
                           .
                           "git://github.com/samth/persistent-union-find")
                          (source_url
                           .
                           "http://github.com/samth/persistent-union-find/tree/master")))))))
 ("pex"
  .
  #hasheq((author . "mordae@anilinux.org")
          (authors . ("mordae@anilinux.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "pex" "doc/pex@pex/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/pex.txt")
                 (test-failure-log . "server/built/test-fail/pex.txt")
                 (test-success-log . #f)))
          (checksum . "57997dcdcf5533249d65a9040d55763b22dda57a")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "scribble-lib"
            "typed-racket-lib"
            "mordae"
            "libserialport"
            "racket-doc"
            "typed-racket-doc"
            "typed-racket-lib"))
          (dependency-names
           .
           ("base"
            "scribble-lib"
            "typed-racket-lib"
            "mordae"
            "libserialport"
            "racket-doc"
            "typed-racket-doc"
            "typed-racket-lib"))
          (description . "Apollo Art PEx System Control")
          (implies . ())
          (last-checked . 1557339719)
          (last-edit . 1439717819)
          (last-updated . 1502816246)
          (modules
           .
           ((lib "pex/regexp-read.rkt")
            (lib "pex/pex.scrbl")
            (lib "pex/main.rkt")))
          (name . "pex")
          (nix-sha256
           .
           "13k31cm89xp3nxiv022q0briaj0ndwc6qxlnwij7vhbv13riy1yd")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (:no-tag: . #t)
                   (author:mordae@anilinux.org . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/mordae/racket-pex")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "57997dcdcf5533249d65a9040d55763b22dda57a")
                          (source . "git://github.com/mordae/racket-pex")
                          (source_url
                           .
                           "http://github.com/mordae/racket-pex/tree/master")))))))
 ("pfds"
  .
  #hasheq((author . "asumu@ccs.neu.edu")
          (authors . ("asumu@ccs.neu.edu"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "functional-data-structures"
                    "doc/functional-data-structures@pfds/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/pfds.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/pfds.txt")))
          (checksum . "df1e2be3ed5d7a4bf3db2344ca4967a8e0f6a00b")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "typed-racket-lib"
            "typed-racket-compatibility"
            "scheme-lib"
            "at-exp-lib"
            "htdp-lib"
            "racket-doc"
            "scribble-lib"
            "typed-racket-more"))
          (dependency-names
           .
           ("base"
            "typed-racket-lib"
            "typed-racket-compatibility"
            "scheme-lib"
            "at-exp-lib"
            "htdp-lib"
            "racket-doc"
            "scribble-lib"
            "typed-racket-more"))
          (description . "Purely functional data structures for Typed Racket")
          (implies . ())
          (last-checked . 1557339719)
          (last-edit . 1355169108)
          (last-updated . 1553288983)
          (modules
           .
           ((lib "pfds/partialstream.rkt")
            (lib "pfds/scribblings/helper.rkt")
            (lib "pfds/tests/bankers-deque-tests.rkt")
            (lib "pfds/red-black-tree.rkt")
            (lib "pfds/tests/redblacktrees-tests.rkt")
            (lib "pfds/tests/implicitqueue-performance-tests.rkt")
            (lib "pfds/scribblings/vlist.scrbl")
            (lib "pfds/vlist.rkt")
            (lib "pfds/tests/binomialheap-tests.rkt")
            (lib "pfds/scribblings/deques.scrbl")
            (lib "pfds/deque/real-time.rkt")
            (lib "pfds/tests/bootstrapedqueue-tests.rkt")
            (lib "pfds/tests/pairingheap-test.rkt")
            (lib "pfds/tests/lazypairingheap-test.rkt")
            (lib "pfds/scribblings/bankers-deque.scrbl")
            (lib "pfds/ralist/binary.rkt")
            (lib "pfds/tests/stream-tests.rkt")
            (lib "pfds/scribblings/hood-melville-queue.scrbl")
            (lib "pfds/queue/real-time.rkt")
            (lib "pfds/queue/implicit.rkt")
            (lib "pfds/catenable-list.rkt")
            (lib "pfds/scribblings/skewbinomialheap.scrbl")
            (lib "pfds/scribblings/randomaccesslist.scrbl")
            (lib "pfds/queue/hood-melville.rkt")
            (lib "pfds/treap.rkt")
            (lib "pfds/scribblings/tries.scrbl")
            (lib "pfds/tests/realtimedeque-tests.rkt")
            (lib "pfds/tests/hood-melville-queue-tests.rkt")
            (lib "pfds/scribblings/functional-data-structures.scrbl")
            (lib "pfds/tests/leftistheaps-tests.rkt")
            (lib "pfds/tests/binary-ran-access-list-tests.rkt")
            (lib "pfds/heap/splay.rkt")
            (lib "pfds/scribblings/leftistheap.scrbl")
            (lib "pfds/scribblings/catenable-list.scrbl")
            (lib "pfds/heap/leftist.rkt")
            (lib "pfds/stream.rkt")
            (lib "pfds/heap/binomial.rkt")
            (lib "pfds/heap/lazy-pairing.rkt")
            (lib "pfds/scribblings/bootstrapedqueue.scrbl")
            (lib "pfds/scribblings/streams.scrbl")
            (lib "pfds/scribblings/lazypairingheap.scrbl")
            (lib "pfds/queue/bankers.rkt")
            (lib "pfds/scribblings/realtimequeue.scrbl")
            (lib "pfds/tests/realtimequeue-tests.rkt")
            (lib "pfds/tests/implicitdeque-performance-tests.rkt")
            (lib "pfds/scribblings/splayheap.scrbl")
            (lib "pfds/tests/tests-main.rkt")
            (lib "pfds/scribblings/redblacktrees.scrbl")
            (lib "pfds/queue/bootstrapped.rkt")
            (lib "pfds/tests/implicitdeque-tests.rkt")
            (lib "pfds/tests/vlist-tests.rkt")
            (lib "pfds/tests/treap-tests.rkt")
            (lib "pfds/tests/bankers-queue-benchmarks.rkt")
            (lib "pfds/tests/partialstream-tests.rkt")
            (lib "pfds/tests/physicists-queue-tests.rkt")
            (lib "pfds/heap/bootstrapped.rkt")
            (lib "pfds/scribblings/binaryrandomaccesslist.scrbl")
            (lib "pfds/scribblings/queues.scrbl")
            (lib "pfds/scribblings/bootstrapedheap.scrbl")
            (lib "pfds/deque/implicit.rkt")
            (lib "pfds/tests/splayheap-tests.rkt")
            (lib "pfds/scribblings/binomialheap.scrbl")
            (lib "pfds/ralist/skew.rkt")
            (lib "pfds/heap/pairing.rkt")
            (lib "pfds/tests/bootstrapedheap-tests.rkt")
            (lib "pfds/deque/bankers.rkt")
            (lib "pfds/scribblings/pairingheap.scrbl")
            (lib "pfds/scribblings/physicists-queue.scrbl")
            (lib "pfds/tests/skewbinaryrandomaccesslist-tests.rkt")
            (lib "pfds/scribblings/implicitdeque.scrbl")
            (lib "pfds/queue/physicists.rkt")
            (lib "pfds/scribblings/heaps.scrbl")
            (lib "pfds/trie.rkt")
            (lib "pfds/tests/implicitqueue-tests.rkt")
            (lib "pfds/tests/catenablelist-tests.rkt")
            (lib "pfds/delay.rkt")
            (lib "pfds/scribblings/treap.scrbl")
            (lib "pfds/tests/bankers-deque-benchmarks.rkt")
            (lib "pfds/tests/tries-test.rkt")
            (lib "pfds/heap/skew-binomial.rkt")
            (lib "pfds/scribblings/queue.scrbl")
            (lib "pfds/scribblings/implicitqueue.scrbl")
            (lib "pfds/tests/skewbinomialheap-tests.rkt")
            (lib "pfds/scribblings/realtimedeque.scrbl")
            (lib "pfds/scribblings/skewbinaryrandomaccesslist.scrbl")
            (lib "pfds/tests/bankers-queue-tests.rkt")))
          (name . "pfds")
          (nix-sha256
           .
           "00gkznf3ysyq4xjh4a00div2hypkyfyxnrj40nxfpqvyzb1gkyqv")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:asumu@ccs.neu.edu . #t)
                   (data . #t)
                   (ring:1 . #t)))
          (source . "github://github.com/takikawa/tr-pfds/master")
          (tags . ("data"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "df1e2be3ed5d7a4bf3db2344ca4967a8e0f6a00b")
                          (source
                           .
                           "github://github.com/takikawa/tr-pfds/master")
                          (source_url
                           .
                           "http://github.com/takikawa/tr-pfds/tree/master")))
                 ("6.0"
                  .
                  #hasheq((checksum
                           .
                           "cf67d14fc35d21e6f2a33551386bb4dd20599129")
                          (source
                           .
                           "github://github.com/takikawa/tr-pfds/v6.0")
                          (source_url
                           .
                           "http://github.com/takikawa/tr-pfds/tree/v6.0")))))))
 ("phc-adt"
  .
  #hasheq((author . "georges.duperon@gmail.com")
          (authors . ("georges.duperon@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . "server/built/deps/phc-adt.txt")
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/phc-adt.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/phc-adt.txt")))
          (checksum . "b9b031a9d28c1dbb96a36856244fa2333241e1e4")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("phc-adt-lib" "phc-adt-doc" "phc-adt-test"))
          (dependency-names . ("phc-adt-lib" "phc-adt-doc" "phc-adt-test"))
          (description
           .
           "Algebraic Data Types for Typed/Racket, with features tailored to compiler writing. The data types do not have to be declared before they are used, like prefab structs and symbols. Behind the scenes, this library remembers all the data types in a file, and uses it to implicitly pre-declare them. Mostly stable, although some things may change a bit in the future.")
          (implies . ("phc-adt-lib" "phc-adt-doc" "phc-adt-test"))
          (last-checked . 1557339719)
          (last-edit . 1485472285)
          (last-updated . 1527806630)
          (modules . ())
          (name . "phc-adt")
          (nix-sha256
           .
           "1299r7sv1cjdm30d07qcj1npr1p15jvvdfvynxi9bfzgh78mcgan")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-dep-fail: . #t)
                   (:build-success: . #t)
                   (author:georges.duperon@gmail.com . #t)
                   (data . #t)
                   (ring:1 . #t)
                   (typed-racket . #t)))
          (source . "https://github.com/jsmaniac/phc-adt.git?path=phc-adt")
          (tags . ("data" "typed-racket"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "b9b031a9d28c1dbb96a36856244fa2333241e1e4")
                          (source
                           .
                           "https://github.com/jsmaniac/phc-adt.git?path=phc-adt")
                          (source_url
                           .
                           "https://github.com/jsmaniac/phc-adt.git?path=phc-adt")))))))
 ("phc-adt-doc"
  .
  #hasheq((author . "georges.duperon@gmail.com")
          (authors . ("georges.duperon@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "phc-adt-implementation"
                    "doc/phc-adt-implementation@phc-adt-doc/index.html")
                   ("main" "phc-adt" "doc/phc-adt@phc-adt-doc/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/phc-adt-doc.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/phc-adt-doc.txt")))
          (checksum . "b9b031a9d28c1dbb96a36856244fa2333241e1e4")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "scribble-lib"
            "hyper-literate"
            "phc-adt-lib"
            "racket-doc"
            "typed-racket-doc"
            "typed-racket-lib"
            "scribble-enhanced"
            "scribble-math"
            "type-expander"
            "xlist"
            "alexis-util"
            "extensible-parser-specifications"
            "multi-id"
            "phc-toolkit"
            "remember"
            "threading"
            "trivial"
            "typed-struct-props"
            "datatype"))
          (dependency-names
           .
           ("base"
            "scribble-lib"
            "hyper-literate"
            "phc-adt-lib"
            "racket-doc"
            "typed-racket-doc"
            "typed-racket-lib"
            "scribble-enhanced"
            "scribble-math"
            "type-expander"
            "xlist"
            "alexis-util"
            "extensible-parser-specifications"
            "multi-id"
            "phc-toolkit"
            "remember"
            "threading"
            "trivial"
            "typed-struct-props"
            "datatype"))
          (description
           .
           "Documentation for phc-adt (and rendering of the literate programming)")
          (implies . ())
          (last-checked . 1557339719)
          (last-edit . 1501077462)
          (last-updated . 1527806631)
          (modules
           .
           ((lib "phc-adt/scribblings/phc-adt-tagged.scrbl")
            (lib "phc-adt/scribblings/phc-adt-constructor.scrbl")
            (lib "phc-adt/scribblings/phc-adt-structure.scrbl")
            (lib "phc-adt/scribblings/phc-adt.scrbl")
            (lib "phc-adt/scribblings/phc-adt-implementation.scrbl")
            (lib "phc-adt/scribblings/phc-adt-variant.scrbl")
            (lib "phc-adt/scribblings/phc-adt-choices.scrbl")))
          (name . "phc-adt-doc")
          (nix-sha256
           .
           "1299r7sv1cjdm30d07qcj1npr1p15jvvdfvynxi9bfzgh78mcgan")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:georges.duperon@gmail.com . #t)
                   (docs . #t)
                   (phc-adt . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/jsmaniac/phc-adt?path=phc-adt-doc")
          (tags . ("docs" "phc-adt"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "b9b031a9d28c1dbb96a36856244fa2333241e1e4")
                          (source
                           .
                           "git://github.com/jsmaniac/phc-adt?path=phc-adt-doc")
                          (source_url
                           .
                           "http://github.com/jsmaniac/phc-adt/tree/master?path=phc-adt-doc")))))))
 ("phc-adt-lib"
  .
  #hasheq((author . "georges.duperon@gmail.com")
          (authors . ("georges.duperon@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/phc-adt-lib.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/phc-adt-lib.txt")))
          (checksum . "b9b031a9d28c1dbb96a36856244fa2333241e1e4")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "typed-racket-lib"
            "hyper-literate"
            "multi-id"
            "phc-toolkit"
            "remember"
            "type-expander"
            "extensible-parser-specifications"
            "alexis-util"
            "typed-struct-props"
            "match-string"
            "xlist"
            "compatibility-lib"
            "generic-bind"
            "datatype"
            "at-exp-lib"
            "sandbox-lib"
            "scribble-enhanced"
            "scribble-lib"
            "scribble-math"))
          (dependency-names
           .
           ("base"
            "typed-racket-lib"
            "hyper-literate"
            "multi-id"
            "phc-toolkit"
            "remember"
            "type-expander"
            "extensible-parser-specifications"
            "alexis-util"
            "typed-struct-props"
            "match-string"
            "xlist"
            "compatibility-lib"
            "generic-bind"
            "datatype"
            "at-exp-lib"
            "sandbox-lib"
            "scribble-enhanced"
            "scribble-lib"
            "scribble-math"))
          (description . "Implementation of phc-adt")
          (implies . ())
          (last-checked . 1557339719)
          (last-edit . 1501077573)
          (last-updated . 1527806631)
          (modules
           .
           ((lib "phc-adt/adt-second-step.rkt")
            (lib "phc-adt/variant.hl.rkt")
            (lib "phc-adt/constructor.hl.rkt")
            (lib "phc-adt/check-no-overlap.rkt")
            (lib "phc-adt/adt.hl.rkt")
            (lib "phc-adt/tagged-structure-low-level.hl.rkt")
            (lib "phc-adt/tagged-supertype.hl.rkt")
            (lib "phc-adt/structure.hl.rkt")
            (lib "phc-adt/declarations.rkt")
            (lib "phc-adt/adt-init.rkt")
            (lib "phc-adt/node-low-level.hl.rkt")
            (lib "phc-adt/tagged.hl.rkt")
            (lib "phc-adt/ctx.hl.rkt")
            (lib "phc-adt/main.rkt")))
          (name . "phc-adt-lib")
          (nix-sha256
           .
           "1299r7sv1cjdm30d07qcj1npr1p15jvvdfvynxi9bfzgh78mcgan")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:georges.duperon@gmail.com . #t)
                   (phc-adt . #t)
                   (ring:1 . #t)))
          (source
           .
           "https://github.com/jsmaniac/phc-adt.git?path=phc-adt-lib")
          (tags . ("phc-adt"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "b9b031a9d28c1dbb96a36856244fa2333241e1e4")
                          (source
                           .
                           "https://github.com/jsmaniac/phc-adt.git?path=phc-adt-lib")
                          (source_url
                           .
                           "https://github.com/jsmaniac/phc-adt.git?path=phc-adt-lib")))))))
 ("phc-adt-test"
  .
  #hasheq((author . "georges.duperon@gmail.com")
          (authors . ("georges.duperon@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/phc-adt-test.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/phc-adt-test.txt")))
          (checksum . "b9b031a9d28c1dbb96a36856244fa2333241e1e4")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "phc-adt-lib"
            "rackunit-lib"
            "typed-racket-lib"
            "typed-racket-more"
            "multi-id"
            "phc-toolkit"
            "type-expander"))
          (dependency-names
           .
           ("base"
            "phc-adt-lib"
            "rackunit-lib"
            "typed-racket-lib"
            "typed-racket-more"
            "multi-id"
            "phc-toolkit"
            "type-expander"))
          (description . "Tests for phc-adt")
          (implies . ())
          (last-checked . 1557339719)
          (last-edit . 1501077628)
          (last-updated . 1527806631)
          (modules
           .
           ((lib "phc-adt/test/test-structure-low-level.rkt")
            (lib "phc-adt/test/row-polymorphism/test-with-update-only.rkt")
            (lib "phc-adt/test/test-adt-init-error.rkt")
            (lib "phc-adt/test/test-tagged-call-syntax.rkt")
            (lib "phc-adt/test/test-structure-speed.rkt")
            (lib "phc-adt/test/row-polymorphism/test-merge.rkt")
            (lib "phc-adt/test/test-tagged.rkt")
            (lib "phc-adt/test/row-polymorphism/test-with-plus.rkt")
            (lib "phc-adt/test/test-adt.rkt")
            (lib "phc-adt/test/test-constructor2.rkt")
            (lib "phc-adt/test/adt-pre-declarations.rkt")
            (lib "phc-adt/test/test-adt-init-no-error.rkt")
            (lib "phc-adt/test/row-polymorphism/adt-pre-declarations.rkt")
            (lib "phc-adt/test/test-structure-other.rkt")
            (lib "phc-adt/test/ck.rkt")
            (lib "phc-adt/test/mailing-list-example/example.rkt")
            (lib "phc-adt/test/test-define-adt.rkt")
            (lib "phc-adt/test/test-adt-structure-wrapped.rkt")
            (lib "phc-adt/test/test-constructor.rkt")
            (lib "phc-adt/test/test-structure2.rkt")
            (lib "phc-adt/test/test-tagged-define.rkt")
            (lib "phc-adt/test/row-polymorphism/test-with.rkt")
            (lib "phc-adt/test/test-structure.rkt")
            (lib "phc-adt/test/row-polymorphism/test-split.rkt")
            (lib "phc-adt/test/test-structure-parametric.rkt")
            (lib "phc-adt/test/node-low-level-quick-test.rkt")
            (lib "phc-adt/test/test-empty.rkt")
            (lib "phc-adt/test/test-constructor3.rkt")
            (lib "phc-adt/test/mailing-list-example/adt-pre-declarations.rkt")
            (lib "phc-adt/test/test-variant.rkt")
            (lib "phc-adt/test/test-tagged-parametric.rkt")))
          (name . "phc-adt-test")
          (nix-sha256
           .
           "1299r7sv1cjdm30d07qcj1npr1p15jvvdfvynxi9bfzgh78mcgan")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:georges.duperon@gmail.com . #t)
                   (phc-adt . #t)
                   (ring:1 . #t)
                   (tests . #t)))
          (source
           .
           "https://github.com/jsmaniac/phc-adt.git?path=phc-adt-test")
          (tags . ("phc-adt" "tests"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "b9b031a9d28c1dbb96a36856244fa2333241e1e4")
                          (source
                           .
                           "https://github.com/jsmaniac/phc-adt.git?path=phc-adt-test")
                          (source_url
                           .
                           "https://github.com/jsmaniac/phc-adt.git?path=phc-adt-test")))))))
 ("phc-toolkit"
  .
  #hasheq((author . "georges.duperon@gmail.com")
          (authors . ("georges.duperon@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "phc-toolkit"
                    "doc/phc-toolkit@phc-toolkit/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/phc-toolkit.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/phc-toolkit.txt")))
          (checksum . "396409cb63216e9b94d7eed4ebc43292c94b195d")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "rackunit-lib"
            "alexis-util"
            "typed-racket-lib"
            "typed-racket-more"
            "reprovide-lang"
            "type-expander"
            "hyper-literate"
            "version-case"
            "scribble-lib"
            "racket-doc"
            "typed-racket-doc"
            "predicates"
            "rackunit-doc"
            "scribble-math"
            "drracket"))
          (dependency-names
           .
           ("base"
            "rackunit-lib"
            "alexis-util"
            "typed-racket-lib"
            "typed-racket-more"
            "reprovide-lang"
            "type-expander"
            "hyper-literate"
            "version-case"
            "scribble-lib"
            "racket-doc"
            "typed-racket-doc"
            "predicates"
            "rackunit-doc"
            "scribble-math"
            "drracket"))
          (description
           .
           "Personal collection of utilities. Somewhat unstable and sparsely documented (for now).")
          (implies . ())
          (last-checked . 1557339719)
          (last-edit . 1501078642)
          (last-updated . 1555923974)
          (modules
           .
           ((lib "phc-toolkit/scribblings/set-untyped.scrbl")
            (lib "phc-toolkit/contract.rkt")
            (lib "phc-toolkit/scribblings/ids-untyped.scrbl")
            (lib "phc-toolkit/test/test-percent2.rkt")
            (lib "phc-toolkit/scribblings/for-star-list-star.scrbl")
            (lib "phc-toolkit/require-provide.rkt")
            (lib "phc-toolkit/scribblings/format-id-record-untyped.scrbl")
            (lib "phc-toolkit/scribblings/cond-let.scrbl")
            (lib "phc-toolkit/scribblings/multiassoc-syntax-untyped.scrbl")
            (lib "phc-toolkit/untyped-only/format-id-record.rkt")
            (lib "phc-toolkit/untyped-only/quasitemplate.rkt")
            (lib "phc-toolkit/ids.rkt")
            (lib "phc-toolkit/scribblings/backtrace-untyped.scrbl")
            (lib "phc-toolkit/cond-let.rkt")
            (lib "phc-toolkit/typed-rackunit.rkt")
            (lib "phc-toolkit/scribblings/repeat-stx.scrbl")
            (lib "phc-toolkit/scribblings/require-provide-untyped.scrbl")
            (lib "phc-toolkit/untyped-only/for-star-list-star.rkt")
            (lib "phc-toolkit/scribblings/multiassoc-syntax.scrbl")
            (lib "phc-toolkit/untyped/main.rkt")
            (lib "phc-toolkit/scribblings/backtrace.scrbl")
            (lib "phc-toolkit/scribblings/aliases-untyped.scrbl")
            (lib "phc-toolkit/scribblings/template.scrbl")
            (lib "phc-toolkit/scribblings/contract-untyped.scrbl")
            (lib "phc-toolkit/untyped/type-inference-helpers.rkt")
            (lib "phc-toolkit/scribblings/stx-patching-srcloc.scrbl")
            (lib "phc-toolkit/scribblings/list.scrbl")
            (lib "phc-toolkit/backtrace.rkt")
            (lib "phc-toolkit/scribblings/meta-struct.scrbl")
            (lib "phc-toolkit/scribblings/in-untyped.scrbl")
            (lib "phc-toolkit/untyped/compat.rkt")
            (lib "phc-toolkit/untyped/ids.rkt")
            (lib "phc-toolkit/scribblings/percent.scrbl")
            (lib "phc-toolkit/scribblings/cond-let-untyped.scrbl")
            (lib "phc-toolkit/threading.rkt")
            (lib "phc-toolkit/generate-indices.rkt")
            (lib "phc-toolkit/partial-include.rkt")
            (lib "phc-toolkit/untyped/backtrace.rkt")
            (lib "phc-toolkit/typed-rackunit-extensions.rkt")
            (lib "phc-toolkit/scribblings/fixnum-untyped.scrbl")
            (lib "phc-toolkit/test/meta-struct-test.rkt")
            (lib "phc-toolkit/scribblings/typed-rackunit.scrbl")
            (lib "phc-toolkit/untyped/require-provide.rkt")
            (lib "phc-toolkit/todo.rkt")
            (lib "phc-toolkit/sequence.rkt")
            (lib "phc-toolkit/untyped/syntax-parse.rkt")
            (lib "phc-toolkit/scribblings/repeat-stx-untyped.scrbl")
            (lib
             "phc-toolkit/scribblings/tmpl-multiassoc-syntax-untyped.scrbl")
            (lib "phc-toolkit/untyped/values.rkt")
            (lib "phc-toolkit/list-lang.rkt")
            (lib "phc-toolkit/scribblings/tmpl-untyped.scrbl")
            (lib "phc-toolkit/scribblings/test-framework-untyped.scrbl")
            (lib "phc-toolkit/scribblings/in.scrbl")
            (lib "phc-toolkit/test/list-test.rkt")
            (lib "phc-toolkit/scribblings/sequence-untyped.scrbl")
            (lib "phc-toolkit/test/test-format-id-record-inject.rkt")
            (lib "phc-toolkit/scribblings/generate-indices-untyped.scrbl")
            (lib "phc-toolkit/untyped/sequence.rkt")
            (lib "phc-toolkit/untyped/threading.rkt")
            (lib "phc-toolkit/test/test-syntax-parse.rkt")
            (lib "phc-toolkit/scribblings/generate-indices.scrbl")
            (lib "phc-toolkit/stx/fold.rkt")
            (lib "phc-toolkit/scribblings/utils.rkt")
            (lib "phc-toolkit/scribblings/set.scrbl")
            (lib
             "phc-toolkit/scribblings/syntax-parse-pattern-expanders.scrbl")
            (lib "phc-toolkit/type-inference-helpers.rkt")
            (lib "phc-toolkit/untyped/set.rkt")
            (lib "phc-toolkit/scribblings/sequence.scrbl")
            (lib "phc-toolkit/untyped.rkt")
            (lib "phc-toolkit/scribblings/not-implemented-yet-untyped.scrbl")
            (lib "phc-toolkit/test/test-ids.rkt")
            (lib "phc-toolkit/scribblings/test-framework.scrbl")
            (lib "phc-toolkit/scribblings/percent-untyped.scrbl")
            (lib "phc-toolkit/percent.rkt")
            (lib "phc-toolkit/scribblings/fixnum.scrbl")
            (lib "phc-toolkit/scribblings/require-provide.scrbl")
            (lib "phc-toolkit/list.rkt")
            (lib "phc-toolkit/multiassoc-syntax.rkt")
            (lib "phc-toolkit/test/test-define-temp-ids.rkt")
            (lib
             "phc-toolkit/scribblings/type-inference-helpers-untyped.scrbl")
            (lib "phc-toolkit/untyped-only/syntax-parse.rkt")
            (lib "phc-toolkit/scribblings/tmpl-multiassoc-syntax.scrbl")
            (lib "phc-toolkit/untyped/generate-indices.rkt")
            (lib "phc-toolkit/scribblings/eval-get-values.scrbl")
            (lib "phc-toolkit/untyped/aliases.rkt")
            (lib "phc-toolkit/untyped/cond-let.rkt")
            (lib "phc-toolkit/untyped/tmpl.rkt")
            (lib "phc-toolkit/scribblings/list-lang.scrbl")
            (lib "phc-toolkit/tmpl.rkt")
            (lib "phc-toolkit/stx/prefab.rkt")
            (lib "phc-toolkit/scribblings/stx-untyped.scrbl")
            (lib "phc-toolkit/fixnum.rkt")
            (lib "phc-toolkit/aliases.rkt")
            (lib "phc-toolkit/untyped/format-id-record.rkt")
            (lib "phc-toolkit/unstable.rkt")
            (lib "phc-toolkit/scribblings/logn-id.scrbl")
            (lib "phc-toolkit/untyped/not-implemented-yet.rkt")
            (lib "phc-toolkit/scribblings/type-inference-helpers.scrbl")
            (lib "phc-toolkit/untyped/typed-rackunit.rkt")
            (lib "phc-toolkit/scribblings/typed-rackunit-untyped.scrbl")
            (lib "phc-toolkit/light-no-check.rkt")
            (lib "phc-toolkit/untyped/misc.rkt")
            (lib "phc-toolkit/scribblings/list-untyped.scrbl")
            (lib "phc-toolkit/scribblings/meta-struct-untyped.scrbl")
            (lib "phc-toolkit/scribblings/typed-untyped-untyped.scrbl")
            (lib "phc-toolkit/repeat-stx.rkt")
            (lib "phc-toolkit/scribblings/not-implemented-yet.scrbl")
            (lib "phc-toolkit/untyped/test-framework.rkt")
            (lib "phc-toolkit/untyped/fixnum.rkt")
            (lib "phc-toolkit/scribblings/compat-untyped.scrbl")
            (lib "phc-toolkit/scribblings/eval-get-values-untyped.scrbl")
            (lib "phc-toolkit/untyped/in.rkt")
            (lib "phc-toolkit/scribblings/phc-toolkit.scrbl")
            (lib "phc-toolkit/scribblings/values.scrbl")
            (lib "phc-toolkit/untyped/logn-id.rkt")
            (lib "phc-toolkit/untyped/typed-untyped.rkt")
            (lib "phc-toolkit/in.rkt")
            (lib "phc-toolkit/typed-untyped.rkt")
            (lib "phc-toolkit/untyped/for-star-list-star.rkt")
            (lib "phc-toolkit/eval-get-values.rkt")
            (lib "phc-toolkit/untyped/meta-struct.rkt")
            (lib "phc-toolkit/scribblings/threading-untyped.scrbl")
            (lib "phc-toolkit/percent2.rkt")
            (lib "phc-toolkit/scribblings/stx.scrbl")
            (lib "phc-toolkit/scribblings/logn-id-untyped.scrbl")
            (lib "phc-toolkit/scribblings/ids.scrbl")
            (lib "phc-toolkit/scribblings/values-untyped.scrbl")
            (lib "phc-toolkit/scribblings/threading.scrbl")
            (lib "phc-toolkit/tmpl-multiassoc-syntax.rkt")
            (lib "phc-toolkit/test/test-format-id-record.rkt")
            (lib "phc-toolkit/untyped/tmpl-multiassoc-syntax.rkt")
            (lib "phc-toolkit/untyped-only/stx.rkt")
            (lib "phc-toolkit/untyped/multiassoc-syntax.rkt")
            (lib "phc-toolkit/scribblings/misc.scrbl")
            (lib "phc-toolkit/scribblings/compat.scrbl")
            (lib "phc-toolkit/is-untyped.rkt")
            (lib "phc-toolkit/scribblings/syntax-parse.scrbl")
            (lib "phc-toolkit/test/list-lang-test.rkt")
            (lib "phc-toolkit/untyped/typed-rackunit-extensions.rkt")
            (lib "phc-toolkit/is-typed.rkt")
            (lib "phc-toolkit/scribblings/stx-untyped-only.scrbl")
            (lib "phc-toolkit/scribblings/misc-untyped.scrbl")
            (lib "phc-toolkit/syntax-parse.rkt")
            (lib "phc-toolkit/test/test-fixnum.rkt")
            (lib "phc-toolkit/scribblings/tmpl.scrbl")
            (lib "phc-toolkit/untyped/repeat-stx.rkt")
            (lib "phc-toolkit/untyped/eval-get-values.rkt")
            (lib "phc-toolkit/scribblings/untyped.scrbl")
            (lib "phc-toolkit/untyped/contract.rkt")
            (lib "phc-toolkit/misc.rkt")
            (lib "phc-toolkit/untyped/list.rkt")
            (lib
             "phc-toolkit/scribblings/typed-rackunit-extensions-untyped.scrbl")
            (lib "phc-toolkit/test/test-stx.rkt")
            (lib "phc-toolkit/values.rkt")
            (lib "phc-toolkit/logn-id.rkt")
            (lib "phc-toolkit/stx.rkt")
            (lib "phc-toolkit/scribblings/typed-rackunit-extensions.scrbl")
            (lib "phc-toolkit/scribblings/typed-untyped.scrbl")
            (lib "phc-toolkit/untyped/percent.rkt")
            (lib "phc-toolkit/main.rkt")
            (lib "phc-toolkit/untyped/stx.rkt")
            (lib "phc-toolkit/meta-struct.rkt")
            (lib "phc-toolkit/compat.rkt")
            (lib "phc-toolkit/test-framework.rkt")
            (lib "phc-toolkit/set.rkt")
            (lib "phc-toolkit/untyped-only.rkt")
            (lib "phc-toolkit/scribblings/syntax-parse-untyped.scrbl")
            (lib "phc-toolkit/scribblings/aliases.scrbl")
            (lib "phc-toolkit/not-implemented-yet.rkt")
            (lib "phc-toolkit/scribblings/contract.scrbl")))
          (name . "phc-toolkit")
          (nix-sha256
           .
           "1i0wd1l2vi5982fk7qar2mbqgg9lsaawl6bcf9iylgqnw853ldm2")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:georges.duperon@gmail.com . #t)
                   (experimental . #t)
                   (ring:1 . #t)
                   (util . #t)))
          (source . "https://github.com/jsmaniac/phc-toolkit.git")
          (tags . ("experimental" "util"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "396409cb63216e9b94d7eed4ebc43292c94b195d")
                          (source
                           .
                           "https://github.com/jsmaniac/phc-toolkit.git")
                          (source_url
                           .
                           "https://github.com/jsmaniac/phc-toolkit.git")))))))
 ("php-parser"
  .
  #hasheq((author . "antoine.brand@sfr.fr")
          (authors . ("antoine.brand@sfr.fr"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/php-parser.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/php-parser.txt")))
          (checksum . "159665a9078e46f1ea7712363f83cb8e5d9a2703")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base" "parser-tools" "rackunit-lib" "scribble-lib"))
          (dependency-names
           .
           ("base" "parser-tools" "rackunit-lib" "scribble-lib"))
          (description . "A php parser")
          (implies . ())
          (last-checked . 1557339719)
          (last-edit . 1392482623)
          (last-updated . 1516648640)
          (modules
           .
           ((lib "php-parser/utils.rkt")
            (lib "php-parser/parser-utils.rkt")
            (lib "php-parser/parser.rkt")
            (lib "php-parser/main.rkt")
            (lib "php-parser/php-parser.scrbl")))
          (name . "php-parser")
          (nix-sha256
           .
           "18d5g095fb7d2kz0bq8wrfhadxlwhgl0nxp8v58l7z1vc1pr0zj3")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:antoine.brand@sfr.fr . #t)
                   (parser . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/antoineb/php-parser")
          (tags . ("parser"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "159665a9078e46f1ea7712363f83cb8e5d9a2703")
                          (source . "git://github.com/antoineb/php-parser")
                          (source_url
                           .
                           "http://github.com/antoineb/php-parser/tree/master")))))))
 ("pict"
  .
  #hash((author . "mflatt@racket-lang.org robby@racket-lang.org")
        (checksum . "d68972270bfa859e5b9d8875d58f3ce5ccbb8cce")
        (dependencies . ("pict-lib" "pict-doc"))
        (dependency-names . ("pict-lib" "pict-doc"))
        (description . "mflatt@racket-lang.org robby@racket-lang.org")
        (modules . ())
        (name . "pict")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/pict.zip")
        (tags . ())))
 ("pict-abbrevs"
  .
  #hasheq((author . "types@ccs.neu.edu")
          (authors . ("types@ccs.neu.edu"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "pict-abbrevs"
                    "doc/pict-abbrevs@pict-abbrevs/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/pict-abbrevs.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/pict-abbrevs.txt")))
          (checksum . "8b8a198f8838f6a92a26e48f229deade5e8e0c67")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "pict-lib"
            "lang-file"
            "draw-lib"
            "slideshow-lib"
            "ppict"
            "rackunit-lib"
            "racket-doc"
            "scribble-doc"
            "gui-doc"
            "pict-doc"
            "draw-doc"
            "plot-doc"
            "plot-lib"
            "scribble-lib"
            "slideshow-doc"))
          (dependency-names
           .
           ("base"
            "pict-lib"
            "lang-file"
            "draw-lib"
            "slideshow-lib"
            "ppict"
            "rackunit-lib"
            "racket-doc"
            "scribble-doc"
            "gui-doc"
            "pict-doc"
            "draw-doc"
            "plot-doc"
            "plot-lib"
            "scribble-lib"
            "slideshow-doc"))
          (description . "Pict helper functions")
          (implies . ())
          (last-checked . 1557339719)
          (last-edit . 1542491206)
          (last-updated . 1552755951)
          (modules
           .
           ((lib "pict-abbrevs/slideshow.rkt")
            (lib "pict-abbrevs/private/pict-abbrevs.rkt")
            (lib "pict-abbrevs/private/slideshow.rkt")
            (lib "pict-abbrevs/main.rkt")
            (lib "pict-abbrevs/scribblings/pict-abbrevs.scrbl")
            (lib "pict-abbrevs/private/raco.rkt")))
          (name . "pict-abbrevs")
          (nix-sha256
           .
           "0za8zyxrhz9ai7z3xc7naz6zj3fkyqfq4h3d23c821kqs0dxqydc")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:types@ccs.neu.edu . #t)
                   (pict . #t)
                   (ring:2 . #t)
                   (util . #t)))
          (source . "https://gitlab.com/bengreenman/pict-abbrevs.git")
          (tags . ("pict" "util"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "8b8a198f8838f6a92a26e48f229deade5e8e0c67")
                          (source
                           .
                           "https://gitlab.com/bengreenman/pict-abbrevs.git")
                          (source_url
                           .
                           "https://gitlab.com/bengreenman/pict-abbrevs.git")))))))
 ("pict-doc"
  .
  #hash((author . "mflatt@racket-lang.org robby@racket-lang.org")
        (checksum . "051bf940662f3575a5070c20314a3c0a61ca6b47")
        (dependencies
         .
         ("base"
          "mzscheme-doc"
          "draw-doc"
          "gui-doc"
          "slideshow-doc"
          "draw-lib"
          "gui-lib"
          "scribble-lib"
          "slideshow-lib"
          "pict-lib"
          "racket-doc"
          "scribble-doc"))
        (dependency-names
         .
         ("base"
          "mzscheme-doc"
          "draw-doc"
          "gui-doc"
          "slideshow-doc"
          "draw-lib"
          "gui-lib"
          "scribble-lib"
          "slideshow-lib"
          "pict-lib"
          "racket-doc"
          "scribble-doc"))
        (description . "mflatt@racket-lang.org robby@racket-lang.org")
        (modules . ())
        (name . "pict-doc")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/pict-doc.zip")
        (tags . ())))
 ("pict-lib"
  .
  #hash((author . "mflatt@racket-lang.org robby@racket-lang.org")
        (checksum . "f74d69145b3b36e092fdaeb295a3775c104fcf21")
        (dependencies
         .
         ("scheme-lib"
          "base"
          "compatibility-lib"
          "draw-lib"
          "syntax-color-lib"
          "rackunit-lib"))
        (dependency-names
         .
         ("scheme-lib"
          "base"
          "compatibility-lib"
          "draw-lib"
          "syntax-color-lib"
          "rackunit-lib"))
        (description . "mflatt@racket-lang.org robby@racket-lang.org")
        (modules . ())
        (name . "pict-lib")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/pict-lib.zip")
        (tags . ())))
 ("pict-snip"
  .
  #hash((author . "robby@racket-lang.org")
        (checksum . "a51734bfa97c4d4052d099805d269fa90ee547a9")
        (dependencies . ("pict-snip-lib" "pict-snip-doc"))
        (dependency-names . ("pict-snip-lib" "pict-snip-doc"))
        (description . "robby@racket-lang.org")
        (modules . ())
        (name . "pict-snip")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/pict-snip.zip")
        (tags . ())))
 ("pict-snip-doc"
  .
  #hash((author . "robby@racket-lang.org")
        (checksum . "9efa5a12911998d3e7670e18ef32040bfe5095ed")
        (dependencies
         .
         ("base"
          "pict-snip-lib"
          "gui-doc"
          "pict-doc"
          "pict-lib"
          "racket-doc"
          "scribble-lib"
          "snip-lib"))
        (dependency-names
         .
         ("base"
          "pict-snip-lib"
          "gui-doc"
          "pict-doc"
          "pict-lib"
          "racket-doc"
          "scribble-lib"
          "snip-lib"))
        (description . "robby@racket-lang.org")
        (modules . ())
        (name . "pict-snip-doc")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/pict-snip-doc.zip")
        (tags . ())))
 ("pict-snip-lib"
  .
  #hash((author . "robby@racket-lang.org")
        (checksum . "d05571ec3cdc9a70e7026c15b550c64a3b1235e5")
        (dependencies
         .
         ("draw-lib"
          "snip-lib"
          "pict-lib"
          "wxme-lib"
          "base"
          "rackunit-lib"
          "gui-lib"))
        (dependency-names
         .
         ("draw-lib"
          "snip-lib"
          "pict-lib"
          "wxme-lib"
          "base"
          "rackunit-lib"
          "gui-lib"))
        (description . "robby@racket-lang.org")
        (modules . ())
        (name . "pict-snip-lib")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/pict-snip-lib.zip")
        (tags . ())))
 ("pict-snip-test"
  .
  #hash((author . "robby@racket-lang.org")
        (checksum . "b22aa4faea5bd5382ed3420593c3edf5456f8d00")
        (dependencies
         .
         ("base" "pict-snip-lib" "draw-lib" "pict-lib" "rackunit-lib"))
        (dependency-names
         .
         ("base" "pict-snip-lib" "draw-lib" "pict-lib" "rackunit-lib"))
        (description . "robby@racket-lang.org")
        (modules . ())
        (name . "pict-snip-test")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/pict-snip-test.zip")
        (tags . ())))
 ("pict-test"
  .
  #hash((author . "mflatt@racket-lang.org robby@racket-lang.org")
        (checksum . "fd6313bfb8aff62019ea1675fac668baf3981581")
        (dependencies
         .
         ("base" "pict-lib" "rackunit-lib" "htdp-lib" "draw-lib"))
        (dependency-names
         .
         ("base" "pict-lib" "rackunit-lib" "htdp-lib" "draw-lib"))
        (description . "mflatt@racket-lang.org robby@racket-lang.org")
        (modules . ())
        (name . "pict-test")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/pict-test.zip")
        (tags . ())))
 ("pict3d"
  .
  #hasheq((author
           .
           "neil.toronto@gmail.com jay.mccarthy@gmail.com mflatt@racket-lang.org alexander@knauth.org")
          (authors
           .
           ("neil.toronto@gmail.com"
            "jay.mccarthy@gmail.com"
            "mflatt@racket-lang.org"
            "alexander@knauth.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "pict3d" "doc/pict3d@pict3d/index.html")
                   ("main"
                    "typed-opengl"
                    "doc/typed-opengl@pict3d/index.html")))
                 (failure-log . #f)
                 (min-failure-log . "server/built/min-fail/pict3d.txt")
                 (success-log . "server/built/install/pict3d.txt")
                 (test-failure-log . "server/built/test-fail/pict3d.txt")
                 (test-success-log . #f)))
          (checksum . "b73e77c66461081934eaeeb17f079841a0118387")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           (("base" #:version "6.3")
            "draw-lib"
            "srfi-lite-lib"
            "typed-racket-lib"
            "typed-racket-more"
            "math-lib"
            "scribble-lib"
            "gui-lib"
            "pconvert-lib"
            "pict-lib"
            "profile-lib"
            "pfds"
            "unstable-lib"
            "draw-doc"
            "gui-doc"
            "gui-lib"
            "racket-doc"
            "plot-doc"
            "plot-lib"
            "plot-gui-lib"
            "images-doc"
            "images-lib"
            "htdp-doc"
            "htdp-lib"
            "pict-doc"
            "typed-racket-doc"))
          (dependency-names
           .
           ("base"
            "draw-lib"
            "srfi-lite-lib"
            "typed-racket-lib"
            "typed-racket-more"
            "math-lib"
            "scribble-lib"
            "gui-lib"
            "pconvert-lib"
            "pict-lib"
            "profile-lib"
            "pfds"
            "unstable-lib"
            "draw-doc"
            "gui-doc"
            "gui-lib"
            "racket-doc"
            "plot-doc"
            "plot-lib"
            "plot-gui-lib"
            "images-doc"
            "images-lib"
            "htdp-doc"
            "htdp-lib"
            "pict-doc"
            "typed-racket-doc"))
          (description
           .
           "Modern 3D engine with a purely functional interface")
          (implies . ())
          (last-checked . 1557339721)
          (last-edit . 1450551203)
          (last-updated . 1506098094)
          (modules
           .
           ((lib "pict3d/scribblings/sniplike-bitmap.rkt")
            (lib "pict3d/private/math/flprojective3.rkt")
            (lib "pict3d/private/math/flv3-merge.rkt")
            (lib "pict3d/private/shape.rkt")
            (lib "pict3d/private/shape/sphere/ge_32.rkt")
            (lib "pict3d/tests/pr/33.rkt")
            (lib "pict3d/tests/opengl/planet.rkt")
            (lib "pict3d/private/engine/types.rkt")
            (lib "pict3d/private/math/fl.rkt")
            (lib "pict3d/private/math/fls3.rkt")
            (lib "pict3d/private/shape/triangle-mesh.rkt")
            (lib "pict3d/tests/opengl/vbotest.rkt")
            (lib "pict3d/tests/math/flv3-tests.rkt")
            (lib "pict3d/private/math/flaffine3.rkt")
            (lib "pict3d/private/gui/pict3d-bitmap.rkt")
            (lib "pict3d/private/gui/utils/format.rkt")
            (lib "pict3d/private/gui/typed-pict3d-combinators.rkt")
            (lib "pict3d/private/gl/cached-vector.rkt")
            (lib "pict3d/tests/triangle-surface.rkt")
            (lib "pict3d/private/gui/typed-pict3d-bitmap.rkt")
            (lib "pict3d/private/shape/disk.rkt")
            (lib "pict3d/private/gui/pict3d-struct.rkt")
            (lib "pict3d/private/math/maybe-flrect3.rkt")
            (lib "pict3d/tests/spinny-cube/player.rkt")
            (lib "pict3d/private/gui/utils/scales.rkt")
            (lib "pict3d/private/utils.rkt")
            (lib "pict3d/tests/opengl/gltest.rkt")
            (lib "pict3d/private/shape/directional-light.rkt")
            (lib "pict3d/private/soup/deform.rkt")
            (lib "pict3d/private/engine/draw.rkt")
            (lib "typed/opengl/typed-types.rkt")
            (lib "pict3d/private/shape/rectangle.rkt")
            (lib "pict3d/tests/depth-range.rkt")
            (lib "pict3d/private/math/flt3.rkt")
            (lib "pict3d/tests/fractal-trees.rkt")
            (lib "pict3d/scribblings/utils.rkt")
            (lib "pict3d/tests/spinny-cube/player-state.rkt")
            (lib "pict3d/tests/gen-world-state.rkt")
            (lib "pict3d/private/engine/shader.rkt")
            (lib "pict3d/private/gl/context.rkt")
            (lib "pict3d/private/engine/draw/draw-pass.rkt")
            (lib "pict3d/private/ffi-types.rkt")
            (lib "pict3d/private/math/flplane3.rkt")
            (lib "pict3d/private/soup/types.rkt")
            (lib "pict3d/private/engine/utils.rkt")
            (lib "pict3d/private/shape/sphere.rkt")
            (lib "pict3d/tests/adaptive-deform.rkt")
            (lib "pict3d/private/engine/scene.rkt")
            (lib "pict3d/private/engine/shader/shader-code.rkt")
            (lib "pict3d/private/soup/mesh.rkt")
            (lib "pict3d/private/gl/program.rkt")
            (lib "pict3d/private/math/flt3-data.rkt")
            (lib "pict3d/private/gui/typed-user-types.rkt")
            (lib "pict3d/private/shape/types.rkt")
            (lib "pict3d/tests/deform-groups.rkt")
            (lib "typed/opengl/ffi.rkt")
            (lib "pict3d/private/gui/pict3d-draw.rkt")
            (lib "pict3d/private/untyped-utils.rkt")
            (lib "typed/opengl/readspec.rkt")
            (lib "pict3d/private/gl/face.rkt")
            (lib "pict3d/private/gui/master-context.rkt")
            (lib "pict3d/private/math/flv3.rkt")
            (lib "pict3d/private/gui/untyped-pict3d-bitmap.rkt")
            (lib "typed/opengl/ffi-types.rkt")
            (lib "pict3d/tests/spinny-cube/player-state-test.rkt")
            (lib "pict3d/private/shape/cylinder.rkt")
            (lib "pict3d/tests/opengl/viewer.rkt")
            (lib "pict3d/private/shape/sphere/sphere-type.rkt")
            (lib "pict3d/private/pos/pos-dir.rkt")
            (lib "pict3d/private/shape/polygon.rkt")
            (lib "pict3d/private/gui/utils/timeout-timer.rkt")
            (lib "pict3d/private/gui/untyped-master-context.rkt")
            (lib "pict3d/private/engine/scene/scene.rkt")
            (lib "pict3d/scribblings/serializable-bitmap.rkt")
            (lib "pict3d/tests/opengl/shadertest.rkt")
            (lib "pict3d/private/pos/linear-affine-smooth.rkt")
            (lib "pict3d/private/math.rkt")
            (lib "pict3d/tests/triangle-vertex.rkt")
            (lib "typed/opengl/typed-opengl.scrbl")
            (lib "typed/opengl/untyped.rkt")
            (lib "pict3d/private/math/flt3-unboxed-ops.rkt")
            (lib "pict3d/private/gui/pict3d-combinators.rkt")
            (lib "pict3d/private/gui/pict3d-snip.rkt")
            (lib "pict3d/private/engine/scene/types.rkt")
            (lib "pict3d/private/gl/framebuffer.rkt")
            (lib "pict3d/private/gui/untyped-pict3d-canvas.rkt")
            (lib "pict3d/tests/debug-passes.rkt")
            (lib "pict3d/tests/spaceship.rkt")
            (lib "pict3d/main.rkt")
            (lib "pict3d/private/math/flv4.rkt")
            (lib "pict3d/private/gui/parameters.rkt")
            (lib "pict3d/private/gui/shape/light-grid.rkt")
            (lib "pict3d/tests/trace.rkt")
            (lib "pict3d/private/gui/utils/camera.rkt")
            (lib "pict3d/tests/cull.rkt")
            (lib "pict3d/private/gui/typed-pict3d-canvas.rkt")
            (lib "pict3d/private/shape/frozen-scene.rkt")
            (lib "pict3d/private/math/fl2.rkt")
            (lib "pict3d/private/soup/query.rkt")
            (lib "pict3d/private/universe/big-bang.rkt")
            (lib "pict3d/private/gl/buffer.rkt")
            (lib "typed/opengl/utils.rkt")
            (lib "pict3d/private/gui/pict3d-canvas.rkt")
            (lib "pict3d/private/engine/shader/serialize-vertices.rkt")
            (lib "pict3d/tests/docs-complete.rkt")
            (lib "pict3d/private/gui/indicators.rkt")
            (lib "pict3d/private/engine/scene/scene-query.rkt")
            (lib "pict3d/universe.rkt")
            (lib "pict3d/tests/spinny-cube/debug-picts.rkt")
            (lib "pict3d/engine.rkt")
            (lib "pict3d/private/lazy-gui.rkt")
            (lib "pict3d/private/engine/draw/draw-passes.rkt")
            (lib "typed/opengl.rkt")
            (lib "pict3d/private/gl/typed-context.rkt")
            (lib "pict3d/private/gl/texture.rkt")
            (lib "pict3d/private/soup/geometry.rkt")
            (lib "pict3d/private/pos/affine-combinators.rkt")
            (lib "pict3d/private/gl/renderbuffer.rkt")
            (lib "pict3d/private/memo.rkt")
            (lib "pict3d/private/shape/sphere/ge_30.rkt")
            (lib "pict3d/scribblings/pict3d.scrbl")
            (lib "pict3d/tests/spheres-on-canvas.rkt")
            (lib "pict3d/private/math/flrect3.rkt")
            (lib "pict3d/tests/randomized/check-ray-trace-vs-opengl.rkt")
            (lib "pict3d/tests/opengl/gears.rkt")
            (lib "pict3d/private/gl/untyped-context.rkt")
            (lib "pict3d/private/math/fl4.rkt")
            (lib "pict3d/private/gl/object.rkt")
            (lib "pict3d/private/shape/composite.rkt")
            (lib "pict3d/private/math/fl3.rkt")
            (lib "pict3d/private/engine/draw/types.rkt")
            (lib "pict3d/private/gui/user-types.rkt")
            (lib "pict3d/private/gui/utils/center-pointer.rkt")
            (lib "pict3d/tests/randomized/randomized-tests.rkt")
            (lib "pict3d/tests/shaders.rkt")
            (lib "pict3d/private/gui/shape/point-light-shell.rkt")
            (lib "pict3d/private/engine.rkt")
            (lib "pict3d/private/math/fllinear3.rkt")
            (lib "pict3d/private/soup.rkt")
            (lib "pict3d/tests/snowman.rkt")
            (lib "pict3d/tests/randomized/regression-tests.rkt")
            (lib "pict3d/private/engine/scene/tags.rkt")
            (lib "pict3d/tests/nuclear-sausage-plant.rkt")
            (lib "pict3d/private/shape/triangle-outline.rkt")
            (lib "pict3d/private/gui/invisible-context.rkt")
            (lib "pict3d/private/soup/group.rkt")
            (lib "typed/opengl/typed.rkt")
            (lib "pict3d/tests/camera-ray-trace.rkt")
            (lib "pict3d/private/engine/draw/merge-passes.rkt")
            (lib "pict3d/private/shape/point-light.rkt")
            (lib "pict3d/tests/randomized/check-tessellate-vs-orig.rkt")
            (lib "pict3d/private/gl.rkt")
            (lib "pict3d/private/ffi.rkt")
            (lib "pict3d/private/gl/vertex-array.rkt")
            (lib "pict3d/tests/opengl/bitmaptest.rkt")))
          (name . "pict3d")
          (nix-sha256
           .
           "13x6agc9yjbqdg5bw3vld8ivfgpab5cpf4zy9sqvjsvld4qq851r")
          (ring . 1)
          (search-terms
           .
           #hasheq((3d . #t)
                   (:build-success: . #t)
                   (:docs: . #t)
                   (author:alexander@knauth.org . #t)
                   (author:jay.mccarthy@gmail.com . #t)
                   (author:mflatt@racket-lang.org . #t)
                   (author:neil.toronto@gmail.com . #t)
                   (games . #t)
                   (graphics . #t)
                   (gui . #t)
                   (opengl . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/jeapostrophe/pict3d")
          (tags . ("3d" "games" "graphics" "gui" "opengl"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "b73e77c66461081934eaeeb17f079841a0118387")
                          (source . "git://github.com/jeapostrophe/pict3d")
                          (source_url
                           .
                           "http://github.com/jeapostrophe/pict3d/tree/master")))
                 ("6.1.1"
                  .
                  #hasheq((checksum
                           .
                           "da3d9b084909b643415e6d51cd269c82fd50feb3")
                          (source
                           .
                           "git://github.com/jeapostrophe/pict3d#for-racket-v6.2.1")
                          (source_url
                           .
                           "http://github.com/jeapostrophe/pict3d/tree/master#for-racket-v6.2.1")))
                 ("6.2"
                  .
                  #hasheq((checksum
                           .
                           "da3d9b084909b643415e6d51cd269c82fd50feb3")
                          (source
                           .
                           "git://github.com/jeapostrophe/pict3d#for-racket-v6.2.1")
                          (source_url
                           .
                           "http://github.com/jeapostrophe/pict3d/tree/master#for-racket-v6.2.1")))
                 ("6.2.1"
                  .
                  #hasheq((checksum
                           .
                           "da3d9b084909b643415e6d51cd269c82fd50feb3")
                          (source
                           .
                           "git://github.com/jeapostrophe/pict3d#for-racket-v6.2.1")
                          (source_url
                           .
                           "http://github.com/jeapostrophe/pict3d/tree/master#for-racket-v6.2.1")))))))
 ("pict3d-die-cut"
  .
  #hasheq((author . "mflatt@cs.utah.edu")
          (authors . ("mflatt@cs.utah.edu"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "pict3d-die-cut"
                    "doc/pict3d-die-cut@pict3d-die-cut/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/pict3d-die-cut.txt")
                 (test-failure-log
                  .
                  "server/built/test-fail/pict3d-die-cut.txt")
                 (test-success-log . #f)))
          (checksum . "29354f8dd2e9f964da834903332318a995d15727")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            ("draw-lib" #:version "1.8")
            "gui-lib"
            "pict3d"
            "glu-tessellate"
            "draw-doc"
            "racket-doc"
            "scribble-lib"))
          (dependency-names
           .
           ("base"
            "draw-lib"
            "gui-lib"
            "pict3d"
            "glu-tessellate"
            "draw-doc"
            "racket-doc"
            "scribble-lib"))
          (description
           .
           "For Pict3D, generates text and other 2-D shapes from paths")
          (implies . ())
          (last-checked . 1557339721)
          (last-edit . 1443652999)
          (last-updated . 1502816255)
          (modules
           .
           ((lib "pict3d-die-cut/pict3d-die-cut.scrbl")
            (lib "pict3d-die-cut/main.rkt")))
          (name . "pict3d-die-cut")
          (nix-sha256
           .
           "1hw51frdpq8yfh87yp3w80gg5ilx0vbyr8zngdw4v7giw8mp821b")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:mflatt@cs.utah.edu . #t)
                   (graphics . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/mflatt/pict3d-die-cut")
          (tags . ("graphics"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "29354f8dd2e9f964da834903332318a995d15727")
                          (source . "git://github.com/mflatt/pict3d-die-cut")
                          (source_url
                           .
                           "http://github.com/mflatt/pict3d-die-cut/tree/master")))))))
 ("pict3d-orig"
  .
  #hasheq((author . "neil.toronto@gmail.com")
          (authors . ("neil.toronto@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("none" "pict3d")
                   ("salvage"
                    "typed-opengl"
                    "doc/typed-opengl@pict3d-orig/index.html")))
                 (failure-log . "server/built/fail/pict3d-orig.txt")
                 (min-failure-log . #f)
                 (success-log . #f)
                 (test-failure-log . #f)
                 (test-success-log . #f)))
          (checksum . "09283c9d930c63b6a6a3f2caa43e029222091bdb")
          (checksum-error . #f)
          (conflicts . ("pict3d"))
          (dependencies
           .
           (("base" #:version "6.1.1")
            "draw-lib"
            "srfi-lite-lib"
            "typed-racket-lib"
            "typed-racket-more"
            "math-lib"
            "scribble-lib"
            "gui-lib"
            "pconvert-lib"
            "pict-lib"
            "profile-lib"
            "pfds"
            "draw-doc"
            "gui-doc"
            "gui-lib"
            "racket-doc"
            "plot-doc"
            "plot-lib"
            "plot-gui-lib"
            "images-doc"
            "images-lib"
            "htdp-doc"
            "htdp-lib"
            "pict-doc"
            "typed-racket-doc"))
          (dependency-names
           .
           ("base"
            "draw-lib"
            "srfi-lite-lib"
            "typed-racket-lib"
            "typed-racket-more"
            "math-lib"
            "scribble-lib"
            "gui-lib"
            "pconvert-lib"
            "pict-lib"
            "profile-lib"
            "pfds"
            "draw-doc"
            "gui-doc"
            "gui-lib"
            "racket-doc"
            "plot-doc"
            "plot-lib"
            "plot-gui-lib"
            "images-doc"
            "images-lib"
            "htdp-doc"
            "htdp-lib"
            "pict-doc"
            "typed-racket-doc"))
          (description
           .
           "Modern 3D engine with a purely functional interface")
          (implies . ())
          (last-checked . 1557339721)
          (last-edit . 1422736009)
          (last-updated . 1502816255)
          (modules
           .
           ((lib "pict3d/scribblings/sniplike-bitmap.rkt")
            (lib "pict3d/private/math/flprojective3.rkt")
            (lib "pict3d/private/math/flv3-merge.rkt")
            (lib "pict3d/private/shape.rkt")
            (lib "pict3d/private/shape/sphere/ge_32.rkt")
            (lib "pict3d/tests/opengl/planet.rkt")
            (lib "pict3d/private/engine/types.rkt")
            (lib "pict3d/private/math/fl.rkt")
            (lib "pict3d/private/math/fls3.rkt")
            (lib "pict3d/private/shape/triangle-mesh.rkt")
            (lib "pict3d/tests/opengl/vbotest.rkt")
            (lib "pict3d/tests/math/flv3-tests.rkt")
            (lib "pict3d/private/math/flaffine3.rkt")
            (lib "pict3d/private/gui/pict3d-bitmap.rkt")
            (lib "pict3d/private/gui/utils/format.rkt")
            (lib "pict3d/private/gui/typed-pict3d-combinators.rkt")
            (lib "pict3d/private/gl/cached-vector.rkt")
            (lib "pict3d/tests/triangle-surface.rkt")
            (lib "pict3d/private/shape/disk.rkt")
            (lib "pict3d/private/gui/pict3d-struct.rkt")
            (lib "pict3d/private/math/maybe-flrect3.rkt")
            (lib "pict3d/tests/spinny-cube/player.rkt")
            (lib "pict3d/private/gui/utils/scales.rkt")
            (lib "pict3d/private/utils.rkt")
            (lib "pict3d/tests/opengl/gltest.rkt")
            (lib "pict3d/private/shape/directional-light.rkt")
            (lib "pict3d/private/soup/deform.rkt")
            (lib "pict3d/private/engine/draw.rkt")
            (lib "typed/opengl/typed-types.rkt")
            (lib "pict3d/private/shape/rectangle.rkt")
            (lib "pict3d/tests/depth-range.rkt")
            (lib "pict3d/private/math/flt3.rkt")
            (lib "pict3d/tests/fractal-trees.rkt")
            (lib "pict3d/scribblings/utils.rkt")
            (lib "pict3d/tests/spinny-cube/player-state.rkt")
            (lib "pict3d/tests/gen-world-state.rkt")
            (lib "pict3d/private/engine/shader.rkt")
            (lib "pict3d/private/gl/context.rkt")
            (lib "pict3d/private/engine/draw/draw-pass.rkt")
            (lib "pict3d/private/ffi-types.rkt")
            (lib "pict3d/private/math/flplane3.rkt")
            (lib "pict3d/private/soup/types.rkt")
            (lib "pict3d/private/engine/utils.rkt")
            (lib "pict3d/private/shape/sphere.rkt")
            (lib "pict3d/tests/adaptive-deform.rkt")
            (lib "pict3d/private/engine/scene.rkt")
            (lib "pict3d/private/engine/shader/shader-code.rkt")
            (lib "pict3d/private/soup/mesh.rkt")
            (lib "pict3d/private/gl/program.rkt")
            (lib "pict3d/private/math/flt3-data.rkt")
            (lib "pict3d/private/gui/typed-user-types.rkt")
            (lib "pict3d/private/shape/types.rkt")
            (lib "pict3d/tests/deform-groups.rkt")
            (lib "typed/opengl/ffi.rkt")
            (lib "pict3d/private/gui/pict3d-draw.rkt")
            (lib "pict3d/private/untyped-utils.rkt")
            (lib "typed/opengl/readspec.rkt")
            (lib "pict3d/private/gl/face.rkt")
            (lib "pict3d/private/gui/master-context.rkt")
            (lib "pict3d/private/math/flv3.rkt")
            (lib "pict3d/private/gui/untyped-pict3d-bitmap.rkt")
            (lib "typed/opengl/ffi-types.rkt")
            (lib "pict3d/tests/spinny-cube/player-state-test.rkt")
            (lib "pict3d/private/shape/cylinder.rkt")
            (lib "pict3d/tests/opengl/viewer.rkt")
            (lib "pict3d/private/shape/sphere/sphere-type.rkt")
            (lib "pict3d/private/shape/polygon.rkt")
            (lib "pict3d/private/gui/utils/timeout-timer.rkt")
            (lib "pict3d/private/gui/untyped-master-context.rkt")
            (lib "pict3d/private/engine/scene/scene.rkt")
            (lib "pict3d/scribblings/serializable-bitmap.rkt")
            (lib "pict3d/tests/opengl/shadertest.rkt")
            (lib "pict3d/private/math.rkt")
            (lib "pict3d/tests/triangle-vertex.rkt")
            (lib "typed/opengl/typed-opengl.scrbl")
            (lib "typed/opengl/untyped.rkt")
            (lib "pict3d/private/math/flt3-unboxed-ops.rkt")
            (lib "pict3d/private/gui/pict3d-combinators.rkt")
            (lib "pict3d/private/gui/pict3d-snip.rkt")
            (lib "pict3d/private/engine/scene/types.rkt")
            (lib "pict3d/private/gl/framebuffer.rkt")
            (lib "pict3d/private/gui/untyped-pict3d-canvas.rkt")
            (lib "pict3d/tests/debug-passes.rkt")
            (lib "pict3d/tests/spaceship.rkt")
            (lib "pict3d/main.rkt")
            (lib "pict3d/private/math/flv4.rkt")
            (lib "pict3d/private/gui/parameters.rkt")
            (lib "pict3d/private/gui/shape/light-grid.rkt")
            (lib "pict3d/tests/trace.rkt")
            (lib "pict3d/private/gui/utils/camera.rkt")
            (lib "pict3d/tests/cull.rkt")
            (lib "pict3d/private/gui/typed-pict3d-canvas.rkt")
            (lib "pict3d/private/shape/frozen-scene.rkt")
            (lib "pict3d/private/math/fl2.rkt")
            (lib "pict3d/private/soup/query.rkt")
            (lib "pict3d/private/universe/big-bang.rkt")
            (lib "pict3d/private/gl/buffer.rkt")
            (lib "typed/opengl/utils.rkt")
            (lib "pict3d/private/gui/pict3d-canvas.rkt")
            (lib "pict3d/private/engine/shader/serialize-vertices.rkt")
            (lib "pict3d/tests/docs-complete.rkt")
            (lib "pict3d/private/gui/indicators.rkt")
            (lib "pict3d/private/engine/scene/scene-query.rkt")
            (lib "pict3d/universe.rkt")
            (lib "pict3d/tests/spinny-cube/debug-picts.rkt")
            (lib "pict3d/engine.rkt")
            (lib "pict3d/private/lazy-gui.rkt")
            (lib "pict3d/private/engine/draw/draw-passes.rkt")
            (lib "typed/opengl.rkt")
            (lib "pict3d/private/gl/typed-context.rkt")
            (lib "pict3d/private/gl/texture.rkt")
            (lib "pict3d/private/soup/geometry.rkt")
            (lib "pict3d/private/gl/renderbuffer.rkt")
            (lib "pict3d/private/memo.rkt")
            (lib "pict3d/private/shape/sphere/ge_30.rkt")
            (lib "pict3d/scribblings/pict3d.scrbl")
            (lib "pict3d/tests/spheres-on-canvas.rkt")
            (lib "pict3d/private/math/flrect3.rkt")
            (lib "pict3d/tests/randomized/check-ray-trace-vs-opengl.rkt")
            (lib "pict3d/tests/opengl/gears.rkt")
            (lib "pict3d/private/gl/untyped-context.rkt")
            (lib "pict3d/private/math/fl4.rkt")
            (lib "pict3d/private/gl/object.rkt")
            (lib "pict3d/private/shape/composite.rkt")
            (lib "pict3d/private/math/fl3.rkt")
            (lib "pict3d/private/engine/draw/types.rkt")
            (lib "pict3d/private/gui/user-types.rkt")
            (lib "pict3d/private/gui/utils/center-pointer.rkt")
            (lib "pict3d/tests/randomized/randomized-tests.rkt")
            (lib "pict3d/private/gui/shape/point-light-shell.rkt")
            (lib "pict3d/private/engine.rkt")
            (lib "pict3d/private/math/fllinear3.rkt")
            (lib "pict3d/private/soup.rkt")
            (lib "pict3d/tests/snowman.rkt")
            (lib "pict3d/tests/randomized/regression-tests.rkt")
            (lib "pict3d/private/engine/scene/tags.rkt")
            (lib "pict3d/tests/nuclear-sausage-plant.rkt")
            (lib "pict3d/private/shape/triangle-outline.rkt")
            (lib "pict3d/private/gui/invisible-context.rkt")
            (lib "pict3d/private/soup/group.rkt")
            (lib "typed/opengl/typed.rkt")
            (lib "pict3d/tests/camera-ray-trace.rkt")
            (lib "pict3d/private/engine/draw/merge-passes.rkt")
            (lib "pict3d/private/shape/point-light.rkt")
            (lib "pict3d/tests/randomized/check-tessellate-vs-orig.rkt")
            (lib "pict3d/private/gl.rkt")
            (lib "pict3d/private/ffi.rkt")
            (lib "pict3d/private/gl/vertex-array.rkt")
            (lib "pict3d/tests/opengl/bitmaptest.rkt")))
          (name . "pict3d-orig")
          (nix-sha256
           .
           "0b5xdq9rlxbbzp1kf5vmv6s84sh2gjg2lb3gbvif04ivi25b8s3i")
          (ring . 2)
          (search-terms
           .
           #hasheq((3d . #t)
                   (:build-fail: . #t)
                   (:conflicts: . #t)
                   (:docs-error: . #t)
                   (author:neil.toronto@gmail.com . #t)
                   (games . #t)
                   (graphics . #t)
                   (gui . #t)
                   (opengl . #t)
                   (ring:2 . #t)))
          (source . "git://github.com/ntoronto/pict3d")
          (tags . ("3d" "games" "graphics" "gui" "opengl"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "09283c9d930c63b6a6a3f2caa43e029222091bdb")
                          (source . "git://github.com/ntoronto/pict3d")
                          (source_url
                           .
                           "http://github.com/ntoronto/pict3d/tree/master")))))))
 ("picturing-programs"
  .
  #hash((author . "sbloch@racket-lang.org")
        (checksum . "b354c334f1a9f1ece7d35c3956f38c633ed14e12")
        (dependencies
         .
         ("base"
          "draw-lib"
          "gui-lib"
          "snip-lib"
          "htdp-lib"
          "racket-doc"
          "htdp-doc"
          "scribble-lib"))
        (dependency-names
         .
         ("base"
          "draw-lib"
          "gui-lib"
          "snip-lib"
          "htdp-lib"
          "racket-doc"
          "htdp-doc"
          "scribble-lib"))
        (description . "sbloch@racket-lang.org")
        (modules . ())
        (name . "picturing-programs")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/picturing-programs.zip")
        (tags . ())))
 ("pidec"
  .
  #hasheq((author . "luis.osa.gdc@gmail.com ")
          (authors . ("luis.osa.gdc@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "pidec" "doc/pidec@pidec/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/pidec.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/pidec.txt")))
          (checksum . "4ec0b094709d83d54cb1de69209ecfd6a642573d")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "rackunit-lib"
            "math-lib"
            "typed-racket-lib"
            "while-loop"
            "scribble-lib"
            "racket-doc"))
          (dependency-names
           .
           ("base"
            "rackunit-lib"
            "math-lib"
            "typed-racket-lib"
            "while-loop"
            "scribble-lib"
            "racket-doc"))
          (description . "Computation of the n-th digit of π with low memory")
          (implies . ())
          (last-checked . 1557339721)
          (last-edit . 1435507356)
          (last-updated . 1502816259)
          (modules
           .
           ((lib "pidec/scribblings/pidec.scrbl")
            (lib "pidec/test-main.rkt")
            (lib "pidec/main.rkt")))
          (name . "pidec")
          (nix-sha256
           .
           "0sh2mi3c2ds7drdapvznpgnaazb0fikgm46x6q16nqw3wziw2cmc")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:luis.osa.gdc@gmail.com . #t)
                   (numerical . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/logc/pidec.git")
          (tags . ("numerical"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "4ec0b094709d83d54cb1de69209ecfd6a642573d")
                          (source . "git://github.com/logc/pidec.git")
                          (source_url
                           .
                           "http://github.com/logc/pidec.git/tree/master")))))))
 ("pie"
  .
  #hasheq((author . "david@davidchristiansen.dk dfried00@gmail.com")
          (authors . ("david@davidchristiansen.dk" "dfried00@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "pie" "doc/pie@pie/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/pie.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/pie.txt")))
          (checksum . "50fdd82cd6e35a4049a60abbc6a88c4fb7d5f619")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           (("base" #:version "6.5")
            "data-lib"
            "gui-lib"
            "slideshow-lib"
            "pict-lib"
            "typed-racket-lib"
            "typed-racket-more"
            "parser-tools-lib"
            "syntax-color-lib"
            "rackunit-lib"
            "todo-list"
            "scribble-lib"
            "racket-doc"
            "sandbox-lib"
            "rackunit-lib"))
          (dependency-names
           .
           ("base"
            "data-lib"
            "gui-lib"
            "slideshow-lib"
            "pict-lib"
            "typed-racket-lib"
            "typed-racket-more"
            "parser-tools-lib"
            "syntax-color-lib"
            "rackunit-lib"
            "todo-list"
            "scribble-lib"
            "racket-doc"
            "sandbox-lib"
            "rackunit-lib"))
          (description . "The Pie language, used in The Little Typer")
          (implies . ())
          (last-checked . 1557339721)
          (last-edit . 1515171354)
          (last-updated . 1553184368)
          (modules
           .
           ((lib "pie/pie-info.rkt")
            (lib "pie/main.rkt")
            (lib "pie/parser.rkt")
            (lib "pie/show-goal.rkt")
            (lib "pie/typechecker.rkt")
            (lib "pie/pie.scrbl")
            (lib "pie/alpha.rkt")
            (lib "pie/resugar.rkt")
            (lib "pie/test-todo-output.rkt")
            (lib "pie/pie-err.rkt")
            (lib "pie/gui/pie-styles.rkt")
            (lib "pie/pretty.rkt")
            (lib "pie/normalize.rkt")
            (lib "pie/rep.rkt")
            (lib "pie/tooltip.rkt")
            (lib "pie/serialization.rkt")
            (lib "pie/basics.rkt")
            (lib "pie/tests.rkt")
            (lib "pie/gui/main.rkt")
            (lib "pie/gui/print-gui.rkt")
            (lib "pie/fresh.rkt")
            (lib "pie/gui/pie-lexer.rkt")
            (lib "pie/locations.rkt")
            (lib "pie/interactive-editing.rkt")
            (lib "pie/slideshow.rkt")))
          (name . "pie")
          (nix-sha256
           .
           "0drj6v64iakjwklx59b0faiy3gn3mjym4rmygilk0l3yczl4qwhq")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:david@davidchristiansen.dk . #t)
                   (author:dfried00@gmail.com . #t)
                   (lang . #t)
                   (language . #t)
                   (ring:2 . #t)
                   (types . #t)))
          (source . "https://github.com/the-little-typer/pie.git")
          (tags . ("lang" "language" "types"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "50fdd82cd6e35a4049a60abbc6a88c4fb7d5f619")
                          (source
                           .
                           "https://github.com/the-little-typer/pie.git")
                          (source_url
                           .
                           "https://github.com/the-little-typer/pie.git")))))))
 ("pie-a-let-mode"
  .
  #hasheq((author . "pnwamk@gmail.com")
          (authors . ("pnwamk@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "pie-a-let-mode"
                    "doc/pie-a-let-mode@pie-a-let-mode/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/pie-a-let-mode.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/pie-a-let-mode.txt")))
          (checksum . "c36e5ef7dbaf1835357744f6350c1312a0a0a90e")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           (("base" #:version "6.5")
            "data-lib"
            "gui-lib"
            "slideshow-lib"
            "pict-lib"
            "typed-racket-lib"
            "typed-racket-more"
            "parser-tools-lib"
            "syntax-color-lib"
            "todo-list"
            "scribble-lib"
            "racket-doc"
            "sandbox-lib"))
          (dependency-names
           .
           ("base"
            "data-lib"
            "gui-lib"
            "slideshow-lib"
            "pict-lib"
            "typed-racket-lib"
            "typed-racket-more"
            "parser-tools-lib"
            "syntax-color-lib"
            "todo-list"
            "scribble-lib"
            "racket-doc"
            "sandbox-lib"))
          (description
           .
           "A little fork of the Pie language (adds `let` and `equal`).")
          (implies . ())
          (last-checked . 1557339721)
          (last-edit . 1520729012)
          (last-updated . 1520775588)
          (modules
           .
           ((lib "pie-a-let-mode/fresh.rkt")
            (lib "pie-a-let-mode/parser.rkt")
            (lib "pie-a-let-mode/tooltip.rkt")
            (lib "pie-a-let-mode/resugar.rkt")
            (lib "pie-a-let-mode/gui/main.rkt")
            (lib "pie-a-let-mode/locations.rkt")
            (lib "pie-a-let-mode/pie-info.rkt")
            (lib "pie-a-let-mode/basics.rkt")
            (lib "pie-a-let-mode/slideshow.rkt")
            (lib "pie-a-let-mode/normalize.rkt")
            (lib "pie-a-let-mode/interactive-editing.rkt")
            (lib "pie-a-let-mode/tests.rkt")
            (lib "pie-a-let-mode/pie-a-let-mode.scrbl")
            (lib "pie-a-let-mode/gui/pie-lexer.rkt")
            (lib "pie-a-let-mode/main.rkt")
            (lib "pie-a-let-mode/gui/print-gui.rkt")
            (lib "pie-a-let-mode/rep.rkt")
            (lib "pie-a-let-mode/serialization.rkt")
            (lib "pie-a-let-mode/gui/pie-styles.rkt")
            (lib "pie-a-let-mode/alpha.rkt")
            (lib "pie-a-let-mode/pie-err.rkt")
            (lib "pie-a-let-mode/pretty.rkt")
            (lib "pie-a-let-mode/typechecker.rkt")))
          (name . "pie-a-let-mode")
          (nix-sha256
           .
           "1pn59wzh70dp27syxbr2dc2hrbxa9l0qclhlqv3vc78d4013rykh")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:pnwamk@gmail.com . #t)
                   (lang . #t)
                   (language . #t)
                   (ring:2 . #t)
                   (types . #t)))
          (source . "https://github.com/pnwamk/pie.git#a-let-mode")
          (tags . ("lang" "language" "types"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "c36e5ef7dbaf1835357744f6350c1312a0a0a90e")
                          (source
                           .
                           "https://github.com/pnwamk/pie.git#a-let-mode")
                          (source_url
                           .
                           "https://github.com/pnwamk/pie.git#a-let-mode")))))))
 ("pinyin"
  .
  #hasheq((author . "mail@xuchunyang.me")
          (authors . ("mail@xuchunyang.me"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "pinyin" "doc/pinyin@pinyin/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/pinyin.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/pinyin.txt")))
          (checksum . "568e626f8be36c311f40d3f6771cf4f4d1cee677")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "scribble-lib" "racket-doc" "rackunit-lib"))
          (dependency-names
           .
           ("base" "scribble-lib" "racket-doc" "rackunit-lib"))
          (description . "汉字转拼音")
          (implies . ())
          (last-checked . 1557339721)
          (last-edit . 1530118189)
          (last-updated . 1530290700)
          (modules
           .
           ((lib "pinyin/scribblings/pinyin.scrbl") (lib "pinyin/main.rkt")))
          (name . "pinyin")
          (nix-sha256
           .
           "00fzmjkvcljac23k58khs6bndz6gmbv9cn5jrl677b0azbm9k1w6")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:mail@xuchunyang.me . #t)
                   (chinese . #t)
                   (ring:2 . #t)))
          (source . "https://github.com/xuchunyang/pinyin.git")
          (tags . ("chinese"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "568e626f8be36c311f40d3f6771cf4f4d1cee677")
                          (source
                           .
                           "https://github.com/xuchunyang/pinyin.git")
                          (source_url
                           .
                           "https://github.com/xuchunyang/pinyin.git")))))))
 ("pipe"
  .
  #hasheq((author . "ray.racine@gmail.com")
          (authors . ("ray.racine@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "pipe" "doc/pipe@pipe/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/pipe.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/pipe.txt")))
          (checksum . "179b8f8ad92ced86ea8dacec607deb24aefc15aa")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("typed-racket-lib"
            "base"
            "racket-doc"
            "typed-racket-doc"
            "scribble-lib"))
          (dependency-names
           .
           ("typed-racket-lib"
            "base"
            "racket-doc"
            "typed-racket-doc"
            "scribble-lib"))
          (description . "Iteratees in Typed Racket.")
          (implies . ())
          (last-checked . 1557339721)
          (last-edit . 1528212862)
          (last-updated . 1502816260)
          (modules
           .
           ((lib "pipe/pumps.rkt")
            (lib "pipe/types.rkt")
            (lib "pipe/filetank.rkt")
            (lib "pipe/main.rkt")
            (lib "pipe/pipes.rkt")
            (lib "pipe/tanks.rkt")
            (lib "pipe/scribblings/pipe.scrbl")))
          (name . "pipe")
          (nix-sha256
           .
           "0hsw7gd57n43pdx61l8lbfv9y07jby4r4c4k8m9yjb8hy7fsl3w4")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:ray.racine@gmail.com . #t)
                   (control . #t)
                   (iteratee . #t)
                   (ring:1 . #t)))
          (source . "https://gitlab.com/RayRacine/pipe.git")
          (tags . ("control" "iteratee"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "179b8f8ad92ced86ea8dacec607deb24aefc15aa")
                          (source . "https://gitlab.com/RayRacine/pipe.git")
                          (source_url
                           .
                           "https://gitlab.com/RayRacine/pipe.git")))))))
 ("pitfall"
  .
  #hasheq((author . "mb@mbtype.com")
          (authors . ("mb@mbtype.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/pitfall.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/pitfall.txt")))
          (checksum . "5f69ee853aa6ec21ce1d8a4933fed7c14ef0a40f")
          (checksum-error . #f)
          (conflicts . ())
          (date-added . 1556661214)
          (dependencies
           .
           ("draw-lib"
            "with-cache"
            "at-exp-lib"
            "base"
            "beautiful-racket-lib"
            "brag"
            "fontland"
            "png-image"
            "rackunit-lib"
            "srfi-lite-lib"
            "sugar"
            "debug"))
          (dependency-names
           .
           ("draw-lib"
            "with-cache"
            "at-exp-lib"
            "base"
            "beautiful-racket-lib"
            "brag"
            "fontland"
            "png-image"
            "rackunit-lib"
            "srfi-lite-lib"
            "sugar"
            "debug"))
          (description . "PDF generation library [under development]")
          (implies . ())
          (last-checked . 1557339722)
          (last-edit . 1556661214)
          (last-updated . 1557076919)
          (modules
           .
           ((lib "ptest/test20a.rkt")
            (lib "pitfall/color.rkt")
            (lib "pitfall/check-pdf.rkt")
            (lib "pitfall/text.rkt")
            (lib "ptest/test8.rkt")
            (lib "pitfall/font-embedded.rkt")
            (lib "ptest/test4.rkt")
            (lib "pitfall/font.rkt")
            (lib "ptest/test19.rkt")
            (lib "ptest/test5.rkt")
            (lib "ptest/test20.rkt")
            (lib "ptest/test2.rkt")
            (lib "ptest/test3.rkt")
            (lib "pitfall/page-test.rkt")
            (lib "pitfall/vector.rkt")
            (lib "pitfall/scribblings/pitfall.scrbl")
            (lib "ptest/test16.rkt")
            (lib "pitfall/pdftest.rkt")
            (lib "ptest/test7.rkt")
            (lib "pitfall/main.rkt")
            (lib "ptest/test13.rkt")
            (lib "ptest/test6.rkt")
            (lib "pitfall/reference.rkt")
            (lib "pitfall/jpeg.rkt")
            (lib "ptest/test18.rkt")
            (lib "pitfall/object.rkt")
            (lib "pitfall/annotation.rkt")
            (lib "ptest/test0.rkt")
            (lib "pitfall/zlib.rkt")
            (lib "ptest/test10.rkt")
            (lib "pitfall/image.rkt")
            (lib "ptest/test9.rkt")
            (lib "ptest/test11.rkt")
            (lib "ptest/test21.rkt")
            (lib "ptest/test17.rkt")
            (lib "ptest/test22.rkt")
            (lib "pitfall/png.rkt")
            (lib "ptest/test15.rkt")
            (lib "pitfall/core.rkt")
            (lib "pitfall/pdf.rkt")
            (lib "ptest/test14.rkt")
            (lib "ptest/test1.rkt")
            (lib "ptest/testrkt.rkt")
            (lib "pitfall/page.rkt")
            (lib "pitfall/font-standard.rkt")
            (lib "ptest/test12.rkt")
            (lib "ptest/alltest.rkt")))
          (name . "pitfall")
          (nix-sha256
           .
           "1yzcqmi3gas5qgv33ihjfybizlznn7j5fibyya7k0yp7xm3x0mlc")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:mb@mbtype.com . #t)
                   (pdf . #t)
                   (ring:2 . #t)))
          (source . "https://github.com/mbutterick/pitfall.git")
          (tags . ("pdf"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "5f69ee853aa6ec21ce1d8a4933fed7c14ef0a40f")
                          (source
                           .
                           "https://github.com/mbutterick/pitfall.git")
                          (source_url
                           .
                           "https://github.com/mbutterick/pitfall.git")))))))
 ("pkg-build"
  .
  #hash((author . "mflatt@racket-lang.org")
        (authors . ("mflatt@racket-lang.org"))
        (build
         .
         #hash((conflicts-log . #f)
               (dep-failure-log . #f)
               (docs . ())
               (failure-log . #f)
               (min-failure-log . #f)
               (success-log . "server/built/install/pkg-build.txt")
               (test-failure-log . #f)
               (test-success-log
                .
                "server/built/test-success/pkg-build.txt")))
        (checksum . "9ad46bf90969c4fbed52605f11b2d52c70066827")
        (checksum-error . #f)
        (conflicts . ())
        (dependencies
         .
         ("base"
          "rackunit"
          "scribble-html-lib"
          "web-server-lib"
          "plt-web-lib"
          ("remote-shell-lib" #:version "1.1")
          "at-exp-lib"))
        (dependency-names
         .
         ("base"
          "rackunit"
          "scribble-html-lib"
          "web-server-lib"
          "plt-web-lib"
          "remote-shell-lib"
          "at-exp-lib"))
        (description . "Build server for pkgs")
        (implies . ())
        (last-checked . 1557339722)
        (last-edit . 1417307461)
        (last-updated . 1540048537)
        (modules
         .
         ((lib "pkg-build/pkg-list.rkt")
          (lib "pkg-build/thread.rkt")
          (lib "pkg-build/status.rkt")
          (lib "pkg-build/about.rkt")
          (lib "pkg-build/summary.rkt")
          (lib "pkg-build/download.rkt")
          (lib "pkg-build/union-find.rkt")
          (lib "pkg-build/pkg-adds.rkt")
          (lib "pkg-build/main.rkt")
          (lib "pkg-build/extract-doc.rkt")))
        (name . "pkg-build")
        (nix-sha256 . "0yv0l3k98jqygfrhbjkxvhz4algn9bx2pdifbnnskp7pmlww0nhh")
        (ring . 1)
        (search-terms
         .
         #hasheq((:build-success: . #t)
                 (:no-tag: . #t)
                 (author:mflatt@racket-lang.org . #t)
                 (ring:1 . #t)))
        (source . "git://github.com/racket/pkg-build")
        (tags . ())
        (versions
         .
         #hash((default
                .
                #hasheq((checksum
                         .
                         "9ad46bf90969c4fbed52605f11b2d52c70066827")
                        (source . "git://github.com/racket/pkg-build")
                        (source_url
                         .
                         "http://github.com/racket/pkg-build/tree/master")))))))
 ("pkg-dep-draw"
  .
  #hasheq((author . "mflatt@cs.utah.edu")
          (authors . ("mflatt@cs.utah.edu"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "pkg-dep-draw"
                    "doc/pkg-dep-draw@pkg-dep-draw/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/pkg-dep-draw.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/pkg-dep-draw.txt")))
          (checksum . "10ccd5208aab1c54cab3fe767c48b98f87f1e79d")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base" "draw-lib" "gui-lib" "racket-doc" "scribble-lib"))
          (dependency-names
           .
           ("base" "draw-lib" "gui-lib" "racket-doc" "scribble-lib"))
          (description . "")
          (implies . ())
          (last-checked . 1557339723)
          (last-edit . 1408010820)
          (last-updated . 1502816260)
          (modules
           .
           ((lib "pkg-dep-draw/main.rkt")
            (lib "pkg-dep-draw/private/struct.rkt")
            (lib "pkg-dep-draw/pkg-dep-draw.scrbl")
            (lib "pkg-dep-draw/private/draw.rkt")
            (lib "pkg-dep-draw/private/cliques.rkt")
            (lib "pkg-dep-draw/private/closure.rkt")
            (lib "pkg-dep-draw/private/get-pkgs.rkt")
            (lib "pkg-dep-draw/private/gui.rkt")
            (lib "pkg-dep-draw/private/config.rkt")))
          (name . "pkg-dep-draw")
          (nix-sha256
           .
           "0hlmahw8z8cvyjdwl9j5x2a0jhj3x2pikl6bfdq36vs95l6627k8")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (:no-desc: . #t)
                   (author:mflatt@cs.utah.edu . #t)
                   (graphics . #t)
                   (gui . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/mflatt/pkg-dep-draw")
          (tags . ("graphics" "gui"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "10ccd5208aab1c54cab3fe767c48b98f87f1e79d")
                          (source . "git://github.com/mflatt/pkg-dep-draw")
                          (source_url
                           .
                           "http://github.com/mflatt/pkg-dep-draw/tree/master")))))))
 ("pkg-index"
  .
  #hash((author . "jay@racket-lang.org")
        (authors . ("jay@racket-lang.org"))
        (build
         .
         #hash((conflicts-log . #f)
               (dep-failure-log . #f)
               (docs . ())
               (failure-log . #f)
               (min-failure-log . "server/built/min-fail/pkg-index.txt")
               (success-log . "server/built/install/pkg-index.txt")
               (test-failure-log . #f)
               (test-success-log
                .
                "server/built/test-success/pkg-index.txt")))
        (checksum . "2779cbc3a8cd49630ea8a8c57eda99cb15e3df2e")
        (checksum-error . #f)
        (conflicts . ())
        (dependencies . ("racket-lib" "base" "bcrypt"))
        (dependency-names . ("racket-lib" "base" "bcrypt"))
        (description . "The Racket package catalog server")
        (implies . ())
        (last-checked . 1557339723)
        (last-edit . 1417570664)
        (last-updated . 1551279991)
        (modules
         .
         ((lib "pkg-index/official/main.rkt")
          (lib "pkg-index/official/common.rkt")
          (lib "pkg-index/official/notify.rkt")
          (lib "pkg-index/official/dynamic.rkt")
          (lib "pkg-index/planet-compat/common.rkt")
          (lib "pkg-index/official/configs/live.rkt")
          (lib "pkg-index/official/jsonp.rkt")
          (lib "pkg-index/official/configs/tonyg.rkt")
          (lib "pkg-index/official/s3.rkt")
          (lib "pkg-index/official/upload.rkt")
          (lib "pkg-index/planet-compat/update.rkt")
          (lib "pkg-index/planet-compat/static.rkt")
          (lib "pkg-index/official/build-update.rkt")
          (lib "pkg-index/official/update.rkt")
          (lib "pkg-index/basic/main.rkt")
          (lib "pkg-index/official/static.rkt")
          (lib "pkg-index/official/config.rkt")))
        (name . "pkg-index")
        (nix-sha256 . "0b3gxhy16mikqfsy2qq0hi77zw1cvcnq5hxf7n1s1m3sk9gk7k34")
        (ring . 1)
        (search-terms
         .
         #hasheq((:build-success: . #t)
                 (:no-tag: . #t)
                 (author:jay@racket-lang.org . #t)
                 (ring:1 . #t)))
        (source . "git://github.com/racket/pkg-index")
        (tags . ())
        (versions
         .
         #hash((default
                .
                #hasheq((checksum
                         .
                         "2779cbc3a8cd49630ea8a8c57eda99cb15e3df2e")
                        (source . "git://github.com/racket/pkg-index")
                        (source_url
                         .
                         "http://github.com/racket/pkg-index/tree/master")))))))
 ("pkg-push"
  .
  #hash((author . "mflatt@racket-lang.org")
        (authors . ("mflatt@racket-lang.org"))
        (build
         .
         #hash((conflicts-log . #f)
               (dep-failure-log . #f)
               (docs . ())
               (failure-log . #f)
               (min-failure-log . #f)
               (success-log . "server/built/install/pkg-push.txt")
               (test-failure-log . #f)
               (test-success-log . "server/built/test-success/pkg-push.txt")))
        (checksum . "4f221f45faea7f60bd4bbb539685326ec123bb92")
        (checksum-error . #f)
        (conflicts . ())
        (dependencies . ("aws" "base" "http"))
        (dependency-names . ("aws" "base" "http"))
        (implies . ())
        (last-checked . 1557339723)
        (last-edit . 1417307461)
        (last-updated . 1502816260)
        (modules . ((lib "pkg-push/push-catalog.rkt")))
        (name . "pkg-push")
        (nix-sha256 . "07d5viv2gh4jn00bs3i1rlpwc1vn5gz8h4rcjw0s8jl3vnqs187w")
        (ring . 1)
        (search-terms
         .
         #hasheq((:build-success: . #t)
                 (:no-desc: . #t)
                 (:no-tag: . #t)
                 (author:mflatt@racket-lang.org . #t)
                 (ring:1 . #t)))
        (source . "git://github.com/racket/pkg-push")
        (tags . ())
        (versions
         .
         #hash((default
                .
                #hasheq((checksum
                         .
                         "4f221f45faea7f60bd4bbb539685326ec123bb92")
                        (source . "git://github.com/racket/pkg-push")
                        (source_url
                         .
                         "http://github.com/racket/pkg-push/tree/master")))))))
 ("plai"
  .
  #hash((author . "jay@racket-lang.org")
        (checksum . "1bfa1d3d4621b01c5a8e88f977647a9264333c6b")
        (dependencies . ("plai-doc" "plai-lib" "base"))
        (dependency-names . ("plai-doc" "plai-lib" "base"))
        (description . "jay@racket-lang.org")
        (modules . ())
        (name . "plai")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/plai.zip")
        (tags . ())))
 ("plai-doc"
  .
  #hash((author . "jay@racket-lang.org")
        (checksum . "da815d49fec3c9dc208383588405450095d15bab")
        (dependencies
         .
         ("scheme-lib"
          "srfi-lite-lib"
          "base"
          "gui-lib"
          "sandbox-lib"
          "web-server-lib"
          "plai-lib"
          "at-exp-lib"
          "eli-tester"
          "pconvert-lib"
          "rackunit-lib"
          "racket-doc"
          "web-server-doc"
          "scribble-lib"
          "drracket-tool-lib"))
        (dependency-names
         .
         ("scheme-lib"
          "srfi-lite-lib"
          "base"
          "gui-lib"
          "sandbox-lib"
          "web-server-lib"
          "plai-lib"
          "at-exp-lib"
          "eli-tester"
          "pconvert-lib"
          "rackunit-lib"
          "racket-doc"
          "web-server-doc"
          "scribble-lib"
          "drracket-tool-lib"))
        (description . "jay@racket-lang.org")
        (modules . ())
        (name . "plai-doc")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/plai-doc.zip")
        (tags . ())))
 ("plai-lazy"
  .
  #hasheq((author . "mflatt@cs.utah.edu")
          (authors . ("mflatt@cs.utah.edu"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "plai-lazy" "doc/plai-lazy@plai-lazy/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/plai-lazy.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/plai-lazy.txt")))
          (checksum . "814aa836ba1b981b9916fbfa9ba7b2683b0350c4")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "gui-lib"
            "lazy"
            "plai"
            "sandbox-lib"
            "scheme-lib"
            "srfi-lite-lib"
            "racket-doc"
            "scribble-lib"))
          (dependency-names
           .
           ("base"
            "gui-lib"
            "lazy"
            "plai"
            "sandbox-lib"
            "scheme-lib"
            "srfi-lite-lib"
            "racket-doc"
            "scribble-lib"))
          (description . "A lazy variant of the plai language")
          (implies . ())
          (last-checked . 1557339723)
          (last-edit . 1438617273)
          (last-updated . 1502816261)
          (modules
           .
           ((lib "plai-lazy/main.rkt")
            (lib "plai-lazy/test-harness.rkt")
            (lib "plai-lazy/private/gc-transformer.rkt")
            (lib "plai-lazy/private/collector-exports.rkt")
            (lib "plai-lazy/private/sandbox.rkt")
            (lib "plai-lazy/private/gc-core.rkt")
            (lib "plai-lazy/private/random-mutator.rkt")
            (lib "plai-lazy/datatype.rkt")
            (lib "plai-lazy/private/test.rkt")
            (lib "plai-lazy/private/command-line.rkt")
            (lib "plai-lazy/scribblings/plai-lazy.scrbl")
            (lib "plai-lazy/private/gc-gui.rkt")
            (lib "plai-lazy/lang/reader.rkt")))
          (name . "plai-lazy")
          (nix-sha256
           .
           "05rr92xhd8lq23pcfydr3dzvh7pg81vjn6735622fhx7kzcljl7b")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:mflatt@cs.utah.edu . #t)
                   (language . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/mflatt/plai-lazy")
          (tags . ("language"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "814aa836ba1b981b9916fbfa9ba7b2683b0350c4")
                          (source . "git://github.com/mflatt/plai-lazy")
                          (source_url
                           .
                           "http://github.com/mflatt/plai-lazy/tree/master")))))))
 ("plai-lib"
  .
  #hash((author . "jay@racket-lang.org")
        (checksum . "c752850c76d5a4de45317c1600fe08ce0a3d96b1")
        (dependencies
         .
         ("scheme-lib"
          "srfi-lite-lib"
          "base"
          "gui-lib"
          "sandbox-lib"
          "web-server-lib"
          "at-exp-lib"
          "eli-tester"
          "pconvert-lib"
          "rackunit-lib"
          "drracket-tool-lib"))
        (dependency-names
         .
         ("scheme-lib"
          "srfi-lite-lib"
          "base"
          "gui-lib"
          "sandbox-lib"
          "web-server-lib"
          "at-exp-lib"
          "eli-tester"
          "pconvert-lib"
          "rackunit-lib"
          "drracket-tool-lib"))
        (description . "jay@racket-lang.org")
        (modules . ())
        (name . "plai-lib")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/plai-lib.zip")
        (tags . ())))
 ("plai-math"
  .
  #hasheq((author . "jsolum@westmont.edu")
          (authors . ("jsolum@westmont.edu"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . "server/built/fail/plai-math.txt")
                 (min-failure-log . #f)
                 (success-log . #f)
                 (test-failure-log . #f)
                 (test-success-log . #f)))
          (checksum . "a1f9cd5332c9701ded9b0c2e2888842ca1e674ca")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ())
          (dependency-names . ())
          (description . "Provides helpful math functions to plai-typed")
          (implies . ())
          (last-checked . 1557339723)
          (last-edit . 1504636331)
          (last-updated . 1518053129)
          (modules . ((lib "plai-math/math.rkt")))
          (name . "plai-math")
          (nix-sha256
           .
           "1kls6inz79y545apblqpjp90cx7rqa9d2wxqkybslgxxlqwlhja1")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-fail: . #t)
                   (Math . #t)
                   (author:jsolum@westmont.edu . #t)
                   (plai-typed . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/JamesSolum/racket_packages?path=math")
          (tags . ("Math" "plai-typed"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "a1f9cd5332c9701ded9b0c2e2888842ca1e674ca")
                          (source
                           .
                           "git://github.com/JamesSolum/racket_packages?path=math")
                          (source_url
                           .
                           "http://github.com/JamesSolum/racket_packages/tree/master?path=math")))))))
 ("plai-typed"
  .
  #hasheq((author . "mflatt@cs.utah.edu")
          (authors . ("mflatt@cs.utah.edu"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "plai-typed"
                    "doc/plai-typed@plai-typed/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/plai-typed.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/plai-typed.txt")))
          (checksum . "582728d7a724674b58c6af8d2b20a6513947152a")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "plai"
            "racket-doc"
            "rackunit-lib"
            ("scribble-lib" #:version "1.16")))
          (dependency-names
           .
           ("base" "plai" "racket-doc" "rackunit-lib" "scribble-lib"))
          (description
           .
           "The `plai-typed' language for use with Programming Languages: Application and Interpretation, Second Edition\r\n")
          (implies . ())
          (last-checked . 1557339723)
          (last-edit . 1404888844)
          (last-updated . 1502816262)
          (modules
           .
           ((lib "plai-typed/tests/repl.rkt")
            (lib "plai-typed/tests/hygiene.rkt")
            (lib "plai-typed/private/fixup-quote.rkt")
            (lib "plai-typed/tests/ta-scope.rkt")
            (lib "plai-typed/tests/parse.rkt")
            (lib "plai-typed/private/s-exp.rkt")
            (lib "plai-typed/tests/basic.rkt")
            (lib "plai-typed/main.rkt")
            (lib "plai-typed/tests/submod3.rkt")
            (lib "plai-typed/plai-typed.scrbl")
            (lib "plai-typed/tests/use-untyped.rkt")
            (lib "plai-typed/tests/rename.rkt")
            (lib "plai-typed/tests/use-typed-basic.rkt")
            (lib "plai-typed/tests/submod.rkt")
            (lib "plai-typed/private/collapse.rkt")
            (lib "plai-typed/tests/submod2.rkt")
            (lib "plai-typed/private/types.rkt")
            (lib "plai-typed/tests/untyped-use-untyped.rkt")
            (lib "plai-typed/untyped.rkt")
            (lib "plai-typed/tests/untyped.rkt")
            (lib "plai-typed/untyped.scrbl")
            (lib "plai-typed/tests/synerror.rkt")
            (lib "plai-typed/tests/use-basic.rkt")))
          (name . "plai-typed")
          (nix-sha256
           .
           "03bqrf53ll6yzzh41slmdaqsffpi92wsshj8vy2i36mbkc7rzy15")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:mflatt@cs.utah.edu . #t)
                   (language . #t)
                   (ring:1 . #t)
                   (textbook . #t)))
          (source . "github://github.com/mflatt/plai-typed/master")
          (tags . ("language" "textbook"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "582728d7a724674b58c6af8d2b20a6513947152a")
                          (source
                           .
                           "github://github.com/mflatt/plai-typed/master")
                          (source_url
                           .
                           "http://github.com/mflatt/plai-typed/tree/master")))
                 ("5.3.5"
                  .
                  #hasheq((checksum
                           .
                           "e11e7e4cd655b958296055f490ea8eadf5ea5ce7")
                          (source
                           .
                           "github://github.com/mflatt/plai-typed/no-deps")
                          (source_url
                           .
                           "http://github.com/mflatt/plai-typed/tree/no-deps")))
                 ("5.3.6"
                  .
                  #hasheq((checksum
                           .
                           "e11e7e4cd655b958296055f490ea8eadf5ea5ce7")
                          (source
                           .
                           "github://github.com/mflatt/plai-typed/no-deps")
                          (source_url
                           .
                           "http://github.com/mflatt/plai-typed/tree/no-deps")))))))
 ("plai-typed-s-exp-match"
  .
  #hasheq((author . "mflatt@cs.utah.edu")
          (authors . ("mflatt@cs.utah.edu"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "plai-typed-s-exp-match"
                    "doc/plai-typed-s-exp-match@plai-typed-s-exp-match/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log
                  .
                  "server/built/install/plai-typed-s-exp-match.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/plai-typed-s-exp-match.txt")))
          (checksum . "ff05b257cc8739d2f4ad8f33b65440635ab9cce0")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "plai-typed" "racket-doc" "scribble-lib"))
          (dependency-names
           .
           ("base" "plai-typed" "racket-doc" "scribble-lib"))
          (description
           .
           "Simple S-expression matcher for use with plai-typed")
          (implies . ())
          (last-checked . 1557339723)
          (last-edit . 1378382808)
          (last-updated . 1502816263)
          (modules
           .
           ((lib "plai-typed/scribblings/plai-typed-s-exp-match.scrbl")
            (lib "plai-typed/s-exp-match.rkt")))
          (name . "plai-typed-s-exp-match")
          (nix-sha256
           .
           "0k2knsg04s641aw4gn5ncwbvjp973px0jrm919vxy8gdizlvri22")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (:no-tag: . #t)
                   (author:mflatt@cs.utah.edu . #t)
                   (ring:1 . #t)))
          (source
           .
           "github://github.com/mflatt/plai-typed-s-exp-match/master")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "ff05b257cc8739d2f4ad8f33b65440635ab9cce0")
                          (source
                           .
                           "github://github.com/mflatt/plai-typed-s-exp-match/master")
                          (source_url
                           .
                           "http://github.com/mflatt/plai-typed-s-exp-match/tree/master")))
                 ("5.3.5"
                  .
                  #hasheq((checksum
                           .
                           "e010d9718916394b1b3545cb2f7a49c27904e873")
                          (source
                           .
                           "github://github.com/mflatt/plai-typed-s-exp-match/no-deps")
                          (source_url
                           .
                           "http://github.com/mflatt/plai-typed-s-exp-match/tree/no-deps")))
                 ("5.3.6"
                  .
                  #hasheq((checksum
                           .
                           "e010d9718916394b1b3545cb2f7a49c27904e873")
                          (source
                           .
                           "github://github.com/mflatt/plai-typed-s-exp-match/no-deps")
                          (source_url
                           .
                           "http://github.com/mflatt/plai-typed-s-exp-match/tree/no-deps")))))))
 ("plait"
  .
  #hasheq((author . "mflatt@cs.utah.edu")
          (authors . ("mflatt@cs.utah.edu"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "plait" "doc/plait@plait/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/plait.txt")
                 (test-failure-log . "server/built/test-fail/plait.txt")
                 (test-success-log . #f)))
          (checksum . "ce239cd5fe445ff008e29f325f5481c3a0692b6f")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "lazy"
            "plai"
            "racket-doc"
            "rackunit-lib"
            ("scribble-lib" #:version "1.16")))
          (dependency-names
           .
           ("base" "lazy" "plai" "racket-doc" "rackunit-lib" "scribble-lib"))
          (description
           .
           "The Plait language is a hybrid of Racket (concrete syntax) and ML (type system) that is intended for use in an interpreters-based programming-languages course. It's an improved variant of `plai-typed`.")
          (implies . ())
          (last-checked . 1557339724)
          (last-edit . 1533068156)
          (last-updated . 1549809745)
          (modules
           .
           ((lib "plait/scribblings/demo.rkt")
            (lib "plait/tests/s-exp-match.rkt")
            (lib "plait/tests/submod.rkt")
            (lib "plait/tests/ta-scope.rkt")
            (lib "plait/tests/parse.rkt")
            (lib "plait/scribblings/plait.scrbl")
            (lib "plait/tests/use-basic.rkt")
            (lib "plait/private/types.rkt")
            (lib "plait/main.rkt")
            (lib "plait/tests/hygiene.rkt")
            (lib "plait/private/s-exp.rkt")
            (lib "plait/private/fixup-quote.rkt")
            (lib "plait/tests/basic.rkt")
            (lib "plait/tests/synerror.rkt")
            (lib "plait/private/lazy-datatype.rkt")
            (lib "plait/private/collapse.rkt")
            (lib "plait/scribblings/tutorial.scrbl")
            (lib "plait/tests/untyped-use-untyped.rkt")
            (lib "plait/tests/submod3.rkt")
            (lib "plait/tests/lazy.rkt")
            (lib "plait/private/s-exp-match.rkt")
            (lib "plait/tests/use-typed-basic.rkt")
            (lib "plait/private/tuple.rkt")
            (lib "plait/private/force.rkt")
            (lib "plait/tests/rename.rkt")
            (lib "plait/tests/untyped.rkt")
            (lib "plait/tests/use-untyped.rkt")
            (lib "plait/tests/force.rkt")
            (lib "plait/tests/repl.rkt")
            (lib "plait/tests/submod2.rkt")))
          (name . "plait")
          (nix-sha256
           .
           "0p7m0brnl412lvxv02i9600x4fv2ik9908crpvnhnxmgfmvm8bmc")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:mflatt@cs.utah.edu . #t)
                   (language . #t)
                   (ring:2 . #t)
                   (textbook . #t)))
          (source . "https://github.com/mflatt/plait.git")
          (tags . ("language" "textbook"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "ce239cd5fe445ff008e29f325f5481c3a0692b6f")
                          (source . "https://github.com/mflatt/plait.git")
                          (source_url
                           .
                           "https://github.com/mflatt/plait.git")))))))
 ("planet"
  .
  #hash((author . "mflatt@racket-lang.org robby@racket-lang.org")
        (checksum . "dc7473a802e717884ced2b3066bd58c20056caee")
        (dependencies . ("planet-lib" "planet-doc"))
        (dependency-names . ("planet-lib" "planet-doc"))
        (description . "mflatt@racket-lang.org robby@racket-lang.org")
        (modules . ())
        (name . "planet")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/planet.zip")
        (tags . ())))
 ("planet-doc"
  .
  #hash((author . "mflatt@racket-lang.org robby@racket-lang.org")
        (checksum . "3c627cecbacd3c61ff79991701bae619c7090e05")
        (dependencies
         .
         ("planet-lib" "scribble-lib" "base" "racket-doc" "scribble-doc"))
        (dependency-names
         .
         ("planet-lib" "scribble-lib" "base" "racket-doc" "scribble-doc"))
        (description . "mflatt@racket-lang.org robby@racket-lang.org")
        (modules . ())
        (name . "planet-doc")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/planet-doc.zip")
        (tags . ())))
 ("planet-lib"
  .
  #hash((author . "mflatt@racket-lang.org robby@racket-lang.org")
        (checksum . "b8b1be87b327808465e810110257936a146102fb")
        (dependencies . ("srfi-lite-lib" ("base" #:version "6.2.900.6")))
        (dependency-names . ("srfi-lite-lib" "base"))
        (description . "mflatt@racket-lang.org robby@racket-lang.org")
        (modules . ())
        (name . "planet-lib")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/planet-lib.zip")
        (tags . ())))
 ("planet-test"
  .
  #hash((author . "mflatt@racket-lang.org robby@racket-lang.org")
        (checksum . "11130a39834094b620b102c883a024fe0c6fa2f1")
        (dependencies
         .
         ("base"
          "racket-index"
          "eli-tester"
          "planet-lib"
          "rackunit-lib"
          "scheme-lib"))
        (dependency-names
         .
         ("base"
          "racket-index"
          "eli-tester"
          "planet-lib"
          "rackunit-lib"
          "scheme-lib"))
        (description . "mflatt@racket-lang.org robby@racket-lang.org")
        (modules . ())
        (name . "planet-test")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/planet-test.zip")
        (tags . ())))
 ("planet2-example"
  .
  #hasheq((author . "jay.mccarthy@gmail.com")
          (authors . ("jay.mccarthy@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/planet2-example.txt")
                 (test-failure-log
                  .
                  "server/built/test-fail/planet2-example.txt")
                 (test-success-log . #f)))
          (checksum . "9d9e4dc77adfc7299987a4cbbe8ce43869eec53e")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base"))
          (dependency-names . ("base"))
          (description . "An example package for testing purposes")
          (implies . ())
          (last-checked . 1557339724)
          (last-edit . 1504535384)
          (last-updated . 1502816265)
          (modules . ((lib "data/frob-nob.rkt")))
          (name . "planet2-example")
          (nix-sha256
           .
           "0w4wz77aka2bdx20w6f735qdl4xvapyy2hwiwzx2lrs4ax8wjpj9")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:jay.mccarthy@gmail.com . #t)
                   (examples . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/jeapostrophe/planet2-example")
          (tags . ("examples"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "9d9e4dc77adfc7299987a4cbbe8ce43869eec53e")
                          (source
                           .
                           "git://github.com/jeapostrophe/planet2-example")
                          (source_url
                           .
                           "http://github.com/jeapostrophe/planet2-example/tree/master")))))))
 ("play"
  .
  #hasheq((author . "ifigueroap@gmail.com etanter@dcc.uchile.cl")
          (authors . ("ifigueroap@gmail.com" "etanter@dcc.uchile.cl"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . "server/built/deps/play.txt")
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/play.txt")
                 (test-failure-log . "server/built/test-fail/play.txt")
                 (test-success-log . #f)))
          (checksum . "3c2c1af69087e9190a711df1577cf0e842fecac2")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "plai"
            "redex"
            "rackunit"
            "parser-tools-lib"
            "scribble-lib"
            "racket-doc"))
          (dependency-names
           .
           ("base"
            "plai"
            "redex"
            "rackunit"
            "parser-tools-lib"
            "scribble-lib"
            "racket-doc"))
          (description
           .
           "Variations on #lang plai, the language that accompanies Krishnamurthi's PLAI book.")
          (implies . ())
          (last-checked . 1557339724)
          (last-edit . 1478208795)
          (last-updated . 1502816265)
          (modules
           .
           ((lib "scribblings/play.scrbl")
            (lib "play/parsers.rkt")
            (lib "scribblings/intl.rkt")
            (lib "play/redex.rkt")
            (lib "scribblings/main.scrbl")
            (lib "play/main.rkt")
            (lib "play/lang/reader.rkt")))
          (name . "play")
          (nix-sha256
           .
           "0g44dwx6yi1w2x34fm0irxm1h0qw354mnsd1cjglbklfsaxa17mi")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-dep-fail: . #t)
                   (:build-success: . #t)
                   (author:etanter@dcc.uchile.cl . #t)
                   (author:ifigueroap@gmail.com . #t)
                   (language . #t)
                   (ring:1 . #t)))
          (source . "github://github.com/pleiad/play/master")
          (tags . ("language"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "3c2c1af69087e9190a711df1577cf0e842fecac2")
                          (source . "github://github.com/pleiad/play/master")
                          (source_url
                           .
                           "http://github.com/pleiad/play/tree/master")))))))
 ("plisqin"
  .
  #hasheq((author . "default.kramer@gmail.com")
          (authors . ("default.kramer@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "plisqin" "doc/plisqin@plisqin/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/plisqin.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/plisqin.txt")))
          (checksum . "337385360d9f098c6fc96fc93603c530d689eea3")
          (checksum-error . #f)
          (conflicts . ())
          (date-added . 1552667990)
          (dependencies
           .
           ("base"
            "db-lib"
            "scribble-lib"
            "racket-doc"
            "rackunit-lib"
            "sandbox-lib"))
          (dependency-names
           .
           ("base"
            "db-lib"
            "scribble-lib"
            "racket-doc"
            "rackunit-lib"
            "sandbox-lib"))
          (description . "An SQL generator")
          (implies . ())
          (last-checked . 1557339724)
          (last-edit . 1553359207)
          (last-updated . 1551564371)
          (modules
           .
           ((lib "plisqin/scribblings/walkthrough.scrbl")
            (lib "plisqin/private/macros.rkt")
            (lib "plisqin/private/lang/lang-tests.rkt")
            (lib "plisqin/private/to-sql.rkt")
            (lib "plisqin/private/lang/rewriter.rkt")
            (lib "plisqin/private/resolve-injections.rkt")
            (lib "plisqin/private/util.rkt")
            (lib "plisqin/scribblings/intro.scrbl")
            (lib "plisqin/scribblings/schema.scrbl")
            (lib "plisqin/private/new-way-to-walk.rkt")
            (lib "plisqin/scribblings/scribble-code-examples-lib/main.rkt")
            (lib "plisqin/private/core.rkt")
            (lib "plisqin/scribblings/rental-doc.scrbl")
            (lib "plisqin/scribblings/helpers.rkt")
            (lib "plisqin/private/lang/rewrite-lib.rkt")
            (lib "plisqin/scribblings/design-notes.scrbl")
            (lib "plisqin/private/aggregates.rkt")
            (lib "plisqin/structs.rkt")
            (lib "plisqin/private/ordered-joins.rkt")
            (lib "plisqin/private/case-when.rkt")
            (lib "plisqin/private/operators.rkt")
            (lib "plisqin/private/rows-result-to-string.rkt")
            (lib "plisqin/scribblings/tests.scrbl")
            (lib "plisqin/private/show-table.rkt")
            (lib "plisqin/private/lang/runtime.rkt")
            (lib "plisqin/private/resolve-joins.rkt")
            (lib "plisqin/private/deduplicate.rkt")
            (lib "plisqin/private/lang/default-require.rkt")
            (lib "plisqin/scribblings/racket.rkt")
            (lib "plisqin/private/capture-syntax.rkt")
            (lib "plisqin/private/stack-tracker.rkt")
            (lib "plisqin/scribblings/plisqin.scrbl")
            (lib "plisqin/main.rkt")
            (lib "plisqin/scribblings/getting-started.scrbl")
            (lib "plisqin/scribblings/for-developers.scrbl")
            (lib "plisqin/private/dialect.rkt")
            (lib "plisqin/private/lang/reader.rkt")
            (lib "plisqin/private/make-unique-aliases.rkt")
            (lib "plisqin/private/model.rkt")
            (lib "plisqin/private/aggregate.rkt")
            (lib "plisqin/scribblings/racket-require-test.rkt")
            (lib "plisqin/examples/cities/city-connection.rkt")
            (lib "plisqin/scribblings/walkthrough-core.scrbl")
            (lib "plisqin/scribblings/intro-0.2.scrbl")
            (lib "plisqin/private/auto-inject-aggregates.rkt")
            (lib "plisqin/private/auto-inject.rkt")
            (lib "plisqin/private/api.rkt")
            (lib "plisqin/private/schema.rkt")
            (lib
             "plisqin/scribblings/scribble-code-examples-lib/util/srcloc-position-char-index.rkt")
            (lib "plisqin/examples/video-rental-schema.rkt")
            (lib "plisqin/scribblings/reference.scrbl")))
          (name . "plisqin")
          (nix-sha256
           .
           "107s0lblkbsj1f4v03k9jl2vl0adz9c5xm5ik3kd5yc44nc5cz26")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:default.kramer@gmail.com . #t)
                   (db . #t)
                   (ring:2 . #t)
                   (sql . #t)
                   (tabular . #t)))
          (source . "https://github.com/default-kramer/plisqin.git")
          (tags . ("db" "sql" "tabular"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "337385360d9f098c6fc96fc93603c530d689eea3")
                          (source
                           .
                           "https://github.com/default-kramer/plisqin.git")
                          (source_url
                           .
                           "https://github.com/default-kramer/plisqin.git")))))))
 ("plot"
  .
  #hash((author . "ntoronto@racket-lang.org")
        (checksum . "e00f63e459ba02b5661190914468aa7b3ae8b3e9")
        (dependencies . ("plot-lib" "plot-gui-lib" "plot-doc"))
        (dependency-names . ("plot-lib" "plot-gui-lib" "plot-doc"))
        (description . "ntoronto@racket-lang.org")
        (modules . ())
        (name . "plot")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/plot.zip")
        (tags . ())))
 ("plot-bestfit"
  .
  #hasheq((author . "spencer@florence.io")
          (authors . ("spencer@florence.io"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "bestfit" "doc/bestfit@plot-bestfit/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/plot-bestfit.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/plot-bestfit.txt")))
          (checksum . "dd6ffbef2626d7cc7e6802389ce53d57d36bb21d")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "typed-racket-lib"
            "plot-lib"
            "plot-gui-lib"
            "math-lib"
            "racket-doc"
            "typed-racket-doc"
            "scribble-lib"
            "math-doc"
            "plot-doc"))
          (dependency-names
           .
           ("base"
            "typed-racket-lib"
            "plot-lib"
            "plot-gui-lib"
            "math-lib"
            "racket-doc"
            "typed-racket-doc"
            "scribble-lib"
            "math-doc"
            "plot-doc"))
          (description . "")
          (implies . ())
          (last-checked . 1557339724)
          (last-edit . 1441048148)
          (last-updated . 1508113918)
          (modules
           .
           ((lib "bestfit/scribblings/base.rkt")
            (lib "bestfit/scribblings/bestfit.scrbl")
            (lib "bestfit/main.rkt")))
          (name . "plot-bestfit")
          (nix-sha256
           .
           "0mrc01wc26nrc7r1cn2nl5ikyq0q1j1f9p6dlxflpiv7d1miibys")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (:no-desc: . #t)
                   (:no-tag: . #t)
                   (author:spencer@florence.io . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/florence/plot-bestfit")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "dd6ffbef2626d7cc7e6802389ce53d57d36bb21d")
                          (source . "git://github.com/florence/plot-bestfit")
                          (source_url
                           .
                           "http://github.com/florence/plot-bestfit/tree/master")))))))
 ("plot-compat"
  .
  #hash((author . "ntoronto@racket-lang.org")
        (checksum . "bb92420ad3abcdec6970510c00858556e35ba2dc")
        (dependencies
         .
         ("base" "plot-gui-lib" "draw-lib" "plot-lib" "snip-lib"))
        (dependency-names
         .
         ("base" "plot-gui-lib" "draw-lib" "plot-lib" "snip-lib"))
        (description . "ntoronto@racket-lang.org")
        (modules . ())
        (name . "plot-compat")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/plot-compat.zip")
        (tags . ())))
 ("plot-container"
  .
  #hasheq((author . "alexharsanyi@gmail.com")
          (authors . ("alexharsanyi@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "plot-container"
                    "doc/plot-container@plot-container/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/plot-container.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/plot-container.txt")))
          (checksum . "706680844620bef7e4b887bfe87aa6323d26b24f")
          (checksum-error . #f)
          (conflicts . ())
          (date-added . 1554899153)
          (dependencies
           .
           ("base"
            "draw-lib"
            "gui-lib"
            "pict-lib"
            "plot-lib"
            "pict-snip-lib"
            "plot-gui-lib"
            "snip-lib"
            "gui-doc"
            "pict-snip-doc"
            "plot-doc"
            "scribble-lib"
            "racket-doc"
            "rackunit-lib"))
          (dependency-names
           .
           ("base"
            "draw-lib"
            "gui-lib"
            "pict-lib"
            "plot-lib"
            "pict-snip-lib"
            "plot-gui-lib"
            "snip-lib"
            "gui-doc"
            "pict-snip-doc"
            "plot-doc"
            "scribble-lib"
            "racket-doc"
            "rackunit-lib"))
          (description . "Embed plot snips in Racket GUI applications")
          (implies . ())
          (last-checked . 1557339725)
          (last-edit . 1554899153)
          (last-updated . 1555200375)
          (modules
           .
           ((lib "plot-container/hover-util.rkt")
            (lib "plot-container/private/plot-container.rkt")
            (lib "plot-container/main.rkt")
            (lib "plot-container/private/hover-util.rkt")
            (lib "plot-container/scribblings/plot-container.scrbl")))
          (name . "plot-container")
          (nix-sha256
           .
           "1lqdgqbwnsbi8gbsi129pild6sw53w1cw3zv0jaxk4sazmh0snzx")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:alexharsanyi@gmail.com . #t)
                   (gui . #t)
                   (ring:2 . #t)))
          (source . "https://github.com/alex-hhh/plot-container.git")
          (tags . ("gui"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "706680844620bef7e4b887bfe87aa6323d26b24f")
                          (source
                           .
                           "https://github.com/alex-hhh/plot-container.git")
                          (source_url
                           .
                           "https://github.com/alex-hhh/plot-container.git")))))))
 ("plot-doc"
  .
  #hash((author . "ntoronto@racket-lang.org")
        (checksum . "2959e650538e90dce5ce328a1acd463c9bbbad61")
        (dependencies
         .
         ("base"
          "plot-lib"
          "plot-gui-lib"
          "db-doc"
          "db-lib"
          "draw-doc"
          "draw-lib"
          "gui-doc"
          "gui-lib"
          "pict-doc"
          "pict-lib"
          "plot-compat"
          "racket-doc"
          "scribble-lib"
          "slideshow-doc"
          "slideshow-lib"
          "srfi-doc"))
        (dependency-names
         .
         ("base"
          "plot-lib"
          "plot-gui-lib"
          "db-doc"
          "db-lib"
          "draw-doc"
          "draw-lib"
          "gui-doc"
          "gui-lib"
          "pict-doc"
          "pict-lib"
          "plot-compat"
          "racket-doc"
          "scribble-lib"
          "slideshow-doc"
          "slideshow-lib"
          "srfi-doc"))
        (description . "ntoronto@racket-lang.org")
        (modules . ())
        (name . "plot-doc")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/plot-doc.zip")
        (tags . ())))
 ("plot-gui-lib"
  .
  #hash((author . "ntoronto@racket-lang.org")
        (checksum . "4c348a296e52f2c8d3c1c5ff2a73feef92af20d0")
        (dependencies
         .
         ("base"
          "plot-lib"
          "math-lib"
          ("gui-lib" #:version "1.18")
          "snip-lib"
          "typed-racket-lib"
          "typed-racket-more"))
        (dependency-names
         .
         ("base"
          "plot-lib"
          "math-lib"
          "gui-lib"
          "snip-lib"
          "typed-racket-lib"
          "typed-racket-more"))
        (description . "ntoronto@racket-lang.org")
        (modules . ())
        (name . "plot-gui-lib")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/plot-gui-lib.zip")
        (tags . ())))
 ("plot-lib"
  .
  #hash((author . "ntoronto@racket-lang.org")
        (checksum . "92cf5468cbd071af0cff281e39444e72f207c529")
        (dependencies
         .
         ("base"
          "draw-lib"
          "pict-lib"
          "db-lib"
          "srfi-lite-lib"
          "typed-racket-lib"
          "typed-racket-more"
          "compatibility-lib"
          "math-lib"))
        (dependency-names
         .
         ("base"
          "draw-lib"
          "pict-lib"
          "db-lib"
          "srfi-lite-lib"
          "typed-racket-lib"
          "typed-racket-more"
          "compatibility-lib"
          "math-lib"))
        (description . "ntoronto@racket-lang.org")
        (modules . ())
        (name . "plot-lib")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/plot-lib.zip")
        (tags . ())))
 ("plot-test"
  .
  #hash((author . "ntoronto@racket-lang.org")
        (checksum . "2894298e51b4e029992c77d989e946ac0992da7e")
        (dependencies
         .
         ("base"
          "plot-compat"
          "plot-gui-lib"
          "plot-lib"
          "plot-doc"
          "draw-lib"
          "pict-lib"
          "rackunit-lib"
          "slideshow-lib"
          "typed-racket-lib"
          "typed-racket-more"))
        (dependency-names
         .
         ("base"
          "plot-compat"
          "plot-gui-lib"
          "plot-lib"
          "plot-doc"
          "draw-lib"
          "pict-lib"
          "rackunit-lib"
          "slideshow-lib"
          "typed-racket-lib"
          "typed-racket-more"))
        (description . "ntoronto@racket-lang.org")
        (modules . ())
        (name . "plot-test")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/plot-test.zip")
        (tags . ())))
 ("plt-build-plot"
  .
  #hasheq((author . "mflatt@racket-lang.org")
          (authors . ("mflatt@racket-lang.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/plt-build-plot.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/plt-build-plot.txt")))
          (checksum . "584b2766645a55bfb703748c1c06d7f4e802b06a")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "aws"
            "s3-sync"
            "draw-lib"
            "gui-lib"
            "scribble-html-lib"
            "plt-web-lib"
            "plt-service-monitor"))
          (dependency-names
           .
           ("base"
            "aws"
            "s3-sync"
            "draw-lib"
            "gui-lib"
            "scribble-html-lib"
            "plt-web-lib"
            "plt-service-monitor"))
          (description . "tools to record and plot `raco setup` memory use")
          (implies . ())
          (last-checked . 1557339725)
          (last-edit . 1422463149)
          (last-updated . 1553821581)
          (modules
           .
           ((lib "plt-build-plot/page.rkt")
            (lib "plt-build-plot/upload.rkt")
            (lib "plt-build-plot/plot.rkt")
            (lib "plt-build-plot/main.rkt")))
          (name . "plt-build-plot")
          (nix-sha256
           .
           "1ppwrh6yzmqrvf1jqq9r66f7s8b1qbsnbsi4amzxdrwxlfy7pr9s")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:no-tag: . #t)
                   (author:mflatt@racket-lang.org . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/racket/plt-build-plot")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "584b2766645a55bfb703748c1c06d7f4e802b06a")
                          (source . "git://github.com/racket/plt-build-plot")
                          (source_url
                           .
                           "http://github.com/racket/plt-build-plot/tree/master")))))))
 ("plt-service-monitor"
  .
  #hasheq((author . "mflatt@racket-lang.org")
          (authors . ("mflatt@racket-lang.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "plt-service-monitor"
                    "doc/plt-service-monitor@plt-service-monitor/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log
                  .
                  "server/built/install/plt-service-monitor.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/plt-service-monitor.txt")))
          (checksum . "1cfb827cd812361d3c348aad18625e4aa98b2ee2")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("net-lib"
            "base"
            ("aws" #:version "1.6")
            "http"
            "racket-doc"
            "scribble-lib"))
          (dependency-names
           .
           ("net-lib" "base" "aws" "http" "racket-doc" "scribble-lib"))
          (description . "service-monitoring and \"heartbeat\" tools")
          (implies . ())
          (last-checked . 1557339725)
          (last-edit . 1422308276)
          (last-updated . 1502816273)
          (modules
           .
           ((lib "plt-service-monitor/plt-service-monitor.scrbl")
            (lib "plt-service-monitor/config.rkt")
            (lib "plt-service-monitor/take-pulse.rkt")
            (lib "plt-service-monitor/private/email.rkt")
            (lib "plt-service-monitor/beat.rkt")))
          (name . "plt-service-monitor")
          (nix-sha256
           .
           "1riwyjyw08pajbh352rgxjz9xvwcxwkljccdqlyip32nw8h031hf")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (:no-tag: . #t)
                   (author:mflatt@racket-lang.org . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/racket/plt-service-monitor")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "1cfb827cd812361d3c348aad18625e4aa98b2ee2")
                          (source
                           .
                           "git://github.com/racket/plt-service-monitor")
                          (source_url
                           .
                           "http://github.com/racket/plt-service-monitor/tree/master")))))))
 ("plt-services"
  .
  #hash((author . "eli@racket-lang.org mflatt@racket-lang.org")
        (authors . ("eli@racket-lang.org" "mflatt@racket-lang.org"))
        (build
         .
         #hash((conflicts-log . #f)
               (dep-failure-log . #f)
               (docs . ())
               (failure-log . #f)
               (min-failure-log . #f)
               (success-log . "server/built/install/plt-services.txt")
               (test-failure-log . #f)
               (test-success-log
                .
                "server/built/test-success/plt-services.txt")))
        (checksum . "b7d738d59ad64efb4602f13136757cb49a6e989b")
        (checksum-error . #f)
        (conflicts . ())
        (dependencies . ())
        (dependency-names . ())
        (description
         .
         "Miscellaneous management and maintenance tools used by the Racket development team")
        (implies . ())
        (last-checked . 1557339725)
        (last-edit . 1460066358)
        (last-updated . 1557199560)
        (modules . ())
        (name . "plt-services")
        (nix-sha256 . "1big24pqdg12p715zh7868v6ngq27g8j6nkp8wx43fxcw5qzay46")
        (ring . 0)
        (search-terms
         .
         #hasheq((:build-success: . #t)
                 (author:eli@racket-lang.org . #t)
                 (author:mflatt@racket-lang.org . #t)
                 (deprecated . #t)
                 (ring:0 . #t)))
        (source . "git://github.com/racket/racket/?path=pkgs/plt-services")
        (tags . ("deprecated"))
        (versions
         .
         #hash((default
                .
                #hasheq((checksum
                         .
                         "b7d738d59ad64efb4602f13136757cb49a6e989b")
                        (source
                         .
                         "git://github.com/racket/racket/?path=pkgs/plt-services")
                        (source_url
                         .
                         "git://github.com/racket/racket/?path=pkgs/plt-services")))
               ("5.3.4"
                .
                #hash((checksum . "9f098dddde7f217879070816090c1e8e74d49432")
                      (source
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")
                      (source_url
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")))
               ("5.3.5"
                .
                #hash((checksum . "9f098dddde7f217879070816090c1e8e74d49432")
                      (source
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")
                      (source_url
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")))
               ("5.3.6"
                .
                #hash((checksum . "9f098dddde7f217879070816090c1e8e74d49432")
                      (source
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")
                      (source_url
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")))))))
 ("plt-web"
  .
  #hash((author . "mflatt@racket-lang.org")
        (authors . ("mflatt@racket-lang.org"))
        (build
         .
         #hash((conflicts-log . #f)
               (dep-failure-log . #f)
               (docs . ())
               (failure-log . #f)
               (min-failure-log . #f)
               (success-log . "server/built/install/plt-web.txt")
               (test-failure-log . #f)
               (test-success-log . "server/built/test-success/plt-web.txt")))
        (checksum . "5697a81d84117f9341686783b02299f74656918a")
        (checksum-error . #f)
        (conflicts . ())
        (dependencies . ("plt-web-lib" "plt-web-doc"))
        (dependency-names . ("plt-web-lib" "plt-web-doc"))
        (description . "Web-page creation libraries")
        (implies . ("plt-web-lib" "plt-web-doc"))
        (last-checked . 1557339725)
        (last-edit . 1417307461)
        (last-updated . 1502816286)
        (modules . ())
        (name . "plt-web")
        (nix-sha256 . "0hzrp84cg3gl489y9nidzjqdya64wkqd48w2rlarv3w5ldw0nppl")
        (ring . 0)
        (search-terms
         .
         #hasheq((:build-success: . #t)
                 (:no-tag: . #t)
                 (author:mflatt@racket-lang.org . #t)
                 (ring:0 . #t)))
        (source . "git://github.com/racket/plt-web/?path=plt-web")
        (tags . ())
        (versions
         .
         #hash((default
                .
                #hasheq((checksum
                         .
                         "5697a81d84117f9341686783b02299f74656918a")
                        (source
                         .
                         "git://github.com/racket/plt-web/?path=plt-web")
                        (source_url
                         .
                         "git://github.com/racket/plt-web/?path=plt-web")))
               ("5.3.4"
                .
                #hash((checksum . "9f098dddde7f217879070816090c1e8e74d49432")
                      (source
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")
                      (source_url
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")))
               ("5.3.5"
                .
                #hash((checksum . "9f098dddde7f217879070816090c1e8e74d49432")
                      (source
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")
                      (source_url
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")))
               ("5.3.6"
                .
                #hash((checksum . "9f098dddde7f217879070816090c1e8e74d49432")
                      (source
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")
                      (source_url
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")))))))
 ("plt-web-doc"
  .
  #hash((author
         .
         "eli@racket-lang.org mflatt@racket-lang.org samth@racket-lang.org")
        (authors
         .
         ("eli@racket-lang.org"
          "mflatt@racket-lang.org"
          "samth@racket-lang.org"))
        (build
         .
         #hash((conflicts-log . #f)
               (dep-failure-log . #f)
               (docs
                .
                (("main" "plt-web" "doc/plt-web@plt-web-doc/index.html")))
               (failure-log . #f)
               (min-failure-log . #f)
               (success-log . "server/built/install/plt-web-doc.txt")
               (test-failure-log . #f)
               (test-success-log
                .
                "server/built/test-success/plt-web-doc.txt")))
        (checksum . "5697a81d84117f9341686783b02299f74656918a")
        (checksum-error . #f)
        (conflicts . ())
        (dependencies
         .
         ("base" "plt-web-lib" "racket-doc" "scribble-doc" "scribble-lib"))
        (dependency-names
         .
         ("base" "plt-web-lib" "racket-doc" "scribble-doc" "scribble-lib"))
        (description . "documentation part of \"plt-web\"")
        (implies . ())
        (last-checked . 1557339726)
        (last-edit . 1417307461)
        (last-updated . 1502816287)
        (modules . ((lib "plt-web/plt-web.scrbl")))
        (name . "plt-web-doc")
        (nix-sha256 . "0hzrp84cg3gl489y9nidzjqdya64wkqd48w2rlarv3w5ldw0nppl")
        (ring . 0)
        (search-terms
         .
         #hasheq((:build-success: . #t)
                 (:docs: . #t)
                 (:no-tag: . #t)
                 (author:eli@racket-lang.org . #t)
                 (author:mflatt@racket-lang.org . #t)
                 (author:samth@racket-lang.org . #t)
                 (ring:0 . #t)))
        (source . "git://github.com/racket/plt-web/?path=plt-web-doc")
        (tags . ())
        (versions
         .
         #hash((default
                .
                #hasheq((checksum
                         .
                         "5697a81d84117f9341686783b02299f74656918a")
                        (source
                         .
                         "git://github.com/racket/plt-web/?path=plt-web-doc")
                        (source_url
                         .
                         "git://github.com/racket/plt-web/?path=plt-web-doc")))
               ("5.3.4"
                .
                #hash((checksum . "9f098dddde7f217879070816090c1e8e74d49432")
                      (source
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")
                      (source_url
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")))
               ("5.3.5"
                .
                #hash((checksum . "9f098dddde7f217879070816090c1e8e74d49432")
                      (source
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")
                      (source_url
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")))
               ("5.3.6"
                .
                #hash((checksum . "9f098dddde7f217879070816090c1e8e74d49432")
                      (source
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")
                      (source_url
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")))))))
 ("plt-web-lib"
  .
  #hash((author
         .
         "eli@racket-lang.org mflatt@racket-lang.org samth@racket-lang.org")
        (checksum . "252870135004fb2244b84f120e0cafcb07f36479")
        (dependencies . ("base" "at-exp-lib" "scribble-html-lib"))
        (dependency-names . ("base" "at-exp-lib" "scribble-html-lib"))
        (description
         .
         "eli@racket-lang.org mflatt@racket-lang.org samth@racket-lang.org")
        (modules . ())
        (name . "plt-web-lib")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/plt-web-lib.zip")
        (tags . ())))
 ("pmap"
  .
  #hasheq((author . "andreas8001@hotmail.com")
          (authors . ("andreas8001@hotmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "pmap" "doc/pmap@pmap/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/pmap.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/pmap.txt")))
          (checksum . "e352de9bbc6735b1ca089a21490f87fc2fba5279")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base" "rackunit-lib" "scribble-lib" "racket-doc" "math-doc"))
          (dependency-names
           .
           ("base" "rackunit-lib" "scribble-lib" "racket-doc" "math-doc"))
          (description
           .
           "Implementations of map using parallel futures and places")
          (implies . ())
          (last-checked . 1557339726)
          (last-edit . 1493293836)
          (last-updated . 1502816288)
          (modules
           .
           ((lib "pmap/pmapp_worker.rkt")
            (lib "pmap/main.rkt")
            (lib "pmap/pmapp.rkt")
            (lib "pmap/pmap.scrbl")
            (lib "pmap/pmapf.rkt")))
          (name . "pmap")
          (nix-sha256
           .
           "0zzjmba0fgb332xw7046nwdlhxngja5d651y3vr6i3brrl4jpiaj")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (Math . #t)
                   (author:andreas8001@hotmail.com . #t)
                   (futures . #t)
                   (parallel . #t)
                   (places . #t)
                   (ring:1 . #t)
                   (touch . #t)))
          (source . "git://github.com/APOS80/pmap")
          (tags . ("futures" "Math" "parallel" "places" "touch"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "e352de9bbc6735b1ca089a21490f87fc2fba5279")
                          (source . "git://github.com/APOS80/pmap")
                          (source_url
                           .
                           "http://github.com/APOS80/pmap/tree/master")))))))
 ("png-image"
  .
  #hasheq((author . "lehi@tosk.in")
          (authors . ("lehi@tosk.in"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "png-image" "doc/png-image@png-image/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/png-image.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/png-image.txt")))
          (checksum . "c303ca69dea76c5e774e29b89e0968c2ce285722")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "rackunit-lib" "scribble-lib" "racket-doc"))
          (dependency-names
           .
           ("base" "rackunit-lib" "scribble-lib" "racket-doc"))
          (description . "Library to view and modify PNG chunks.")
          (implies . ())
          (last-checked . 1557339726)
          (last-edit . 1486891563)
          (last-updated . 1513746983)
          (modules
           .
           ((lib "png-image/png-image.rkt")
            (lib "png-image/test/png-image-test.rkt")
            (lib "png-image/main.rkt")
            (lib "png-image/txt.rkt")
            (lib "png-image/doc/png-image.scrbl")
            (lib "png-image/base.rkt")))
          (name . "png-image")
          (nix-sha256
           .
           "1drrbvgawwyz8cy3j1ay6n9aagj2hr9fywl2jmxx12xqqg81jlpf")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:lehi@tosk.in . #t)
                   (compression . #t)
                   (decompression . #t)
                   (images . #t)
                   (metadata . #t)
                   (png . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/lehitoskin/png-image")
          (tags . ("compression" "decompression" "images" "metadata" "png"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "c303ca69dea76c5e774e29b89e0968c2ce285722")
                          (source . "git://github.com/lehitoskin/png-image")
                          (source_url
                           .
                           "http://github.com/lehitoskin/png-image/tree/master")))))))
 ("point-free"
  .
  #hasheq((author . "jackhfirth@gmail.com")
          (authors . ("jackhfirth@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "point-free"
                    "doc/point-free@point-free/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/point-free.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/point-free.txt")))
          (checksum . "d294a342466d5071dd2c8f16ba9e50f9006b54af")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "rackunit-lib"
            "doc-coverage"
            "cover"
            "doc-coverage"
            "scribble-lib"
            "rackunit-lib"
            "racket-doc"))
          (dependency-names
           .
           ("base"
            "rackunit-lib"
            "doc-coverage"
            "cover"
            "doc-coverage"
            "scribble-lib"
            "rackunit-lib"
            "racket-doc"))
          (description
           .
           "A library for easier and more powerful function composition")
          (implies . ())
          (last-checked . 1557339726)
          (last-edit . 1500077286)
          (last-updated . 1511370592)
          (modules
           .
           ((lib "point-free/definition-forms.rkt")
            (lib "point-free/thrush.rkt")
            (lib "point-free/module-doc-test.rkt")
            (lib "point-free/arg-count-syntax.rkt")
            (lib "point-free/fixpoint.rkt")
            (lib "point-free/main.rkt")
            (lib "point-free/point-free.scrbl")
            (lib "point-free/parallel-composition.rkt")))
          (name . "point-free")
          (nix-sha256
           .
           "043p1zrvidw3mv6qmwkyr36hdsdbb1wwaw3fbv2ghn4fwd2wglir")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:jackhfirth@gmail.com . #t)
                   (functional . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/jackfirth/point-free")
          (tags . ("functional"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "d294a342466d5071dd2c8f16ba9e50f9006b54af")
                          (source . "git://github.com/jackfirth/point-free")
                          (source_url
                           .
                           "http://github.com/jackfirth/point-free/tree/master")))))))
 ("pollen"
  .
  #hasheq((author . "mb@mbtype.com")
          (authors . ("mb@mbtype.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "pollen" "doc/pollen@pollen/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/pollen.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/pollen.txt")))
          (checksum . "bcb36c878df7e4f9acc693e3af372e7131146999")
          (checksum-error . #f)
          (conflicts . ())
          (date-added . 1556661201)
          (dependencies
           .
           (("base" #:version "6.3")
            ("txexpr" #:version "0.2")
            ("sugar" #:version "0.2")
            ("markdown" #:version "0.18")
            "htdp"
            "at-exp-lib"
            "html-lib"
            "rackjure"
            "web-server-lib"
            "scribble-lib"
            "scribble-text-lib"
            "rackunit-lib"
            "gui-lib"
            "string-constants-lib"
            "plot-gui-lib"
            "scribble-lib"
            "racket-doc"
            "rackunit-doc"
            "plot-doc"
            "scribble-doc"
            "slideshow-doc"
            "web-server-doc"
            "drracket"))
          (dependency-names
           .
           ("base"
            "txexpr"
            "sugar"
            "markdown"
            "htdp"
            "at-exp-lib"
            "html-lib"
            "rackjure"
            "web-server-lib"
            "scribble-lib"
            "scribble-text-lib"
            "rackunit-lib"
            "gui-lib"
            "string-constants-lib"
            "plot-gui-lib"
            "scribble-lib"
            "racket-doc"
            "rackunit-doc"
            "plot-doc"
            "scribble-doc"
            "slideshow-doc"
            "web-server-doc"
            "drracket"))
          (description . "Publishing system for web-based books")
          (implies . ())
          (last-checked . 1557339726)
          (last-edit . 1556661201)
          (last-updated . 1556381442)
          (modules
           .
           ((lib "pollen/scribblings/core.scrbl")
            (lib "pollen/scribblings/version-history.scrbl")
            (lib "pollen/test/test-submodule.rkt")
            (lib "pollen/test/test-override.rkt")
            (lib "pollen/unstable/convert/html-to-pollen.rkt")
            (lib "pollen/test/test-bytes.rkt")
            (lib "pollen/private/external/mode-indentation.rkt")
            (lib "pollen/test/test-pathup.rkt")
            (lib "pollen/scribblings/more-help.scrbl")
            (lib "pollen/unstable/convert.rkt")
            (lib "pollen/test/test-lang-core.rkt")
            (lib "pollen/ptree.rkt")
            (lib "pollen/private/file-utils.rkt")
            (lib "pollen/test/test-lang-splice.rkt")
            (lib "pollen/private/split-metas.rkt")
            (lib "pollen/test/data/override/pollen.rkt")
            (lib "pollen/scribblings/template.scrbl")
            (lib "pollen/markup.rkt")
            (lib "pollen/scribblings/installation.scrbl")
            (lib "pollen/test/test-current-metas-none.rkt")
            (lib "pollen/scribblings/decode.scrbl")
            (lib "pollen/test/test-poly.rkt")
            (lib "pollen/scribblings/pagetree.scrbl")
            (lib "pollen/top.rkt")
            (lib "pollen/scribblings/file.scrbl")
            (lib "pollen/scribblings/formats.scrbl")
            (lib "pollen/cache.rkt")
            (lib "pollen/template/html.rkt")
            (lib "pollen/scribblings/mb-tools.rkt")
            (lib "pollen/private/to-string.rkt")
            (lib "pollen/test/data/poly/pollen.rkt")
            (lib "pollen/scribblings/quick.scrbl")
            (lib "pollen/private/external/doclang-raw.rkt")
            (lib "pollen/scribblings/tutorial-mini.scrbl")
            (lib "pollen/template/base.rkt")
            (lib "pollen/unstable/math.rkt")
            (lib "pollen/test/data/pollen-mode/pollen.rkt")
            (lib "pollen/test/test-meta.rkt")
            (lib "pollen/private/external/include-template.rkt")
            (lib "pollen/scribblings/story.scrbl")
            (lib "pollen/unstable/pygments.rkt")
            (lib "pollen/decode.rkt")
            (lib "pollen/private/project.rkt")
            (lib "pollen/test/test-subtemplate.rkt")
            (lib "pollen/mode.rkt")
            (lib "pollen/private/reader-base.rkt")
            (lib "pollen/scribblings/top.scrbl")
            (lib "pollen/private/cache-utils.rkt")
            (lib "pollen/markdown.rkt")
            (lib "pollen/setup.rkt")
            (lib "pollen/pre.rkt")
            (lib "pollen/file.rkt")
            (lib "pollen/private/version.rkt")
            (lib "pollen/scribblings/typography.scrbl")
            (lib "pollen/unstable/typography.rkt")
            (lib "pollen/test/data/quick-tour/uptown/pollen.rkt")
            (lib "pollen/private/drracket-buttons.rkt")
            (lib "pollen/pagetree.rkt")
            (lib "pollen/test/test-quick-tour.rkt")
            (lib "pollen/private/runtime-config.rkt")
            (lib "pollen/scribblings/acknowledgments.scrbl")
            (lib "pollen/private/external/output.rkt")
            (lib "pollen/private/splice.rkt")
            (lib "pollen/test/test-escape-ext.rkt")
            (lib "pollen/scribblings/tutorial-second.scrbl")
            (lib "pollen/tag.rkt")
            (lib "pollen/private/main-base.rkt")
            (lib "pollen/scribblings/tag.scrbl")
            (lib "pollen/private/dialect.rkt")
            (lib "pollen/private/preheat-cache.rkt")
            (lib "pollen/scribblings/big-picture.scrbl")
            (lib "pollen/test/data/subtemplate/pollen.rkt")
            (lib "pollen/scribblings/render.scrbl")
            (lib "pollen/private/log.rkt")
            (lib "pollen/private/project-server.rkt")
            (lib "pollen/scribblings/module-reference.scrbl")
            (lib "pollen/private/render-helper.rkt")
            (lib "pollen/scribblings/cache.scrbl")
            (lib "pollen/main.rkt")
            (lib "pollen/test/test-rerequire.rkt")
            (lib "pollen/scribblings/format-test.scrbl")
            (lib "pollen/test/data/pathup/pollen.rkt")
            (lib "pollen/private/project-server-routes.rkt")
            (lib "pollen/test/data/pathup/subdir/subdir/pollen.rkt")
            (lib "pollen/scribblings/raco.scrbl")
            (lib "pollen/scribblings/tutorial-first.scrbl")
            (lib "pollen/scribblings/tutorial-fourth.scrbl")
            (lib "pollen/template.rkt")
            (lib "pollen/scribblings/pygments.scrbl")
            (lib "pollen/test/pollen.rkt")
            (lib "pollen/scribblings/programming-pollen.scrbl")
            (lib "pollen/scribblings/convert.scrbl")
            (lib "pollen/test/test-third-tutorial-files.rkt")
            (lib "pollen/scribblings/command.scrbl")
            (lib "pollen/core.rkt")
            (lib "pollen/test/data/rerequire/pollen.rkt")
            (lib "pollen/test/test-current-metas.rkt")
            (lib "pollen/scribblings/license.scrbl")
            (lib "pollen/test/data/whitespace/pollen.rkt")
            (lib "pollen/scribblings/third-tutorial-files/pollen.rkt")
            (lib "pollen/scribblings/unstable-module-reference.scrbl")
            (lib "pollen/scribblings/pollen.scrbl")
            (lib "pollen/unstable/html.rkt")
            (lib "pollen/test/test-langs.rkt")
            (lib "pollen/test/test-inline-submodule.rkt")
            (lib "pollen/scribblings/utils.rkt")
            (lib "pollen/private/whitespace.rkt")
            (lib "pollen/scribblings/tutorial-third.scrbl")
            (lib "pollen/scribblings/setup.scrbl")
            (lib "pollen/render.rkt")
            (lib "pollen/test/test-output.rkt")
            (lib "pollen/private/external/logging.rkt")
            (lib "pollen/test/test-pollen-mode.rkt")
            (lib "pollen/misc/tutorial.rkt")
            (lib "pollen/private/command.rkt")
            (lib "pollen/test/test-trim-whitespace.rkt")
            (lib "pollen/test/data/escape-ext/pollen.rkt")))
          (name . "pollen")
          (nix-sha256
           .
           "0hrnd114018gix24rbani0n6hmzyv5lfldm4yi7gzc453q1zzx91")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:mb@mbtype.com . #t)
                   (documents . #t)
                   (ring:1 . #t)))
          (source . "https://github.com/mbutterick/pollen.git")
          (tags . ("documents"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "bcb36c878df7e4f9acc693e3af372e7131146999")
                          (source
                           .
                           "https://github.com/mbutterick/pollen.git")
                          (source_url
                           .
                           "https://github.com/mbutterick/pollen.git")))))))
 ("pollen-component"
  .
  #hasheq((author . "me@leafac.com")
          (authors . ("me@leafac.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "pollen-component"
                    "doc/pollen-component@pollen-component/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/pollen-component.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/pollen-component.txt")))
          (checksum . "36853a84a58e2889b0e3065d5f1357a596e3c1e6")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base" "pollen" "sugar" "scribble-lib" "racket-doc"))
          (dependency-names
           .
           ("base" "pollen" "sugar" "scribble-lib" "racket-doc"))
          (description . "Component-based development for Pollen")
          (implies . ())
          (last-checked . 1557339726)
          (last-edit . 1525863127)
          (last-updated . 1526214014)
          (modules
           .
           ((lib
             "pollen-component/examples/with-css-expressions-and-urlang/pollen.rkt")
            (lib
             "pollen-component/examples/without-pollen-component/pollen.rkt")
            (lib "pollen-component/examples/with-pollen-component/pollen.rkt")
            (lib "pollen-component/documentation/pollen-component.scrbl")
            (lib "pollen-component/tests/parameter.rkt")
            (lib "pollen-component/tests/pollen.rkt")
            (lib "pollen-component/main.rkt")
            (lib "pollen-component/tests/test.rkt")
            (lib "pollen-component/examples/with-parameter/component.rkt")))
          (name . "pollen-component")
          (nix-sha256
           .
           "168k5gzpcyq710c32mcvlsrbq4gz1lv1f1y3d755ci785ybm0l63")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:me@leafac.com . #t)
                   (components . #t)
                   (pollen . #t)
                   (ring:1 . #t)))
          (source . "https://github.com/leafac/pollen-component.git")
          (tags . ("components" "pollen"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "36853a84a58e2889b0e3065d5f1357a596e3c1e6")
                          (source
                           .
                           "https://github.com/leafac/pollen-component.git")
                          (source_url
                           .
                           "https://github.com/leafac/pollen-component.git")))))))
 ("pollen-count"
  .
  #hasheq((author . "malcolm.still@gmail.com")
          (authors . ("malcolm.still@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "pollen-count"
                    "doc/pollen-count@pollen-count/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/pollen-count.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/pollen-count.txt")))
          (checksum . "c4da923debcf40d0558ea4cb97c8a7bd4f35f34b")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base" "rackunit-lib" "txexpr" "scribble-lib" "racket-doc"))
          (dependency-names
           .
           ("base" "rackunit-lib" "txexpr" "scribble-lib" "racket-doc"))
          (description . "")
          (implies . ())
          (last-checked . 1557339726)
          (last-edit . 1456768925)
          (last-updated . 1502816291)
          (modules
           .
           ((lib "pollen-count/main.rkt")
            (lib "pollen-count/scribblings/pollen-count.scrbl")))
          (name . "pollen-count")
          (nix-sha256
           .
           "123898dz12p3605zprs6bynlgimw73yqfi77dimy1bdp2kjynff4")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (:no-desc: . #t)
                   (:no-tag: . #t)
                   (author:malcolm.still@gmail.com . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/malcolmstill/pollen-count")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "c4da923debcf40d0558ea4cb97c8a7bd4f35f34b")
                          (source
                           .
                           "git://github.com/malcolmstill/pollen-count")
                          (source_url
                           .
                           "http://github.com/malcolmstill/pollen-count/tree/master")))))))
 ("pollen-rock"
  .
  #hasheq((author . "ljs.darkfish@gmail.com")
          (authors . ("ljs.darkfish@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . "server/built/deps/pollen-rock.txt")
                 (docs
                  .
                  (("main"
                    "pollen-rock"
                    "doc/pollen-rock@pollen-rock/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/pollen-rock.txt")
                 (test-failure-log . "server/built/test-fail/pollen-rock.txt")
                 (test-success-log . #f)))
          (checksum . "214acc8199ab834c57dde734efc48cae159073c1")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "rackunit-lib"
            "web-server-lib"
            "pollen"
            "sugar"
            "scribble-lib"
            "racket-doc"))
          (dependency-names
           .
           ("base"
            "rackunit-lib"
            "web-server-lib"
            "pollen"
            "sugar"
            "scribble-lib"
            "racket-doc"))
          (description
           .
           "An enhanced Pollen server and an in-browser editor for Pollen files")
          (implies . ())
          (last-checked . 1557339726)
          (last-edit . 1505460056)
          (last-updated . 1548783744)
          (modules
           .
           ((lib "pollen-rock/pollen-rock/http-util.rkt")
            (lib "pollen-rock/pollen-rock/handlers/get-config-handler.rkt")
            (lib "pollen-rock/pollen-rock/handlers/dump-handler.rkt")
            (lib "pollen-rock/pollen-rock/handlers/fs-handler.rkt")
            (lib "pollen-rock/pollen-rock/tests/test.rkt")
            (lib "pollen-rock/pollen-rock/handlers/render-handler.rkt")
            (lib "pollen-rock/pollen-rock/scribblings/pollen-rock.scrbl")
            (lib "pollen-rock/pollen-rock/handlers/search-handler.rkt")
            (lib "pollen-rock/pollen-rock/restful.rkt")
            (lib "pollen-rock/pollen-rock/tests/test-utils.rkt")
            (lib "pollen-rock/pollen-rock/main.rkt")
            (lib "pollen-rock/pollen-rock/handlers/watch-handler.rkt")
            (lib "pollen-rock/pollen-rock/config.rkt")
            (lib "pollen-rock/pollen-rock/handlers/get-contents-handler.rkt")
            (lib "pollen-rock/pollen-rock/handlers/fs-watch.rkt")
            (lib "pollen-rock/pollen-rock/handlers/tags-handler.rkt")
            (lib "pollen-rock/pollen-rock/logger.rkt")
            (lib "pollen-rock/pollen-rock/handlers/expose-module.rkt")))
          (name . "pollen-rock")
          (nix-sha256
           .
           "1sbfz7kk978a77mbpmbaravrywwvr1xb44vh2wlqx39vdanlas76")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-dep-fail: . #t)
                   (:build-success: . #t)
                   (:docs: . #t)
                   (author:ljs.darkfish@gmail.com . #t)
                   (pollen . #t)
                   (ring:1 . #t)))
          (source . "https://github.com/lijunsong/pollen-rock.git")
          (tags . ("pollen"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "214acc8199ab834c57dde734efc48cae159073c1")
                          (source
                           .
                           "https://github.com/lijunsong/pollen-rock.git")
                          (source_url
                           .
                           "https://github.com/lijunsong/pollen-rock.git")))))))
 ("pollen-tfl"
  .
  #hasheq((author . "mb@mbtype.com")
          (authors . ("mb@mbtype.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "pollen-tfl"
                    "doc/pollen-tfl@pollen-tfl/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/pollen-tfl.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/pollen-tfl.txt")))
          (checksum . "7f49fee55264b4dd9afaa4838bfb89743a720cd0")
          (checksum-error . #f)
          (conflicts . ())
          (date-added . 1556661273)
          (dependencies
           .
           ("base"
            "pollen"
            "hyphenate"
            "css-tools"
            "txexpr"
            "sugar"
            "scribble-lib"
            "rackunit-lib"
            "racket-doc"
            "scribble-doc"))
          (dependency-names
           .
           ("base"
            "pollen"
            "hyphenate"
            "css-tools"
            "txexpr"
            "sugar"
            "scribble-lib"
            "rackunit-lib"
            "racket-doc"
            "scribble-doc"))
          (description
           .
           "Sample Pollen project: source code for Typography for Lawyers website")
          (implies . ())
          (last-checked . 1557339726)
          (last-edit . 1556661274)
          (last-updated . 1552269975)
          (modules
           .
           ((lib "pollen-tfl/pricing-table.rkt")
            (lib "pollen-tfl/fonts/pollen.rkt")
            (lib "pollen-tfl/scribblings/pollen-rkt.scrbl")
            (lib "pollen-tfl/scribblings/pollen-tfl.scrbl")
            (lib "pollen-tfl/sku.rkt")
            (lib "pollen-tfl/pollen-test.rkt")
            (lib "pollen-tfl/pollen.rkt")))
          (name . "pollen-tfl")
          (nix-sha256
           .
           "13ysv3xgzmdwix7l51a89nssab21kvfwb9swkj9mjn0cw9v0nvfv")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:mb@mbtype.com . #t)
                   (demo . #t)
                   (pollen . #t)
                   (ring:1 . #t)))
          (source . "https://github.com/mbutterick/pollen-tfl.git")
          (tags . ("demo" "pollen"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "7f49fee55264b4dd9afaa4838bfb89743a720cd0")
                          (source
                           .
                           "https://github.com/mbutterick/pollen-tfl.git")
                          (source_url
                           .
                           "https://github.com/mbutterick/pollen-tfl.git")))))))
 ("polysemy"
  .
  #hasheq((author . "georges.duperon@gmail.com")
          (authors . ("georges.duperon@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "polysemy" "doc/polysemy@polysemy/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/polysemy.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/polysemy.txt")))
          (checksum . "c499b6e3f033f84054df7682defed8fa7f52533f")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           (("base" "6.3")
            "rackunit-lib"
            ("scribble-lib" "1.16")
            "racket-doc"))
          (dependency-names
           .
           ("base" "rackunit-lib" "scribble-lib" "racket-doc"))
          (description
           .
           "Highly experimental and unstable. Attach multiple meanings to an identifier (match expander, function overloads, macros, custom \"~literal\" tokens…). Rename parts of identifiers (rename only some meanings, leaving others with the original name). Compose hybrid identifiers by mixing the meanings of two or more independently defined identifiers.")
          (implies . ())
          (last-checked . 1557339726)
          (last-edit . 1501078926)
          (last-updated . 1556193985)
          (modules
           .
           ((lib "polysemy/test/test-2-provide.rkt")
            (lib "polysemy/test/test-require-d.rkt")
            (lib "polysemy/private/utils.rkt")
            (lib "polysemy/test/test-provide-b.rkt")
            (lib "polysemy/private/ids.rkt")
            (lib "polysemy/test/test-require-c.rkt")
            (lib "polysemy/test/test-require.rkt")
            (lib "polysemy/test/test-2-require.rkt")
            (lib "polysemy/main.rkt")
            (lib "polysemy/test/test-provide.rkt")
            (lib "polysemy/test/test-require-e-rename-failure.rkt")
            (lib "polysemy/scribblings/polysemy.scrbl")))
          (name . "polysemy")
          (nix-sha256
           .
           "06bz73m8gc18d74krz37mlm3ra460jc1fggwv5q4w9g003ah3s43")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:georges.duperon@gmail.com . #t)
                   (experimental . #t)
                   (provide . #t)
                   (require . #t)
                   (ring:1 . #t)
                   (syntax . #t)))
          (source . "https://github.com/jsmaniac/polysemy.git")
          (tags . ("experimental" "provide" "require" "syntax"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "c499b6e3f033f84054df7682defed8fa7f52533f")
                          (source
                           .
                           "https://github.com/jsmaniac/polysemy.git")
                          (source_url
                           .
                           "https://github.com/jsmaniac/polysemy.git")))))))
 ("pop-pl"
  .
  #hasheq((author . "spencer@florence.io")
          (authors . ("spencer@florence.io"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/pop-pl.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/pop-pl.txt")))
          (checksum . "758f7bff0b5e2810f85cda0b6305c4699ed4fce5")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           (("base" #:version "6.3")
            "gui-lib"
            "pict-lib"
            "rackunit-lib"
            "cover-coveralls"))
          (dependency-names
           .
           ("base" "gui-lib" "pict-lib" "rackunit-lib" "cover-coveralls"))
          (description
           .
           "A Patient-Oriented Prescription Programming Language")
          (implies . ())
          (last-checked . 1557339726)
          (last-edit . 1426520796)
          (last-updated . 1516727894)
          (modules
           .
           ((lib "pop-pl/examples/insulin/simulation.rkt")
            (lib "pop-pl/lang/reader.rkt")
            (lib "pop-pl/private/shared.rkt")
            (lib "pop-pl/tests/insulin.rkt")
            (lib "pop-pl/examples/heparin/simulation.rkt")
            (lib "pop-pl/tests/harness.rkt")
            (lib "pop-pl/main.rkt")
            (lib "pop-pl/lang/parse.rkt")
            (lib "pop-pl/constants.rkt")
            (lib "pop-pl/prescription-sig.rkt")
            (lib "pop-pl/system-unit.rkt")
            (lib "pop-pl/packrat.rkt")
            (lib "pop-pl/tests/popa.rkt")
            (lib "pop-pl/system-sig.rkt")
            (lib "pop-pl/examples/heparin/sim-gui.rkt")
            (lib "pop-pl/tests/heparin.rkt")
            (lib "pop-pl/examples/insulin/sim-gui.rkt")
            (lib "pop-pl/sexp/lang/reader.rkt")
            (lib "pop-pl/examples/lurie-heparin/heparin.rkt")))
          (name . "pop-pl")
          (nix-sha256
           .
           "0z8b7rs6aqhdbbg8vyfzq2vgs10zfxmk5liyj82qny3wfb9dpcb4")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:no-tag: . #t)
                   (author:spencer@florence.io . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/florence/pop-pl")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "758f7bff0b5e2810f85cda0b6305c4699ed4fce5")
                          (source . "git://github.com/florence/pop-pl")
                          (source_url
                           .
                           "http://github.com/florence/pop-pl/tree/master")))
                 ("6.1.1"
                  .
                  #hasheq((checksum
                           .
                           "b11be20b04ec61ea080588cd228bd26195fdb5cc")
                          (source . "git://github.com/florence/pop-pl#old")
                          (source_url
                           .
                           "http://github.com/florence/pop-pl/tree/master#old")))
                 ("6.2"
                  .
                  #hasheq((checksum
                           .
                           "b11be20b04ec61ea080588cd228bd26195fdb5cc")
                          (source . "git://github.com/florence/pop-pl#old")
                          (source_url
                           .
                           "http://github.com/florence/pop-pl/tree/master#old")))
                 ("6.2.1"
                  .
                  #hasheq((checksum
                           .
                           "b11be20b04ec61ea080588cd228bd26195fdb5cc")
                          (source . "git://github.com/florence/pop-pl#old")
                          (source_url
                           .
                           "http://github.com/florence/pop-pl/tree/master#old")))))))
 ("popl-2012-ryr-talk"
  .
  #hasheq((author . "robby@racket-lang.org")
          (authors . ("robby@racket-lang.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/popl-2012-ryr-talk.txt")
                 (test-failure-log
                  .
                  "server/built/test-fail/popl-2012-ryr-talk.txt")
                 (test-success-log . #f)))
          (checksum . "9da05129de004cc1df0ccfbd821e8542a9155021")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "gui-lib"
            "htdp-lib"
            "redex-gui-lib"
            "redex-lib"
            "slideshow-lib"))
          (dependency-names
           .
           ("base"
            "gui-lib"
            "htdp-lib"
            "redex-gui-lib"
            "redex-lib"
            "slideshow-lib"))
          (description . "")
          (implies . ())
          (last-checked . 1557339727)
          (last-edit . 1440407946)
          (last-updated . 1502816300)
          (modules
           .
           ((lib "popl-2012-ryr-talk/fable-words.rkt")
            (lib "popl-2012-ryr-talk/amb.rkt")
            (lib "popl-2012-ryr-talk/lifecycle.rkt")
            (lib "popl-2012-ryr-talk/amb-test.rkt")
            (lib "popl-2012-ryr-talk/color.rkt")
            (lib "popl-2012-ryr-talk/main.rkt")
            (lib "popl-2012-ryr-talk/title.rkt")
            (lib "popl-2012-ryr-talk/fable/fable.rkt")
            (lib "popl-2012-ryr-talk/typeset-amb.rkt")
            (lib "popl-2012-ryr-talk/subst.rkt")
            (lib "popl-2012-ryr-talk/subst-test.rkt")
            (lib "popl-2012-ryr-talk/util.rkt")
            (lib "popl-2012-ryr-talk/study.rkt")))
          (name . "popl-2012-ryr-talk")
          (nix-sha256
           .
           "1fybgxk720n3kq82pzvms00bzyn0xascxc780mk5y00vncigwnaw")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:no-desc: . #t)
                   (:no-tag: . #t)
                   (author:robby@racket-lang.org . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/rfindler/popl-2012-ryr-talk")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "9da05129de004cc1df0ccfbd821e8542a9155021")
                          (source
                           .
                           "git://github.com/rfindler/popl-2012-ryr-talk")
                          (source_url
                           .
                           "http://github.com/rfindler/popl-2012-ryr-talk/tree/master")))))))
 ("poppler-i386-macosx"
  .
  #hasheq((author . "jensaxel@soegaard.net")
          (authors . ("jensaxel@soegaard.net"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log
                  .
                  "server/built/install/poppler-i386-macosx.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/poppler-i386-macosx.txt")))
          (checksum . "e063f0463664e0fe4943135020826ff5bbbd3ce9")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base"))
          (dependency-names . ("base"))
          (description . "native libraries for \"racket-poppler\" package")
          (implies . ())
          (last-checked . 1557339727)
          (last-edit . 1409089891)
          (last-updated . 1502816300)
          (modules . ())
          (name . "poppler-i386-macosx")
          (nix-sha256
           .
           "1wq635670nyzh5y46bd2hkv8vmizxxqfk30469flm8fvijrzb465")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:jensaxel@soegaard.net . #t)
                   (poppler . #t)
                   (ring:1 . #t)))
          (source
           .
           "git://github.com/soegaard/poppler-libs?path=poppler-i386-macosx")
          (tags . ("poppler"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "e063f0463664e0fe4943135020826ff5bbbd3ce9")
                          (source
                           .
                           "git://github.com/soegaard/poppler-libs?path=poppler-i386-macosx")
                          (source_url
                           .
                           "http://github.com/soegaard/poppler-libs/tree/master?path=poppler-i386-macosx")))))))
 ("poppler-libs-3"
  .
  #hasheq((author . "jensaxel@soegaard.net")
          (authors . ("jensaxel@soegaard.net"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . "server/built/deps/poppler-libs-3.txt")
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/poppler-libs-3.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/poppler-libs-3.txt")))
          (checksum . "dbb5cf3e6e225aa8af8abdc815734981682812bd")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ())
          (dependency-names . ())
          (description
           .
           "Binaries for poppler built to work with the draw-<platform>-3 libraries")
          (implies . ())
          (last-checked . 1557339727)
          (last-edit . 1523271918)
          (last-updated . 1523271918)
          (modules . ())
          (name . "poppler-libs-3")
          (nix-sha256
           .
           "16ikr9ixdi8z4arj7qa324nd4p9gydvp80dh23rjg2qyyzggq1ly")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-dep-fail: . #t)
                   (:build-success: . #t)
                   (author:jensaxel@soegaard.net . #t)
                   (binary . #t)
                   (graphics . #t)
                   (pdf . #t)
                   (poppler . #t)
                   (ring:2 . #t)))
          (source . "https://github.com/soegaard/poppler-libs-3.git")
          (tags . ("binary" "graphics" "pdf" "poppler"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "dbb5cf3e6e225aa8af8abdc815734981682812bd")
                          (source
                           .
                           "https://github.com/soegaard/poppler-libs-3.git")
                          (source_url
                           .
                           "https://github.com/soegaard/poppler-libs-3.git")))))))
 ("poppler-ppc-macosx"
  .
  #hasheq((author . "jensaxel@soegaard.net")
          (authors . ("jensaxel@soegaard.net"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/poppler-ppc-macosx.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/poppler-ppc-macosx.txt")))
          (checksum . "e063f0463664e0fe4943135020826ff5bbbd3ce9")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base"))
          (dependency-names . ("base"))
          (description . "native libraries for \"racket-poppler\" package")
          (implies . ())
          (last-checked . 1557339727)
          (last-edit . 1409089859)
          (last-updated . 1502816305)
          (modules . ())
          (name . "poppler-ppc-macosx")
          (nix-sha256
           .
           "1wq635670nyzh5y46bd2hkv8vmizxxqfk30469flm8fvijrzb465")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:jensaxel@soegaard.net . #t)
                   (poppler . #t)
                   (ring:1 . #t)))
          (source
           .
           "git://github.com/soegaard/poppler-libs?path=poppler-ppc-macosx")
          (tags . ("poppler"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "e063f0463664e0fe4943135020826ff5bbbd3ce9")
                          (source
                           .
                           "git://github.com/soegaard/poppler-libs?path=poppler-ppc-macosx")
                          (source_url
                           .
                           "http://github.com/soegaard/poppler-libs/tree/master?path=poppler-ppc-macosx")))))))
 ("poppler-win32-i386"
  .
  #hasheq((author . "jensaxel@soegaard.net")
          (authors . ("jensaxel@soegaard.net"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/poppler-win32-i386.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/poppler-win32-i386.txt")))
          (checksum . "e063f0463664e0fe4943135020826ff5bbbd3ce9")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base"))
          (dependency-names . ("base"))
          (description . "native libraries for \"racket-poppler\" package")
          (implies . ())
          (last-checked . 1557339727)
          (last-edit . 1409089839)
          (last-updated . 1502816310)
          (modules . ())
          (name . "poppler-win32-i386")
          (nix-sha256
           .
           "1wq635670nyzh5y46bd2hkv8vmizxxqfk30469flm8fvijrzb465")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:jensaxel@soegaard.net . #t)
                   (poppler . #t)
                   (ring:1 . #t)))
          (source
           .
           "git://github.com/soegaard/poppler-libs?path=poppler-win32-i386")
          (tags . ("poppler"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "e063f0463664e0fe4943135020826ff5bbbd3ce9")
                          (source
                           .
                           "git://github.com/soegaard/poppler-libs?path=poppler-win32-i386")
                          (source_url
                           .
                           "http://github.com/soegaard/poppler-libs/tree/master?path=poppler-win32-i386")))))))
 ("poppler-win32-x86-64"
  .
  #hasheq((author . "jensaxel@soegaard.net")
          (authors . ("jensaxel@soegaard.net"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log
                  .
                  "server/built/install/poppler-win32-x86-64.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/poppler-win32-x86-64.txt")))
          (checksum . "e063f0463664e0fe4943135020826ff5bbbd3ce9")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base"))
          (dependency-names . ("base"))
          (description . "native libraries for \"racket-poppler\" package")
          (implies . ())
          (last-checked . 1557339727)
          (last-edit . 1409089810)
          (last-updated . 1502816314)
          (modules . ())
          (name . "poppler-win32-x86-64")
          (nix-sha256
           .
           "1wq635670nyzh5y46bd2hkv8vmizxxqfk30469flm8fvijrzb465")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:jensaxel@soegaard.net . #t)
                   (poppler . #t)
                   (ring:1 . #t)))
          (source
           .
           "git://github.com/soegaard/poppler-libs?path=poppler-win32-x86_64")
          (tags . ("poppler"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "e063f0463664e0fe4943135020826ff5bbbd3ce9")
                          (source
                           .
                           "git://github.com/soegaard/poppler-libs?path=poppler-win32-x86_64")
                          (source_url
                           .
                           "http://github.com/soegaard/poppler-libs/tree/master?path=poppler-win32-x86_64")))))))
 ("poppler-x86-64-macosx"
  .
  #hasheq((author . "jensaxel@soegaard.net")
          (authors . ("jensaxel@soegaard.net"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log
                  .
                  "server/built/install/poppler-x86-64-macosx.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/poppler-x86-64-macosx.txt")))
          (checksum . "e063f0463664e0fe4943135020826ff5bbbd3ce9")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base"))
          (dependency-names . ("base"))
          (description . "native libraries for \"racket-poppler\" package")
          (implies . ())
          (last-checked . 1557339727)
          (last-edit . 1409089876)
          (last-updated . 1502816319)
          (modules . ())
          (name . "poppler-x86-64-macosx")
          (nix-sha256
           .
           "1wq635670nyzh5y46bd2hkv8vmizxxqfk30469flm8fvijrzb465")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:jensaxel@soegaard.net . #t)
                   (poppler . #t)
                   (ring:1 . #t)))
          (source
           .
           "git://github.com/soegaard/poppler-libs?path=poppler-x86_64-macosx")
          (tags . ("poppler"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "e063f0463664e0fe4943135020826ff5bbbd3ce9")
                          (source
                           .
                           "git://github.com/soegaard/poppler-libs?path=poppler-x86_64-macosx")
                          (source_url
                           .
                           "http://github.com/soegaard/poppler-libs/tree/master?path=poppler-x86_64-macosx")))))))
 ("port-match"
  .
  #hasheq((author . "leo@lwh.jp")
          (authors . ("leo@lwh.jp"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "port-match"
                    "doc/port-match@port-match/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/port-match.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/port-match.txt")))
          (checksum . "71fd3e9ed4f5766c46182923b08ff6d514e838a2")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "racket-doc" "scribble-lib"))
          (dependency-names . ("base" "racket-doc" "scribble-lib"))
          (description . "Pattern Matching for Ports")
          (implies . ())
          (last-checked . 1557339727)
          (last-edit . 1507535112)
          (last-updated . 1507548594)
          (modules
           .
           ((lib "port-match/private/pattern.rkt")
            (lib "port-match/private/expander.rkt")
            (lib "port-match/private/forms.rkt")
            (lib "port-match/test.rkt")
            (lib "port-match/private/template.rkt")
            (lib "port-match/main.rkt")
            (lib "port-match/port-match.scrbl")
            (lib "port-match/private/compile.rkt")
            (lib "port-match/base.rkt")))
          (name . "port-match")
          (nix-sha256
           .
           "1w3fawiva1zzll9adkpxazzi78va43dpjpscw65lhnj9i6s605il")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:leo@lwh.jp . #t)
                   (binary . #t)
                   (match . #t)
                   (port . #t)
                   (ring:2 . #t)))
          (source . "git://github.com/lwhjp/port-match")
          (tags . ("binary" "match" "port"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "71fd3e9ed4f5766c46182923b08ff6d514e838a2")
                          (source . "git://github.com/lwhjp/port-match")
                          (source_url
                           .
                           "http://github.com/lwhjp/port-match/tree/master")))))))
 ("portaudio"
  .
  #hasheq((author . "clements@racket-lang.org")
          (authors . ("clements@racket-lang.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "portaudio" "doc/portaudio@portaudio/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/portaudio.txt")
                 (test-failure-log . "server/built/test-fail/portaudio.txt")
                 (test-success-log . #f)))
          (checksum . "3703edda0c6b9f5ef7e7bf39b933cb1d0e9a82b5")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "rackunit-lib" "scribble-lib" "racket-doc"))
          (dependency-names
           .
           ("base" "rackunit-lib" "scribble-lib" "racket-doc"))
          (description
           .
           "Bindings for portaudio, a cross-platform audio library.")
          (implies . ())
          (last-checked . 1557339727)
          (last-edit . 1410457003)
          (last-updated . 1502816323)
          (modules
           .
           ((lib "portaudio/portaudio.scrbl")
            (lib "portaudio/test/test-stream-playback.rkt")
            (lib "portaudio/s16vec-play.rkt")
            (lib "portaudio/test/test-s16vec-play.rkt")
            (lib "portaudio/s16vec-record.rkt")
            (lib "portaudio/devices.rkt")
            (lib "portaudio/portaudio.rkt")
            (lib "portaudio/stream-play.rkt")
            (lib "portaudio/test/test-stream-callback.rkt")
            (lib "portaudio/callback-support.rkt")
            (lib "portaudio/main.rkt")
            (lib "portaudio/test/test-portaudio.rkt")
            (lib "portaudio/test/helpers.rkt")
            (lib "portaudio/test/test-copying-callbacks.rkt")
            (lib "portaudio/test/test-hi-level-stream-play.rkt")
            (lib "portaudio/test/test-s16vec-record.rkt")))
          (name . "portaudio")
          (nix-sha256
           .
           "1132wfqdapn7yswhkp7rbvc6lymqs1wgala8rnka92j6z5ms8rln")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (audio . #t)
                   (author:clements@racket-lang.org . #t)
                   (ffi . #t)
                   (io . #t)
                   (ring:1 . #t)))
          (source . "github://github.com/jbclements/portaudio/master/")
          (tags . ("audio" "ffi" "io"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "3703edda0c6b9f5ef7e7bf39b933cb1d0e9a82b5")
                          (source
                           .
                           "github://github.com/jbclements/portaudio/master/")
                          (source_url
                           .
                           "http://github.com/jbclements/portaudio/tree/master/")))
                 ("5.3.2"
                  .
                  #hasheq((checksum
                           .
                           "74dfaf1d6317a9f5479ae5492e874e9e73888a46")
                          (source
                           .
                           "github://github.com/jbclements/portaudio/pre-6/")
                          (source_url
                           .
                           "http://github.com/jbclements/portaudio/tree/pre-6/")))
                 ("5.3.3"
                  .
                  #hasheq((checksum
                           .
                           "74dfaf1d6317a9f5479ae5492e874e9e73888a46")
                          (source
                           .
                           "github://github.com/jbclements/portaudio/pre-6/")
                          (source_url
                           .
                           "http://github.com/jbclements/portaudio/tree/pre-6/")))
                 ("5.3.4"
                  .
                  #hasheq((checksum
                           .
                           "74dfaf1d6317a9f5479ae5492e874e9e73888a46")
                          (source
                           .
                           "github://github.com/jbclements/portaudio/pre-6/")
                          (source_url
                           .
                           "http://github.com/jbclements/portaudio/tree/pre-6/")))
                 ("5.3.5"
                  .
                  #hasheq((checksum
                           .
                           "74dfaf1d6317a9f5479ae5492e874e9e73888a46")
                          (source
                           .
                           "github://github.com/jbclements/portaudio/pre-6/")
                          (source_url
                           .
                           "http://github.com/jbclements/portaudio/tree/pre-6/")))
                 ("5.3.6"
                  .
                  #hasheq((checksum
                           .
                           "74dfaf1d6317a9f5479ae5492e874e9e73888a46")
                          (source
                           .
                           "github://github.com/jbclements/portaudio/pre-6/")
                          (source_url
                           .
                           "http://github.com/jbclements/portaudio/tree/pre-6/")))
                 ("5.92"
                  .
                  #hasheq((checksum
                           .
                           "74dfaf1d6317a9f5479ae5492e874e9e73888a46")
                          (source
                           .
                           "github://github.com/jbclements/portaudio/pre-6/")
                          (source_url
                           .
                           "http://github.com/jbclements/portaudio/tree/pre-6/")))
                 ("5.93"
                  .
                  #hasheq((checksum
                           .
                           "74dfaf1d6317a9f5479ae5492e874e9e73888a46")
                          (source
                           .
                           "github://github.com/jbclements/portaudio/pre-6/")
                          (source_url
                           .
                           "http://github.com/jbclements/portaudio/tree/pre-6/")))))))
 ("positional-tree-utils"
  .
  #hasheq((author . "vincentnys@gmail.com")
          (authors . ("vincentnys@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . "server/built/fail/positional-tree-utils.txt")
                 (min-failure-log . #f)
                 (success-log . #f)
                 (test-failure-log . #f)
                 (test-success-log . #f)))
          (checksum . "1ef3b3d188660b4849788872d6a2b3eaf5d355df")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("at-exp-lib"
            "base"
            "racket-doc"
            "rackunit-lib"
            "scribble-lib"
            ("list-utils" #:version "0.3")))
          (dependency-names
           .
           ("at-exp-lib"
            "base"
            "racket-doc"
            "rackunit-lib"
            "scribble-lib"
            "list-utils"))
          (description
           .
           "A collection of functions which I have found useful when working with positional trees.")
          (implies . ())
          (last-checked . 1557339728)
          (last-edit . 1513667654)
          (last-updated . 1519916728)
          (modules
           .
           ((lib "positional-tree-utils/main.rkt")
            (lib
             "positional-tree-utils/scribblings/positional-tree-utils.scrbl")
            (lib "positional-tree-utils/printer.rkt")))
          (name . "positional-tree-utils")
          (nix-sha256
           .
           "0v61046kwmkhi9qx4a6j9svr5lqh8ryj729zmvdsrjs5jyd9gkgj")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-fail: . #t)
                   (author:vincentnys@gmail.com . #t)
                   (ring:2 . #t)
                   (trees . #t)
                   (utilities . #t)))
          (source . "https://github.com/v-nys/positional-tree-utils.git")
          (tags . ("trees" "utilities"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "1ef3b3d188660b4849788872d6a2b3eaf5d355df")
                          (source
                           .
                           "https://github.com/v-nys/positional-tree-utils.git")
                          (source_url
                           .
                           "https://github.com/v-nys/positional-tree-utils.git")))))))
 ("postfix-dot-notation"
  .
  #hasheq((author . "alexander@knauth.org")
          (authors . ("alexander@knauth.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "postfix-dot-notation"
                    "doc/postfix-dot-notation@postfix-dot-notation/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log
                  .
                  "server/built/install/postfix-dot-notation.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/postfix-dot-notation.txt")))
          (checksum . "584ed69de73775e261ecdb7607fc14d9790500ef")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "sweet-exp"
            "hygienic-reader-extension"
            "rackunit-lib"
            "scribble-lib"
            "racket-doc"
            "scribble-doc"))
          (dependency-names
           .
           ("base"
            "sweet-exp"
            "hygienic-reader-extension"
            "rackunit-lib"
            "scribble-lib"
            "racket-doc"
            "scribble-doc"))
          (description . "a lang-extension for postfix dot notation")
          (implies . ())
          (last-checked . 1557339728)
          (last-edit . 1466340964)
          (last-updated . 1502816324)
          (modules
           .
           ((lib "postfix-dot-notation/main.rkt")
            (lib "postfix-dot-notation/lang/language-info.rkt")
            (lib "postfix-dot-notation/docs/postfix-dot-notation.scrbl")
            (lib "postfix-dot-notation/lang/runtime-config.rkt")
            (lib "postfix-dot-notation/minsec.rkt")
            (lib "postfix-dot-notation/tests/test-lang.rkt")
            (lib "postfix-dot-notation/reader.rkt")
            (lib "postfix-dot-notation/lang/reader.rkt")
            (lib "postfix-dot-notation/top-utils.rkt")))
          (name . "postfix-dot-notation")
          (nix-sha256
           .
           "00klrvih15mnhcnpwjs99jg6i672f4bgisx0jypi8qc2anwd415s")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:alexander@knauth.org . #t)
                   (lang-extension . #t)
                   (ring:1 . #t)
                   (syntax . #t)))
          (source . "git://github.com/AlexKnauth/postfix-dot-notation")
          (tags . ("lang-extension" "syntax"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "584ed69de73775e261ecdb7607fc14d9790500ef")
                          (source
                           .
                           "git://github.com/AlexKnauth/postfix-dot-notation")
                          (source_url
                           .
                           "http://github.com/AlexKnauth/postfix-dot-notation/tree/master")))))))
 ("postmark"
  .
  #hasheq((author . "clements@racket-lang.org")
          (authors . ("clements@racket-lang.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "postmark" "doc/postmark@postmark/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/postmark.txt")
                 (test-failure-log . "server/built/test-fail/postmark.txt")
                 (test-success-log . #f)))
          (checksum . "6204838d15c5de48389a2a45ee9158493cc76bc8")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "typed-racket-lib"
            "typed-racket-more"
            "racket-doc"
            "rackunit-lib"
            "scribble-lib"))
          (dependency-names
           .
           ("base"
            "typed-racket-lib"
            "typed-racket-more"
            "racket-doc"
            "rackunit-lib"
            "scribble-lib"))
          (description
           .
           "A front-end for the Postmark email delivery service API")
          (implies . ())
          (last-checked . 1557339728)
          (last-edit . 1447189734)
          (last-updated . 1502816324)
          (modules
           .
           ((lib "postmark/main.rkt") (lib "postmark/postmark.scrbl")))
          (name . "postmark")
          (nix-sha256
           .
           "1546ry96yfglwvp6kw9sswmki33l3d52iwknaa23vfi4yxr7g8zv")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:clements@racket-lang.org . #t)
                   (email . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/jbclements/postmark")
          (tags . ("email"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "6204838d15c5de48389a2a45ee9158493cc76bc8")
                          (source . "git://github.com/jbclements/postmark")
                          (source_url
                           .
                           "http://github.com/jbclements/postmark/tree/master")))))))
 ("postmark-client"
  .
  #hasheq((author . "bogdan@defn.io")
          (authors . ("bogdan@defn.io"))
          (build
           .
           #hash((conflicts-log . "conflicts.txt")
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("extract"
                    "postmark"
                    "doc/postmark@postmark-client/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/postmark-client.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/postmark-client.txt")))
          (checksum . "100658767850cba8d077bdc97ee59bbade6dd89f")
          (checksum-error . #f)
          (conflicts . ("postmark"))
          (date-added . 1548416613)
          (dependencies
           .
           ("base"
            "racket-doc"
            "rackunit-lib"
            "scribble-lib"
            "web-server-lib"))
          (dependency-names
           .
           ("base"
            "racket-doc"
            "rackunit-lib"
            "scribble-lib"
            "web-server-lib"))
          (description . "A client for the Postmark HTTP API.")
          (implies . ())
          (last-checked . 1557339728)
          (last-edit . 1548418176)
          (last-updated . 1548924146)
          (modules
           .
           ((lib "postmark/tests.rkt")
            (lib "postmark/postmark.scrbl")
            (lib "postmark/main.rkt")))
          (name . "postmark-client")
          (nix-sha256
           .
           "1nnnz9rx85ikk5yijwjv7pxn15vjkxjzaggscsm88cpnq098zx2p")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-conflicts: . #t)
                   (:build-success: . #t)
                   (:conflicts: . #t)
                   (:docs-error: . #t)
                   (:docs: . #t)
                   (author:bogdan@defn.io . #t)
                   (email . #t)
                   (ring:2 . #t)
                   (web . #t)))
          (source
           .
           "https://github.com/Bogdanp/racket-postmark.git?path=postmark")
          (tags . ("email" "web"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "100658767850cba8d077bdc97ee59bbade6dd89f")
                          (source
                           .
                           "https://github.com/Bogdanp/racket-postmark.git?path=postmark")
                          (source_url
                           .
                           "https://github.com/Bogdanp/racket-postmark.git?path=postmark")))))))
 ("postnet"
  .
  #hasheq((author . "neil@neilvandyke.org")
          (authors . ("neil@neilvandyke.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "postnet" "doc/postnet@postnet/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/postnet.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/postnet.txt")))
          (checksum . "b8a714b8cedd168925c6e1de8dd7cb80fd5391da")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base" "mcfly" "racket-doc" "scribble-lib" "overeasy"))
          (dependency-names
           .
           ("base" "mcfly" "racket-doc" "scribble-lib" "overeasy"))
          (description . "USPS POSTNET Barcode Encoding")
          (implies . ())
          (last-checked . 1557339728)
          (last-edit . 1456651795)
          (last-updated . 1502816325)
          (modules . ((lib "postnet/main.rkt") (lib "postnet/postnet.scrbl")))
          (name . "postnet")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (:no-tag: . #t)
                   (author:neil@neilvandyke.org . #t)
                   (ring:1 . #t)))
          (source . "http://www.neilvandyke.org/racket/postnet.zip")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "b8a714b8cedd168925c6e1de8dd7cb80fd5391da")
                          (source
                           .
                           "http://www.neilvandyke.org/racket/postnet.zip")
                          (source_url
                           .
                           "http://www.neilvandyke.org/racket/postnet.zip")))))))
 ("power-struct"
  .
  #hasheq((author . "macocio@gmail.com")
          (authors . ("macocio@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "power-struct"
                    "doc/power-struct@power-struct/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/power-struct.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/power-struct.txt")))
          (checksum . "cb9c521b8d1047d9d60a688b278dee61b301b975")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "scribble-lib" "racket-doc" "rackunit-lib"))
          (dependency-names
           .
           ("base" "scribble-lib" "racket-doc" "rackunit-lib"))
          (description
           .
           "Structure macro that easily defines a tagged default struct.")
          (implies . ())
          (last-checked . 1557339729)
          (last-edit . 1534612973)
          (last-updated . 1534618580)
          (modules
           .
           ((lib "power-struct/scribblings/power-struct.scrbl")
            (lib "power-struct/main.rkt")))
          (name . "power-struct")
          (nix-sha256
           .
           "0d28iw3mm4n8vm840sahimqhvvfay8dmmd132g7sv7l0nigagh5m")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:macocio@gmail.com . #t)
                   (ring:2 . #t)
                   (structs . #t)))
          (source . "https://github.com/BourgondAries/power-struct.git")
          (tags . ("structs"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "cb9c521b8d1047d9d60a688b278dee61b301b975")
                          (source
                           .
                           "https://github.com/BourgondAries/power-struct.git")
                          (source_url
                           .
                           "https://github.com/BourgondAries/power-struct.git")))))))
 ("ppict"
  .
  #hasheq((author . "ryanc@racket-lang.org")
          (authors . ("ryanc@racket-lang.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "ppict" "doc/ppict@ppict/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/ppict.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/ppict.txt")))
          (checksum . "5d2d5f9d0a10f0988c7ed1f1986a0a6a15dcdb77")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "draw-lib"
            "gui-lib"
            "pict-lib"
            "slideshow-lib"
            "racket-doc"
            "scribble-lib"
            "pict-doc"
            "slideshow-doc"))
          (dependency-names
           .
           ("base"
            "draw-lib"
            "gui-lib"
            "pict-lib"
            "slideshow-lib"
            "racket-doc"
            "scribble-lib"
            "pict-doc"
            "slideshow-doc"))
          (description . "progressive picts and slideshows")
          (implies . ())
          (last-checked . 1557339729)
          (last-edit . 1435182981)
          (last-updated . 1539897346)
          (modules
           .
           ((lib "ppict/ppict.scrbl")
            (lib "ppict/private/ppict.rkt")
            (lib "ppict/slideshow.rkt")
            (lib "ppict/private/tag-pict.rkt")
            (lib "ppict/private/ppict-syntax.rkt")
            (lib "ppict/tag.rkt")
            (lib "ppict/slideshow2.rkt")
            (lib "ppict/main.rkt")
            (lib "ppict/2.rkt")
            (lib "ppict/pict.rkt")
            (lib "ppict/align.rkt")
            (lib "ppict/private/tag-pict-regions-gui.rkt")))
          (name . "ppict")
          (nix-sha256
           .
           "0cdznm82f6n9lzamhd4d4ml047s99w6xf69gwwkaw446hjzgid20")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:ryanc@racket-lang.org . #t)
                   (graphics . #t)
                   (ring:1 . #t)
                   (slideshow . #t)))
          (source . "git://github.com/rmculpepper/ppict")
          (tags . ("graphics" "slideshow"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "5d2d5f9d0a10f0988c7ed1f1986a0a6a15dcdb77")
                          (source . "git://github.com/rmculpepper/ppict")
                          (source_url
                           .
                           "http://github.com/rmculpepper/ppict/tree/master")))))))
 ("ppict-slide-grid"
  .
  #hasheq((author . "asumu@ccs.neu.edu")
          (authors . ("asumu@ccs.neu.edu"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/ppict-slide-grid.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/ppict-slide-grid.txt")))
          (checksum . "1e992183dbfc695882bb612bb5b8b32515adeee2")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "pict-lib" "slideshow-lib" "unstable-lib"))
          (dependency-names
           .
           ("base" "pict-lib" "slideshow-lib" "unstable-lib"))
          (description . "")
          (implies . ())
          (last-checked . 1557339729)
          (last-edit . 1399745264)
          (last-updated . 1502816326)
          (modules . ((lib "ppict-slide-grid/main.rkt")))
          (name . "ppict-slide-grid")
          (nix-sha256
           .
           "1nn164m28fvx8a92jk534kqz89wx9jwbivvypkx6fr3lm8xznrw9")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:no-desc: . #t)
                   (author:asumu@ccs.neu.edu . #t)
                   (ring:1 . #t)
                   (slideshow . #t)))
          (source . "git://github.com/takikawa/ppict-slide-grid")
          (tags . ("slideshow"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "1e992183dbfc695882bb612bb5b8b32515adeee2")
                          (source
                           .
                           "git://github.com/takikawa/ppict-slide-grid")
                          (source_url
                           .
                           "http://github.com/takikawa/ppict-slide-grid/tree/master")))))))
 ("pprint"
  .
  #hasheq((author . "asumu@ccs.neu.edu")
          (authors . ("asumu@ccs.neu.edu"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "pprint" "doc/pprint@pprint/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/pprint.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/pprint.txt")))
          (checksum . "c85b4adcf26d3afc5b812d21b3a8f31d1fc6f853")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "dherman-struct"
            "rackunit-lib"
            "racket-doc"
            "scribble-lib"))
          (dependency-names
           .
           ("base"
            "dherman-struct"
            "rackunit-lib"
            "racket-doc"
            "scribble-lib"))
          (description . "A universal pretty printing library")
          (implies . ())
          (last-checked . 1557339729)
          (last-edit . 1504809561)
          (last-updated . 1513883775)
          (modules
           .
           ((lib "pprint/tests.rkt")
            (lib "pprint/pprint.scrbl")
            (lib "pprint/main.rkt")
            (lib "pprint/haskell.rkt")))
          (name . "pprint")
          (nix-sha256
           .
           "0s4vzzp0a83dc3bh9gqss9l7d0k65yrgzaq40j79rfjln89flhp7")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:asumu@ccs.neu.edu . #t)
                   (io . #t)
                   (printing . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/takikawa/pprint.plt")
          (tags . ("io" "printing"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "c85b4adcf26d3afc5b812d21b3a8f31d1fc6f853")
                          (source . "git://github.com/takikawa/pprint.plt")
                          (source_url
                           .
                           "http://github.com/takikawa/pprint.plt/tree/master")))))))
 ("predicates"
  .
  #hasheq((author . "jackhfirth@gmail.com")
          (authors . ("jackhfirth@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "predicates"
                    "doc/predicates@predicates/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/predicates.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/predicates.txt")))
          (checksum . "ba6b82864a6bdb2b0aa42d3a493effe54d44e4e1")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base" "rackunit-lib" "scribble-lib" "rackunit-lib" "racket-doc"))
          (dependency-names
           .
           ("base" "rackunit-lib" "scribble-lib" "rackunit-lib" "racket-doc"))
          (description
           .
           "Deprecated. A library for constructing predicates in a point-free style. Unmaintained, and racket/function now supplies functions that make parts of this unnecessary.")
          (implies . ())
          (last-checked . 1557339729)
          (last-edit . 1500077255)
          (last-updated . 1502816326)
          (modules
           .
           ((lib "predicates/test-helpers.rkt")
            (lib "predicates/logic.rkt")
            (lib "predicates/main.rkt")
            (lib "predicates/predicates.scrbl")
            (lib "predicates/contract-helpers.rkt")
            (lib "predicates/comparison.rkt")
            (lib "predicates/conditional.rkt")
            (lib "predicates/list.rkt")))
          (name . "predicates")
          (nix-sha256
           .
           "0lh33g9s7x8ac5q71xknnmkjp8nlc1qzyb8papxm8plq105ral94")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:jackhfirth@gmail.com . #t)
                   (deprecated . #t)
                   (functional . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/jackfirth/predicates")
          (tags . ("deprecated" "functional"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "ba6b82864a6bdb2b0aa42d3a493effe54d44e4e1")
                          (source . "git://github.com/jackfirth/predicates")
                          (source_url
                           .
                           "http://github.com/jackfirth/predicates/tree/master")))))))
 ("prefab-predicate-compat"
  .
  #hasheq((author . "pnwamk@gmail.com")
          (authors . ("pnwamk@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log
                  .
                  "server/built/fail/prefab-predicate-compat.txt")
                 (min-failure-log . #f)
                 (success-log . #f)
                 (test-failure-log . #f)
                 (test-success-log . #f)))
          (checksum . "7c6cc40738062f336839b1f63e9b9ceb2a80071a")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base"))
          (dependency-names . ("base"))
          (description
           .
           "Provides `define-backwards-compatible-flat-prefab-predicate`which is like `define-predicate` but allows for backwards compatible prefab predicate declarations.")
          (implies . ())
          (last-checked . 1557339729)
          (last-edit . 1527017470)
          (last-updated . 1527022321)
          (modules . ((lib "prefab-predicate-compat/main.rkt")))
          (name . "prefab-predicate-compat")
          (nix-sha256
           .
           "0a4h2ic705cixckgy2qy48iypkhmksjhzfr1547fh9fw4wlrh0yc")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-fail: . #t)
                   (author:pnwamk@gmail.com . #t)
                   (prefab . #t)
                   (ring:2 . #t)
                   (typed-racket . #t)))
          (source . "https://github.com/pnwamk/prefab-predicate-compat.git")
          (tags . ("prefab" "typed-racket"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "7c6cc40738062f336839b1f63e9b9ceb2a80071a")
                          (source
                           .
                           "https://github.com/pnwamk/prefab-predicate-compat.git")
                          (source_url
                           .
                           "https://github.com/pnwamk/prefab-predicate-compat.git")))))))
 ("prefetch-autocomplete"
  .
  #hasheq((author . "yj_qww6@126.com")
          (authors . ("yj_qww6@126.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log
                  .
                  "server/built/install/prefetch-autocomplete.txt")
                 (test-failure-log
                  .
                  "server/built/test-fail/prefetch-autocomplete.txt")
                 (test-success-log . #f)))
          (checksum . "1a25f1a64cab3c9d1e300b9a0547e2b4201fcc70")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base" "drracket" "drracket-plugin-lib" "gui-lib" "scribble-lib"))
          (dependency-names
           .
           ("base" "drracket" "drracket-plugin-lib" "gui-lib" "scribble-lib"))
          (description . "prefetch the autocompletion symbols in DrRacket")
          (implies . ())
          (last-checked . 1557339729)
          (last-edit . 1532791954)
          (last-updated . 1551441975)
          (modules . ((lib "prefetch-autocomplete/tool.rkt")))
          (name . "prefetch-autocomplete")
          (nix-sha256
           .
           "1hhw007bpgbwd4yh46zm0nybrcc9d1a7nchmcld74m67kh3468jd")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (DrRacket . #t)
                   (author:yj_qww6@126.com . #t)
                   (ring:2 . #t)))
          (source . "https://github.com/yjqww6/prefetch-autocomplete.git")
          (tags . ("DrRacket"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "1a25f1a64cab3c9d1e300b9a0547e2b4201fcc70")
                          (source
                           .
                           "https://github.com/yjqww6/prefetch-autocomplete.git")
                          (source_url
                           .
                           "https://github.com/yjqww6/prefetch-autocomplete.git")))))))
 ("preprocessor"
  .
  #hash((author . "eli@racket-lang.org")
        (checksum . "74fbded09a09783f84f26959fa485a3102f7fe35")
        (dependencies
         .
         ("scheme-lib"
          "base"
          "compatibility-lib"
          "racket-doc"
          "scribble-lib"))
        (dependency-names
         .
         ("scheme-lib"
          "base"
          "compatibility-lib"
          "racket-doc"
          "scribble-lib"))
        (description . "eli@racket-lang.org")
        (modules . ())
        (name . "preprocessor")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/preprocessor.zip")
        (tags . ())))
 ("pretty-format"
  .
  #hasheq((author . "alexander@knauth.org")
          (authors . ("alexander@knauth.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "pretty-format"
                    "doc/pretty-format@pretty-format/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/pretty-format.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/pretty-format.txt")))
          (checksum . "3fcf237968f2134fce208d02689ac3f56c7514a1")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           (("base" #:version "6.0.0.4")
            "typed-racket-lib"
            "rackunit-lib"
            "scribble-lib"
            "racket-doc"))
          (dependency-names
           .
           ("base"
            "typed-racket-lib"
            "rackunit-lib"
            "scribble-lib"
            "racket-doc"))
          (description
           .
           "Pretty versions of printf, format, etc. that print according to format strings")
          (implies . ())
          (last-checked . 1557339729)
          (last-edit . 1519447631)
          (last-updated . 1527216546)
          (modules
           .
           ((lib "typed/pretty-format.rkt")
            (lib "pretty-format/main.rkt")
            (lib "pretty-format/scribblings/pretty-format.scrbl")))
          (name . "pretty-format")
          (nix-sha256
           .
           "143zh0q4asmm26sr7vdkk4flpfp81ac4p9xymn7iwl3kh0mp4kds")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:alexander@knauth.org . #t)
                   (io . #t)
                   (printing . #t)
                   (ring:2 . #t)))
          (source . "https://github.com/AlexKnauth/pretty-format.git")
          (tags . ("io" "printing"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "3fcf237968f2134fce208d02689ac3f56c7514a1")
                          (source
                           .
                           "https://github.com/AlexKnauth/pretty-format.git")
                          (source_url
                           .
                           "https://github.com/AlexKnauth/pretty-format.git")))))))
 ("pretty-graphs"
  .
  #hasheq((author . "vincentnys@gmail.com")
          (authors . ("vincentnys@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "pretty-graphs"
                    "doc/pretty-graphs@pretty-graphs/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/pretty-graphs.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/pretty-graphs.txt")))
          (checksum . "a525fdc779e745b222b9e3d495c9f525290fd4cc")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "at-exp-lib"
            "graph"
            "pict-doc"
            "pict-lib"
            "scribble-lib"
            "racket-doc"))
          (dependency-names
           .
           ("base"
            "at-exp-lib"
            "graph"
            "pict-doc"
            "pict-lib"
            "scribble-lib"
            "racket-doc"))
          (description . "For visualizing generic graphs as picts.")
          (implies . ())
          (last-checked . 1557339729)
          (last-edit . 1506329324)
          (last-updated . 1512580073)
          (modules
           .
           ((lib "pretty-graphs/scribblings/pretty-graphs.scrbl")
            (lib "pretty-graphs/main.rkt")))
          (name . "pretty-graphs")
          (nix-sha256
           .
           "1sh9jbi5bl8jhdx0fd28s31m080rlgj7v39ga488nc06dink0zxx")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:vincentnys@gmail.com . #t)
                   (graph . #t)
                   (pict . #t)
                   (ring:1 . #t)
                   (visualization . #t)))
          (source . "git://github.com/v-nys/pretty-graphs")
          (tags . ("graph" "pict" "visualization"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "a525fdc779e745b222b9e3d495c9f525290fd4cc")
                          (source . "git://github.com/v-nys/pretty-graphs")
                          (source_url
                           .
                           "http://github.com/v-nys/pretty-graphs/tree/master")))))))
 ("print-debug"
  .
  #hasheq((author . "aldis.sarja@gmail.com")
          (authors . ("aldis.sarja@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . "server/built/deps/print-debug.txt")
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/print-debug.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/print-debug.txt")))
          (checksum . "ba8171f9be0950fe75ad93fa7923f3ac23501e70")
          (checksum-error . #f)
          (conflicts . ())
          (date-added . 1552409005)
          (dependencies . ())
          (dependency-names . ())
          (description
           .
           "Debugging tool. Use for debug printing variables and expresions.")
          (implies . ())
          (last-checked . 1557339730)
          (last-edit . 1552478773)
          (last-updated . 1552479211)
          (modules . ((lib "print-debug/print-dbg.rkt")))
          (name . "print-debug")
          (nix-sha256
           .
           "1ak5l4biga3d1yc2q3nsd5mq8h5kykx7sc8zv9vsn082mbclv8kr")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-dep-fail: . #t)
                   (:build-success: . #t)
                   (author:aldis.sarja@gmail.com . #t)
                   (debug . #t)
                   (debugging . #t)
                   (ring:2 . #t)))
          (source . "https://github.com/aldis-sarja/print-debug.git")
          (tags . ("debug" "debugging"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "ba8171f9be0950fe75ad93fa7923f3ac23501e70")
                          (source
                           .
                           "https://github.com/aldis-sarja/print-debug.git")
                          (source_url
                           .
                           "https://github.com/aldis-sarja/print-debug.git")))))))
 ("profile"
  .
  #hash((author . "eli@racket-lang.org")
        (checksum . "2439446b2cde4e37d9bd3c9ea84dd92451e770df")
        (dependencies . ("profile-lib" "profile-doc"))
        (dependency-names . ("profile-lib" "profile-doc"))
        (description . "eli@racket-lang.org")
        (modules . ())
        (name . "profile")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/profile.zip")
        (tags . ())))
 ("profile-doc"
  .
  #hash((author . "eli@racket-lang.org")
        (checksum . "7be74567cb2fdab87713902b4ceb0708ff8433a7")
        (dependencies
         .
         ("base"
          "scribble-lib"
          "profile-lib"
          "errortrace-doc"
          "errortrace-lib"
          "racket-doc"))
        (dependency-names
         .
         ("base"
          "scribble-lib"
          "profile-lib"
          "errortrace-doc"
          "errortrace-lib"
          "racket-doc"))
        (description . "eli@racket-lang.org")
        (modules . ())
        (name . "profile-doc")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/profile-doc.zip")
        (tags . ())))
 ("profile-flame-graph"
  .
  #hasheq((author . "asumu@ccs.neu.edu")
          (authors . ("asumu@ccs.neu.edu"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "profile-flame-graph"
                    "doc/profile-flame-graph@profile-flame-graph/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log
                  .
                  "server/built/install/profile-flame-graph.txt")
                 (test-failure-log
                  .
                  "server/built/test-fail/profile-flame-graph.txt")
                 (test-success-log . #f)))
          (checksum . "1364a084256765800e83d93b0db23b2cc801d161")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "pict"
            "profile-lib"
            "net-lib"
            "data-lib"
            "scribble-lib"
            "racket-doc"
            "profile-doc"
            "net-doc"))
          (dependency-names
           .
           ("base"
            "pict"
            "profile-lib"
            "net-lib"
            "data-lib"
            "scribble-lib"
            "racket-doc"
            "profile-doc"
            "net-doc"))
          (description
           .
           "Library that connects the Racket profiler to the flamegraph tool")
          (implies . ())
          (last-checked . 1557339730)
          (last-edit . 1477803994)
          (last-updated . 1512155278)
          (modules
           .
           ((lib "profile-flame-graph/flame-graph.rkt")
            (lib "profile-flame-graph/profile.rkt")
            (lib "profile-flame-graph/main.rkt")
            (lib "profile-flame-graph/profile-flame-graph.scrbl")
            (lib "profile-flame-graph/examples/fizzbuzz-example.rkt")
            (lib "profile-flame-graph/examples/scribble-example.rkt")))
          (name . "profile-flame-graph")
          (nix-sha256
           .
           "1szkj9z17kdm2fsqb17wj4blnkay0wfsxc2wd17fmvq0bypfylrk")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:asumu@ccs.neu.edu . #t)
                   (profiling . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/takikawa/racket-profile-flamegraph")
          (tags . ("profiling"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "1364a084256765800e83d93b0db23b2cc801d161")
                          (source
                           .
                           "git://github.com/takikawa/racket-profile-flamegraph")
                          (source_url
                           .
                           "http://github.com/takikawa/racket-profile-flamegraph/tree/master")))))))
 ("profile-lib"
  .
  #hash((author . "eli@racket-lang.org stamourv@racket-lang.org")
        (checksum . "1ac80e8887779156a26404d09d1994a50fca5c2e")
        (dependencies . ("base" "errortrace-lib" "at-exp-lib" "rackunit-lib"))
        (dependency-names
         .
         ("base" "errortrace-lib" "at-exp-lib" "rackunit-lib"))
        (description . "eli@racket-lang.org stamourv@racket-lang.org")
        (modules . ())
        (name . "profile-lib")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/profile-lib.zip")
        (tags . ())))
 ("profile-test"
  .
  #hash((author . "eli@racket-lang.org")
        (checksum . "3651730dd20294f635d318ec1f7723c3f1ba902f")
        (dependencies . ("base" "eli-tester" "profile-lib"))
        (dependency-names . ("base" "eli-tester" "profile-lib"))
        (description . "eli@racket-lang.org")
        (modules . ())
        (name . "profile-test")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/profile-test.zip")
        (tags . ())))
 ("profj"
  .
  #hasheq((author . "mflatt@cs.utah.edu")
          (authors . ("mflatt@cs.utah.edu"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "profj" "doc/profj@profj/index.html")
                   ("main" "htdc" "doc/htdc@profj/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/profj.txt")
                 (test-failure-log . "server/built/test-fail/profj.txt")
                 (test-success-log . #f)))
          (checksum . "aa20a056d7834a1e821f6c63277ee03724af9b15")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("combinator-parser"
            "base"
            "compatibility-lib"
            "drracket-plugin-lib"
            "errortrace-lib"
            "gui-lib"
            "htdp-lib"
            "parser-tools-lib"
            "scheme-lib"
            "srfi-lite-lib"
            "string-constants-lib"
            "scribble-lib"
            "racket-doc"))
          (dependency-names
           .
           ("combinator-parser"
            "base"
            "compatibility-lib"
            "drracket-plugin-lib"
            "errortrace-lib"
            "gui-lib"
            "htdp-lib"
            "parser-tools-lib"
            "scheme-lib"
            "srfi-lite-lib"
            "string-constants-lib"
            "scribble-lib"
            "racket-doc"))
          (description . "ProfessorJ")
          (implies . ())
          (last-checked . 1557339730)
          (last-edit . 1368288397)
          (last-updated . 1502816330)
          (modules
           .
           ((lib "profj/intermediate+access.rkt")
            (lib "profj/scribblings/intermediate.scrbl")
            (lib "profj/check.rkt")
            (lib "profj/parsers/parse-error.rkt")
            (lib "profj/intermediate.rkt")
            (lib "profj/htdch/draw/pre-installer.rkt")
            (lib "profj/libs/java/lang/array.rkt")
            (lib "profj/restrictions.rkt")
            (lib "profj/textbook-pls-spec.rkt")
            (lib "profj/libs/java/lang/NullPointerException.rkt")
            (lib "profj/tool.rkt")
            (lib "profj/language.rkt")
            (lib "profj/libs/java/lang/Double-native-methods.rkt")
            (lib "profj/compile.rkt")
            (lib "profj/parsers/advanced-parser.rkt")
            (lib "profj/htdch/geometry/installer.rkt")
            (lib "profj/htdch/idraw/installer.rkt")
            (lib "profj/parser.rkt")
            (lib "profj/libs/java/util/installer.rkt")
            (lib "profj/libs/java/io/installer.rkt")
            (lib "profj/htdch/draw/World-native-methods.rkt")
            (lib "profj/installer.rkt")
            (lib "profj/libs/java/lang/Math-native-methods.rkt")
            (lib "profj/full.rkt")
            (lib "profj/libs/java/lang/installer.rkt")
            (lib "profj/libs/java/lang/ClassCastException.rkt")
            (lib "profj/libs/java/lang/mz.rkt")
            (lib "profj/advanced.rkt")
            (lib "profj/parsers/beginner-parser.rkt")
            (lib "profj/libs/java/lang/String.rkt")
            (lib "profj/parsers/intermediate-access-parser.rkt")
            (lib "profj/libs/java/lang/ArrayStoreException.rkt")
            (lib "profj/scribblings/intermediate-access.scrbl")
            (lib "profj/htdch/draw/installer.rkt")
            (lib "profj/to-scheme.rkt")
            (lib "profj/htdch/colors/installer.rkt")
            (lib "profj/htdch/idraw/Canvas-native-methods.rkt")
            (lib "profj/profj-pref.rkt")
            (lib "profj/graph-scc.rkt")
            (lib "profj/parsers/lexer.rkt")
            (lib "profj/htdch/idraw/pre-installer.rkt")
            (lib "profj/parameters.rkt")
            (lib "profj/htdch/Examples/blink-java.rkt")
            (lib "profj/pre-installer.rkt")
            (lib "profj/htdch/draw/Canvas-native-methods.rkt")
            (lib "profj/beginner.rkt")
            (lib "profj/types.rkt")
            (lib "profj/libs/java/runtime.rkt")
            (lib "profj/libs/java/lang/Object.rkt")
            (lib "profj/parsers/full-parser.rkt")
            (lib "profj/libs/java/lang/compile-lang.rkt")
            (lib "profj/error-messaging.rkt")
            (lib "profj/libs/java/lang/Comparable.rkt")
            (lib "profj/scribblings/advanced.scrbl")
            (lib "profj/tests/beginner-tests.rkt")
            (lib "profj/scribblings/profj.scrbl")
            (lib "profj/libs/java/lang/ArrayIndexOutOfBoundsException.rkt")
            (lib "profj/htdch/graphics/rename.rkt")
            (lib "profj/libs/java/lang/NegativeArraySizeException.rkt")
            (lib "profj/htdch/Examples/iblink-java.rkt")
            (lib "profj/htdch/graphics/installer.rkt")
            (lib "profj/build-info.rkt")
            (lib "profj/libs/java/lang/Exception.rkt")
            (lib "profj/analysis.rkt")
            (lib "profj/libs/java/lang/Throwable.rkt")
            (lib "profj/ast.rkt")
            (lib "profj/scribblings/htdc.scrbl")
            (lib "profj/libs/java/lang/ArithmeticException.rkt")
            (lib "profj/tests/profj-testing.rkt")
            (lib "profj/display-java.rkt")
            (lib "profj/parsers/general-parsing.rkt")
            (lib "profj/tests/all-tests.rkt")
            (lib "profj/libs/java/lang/Object-composite.rkt")
            (lib "profj/libs/java/tester/installer.rkt")
            (lib "profj/libs/java/lang/System-native-methods.rkt")
            (lib "profj/libs/java/lang/RuntimeException.rkt")
            (lib "profj/libs/java/io/Serializable.rkt")
            (lib "profj/libs/java/lang/compile-lang-syntax.rkt")
            (lib "profj/libs/java/lang/IndexOutOfBoundsException.rkt")
            (lib "profj/tests/full-tests.rkt")
            (lib "profj/scribblings/java-scribble.rkt")
            (lib "profj/tests/intermediate-tests.rkt")
            (lib "profj/tests/advanced-tests.rkt")
            (lib "profj/scribblings/beginner.scrbl")
            (lib "profj/parsers/intermediate-parser.rkt")
            (lib "profj/htdch/idraw/World-native-methods.rkt")
            (lib "profj/dynamic.rkt")))
          (name . "profj")
          (nix-sha256
           .
           "0mq34fn1hxc38lrp36jbgx08c21gcvk1v8cgxapy4xhccigwcs6g")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:mflatt@cs.utah.edu . #t)
                   (language . #t)
                   (ring:1 . #t)))
          (source . "github://github.com/mflatt/profj/master")
          (tags . ("language"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "aa20a056d7834a1e821f6c63277ee03724af9b15")
                          (source . "github://github.com/mflatt/profj/master")
                          (source_url
                           .
                           "http://github.com/mflatt/profj/tree/master")))))))
 ("progedit"
  .
  #hasheq((author . "neil@neilvandyke.org")
          (authors . ("neil@neilvandyke.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "progedit" "doc/progedit@progedit/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/progedit.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/progedit.txt")))
          (checksum . "28f6ce349a1173812a3efd1c95edb569c46e43f7")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base" "mcfly" "racket-doc" "scribble-lib" "overeasy"))
          (dependency-names
           .
           ("base" "mcfly" "racket-doc" "scribble-lib" "overeasy"))
          (description . "Programmatic File Editing")
          (implies . ())
          (last-checked . 1557339730)
          (last-edit . 1456463405)
          (last-updated . 1502816331)
          (modules
           .
           ((lib "progedit/main.rkt") (lib "progedit/progedit.scrbl")))
          (name . "progedit")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:neil@neilvandyke.org . #t)
                   (editor . #t)
                   (ring:1 . #t)))
          (source . "http://www.neilvandyke.org/racket/progedit.zip")
          (tags . ("editor"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "28f6ce349a1173812a3efd1c95edb569c46e43f7")
                          (source
                           .
                           "http://www.neilvandyke.org/racket/progedit.zip")
                          (source_url
                           .
                           "http://www.neilvandyke.org/racket/progedit.zip")))))))
 ("protobj"
  .
  #hasheq((author . "neil@neilvandyke.org")
          (authors . ("neil@neilvandyke.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "protobj" "doc/protobj@protobj/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/protobj.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/protobj.txt")))
          (checksum . "4e2755403b30e7746fa4ffe4688ba37c11bd2eb5")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "mcfly"
            "compatibility-lib"
            "srfi-lib"
            "overeasy"
            "racket-doc"
            "scribble-lib"))
          (dependency-names
           .
           ("base"
            "mcfly"
            "compatibility-lib"
            "srfi-lib"
            "overeasy"
            "racket-doc"
            "scribble-lib"))
          (description . "Prototype-Delegation Object Model")
          (implies . ())
          (last-checked . 1557339731)
          (last-edit . 1456786908)
          (last-updated . 1502816331)
          (modules . ((lib "protobj/main.rkt") (lib "protobj/protobj.scrbl")))
          (name . "protobj")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (:no-tag: . #t)
                   (author:neil@neilvandyke.org . #t)
                   (ring:1 . #t)))
          (source . "http://www.neilvandyke.org/racket/protobj.zip")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "4e2755403b30e7746fa4ffe4688ba37c11bd2eb5")
                          (source
                           .
                           "http://www.neilvandyke.org/racket/protobj.zip")
                          (source_url
                           .
                           "http://www.neilvandyke.org/racket/protobj.zip")))))))
 ("protobuf"
  .
  #hasheq((author . "chust@web.de")
          (authors . ("chust@web.de"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "main" "doc/main@protobuf/index.html")
                   ("main" "generator" "doc/generator@protobuf/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/protobuf.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/protobuf.txt")))
          (checksum . "692c4439046fb158e9a8cecd9e4f5b07709c425e")
          (checksum-error . #f)
          (conflicts . ())
          (date-added . 1556568038)
          (dependencies
           .
           ("base" "srfi-lib" "srfi-lite-lib" "racket-doc" "scribble-lib"))
          (dependency-names
           .
           ("base" "srfi-lib" "srfi-lite-lib" "racket-doc" "scribble-lib"))
          (description
           .
           "Protocol Buffer serialization library and ProtoC code generator plugin")
          (implies . ())
          (last-checked . 1557339732)
          (last-edit . 1556568038)
          (last-updated . 1556568038)
          (modules
           .
           ((lib "protobuf/scribblings/license.scrbl")
            (lib "protobuf/scribblings/reflection.scrbl")
            (lib "protobuf/google/protobuf/descriptor.rkt")
            (lib "protobuf/extend/protobuf/bigint.rkt")
            (lib "protobuf/scribblings/main.scrbl")
            (lib "protobuf/scribblings/generator.scrbl")
            (lib "protobuf/scribblings/encoding.scrbl")
            (lib "protobuf/encoding.rkt")
            (lib "protobuf/generator.rkt")
            (lib "protobuf/syntax.rkt")
            (lib "protobuf/google/protobuf/compiler/plugin.rkt")
            (lib "protobuf/reflection.rkt")
            (lib "protobuf/main.rkt")
            (lib "protobuf/scribblings/syntax.scrbl")))
          (name . "protobuf")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:chust@web.de . #t)
                   (io . #t)
                   (net . #t)
                   (ring:2 . #t)))
          (source
           .
           "https://bitbucket.org/chust/racket-protobuf/downloads/protobuf-1.1.3.zip")
          (tags . ("io" "net"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "692c4439046fb158e9a8cecd9e4f5b07709c425e")
                          (source
                           .
                           "https://bitbucket.org/chust/racket-protobuf/downloads/protobuf-1.1.3.zip")
                          (source_url
                           .
                           "https://bitbucket.org/chust/racket-protobuf/downloads/protobuf-1.1.3.zip")))
                 ("1.1.1"
                  .
                  #hasheq((checksum
                           .
                           "32f430f42e10fa6dc6484ca92312040bb23ecc61")
                          (source
                           .
                           "https://bitbucket.org/chust/racket-protobuf/downloads/protobuf-1.1.1.zip")
                          (source_url
                           .
                           "https://bitbucket.org/chust/racket-protobuf/downloads/protobuf-1.1.1.zip")))
                 ("1.1.2"
                  .
                  #hasheq((checksum
                           .
                           "76645c942dcb2230f6c49f3331551e0f20fa766e")
                          (source
                           .
                           "https://bitbucket.org/chust/racket-protobuf/downloads/protobuf-1.1.2.zip")
                          (source_url
                           .
                           "https://bitbucket.org/chust/racket-protobuf/downloads/protobuf-1.1.2.zip")))
                 ("1.1.3"
                  .
                  #hasheq((checksum
                           .
                           "692c4439046fb158e9a8cecd9e4f5b07709c425e")
                          (source
                           .
                           "https://bitbucket.org/chust/racket-protobuf/downloads/protobuf-1.1.3.zip")
                          (source_url
                           .
                           "https://bitbucket.org/chust/racket-protobuf/downloads/protobuf-1.1.3.zip")))))))
 ("psd"
  .
  #hasheq((author . "juzhenliang@gmail.com")
          (authors . ("juzhenliang@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "psd" "doc/psd@psd/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/psd.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/psd.txt")))
          (checksum . "73b16a52e0777250d02e977f7dcbd7c1d98ef772")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "typed-racket-lib"
            "typed-racket-more"
            "draw-lib"
            "scribble-lib"
            "racket-doc"))
          (dependency-names
           .
           ("base"
            "typed-racket-lib"
            "typed-racket-more"
            "draw-lib"
            "scribble-lib"
            "racket-doc"))
          (description . "Read (and will write) Photoshop Documents")
          (implies . ())
          (last-checked . 1557339736)
          (last-edit . 1500119085)
          (last-updated . 1531745110)
          (modules
           .
           ((lib "psd/digitama/resources/id1036.rkt")
            (lib "psd/digitama/resources/id1023.rkt")
            (lib "psd/tamer/psd.rkt")
            (lib "psd/digitama/resources/id1028.rkt")
            (lib "psd/base.rkt")
            (lib "psd/layer.rkt")
            (lib "psd/digitama/layer/blocks/txt2.rkt")
            (lib "psd/digitama/resources/format.rkt")
            (lib "psd/digitama/resources/id1002.rkt")
            (lib "psd/profile.rkt")
            (lib "psd/digitama/layer/bitmap.rkt")
            (lib "psd/tamer/psd.scrbl")
            (lib "psd/digitama/resources/id1060.rkt")
            (lib "psd/digitama/resources/id1011.rkt")
            (lib "psd/main.rkt")
            (lib "psd/digitama/resources/id1057.rkt")
            (lib "psd/digitama/resources/id1003.rkt")
            (lib "psd/digitama/layer/blocks/lyid.rkt")
            (lib "psd/digitama/resource.rkt")
            (lib "psd/tamer/packbits.rkt")
            (lib "psd/digitama/resources/id1007.rkt")
            (lib "psd/digitama/stdin.rkt")
            (lib "psd/village/packbits.rkt")
            (lib "psd/digitama/draw.rkt")
            (lib "psd/digitama/exn.rkt")
            (lib "psd/digitama/parser.rkt")
            (lib "psd/digitama/unsafe/bitmap.rkt")
            (lib "psd/digitama/layer/parser.rkt")
            (lib "psd/digitama/unsafe/resource.rkt")
            (lib "psd/digitama/image.rkt")
            (lib "psd/digitama/psd.rkt")
            (lib "psd/digitama/resources/id1032.rkt")
            (lib "psd/digitama/resources/id1027.rkt")
            (lib "psd/digitama/layer/blocks/luni.rkt")
            (lib "psd/digitama/unsafe/layer.rkt")
            (lib "psd/digitama/misc.rkt")
            (lib "psd/digitama/bitmap.rkt")
            (lib "psd/digitama/resources/id1077.rkt")
            (lib "psd/digitama/layer.rkt")
            (lib "psd/digitama/resources/id1020.rkt")
            (lib "psd/digitama/layer/format.rkt")
            (lib "psd/digitama/integer.rkt")
            (lib "psd/digitama/resources/id1000.rkt")
            (lib "psd/digitama/layer/blocks/lsct.rkt")))
          (name . "psd")
          (nix-sha256
           .
           "0x6ks3iar7ph0n3zjcj9h0ryj6w706dmm5lqjzjhm0hbx66y41sk")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:juzhenliang@gmail.com . #t)
                   (bitmap . #t)
                   (file . #t)
                   (parser . #t)
                   (photoshop . #t)
                   (ring:1 . #t)
                   (typed-racket . #t)
                   (unstable . #t)))
          (source . "git://github.com/wargrey/psd")
          (tags
           .
           ("bitmap" "file" "parser" "photoshop" "typed-racket" "unstable"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "73b16a52e0777250d02e977f7dcbd7c1d98ef772")
                          (source . "git://github.com/wargrey/psd")
                          (source_url
                           .
                           "http://github.com/wargrey/psd/tree/master")))))))
 ("punctaffy"
  .
  #hasheq((author . "rokitna@hotmail.com")
          (authors . ("rokitna@hotmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/punctaffy.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/punctaffy.txt")))
          (checksum . "551191e2edec873b3c37fd22b2207ab1bdccac1b")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("punctaffy-lib"))
          (dependency-names . ("punctaffy-lib"))
          (description
           .
           "A library for manipulating higher-degree notions of brackets, such as quasiquotation syntax.")
          (implies . ("punctaffy-lib"))
          (last-checked . 1557339736)
          (last-edit . 1537186647)
          (last-updated . 1551888595)
          (modules . ())
          (name . "punctaffy")
          (nix-sha256
           .
           "1636y7c30j5slb419vzh9711szns99nx3x0s8b1mi91kx9m5j67k")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:rokitna@hotmail.com . #t)
                   (experimental . #t)
                   (extensible . #t)
                   (lathe . #t)
                   (macro . #t)
                   (quasiquotation . #t)
                   (ring:2 . #t)
                   (syntax . #t)
                   (unstable . #t)))
          (source
           .
           "https://github.com/lathe/punctaffy-for-racket.git?path=punctaffy")
          (tags
           .
           ("experimental"
            "extensible"
            "lathe"
            "macro"
            "quasiquotation"
            "syntax"
            "unstable"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "551191e2edec873b3c37fd22b2207ab1bdccac1b")
                          (source
                           .
                           "https://github.com/lathe/punctaffy-for-racket.git?path=punctaffy")
                          (source_url
                           .
                           "https://github.com/lathe/punctaffy-for-racket.git?path=punctaffy")))))))
 ("punctaffy-lib"
  .
  #hasheq((author . "rokitna@hotmail.com")
          (authors . ("rokitna@hotmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/punctaffy-lib.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/punctaffy-lib.txt")))
          (checksum . "551191e2edec873b3c37fd22b2207ab1bdccac1b")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "lathe-comforts-lib" "parendown-lib"))
          (dependency-names . ("base" "lathe-comforts-lib" "parendown-lib"))
          (description
           .
           "A library for manipulating higher-degree notions of brackets, such as quasiquotation syntax. (lib)")
          (implies . ())
          (last-checked . 1557339736)
          (last-edit . 1537186665)
          (last-updated . 1551888595)
          (modules
           .
           ((lib "punctaffy/private/hypertee-unsafe.rkt")
            (lib "punctaffy/private/experimental/macro/hypernest-bracket.rkt")
            (lib "punctaffy/hypersnippet/snippet.rkt")
            (lib "punctaffy/private/experimental/macro/hypernest-macro.rkt")
            (lib "punctaffy/private/suppress-internal-errors.rkt")
            (lib "punctaffy/main.rkt")
            (lib "punctaffy/private/experimental/hypertee-hypermonad.rkt")
            (lib "punctaffy/private/experimental/hyprid.rkt")
            (lib "punctaffy/hypersnippet/hyperstack.rkt")
            (lib "punctaffy/hypersnippet/hypertee.rkt")
            (lib "punctaffy/private/experimental/hypermonad.rkt")
            (lib "punctaffy/hypersnippet/hypernest.rkt")
            (lib "punctaffy/private/hypernest-as-ast.rkt")
            (lib "punctaffy/private/experimental/monad.rkt")
            (lib "punctaffy/hypersnippet/dim.rkt")
            (lib "punctaffy/private/experimental/macro/hypernest-qq.rkt")
            (lib "punctaffy/private/hypertee-as-brackets.rkt")
            (lib "punctaffy/private/experimental/monoid.rkt")
            (lib "punctaffy/hypersnippet/hyperparameter.rkt")))
          (name . "punctaffy-lib")
          (nix-sha256
           .
           "1636y7c30j5slb419vzh9711szns99nx3x0s8b1mi91kx9m5j67k")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:rokitna@hotmail.com . #t)
                   (experimental . #t)
                   (extensible . #t)
                   (lathe . #t)
                   (macro . #t)
                   (quasiquotation . #t)
                   (ring:2 . #t)
                   (syntax . #t)
                   (unstable . #t)))
          (source
           .
           "https://github.com/lathe/punctaffy-for-racket.git?path=punctaffy-lib")
          (tags
           .
           ("experimental"
            "extensible"
            "lathe"
            "macro"
            "quasiquotation"
            "syntax"
            "unstable"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "551191e2edec873b3c37fd22b2207ab1bdccac1b")
                          (source
                           .
                           "https://github.com/lathe/punctaffy-for-racket.git?path=punctaffy-lib")
                          (source_url
                           .
                           "https://github.com/lathe/punctaffy-for-racket.git?path=punctaffy-lib")))))))
 ("punctaffy-test"
  .
  #hasheq((author . "rokitna@hotmail.com")
          (authors . ("rokitna@hotmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/punctaffy-test.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/punctaffy-test.txt")))
          (checksum . "551191e2edec873b3c37fd22b2207ab1bdccac1b")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "lathe-comforts-lib"
            "parendown"
            "profile-lib"
            "punctaffy-lib"
            "rackunit-lib"))
          (dependency-names
           .
           ("base"
            "lathe-comforts-lib"
            "parendown"
            "profile-lib"
            "punctaffy-lib"
            "rackunit-lib"))
          (description
           .
           "A library for manipulating higher-degree notions of brackets, such as quasiquotation syntax. (test)")
          (implies . ())
          (last-checked . 1557339736)
          (last-edit . 1537186684)
          (last-updated . 1551888596)
          (modules
           .
           ((lib "punctaffy/tests/test-hypernest.rkt")
            (lib "punctaffy/tests/profile-hypernest-qq.rkt")
            (lib "punctaffy/tests/test-hypernest-qq.rkt")
            (lib "punctaffy/tests/test-hypertee.rkt")
            (lib "punctaffy/tests/experimental/test-hyprid.rkt")))
          (name . "punctaffy-test")
          (nix-sha256
           .
           "1636y7c30j5slb419vzh9711szns99nx3x0s8b1mi91kx9m5j67k")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:rokitna@hotmail.com . #t)
                   (experimental . #t)
                   (extensible . #t)
                   (lathe . #t)
                   (macro . #t)
                   (quasiquotation . #t)
                   (ring:2 . #t)
                   (syntax . #t)
                   (unstable . #t)))
          (source
           .
           "https://github.com/lathe/punctaffy-for-racket.git?path=punctaffy-test")
          (tags
           .
           ("experimental"
            "extensible"
            "lathe"
            "macro"
            "quasiquotation"
            "syntax"
            "unstable"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "551191e2edec873b3c37fd22b2207ab1bdccac1b")
                          (source
                           .
                           "https://github.com/lathe/punctaffy-for-racket.git?path=punctaffy-test")
                          (source_url
                           .
                           "https://github.com/lathe/punctaffy-for-racket.git?path=punctaffy-test")))))))
 ("puresuri"
  .
  #hasheq((author . "jay.mccarthy@gmail.com")
          (authors . ("jay.mccarthy@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "puresuri" "doc/puresuri@puresuri/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/puresuri.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/puresuri.txt")))
          (checksum . "9744e849989867e7e002507cd1dfe18ffdf5b5e3")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("lux"
            "base"
            "gui-lib"
            "pict-lib"
            "ppict"
            "unstable-lib"
            "ppict"
            "gui-doc"
            "pict-doc"
            "racket-doc"
            "slideshow-doc"
            "unstable-doc"
            "scribble-lib"))
          (dependency-names
           .
           ("lux"
            "base"
            "gui-lib"
            "pict-lib"
            "ppict"
            "unstable-lib"
            "ppict"
            "gui-doc"
            "pict-doc"
            "racket-doc"
            "slideshow-doc"
            "unstable-doc"
            "scribble-lib"))
          (description . "puresuri presentation system")
          (implies . ())
          (last-checked . 1557339736)
          (last-edit . 1401798151)
          (last-updated . 1502816339)
          (modules
           .
           ((lib "puresuri/puresuri.scrbl")
            (lib "puresuri/lib/slide-numbers.rkt")
            (lib "puresuri/private/state.rkt")
            (lib "puresuri/tests/example.rkt")
            (lib "puresuri/lib/grid.rkt")
            (lib "puresuri/lib/title.rkt")
            (lib "puresuri/main.rkt")
            (lib "puresuri/plpict.rkt")
            (lib "puresuri/gui.rkt")
            (lib "puresuri/private/param.rkt")
            (lib "puresuri/pict.rkt")
            (lib "puresuri/lib/cmds.rkt")
            (lib "puresuri/command.rkt")))
          (name . "puresuri")
          (nix-sha256
           .
           "03yhxpj3jjww2429hq0hrg2amj62asyqhlszfgm5nvbnj9vas5zj")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:jay.mccarthy@gmail.com . #t)
                   (ring:1 . #t)
                   (slideshow . #t)))
          (source . "github://github.com/jeapostrophe/puresuri/master")
          (tags . ("slideshow"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "9744e849989867e7e002507cd1dfe18ffdf5b5e3")
                          (source
                           .
                           "github://github.com/jeapostrophe/puresuri/master")
                          (source_url
                           .
                           "http://github.com/jeapostrophe/puresuri/tree/master")))))))
 ("puzzler"
  .
  #hasheq((author . "aowens5189@gmail.com")
          (authors . ("aowens5189@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . "server/built/fail/puzzler.txt")
                 (min-failure-log . #f)
                 (success-log . #f)
                 (test-failure-log . #f)
                 (test-success-log . #f)))
          (checksum . "01bdbde8ca8e5d84fb956aa3de617843361d8d29")
          (checksum-error . #f)
          (conflicts . ())
          (date-added . 1553537012)
          (dependencies . ())
          (dependency-names . ())
          (description
           .
           "A WIP language for building 2D grid-based puzzle games.")
          (implies . ())
          (last-checked . 1557339736)
          (last-edit . 1553712903)
          (last-updated . 1553551585)
          (modules
           .
           ((lib "puzzler/examples/free-the-chick.rkt")
            (lib "puzzler/examples/sokoban.rkt")
            (lib "puzzler/expander.rkt")
            (lib "puzzler/main.rkt")
            (lib "puzzler/expander-helpers/renderer.rkt")
            (lib "puzzler/tokenizer.rkt")
            (lib "puzzler/parser.rkt")
            (lib "puzzler/examples/trail-example.rkt")
            (lib "puzzler/examples/multi-level-sokoban.rkt")
            (lib "puzzler/parse-tree-test.rkt")
            (lib "puzzler/expander-helpers/game.rkt")
            (lib "puzzler/examples/sneaking-example.rkt")))
          (name . "puzzler")
          (nix-sha256
           .
           "00iibsbp81py3wccjs2ki1zzzsm2a1kbxbv71bkql9fln6js6aqa")
          (ring . 2)
          (search-terms
           .
           #hasheq((2d . #t)
                   (:build-fail: . #t)
                   (author:aowens5189@gmail.com . #t)
                   (game . #t)
                   (lang . #t)
                   (ring:2 . #t)))
          (source . "https://github.com/aowens-21/puzzler.git")
          (tags . ("2d" "game" "lang"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "01bdbde8ca8e5d84fb956aa3de617843361d8d29")
                          (source
                           .
                           "https://github.com/aowens-21/puzzler.git")
                          (source_url
                           .
                           "https://github.com/aowens-21/puzzler.git")))))))
 ("pvector"
  .
  #hasheq((author . "lexi.lambda@gmail.com")
          (authors . ("lexi.lambda@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "pvector" "doc/pvector@pvector/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/pvector.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/pvector.txt")))
          (checksum . "d0132809b4da6e48c3e3087dc35cda1c47565e5e")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base" "collections" "rackunit-lib" "racket-doc" "scribble-lib"))
          (dependency-names
           .
           ("base" "collections" "rackunit-lib" "racket-doc" "scribble-lib"))
          (description . "Fast, immutable, persistent vectors")
          (implies . ())
          (last-checked . 1557339736)
          (last-edit . 1449354873)
          (last-updated . 1526570495)
          (modules
           .
           ((lib "data/pvector/for.rkt")
            (lib "data/private/test/main.rkt")
            (lib "data/pvector/base.rkt")
            (lib "data/scribblings/pvector.scrbl")
            (lib "data/pvector.rkt")))
          (name . "pvector")
          (nix-sha256
           .
           "1aa82rlxp2srlmgvc8rm6njf2ccdaddj5445w76x5dw3ik42kcbk")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:lexi.lambda@gmail.com . #t)
                   (collections . #t)
                   (data . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/lexi-lambda/racket-pvector")
          (tags . ("collections" "data"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "d0132809b4da6e48c3e3087dc35cda1c47565e5e")
                          (source
                           .
                           "git://github.com/lexi-lambda/racket-pvector")
                          (source_url
                           .
                           "http://github.com/lexi-lambda/racket-pvector/tree/master")))))))
 ("py-fizz"
  .
  #hasheq((author . "stephen@thoughtstem.com")
          (authors . ("stephen@thoughtstem.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . "server/built/deps/py-fizz.txt")
                 (docs
                  .
                  (("main" "py-fizz" "doc/py-fizz@py-fizz/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/py-fizz.txt")
                 (test-failure-log . "server/built/test-fail/py-fizz.txt")
                 (test-success-log . #f)))
          (checksum . "46047397ab9bbac86ab15a3e6e952777f5754fdf")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("racket-to-python"))
          (dependency-names . ("racket-to-python"))
          (description
           .
           "Physics sandbox for racket.  Compiles to Python and uses the Pymunk physics engine.  High level tool for creating physics simulations and digital toys.   \r\n\r\nPygame and pymunk are dependencies.  (Python too, obviously)")
          (implies . ())
          (last-checked . 1557339736)
          (last-edit . 1527780523)
          (last-updated . 1529940832)
          (modules
           .
           ((lib "py-fizz/demos/on-click.rkt")
            (lib "py-fizz/compiler.rkt")
            (lib "py-fizz/demos/hello-world.rkt")
            (lib "py-fizz/demos/car-swap.rkt")
            (lib "py-fizz/demos/catapult.rkt")
            (lib "py-fizz/toys/toys.rkt")
            (lib "py-fizz/demos/cannon-shooter.rkt")
            (lib "py-fizz/demos/balloons-hit-fan.rkt")
            (lib "py-fizz/toys/Untitled.rkt")
            (lib "py-fizz/toys/lose-screen-generator.rkt")
            (lib "py-fizz/demos/builder-test.rkt")
            (lib "py-fizz/py-fizz.scrbl")
            (lib "py-fizz/demos/builder-test2.rkt")
            (lib "py-fizz/main.rkt")))
          (name . "py-fizz")
          (nix-sha256
           .
           "0v6l4c57ydbkpndsqz3lnd99412pwk11pnkj224lzyhvq1mfwj04")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-dep-fail: . #t)
                   (:build-success: . #t)
                   (:docs: . #t)
                   (author:stephen@thoughtstem.com . #t)
                   (physics . #t)
                   (ring:2 . #t)))
          (source . "https://github.com/thoughtstem/py-fizz.git")
          (tags . ("physics"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "46047397ab9bbac86ab15a3e6e952777f5754fdf")
                          (source
                           .
                           "https://github.com/thoughtstem/py-fizz.git")
                          (source_url
                           .
                           "https://github.com/thoughtstem/py-fizz.git")))))))
 ("python"
  .
  #hasheq((author . "pedropramos@tecnico.ulisboa.pt")
          (authors . ("pedropramos@tecnico.ulisboa.pt"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/python.txt")
                 (test-failure-log . "server/built/test-fail/python.txt")
                 (test-success-log . #f)))
          (checksum . "16edd14f3950fd5a01f8b0237e023536ef48d17b")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base" "parser-tools" "compatibility-lib" "srfi-lite-lib"))
          (dependency-names
           .
           ("base" "parser-tools" "compatibility-lib" "srfi-lite-lib"))
          (description
           .
           "An implementation of the Python programming language for Racket")
          (implies . ())
          (last-checked . 1557339736)
          (last-edit . 1440945925)
          (last-updated . 1502816339)
          (modules
           .
           ((lib "python/examples/datetime/datetime_racket.rkt")
            (lib "python/examples/eratosthenes/sieve.rkt")
            (lib "python/lang/python.rkt")
            (lib "python/engine/numbers.rkt")
            (lib "python/engine/iterators.rkt")
            (lib "python/engine/collections.rkt")
            (lib "python/ast-node-target.rkt")
            (lib "python/debug/lang/reader.rkt")
            (lib "python/examples/ackermann/ackermann.rkt")
            (lib "python/config.rkt")
            (lib "python/runtime.rkt")
            (lib "python/debug/lang/python.rkt")
            (lib "python/lang/lang-info.rkt")
            (lib "python/lang/runtime-config.rkt")
            (lib "python/lex+yacc.rkt")
            (lib "python/sandbox.rkt")
            (lib "python/engine/files.rkt")
            (lib "python/compile.rkt")
            (lib "python/engine/functions.rkt")
            (lib "python/cpy-importing.rkt")
            (lib "python/parse.rkt")
            (lib "python/ast-node-stmt.rkt")
            (lib "python/lang/reader.rkt")
            (lib "python/main.rkt")
            (lib "python/examples/fibonacci/fib.rkt")
            (lib "python/engine/racket_values.rkt")
            (lib "python/engine/modules.rkt")
            (lib "python/engine/singletons.rkt")
            (lib "python/runtime_FFI.rkt")
            (lib "python/libpython.rkt")
            (lib "python/ast-node.rkt")
            (lib "python/bindings-mixin.rkt")
            (lib "python/paths.rkt")
            (lib "python/examples/mandelbrot/mandelbrot.rkt")
            (lib "python/engine/descriptors.rkt")
            (lib "python/ast-node-expr.rkt")
            (lib "python/engine/strings.rkt")
            (lib "python/engine/bools.rkt")
            (lib "python/engine/engine.rkt")
            (lib "python/name-mangling.rkt")
            (lib "python/engine/exceptions.rkt")))
          (name . "python")
          (nix-sha256
           .
           "146wvp53liz3dgvkdn9gddqqp8fnb9arvwbbnbrqz6kkl5y4dqj1")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:pedropramos@tecnico.ulisboa.pt . #t)
                   (language . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/pedropramos/PyonR.git#master")
          (tags . ("language"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "16edd14f3950fd5a01f8b0237e023536ef48d17b")
                          (source
                           .
                           "git://github.com/pedropramos/PyonR.git#master")
                          (source_url
                           .
                           "http://github.com/pedropramos/PyonR.git/tree/master#master")))))))
 ("python-tokenizer"
  .
  #hasheq((author . "clements@racket-lang.org dyoo@hashcollision.org")
          (authors . ("clements@racket-lang.org" "dyoo@hashcollision.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "python-tokenizer"
                    "doc/python-tokenizer@python-tokenizer/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/python-tokenizer.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/python-tokenizer.txt")))
          (checksum . "beadda52525c78f4b3aa0c8adcf42bf5e1033c5a")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "rackunit-lib"
            "data-lib"
            "while-loop"
            "at-exp-lib"
            "parser-tools-doc"
            "racket-doc"
            "scribble-lib"))
          (dependency-names
           .
           ("base"
            "rackunit-lib"
            "data-lib"
            "while-loop"
            "at-exp-lib"
            "parser-tools-doc"
            "racket-doc"
            "scribble-lib"))
          (description . "A fairly direct translation of tokenize.py")
          (implies . ())
          (last-checked . 1557339736)
          (last-edit . 1399597456)
          (last-updated . 1502816340)
          (modules
           .
           ((lib "python-tokenizer/python-tokenizer.rkt")
            (lib "python-tokenizer/main.rkt")
            (lib "python-tokenizer/test-tokenize.rkt")
            (lib "python-tokenizer/test-more.rkt")
            (lib "python-tokenizer/python-tokenizer.scrbl")))
          (name . "python-tokenizer")
          (nix-sha256
           .
           "1qgddyrn1qg3w51200rg7jvghfjv4mh2w156s8d48p2qg0w19z7p")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:clements@racket-lang.org . #t)
                   (author:dyoo@hashcollision.org . #t)
                   (parser . #t)
                   (ring:1 . #t)))
          (source . "github://github.com/jbclements/python-tokenizer/master/")
          (tags . ("parser"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "beadda52525c78f4b3aa0c8adcf42bf5e1033c5a")
                          (source
                           .
                           "github://github.com/jbclements/python-tokenizer/master/")
                          (source_url
                           .
                           "http://github.com/jbclements/python-tokenizer/tree/master/")))))))
 ("qiniu-sdk"
  .
  #hasheq((author . "1227847322@qq.com")
          (authors . ("1227847322@qq.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/qiniu-sdk.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/qiniu-sdk.txt")))
          (checksum . "27ca32071cd03a1dc955ec396efa120f0d4b2759")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "web-server-lib"))
          (dependency-names . ("base" "web-server-lib"))
          (description . "A simple library for qiniu.com")
          (implies . ())
          (last-checked . 1557339736)
          (last-edit . 1532483533)
          (last-updated . 1532483506)
          (modules . ((lib "qiniu-sdk/main.rkt")))
          (name . "qiniu-sdk")
          (nix-sha256
           .
           "1v08l8lcfnycfsxqrn50ssij5cfi5hx197df49n68fibx30rvx13")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:1227847322@qq.com . #t)
                   (qiniu . #t)
                   (ring:2 . #t)))
          (source . "https://github.com/MatrixForChange/qiniu-sdk.git")
          (tags . ("qiniu"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "27ca32071cd03a1dc955ec396efa120f0d4b2759")
                          (source
                           .
                           "https://github.com/MatrixForChange/qiniu-sdk.git")
                          (source_url
                           .
                           "https://github.com/MatrixForChange/qiniu-sdk.git")))))))
 ("quad"
  .
  #hasheq((author . "mb@mbtype.com")
          (authors . ("mb@mbtype.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "quad" "doc/quad@quad/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/quad.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/quad.txt")))
          (checksum . "5b110e149ec5c90d58bdc70e7c077fcbdd9da862")
          (checksum-error . #f)
          (conflicts . ())
          (date-added . 1555965305)
          (dependencies
           .
           ("at-exp-lib"
            "base"
            "beautiful-racket-lib"
            "fontland"
            "hyphenate"
            "pitfall"
            "pollen"
            "rackunit-lib"
            "sugar"
            "txexpr"
            "markdown"
            "csp"
            "draw-lib"
            "draw-doc"
            "racket-doc"
            "scribble-lib"
            "debug"))
          (dependency-names
           .
           ("at-exp-lib"
            "base"
            "beautiful-racket-lib"
            "fontland"
            "hyphenate"
            "pitfall"
            "pollen"
            "rackunit-lib"
            "sugar"
            "txexpr"
            "markdown"
            "csp"
            "draw-lib"
            "draw-doc"
            "racket-doc"
            "scribble-lib"
            "debug"))
          (description . "Document processor (unstable)")
          (implies . ())
          (last-checked . 1557339736)
          (last-edit . 1556661191)
          (last-updated . 1557339736)
          (modules
           .
           ((lib "quad/param.rkt")
            (lib "qtest/kafka.rkt")
            (lib "quadwriter/lang-helper.rkt")
            (lib "qtest/hello.rkt")
            (lib "quad/atomize.rkt")
            (lib "quadwriter/tags.rkt")
            (lib "quadwriter/font.rkt")
            (lib "quadwriter/attrs.rkt")
            (lib "quad/main.rkt")
            (lib "qtest/sample-main.rkt")
            (lib "quadwriter/main.rkt")
            (lib "quad/qexpr.rkt")
            (lib "qtest/docs.rkt")
            (lib "quadwriter/markup.rkt")
            (lib "quadwriter/param.rkt")
            (lib "quadwriter/markdown.rkt")
            (lib "qtest/fark.rkt")
            (lib "quad/position.rkt")
            (lib "qtest/typewriter.rkt")
            (lib "quadwriter/core.rkt")
            (lib "qtest/tagdemo.rkt")
            (lib "quad/scribblings/quad.scrbl")
            (lib "quad/rebase.rkt")
            (lib "qtest/typewriter-test.rkt")
            (lib "quad/ocm.rkt")
            (lib "quad/quad.rkt")
            (lib "quad/wrap.rkt")
            (lib "qtest/hyphenate.rkt")))
          (name . "quad")
          (nix-sha256
           .
           "1nsamv8n91n12ibv76zv7kw82l8a3pgrmby7mf8hjbbkzsc7zq63")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:mb@mbtype.com . #t)
                   (ring:1 . #t)
                   (typesetting . #t)))
          (source . "https://github.com/mbutterick/quad.git")
          (tags . ("typesetting"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "5b110e149ec5c90d58bdc70e7c077fcbdd9da862")
                          (source . "https://github.com/mbutterick/quad.git")
                          (source_url
                           .
                           "https://github.com/mbutterick/quad.git")))))))
 ("quad-tree"
  .
  #hasheq((author . "matias@fortlogic.net")
          (authors . ("matias@fortlogic.net"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/quad-tree.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/quad-tree.txt")))
          (checksum . "2cdb598e6c79e8499e545abc078d6f9a572ca8b0")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base" "typed-racket-lib" "scribble-lib" "racket-doc"))
          (dependency-names
           .
           ("base" "typed-racket-lib" "scribble-lib" "racket-doc"))
          (description
           .
           "A fairly simple quad-tree implementation. Nothing terribly fancy. Currently rather unstable.")
          (implies . ())
          (last-checked . 1557339739)
          (last-edit . 1476256469)
          (last-updated . 1502816341)
          (modules
           .
           ((lib "quad-tree/shared.rkt")
            (lib "quad-tree/scribblings/quad-tree.scrbl")
            (lib "quad-tree/misc/dispatch-case.rkt")
            (lib "quad-tree/quad-fruit-tree.rkt")
            (lib "quad-tree/quad-tree.rkt")
            (lib "quad-tree/main.rkt")))
          (name . "quad-tree")
          (nix-sha256
           .
           "1j8227lk3my4v86pjlz3dakjqfrmad6b38nlw0saskb04vipc7kg")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:matias@fortlogic.net . #t)
                   (data . #t)
                   (geometry . #t)
                   (graphics . #t)
                   (ring:1 . #t)))
          (source
           .
           "https://github.com/dented42/racket-quad-tree.git/?path=quad-tree")
          (tags . ("data" "geometry" "graphics"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "2cdb598e6c79e8499e545abc078d6f9a572ca8b0")
                          (source
                           .
                           "https://github.com/dented42/racket-quad-tree.git/?path=quad-tree")
                          (source_url
                           .
                           "https://github.com/dented42/racket-quad-tree.git/?path=quad-tree")))))))
 ("quickcheck"
  .
  #hasheq((author . "ifigueroap@gmail.com sperber@deinprogramm.de")
          (authors . ("ifigueroap@gmail.com" "sperber@deinprogramm.de"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "quickcheck"
                    "doc/quickcheck@quickcheck/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/quickcheck.txt")
                 (test-failure-log . "server/built/test-fail/quickcheck.txt")
                 (test-success-log . #f)))
          (checksum . "b483f4f57be10abbd69a2c04d0b1375ab6f8eb68")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base" "rackunit" "doc-coverage" "scribble-lib" "racket-doc"))
          (dependency-names
           .
           ("base" "rackunit" "doc-coverage" "scribble-lib" "racket-doc"))
          (description . "Quickcheck Clone")
          (implies . ())
          (last-checked . 1557339739)
          (last-edit . 1394124887)
          (last-updated . 1527090558)
          (modules
           .
           ((lib "quickcheck/private/glue.rkt")
            (lib "quickcheck/private/random.rkt")
            (lib "quickcheck/private/text-input-output.rkt")
            (lib "quickcheck/private/result.rkt")
            (lib "quickcheck/private/arbitrary.rkt")
            (lib "quickcheck/scribblings/quickcheck.scrbl")
            (lib "quickcheck/private/property.rkt")
            (lib "rackunit/quickcheck.rkt")
            (lib "quickcheck/private/test/main.rkt")
            (lib "quickcheck/private/generator.rkt")
            (lib "quickcheck/generator.rkt")
            (lib "quickcheck/property.rkt")
            (lib "quickcheck/private/error.rkt")
            (lib "quickcheck/main.rkt")
            (lib "quickcheck/arbitrary.rkt")
            (lib "quickcheck/private/test/doc-coverage.rkt")
            (lib "quickcheck/testing.rkt")
            (lib "quickcheck/result.rkt")
            (lib "quickcheck/raco-quickcheck.rkt")))
          (name . "quickcheck")
          (nix-sha256
           .
           "0nzn7zpx82c1dlpb3pknhxzzjhal88dcakiyxgpiwprjim0iwhi1")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:ifigueroap@gmail.com . #t)
                   (author:sperber@deinprogramm.de . #t)
                   (ring:1 . #t)
                   (testing . #t)))
          (source . "github://github.com/ifigueroap/racket-quickcheck/master")
          (tags . ("testing"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "b483f4f57be10abbd69a2c04d0b1375ab6f8eb68")
                          (source
                           .
                           "github://github.com/ifigueroap/racket-quickcheck/master")
                          (source_url
                           .
                           "http://github.com/ifigueroap/racket-quickcheck/tree/master")))))))
 ("quickscript"
  .
  #hash((author . "laurent.orseau@gmail.com")
        (checksum . "ea7c3111a714a1ec9f57b569c50067d56a7459a2")
        (dependencies
         .
         ("base"
          "drracket-plugin-lib"
          "gui-lib"
          "net-lib"
          "scribble-lib"
          "at-exp-lib"
          "drracket"
          "gui-doc"
          "racket-doc"
          "draw-doc"
          "rackunit-lib"))
        (dependency-names
         .
         ("base"
          "drracket-plugin-lib"
          "gui-lib"
          "net-lib"
          "scribble-lib"
          "at-exp-lib"
          "drracket"
          "gui-doc"
          "racket-doc"
          "draw-doc"
          "rackunit-lib"))
        (description . "laurent.orseau@gmail.com")
        (modules . ())
        (name . "quickscript")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/quickscript.zip")
        (tags . ())))
 ("quickscript-extra"
  .
  #hasheq((author . "laurent.orseau@gmail.com")
          (authors . ("laurent.orseau@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/quickscript-extra.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/quickscript-extra.txt")))
          (checksum . "6db81898ff974aa9d2ca712e2e8dc7c952609535")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "quickscript"
            "at-exp-lib"
            "drracket"
            "gui-lib"
            "pict-lib"
            "racket-index"
            "scribble-lib"
            "srfi-lite-lib"
            "web-server-lib"
            "racket-doc"
            "rackunit-lib"))
          (dependency-names
           .
           ("base"
            "quickscript"
            "at-exp-lib"
            "drracket"
            "gui-lib"
            "pict-lib"
            "racket-index"
            "scribble-lib"
            "srfi-lite-lib"
            "web-server-lib"
            "racket-doc"
            "rackunit-lib"))
          (description
           .
           "Some scripts for Quickscript (must be installed first). See the README for installation.")
          (implies . ())
          (last-checked . 1557339739)
          (last-edit . 1518256815)
          (last-updated . 1543085449)
          (modules
           .
           ((lib "quickscript-extra/scripts/current-file-example.rkt")
            (lib "quickscript-extra/scripts/dynamic-abbrev.rkt")
            (lib "quickscript-extra/scripts/pasterack.rkt")
            (lib "quickscript-extra/scripts/sections.rkt")
            (lib "quickscript-extra/scripts/reorder-tabs.rkt")
            (lib "quickscript-extra/scripts/open-terminal.rkt")
            (lib "quickscript-extra/scribblings/quickscript-extra.scrbl")
            (lib "quickscript-extra/scripts/author-date.rkt")
            (lib "quickscript-extra/register.rkt")
            (lib "quickscript-extra/scripts/reverse-selection.rkt")
            (lib "quickscript-extra/scripts/open-collect-file.rkt")
            (lib "quickscript-extra/scripts/regexp-replace.rkt")
            (lib "quickscript-extra/scripts/open-dir.rkt")
            (lib "quickscript-extra/scripts/bookmarks.rkt")
            (lib "quickscript-extra/make-readme.rkt")
            (lib "quickscript-extra/scripts/indent-table.rkt")
            (lib "quickscript-extra/scripts/sort-lines.rkt")
            (lib "quickscript-extra/scripts/color-theme.rkt")
            (lib "quickscript-extra/scripts/backup-file.rkt")
            (lib "quickscript-extra/scripts/abstract-variable.rkt")
            (lib "quickscript-extra/scripts/tweet.rkt")
            (lib "quickscript-extra/scripts/surround-selection.rkt")
            (lib "quickscript-extra/scripts/filepath-to-clipboard.rkt")
            (lib "quickscript-extra/scripts/add-menu.rkt")
            (lib "quickscript-extra/scripts/color-chooser.rkt")
            (lib "quickscript-extra/scripts/git.rkt")
            (lib "quickscript-extra/scripts/enter-submod.rkt")
            (lib "quickscript-extra/unregister.rkt")
            (lib "quickscript-extra/scripts/def-signatures.rkt")
            (lib "quickscript-extra/scripts/number-tabs.rkt")
            (lib "quickscript-extra/scripts/insert-pict.rkt")
            (lib "quickscript-extra/scripts/persistent-counter.rkt")
            (lib "quickscript-extra/scripts/goto-line.rkt")
            (lib "quickscript-extra/scripts/gui-tools.rkt")
            (lib "quickscript-extra/scripts/complete-word.rkt")
            (lib "quickscript-extra/scripts/provided-by.rkt")))
          (name . "quickscript-extra")
          (nix-sha256
           .
           "0cdqgy8jyf6fwjkwc25djxbfs8wnwridinhbgkx5ifbnr221wr9j")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:laurent.orseau@gmail.com . #t)
                   (drracket . #t)
                   (gui . #t)
                   (ring:2 . #t)))
          (source . "https://github.com/Metaxal/quickscript-extra.git")
          (tags . ("drracket" "gui"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "6db81898ff974aa9d2ca712e2e8dc7c952609535")
                          (source
                           .
                           "https://github.com/Metaxal/quickscript-extra.git")
                          (source_url
                           .
                           "https://github.com/Metaxal/quickscript-extra.git")))))))
 ("quote-bad"
  .
  #hasheq((author . "alexander@knauth.org")
          (authors . ("alexander@knauth.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "quote-bad" "doc/quote-bad@quote-bad/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/quote-bad.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/quote-bad.txt")))
          (checksum . "f7b81540acad204535b993806aca04a4692ec4d5")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "pconvert-lib"
            "unstable-lib"
            "hygienic-quote-lang"
            "rackunit-lib"
            "unstable-macro-testing-lib"
            "scribble-lib"
            "racket-doc"))
          (dependency-names
           .
           ("base"
            "pconvert-lib"
            "unstable-lib"
            "hygienic-quote-lang"
            "rackunit-lib"
            "unstable-macro-testing-lib"
            "scribble-lib"
            "racket-doc"))
          (description
           .
           "A version of quote that helps to rid programs of bad uses of quote")
          (implies . ())
          (last-checked . 1557339739)
          (last-edit . 1464562044)
          (last-updated . 1502816341)
          (modules
           .
           ((lib "quote-bad/constructor-style-print/lang/reader.rkt")
            (lib "quote-bad/quote-bad-error.rkt")
            (lib "constructor-style-print/racket/init.rkt")
            (lib "constructor-style-print/lang/language-info.rkt")
            (lib "quote-bad/quote-bad.rkt")
            (lib
             "constructor-style-print/tests/constructor-style-print-lang.rkt")
            (lib "constructor-style-print/lang/runtime-config.rkt")
            (lib "constructor-style-print/constructor-style-print.rkt")
            (lib "constructor-style-print/lang/reader.rkt")
            (lib "quote-bad/scribblings/quote-bad.scrbl")
            (lib "quote-bad/translate-quoted.rkt")))
          (name . "quote-bad")
          (nix-sha256
           .
           "0arpr40ffhfwczsm9rxa8bw671fpagiwmyniq7gczqq17nmksbha")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (:no-tag: . #t)
                   (author:alexander@knauth.org . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/AlexKnauth/quote-bad")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "f7b81540acad204535b993806aca04a4692ec4d5")
                          (source . "git://github.com/AlexKnauth/quote-bad")
                          (source_url
                           .
                           "http://github.com/AlexKnauth/quote-bad/tree/master")))))))
 ("r-lexer"
  .
  #hasheq((author . "leif@leifandersen.net")
          (authors . ("leif@leifandersen.net"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "r-lexer" "doc/r-lexer@r-lexer/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/r-lexer.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/r-lexer.txt")))
          (checksum . "0f19dd7364b69507a6f5d41ea4d77f85b24d5449")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "rackunit-lib"
            "scribble-lib"
            "parser-tools-lib"
            "scribble-lib"
            "racket-doc"))
          (dependency-names
           .
           ("base"
            "rackunit-lib"
            "scribble-lib"
            "parser-tools-lib"
            "scribble-lib"
            "racket-doc"))
          (description . "")
          (implies . ())
          (last-checked . 1557339739)
          (last-edit . 1441985570)
          (last-updated . 1502816341)
          (modules
           .
           ((lib "r-lexer/lang/reader.rkt")
            (lib "r-lexer/main.rkt")
            (lib "r-lexer/scribblings/r-lexer.scrbl")))
          (name . "r-lexer")
          (nix-sha256
           .
           "13vvp9x2h2zzkkria9bvml585a39chx73y96ihv2wy6dhkx41h16")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (:no-desc: . #t)
                   (:no-tag: . #t)
                   (author:leif@leifandersen.net . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/LeifAndersen/racket-r-lexer")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "0f19dd7364b69507a6f5d41ea4d77f85b24d5449")
                          (source
                           .
                           "git://github.com/LeifAndersen/racket-r-lexer")
                          (source_url
                           .
                           "http://github.com/LeifAndersen/racket-r-lexer/tree/master")))))))
 ("r-linq"
  .
  #hasheq((author . "trajafri@gmail.com pkoronke@iu.edu")
          (authors . ("trajafri@gmail.com" "pkoronke@iu.edu"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . "server/built/deps/r-linq.txt")
                 (docs . (("main" "r-linq" "doc/r-linq@r-linq/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/r-linq.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/r-linq.txt")))
          (checksum . "edbe576b5ee240dd79bf7d587a741ba82f424a40")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "racket-doc" "scribble-lib"))
          (dependency-names . ("base" "racket-doc" "scribble-lib"))
          (description . "LINQ implemented in Racket.")
          (implies . ())
          (last-checked . 1557339739)
          (last-edit . 1546883203)
          (last-updated . 1547686830)
          (modules . ((lib "r-linq/main.rkt") (lib "r-linq/main.scrbl")))
          (name . "r-linq")
          (nix-sha256
           .
           "0mva2ja8gnisv4lpzyza8wahmdfaz856hkrxi7i72ara9bhv0yd4")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-dep-fail: . #t)
                   (:build-success: . #t)
                   (:docs: . #t)
                   (author:pkoronke@iu.edu . #t)
                   (author:trajafri@gmail.com . #t)
                   (ring:2 . #t)
                   (syntax . #t)))
          (source . "https://github.com/trajafri/r-linq.git")
          (tags . ("syntax"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "edbe576b5ee240dd79bf7d587a741ba82f424a40")
                          (source . "https://github.com/trajafri/r-linq.git")
                          (source_url
                           .
                           "https://github.com/trajafri/r-linq.git")))))))
 ("r5rs"
  .
  #hash((author . "mflatt@racket-lang.org")
        (checksum . "e169e377b48aecfe851890da9e0ae9f5147eb373")
        (dependencies . ("r5rs-lib" "r5rs-doc"))
        (dependency-names . ("r5rs-lib" "r5rs-doc"))
        (description . "mflatt@racket-lang.org")
        (modules . ())
        (name . "r5rs")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/r5rs.zip")
        (tags . ())))
 ("r5rs-doc"
  .
  #hash((author . "mflatt@racket-lang.org")
        (checksum . "9572a7bb47f8d90cf827d593aee38c3f493b7461")
        (dependencies
         .
         ("base"
          "mzscheme-doc"
          "scheme-lib"
          "scribble-lib"
          "r5rs-lib"
          "compatibility-lib"
          "racket-doc"))
        (dependency-names
         .
         ("base"
          "mzscheme-doc"
          "scheme-lib"
          "scribble-lib"
          "r5rs-lib"
          "compatibility-lib"
          "racket-doc"))
        (description . "mflatt@racket-lang.org")
        (modules . ())
        (name . "r5rs-doc")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/r5rs-doc.zip")
        (tags . ())))
 ("r5rs-lib"
  .
  #hash((author . "mflatt@racket-lang.org")
        (checksum . "9e91d2ffe91f285ae4e2f997c3efecdae513eef1")
        (dependencies . ("scheme-lib" "base" "compatibility-lib"))
        (dependency-names . ("scheme-lib" "base" "compatibility-lib"))
        (description . "mflatt@racket-lang.org")
        (modules . ())
        (name . "r5rs-lib")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/r5rs-lib.zip")
        (tags . ())))
 ("r6rs"
  .
  #hash((author . "mflatt@racket-lang.org")
        (checksum . "5e0b6075e802464cea656dcf0205591c372097dc")
        (dependencies . ("r6rs-lib" "r6rs-doc"))
        (dependency-names . ("r6rs-lib" "r6rs-doc"))
        (description . "mflatt@racket-lang.org")
        (modules . ())
        (name . "r6rs")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/r6rs.zip")
        (tags . ())))
 ("r6rs-doc"
  .
  #hash((author . "mflatt@racket-lang.org")
        (checksum . "a694bbab0f1511afa9491bc70cffc0d810404835")
        (dependencies
         .
         ("racket-index"
          "r5rs-doc"
          "base"
          "scribble-lib"
          "r6rs-lib"
          "racket-doc"))
        (dependency-names
         .
         ("racket-index"
          "r5rs-doc"
          "base"
          "scribble-lib"
          "r6rs-lib"
          "racket-doc"))
        (description . "mflatt@racket-lang.org")
        (modules . ())
        (name . "r6rs-doc")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/r6rs-doc.zip")
        (tags . ())))
 ("r6rs-lib"
  .
  #hash((author . "mflatt@racket-lang.org")
        (checksum . "f7f2b9a6797648b62867bb892c9a70693c69d226")
        (dependencies . ("scheme-lib" "base" "r5rs-lib" "compatibility-lib"))
        (dependency-names
         .
         ("scheme-lib" "base" "r5rs-lib" "compatibility-lib"))
        (description . "mflatt@racket-lang.org")
        (modules . ())
        (name . "r6rs-lib")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/r6rs-lib.zip")
        (tags . ())))
 ("r6rs-test"
  .
  #hash((author . "mflatt@racket-lang.org")
        (checksum . "a7ad8031a1a8b5cabdef7a178ec4ef445f8d8c04")
        (dependencies . ("base" "r6rs-lib"))
        (dependency-names . ("base" "r6rs-lib"))
        (description . "mflatt@racket-lang.org")
        (modules . ())
        (name . "r6rs-test")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/r6rs-test.zip")
        (tags . ())))
 ("r7rs"
  .
  #hasheq((author . "lexi.lambda@gmail.com")
          (authors . ("lexi.lambda@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/r7rs.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/r7rs.txt")))
          (checksum . "bd6eab45e499ff92b7d941417d1d4d93bf1d4c79")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "r7rs-lib"))
          (dependency-names . ("base" "r7rs-lib"))
          (description . "An implementation of R7RS as a #lang")
          (implies . ("r7rs-lib"))
          (last-checked . 1557339740)
          (last-edit . 1462746878)
          (last-updated . 1551751586)
          (modules . ())
          (name . "r7rs")
          (nix-sha256
           .
           "1kzwch7gck0v7rkbslcvin2vzrf6fr2nv82520agq0003xp7669z")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:no-tag: . #t)
                   (author:lexi.lambda@gmail.com . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/lexi-lambda/racket-r7rs?path=r7rs")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "bd6eab45e499ff92b7d941417d1d4d93bf1d4c79")
                          (source
                           .
                           "git://github.com/lexi-lambda/racket-r7rs?path=r7rs")
                          (source_url
                           .
                           "http://github.com/lexi-lambda/racket-r7rs/tree/master?path=r7rs")))))))
 ("r7rs-lib"
  .
  #hasheq((author . "lexi.lambda@gmail.com")
          (authors . ("lexi.lambda@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/r7rs-lib.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/r7rs-lib.txt")))
          (checksum . "bd6eab45e499ff92b7d941417d1d4d93bf1d4c79")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base" "compatibility-lib" "r5rs-lib" "r6rs-lib" "rackunit-lib"))
          (dependency-names
           .
           ("base" "compatibility-lib" "r5rs-lib" "r6rs-lib" "rackunit-lib"))
          (description . "")
          (implies . ())
          (last-checked . 1557339740)
          (last-edit . 1446266165)
          (last-updated . 1551751586)
          (modules
           .
           ((lib "r7rs/private/exception.rkt")
            (lib "r7rs/private/case.rkt")
            (lib "r7rs/base.rkt")
            (lib "r7rs/char.rkt")
            (lib "r7rs/private/mutability.rkt")
            (lib "r7rs/case-lambda.rkt")
            (lib "r7rs/private/math.rkt")
            (lib "r7rs/inexact.rkt")
            (lib "r7rs/private/bytevector.rkt")
            (lib "r7rs/main.rkt")
            (lib "r7rs/lang/private/symbol.rkt")
            (lib "r7rs/r5rs.rkt")
            (lib "r7rs/lang/private/bytevector.rkt")
            (lib "r7rs/load.rkt")
            (lib "r7rs/lang/private/char.rkt")
            (lib "r7rs/private/strip-prefix.rkt")
            (lib "r7rs/process-context.rkt")
            (lib "r7rs/private/import.rkt")
            (lib "r7rs/load/lang/language.rkt")
            (lib "r7rs/private/string.rkt")
            (lib "r7rs/private/record.rkt")
            (lib "r7rs/lang/reader.rkt")
            (lib "r7rs/private/cond-expand.rkt")
            (lib "r7rs/private/library.rkt")
            (lib "r7rs/load/lang/reader.rkt")
            (lib "r7rs/private/list.rkt")
            (lib "r7rs/cxr.rkt")
            (lib "r7rs/private/export.rkt")
            (lib "r7rs/repl.rkt")
            (lib "r7rs/lang/private/string.rkt")
            (lib "r7rs/lazy.rkt")
            (lib "r7rs/complex.rkt")
            (lib "r7rs/write.rkt")
            (lib "r7rs/time.rkt")
            (lib "r7rs/eval.rkt")
            (lib "r7rs/read.rkt")
            (lib "r7rs/private/define-values.rkt")
            (lib "r7rs/lang/private/directive.rkt")
            (lib "r7rs/private/vector.rkt")
            (lib "r7rs/file.rkt")))
          (name . "r7rs-lib")
          (nix-sha256
           .
           "1kzwch7gck0v7rkbslcvin2vzrf6fr2nv82520agq0003xp7669z")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:no-desc: . #t)
                   (:no-tag: . #t)
                   (author:lexi.lambda@gmail.com . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/lexi-lambda/racket-r7rs?path=r7rs-lib")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "bd6eab45e499ff92b7d941417d1d4d93bf1d4c79")
                          (source
                           .
                           "git://github.com/lexi-lambda/racket-r7rs?path=r7rs-lib")
                          (source_url
                           .
                           "http://github.com/lexi-lambda/racket-r7rs/tree/master?path=r7rs-lib")))))))
 ("raart"
  .
  #hasheq((author . "jay.mccarthy@gmail.com")
          (authors . ("jay.mccarthy@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . "server/built/deps/raart.txt")
                 (docs . (("main" "raart" "doc/raart@raart/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/raart.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/raart.txt")))
          (checksum . "a7f914acf4da806c2efea6aa2ad68432cedd23fd")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("lux"
            "unix-signals"
            "reprovide-lang"
            "ansi"
            "struct-define"
            "base"
            "sandbox-lib"
            "htdp-doc"
            "racket-doc"
            "scribble-lib"))
          (dependency-names
           .
           ("lux"
            "unix-signals"
            "reprovide-lang"
            "ansi"
            "struct-define"
            "base"
            "sandbox-lib"
            "htdp-doc"
            "racket-doc"
            "scribble-lib"))
          (description . "racket ansi art")
          (implies . ())
          (last-checked . 1557339740)
          (last-edit . 1514852717)
          (last-updated . 1551571581)
          (modules
           .
           ((lib "raart/main.rkt")
            (lib "raart/kitty.rkt")
            (lib "raart/raart.scrbl")
            (lib "raart/buffer.rkt")
            (lib "raart/t/key.rkt")
            (lib "raart/t/hack.rkt")
            (lib "raart/t/kitty.rkt")
            (lib "raart/draw.rkt")
            (lib "raart/t/draw.rkt")
            (lib "raart/kitty-init.rkt")
            (lib "raart/lux-chaos.rkt")
            (lib "raart/size.rkt")))
          (name . "raart")
          (nix-sha256
           .
           "1i94pfqcylrnc2b75idxgza9z0n05h82drk71kgvffdw5x4nkmh1")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-dep-fail: . #t)
                   (:build-success: . #t)
                   (:docs: . #t)
                   (ansi . #t)
                   (art . #t)
                   (author:jay.mccarthy@gmail.com . #t)
                   (graphics . #t)
                   (ring:2 . #t)
                   (terminal . #t)
                   (ui . #t)))
          (source . "https://github.com/jeapostrophe/raart.git")
          (tags . ("ansi" "art" "graphics" "terminal" "ui"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "a7f914acf4da806c2efea6aa2ad68432cedd23fd")
                          (source
                           .
                           "https://github.com/jeapostrophe/raart.git")
                          (source_url
                           .
                           "https://github.com/jeapostrophe/raart.git")))))))
 ("rackdis"
  .
  #hasheq((author . "euler90h@gmail.com")
          (authors . ("euler90h@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "rackdis" "doc/rackdis@rackdis/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/rackdis.txt")
                 (test-failure-log . "server/built/test-fail/rackdis.txt")
                 (test-success-log . #f)))
          (checksum . "975aeb46b6432d2359fb1c625f69ae5b97f450d1")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "rackunit-lib" "scribble-lib" "racket-doc"))
          (dependency-names
           .
           ("base" "rackunit-lib" "scribble-lib" "racket-doc"))
          (description . "Redis bindings")
          (implies . ())
          (last-checked . 1557339741)
          (last-edit . 1440124617)
          (last-updated . 1502816347)
          (modules
           .
           ((lib "rackdis/main.rkt")
            (lib "rackdis/test.rkt")
            (lib "rackdis/scribblings/rackdis.scrbl")
            (lib "rackdis/resp.rkt")))
          (name . "rackdis")
          (nix-sha256
           .
           "0qsrswz1dm1dsp0rd7b1257lpkr37cgg2mizzciy1317qh1fvfwb")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (Redis . #t)
                   (author:euler90h@gmail.com . #t)
                   (db . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/eu90h/rackdis")
          (tags . ("db" "Redis"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "975aeb46b6432d2359fb1c625f69ae5b97f450d1")
                          (source . "git://github.com/eu90h/rackdis")
                          (source_url
                           .
                           "http://github.com/eu90h/rackdis/tree/master")))))))
 ("racket-benchmarks"
  .
  #hash((author
         .
         "eli@racket-lang.org jay@racket-lang.org mflatt@racket-lang.org robby@racket-lang.org samth@racket-lang.org stamourv@racket-lang.org")
        (checksum . "51c19e180a72964ad60ed02d31f6640f78fde6ec")
        (dependencies
         .
         ("base"
          "compatibility-lib"
          "r5rs-lib"
          "scheme-lib"
          "racket-test"
          "typed-racket-lib"
          "gui-lib"))
        (dependency-names
         .
         ("base"
          "compatibility-lib"
          "r5rs-lib"
          "scheme-lib"
          "racket-test"
          "typed-racket-lib"
          "gui-lib"))
        (description
         .
         "eli@racket-lang.org jay@racket-lang.org mflatt@racket-lang.org robby@racket-lang.org samth@racket-lang.org stamourv@racket-lang.org")
        (modules . ())
        (name . "racket-benchmarks")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/racket-benchmarks.zip")
        (tags . ())))
 ("racket-cheat"
  .
  #hash((author . "jay.mccarthy@gmail.com")
        (checksum . "3f3fb93ba20d4bd7627178e51679fc216ecda979")
        (dependencies
         .
         ("base"
          "scribble-lib"
          "db-doc"
          "db-lib"
          "drracket"
          "net-doc"
          "net-lib"
          "parser-tools-doc"
          "parser-tools-lib"
          "pict-doc"
          "pict-lib"
          "racket-doc"
          "sandbox-lib"
          "slideshow-doc"
          "slideshow-lib"))
        (dependency-names
         .
         ("base"
          "scribble-lib"
          "db-doc"
          "db-lib"
          "drracket"
          "net-doc"
          "net-lib"
          "parser-tools-doc"
          "parser-tools-lib"
          "pict-doc"
          "pict-lib"
          "racket-doc"
          "sandbox-lib"
          "slideshow-doc"
          "slideshow-lib"))
        (description . "jay.mccarthy@gmail.com")
        (modules . ())
        (name . "racket-cheat")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/racket-cheat.zip")
        (tags . ())))
 ("racket-chipmunk"
  .
  #hasheq((author . "stephen@thoughtstem.com")
          (authors . ("stephen@thoughtstem.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/racket-chipmunk.txt")
                 (test-failure-log
                  .
                  "server/built/test-fail/racket-chipmunk.txt")
                 (test-success-log . #f)))
          (checksum . "120192230fd01ed4b054786c13da37034af0a571")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base"))
          (dependency-names . ("base"))
          (description . "Chipmunk bindings for Racket.")
          (implies . ())
          (last-checked . 1557339741)
          (last-edit . 1538157311)
          (last-updated . 1553551588)
          (modules
           .
           ((lib "racket-chipmunk/lang/chipmunk-ffi.rkt")
            (lib "racket-chipmunk/main.rkt")
            (lib "racket-chipmunk/examples/chipmunk-test.rkt")
            (lib "racket-chipmunk/lang/chipmunk.rkt")))
          (name . "racket-chipmunk")
          (nix-sha256
           .
           "137lym6wjm3afm0zyq2af7wcbpq64blvyd0wskscv11ydj8vi8nr")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:stephen@thoughtstem.com . #t)
                   (games . #t)
                   (physics . #t)
                   (ring:2 . #t)))
          (source . "https://github.com/thoughtstem/racket-chipmunk.git")
          (tags . ("games" "physics"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "120192230fd01ed4b054786c13da37034af0a571")
                          (source
                           .
                           "https://github.com/thoughtstem/racket-chipmunk.git")
                          (source_url
                           .
                           "https://github.com/thoughtstem/racket-chipmunk.git")))))))
 ("racket-cord"
  .
  #hasheq((author . "ben@bensimms.moe")
          (authors . ("ben@bensimms.moe"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "racket-cord"
                    "doc/racket-cord@racket-cord/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/racket-cord.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/racket-cord.txt")))
          (checksum . "7376bccad3d76adae12b1e9cd6e8fadc013cd474")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "simple-http"
            "rfc6455"
            "rackunit-lib"
            "html-parsing"
            "srfi-lite-lib"
            "scribble-lib"
            "racket-doc"))
          (dependency-names
           .
           ("base"
            "simple-http"
            "rfc6455"
            "rackunit-lib"
            "html-parsing"
            "srfi-lite-lib"
            "scribble-lib"
            "racket-doc"))
          (description . "Racket bindings for discord.")
          (implies . ())
          (last-checked . 1557339741)
          (last-edit . 1509839705)
          (last-updated . 1531626319)
          (modules
           .
           ((lib "racket-cord/main.rkt")
            (lib "racket-cord/data.rkt")
            (lib "racket-cord/utils.rkt")
            (lib "racket-cord/patched-simple-http.rkt")
            (lib "racket-cord/events.rkt")
            (lib "racket-cord/gateway.rkt")
            (lib "racket-cord/scribblings/racket-cord.scrbl")
            (lib "racket-cord/http.rkt")))
          (name . "racket-cord")
          (nix-sha256
           .
           "1kb12lvdh5avb8l5qzcqxbri8fzns1vc4639187fikl315x1q5s7")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:ben@bensimms.moe . #t)
                   (discord . #t)
                   (http . #t)
                   (net . #t)
                   (ring:2 . #t)))
          (source . "https://github.com/nitros12/racket-cord.git")
          (tags . ("discord" "http" "net"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "7376bccad3d76adae12b1e9cd6e8fadc013cd474")
                          (source
                           .
                           "https://github.com/nitros12/racket-cord.git")
                          (source_url
                           .
                           "https://github.com/nitros12/racket-cord.git")))))))
 ("racket-doc"
  .
  #hash((author
         .
         "eli@racket-lang.org jay@racket-lang.org matthias@racket-lang.org mflatt@racket-lang.org robby@racket-lang.org ryanc@racket-lang.org samth@racket-lang.org")
        (checksum . "0c46cf34e5933059bb12e771f6258931926f3337")
        (dependencies
         .
         ("scheme-lib"
          ("base" #:version "6.5.0.2")
          "net-lib"
          "sandbox-lib"
          ("scribble-lib" #:version "1.14")
          "racket-index"
          "rackunit-doc"
          "compatibility"
          "errortrace-doc"
          "typed-racket-doc"
          "at-exp-lib"
          "rackunit-lib"
          "web-server-doc"
          "gui"
          "draw"
          "pict"
          "parser-tools-doc"
          "slideshow-doc"
          "r5rs-doc"
          "r6rs-doc"
          "xrepl"
          "readline"
          "syntax-color"
          "scribble-doc"
          "future-visualizer"
          "distributed-places"
          "serialize-cstruct-lib"
          "cext-lib"
          "data-doc"
          "net-doc"
          "planet-doc"
          "mzscheme-doc"
          "compiler-lib"
          "drracket"
          "math-doc"
          "math-lib"))
        (dependency-names
         .
         ("scheme-lib"
          "base"
          "net-lib"
          "sandbox-lib"
          "scribble-lib"
          "racket-index"
          "rackunit-doc"
          "compatibility"
          "errortrace-doc"
          "typed-racket-doc"
          "at-exp-lib"
          "rackunit-lib"
          "web-server-doc"
          "gui"
          "draw"
          "pict"
          "parser-tools-doc"
          "slideshow-doc"
          "r5rs-doc"
          "r6rs-doc"
          "xrepl"
          "readline"
          "syntax-color"
          "scribble-doc"
          "future-visualizer"
          "distributed-places"
          "serialize-cstruct-lib"
          "cext-lib"
          "data-doc"
          "net-doc"
          "planet-doc"
          "mzscheme-doc"
          "compiler-lib"
          "drracket"
          "math-doc"
          "math-lib"))
        (description
         .
         "eli@racket-lang.org jay@racket-lang.org matthias@racket-lang.org mflatt@racket-lang.org robby@racket-lang.org ryanc@racket-lang.org samth@racket-lang.org")
        (modules . ())
        (name . "racket-doc")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/racket-doc.zip")
        (tags . ())))
 ("racket-dogstatsd"
  .
  #hasheq((author . "info@v25media.com")
          (authors . ("info@v25media.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "dogstatsd"
                    "doc/dogstatsd@racket-dogstatsd/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/racket-dogstatsd.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/racket-dogstatsd.txt")))
          (checksum . "164ec431a98689b111495bad638313b219e3b0b2")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base" "threading" "scribble-lib" "racket-doc" "rackunit-lib"))
          (dependency-names
           .
           ("base" "threading" "scribble-lib" "racket-doc" "rackunit-lib"))
          (description
           .
           "DogStatsD client for Racket, allowing you to send metrics to Datadog")
          (implies . ())
          (last-checked . 1557339741)
          (last-edit . 1516216259)
          (last-updated . 1516216259)
          (modules
           .
           ((lib "dogstatsd/private/socket.rkt")
            (lib "dogstatsd/private/servicechecks.rkt")
            (lib "dogstatsd/private/buffer.rkt")
            (lib "dogstatsd/private/events.rkt")
            (lib "dogstatsd/test.rkt")
            (lib "dogstatsd/private/utils.rkt")
            (lib "dogstatsd/scribblings/dogstatsd.scrbl")
            (lib "dogstatsd/main.rkt")
            (lib "dogstatsd/private/statsd.rkt")))
          (name . "racket-dogstatsd")
          (nix-sha256
           .
           "0xavvywb89ypj81w98kz2msvbrh40s51lq60kna2saqbfq2dbgzi")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:info@v25media.com . #t)
                   (dogstatsd . #t)
                   (metrics . #t)
                   (ring:2 . #t)
                   (statsd . #t)))
          (source . "https://github.com/DarrenN/racket-dogstatsd.git")
          (tags . ("dogstatsd" "metrics" "statsd"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "164ec431a98689b111495bad638313b219e3b0b2")
                          (source
                           .
                           "https://github.com/DarrenN/racket-dogstatsd.git")
                          (source_url
                           .
                           "https://github.com/DarrenN/racket-dogstatsd.git")))))))
 ("racket-i386-macosx-2"
  .
  #hash((author . "mflatt@racket-lang.org")
        (authors . ("mflatt@racket-lang.org"))
        (build
         .
         #hash((conflicts-log . #f)
               (dep-failure-log . #f)
               (docs . ())
               (failure-log . #f)
               (min-failure-log . #f)
               (success-log . #f)
               (test-failure-log . #f)
               (test-success-log . #f)))
        (checksum . "2b0a4a12fc5fc8a304bcba60c09af2f8b75988c5")
        (checksum-error . #f)
        (conflicts . ())
        (dependencies . ("base"))
        (dependency-names . ("base"))
        (description . "native libraries for \"racket\" package")
        (implies . ())
        (last-checked . 1557339741)
        (last-edit . 1485991969)
        (last-updated . 1502816348)
        (modules . ())
        (name . "racket-i386-macosx-2")
        (ring . 0)
        (search-terms
         .
         #hasheq((author:mflatt@racket-lang.org . #t)
                 (main-distribution . #t)
                 (ring:0 . #t)))
        (source
         .
         "https://pkg-sources.racket-lang.org/pkgs/2b0a4a12fc5fc8a304bcba60c09af2f8b75988c5/racket-i386-macosx-2.zip")
        (tags . ("main-distribution"))
        (versions
         .
         #hash((default
                .
                #hasheq((checksum
                         .
                         "2b0a4a12fc5fc8a304bcba60c09af2f8b75988c5")
                        (source
                         .
                         "https://pkg-sources.racket-lang.org/pkgs/2b0a4a12fc5fc8a304bcba60c09af2f8b75988c5/racket-i386-macosx-2.zip")
                        (source_url
                         .
                         "https://pkg-sources.racket-lang.org/pkgs/2b0a4a12fc5fc8a304bcba60c09af2f8b75988c5/racket-i386-macosx-2.zip")))
               ("5.3.4"
                .
                #hash((checksum . "9f098dddde7f217879070816090c1e8e74d49432")
                      (source
                       .
                       "https://pkg-sources.racket-lang.org/pkgs/empty.zip")
                      (source_url
                       .
                       "https://pkg-sources.racket-lang.org/pkgs/empty.zip")))
               ("5.3.5"
                .
                #hash((checksum . "9f098dddde7f217879070816090c1e8e74d49432")
                      (source
                       .
                       "https://pkg-sources.racket-lang.org/pkgs/empty.zip")
                      (source_url
                       .
                       "https://pkg-sources.racket-lang.org/pkgs/empty.zip")))
               ("5.3.6"
                .
                #hash((checksum . "9f098dddde7f217879070816090c1e8e74d49432")
                      (source
                       .
                       "https://pkg-sources.racket-lang.org/pkgs/empty.zip")
                      (source_url
                       .
                       "https://pkg-sources.racket-lang.org/pkgs/empty.zip")))))))
 ("racket-i386-macosx-3"
  .
  #hash((author . "mflatt@racket-lang.org")
        (checksum . "b6d20a55dcc5f6c9f45198d74fe3578fd0480fe7")
        (dependencies . ("base"))
        (dependency-names . ("base"))
        (description . "mflatt@racket-lang.org")
        (modules . ())
        (name . "racket-i386-macosx-3")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/racket-i386-macosx-3.zip")
        (tags . ())))
 ("racket-immutable"
  .
  #hasheq((author . "alexander@knauth.org")
          (authors . ("alexander@knauth.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . "server/built/deps/racket-immutable.txt")
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/racket-immutable.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/racket-immutable.txt")))
          (checksum . "32a80f8dcc1af422aacc07fbb5ae088537a6954e")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "rackunit-lib"))
          (dependency-names . ("base" "rackunit-lib"))
          (description
           .
           "operations that return immutable strings, immutable byte-strings, and immutable vectors")
          (implies . ())
          (last-checked . 1557339742)
          (last-edit . 1501614789)
          (last-updated . 1552532787)
          (modules
           .
           ((lib "racket-immutable/test/immutable-string.rkt")
            (lib "racket-immutable/base/lang/reader.rkt")
            (lib "racket-immutable/immutable.rkt")
            (lib "racket-immutable/lang/reader.rkt")
            (lib "racket-immutable/base/lang.rkt")
            (lib "racket-immutable/lang.rkt")))
          (name . "racket-immutable")
          (nix-sha256
           .
           "19h8dbdysmxvmsjkh8n4gwy7hgc15ibk6d7b2k7qxb1yqwd71n13")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-dep-fail: . #t)
                   (:build-success: . #t)
                   (:no-tag: . #t)
                   (author:alexander@knauth.org . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/AlexKnauth/racket-immutable")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "32a80f8dcc1af422aacc07fbb5ae088537a6954e")
                          (source
                           .
                           "git://github.com/AlexKnauth/racket-immutable")
                          (source_url
                           .
                           "http://github.com/AlexKnauth/racket-immutable/tree/master")))))))
 ("racket-index"
  .
  #hash((author
         .
         "eli@racket-lang.org jay@racket-lang.org matthias@racket-lang.org mflatt@racket-lang.org robby@racket-lang.org ryanc@racket-lang.org samth@racket-lang.org")
        (checksum . "4bc153c2666643a232289b5f806cfe025ca73da5")
        (dependencies . ("base" "scribble-lib" "scheme-lib" "at-exp-lib"))
        (dependency-names . ("base" "scribble-lib" "scheme-lib" "at-exp-lib"))
        (description
         .
         "eli@racket-lang.org jay@racket-lang.org matthias@racket-lang.org mflatt@racket-lang.org robby@racket-lang.org ryanc@racket-lang.org samth@racket-lang.org")
        (modules . ())
        (name . "racket-index")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/racket-index.zip")
        (tags . ())))
 ("racket-lang-org"
  .
  #hash((author
         .
         "samth@racket-lang.org mflatt@racket-lang.org eli@barzilay.org")
        (authors
         .
         ("samth@racket-lang.org"
          "mflatt@racket-lang.org"
          "eli@barzilay.org"))
        (build
         .
         #hash((conflicts-log . #f)
               (dep-failure-log . "server/built/deps/racket-lang-org.txt")
               (docs . ())
               (failure-log . #f)
               (min-failure-log . #f)
               (success-log . "server/built/install/racket-lang-org.txt")
               (test-failure-log
                .
                "server/built/test-fail/racket-lang-org.txt")
               (test-success-log . #f)))
        (checksum . "1db7b492ff18dacd2251b63494fc98fcb9a22c78")
        (checksum-error . #f)
        (conflicts . ())
        (dependencies
         .
         ("graph"
          "gui-lib"
          "base"
          ("plt-web-lib" #:version "1.3")
          "at-exp-lib"
          "net-lib"
          "racket-index"
          ("scribble-lib" #:version "1.28")
          "syntax-color-lib"
          "plot-gui-lib"
          "plot-lib"
          "math-lib"
          "pollen"
          "css-tools"
          "sugar"
          "txexpr"
          "gregor-lib"
          "frog"
          "rackunit-lib"
          "pict-lib"
          "draw-lib"
          ("s3-sync" #:version "1.10")))
        (dependency-names
         .
         ("graph"
          "gui-lib"
          "base"
          "plt-web-lib"
          "at-exp-lib"
          "net-lib"
          "racket-index"
          "scribble-lib"
          "syntax-color-lib"
          "plot-gui-lib"
          "plot-lib"
          "math-lib"
          "pollen"
          "css-tools"
          "sugar"
          "txexpr"
          "gregor-lib"
          "frog"
          "rackunit-lib"
          "pict-lib"
          "draw-lib"
          "s3-sync"))
        (description . "Sources for http://racket-lang.org")
        (implies . ())
        (last-checked . 1557339743)
        (last-edit . 1417307461)
        (last-updated . 1557285741)
        (modules
         .
         ((lib "racket-lang-org/www/old-techreports.rkt")
          (lib "racket-lang-org/blog/_src/xml-from-blogger/xml.rkt")
          (lib "racket-lang-org/stubs/pkgs.rkt")
          (lib "racket-lang-org/www/web-copyright.rkt")
          (lib "racket-lang-org/stubs/mailman.rkt")
          (lib "racket-lang-org/config.rkt")
          (lib "racket-lang-org/rcon/2017/pollen.rkt")
          (lib "racket-lang-org/stubs/all.rkt")
          (lib
           "racket-lang-org/blog/_src/posts/2019-01-29-racket-on-chez-status.scrbl")
          (lib "racket-lang-org/www/img/little-macros.rkt")
          (lib "racket-lang-org/rcon/2016/svg.rkt")
          (lib "racket-lang-org/rcon/2011/all.rkt")
          (lib "racket-lang-org/www/pollen.rkt")
          (lib "racket-lang-org/rcon/2016/pollen.rkt")
          (lib "racket-lang-org/www/index-illos.rkt")
          (lib "racket-lang-org/rcon/all.rkt")
          (lib "racket-lang-org/rcon/2019/pollen.rkt")
          (lib "racket-lang-org/www/all.rkt")
          (lib
           "racket-lang-org/blog/_src/posts/2018-01-05-racket-on-chez-status.scrbl")
          (lib "racket-lang-org/blog/all.rkt")
          (lib "racket-lang-org/www/help.rkt")
          (lib "racket-lang-org/download/resources.rkt")
          (lib "racket-lang-org/www/img/big-macros.rkt")
          (lib "racket-lang-org/minis/bugs.rkt")
          (lib "racket-lang-org/school/all.rkt")
          (lib "racket-lang-org/rcon/2018/pollen.rkt")
          (lib "racket-lang-org/minis/all.rkt")
          (lib "racket-lang-org/minis/drracket.rkt")
          (lib "racket-lang-org/download/release-info.rkt")
          (lib "racket-lang-org/identity.rkt")
          (lib "racket-lang-org/www/img/racket-lang-picture.rkt")
          (lib "racket-lang-org/www/img/general-purpose.rkt")
          (lib "racket-lang-org/stubs/git.rkt")
          (lib "racket-lang-org/www/irc.rkt")
          (lib "racket-lang-org/download/all.rkt")
          (lib "racket-lang-org/lists/index.rkt")
          (lib "racket-lang-org/www/resources.rkt")
          (lib "racket-lang-org/www/learning.rkt")
          (lib "racket-lang-org/rcon/2015/eero-demo.rkt")
          (lib "racket-lang-org/rcon/utils.rkt")
          (lib "racket-lang-org/www/techreports.rkt")
          (lib "racket-lang-org/stubs/wiki.rkt")
          (lib "racket-lang-org/www/index.rkt")
          (lib "racket-lang-org/stubs/planet.rkt")
          (lib "racket-lang-org/www/css/fonts/pollen.rkt")
          (lib "racket-lang-org/www/code.rkt")
          (lib "racket-lang-org/rcon/2013/all.rkt")
          (lib "racket-lang-org/rcon/resources.rkt")
          (lib "racket-lang-org/rcon/2015/eero.rkt")
          (lib "racket-lang-org/download/installer-pages.rkt")
          (lib "racket-lang-org/rcon/2014/all.rkt")
          (lib "racket-lang-org/minis/pre.rkt")
          (lib "racket-lang-org/download/indexes.rkt")
          (lib "racket-lang-org/www/community.rkt")
          (lib "racket-lang-org/stubs/docs.rkt")
          (lib "racket-lang-org/download/index.rkt")
          (lib "racket-lang-org/lists/resources.rkt")
          (lib "racket-lang-org/sync.rkt")
          (lib "racket-lang-org/stubs/dirlist.rkt")
          (lib "racket-lang-org/rcon/2012/all.rkt")
          (lib "racket-lang-org/rcon/2015/pollen.rkt")
          (lib "racket-lang-org/download/symlinks.rkt")
          (lib "racket-lang-org/annual-utils.rkt")
          (lib
           "racket-lang-org/blog/_src/posts/racket-on-chez-status-jan2019/build-desc.rkt")
          (lib "racket-lang-org/all.rkt")
          (lib "racket-lang-org/school/2019/pollen.rkt")
          (lib
           "racket-lang-org/blog/_src/posts/racket-on-chez-status-jan2019/plot.rkt")
          (lib "racket-lang-org/blog/frog.rkt")
          (lib
           "racket-lang-org/blog/_src/posts/racket-on-chez-status-jan2019/color.rkt")
          (lib
           "racket-lang-org/blog/_src/posts/racket-on-chez-status-jan2019/bm-jan19.rkt")
          (lib "racket-lang-org/www/lists.rkt")
          (lib "racket-lang-org/testing.rkt")
          (lib
           "racket-lang-org/blog/_src/posts/racket-on-chez-status/stack.rkt")
          (lib "racket-lang-org/download/version.rkt")
          (lib "racket-lang-org/www/download.rkt")
          (lib "racket-lang-org/download/mirror-link.rkt")
          (lib "racket-lang-org/download/data.rkt")
          (lib "racket-lang-org/www/new-name.rkt")
          (lib "racket-lang-org/www/people.rkt")
          (lib "racket-lang-org/rcon/2016/racketcon-font.rkt")
          (lib "racket-lang-org/download/download-pages.rkt")
          (lib "racket-lang-org/stubs/blog.rkt")
          (lib "racket-lang-org/blog/_src/xml-from-blogger/main.rkt")
          (lib "racket-lang-org/minis/lists.rkt")))
        (name . "racket-lang-org")
        (nix-sha256 . "11dla5jyxmdpmyrg08db4qbfvlcrpr6dyanqh440aj7vzsknkinv")
        (ring . 1)
        (search-terms
         .
         #hasheq((:build-dep-fail: . #t)
                 (:build-success: . #t)
                 (:no-tag: . #t)
                 (author:eli@barzilay.org . #t)
                 (author:mflatt@racket-lang.org . #t)
                 (author:samth@racket-lang.org . #t)
                 (ring:1 . #t)))
        (source . "git://github.com/racket/racket-lang-org")
        (tags . ())
        (versions
         .
         #hash((default
                .
                #hasheq((checksum
                         .
                         "1db7b492ff18dacd2251b63494fc98fcb9a22c78")
                        (source . "git://github.com/racket/racket-lang-org")
                        (source_url
                         .
                         "http://github.com/racket/racket-lang-org/tree/master")))))))
 ("racket-langserver"
  .
  #hasheq((author . "theconor4@gmail.com jay.mccarthy@gmail.com")
          (authors . ("theconor4@gmail.com" "jay.mccarthy@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/racket-langserver.txt")
                 (test-failure-log
                  .
                  "server/built/test-fail/racket-langserver.txt")
                 (test-success-log . #f)))
          (checksum . "3b4d67e5770f49d11b77741e51e8ce5a18e2bafe")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "compatibility-lib"
            "data-lib"
            "drracket-tool-lib"
            "gui-lib"
            "syntax-color-lib"
            "chk"))
          (dependency-names
           .
           ("base"
            "compatibility-lib"
            "data-lib"
            "drracket-tool-lib"
            "gui-lib"
            "syntax-color-lib"
            "chk"))
          (description . "Language Server Protocol implementation for Racket")
          (implies . ())
          (last-checked . 1557339743)
          (last-edit . 1518711849)
          (last-updated . 1527123946)
          (modules
           .
           ((lib "racket-langserver/interfaces.rkt")
            (lib "racket-langserver/append-message.rkt")
            (lib "racket-langserver/tests/test-main.rkt")
            (lib "racket-langserver/check-syntax.rkt")
            (lib "racket-langserver/json-util.rkt")
            (lib "racket-langserver/responses.rkt")
            (lib "racket-langserver/methods.rkt")
            (lib "racket-langserver/msg-io.rkt")
            (lib "racket-langserver/symbol-kinds.rkt")
            (lib "racket-langserver/error-codes.rkt")
            (lib "racket-langserver/text-document.rkt")
            (lib "racket-langserver/main.rkt")))
          (name . "racket-langserver")
          (nix-sha256
           .
           "0z184x2rsdl4iaplfj4q5ysnr08c7h64cqjb7bg1zs0xnibg0446")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:jay.mccarthy@gmail.com . #t)
                   (author:theconor4@gmail.com . #t)
                   (ide . #t)
                   (language-server-protocol . #t)
                   (lsp . #t)
                   (ring:2 . #t)))
          (source . "https://github.com/jeapostrophe/racket-langserver.git")
          (tags . ("ide" "language-server-protocol" "lsp"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "3b4d67e5770f49d11b77741e51e8ce5a18e2bafe")
                          (source
                           .
                           "https://github.com/jeapostrophe/racket-langserver.git")
                          (source_url
                           .
                           "https://github.com/jeapostrophe/racket-langserver.git")))))))
 ("racket-language-server"
  .
  #hasheq((author . "david@craven.ch")
          (authors . ("david@craven.ch"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "racket-language-server"
                    "doc/racket-language-server@racket-language-server/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log
                  .
                  "server/built/install/racket-language-server.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/racket-language-server.txt")))
          (checksum . "6a76fb30392800f8672499501dcd659c3d5eacb9")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "data-lib"
            "drracket-tool-lib"
            "gui-lib"
            "scribble-lib"
            "syntax-color-lib"
            "at-exp-lib"
            "data-doc"
            "racket-doc"
            "rackunit-lib"
            "scribble-lib"))
          (dependency-names
           .
           ("base"
            "data-lib"
            "drracket-tool-lib"
            "gui-lib"
            "scribble-lib"
            "syntax-color-lib"
            "at-exp-lib"
            "data-doc"
            "racket-doc"
            "rackunit-lib"
            "scribble-lib"))
          (description
           .
           "Implementation of the Language Server Protocol for Racket.")
          (implies . ())
          (last-checked . 1557339743)
          (last-edit . 1527266890)
          (last-updated . 1546145872)
          (modules
           .
           ((lib "racket-language-server/protocol/jsonrpc.rkt")
            (lib
             "racket-language-server/scribblings/racket-language-server.scrbl")
            (lib "racket-language-server/protocol/conversion.rkt")
            (lib "racket-language-server/protocol/lsp.rkt")
            (lib "racket-language-server/protocol/dispatch.rkt")
            (lib "racket-language-server/lang/lexer.rkt")
            (lib "racket-language-server/main.rkt")
            (lib "racket-language-server/protocol/methods.rkt")
            (lib "racket-language-server/lang/document.rkt")
            (lib "racket-language-server/protocol/json-util.rkt")
            (lib "racket-language-server/lang/worker.rkt")
            (lib "racket-language-server/protocol/notifications.rkt")
            (lib "racket-language-server/lang/indent.rkt")
            (lib "racket-language-server/lang/check-syntax.rkt")
            (lib "racket-language-server/lang/workspace.rkt")))
          (name . "racket-language-server")
          (nix-sha256
           .
           "0aiwzm7a0h4kjbn9hafjilgb903y60n8wp5qwkah4mkbf1sfszks")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:david@craven.ch . #t)
                   (ide . #t)
                   (language-server-protocol . #t)
                   (lsp . #t)
                   (ring:2 . #t)))
          (source . "https://github.com/theia-ide/racket-language-server.git")
          (tags . ("ide" "language-server-protocol" "lsp"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "6a76fb30392800f8672499501dcd659c3d5eacb9")
                          (source
                           .
                           "https://github.com/theia-ide/racket-language-server.git")
                          (source_url
                           .
                           "https://github.com/theia-ide/racket-language-server.git")))))))
 ("racket-lib"
  .
  #hash((author
         .
         "eli@racket-lang.org jay@racket-lang.org matthias@racket-lang.org mflatt@racket-lang.org robby@racket-lang.org ryanc@racket-lang.org samth@racket-lang.org")
        (checksum . "368ea6923f22d9a5f45d6ba5762a9284231d3a26")
        (dependencies
         .
         (("racket-win32-i386-3" #:platform "win32\\i386")
          ("racket-win32-x86_64-3" #:platform "win32\\x86_64")
          ("racket-x86_64-linux-natipkg-3" #:platform "x86_64-linux-natipkg")
          ("racket-x86_64-macosx-3" #:platform "x86_64-macosx")
          ("racket-i386-macosx-3" #:platform "i386-macosx")
          ("racket-ppc-macosx-3" #:platform "ppc-macosx")
          ("db-ppc-macosx" #:platform "ppc-macosx")
          ("db-win32-i386" #:platform "win32\\i386")
          ("db-win32-x86_64" #:platform "win32\\x86_64")
          ("db-x86_64-linux-natipkg" #:platform "x86_64-linux-natipkg")
          ("com-win32-i386" #:platform "win32\\i386")
          ("com-win32-x86_64" #:platform "win32\\x86_64")))
        (dependency-names . ())
        (description
         .
         "eli@racket-lang.org jay@racket-lang.org matthias@racket-lang.org mflatt@racket-lang.org robby@racket-lang.org ryanc@racket-lang.org samth@racket-lang.org")
        (modules . ())
        (name . "racket-lib")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/racket-lib.zip")
        (tags . ())))
 ("racket-locale"
  .
  #hasheq((author . "johnstonskj@gmail.com")
          (authors . ("johnstonskj@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "racket-locale"
                    "doc/racket-locale@racket-locale/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/racket-locale.txt")
                 (test-failure-log
                  .
                  "server/built/test-fail/racket-locale.txt")
                 (test-success-log . #f)))
          (checksum . "4381d42d76548b6b52522349955be55ee46e3700")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "rackunit-lib"
            "racket-index"
            "gregor-lib"
            "scribble-lib"
            "racket-doc"
            "sandbox-lib"
            "cover-coveralls"))
          (dependency-names
           .
           ("base"
            "rackunit-lib"
            "racket-index"
            "gregor-lib"
            "scribble-lib"
            "racket-doc"
            "sandbox-lib"
            "cover-coveralls"))
          (description . "More, and complete, locale tools. ")
          (implies . ())
          (last-checked . 1557339743)
          (last-edit . 1538148480)
          (last-updated . 1538092693)
          (modules
           .
           ((lib "locale/main.rkt")
            (lib "locale/tests/test-doc-complete.rkt")
            (lib "locale/language-info.rkt")
            (lib "locale/private/system-type.rkt")
            (lib "locale/scribblings/format.scrbl")
            (lib "locale/tests/locale.rkt")
            (lib "locale/private/clocale.rkt")
            (lib "locale/scribblings/racket-locale.scrbl")
            (lib "locale/tests/format.rkt")
            (lib "locale/scribblings/language-info.scrbl")
            (lib "locale/tests/format-macosx.rkt")
            (lib "locale/private/matches.rkt")
            (lib "locale/private/cuname.rkt")
            (lib "locale/format.rkt")
            (lib "locale/tests/format-linux.rkt")
            (lib "locale/scribblings/locale.scrbl")))
          (name . "racket-locale")
          (nix-sha256
           .
           "0i90x4rm9ng0yfick7wiz1dyqx0hmjdlpxvv7v834dkcd31s72vl")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:johnstonskj@gmail.com . #t)
                   (i18n . #t)
                   (locale . #t)
                   (ring:2 . #t)))
          (source . "https://github.com/johnstonskj/racket-locale.git")
          (tags . ("i18n" "locale"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "4381d42d76548b6b52522349955be55ee46e3700")
                          (source
                           .
                           "https://github.com/johnstonskj/racket-locale.git")
                          (source_url
                           .
                           "https://github.com/johnstonskj/racket-locale.git")))))))
 ("racket-poppler"
  .
  #hasheq((author . "jensaxel@soegaard.net")
          (authors . ("jensaxel@soegaard.net"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/racket-poppler.txt")
                 (test-failure-log
                  .
                  "server/built/test-fail/racket-poppler.txt")
                 (test-success-log . #f)))
          (checksum . "5ba20818706d68902ef296577087eb442f38738a")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("draw-lib"
            "slideshow-lib"
            "web-server-lib"
            "base"
            "pict"
            ("poppler-x86-64-macosx" #:platform "x86_64-macosx")
            ("poppler-i386-macosx" #:platform "i386-macosx")
            ("poppler-ppc-macosx" #:platform "ppc-macosx")
            ("poppler-win32-x86-64" #:platform "win32\\x86_64")
            ("poppler-win32-i386" #:platform "win32\\i386")
            "at-exp-lib"
            "rackunit-lib"
            "scribble-lib"
            "racket-doc"
            "draw-doc"
            "pict-doc"))
          (dependency-names
           .
           ("draw-lib"
            "slideshow-lib"
            "web-server-lib"
            "base"
            "pict"
            "poppler-x86-64-macosx"
            "poppler-i386-macosx"
            "poppler-ppc-macosx"
            "poppler-win32-x86-64"
            "poppler-win32-i386"
            "at-exp-lib"
            "rackunit-lib"
            "scribble-lib"
            "racket-doc"
            "draw-doc"
            "pict-doc"))
          (description
           .
           "Read, search and render pdfs. Use LaTeX in scribble and slidehow.")
          (implies . ())
          (last-checked . 1557339743)
          (last-edit . 1397498742)
          (last-updated . 1502816351)
          (modules
           .
           ((lib "racket-poppler/render-tex.rkt")
            (lib "racket-poppler/examples/test-pdf-functions.rkt")
            (lib "racket-poppler/libs.rkt")
            (lib "racket-poppler/examples/test-render-tex.rkt")
            (lib "racket-poppler/main.rkt")
            (lib "racket-poppler/ffi.rkt")))
          (name . "racket-poppler")
          (nix-sha256
           .
           "0ahcrkv8vlylpi5nyihijpg1kfpfc0i329zgllqm93mxv2x8d2lh")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:jensaxel@soegaard.net . #t)
                   (pdf . #t)
                   (poppler . #t)
                   (ring:1 . #t)
                   (scribble . #t)
                   (slideshow . #t)))
          (source . "github://github.com/soegaard/racket-poppler/master")
          (tags . ("pdf" "poppler" "scribble" "slideshow"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "5ba20818706d68902ef296577087eb442f38738a")
                          (source
                           .
                           "github://github.com/soegaard/racket-poppler/master")
                          (source_url
                           .
                           "http://github.com/soegaard/racket-poppler/tree/master")))))))
 ("racket-ppc-macosx-2"
  .
  #hash((author . "mflatt@racket-lang.org")
        (authors . ("mflatt@racket-lang.org"))
        (build
         .
         #hash((conflicts-log . #f)
               (dep-failure-log . #f)
               (docs . ())
               (failure-log . #f)
               (min-failure-log . #f)
               (success-log . #f)
               (test-failure-log . #f)
               (test-success-log . #f)))
        (checksum . "a36e58d540359092d684bd3a277d0068cff04afa")
        (checksum-error . #f)
        (conflicts . ())
        (dependencies . ("base"))
        (dependency-names . ("base"))
        (description . "native libraries for \"racket\" package")
        (implies . ())
        (last-checked . 1557339743)
        (last-edit . 1452304685)
        (last-updated . 1502816352)
        (modules . ())
        (name . "racket-ppc-macosx-2")
        (ring . 0)
        (search-terms
         .
         #hasheq((author:mflatt@racket-lang.org . #t)
                 (main-distribution . #t)
                 (ring:0 . #t)))
        (source
         .
         "https://pkg-sources.racket-lang.org/pkgs/a36e58d540359092d684bd3a277d0068cff04afa/racket-ppc-macosx-2.zip")
        (tags . ("main-distribution"))
        (versions
         .
         #hash((default
                .
                #hasheq((checksum
                         .
                         "a36e58d540359092d684bd3a277d0068cff04afa")
                        (source
                         .
                         "https://pkg-sources.racket-lang.org/pkgs/a36e58d540359092d684bd3a277d0068cff04afa/racket-ppc-macosx-2.zip")
                        (source_url
                         .
                         "https://pkg-sources.racket-lang.org/pkgs/a36e58d540359092d684bd3a277d0068cff04afa/racket-ppc-macosx-2.zip")))
               ("5.3.4"
                .
                #hash((checksum . "9f098dddde7f217879070816090c1e8e74d49432")
                      (source
                       .
                       "https://pkg-sources.racket-lang.org/pkgs/empty.zip")
                      (source_url
                       .
                       "https://pkg-sources.racket-lang.org/pkgs/empty.zip")))
               ("5.3.5"
                .
                #hash((checksum . "9f098dddde7f217879070816090c1e8e74d49432")
                      (source
                       .
                       "https://pkg-sources.racket-lang.org/pkgs/empty.zip")
                      (source_url
                       .
                       "https://pkg-sources.racket-lang.org/pkgs/empty.zip")))
               ("5.3.6"
                .
                #hash((checksum . "9f098dddde7f217879070816090c1e8e74d49432")
                      (source
                       .
                       "https://pkg-sources.racket-lang.org/pkgs/empty.zip")
                      (source_url
                       .
                       "https://pkg-sources.racket-lang.org/pkgs/empty.zip")))))))
 ("racket-ppc-macosx-3"
  .
  #hash((author . "mflatt@racket-lang.org")
        (checksum . "bdaab4af038bf2c77306d8be8bd6461a9c28863c")
        (dependencies . ("base"))
        (dependency-names . ("base"))
        (description . "mflatt@racket-lang.org")
        (modules . ())
        (name . "racket-ppc-macosx-3")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/racket-ppc-macosx-3.zip")
        (tags . ())))
 ("racket-processing"
  .
  #hasheq((author . "stephen@thoughtstem.com")
          (authors . ("stephen@thoughtstem.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . "server/built/deps/racket-processing.txt")
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/racket-processing.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/racket-processing.txt")))
          (checksum . "c4c51b528fa10fe69f89cc7b7c27bb3388ad11c7")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("racket-to"))
          (dependency-names . ("racket-to"))
          (description
           .
           "Allows processing to be written with Lispy syntax in DrRacket.  Depends on the racket-to package, which transpiles to processing.")
          (implies . ())
          (last-checked . 1557339744)
          (last-edit . 1515359889)
          (last-updated . 1516238294)
          (modules
           .
           ((lib "racket-processing/main.rkt")
            (lib "racket-processing/processing-module.rkt")))
          (name . "racket-processing")
          (nix-sha256
           .
           "0q8y6qqz3xk5fsibiqs92a8iziv3zd21rklpnfrann7bb7xi1m95")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-dep-fail: . #t)
                   (:build-success: . #t)
                   (author:stephen@thoughtstem.com . #t)
                   (education . #t)
                   (ring:2 . #t)))
          (source . "https://github.com/thoughtstem/racket-processing.git")
          (tags . ("education"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "c4c51b528fa10fe69f89cc7b7c27bb3388ad11c7")
                          (source
                           .
                           "https://github.com/thoughtstem/racket-processing.git")
                          (source_url
                           .
                           "https://github.com/thoughtstem/racket-processing.git")))))))
 ("racket-quandl"
  .
  #hasheq((author . "malcolm.still@gmail.com")
          (authors . ("malcolm.still@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "racket-quandl"
                    "doc/racket-quandl@racket-quandl/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/racket-quandl.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/racket-quandl.txt")))
          (checksum . "2bc231f7981dfcd663c87ce46b4ff0876723a7ef")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "rackunit-lib" "scribble-lib" "racket-doc"))
          (dependency-names
           .
           ("base" "rackunit-lib" "scribble-lib" "racket-doc"))
          (description
           .
           "Grab data from Quandl with racket for fun and profit")
          (implies . ())
          (last-checked . 1557339744)
          (last-edit . 1456769446)
          (last-updated . 1502816354)
          (modules
           .
           ((lib "racket-quandl/scribblings/racket-quandl.scrbl")
            (lib "racket-quandl/main.rkt")))
          (name . "racket-quandl")
          (nix-sha256
           .
           "1jhm0almw4b2q3bn1wq49hqr5b8b11v6jp4kq9n92wr75wpnqp1h")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:malcolm.still@gmail.com . #t)
                   (finance . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/malcolmstill/racket-quandl")
          (tags . ("finance"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "2bc231f7981dfcd663c87ce46b4ff0876723a7ef")
                          (source
                           .
                           "git://github.com/malcolmstill/racket-quandl")
                          (source_url
                           .
                           "http://github.com/malcolmstill/racket-quandl/tree/master")))))))
 ("racket-rackunit-grade"
  .
  #hasheq((author . "ifigueroap@gmail.com")
          (authors . ("ifigueroap@gmail.com"))
          (build
           .
           #hash((conflicts-log . "conflicts.txt")
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("extract"
                    "rackunit-grade"
                    "doc/rackunit-grade@racket-rackunit-grade/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log
                  .
                  "server/built/install/racket-rackunit-grade.txt")
                 (test-failure-log
                  .
                  "server/built/test-fail/racket-rackunit-grade.txt")
                 (test-success-log . #f)))
          (checksum . "92526d7ced3b4cf7b5323752f20d8f36752e69b6")
          (checksum-error . #f)
          (conflicts . ("rackunit-grade"))
          (dependencies
           .
           ("base" "rackunit" "doc-coverage" "scribble-lib" "racket-doc"))
          (dependency-names
           .
           ("base" "rackunit" "doc-coverage" "scribble-lib" "racket-doc"))
          (description . "")
          (implies . ())
          (last-checked . 1557339744)
          (last-edit . 1482781554)
          (last-updated . 1502816354)
          (modules
           .
           ((lib "rackunit/raco-grade.rkt")
            (lib "rackunit/scribblings/rackunit-grade.scrbl")
            (lib "rackunit/grade.rkt")))
          (name . "racket-rackunit-grade")
          (nix-sha256
           .
           "1yh3xz8j01i0chlxaqqirpcrh6ynlbknhfz1w7j7df8hjyqqkdmp")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-conflicts: . #t)
                   (:build-success: . #t)
                   (:conflicts: . #t)
                   (:docs-error: . #t)
                   (:docs: . #t)
                   (:no-desc: . #t)
                   (:no-tag: . #t)
                   (author:ifigueroap@gmail.com . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/ifigueroap/racket-rackunit-grade")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "92526d7ced3b4cf7b5323752f20d8f36752e69b6")
                          (source
                           .
                           "git://github.com/ifigueroap/racket-rackunit-grade")
                          (source_url
                           .
                           "http://github.com/ifigueroap/racket-rackunit-grade/tree/master")))))))
 ("racket-route-match"
  .
  #hasheq((author . "dk-junker@ya.ru")
          (authors . ("dk-junker@ya.ru"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "racket-route-match"
                    "doc/racket-route-match@racket-route-match/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/racket-route-match.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/racket-route-match.txt")))
          (checksum . "c9800e602f0e58bf6e0273d7dbdb86d28f9047cb")
          (checksum-error . #f)
          (conflicts . ())
          (date-added . 1552731295)
          (dependencies
           .
           ("base" "rackunit-lib" "scribble-lib" "racket-doc" "rackunit-lib"))
          (dependency-names
           .
           ("base" "rackunit-lib" "scribble-lib" "racket-doc" "rackunit-lib"))
          (description
           .
           "racket-route-match is a library for matching URL routes. It uses the same routing syntax as used by popular Ruby web frameworks like Ruby on Rails and Sinatra.")
          (implies . ())
          (last-checked . 1557339745)
          (last-edit . 1552736601)
          (last-updated . 1553098680)
          (modules
           .
           ((lib "racket-route-match/main.rkt")
            (lib "racket-route-match/scribblings/racket-route-match.scrbl")
            (lib "racket-route-match/test.rkt")))
          (name . "racket-route-match")
          (nix-sha256
           .
           "0d4y7668a0lkk0569bc14qgil1a465fjmpckzaxn45krg97am1y9")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:dk-junker@ya.ru . #t)
                   (ring:2 . #t)
                   (route . #t)))
          (source . "https://github.com/Junker/racket-route-match.git")
          (tags . ("route"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "c9800e602f0e58bf6e0273d7dbdb86d28f9047cb")
                          (source
                           .
                           "https://github.com/Junker/racket-route-match.git")
                          (source_url
                           .
                           "https://github.com/Junker/racket-route-match.git")))))))
 ("racket-scaffold"
  .
  #hasheq((author . "johnstonskj@gmail.com")
          (authors . ("johnstonskj@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "scaffold"
                    "doc/scaffold@racket-scaffold/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/racket-scaffold.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/racket-scaffold.txt")))
          (checksum . "8613daf76e46fbf320de1230565e67de17fb92f5")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "rackunit-lib"
            "racket-index"
            "dali"
            "scribble-lib"
            "scribble-doc"
            "racket-doc"
            "sandbox-lib"
            "cover-coveralls"))
          (dependency-names
           .
           ("base"
            "rackunit-lib"
            "racket-index"
            "dali"
            "scribble-lib"
            "scribble-doc"
            "racket-doc"
            "sandbox-lib"
            "cover-coveralls"))
          (description
           .
           "Simple templated content generator integrated with raco")
          (implies . ())
          (last-checked . 1557339745)
          (last-edit . 1536259205)
          (last-updated . 1539972965)
          (modules
           .
           ((lib "scaffold/scribblings/scaffold.scrbl")
            (lib "scaffold/plank-files/test-doc-complete.rkt")
            (lib "scaffold/plank-files/info-collection.rkt")
            (lib "scaffold/private/system.rkt")
            (lib "scaffold/plank-files/scribble-module.scrbl")
            (lib "scaffold/plank-files/info-multi-package.rkt")
            (lib "scaffold/plank-files/module.rkt")
            (lib "scaffold/plank-files/test-module.rkt")
            (lib "scaffold/private/logging.rkt")
            (lib "scaffold/plank-files/info-single-package.rkt")
            (lib "scaffold/introspect.rkt")
            (lib "scaffold/planks.rkt")
            (lib "scaffold/main.rkt")
            (lib "scaffold/test/test-doc-complete.rkt")
            (lib "scaffold/plank-files/scribble-top.scrbl")))
          (name . "racket-scaffold")
          (nix-sha256
           .
           "0qg99k46aikk5jzsgnvgpk59fdg1b95i7d4afv7rs92pzyd9vvdf")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:johnstonskj@gmail.com . #t)
                   (raco . #t)
                   (ring:2 . #t)))
          (source . "https://github.com/johnstonskj/racket-scaffold.git")
          (tags . ("raco"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "8613daf76e46fbf320de1230565e67de17fb92f5")
                          (source
                           .
                           "https://github.com/johnstonskj/racket-scaffold.git")
                          (source_url
                           .
                           "https://github.com/johnstonskj/racket-scaffold.git")))))))
 ("racket-school-mystery-languages"
  .
  #hasheq((author . "justinpombrio@cs.brown.edu")
          (authors . ("justinpombrio@cs.brown.edu"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log
                  .
                  "server/built/deps/racket-school-mystery-languages.txt")
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log
                  .
                  "server/built/install/racket-school-mystery-languages.txt")
                 (test-failure-log
                  .
                  "server/built/test-fail/racket-school-mystery-languages.txt")
                 (test-success-log . #f)))
          (checksum . "757295f338d9d3937046782f9c910f8e39d42ef8")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ())
          (dependency-names . ())
          (description
           .
           "Some labs will have you explore these languages. One syntax, many semantics. (2017)")
          (implies . ())
          (last-checked . 1557339745)
          (last-edit . 1499403519)
          (last-updated . 1502816355)
          (modules
           .
           ((lib "RacketSchool/Records2.rkt")
            (lib "RacketSchool/private/mystery-records.rkt")
            (lib "RacketSchool/private/mystery-lang.rkt")
            (lib "RacketSchool/private/basic.rkt")
            (lib "RacketSchool/Records3.rkt")
            (lib "RacketSchool/Functions1.rkt")
            (lib "RacketSchool/RecordsAll.rkt")
            (lib "RacketSchool/private/testing.rkt")
            (lib "RacketSchool/private/event-loop.rkt")
            (lib "RacketSchool/Functions2.rkt")
            (lib "RacketSchool/private/mystery-variables.rkt")
            (lib "RacketSchool/private/tests.rkt")
            (lib "RacketSchool/FunctionsAll.rkt")
            (lib "RacketSchool/Variables3.rkt")
            (lib "RacketSchool/Functions3.rkt")
            (lib "RacketSchool/private/mystery-semantics-records.rkt")
            (lib "RacketSchool/public/basic.rkt")
            (lib "RacketSchool/private/mystery-semantics-functions.rkt")
            (lib "RacketSchool/private/mystery-functions.rkt")
            (lib "RacketSchool/private/mystery-semantics-variables.rkt")
            (lib "RacketSchool/VariablesAll.rkt")
            (lib "RacketSchool/Variables1.rkt")
            (lib "RacketSchool/private/mystery.rkt")
            (lib "RacketSchool/Variables2.rkt")
            (lib "RacketSchool/Records1.rkt")))
          (name . "racket-school-mystery-languages")
          (nix-sha256
           .
           "143jgb0v464wvm88y42d38ydw7d9kniylc8qlj75w4lw23w2w9k9")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-dep-fail: . #t)
                   (:build-success: . #t)
                   (:no-tag: . #t)
                   (author:justinpombrio@cs.brown.edu . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/justinpombrio/RacketSchool")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "757295f338d9d3937046782f9c910f8e39d42ef8")
                          (source
                           .
                           "git://github.com/justinpombrio/RacketSchool")
                          (source_url
                           .
                           "http://github.com/justinpombrio/RacketSchool/tree/master")))))))
 ("racket-test"
  .
  #hash((author
         .
         "eli@racket-lang.org jay@racket-lang.org matthias@racket-lang.org mflatt@racket-lang.org robby@racket-lang.org ryanc@racket-lang.org samth@racket-lang.org")
        (checksum . "7bd4b838a49bff998adff1aee8bdd3d634fc2b02")
        (dependencies
         .
         ("compiler-lib"
          "sandbox-lib"
          "compatibility-lib"
          "eli-tester"
          "planet-lib"
          "net-lib"
          "net-test"
          "serialize-cstruct-lib"
          "cext-lib"
          "pconvert-lib"
          "racket-test-core"
          "web-server-lib"
          "rackunit-lib"
          "at-exp-lib"
          "option-contract-lib"
          "srfi-lib"
          "scribble-lib"
          "racket-index"
          "scheme-lib"
          "base"
          "data-lib"))
        (dependency-names
         .
         ("compiler-lib"
          "sandbox-lib"
          "compatibility-lib"
          "eli-tester"
          "planet-lib"
          "net-lib"
          "net-test"
          "serialize-cstruct-lib"
          "cext-lib"
          "pconvert-lib"
          "racket-test-core"
          "web-server-lib"
          "rackunit-lib"
          "at-exp-lib"
          "option-contract-lib"
          "srfi-lib"
          "scribble-lib"
          "racket-index"
          "scheme-lib"
          "base"
          "data-lib"))
        (description
         .
         "eli@racket-lang.org jay@racket-lang.org matthias@racket-lang.org mflatt@racket-lang.org robby@racket-lang.org ryanc@racket-lang.org samth@racket-lang.org")
        (modules . ())
        (name . "racket-test")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/racket-test.zip")
        (tags . ())))
 ("racket-test-core"
  .
  #hash((author
         .
         "eli@racket-lang.org jay@racket-lang.org matthias@racket-lang.org mflatt@racket-lang.org robby@racket-lang.org ryanc@racket-lang.org samth@racket-lang.org")
        (checksum . "d6f0076f272b9753bdda545f5ca49430d60b7d9b")
        (dependencies
         .
         ("base"
          "zo-lib"
          "at-exp-lib"
          "serialize-cstruct-lib"
          "dynext-lib"
          "sandbox-lib"))
        (dependency-names
         .
         ("base"
          "zo-lib"
          "at-exp-lib"
          "serialize-cstruct-lib"
          "dynext-lib"
          "sandbox-lib"))
        (description
         .
         "eli@racket-lang.org jay@racket-lang.org matthias@racket-lang.org mflatt@racket-lang.org robby@racket-lang.org ryanc@racket-lang.org samth@racket-lang.org")
        (modules . ())
        (name . "racket-test-core")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/racket-test-core.zip")
        (tags . ())))
 ("racket-test-extra"
  .
  #hash((author
         .
         "eli@racket-lang.org jay@racket-lang.org matthias@racket-lang.org mflatt@racket-lang.org robby@racket-lang.org ryanc@racket-lang.org samth@racket-lang.org")
        (checksum . "fcb054d1df805e939f7e1dcfa459911401828d74")
        (dependencies
         .
         ("base"
          "redex-lib"
          "scheme-lib"
          "rackunit-lib"
          "serialize-cstruct-lib"))
        (dependency-names
         .
         ("base"
          "redex-lib"
          "scheme-lib"
          "rackunit-lib"
          "serialize-cstruct-lib"))
        (description
         .
         "eli@racket-lang.org jay@racket-lang.org matthias@racket-lang.org mflatt@racket-lang.org robby@racket-lang.org ryanc@racket-lang.org samth@racket-lang.org")
        (modules . ())
        (name . "racket-test-extra")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/racket-test-extra.zip")
        (tags . ())))
 ("racket-to"
  .
  #hasheq((author . "stephen@thoughtstem.com")
          (authors . ("stephen@thoughtstem.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . "server/built/deps/racket-to.txt")
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/racket-to.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/racket-to.txt")))
          (checksum . "c76caf3721c09d68c5871a64481b15be72293259")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ())
          (dependency-names . ())
          (description
           .
           "A set of lightweight transpilers from racket to other languages.  Entirely for educational and in-class demo purposes.  Don't use this for anything important yet...")
          (implies . ())
          (last-checked . 1557339745)
          (last-edit . 1515359748)
          (last-updated . 1525457907)
          (modules
           .
           ((lib "racket-to/python.rkt")
            (lib "racket-to/processing.rkt")
            (lib "racket-to/racket2blank.rkt")
            (lib "racket-to/javascript.rkt")))
          (name . "racket-to")
          (nix-sha256
           .
           "0nsn9gn2ffxks3q0xn9iw50r4k5cdzm2bmbpnyzc2qij4wgxcild")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-dep-fail: . #t)
                   (:build-success: . #t)
                   (:no-tag: . #t)
                   (author:stephen@thoughtstem.com . #t)
                   (ring:2 . #t)))
          (source . "https://github.com/thoughtstem/racket-to.git")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "c76caf3721c09d68c5871a64481b15be72293259")
                          (source
                           .
                           "https://github.com/thoughtstem/racket-to.git")
                          (source_url
                           .
                           "https://github.com/thoughtstem/racket-to.git")))))))
 ("racket-to-python"
  .
  #hasheq((author . "stephen@thoughtstem.com")
          (authors . ("stephen@thoughtstem.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . "server/built/deps/racket-to-python.txt")
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/racket-to-python.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/racket-to-python.txt")))
          (checksum . "5726abfb20b8411d05482d07ff384ecae779a010")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ())
          (dependency-names . ())
          (description
           .
           "My toolset for working with Python as a compilation target from Racket.  It's basically just a lightweight wrapper around the Hy Language, which is basically a Lisp that compiles to Python.")
          (implies . ())
          (last-checked . 1557339745)
          (last-edit . 1526942885)
          (last-updated . 1526942885)
          (modules
           .
           ((lib "racket-to-python/python-module.rkt")
            (lib "racket-to-python/main.rkt")
            (lib "racket-to-python/python.rkt")
            (lib "racket-to-python/python-extras.rkt")))
          (name . "racket-to-python")
          (nix-sha256
           .
           "1mpnm177mw36y5q6pglcfxfrsy08v1nn383b3fks0lljlm1m7r2z")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-dep-fail: . #t)
                   (:build-success: . #t)
                   (:no-tag: . #t)
                   (author:stephen@thoughtstem.com . #t)
                   (ring:2 . #t)))
          (source . "https://github.com/thoughtstem/racket-to-python.git")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "5726abfb20b8411d05482d07ff384ecae779a010")
                          (source
                           .
                           "https://github.com/thoughtstem/racket-to-python.git")
                          (source_url
                           .
                           "https://github.com/thoughtstem/racket-to-python.git")))))))
 ("racket-weekend"
  .
  #hasheq((author . "jesse@lisp.sh")
          (authors . ("jesse@lisp.sh"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/racket-weekend.txt")
                 (test-failure-log
                  .
                  "server/built/test-fail/racket-weekend.txt")
                 (test-success-log . #f)))
          (checksum . "8f24bf44676eb9e56e9a9da14b8eeeaa6410858d")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "rackunit-lib"
            "web-server-lib"
            "net-cookies-lib"
            "web-server-lib"))
          (dependency-names
           .
           ("base"
            "rackunit-lib"
            "web-server-lib"
            "net-cookies-lib"
            "web-server-lib"))
          (description
           .
           "Racket Weekend is a short course to help working programmers get started with Racket. This package contains the course's code samples.")
          (implies . ())
          (last-checked . 1557339745)
          (last-edit . 1530504616)
          (last-updated . 1530074715)
          (modules
           .
           ((lib "racket-weekend/lesson-08.rkt")
            (lib "racket-weekend/lesson-02.rkt")
            (lib "racket-weekend/lesson-04.rkt")
            (lib "racket-weekend/lesson-07.rkt")
            (lib "racket-weekend/lesson-06.rkt")
            (lib "racket-weekend/lesson-05.rkt")
            (lib "racket-weekend/lesson-01.rkt")
            (lib "racket-weekend/lesson-09.rkt")
            (lib "racket-weekend/lesson-03.rkt")
            (lib "racket-weekend/respond.rkt")
            (lib "racket-weekend/lesson-11.rkt")))
          (name . "racket-weekend")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:jesse@lisp.sh . #t)
                   (beginners . #t)
                   (education . #t)
                   (ring:2 . #t)))
          (source . "https://racketweekend.com/racket-weekend.zip")
          (tags . ("beginners" "education"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "8f24bf44676eb9e56e9a9da14b8eeeaa6410858d")
                          (source
                           .
                           "https://racketweekend.com/racket-weekend.zip")
                          (source_url
                           .
                           "https://racketweekend.com/racket-weekend.zip")))))))
 ("racket-win32-i386"
  .
  #hash((author . "mflatt@racket-lang.org")
        (authors . ("mflatt@racket-lang.org"))
        (build
         .
         #hash((conflicts-log . #f)
               (dep-failure-log . #f)
               (docs . ())
               (failure-log . #f)
               (min-failure-log . #f)
               (success-log . #f)
               (test-failure-log . #f)
               (test-success-log . #f)))
        (checksum . "c57a6dae91081a4284d329364ad566c108d84747")
        (checksum-error . #f)
        (conflicts . ())
        (dependencies . ("base"))
        (dependency-names . ("base"))
        (description . "native libraries for \"base\" package")
        (implies . ())
        (last-checked . 1557339747)
        (last-edit . 1452304685)
        (last-updated . 1502816355)
        (modules . ())
        (name . "racket-win32-i386")
        (ring . 0)
        (search-terms
         .
         #hasheq((:no-tag: . #t)
                 (author:mflatt@racket-lang.org . #t)
                 (ring:0 . #t)))
        (source
         .
         "https://pkg-sources.racket-lang.org/pkgs/c57a6dae91081a4284d329364ad566c108d84747/racket-win32-i386.zip")
        (tags . ())
        (versions
         .
         #hash((default
                .
                #hasheq((checksum
                         .
                         "c57a6dae91081a4284d329364ad566c108d84747")
                        (source
                         .
                         "https://pkg-sources.racket-lang.org/pkgs/c57a6dae91081a4284d329364ad566c108d84747/racket-win32-i386.zip")
                        (source_url
                         .
                         "https://pkg-sources.racket-lang.org/pkgs/c57a6dae91081a4284d329364ad566c108d84747/racket-win32-i386.zip")))
               ("5.3.4"
                .
                #hash((checksum . "9f098dddde7f217879070816090c1e8e74d49432")
                      (source
                       .
                       "https://pkg-sources.racket-lang.org/pkgs/empty.zip")
                      (source_url
                       .
                       "https://pkg-sources.racket-lang.org/pkgs/empty.zip")))
               ("5.3.5"
                .
                #hash((checksum . "9f098dddde7f217879070816090c1e8e74d49432")
                      (source
                       .
                       "https://pkg-sources.racket-lang.org/pkgs/empty.zip")
                      (source_url
                       .
                       "https://pkg-sources.racket-lang.org/pkgs/empty.zip")))
               ("5.3.6"
                .
                #hash((checksum . "9f098dddde7f217879070816090c1e8e74d49432")
                      (source
                       .
                       "https://pkg-sources.racket-lang.org/pkgs/empty.zip")
                      (source_url
                       .
                       "https://pkg-sources.racket-lang.org/pkgs/empty.zip")))))))
 ("racket-win32-i386-2"
  .
  #hash((author . "mflatt@racket-lang.org")
        (authors . ("mflatt@racket-lang.org"))
        (build
         .
         #hash((conflicts-log . #f)
               (dep-failure-log . #f)
               (docs . ())
               (failure-log . #f)
               (min-failure-log . #f)
               (success-log . #f)
               (test-failure-log . #f)
               (test-success-log . #f)))
        (checksum . "5eeac0afec99043631567829e4450694c1a913e2")
        (checksum-error . #f)
        (conflicts . ())
        (dependencies . ("base"))
        (dependency-names . ("base"))
        (description . "native libraries for \"racket\" package")
        (implies . ())
        (last-checked . 1557339747)
        (last-edit . 1485991969)
        (last-updated . 1502816356)
        (modules . ())
        (name . "racket-win32-i386-2")
        (ring . 0)
        (search-terms
         .
         #hasheq((author:mflatt@racket-lang.org . #t)
                 (main-distribution . #t)
                 (ring:0 . #t)))
        (source
         .
         "https://pkg-sources.racket-lang.org/pkgs/5eeac0afec99043631567829e4450694c1a913e2/racket-win32-i386-2.zip")
        (tags . ("main-distribution"))
        (versions
         .
         #hash((default
                .
                #hasheq((checksum
                         .
                         "5eeac0afec99043631567829e4450694c1a913e2")
                        (source
                         .
                         "https://pkg-sources.racket-lang.org/pkgs/5eeac0afec99043631567829e4450694c1a913e2/racket-win32-i386-2.zip")
                        (source_url
                         .
                         "https://pkg-sources.racket-lang.org/pkgs/5eeac0afec99043631567829e4450694c1a913e2/racket-win32-i386-2.zip")))
               ("5.3.4"
                .
                #hash((checksum . "9f098dddde7f217879070816090c1e8e74d49432")
                      (source
                       .
                       "https://pkg-sources.racket-lang.org/pkgs/empty.zip")
                      (source_url
                       .
                       "https://pkg-sources.racket-lang.org/pkgs/empty.zip")))
               ("5.3.5"
                .
                #hash((checksum . "9f098dddde7f217879070816090c1e8e74d49432")
                      (source
                       .
                       "https://pkg-sources.racket-lang.org/pkgs/empty.zip")
                      (source_url
                       .
                       "https://pkg-sources.racket-lang.org/pkgs/empty.zip")))
               ("5.3.6"
                .
                #hash((checksum . "9f098dddde7f217879070816090c1e8e74d49432")
                      (source
                       .
                       "https://pkg-sources.racket-lang.org/pkgs/empty.zip")
                      (source_url
                       .
                       "https://pkg-sources.racket-lang.org/pkgs/empty.zip")))))))
 ("racket-win32-i386-3"
  .
  #hash((author . "mflatt@racket-lang.org")
        (checksum . "8fb65942b006c4607777ce85322e60e055546089")
        (dependencies . ("base"))
        (dependency-names . ("base"))
        (description . "mflatt@racket-lang.org")
        (modules . ())
        (name . "racket-win32-i386-3")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/racket-win32-i386-3.zip")
        (tags . ())))
 ("racket-win32-x86_64"
  .
  #hash((author . "mflatt@racket-lang.org")
        (authors . ("mflatt@racket-lang.org"))
        (build
         .
         #hash((conflicts-log . #f)
               (dep-failure-log . #f)
               (docs . ())
               (failure-log . #f)
               (min-failure-log . #f)
               (success-log . #f)
               (test-failure-log . #f)
               (test-success-log . #f)))
        (checksum . "1026e430bb077a696084e702f5e8889f5b7dd55e")
        (checksum-error . #f)
        (conflicts . ())
        (dependencies . ("base"))
        (dependency-names . ("base"))
        (description . "native libraries for \"base\" package")
        (implies . ())
        (last-checked . 1557339748)
        (last-edit . 1452304685)
        (last-updated . 1502816358)
        (modules . ())
        (name . "racket-win32-x86_64")
        (ring . 0)
        (search-terms
         .
         #hasheq((:no-tag: . #t)
                 (author:mflatt@racket-lang.org . #t)
                 (ring:0 . #t)))
        (source
         .
         "https://pkg-sources.racket-lang.org/pkgs/1026e430bb077a696084e702f5e8889f5b7dd55e/racket-win32-x86_64.zip")
        (tags . ())
        (versions
         .
         #hash((default
                .
                #hasheq((checksum
                         .
                         "1026e430bb077a696084e702f5e8889f5b7dd55e")
                        (source
                         .
                         "https://pkg-sources.racket-lang.org/pkgs/1026e430bb077a696084e702f5e8889f5b7dd55e/racket-win32-x86_64.zip")
                        (source_url
                         .
                         "https://pkg-sources.racket-lang.org/pkgs/1026e430bb077a696084e702f5e8889f5b7dd55e/racket-win32-x86_64.zip")))
               ("5.3.4"
                .
                #hash((checksum . "9f098dddde7f217879070816090c1e8e74d49432")
                      (source
                       .
                       "https://pkg-sources.racket-lang.org/pkgs/empty.zip")
                      (source_url
                       .
                       "https://pkg-sources.racket-lang.org/pkgs/empty.zip")))
               ("5.3.5"
                .
                #hash((checksum . "9f098dddde7f217879070816090c1e8e74d49432")
                      (source
                       .
                       "https://pkg-sources.racket-lang.org/pkgs/empty.zip")
                      (source_url
                       .
                       "https://pkg-sources.racket-lang.org/pkgs/empty.zip")))
               ("5.3.6"
                .
                #hash((checksum . "9f098dddde7f217879070816090c1e8e74d49432")
                      (source
                       .
                       "https://pkg-sources.racket-lang.org/pkgs/empty.zip")
                      (source_url
                       .
                       "https://pkg-sources.racket-lang.org/pkgs/empty.zip")))))))
 ("racket-win32-x86_64-2"
  .
  #hash((author . "mflatt@racket-lang.org")
        (authors . ("mflatt@racket-lang.org"))
        (build
         .
         #hash((conflicts-log . #f)
               (dep-failure-log . #f)
               (docs . ())
               (failure-log . #f)
               (min-failure-log . #f)
               (success-log . #f)
               (test-failure-log . #f)
               (test-success-log . #f)))
        (checksum . "cf14b039901df7ede55fa128e206679f44d2f9dd")
        (checksum-error . #f)
        (conflicts . ())
        (dependencies . ("base"))
        (dependency-names . ("base"))
        (description . "native libraries for \"racket\" package")
        (implies . ())
        (last-checked . 1557339749)
        (last-edit . 1485991969)
        (last-updated . 1502816359)
        (modules . ())
        (name . "racket-win32-x86_64-2")
        (ring . 0)
        (search-terms
         .
         #hasheq((author:mflatt@racket-lang.org . #t)
                 (main-distribution . #t)
                 (ring:0 . #t)))
        (source
         .
         "https://pkg-sources.racket-lang.org/pkgs/cf14b039901df7ede55fa128e206679f44d2f9dd/racket-win32-x86_64-2.zip")
        (tags . ("main-distribution"))
        (versions
         .
         #hash((default
                .
                #hasheq((checksum
                         .
                         "cf14b039901df7ede55fa128e206679f44d2f9dd")
                        (source
                         .
                         "https://pkg-sources.racket-lang.org/pkgs/cf14b039901df7ede55fa128e206679f44d2f9dd/racket-win32-x86_64-2.zip")
                        (source_url
                         .
                         "https://pkg-sources.racket-lang.org/pkgs/cf14b039901df7ede55fa128e206679f44d2f9dd/racket-win32-x86_64-2.zip")))
               ("5.3.4"
                .
                #hash((checksum . "9f098dddde7f217879070816090c1e8e74d49432")
                      (source
                       .
                       "https://pkg-sources.racket-lang.org/pkgs/empty.zip")
                      (source_url
                       .
                       "https://pkg-sources.racket-lang.org/pkgs/empty.zip")))
               ("5.3.5"
                .
                #hash((checksum . "9f098dddde7f217879070816090c1e8e74d49432")
                      (source
                       .
                       "https://pkg-sources.racket-lang.org/pkgs/empty.zip")
                      (source_url
                       .
                       "https://pkg-sources.racket-lang.org/pkgs/empty.zip")))
               ("5.3.6"
                .
                #hash((checksum . "9f098dddde7f217879070816090c1e8e74d49432")
                      (source
                       .
                       "https://pkg-sources.racket-lang.org/pkgs/empty.zip")
                      (source_url
                       .
                       "https://pkg-sources.racket-lang.org/pkgs/empty.zip")))))))
 ("racket-win32-x86_64-3"
  .
  #hash((author . "mflatt@racket-lang.org")
        (checksum . "87bf52d75c188ac5e16e2a316632c362e55776e6")
        (dependencies . ("base"))
        (dependency-names . ("base"))
        (description . "mflatt@racket-lang.org")
        (modules . ())
        (name . "racket-win32-x86_64-3")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/racket-win32-x86_64-3.zip")
        (tags . ())))
 ("racket-x86_64-linux-natipkg-2"
  .
  #hash((author . "mflatt@racket-lang.org")
        (authors . ("mflatt@racket-lang.org"))
        (build
         .
         #hash((conflicts-log . #f)
               (dep-failure-log . #f)
               (docs . ())
               (failure-log . #f)
               (min-failure-log . #f)
               (success-log . #f)
               (test-failure-log . #f)
               (test-success-log . #f)))
        (checksum . "3dff4171c999fbd84f8a4af38446502eeff0ec04")
        (checksum-error . #f)
        (conflicts . ())
        (dependencies . ("base"))
        (dependency-names . ("base"))
        (description . "native libraries for \"racket\" package")
        (implies . ())
        (last-checked . 1557339750)
        (last-edit . 1485991969)
        (last-updated . 1502816360)
        (modules . ())
        (name . "racket-x86_64-linux-natipkg-2")
        (ring . 0)
        (search-terms
         .
         #hasheq((author:mflatt@racket-lang.org . #t)
                 (main-distribution . #t)
                 (ring:0 . #t)))
        (source
         .
         "https://pkg-sources.racket-lang.org/pkgs/3dff4171c999fbd84f8a4af38446502eeff0ec04/racket-x86_64-linux-natipkg-2.zip")
        (tags . ("main-distribution"))
        (versions
         .
         #hash((default
                .
                #hasheq((checksum
                         .
                         "3dff4171c999fbd84f8a4af38446502eeff0ec04")
                        (source
                         .
                         "https://pkg-sources.racket-lang.org/pkgs/3dff4171c999fbd84f8a4af38446502eeff0ec04/racket-x86_64-linux-natipkg-2.zip")
                        (source_url
                         .
                         "https://pkg-sources.racket-lang.org/pkgs/3dff4171c999fbd84f8a4af38446502eeff0ec04/racket-x86_64-linux-natipkg-2.zip")))
               ("5.3.4"
                .
                #hash((checksum . "9f098dddde7f217879070816090c1e8e74d49432")
                      (source
                       .
                       "https://pkg-sources.racket-lang.org/pkgs/empty.zip")
                      (source_url
                       .
                       "https://pkg-sources.racket-lang.org/pkgs/empty.zip")))
               ("5.3.5"
                .
                #hash((checksum . "9f098dddde7f217879070816090c1e8e74d49432")
                      (source
                       .
                       "https://pkg-sources.racket-lang.org/pkgs/empty.zip")
                      (source_url
                       .
                       "https://pkg-sources.racket-lang.org/pkgs/empty.zip")))
               ("5.3.6"
                .
                #hash((checksum . "9f098dddde7f217879070816090c1e8e74d49432")
                      (source
                       .
                       "https://pkg-sources.racket-lang.org/pkgs/empty.zip")
                      (source_url
                       .
                       "https://pkg-sources.racket-lang.org/pkgs/empty.zip")))))))
 ("racket-x86_64-linux-natipkg-3"
  .
  #hash((author . "mflatt@racket-lang.org")
        (checksum . "56ddc2105fef8f6356531c0db7be6a46c62d9ab7")
        (dependencies . ("base"))
        (dependency-names . ("base"))
        (description . "mflatt@racket-lang.org")
        (modules . ())
        (name . "racket-x86_64-linux-natipkg-3")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/racket-x86_64-linux-natipkg-3.zip")
        (tags . ())))
 ("racket-x86_64-macosx-2"
  .
  #hash((author . "mflatt@racket-lang.org")
        (authors . ("mflatt@racket-lang.org"))
        (build
         .
         #hash((conflicts-log . #f)
               (dep-failure-log . #f)
               (docs . ())
               (failure-log . #f)
               (min-failure-log . #f)
               (success-log . #f)
               (test-failure-log . #f)
               (test-success-log . #f)))
        (checksum . "ba9215b58db4c38ad60d0fc788f51ff740d79858")
        (checksum-error . #f)
        (conflicts . ())
        (dependencies . ("base"))
        (dependency-names . ("base"))
        (description . "native libraries for \"racket\" package")
        (implies . ())
        (last-checked . 1557339751)
        (last-edit . 1485991969)
        (last-updated . 1502816361)
        (modules . ())
        (name . "racket-x86_64-macosx-2")
        (ring . 0)
        (search-terms
         .
         #hasheq((author:mflatt@racket-lang.org . #t)
                 (main-distribution . #t)
                 (ring:0 . #t)))
        (source
         .
         "https://pkg-sources.racket-lang.org/pkgs/ba9215b58db4c38ad60d0fc788f51ff740d79858/racket-x86_64-macosx-2.zip")
        (tags . ("main-distribution"))
        (versions
         .
         #hash((default
                .
                #hasheq((checksum
                         .
                         "ba9215b58db4c38ad60d0fc788f51ff740d79858")
                        (source
                         .
                         "https://pkg-sources.racket-lang.org/pkgs/ba9215b58db4c38ad60d0fc788f51ff740d79858/racket-x86_64-macosx-2.zip")
                        (source_url
                         .
                         "https://pkg-sources.racket-lang.org/pkgs/ba9215b58db4c38ad60d0fc788f51ff740d79858/racket-x86_64-macosx-2.zip")))
               ("5.3.4"
                .
                #hash((checksum . "9f098dddde7f217879070816090c1e8e74d49432")
                      (source
                       .
                       "https://pkg-sources.racket-lang.org/pkgs/empty.zip")
                      (source_url
                       .
                       "https://pkg-sources.racket-lang.org/pkgs/empty.zip")))
               ("5.3.5"
                .
                #hash((checksum . "9f098dddde7f217879070816090c1e8e74d49432")
                      (source
                       .
                       "https://pkg-sources.racket-lang.org/pkgs/empty.zip")
                      (source_url
                       .
                       "https://pkg-sources.racket-lang.org/pkgs/empty.zip")))
               ("5.3.6"
                .
                #hash((checksum . "9f098dddde7f217879070816090c1e8e74d49432")
                      (source
                       .
                       "https://pkg-sources.racket-lang.org/pkgs/empty.zip")
                      (source_url
                       .
                       "https://pkg-sources.racket-lang.org/pkgs/empty.zip")))))))
 ("racket-x86_64-macosx-3"
  .
  #hash((author . "mflatt@racket-lang.org")
        (checksum . "2fcbbed402e263de322538559d0de6829a3f50c2")
        (dependencies . ("base"))
        (dependency-names . ("base"))
        (description . "mflatt@racket-lang.org")
        (modules . ())
        (name . "racket-x86_64-macosx-3")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/racket-x86_64-macosx-3.zip")
        (tags . ())))
 ("racketcon-2018-web-devel-workshop"
  .
  #hasheq((author . "jesse@lisp.sh")
          (authors . ("jesse@lisp.sh"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "workshop"
                    "doc/workshop@racketcon-2018-web-devel-workshop/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log
                  .
                  "server/built/install/racketcon-2018-web-devel-workshop.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/racketcon-2018-web-devel-workshop.txt")))
          (checksum . "e377a8f4fd9d6ef3b097ef1507ff3e16e0e260dc")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "rackunit-lib"
            "txexpr"
            "http"
            "html-parsing"
            "css-expr"
            "web-server-lib"
            "net-cookies-lib"
            "scribble-lib"
            "racket-doc"
            "rackunit-lib"))
          (dependency-names
           .
           ("base"
            "rackunit-lib"
            "txexpr"
            "http"
            "html-parsing"
            "css-expr"
            "web-server-lib"
            "net-cookies-lib"
            "scribble-lib"
            "racket-doc"
            "rackunit-lib"))
          (description
           .
           "Material for the web development workshop held at RacketCon 2018")
          (implies . ())
          (last-checked . 1557339752)
          (last-edit . 1538304965)
          (last-updated . 1548574917)
          (modules
           .
           ((lib "racketcon-2018-web-devel-workshop/scribblings/second.scrbl")
            (lib "racketcon-2018-web-devel-workshop/scribblings/fourth.scrbl")
            (lib "racketcon-2018-web-devel-workshop/second.rkt")
            (lib "racketcon-2018-web-devel-workshop/respond.rkt")
            (lib "racketcon-2018-web-devel-workshop/fourth.rkt")
            (lib "racketcon-2018-web-devel-workshop/command.rkt")
            (lib
             "racketcon-2018-web-devel-workshop/scribblings/workshop.scrbl")
            (lib "racketcon-2018-web-devel-workshop/third.rkt")
            (lib "racketcon-2018-web-devel-workshop/scribblings/first.scrbl")
            (lib "racketcon-2018-web-devel-workshop/scribblings/third.scrbl")
            (lib "racketcon-2018-web-devel-workshop/first.rkt")
            (lib "racketcon-2018-web-devel-workshop/util.rkt")
            (lib
             "racketcon-2018-web-devel-workshop/scribblings/fifth.scrbl")))
          (name . "racketcon-2018-web-devel-workshop")
          (nix-sha256
           .
           "0qk11h9d3rgzr5wjk357xpxkzs51zgwclwdkayz18fxszjnm2gq5")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:jesse@lisp.sh . #t)
                   (ring:2 . #t)
                   (web . #t)))
          (source
           .
           "https://github.com/jessealama/racketcon-2018-web-devel-workshop.git")
          (tags . ("web"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "e377a8f4fd9d6ef3b097ef1507ff3e16e0e260dc")
                          (source
                           .
                           "https://github.com/jessealama/racketcon-2018-web-devel-workshop.git")
                          (source_url
                           .
                           "https://github.com/jessealama/racketcon-2018-web-devel-workshop.git")))))))
 ("racketeer"
  .
  #hasheq((author . "emailmiraleung@gmail.com jordanelder@outlook.com")
          (authors . ("emailmiraleung@gmail.com" "jordanelder@outlook.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . "server/built/fail/racketeer.txt")
                 (min-failure-log . #f)
                 (success-log . #f)
                 (test-failure-log . #f)
                 (test-success-log . #f)))
          (checksum . "e3f703a46db1d97acbca361ebad3a21b3d4c2601")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "drracket"
            "drracket-plugin-lib"
            "gui-lib"
            "htdp-lib"
            "rackunit-lib"
            "sandbox-lib"
            "syntax-color-lib"
            "wxme-lib"))
          (dependency-names
           .
           ("base"
            "drracket"
            "drracket-plugin-lib"
            "gui-lib"
            "htdp-lib"
            "rackunit-lib"
            "sandbox-lib"
            "syntax-color-lib"
            "wxme-lib"))
          (description . "Continuous testing for DrRacket")
          (implies . ())
          (last-checked . 1557339752)
          (last-edit . 1437598939)
          (last-updated . 1502816362)
          (modules
           .
           ((lib "racketeer/racketeer/private/testing-mixin.rkt")
            (lib "racketeer/racketeer/tool.rkt")))
          (name . "racketeer")
          (nix-sha256
           .
           "06d64k4igwkn2rs98ivyi168id2qj68n19ah8s2xayfc0fs6c6xi")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-fail: . #t)
                   (:no-tag: . #t)
                   (author:emailmiraleung@gmail.com . #t)
                   (author:jordanelder@outlook.com . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/miraleung/racketeer#master")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "e3f703a46db1d97acbca361ebad3a21b3d4c2601")
                          (source
                           .
                           "git://github.com/miraleung/racketeer#master")
                          (source_url
                           .
                           "http://github.com/miraleung/racketeer/tree/master#master")))
                 ("6.2"
                  .
                  #hasheq((checksum
                           .
                           "254633617d2557f01996a1d036b7062c408f1089")
                          (source
                           .
                           "git://github.com/miraleung/racketeer#racket-v6.2")
                          (source_url
                           .
                           "http://github.com/miraleung/racketeer/tree/master#racket-v6.2")))))))
 ("racketmq"
  .
  #hasheq((author . "tonygarnockjones@gmail.com")
          (authors . ("tonygarnockjones@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . "server/built/fail/racketmq.txt")
                 (min-failure-log . #f)
                 (success-log . #f)
                 (test-failure-log . #f)
                 (test-success-log . #f)))
          (checksum . "ac4f15325fed55e944bbb7daa0a4642ed0cbf843")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base" "syndicate" "web-server-lib" "rackunit-lib"))
          (dependency-names
           .
           ("base" "syndicate" "web-server-lib" "rackunit-lib"))
          (description . "An implementation of W3C WebSub.")
          (implies . ())
          (last-checked . 1557339752)
          (last-edit . 1482796420)
          (last-updated . 1502816370)
          (modules
           .
           ((lib "racketmq/hub/remote-topic.rkt")
            (lib "racketmq/protocol.rkt")
            (lib "racketmq/poke.rkt")
            (lib "racketmq/private/util.rkt")
            (lib "racketmq/hub/subscription.rkt")
            (lib "racketmq/hub/topic-demand.rkt")
            (lib "racketmq/hub/local-topic.rkt")
            (lib "racketmq/template.rkt")
            (lib "racketmq/hub/static-content.rkt")
            (lib "racketmq/hub/websocket.rkt")
            (lib "racketmq/hub.rkt")))
          (name . "racketmq")
          (nix-sha256
           .
           "1pvfd6iqrdi38dbxiz1b1kpnflqrrs94wkwrj19iliba44xdygg1")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-fail: . #t)
                   (author:tonygarnockjones@gmail.com . #t)
                   (net . #t)
                   (ring:1 . #t)
                   (web . #t)))
          (source . "git://github.com/tonyg/racketmq")
          (tags . ("net" "web"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "ac4f15325fed55e944bbb7daa0a4642ed0cbf843")
                          (source . "git://github.com/tonyg/racketmq")
                          (source_url
                           .
                           "http://github.com/tonyg/racketmq/tree/master")))))))
 ("racketscript"
  .
  #hasheq((author . "vishesh3y@gmail.com")
          (authors . ("vishesh3y@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/racketscript.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/racketscript.txt")))
          (checksum . "7a8ea9e254055b72f3ea1246080d78a806f5cfd4")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base" "racketscript-compiler" "racketscript-extras"))
          (dependency-names
           .
           ("base" "racketscript-compiler" "racketscript-extras"))
          (description
           .
           "A lightweight Racket to JavaScript compiler with some batteries included")
          (implies . ("racketscript-compiler" "racketscript-extras"))
          (last-checked . 1557339752)
          (last-edit . 1481731943)
          (last-updated . 1551931595)
          (modules . ())
          (name . "racketscript")
          (nix-sha256
           .
           "145hdnlxyhdigznh7c09ym7j49krq7ysa4vprmx895xw4xq3c0m2")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:vishesh3y@gmail.com . #t)
                   (compiler . #t)
                   (javascript . #t)
                   (ring:1 . #t)
                   (web . #t)))
          (source . "git://github.com/vishesh/racketscript?path=racketscript")
          (tags . ("compiler" "javascript" "web"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "7a8ea9e254055b72f3ea1246080d78a806f5cfd4")
                          (source
                           .
                           "git://github.com/vishesh/racketscript?path=racketscript")
                          (source_url
                           .
                           "http://github.com/vishesh/racketscript/tree/master?path=racketscript")))))))
 ("racketscript-compiler"
  .
  #hasheq((author . "vishesh3y@gmail.com")
          (authors . ("vishesh3y@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log
                  .
                  "server/built/install/racketscript-compiler.txt")
                 (test-failure-log
                  .
                  "server/built/test-fail/racketscript-compiler.txt")
                 (test-success-log . #f)))
          (checksum . "7a8ea9e254055b72f3ea1246080d78a806f5cfd4")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            ("racket" "6.4")
            "typed-racket-lib"
            "typed-racket-more"
            "threading"
            "graph"
            "anaphoric"
            "base"
            "typed-racket-lib"
            "typed-racket-more"
            "rackunit-lib"))
          (dependency-names
           .
           ("base"
            "typed-racket-lib"
            "typed-racket-more"
            "threading"
            "graph"
            "anaphoric"
            "base"
            "typed-racket-lib"
            "typed-racket-more"
            "rackunit-lib"))
          (description . "A Racket to JavaScript compiler")
          (implies . ())
          (last-checked . 1557339752)
          (last-edit . 1481679010)
          (last-updated . 1551931596)
          (modules
           .
           ((lib "racketscript/compiler/global.rkt")
            (lib "racketscript/compiler/language.rkt")
            (lib "racketscript/compiler/stx-utils.rkt")
            (lib "racketscript/boot.rkt")
            (lib "racketscript/compiler/runtime/lib.rkt")
            (lib "racketscript/compiler/environment.rkt")
            (lib "racketscript/compiler/nothing.rkt")
            (lib "racketscript/compiler/config.rkt")
            (lib "racketscript/compiler/runtime/kernel.rkt")
            (lib "racketscript/compiler/logging.rkt")
            (lib "racketscript/compiler/runtime/extfl.rkt")
            (lib "racketscript/compiler/runtime/place.rkt")
            (lib "racketscript/compiler/assembler.rkt")
            (lib "racketscript/compiler/runtime/utils.rkt")
            (lib "racketscript/compiler/runtime/paramz.rkt")
            (lib "racketscript/compiler/runtime/builtin.rkt")
            (lib "racketscript/compiler/runtime/unsafe.rkt")
            (lib "racketscript/boot/lang/private/interop.rkt")
            (lib "racketscript/compiler/runtime/place-struct.rkt")
            (lib "racketscript/compiler/il.rkt")
            (lib "racketscript/compiler/runtime/futures.rkt")
            (lib "racketscript/main.rkt")
            (lib "racketscript/compiler/absyn.rkt")
            (lib "racketscript/boot/lang/reader.rkt")
            (lib "racketscript/compiler/util.rkt")
            (lib "racketscript/compiler/case-lambda.rkt")
            (lib "racketscript/base/lang/reader.rkt")
            (lib "racketscript/compiler/il-analyze.rkt")
            (lib "racketscript/private/interop.rkt")
            (lib "racketscript/base/main.rkt")
            (lib "racketscript/browser.rkt")
            (lib "racketscript/compiler/moddeps.rkt")
            (lib "racketscript/compiler/main.rkt")
            (lib "racketscript/compiler/ident.rkt")
            (lib "racketscript/compiler/runtime/network.rkt")
            (lib "racketscript/compiler/runtime/boot.rkt")
            (lib "racketscript/compiler/runtime/flfxnum.rkt")
            (lib "racketscript/compiler/transform.rkt")
            (lib "racketscript/compiler/util-untyped.rkt")
            (lib "racketscript/compiler/runtime/foreign.rkt")
            (lib "racketscript/compiler/expand.rkt")
            (lib "racketscript/base.rkt")
            (lib "racketscript/interop.rkt")))
          (name . "racketscript-compiler")
          (nix-sha256
           .
           "145hdnlxyhdigznh7c09ym7j49krq7ysa4vprmx895xw4xq3c0m2")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:vishesh3y@gmail.com . #t)
                   (compiler . #t)
                   (javascript . #t)
                   (ring:1 . #t)
                   (web . #t)))
          (source
           .
           "git://github.com/vishesh/racketscript?path=racketscript-compiler")
          (tags . ("compiler" "javascript" "web"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "7a8ea9e254055b72f3ea1246080d78a806f5cfd4")
                          (source
                           .
                           "git://github.com/vishesh/racketscript?path=racketscript-compiler")
                          (source_url
                           .
                           "http://github.com/vishesh/racketscript/tree/master?path=racketscript-compiler")))))))
 ("racketscript-extras"
  .
  #hasheq((author . "vishesh3y@gmail.com")
          (authors . ("vishesh3y@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log
                  .
                  "server/built/install/racketscript-extras.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/racketscript-extras.txt")))
          (checksum . "7a8ea9e254055b72f3ea1246080d78a806f5cfd4")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base" ("racket" "6.4") "racketscript-compiler" "rackunit-lib"))
          (dependency-names . ("base" "racketscript-compiler" "rackunit-lib"))
          (description . "Goodies for RacketScript")
          (implies . ())
          (last-checked . 1557339752)
          (last-edit . 1481617675)
          (last-updated . 1551931596)
          (modules
           .
           ((lib "racketscript/htdp/universe.rkt")
            (lib "racketscript/htdp/private/color.rkt")
            (lib "racketscript/private/jscommon.rkt")
            (lib "racketscript/htdp/image.rkt")))
          (name . "racketscript-extras")
          (nix-sha256
           .
           "145hdnlxyhdigznh7c09ym7j49krq7ysa4vprmx895xw4xq3c0m2")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:vishesh3y@gmail.com . #t)
                   (big-bang . #t)
                   (javascript . #t)
                   (ring:1 . #t)
                   (web . #t)))
          (source
           .
           "git://github.com/vishesh/racketscript?path=racketscript-extras")
          (tags . ("big-bang" "javascript" "web"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "7a8ea9e254055b72f3ea1246080d78a806f5cfd4")
                          (source
                           .
                           "git://github.com/vishesh/racketscript?path=racketscript-extras")
                          (source_url
                           .
                           "http://github.com/vishesh/racketscript/tree/master?path=racketscript-extras")))))))
 ("racketui"
  .
  #hasheq((author . "nadeem@acm.org")
          (authors . ("nadeem@acm.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "racketui" "doc/racketui@racketui/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/racketui.txt")
                 (test-failure-log . "server/built/test-fail/racketui.txt")
                 (test-success-log . #f)))
          (checksum . "059fda3fa60b84a390fabe764e12edbdfd079190")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "draw-lib"
            "htdp-lib"
            "srfi-lite-lib"
            "web-server-lib"
            "racket-doc"
            "scribble-lib"))
          (dependency-names
           .
           ("base"
            "draw-lib"
            "htdp-lib"
            "srfi-lite-lib"
            "web-server-lib"
            "racket-doc"
            "scribble-lib"))
          (description
           .
           "Automated web forms UI generator (especially for HtDP)")
          (implies . ())
          (last-checked . 1557339752)
          (last-edit . 1500073915)
          (last-updated . 1502816372)
          (modules
           .
           ((lib "racketui/bsl-tests/genetics-list-struct-contain.rkt")
            (lib "racketui/main.rkt")
            (lib "racketui/save.rkt")
            (lib "racketui/web.rkt")
            (lib "racketui/scribblings/racketui.scrbl")
            (lib "racketui/bsl-tests/web-file-size-mixed-struct.rkt")
            (lib "racketui/web-launch.rkt")
            (lib "racketui/tests/tfield-tests.rkt")
            (lib "racketui/tests/save-tests.rkt")
            (lib "racketui/bsl-tests/target-img.rkt")
            (lib "racketui/bsl-tests/reverser-file-io.rkt")
            (lib "racketui/bsl-tests/blood-test-2list.rkt")
            (lib "racketui/bsl-tests/hello.rkt")
            (lib "racketui/tests/web-tests.rkt")
            (lib "racketui/tests/syntax-tests.rkt")
            (lib "racketui/bsl-tests/dish-order-cost-struct.rkt")
            (lib "racketui/bsl-tests/acronym-list-str.rkt")
            (lib "racketui/bsl-tests/all-bigger-2list.rkt")
            (lib "racketui/tfield.rkt")
            (lib "racketui/bsl-tests/clock-img.rkt")
            (lib "racketui/common.rkt")
            (lib "racketui/syntax.rkt")
            (lib "racketui/bsl-tests/counter-change-img.rkt")
            (lib "racketui/render.rkt")
            (lib "racketui/bsl-tests/total-sales-seats-matrix.rkt")
            (lib "racketui/bsl-tests/longest-list-str.rkt")
            (lib "racketui/bsl-tests/grades-average-list-mixed.rkt")
            (lib "racketui/bsl-tests/wgt-on-moon-simple.rkt")
            (lib "racketui/bsl-tests/caesar-file.rkt")))
          (name . "racketui")
          (nix-sha256
           .
           "0v2wx5jm98rw0v3j4jj80xqvs0r23403pb0nabq8fcjqlmhj68a4")
          (ring . 1)
          (search-terms
           .
           #hasheq((2htdp . #t)
                   (:build-success: . #t)
                   (:docs: . #t)
                   (author:nadeem@acm.org . #t)
                   (ring:1 . #t)
                   (web . #t)))
          (source . "git://github.com/nadeemabdulhamid/racketui")
          (tags . ("2htdp" "web"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "059fda3fa60b84a390fabe764e12edbdfd079190")
                          (source
                           .
                           "git://github.com/nadeemabdulhamid/racketui")
                          (source_url
                           .
                           "http://github.com/nadeemabdulhamid/racketui/tree/master")))))))
 ("rackjure"
  .
  #hasheq((author . "greghendershott@gmail.com")
          (authors . ("greghendershott@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "rackjure" "doc/rackjure@rackjure/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/rackjure.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/rackjure.txt")))
          (checksum . "7376067806d97f34ebfb0cd8668201aeb8e3fd8c")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           (("base" #:version "6.2")
            "rackunit-lib"
            ("threading-lib" #:version "1.1")
            "rackunit-lib"
            "racket-doc"
            "sandbox-lib"
            "scribble-lib"
            "threading-doc"))
          (dependency-names
           .
           ("base"
            "rackunit-lib"
            "threading-lib"
            "rackunit-lib"
            "racket-doc"
            "sandbox-lib"
            "scribble-lib"
            "threading-doc"))
          (description . "Some Clojure-inspired idioms.")
          (implies . ())
          (last-checked . 1557339752)
          (last-edit . 1396443212)
          (last-updated . 1552691196)
          (modules
           .
           ((lib "rackjure/main.rkt")
            (lib "rackjure/lambda-reader.rkt")
            (lib "rackjure/egal.rkt")
            (lib "rackjure/conditionals.rkt")
            (lib "rackjure/base.rkt")
            (lib "rackjure/test.rkt")
            (lib "rackjure/threading.rkt")
            (lib "rackjure/app.rkt")
            (lib "rackjure/rackjure.scrbl")
            (lib "rackjure/utils.rkt")
            (lib "rackjure/lang/reader.rkt")
            (lib "rackjure/dict.rkt")
            (lib "rackjure/lang/language-info.rkt")
            (lib "rackjure/base/lang/reader.rkt")
            (lib "rackjure/bench.rkt")
            (lib "rackjure/check-expansion.rkt")
            (lib "rackjure/str.rkt")
            (lib "rackjure/rackjure.rkt")
            (lib "rackjure/lang/runtime-config.rkt")
            (lib "rackjure/alist.rkt")))
          (name . "rackjure")
          (nix-sha256
           .
           "10d2flcd5f3qyklk489qhdmxklpvkgzqbvc1nj2jvp2b0h85jmbz")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:greghendershott@gmail.com . #t)
                   (language . #t)
                   (ring:1 . #t)))
          (source . "github://github.com/greghendershott/rackjure/master")
          (tags . ("language"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "7376067806d97f34ebfb0cd8668201aeb8e3fd8c")
                          (source
                           .
                           "github://github.com/greghendershott/rackjure/master")
                          (source_url
                           .
                           "http://github.com/greghendershott/rackjure/tree/master")))))))
 ("racklog"
  .
  #hash((author . "jay@racket-lang.org")
        (checksum . "910abb1f5682830aa91e0dca74ceeac2c99328fb")
        (dependencies
         .
         ("base"
          "datalog"
          "eli-tester"
          "rackunit-lib"
          "racket-doc"
          "scribble-lib"))
        (dependency-names
         .
         ("base"
          "datalog"
          "eli-tester"
          "rackunit-lib"
          "racket-doc"
          "scribble-lib"))
        (description . "jay@racket-lang.org")
        (modules . ())
        (name . "racklog")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/racklog.zip")
        (tags . ())))
 ("rackonsole"
  .
  #hasheq((author . "neil@neilvandyke.org")
          (authors . ("neil@neilvandyke.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "rackonsole"
                    "doc/rackonsole@rackonsole/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/rackonsole.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/rackonsole.txt")))
          (checksum . "9cb037f857243bef20c19ee280af458659eca731")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "mcfly"
            "charterm"
            "gdbdump"
            "compatibility-lib"
            "racket-doc"
            "scribble-lib"
            "overeasy"))
          (dependency-names
           .
           ("base"
            "mcfly"
            "charterm"
            "gdbdump"
            "compatibility-lib"
            "racket-doc"
            "scribble-lib"
            "overeasy"))
          (description
           .
           "Lightweight Operator Console for Racket Server Processes")
          (implies . ())
          (last-checked . 1557339752)
          (last-edit . 1456466728)
          (last-updated . 1502816373)
          (modules
           .
           ((lib "rackonsole/demo.rkt")
            (lib "rackonsole/main.rkt")
            (lib "rackonsole/rackonsole.scrbl")))
          (name . "rackonsole")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:neil@neilvandyke.org . #t)
                   (ring:1 . #t)
                   (terminal . #t)))
          (source . "http://www.neilvandyke.org/racket/rackonsole.zip")
          (tags . ("terminal"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "9cb037f857243bef20c19ee280af458659eca731")
                          (source
                           .
                           "http://www.neilvandyke.org/racket/rackonsole.zip")
                          (source_url
                           .
                           "http://www.neilvandyke.org/racket/rackonsole.zip")))))))
 ("rackpgmp"
  .
  #hasheq((author . "wjb@williamjbowman.com")
          (authors . ("wjb@williamjbowman.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "pgmp" "doc/pgmp@rackpgmp/index.html")
                   ("main" "perflinty" "doc/perflinty@rackpgmp/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/rackpgmp.txt")
                 (test-failure-log . "server/built/test-fail/rackpgmp.txt")
                 (test-success-log . #f)))
          (checksum . "405316e54f194a5d8cbf968bbcb96a0ef3ea70a3")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "racket-doc"
            "errortrace-doc"
            "scribble-lib"
            "sandbox-lib"
            "errortrace-lib"
            "rackunit-lib"
            "r6rs-lib"))
          (dependency-names
           .
           ("base"
            "racket-doc"
            "errortrace-doc"
            "scribble-lib"
            "sandbox-lib"
            "errortrace-lib"
            "rackunit-lib"
            "r6rs-lib"))
          (description . "A library for profile-guided meta-programming")
          (implies . ())
          (last-checked . 1557339753)
          (last-edit . 1442935413)
          (last-updated . 1502816373)
          (modules
           .
           ((lib "examples/my-first-pgmp.rkt")
            (lib "pgmp/api/exact.rkt")
            (lib "perflinty/docs/perflinty-list.scrbl")
            (lib "perflinty/auto.rkt")
            (lib "perflinty/docs/perflinty-auto.scrbl")
            (lib "tests/class-test.rkt")
            (lib "pgmp/pgmp.rkt")
            (lib "perflinty/docs/perflinty-vector.scrbl")
            (lib "perflinty/list.rkt")
            (lib "pgmp/main.rkt")
            (lib "perflinty/vector.rkt")
            (lib "tests/exclusive-cond-test.rkt")
            (lib "pgmp/exclusive-cond.rkt")
            (lib "pgmp/docs/pgmp.scrbl")
            (lib "tests/perflinty-auto.rkt")
            (lib "pgmp/api/utils.rkt")
            (lib "examples/exclusive-cond.rkt")
            (lib "tests/case-test.rkt")
            (lib "pgmp/case.rkt")
            (lib "examples/class.rkt")
            (lib "perflinty/docs/perflinty.scrbl")
            (lib "tests/run.rkt")
            (lib "tests/perflinty-list.rkt")
            (lib "tests/perflinty-vector.rkt")))
          (name . "rackpgmp")
          (nix-sha256
           .
           "0p1narya41vjmk369qinx11rjzbg8hsixpcafmi1c8plwda3rv7p")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (PGO . #t)
                   (author:wjb@williamjbowman.com . #t)
                   (profiling . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/wilbowma/pgmp?path=rackpgmp")
          (tags . ("PGO" "profiling"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "405316e54f194a5d8cbf968bbcb96a0ef3ea70a3")
                          (source
                           .
                           "git://github.com/wilbowma/pgmp?path=rackpgmp")
                          (source_url
                           .
                           "http://github.com/wilbowma/pgmp/tree/master?path=rackpgmp")))))))
 ("rackterm"
  .
  #hasheq((author . "willghatch@gmail.com")
          (authors . ("willghatch@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/rackterm.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/rackterm.txt")))
          (checksum . "56f08b3acac1cd7f014625439bb1b980b3f91364")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base" "draw-lib" "gui-lib" "rackunit-lib" "scheme-lib"))
          (dependency-names
           .
           ("base" "draw-lib" "gui-lib" "rackunit-lib" "scheme-lib"))
          (description
           .
           "Terminal emulator library (currently unstable and undocumented) and simple frontend.  Run racket -l rackterm/xterm to run.")
          (implies . ())
          (last-checked . 1557339753)
          (last-edit . 1433788188)
          (last-updated . 1507930214)
          (modules
           .
           ((lib "rackterm/private/256color.rkt")
            (lib "rackterm/private/terminal.rkt")
            (lib "rackterm/private/fun-terminal.rkt")
            (lib "rackterm/private/pty.rkt")
            (lib "rackterm/private/terminal-canvas.rkt")
            (lib "rackterm/xterm.rkt")
            (lib "rackterm/private/term-key-event.rkt")
            (lib "rackterm/private/console-code-parse.rkt")
            (lib "rackterm/private/shell-trampoline.rkt")
            (lib "rackterm/private/cell.rkt")))
          (name . "rackterm")
          (nix-sha256
           .
           "0znawasm6gf8bnc547ikbsvm9nzmnklca6qw8kd1mrdwc7vsmzbb")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:willghatch@gmail.com . #t)
                   (ring:1 . #t)
                   (terminal . #t)))
          (source . "git://github.com/willghatch/rackterm")
          (tags . ("terminal"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "56f08b3acac1cd7f014625439bb1b980b3f91364")
                          (source . "git://github.com/willghatch/rackterm")
                          (source_url
                           .
                           "http://github.com/willghatch/rackterm/tree/master")))))))
 ("rackunit"
  .
  #hash((author . "ryanc@racket-lang.org noel@racket-lang.org")
        (checksum . "d5c38f0079c397f518b73998abf12d532dc581ac")
        (dependencies
         .
         ("rackunit-lib" "rackunit-doc" "rackunit-gui" "rackunit-plugin-lib"))
        (dependency-names
         .
         ("rackunit-lib" "rackunit-doc" "rackunit-gui" "rackunit-plugin-lib"))
        (description . "ryanc@racket-lang.org noel@racket-lang.org")
        (modules . ())
        (name . "rackunit")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/rackunit.zip")
        (tags . ())))
 ("rackunit-abbrevs"
  .
  #hasheq((author . "types@ccs.neu.edu")
          (authors . ("types@ccs.neu.edu"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "rackunit-abbrevs"
                    "doc/rackunit-abbrevs@rackunit-abbrevs/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/rackunit-abbrevs.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/rackunit-abbrevs.txt")))
          (checksum . "5456cf1a17cf1c1b0206921e79e206f358e9b5a0")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "rackunit-lib"
            "typed-racket-lib"
            "typed-racket-more"
            "scribble-lib"
            "racket-doc"
            "rackunit-lib"))
          (dependency-names
           .
           ("base"
            "rackunit-lib"
            "typed-racket-lib"
            "typed-racket-more"
            "scribble-lib"
            "racket-doc"
            "rackunit-lib"))
          (description . "Iterated RackUnit tests")
          (implies . ())
          (last-checked . 1557339753)
          (last-edit . 1443686446)
          (last-updated . 1552755980)
          (modules
           .
           ((lib "rackunit-abbrevs/private/test-syntax-error.rkt")
            (lib "rackunit-abbrevs/private/test-typed-rackunit-abbrevs.rkt")
            (lib "rackunit-abbrevs/private/typed-rackunit-abbrevs.rkt")
            (lib "rackunit-abbrevs/private/error-reporting.rkt")
            (lib "rackunit-abbrevs/main.rkt")
            (lib "rackunit-abbrevs/error-reporting.rkt")
            (lib "rackunit-abbrevs/private/test-rackunit-abbrevs.rkt")
            (lib "rackunit-abbrevs/private/rackunit-abbrevs.rkt")
            (lib "rackunit-abbrevs/typed.rkt")
            (lib "rackunit-abbrevs/scribblings/rackunit-abbrevs.scrbl")))
          (name . "rackunit-abbrevs")
          (nix-sha256
           .
           "0939jv2sdv9mj5n19d7i0324wswr93x0xdwq7z0v7lsd1pan77m2")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:types@ccs.neu.edu . #t)
                   (rackunit . #t)
                   (ring:1 . #t)
                   (testing . #t)))
          (source . "git://github.com/bennn/rackunit-abbrevs")
          (tags . ("rackunit" "testing"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "5456cf1a17cf1c1b0206921e79e206f358e9b5a0")
                          (source . "git://github.com/bennn/rackunit-abbrevs")
                          (source_url
                           .
                           "http://github.com/bennn/rackunit-abbrevs/tree/master")))))))
 ("rackunit-chk"
  .
  #hasheq((author . "jay.mccarthy@gmail.com")
          (authors . ("jay.mccarthy@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "rackunit-chk"
                    "doc/rackunit-chk@rackunit-chk/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/rackunit-chk.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/rackunit-chk.txt")))
          (checksum . "62c80697d9e8c4a5f5b57832e3930313732836c4")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base" "rackunit-lib" "racket-doc" "rackunit-doc" "scribble-lib"))
          (dependency-names
           .
           ("base" "rackunit-lib" "racket-doc" "rackunit-doc" "scribble-lib"))
          (description . "a short hand for writing rackunit tests")
          (implies . ())
          (last-checked . 1557339753)
          (last-edit . 1383617264)
          (last-updated . 1504539027)
          (modules
           .
           ((lib "rackunit/chk.rkt") (lib "rackunit/chk/rackunit-chk.scrbl")))
          (name . "rackunit-chk")
          (nix-sha256
           .
           "1aj7iilhvm34y0a898fj5rz7m0b20qazsk3rlsp6lnipkadbixzs")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:jay.mccarthy@gmail.com . #t)
                   (ring:1 . #t)
                   (testing . #t)))
          (source . "git://github.com/jeapostrophe/rackunit-chk")
          (tags . ("testing"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "62c80697d9e8c4a5f5b57832e3930313732836c4")
                          (source
                           .
                           "git://github.com/jeapostrophe/rackunit-chk")
                          (source_url
                           .
                           "http://github.com/jeapostrophe/rackunit-chk/tree/master")))))))
 ("rackunit-doc"
  .
  #hash((author . "noel@racket-lang.org ryanc@racket-lang.org")
        (checksum . "c13942e42f805e88bc18612a62e63787aa1dec52")
        (dependencies
         .
         ("base"
          "racket-index"
          "racket-doc"
          "rackunit-gui"
          "rackunit-lib"
          "scribble-lib"))
        (dependency-names
         .
         ("base"
          "racket-index"
          "racket-doc"
          "rackunit-gui"
          "rackunit-lib"
          "scribble-lib"))
        (description . "noel@racket-lang.org ryanc@racket-lang.org")
        (modules . ())
        (name . "rackunit-doc")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/rackunit-doc.zip")
        (tags . ())))
 ("rackunit-grade"
  .
  #hasheq((author . "ifigueroap@gmail.com")
          (authors . ("ifigueroap@gmail.com"))
          (build
           .
           #hash((conflicts-log . "conflicts.txt")
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("extract"
                    "rackunit-grade"
                    "doc/rackunit-grade@rackunit-grade/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/rackunit-grade.txt")
                 (test-failure-log
                  .
                  "server/built/test-fail/rackunit-grade.txt")
                 (test-success-log . #f)))
          (checksum . "92526d7ced3b4cf7b5323752f20d8f36752e69b6")
          (checksum-error . #f)
          (conflicts . ("racket-rackunit-grade"))
          (dependencies
           .
           ("base" "rackunit" "doc-coverage" "scribble-lib" "racket-doc"))
          (dependency-names
           .
           ("base" "rackunit" "doc-coverage" "scribble-lib" "racket-doc"))
          (description
           .
           "Simple library and raco command for grading homework against a test file")
          (implies . ())
          (last-checked . 1557339754)
          (last-edit . 1482781793)
          (last-updated . 1502816375)
          (modules
           .
           ((lib "rackunit/raco-grade.rkt")
            (lib "rackunit/scribblings/rackunit-grade.scrbl")
            (lib "rackunit/grade.rkt")))
          (name . "rackunit-grade")
          (nix-sha256
           .
           "1yh3xz8j01i0chlxaqqirpcrh6ynlbknhfz1w7j7df8hjyqqkdmp")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-conflicts: . #t)
                   (:build-success: . #t)
                   (:conflicts: . #t)
                   (:docs-error: . #t)
                   (:docs: . #t)
                   (author:ifigueroap@gmail.com . #t)
                   (homework . #t)
                   (rackunit . #t)
                   (raco . #t)
                   (ring:1 . #t)
                   (teaching . #t)))
          (source . "git://github.com/ifigueroap/racket-rackunit-grade")
          (tags . ("homework" "rackunit" "raco" "teaching"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "92526d7ced3b4cf7b5323752f20d8f36752e69b6")
                          (source
                           .
                           "git://github.com/ifigueroap/racket-rackunit-grade")
                          (source_url
                           .
                           "http://github.com/ifigueroap/racket-rackunit-grade/tree/master")))))))
 ("rackunit-gui"
  .
  #hash((author . "ryanc@racket-lang.org")
        (checksum . "cea9f0ec960bca7b389241c9e64deb35467564d3")
        (dependencies
         .
         ("rackunit-lib" "class-iop-lib" "data-lib" "gui-lib" "base"))
        (dependency-names
         .
         ("rackunit-lib" "class-iop-lib" "data-lib" "gui-lib" "base"))
        (description . "ryanc@racket-lang.org")
        (modules . ())
        (name . "rackunit-gui")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/rackunit-gui.zip")
        (tags . ())))
 ("rackunit-lib"
  .
  #hash((author . "ryanc@racket-lang.org noel@racket-lang.org")
        (checksum . "0490579015cf6d050e928d7065ba6d336a87cfcb")
        (dependencies . ("base" "testing-util-lib"))
        (dependency-names . ("base" "testing-util-lib"))
        (description . "ryanc@racket-lang.org noel@racket-lang.org")
        (modules . ())
        (name . "rackunit-lib")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/rackunit-lib.zip")
        (tags . ())))
 ("rackunit-macrotypes-lib"
  .
  #hasheq((author . "stchang@racket-lang.org")
          (authors . ("stchang@racket-lang.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log
                  .
                  "server/built/install/rackunit-macrotypes-lib.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/rackunit-macrotypes-lib.txt")))
          (checksum . "5111e55fd15ef2284455085b7bf770736dc12235")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           (("base" #:version "7.0")
            "rackunit-lib"
            ("macrotypes-lib" #:version "0.3.1")))
          (dependency-names . ("base" "rackunit-lib" "macrotypes-lib"))
          (description . "rackunit extension for use with Turnstile lang")
          (implies . ())
          (last-checked . 1557339754)
          (last-edit . 1540411776)
          (last-updated . 1544047236)
          (modules
           .
           ((lib "rackunit/turnstile.rkt")
            (lib "rackunit/rackunit-typechecking.rkt")
            (lib "rackunit/macrotypes.rkt")))
          (name . "rackunit-macrotypes-lib")
          (nix-sha256
           .
           "1nb4f81a0q8j347ilmvgl0mzc6ivfm2d78i8vp1nk5wx1wn0zg5h")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:no-tag: . #t)
                   (author:stchang@racket-lang.org . #t)
                   (ring:2 . #t)))
          (source
           .
           "https://github.com/stchang/macrotypes.git?path=rackunit-macrotypes-lib")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "5111e55fd15ef2284455085b7bf770736dc12235")
                          (source
                           .
                           "https://github.com/stchang/macrotypes.git?path=rackunit-macrotypes-lib")
                          (source_url
                           .
                           "https://github.com/stchang/macrotypes.git?path=rackunit-macrotypes-lib")))))))
 ("rackunit-plugin-lib"
  .
  #hash((author . "ryanc@racket-lang.org noel@racket-lang.org")
        (checksum . "f49c4fcde92bb1449dd8b189778d2bdde62d4d58")
        (dependencies
         .
         ("base"
          "rackunit-lib"
          "rackunit-gui"
          "gui-lib"
          "drracket-plugin-lib"))
        (dependency-names
         .
         ("base"
          "rackunit-lib"
          "rackunit-gui"
          "gui-lib"
          "drracket-plugin-lib"))
        (description . "ryanc@racket-lang.org noel@racket-lang.org")
        (modules . ())
        (name . "rackunit-plugin-lib")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/rackunit-plugin-lib.zip")
        (tags . ())))
 ("rackunit-spec"
  .
  #hasheq((author . "lexi.lambda@gmail.com")
          (authors . ("lexi.lambda@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "rackunit-spec"
                    "doc/rackunit-spec@rackunit-spec/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/rackunit-spec.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/rackunit-spec.txt")))
          (checksum . "96f9f48b2f4b004fafc67a3d26805983274568c4")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base" "rackunit-lib" "racket-doc" "rackunit-doc" "scribble-lib"))
          (dependency-names
           .
           ("base" "rackunit-lib" "racket-doc" "rackunit-doc" "scribble-lib"))
          (description . "BDD test helpers for rackunit")
          (implies . ())
          (last-checked . 1557339754)
          (last-edit . 1457809036)
          (last-updated . 1502816377)
          (modules
           .
           ((lib "rackunit/spec.rkt")
            (lib "rackunit/scribblings/rackunit-spec.scrbl")))
          (name . "rackunit-spec")
          (nix-sha256
           .
           "1nzkyc82w45xgzdcvlvhsp5qh6r1gsggjd3wf3c53l2dhpkwdqfb")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:lexi.lambda@gmail.com . #t)
                   (ring:1 . #t)
                   (testing . #t)))
          (source . "git://github.com/lexi-lambda/rackunit-spec")
          (tags . ("testing"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "96f9f48b2f4b004fafc67a3d26805983274568c4")
                          (source
                           .
                           "git://github.com/lexi-lambda/rackunit-spec")
                          (source_url
                           .
                           "http://github.com/lexi-lambda/rackunit-spec/tree/master")))))))
 ("rackunit-test"
  .
  #hash((author . "noel@racket-lang.org ryanc@racket-lang.org")
        (checksum . "5ab6cf8b0f8e26b6e89dd1b58a93ea1472b14adb")
        (dependencies . ("base" "eli-tester" "rackunit-lib" "srfi-lite-lib"))
        (dependency-names
         .
         ("base" "eli-tester" "rackunit-lib" "srfi-lite-lib"))
        (description . "noel@racket-lang.org ryanc@racket-lang.org")
        (modules . ())
        (name . "rackunit-test")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/rackunit-test.zip")
        (tags . ())))
 ("rackunit-typed"
  .
  #hash((author . "jackhfirth@gmail.com samth@racket-lang.org")
        (checksum . "ef6c7db2666bc0baf6a8c721c53bccef2f28f5ba")
        (dependencies
         .
         ("racket-index"
          "rackunit-gui"
          "rackunit-lib"
          "typed-racket-lib"
          "base"
          "testing-util-lib"))
        (dependency-names
         .
         ("racket-index"
          "rackunit-gui"
          "rackunit-lib"
          "typed-racket-lib"
          "base"
          "testing-util-lib"))
        (description . "jackhfirth@gmail.com samth@racket-lang.org")
        (modules . ())
        (name . "rackunit-typed")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/rackunit-typed.zip")
        (tags . ())))
 ("racl"
  .
  #hasheq((author . "tonygarnockjones@gmail.com")
          (authors . ("tonygarnockjones@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . "server/built/min-fail/racl.txt")
                 (success-log . "server/built/install/racl.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/racl.txt")))
          (checksum . "a54859d0e39e61a4b69e46454ad67299d1967c4f")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("srfi-lite-lib" "base" "dynext-lib" "sandbox-lib" "rackunit-lib"))
          (dependency-names
           .
           ("srfi-lite-lib" "base" "dynext-lib" "sandbox-lib" "rackunit-lib"))
          (description . "Racket bindings for NaCl, a cryptographic library.")
          (implies . ())
          (last-checked . 1557339756)
          (last-edit . 1365119448)
          (last-updated . 1502816377)
          (modules
           .
           ((lib "racl/examples/repl-client.rkt")
            (lib "racl/ffi-lib.rkt")
            (lib "racl/spki-sexp.rkt")
            (lib "racl/tcp.rkt")
            (lib "racl/private/install.rkt")
            (lib "racl/main.rkt")
            (lib "racl/examples/repl-server.rkt")
            (lib "racl/keys.rkt")
            (lib "racl/test-main.rkt")
            (lib "racl/port.rkt")
            (lib "racl/session.rkt")
            (lib "racl/wrapper.rkt")))
          (name . "racl")
          (nix-sha256
           .
           "022aq5747md0z0ak5lw7m5syrnaiplf07snq2jv66545z3sbp1x0")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:tonygarnockjones@gmail.com . #t)
                   (crypto . #t)
                   (ffi . #t)
                   (ring:1 . #t)))
          (source . "github://github.com/tonyg/racl/master")
          (tags . ("crypto" "ffi"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "a54859d0e39e61a4b69e46454ad67299d1967c4f")
                          (source . "github://github.com/tonyg/racl/master")
                          (source_url
                           .
                           "http://github.com/tonyg/racl/tree/master")))))))
 ("raco-bug"
  .
  #hasheq((author . "samth@ccs.neu.edu")
          (authors . ("samth@ccs.neu.edu"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/raco-bug.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/raco-bug.txt")))
          (checksum . "21d5b6aa30e8efa33bf7110482dea48541399edb")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "drracket"))
          (dependency-names . ("base" "drracket"))
          (description . "Submit bug reports")
          (implies . ())
          (last-checked . 1557339756)
          (last-edit . 1393967131)
          (last-updated . 1502816378)
          (modules . ((lib "raco-bug/main.rkt")))
          (name . "raco-bug")
          (nix-sha256
           .
           "0k3dhls7910ynzr27llx8xzn3xkbbf1pviqkqbfxk7dx9zi9qfy9")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:samth@ccs.neu.edu . #t)
                   (bug . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/samth/raco-bug")
          (tags . ("bug"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "21d5b6aa30e8efa33bf7110482dea48541399edb")
                          (source . "git://github.com/samth/raco-bug")
                          (source_url
                           .
                           "http://github.com/samth/raco-bug/tree/master")))))))
 ("raco-find-collection"
  .
  #hasheq((author . "asumu@ccs.neu.edu")
          (authors . ("asumu@ccs.neu.edu"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "raco-fc"
                    "doc/raco-fc@raco-find-collection/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log
                  .
                  "server/built/install/raco-find-collection.txt")
                 (test-failure-log
                  .
                  "server/built/test-fail/raco-find-collection.txt")
                 (test-success-log . #f)))
          (checksum . "00f0d3dbad025fdb98d23b9ee1a78731f460d541")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base" "compiler-lib" "rackunit-lib" "scribble-lib"))
          (dependency-names
           .
           ("base" "compiler-lib" "rackunit-lib" "scribble-lib"))
          (description . "A script to find collections.")
          (implies . ())
          (last-checked . 1557339756)
          (last-edit . 1470935846)
          (last-updated . 1502816378)
          (modules
           .
           ((lib "find-collection/run.rkt")
            (lib "find-collection/raco-fc.scrbl")
            (lib "find-collection/find-collection.rkt")))
          (name . "raco-find-collection")
          (nix-sha256
           .
           "07ybiv87lh4y050wpfxz7jk31wklmjzf8ical1fxclwr3sk7kaws")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:asumu@ccs.neu.edu . #t)
                   (ring:1 . #t)
                   (search . #t)
                   (tools . #t)))
          (source . "git://github.com/takikawa/raco-find-collection")
          (tags . ("search" "tools"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "00f0d3dbad025fdb98d23b9ee1a78731f460d541")
                          (source
                           .
                           "git://github.com/takikawa/raco-find-collection")
                          (source_url
                           .
                           "http://github.com/takikawa/raco-find-collection/tree/master")))))))
 ("raco-macro-step"
  .
  #hasheq((author . "samth@ccs.neu.edu")
          (authors . ("samth@ccs.neu.edu"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/raco-macro-step.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/raco-macro-step.txt")))
          (checksum . "efbc4ba9ebfda38624050e9cfa0452da823decf0")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("macro-debugger" "base"))
          (dependency-names . ("macro-debugger" "base"))
          (description . "Run the macro stepper from the command line")
          (implies . ())
          (last-checked . 1557339756)
          (last-edit . 1503521840)
          (last-updated . 1502816378)
          (modules . ((lib "raco-macro-step/main.rkt")))
          (name . "raco-macro-step")
          (nix-sha256
           .
           "02pgax64qd0hl1f7q4bpr6kjy4qzsirrbin1rzl4phjshs1ar540")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:samth@ccs.neu.edu . #t)
                   (macro . #t)
                   (raco . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/samth/raco-macro-step")
          (tags . ("macro" "raco"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "efbc4ba9ebfda38624050e9cfa0452da823decf0")
                          (source . "git://github.com/samth/raco-macro-step")
                          (source_url
                           .
                           "http://github.com/samth/raco-macro-step/tree/master")))))))
 ("racquel"
  .
  #hasheq((author . "brown131@yahoo.com")
          (authors . ("brown131@yahoo.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "racquel" "doc/racquel@racquel/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/racquel.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/racquel.txt")))
          (checksum . "1442309b9a0417280a8644899156379495fa5c30")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "db-lib" "rackunit-lib" "racket-doc"))
          (dependency-names . ("base" "db-lib" "rackunit-lib" "racket-doc"))
          (description . "Racquel is an object/relational mapper for Racket.")
          (implies . ())
          (last-checked . 1557339756)
          (last-edit . 1415390133)
          (last-updated . 1502816378)
          (modules
           .
           ((lib "racquel/racquel.scrbl")
            (lib "racquel/keywords.rkt")
            (lib "racquel/stxclass.rkt")
            (lib "racquel/schema.rkt")
            (lib "racquel/doc/racquel.scrbl")
            (lib "racquel/util.rkt")
            (lib "racquel/test.rkt")
            (lib "racquel/main.rkt")
            (lib "racquel/test-chinook.rkt")
            (lib "racquel/metadata.rkt")))
          (name . "racquel")
          (nix-sha256
           .
           "0hxnrb467yg636hypvpq040sa8377rrpdiiv284g0yxfmjf3iz39")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:brown131@yahoo.com . #t)
                   (db . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/brown131/racquel")
          (tags . ("db"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "1442309b9a0417280a8644899156379495fa5c30")
                          (source . "git://github.com/brown131/racquel")
                          (source_url
                           .
                           "http://github.com/brown131/racquel/tree/master")))))))
 ("racr"
  .
  #hasheq((author . "eeide@cs.utah.edu")
          (authors . ("eeide@cs.utah.edu"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "racr" "doc/racr@racr/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/racr.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/racr.txt")))
          (checksum . "bee5a520ec663aa58673367a453c5d2a97e8d79c")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "rackunit-lib" "scribble-lib" "racket-doc"))
          (dependency-names
           .
           ("base" "rackunit-lib" "scribble-lib" "racket-doc"))
          (description
           .
           "A Racket port of RACR, a library for reference attribute grammar controlled rewriting.")
          (implies . ())
          (last-checked . 1557339756)
          (last-edit . 1497499354)
          (last-updated . 1502816379)
          (modules
           .
           ((lib "racr/main.rkt")
            (lib "racr/core.rkt")
            (lib "racr/testing.rkt")
            (lib "racr/scribblings/racr.scrbl")))
          (name . "racr")
          (nix-sha256
           .
           "0x23sz889rpn5cvy23pqd254q9si5l2m4vnj6l9i0mhvy236cq1n")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (:no-tag: . #t)
                   (author:eeide@cs.utah.edu . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/eeide/racr")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "bee5a520ec663aa58673367a453c5d2a97e8d79c")
                          (source . "git://github.com/eeide/racr")
                          (source_url
                           .
                           "http://github.com/eeide/racr/tree/master")))))))
 ("ragg"
  .
  #hasheq((author
           .
           "mb@mbtype.com clements@racket-lang.org dyoo@hashcollision.org")
          (authors
           .
           ("mb@mbtype.com"
            "clements@racket-lang.org"
            "dyoo@hashcollision.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "ragg" "doc/ragg@ragg/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/ragg.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/ragg.txt")))
          (checksum . "726b009ebbae874ada49a5579a13e062bf154203")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "parser-tools-lib"
            "rackunit-lib"
            "python-tokenizer"
            "at-exp-lib"
            "parser-tools-doc"
            "racket-doc"
            "scribble-lib"))
          (dependency-names
           .
           ("base"
            "parser-tools-lib"
            "rackunit-lib"
            "python-tokenizer"
            "at-exp-lib"
            "parser-tools-doc"
            "racket-doc"
            "scribble-lib"))
          (description
           .
           "Given a grammar in EBNF, `ragg` produces a parser that generates a syntax object with source locations. This package is maintained for backward compatibility. `brag` is an updated version.")
          (implies . ())
          (last-checked . 1557339756)
          (last-edit . 1528394558)
          (last-updated . 1502816380)
          (modules
           .
           ((lib "ragg/test/test-flatten.rkt")
            (lib "ragg/test/exercise-python-grammar.rkt")
            (lib "ragg/examples/simple-line-drawing/lexer.rkt")
            (lib "ragg/test/test-baby-json.rkt")
            (lib "ragg/examples/statlist-grammar.rkt")
            (lib "ragg/codegen/sexp-based-lang.rkt")
            (lib "ragg/examples/01-equal.rkt")
            (lib "ragg/ragg.scrbl")
            (lib "ragg/examples/simple-arithmetic-grammar.rkt")
            (lib "ragg/rules/lexer.rkt")
            (lib "ragg/examples/simple-line-drawing/lang/reader.rkt")
            (lib "ragg/rules/stx.rkt")
            (lib "ragg/test/test-simple-arithmetic-grammar.rkt")
            (lib "ragg/cfg-parser/cfg-parser.rkt")
            (lib "ragg/codegen/runtime.rkt")
            (lib "ragg/test/test-01-equal.rkt")
            (lib "ragg/test/test-0n1.rkt")
            (lib "ragg/rules/rule-structs.rkt")
            (lib "ragg/test/test-lexer.rkt")
            (lib "ragg/examples/simple-line-drawing/grammar.rkt")
            (lib "ragg/examples/bnf.rkt")
            (lib "ragg/examples/python-grammar.rkt")
            (lib "ragg/test/test-weird-grammar.rkt")
            (lib "ragg/codegen/codegen.rkt")
            (lib "ragg/test/test-0n1n.rkt")
            (lib "ragg/examples/simple-line-drawing/interpret.rkt")
            (lib "ragg/examples/lua-parser.rkt")
            (lib "ragg/support.rkt")
            (lib "ragg/codegen/satisfaction.rkt")
            (lib "ragg/test/test-wordy.rkt")
            (lib "ragg/codegen/lang/reader.rkt")
            (lib "ragg/rules/stx-types.rkt")
            (lib "ragg/test/test-simple-line-drawing.rkt")
            (lib "ragg/test/test-errors.rkt")
            (lib "ragg/examples/0n1.rkt")
            (lib "ragg/test/weird-grammar.rkt")
            (lib "ragg/lang/reader.rkt")
            (lib "ragg/examples/wordy.rkt")
            (lib "ragg/private/internal-support.rkt")
            (lib "ragg/test/test-parser.rkt")
            (lib "ragg/examples/baby-json.rkt")
            (lib "ragg/codegen/flatten.rkt")
            (lib "ragg/test/test-all.rkt")
            (lib "ragg/examples/simple-line-drawing/semantics.rkt")
            (lib "ragg/examples/0n1n.rkt")
            (lib "ragg/examples/simple-line-drawing.rkt")
            (lib "ragg/rules/parser.rkt")
            (lib "ragg/examples/nested-word-list.rkt")
            (lib "ragg/test/test-old-token.rkt")
            (lib "ragg/examples/simple-line-drawing/examples/letter-i.rkt")
            (lib "ragg/rules/runtime.rkt")))
          (name . "ragg")
          (nix-sha256
           .
           "05xkyby8s1a87mz29a2h93fikc06inrazgyy7s9hwnwmnzmh75fq")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:clements@racket-lang.org . #t)
                   (author:dyoo@hashcollision.org . #t)
                   (author:mb@mbtype.com . #t)
                   (legacy . #t)
                   (parser . #t)
                   (parsing . #t)
                   (ring:1 . #t)))
          (source . "https://github.com/jbclements/ragg.git")
          (tags . ("legacy" "parser" "parsing"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "726b009ebbae874ada49a5579a13e062bf154203")
                          (source . "https://github.com/jbclements/ragg.git")
                          (source_url
                           .
                           "https://github.com/jbclements/ragg.git")))))))
 ("ralist"
  .
  #hasheq((author . "dvanhorn@racket-lang.org")
          (authors . ("dvanhorn@racket-lang.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "ralist" "doc/ralist@ralist/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/ralist.txt")
                 (test-failure-log . "server/built/test-fail/ralist.txt")
                 (test-success-log . #f)))
          (checksum . "8f830a01463c547d2588671e76202cfe566a3fb1")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "rackunit-lib"
            "rackunit-doc"
            "scribble-lib"
            "racket-doc"
            "rackunit-doc"))
          (dependency-names
           .
           ("base"
            "rackunit-lib"
            "rackunit-doc"
            "scribble-lib"
            "racket-doc"
            "rackunit-doc"))
          (description . "Purely Functional Random Access Lists")
          (implies . ())
          (last-checked . 1557339756)
          (last-edit . 1354594625)
          (last-updated . 1550461981)
          (modules
           .
           ((lib "data/ralist/scribblings/run-tests.scrbl")
            (lib "data/ralist/contract.rkt")
            (lib "data/ralist/tests/freq-count.rkt")
            (lib "data/ralist/scribblings/run-benchmarks.scrbl")
            (lib "data/ralist/tests/tree.rkt")
            (lib "data/ralist/scribblings/ralist.scrbl")
            (lib "data/ralist/benchmarks/ra-list.rkt")
            (lib "data/ralist/run-benchmarks.rkt")
            (lib "data/ralist/tests/garden-fence.rkt")
            (lib "data/ralist/scribblings/bindings.scrbl")
            (lib "data/ralist/tests/private/ra-list-contracted.rkt")
            (lib "data/ralist.rkt")
            (lib "data/ralist/benchmarks/garden-fence.rkt")
            (lib "data/ralist/tests/private/ra-list-uncontracted.rkt")
            (lib "data/ralist/run-tests.rkt")
            (lib "data/ralist/tests/ra-list.rkt")
            (lib "data/ralist/benchmarks/freq-count.rkt")
            (lib "data/ralist/scribblings/contract.scrbl")
            (lib "data/ralist/benchmarks/contract.rkt")))
          (name . "ralist")
          (nix-sha256
           .
           "0qi7qc4nj2ayy4hnwdrnq2jg2b2xw7a3xjd6jb0wm9lh5lbx32ck")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:dvanhorn@racket-lang.org . #t)
                   (data . #t)
                   (ring:1 . #t)))
          (source . "github://github.com/dvanhorn/ralist/master")
          (tags . ("data"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "8f830a01463c547d2588671e76202cfe566a3fb1")
                          (source
                           .
                           "github://github.com/dvanhorn/ralist/master")
                          (source_url
                           .
                           "http://github.com/dvanhorn/ralist/tree/master")))))))
 ("ramunk"
  .
  #hasheq((author . "vervaeck.sam@skynet.be")
          (authors . ("vervaeck.sam@skynet.be"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . "server/built/deps/ramunk.txt")
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/ramunk.txt")
                 (test-failure-log . "server/built/test-fail/ramunk.txt")
                 (test-success-log . #f)))
          (checksum . "54503139318a4b8da4416700d5867988509b4b09")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . (("autoffi" "0.2")))
          (dependency-names . ("autoffi"))
          (description
           .
           "Autogenerated bindings to the Chipmunk2D physics engine")
          (implies . ())
          (last-checked . 1557339756)
          (last-edit . 1488410858)
          (last-updated . 1544967942)
          (modules
           .
           ((lib "ramunk/doc/vector.scrbl")
            (lib "ramunk/main.rkt")
            (lib "ramunk/examples/hello_chipmunk.rkt")
            (lib "ramunk/doc/space.scrbl")
            (lib "ramunk/doc/chipmunk.scrbl")
            (lib "ramunk/doc/shapes.scrbl")
            (lib "ramunk/doc/api.scrbl")
            (lib "ramunk/doc/body.scrbl")
            (lib "ramunk/doc/main.scrbl")))
          (name . "ramunk")
          (nix-sha256
           .
           "0gj0dh220vs20xpcfz7mwlhzszvi3lah67dyglkk9nf3dlf5jxz3")
          (ring . 1)
          (search-terms
           .
           #hasheq((2d . #t)
                   (:build-dep-fail: . #t)
                   (:build-success: . #t)
                   (author:vervaeck.sam@skynet.be . #t)
                   (ffi . #t)
                   (physics-engine . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/samvv/ramunk")
          (tags . ("2d" "ffi" "physics-engine"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "54503139318a4b8da4416700d5867988509b4b09")
                          (source . "git://github.com/samvv/ramunk")
                          (source_url
                           .
                           "http://github.com/samvv/ramunk/tree/master")))))))
 ("rascas"
  .
  #hasheq((author . "laurent.orseau@gmail.com")
          (authors . ("laurent.orseau@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "rascas" "doc/rascas@rascas/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/rascas.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/rascas.txt")))
          (checksum . "2bace90696d18c3c8a30be83d0f64d00437d06a3")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "math-lib"
            "parser-tools-lib"
            "rackunit-lib"
            "srfi-lite-lib"
            "scribble-lib"
            "racket-doc"
            "rackunit-lib"))
          (dependency-names
           .
           ("base"
            "math-lib"
            "parser-tools-lib"
            "rackunit-lib"
            "srfi-lite-lib"
            "scribble-lib"
            "racket-doc"
            "rackunit-lib"))
          (description
           .
           "Computer algebra system for Racket. Port of dharmatech/mpl without dependencies.")
          (implies . ())
          (last-checked . 1557339756)
          (last-edit . 1518373792)
          (last-updated . 1546012873)
          (modules
           .
           ((lib "rascas/expand-trig.rkt")
            (lib "rascas/sub.rkt")
            (lib "rascas/infix-parser.rkt")
            (lib "rascas/misc.rkt")
            (lib "rascas/alg-polynomial-division.rkt")
            (lib "rascas/rational-variables.rkt")
            (lib "rascas/variables.rkt")
            (lib "rascas/alg-polynomial-gcd.rkt")
            (lib "rascas/leading-coefficient-gpe.rkt")
            (lib "rascas/coeff-var-monomial.rkt")
            (lib "rascas/polynomial-gcd.rkt")
            (lib "rascas/order-relation.rkt")
            (lib "rascas/simplify-trig.rkt")
            (lib "rascas/expand-main-op.rkt")
            (lib "rascas/arithmetic.rkt")
            (lib "rascas/sum-product-power.rkt")
            (lib "rascas/algebraic-expand.rkt")
            (lib "rascas/polynomial-expansion.rkt")
            (lib "rascas/coefficient-gpe.rkt")
            (lib "rascas/sqrt.rkt")
            (lib "rascas/substitute.rkt")
            (lib "rascas/automatic-simplify.rkt")
            (lib "rascas/separate-sin-cos.rkt")
            (lib "rascas/numerator.rkt")
            (lib "rascas/main.rkt")
            (lib "rascas/rational-expand.rkt")
            (lib "rascas/degree-gpe.rkt")
            (lib "rascas/sin.rkt")
            (lib "rascas/trig-substitute.rkt")
            (lib "rascas/partial-fraction-1.rkt")
            (lib "rascas/expand-power.rkt")
            (lib "rascas/tan.rkt")
            (lib "rascas/contains.rkt")
            (lib "rascas/tests.rkt")
            (lib "rascas/polynomial-gpe.rkt")
            (lib "rascas/div.rkt")
            (lib "rascas/taylor.rkt")
            (lib "rascas/denominator.rkt")
            (lib "rascas/exp.rkt")
            (lib "rascas/cos.rkt")
            (lib "rascas/expand-exp.rkt")
            (lib "rascas/expand-product.rkt")
            (lib "rascas/polynomial-division.rkt")
            (lib "rascas/contract-exp.rkt")
            (lib "rascas/rationalize-expression.rkt")
            (lib "rascas/collect-terms.rkt")
            (lib "rascas/extended-euclidean-algorithm.rkt")
            (lib "rascas/scribblings/rascas.scrbl")
            (lib "rascas/log.rkt")
            (lib "rascas/monomial-gpe.rkt")
            (lib "rascas/alge.rkt")
            (lib "rascas/factorial.rkt")
            (lib "rascas/derivative.rkt")
            (lib "rascas/contract-trig.rkt")
            (lib "rascas/rational-gre.rkt")))
          (name . "rascas")
          (nix-sha256
           .
           "18p7c3bbp2qr0grqi4ljla5acivcn1wpz6d961xz3xcqy8p50b6v")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (algebra . #t)
                   (author:laurent.orseau@gmail.com . #t)
                   (math . #t)
                   (ring:2 . #t)))
          (source . "https://github.com/Metaxal/rascas.git")
          (tags . ("algebra" "math"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "2bace90696d18c3c8a30be83d0f64d00437d06a3")
                          (source . "https://github.com/Metaxal/rascas.git")
                          (source_url
                           .
                           "https://github.com/Metaxal/rascas.git")))))))
 ("rash"
  .
  #hasheq((author . "willghatch@gmail.com")
          (authors . ("willghatch@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "rash" "doc/rash@rash/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/rash.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/rash.txt")))
          (checksum . "77363527621054ca4e64eda4f542a5c45f7b4861")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           (("base" #:version "6.12")
            "basedir"
            "shell-pipeline"
            "linea"
            "udelim"
            "scribble-lib"
            "scribble-doc"
            "racket-doc"
            "rackunit-lib"
            "readline-lib"
            "make"
            "csv-reading"
            "text-table"))
          (dependency-names
           .
           ("base"
            "basedir"
            "shell-pipeline"
            "linea"
            "udelim"
            "scribble-lib"
            "scribble-doc"
            "racket-doc"
            "rackunit-lib"
            "readline-lib"
            "make"
            "csv-reading"
            "text-table"))
          (description
           .
           "The Reckless Racket Shell.  For interactions and scripting.")
          (implies . ())
          (last-checked . 1557339757)
          (last-edit . 1543015579)
          (last-updated . 1556575483)
          (modules
           .
           ((lib "rash/private/cd.rkt")
            (lib "rash/private/drracket-submit-predicate.rkt")
            (lib "rash/demo/with-transactional-file-list.rkt")
            (lib "rash/private/test/hash-lang-sanity-test.rkt")
            (lib "rash/private/test/unix-pipe-misc.rkt")
            (lib "rash/prompt-helpers/git-info.rkt")
            (lib "rash/private/top-level-print.rkt")
            (lib "rash/private/basic-module-begin.rkt")
            (lib "rash/demo/rc17.rkt")
            (lib "rash/demo/ps-wrapper.rkt")
            (lib "rash/private/rashrc-lib.rkt")
            (lib "rash/demo/demo-rc.rkt")
            (lib "rash/experimental.rkt")
            (lib "rash/private/escapable-template.rkt")
            (lib "rash/private/template-escape-detect.rkt")
            (lib "rash/demo/make.rkt")
            (lib "rash/scribblings/rash.scrbl")
            (lib "rash/main.rkt")
            (lib "rash/private/lang-funcs.rkt")
            (lib "rash/demo/setup.rkt")
            (lib "rash/private/repl-startup-hint-db.rkt")
            (lib "rash/demo/rc17-demo-modbeg.rkt")
            (lib "rash/demo/basic-infix-math.rkt")
            (lib "rash/demo/with-tmp-dir.rkt")
            (lib "rash/private/or-exn.rkt")
            (lib "rash/private/test/port-exhaustion-test.rkt")
            (lib "rash/repl.rkt")
            (lib "rash/private/syntax-walk.rkt")
            (lib "rash/private/option-app.rkt")
            (lib "rash/private/help-line-macro.rkt")
            (lib "rash/private/repl-startup-hint.rkt")
            (lib "rash/private/repl-namespace.rkt")
            (lib "rash/prompt-helpers/string-style.rkt")
            (lib "rash/demo/infix-math.rkt")
            (lib "rash/demo/use-make-dumb-example.rkt")))
          (name . "rash")
          (nix-sha256
           .
           "1jliy66bs5kgxyck7yg0nr4hn7cp9ifspvhn6vr4sgwmk3d0l4jh")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:willghatch@gmail.com . #t)
                   (repl . #t)
                   (ring:1 . #t)
                   (shell . #t)
                   (unix . #t)))
          (source . "https://github.com/willghatch/racket-rash.git?path=rash")
          (tags . ("repl" "shell" "unix"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "77363527621054ca4e64eda4f542a5c45f7b4861")
                          (source
                           .
                           "https://github.com/willghatch/racket-rash.git?path=rash")
                          (source_url
                           .
                           "https://github.com/willghatch/racket-rash.git?path=rash")))))))
 ("ratchet"
  .
  #hasheq((author . "stephen@thoughtstem.com")
          (authors . ("stephen@thoughtstem.com"))
          (build
           .
           #hash((conflicts-log . "conflicts.txt")
                 (dep-failure-log . "server/built/deps/ratchet.txt")
                 (docs
                  .
                  (("extract" "manual" "doc/manual@ratchet/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/ratchet.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/ratchet.txt")))
          (checksum . "3d7706eb08e8e50ae62af8a0966e008696ef5d2e")
          (checksum-error . #f)
          (conflicts . ())
          (date-added . 1550794102)
          (dependencies . ("lang-file"))
          (dependency-names . ("lang-file"))
          (description . "Toolkit for defining visual languages.")
          (implies . ())
          (last-checked . 1557339757)
          (last-edit . 1550794102)
          (last-updated . 1555099505)
          (modules
           .
           ((lib "ratchet/visual-language-maker/gui/widgets/main.rkt")
            (lib
             "ratchet/visual-language-maker/gui/widgets/basic-input-editor.rkt")
            (lib "ratchet/main.rkt")
            (lib "ratchet/launch.rkt")
            (lib "ratchet/util.rkt")
            (lib "ratchet/visual-language-maker/renderer/main.rkt")
            (lib "ratchet/visual-language-maker/base.rkt")
            (lib "ratchet/visual-language-maker/main.rkt")
            (lib "ratchet/scribblings/manual.scrbl")
            (lib "ratchet/visual-language-maker/tangeables/main.rkt")
            (lib "ratchet/tools/main.rkt")))
          (name . "ratchet")
          (nix-sha256
           .
           "0pfwscwwf9wi5by6wjigj4j6hp3wbzl97jfmb91lxqgc3qp4xq21")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-conflicts: . #t)
                   (:build-dep-fail: . #t)
                   (:build-success: . #t)
                   (:docs-error: . #t)
                   (:docs: . #t)
                   (:no-tag: . #t)
                   (author:stephen@thoughtstem.com . #t)
                   (ring:2 . #t)))
          (source . "https://github.com/thoughtstem/ratchet.git")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "3d7706eb08e8e50ae62af8a0966e008696ef5d2e")
                          (source
                           .
                           "https://github.com/thoughtstem/ratchet.git")
                          (source_url
                           .
                           "https://github.com/thoughtstem/ratchet.git")))))))
 ("ratel"
  .
  #hasheq((author . "john@nineteeneightd.com")
          (authors . ("john@nineteeneightd.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . "server/built/deps/ratel.txt")
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/ratel.txt")
                 (test-failure-log . "server/built/test-fail/ratel.txt")
                 (test-success-log . #f)))
          (checksum . "c28e0d56e9f1babad8293ab50c1f30cb3fd4df67")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "threading"))
          (dependency-names . ("base" "threading"))
          (description . "")
          (implies . ())
          (last-checked . 1557339757)
          (last-edit . 1478358706)
          (last-updated . 1502816382)
          (modules
           .
           ((lib "ratel/web/dispatcher.rkt")
            (lib "ratel/config.rkt")
            (lib "ratel/commands/suid-helper/mount.rkt")
            (lib "ratel/commands/suid-helper/unshare.rkt")
            (lib "ratel/commands/suid-helper/umount.rkt")
            (lib "ratel/ffi/libecryptfs.rkt")
            (lib "ratel/ffi/libkeyutils.rkt")
            (lib "ratel/commands/main.rkt")
            (lib "ratel/commands/show.rkt")
            (lib "ratel/suid-helper.rkt")
            (lib "ratel/commands/umount.rkt")
            (lib "ratel/ffi/libc.rkt")
            (lib "ratel/web/actions.rkt")
            (lib "ratel/commands/suid-helper/main.rkt")
            (lib "ratel/web/http.rkt")
            (lib "ratel/commands/mount.rkt")
            (lib "ratel/commands/web.rkt")
            (lib "ratel/passphrase.rkt")
            (lib "ratel/system.rkt")
            (lib "ratel/commands/register.rkt")))
          (name . "ratel")
          (nix-sha256
           .
           "0rifc07milr5jc5h0d8n8m110zqc5bbvyhmysa7vnl08z2p2ps9h")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-dep-fail: . #t)
                   (:build-success: . #t)
                   (:no-desc: . #t)
                   (:no-tag: . #t)
                   (author:john@nineteeneightd.com . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/198d/ratel")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "c28e0d56e9f1babad8293ab50c1f30cb3fd4df67")
                          (source . "git://github.com/198d/ratel")
                          (source_url
                           .
                           "http://github.com/198d/ratel/tree/master")))))))
 ("raw-string"
  .
  #hasheq((author . "cmpitg@gmail.com")
          (authors . ("cmpitg@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/raw-string.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/raw-string.txt")))
          (checksum . "b2745daf6da26c58b0138ab3ec0c20c1133e0ab6")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base"))
          (dependency-names . ("base"))
          (description . "Raw string support without at-exp")
          (implies . ())
          (last-checked . 1557339757)
          (last-edit . 1390250045)
          (last-updated . 1502816382)
          (modules
           .
           ((lib "raw-string/raw-string/lang/reader.rkt")
            (lib "raw-string/raw-string/lang/reader-extension.rkt")))
          (name . "raw-string")
          (nix-sha256
           .
           "06hlnq4pmcjqyb8mnh06d8y7clxl2z07hl0z42ff24a6x1ggg4sw")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:cmpitg@gmail.com . #t)
                   (language . #t)
                   (ring:1 . #t)))
          (source . "github://github.com/cmpitg/racket-raw-string/master")
          (tags . ("language"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "b2745daf6da26c58b0138ab3ec0c20c1133e0ab6")
                          (source
                           .
                           "github://github.com/cmpitg/racket-raw-string/master")
                          (source_url
                           .
                           "http://github.com/cmpitg/racket-raw-string/tree/master")))))))
 ("reactor"
  .
  #hasheq((author . "spencer@florence.io")
          (authors . ("spencer@florence.io"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "reactor" "doc/reactor@reactor/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/reactor.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/reactor.txt")))
          (checksum . "c4687bd43fafcd09802042648900d4737b04f923")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("seq-no-order"
            ("base" #:version "6.12")
            "rackunit-lib"
            "racket-doc"
            "scribble-lib"
            "rackunit"))
          (dependency-names
           .
           ("seq-no-order"
            "base"
            "rackunit-lib"
            "racket-doc"
            "scribble-lib"
            "rackunit"))
          (description
           .
           "An embedded synchronous reactive language, a la reactiveML")
          (implies . ())
          (last-checked . 1557339757)
          (last-edit . 1514903500)
          (last-updated . 1546120686)
          (modules
           .
           ((lib "reactor/tests/contract.rkt")
            (lib "reactor/control.rkt")
            (lib "reactor/ct.rkt")
            (lib "reactor/tests/control.rkt")
            (lib "reactor/data.rkt")
            (lib "reactor/tests/reentrance.rkt")
            (lib "reactor/runtime.rkt")
            (lib "reactor/tests/multivalues.rkt")
            (lib "reactor/main.rkt")
            (lib "reactor/lang.rkt")
            (lib "reactor/tests/basics.rkt")
            (lib "reactor/compiler.rkt")
            (lib "reactor/tests/values.rkt")
            (lib "reactor/tests/marks.rkt")
            (lib "reactor/tests/with-handlers.rkt")
            (lib "reactor/scribblings/reactor.scrbl")))
          (name . "reactor")
          (nix-sha256
           .
           "0cgdyy85yb911hxw6anlqj7cd3m3qwshbcja8x18fhp8a3fra1ni")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:spencer@florence.io . #t)
                   (concurrency . #t)
                   (language . #t)
                   (programming-languages . #t)
                   (reactive . #t)
                   (ring:2 . #t)))
          (source . "https://github.com/florence/reactor.git")
          (tags
           .
           ("concurrency" "language" "programming-languages" "reactive"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "c4687bd43fafcd09802042648900d4737b04f923")
                          (source . "https://github.com/florence/reactor.git")
                          (source_url
                           .
                           "https://github.com/florence/reactor.git")))))))
 ("readline"
  .
  #hash((author . "mflatt@racket-lang.org")
        (checksum . "ffa26cd69c9cb2fc283607a4fe93a3bcef5e794a")
        (dependencies . ("readline-lib" "readline-doc"))
        (dependency-names . ("readline-lib" "readline-doc"))
        (description . "mflatt@racket-lang.org")
        (modules . ())
        (name . "readline")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/readline.zip")
        (tags . ())))
 ("readline-doc"
  .
  #hash((author . "mflatt@racket-lang.org")
        (checksum . "535f190905e1a2fd4a305a891c7fa3f9d1e8c6d8")
        (dependencies . ("base" "scribble-lib" "readline-lib" "racket-doc"))
        (dependency-names
         .
         ("base" "scribble-lib" "readline-lib" "racket-doc"))
        (description . "mflatt@racket-lang.org")
        (modules . ())
        (name . "readline-doc")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/readline-doc.zip")
        (tags . ())))
 ("readline-gpl"
  .
  #hasheq((author . "leif@leifandersen.net")
          (authors . ("leif@leifandersen.net"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/readline-gpl.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/readline-gpl.txt")))
          (checksum . "2990d5f3a3d43c2d2f083970dacba7f1358950c7")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "rackunit-lib"))
          (dependency-names . ("base" "rackunit-lib"))
          (description
           .
           "Cause readline collection to use GNU's readline library.")
          (implies . ())
          (last-checked . 1557339757)
          (last-edit . 1430520585)
          (last-updated . 1502816383)
          (modules . ((lib "readline-gpl/private/readline-lib.rkt")))
          (name . "readline-gpl")
          (nix-sha256
           .
           "1vi149h4arxnkz4h899gw0ja7r6a0yj4rk31rpaaxj4nkr43zfy8")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:leif@leifandersen.net . #t)
                   (readline . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/racket/readline-gpl")
          (tags . ("readline"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "2990d5f3a3d43c2d2f083970dacba7f1358950c7")
                          (source . "git://github.com/racket/readline-gpl")
                          (source_url
                           .
                           "http://github.com/racket/readline-gpl/tree/master")))))))
 ("readline-lib"
  .
  #hash((author . "mflatt@racket-lang.org")
        (checksum . "996b83e3be7e6e52e42b93b279fe87d0a2e03e8f")
        (dependencies . (("base" #:version "6.90")))
        (dependency-names . ("base"))
        (description . "mflatt@racket-lang.org")
        (modules . ())
        (name . "readline-lib")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/readline-lib.zip")
        (tags . ())))
 ("realm"
  .
  #hash((author . "matthias@racket-lang.org")
        (checksum . "f3a918ca8d3325e9d33a41a2b16a67cee2f11040")
        (dependencies . ("base" "htdp-lib" "rackunit-lib"))
        (dependency-names . ("base" "htdp-lib" "rackunit-lib"))
        (description . "matthias@racket-lang.org")
        (modules . ())
        (name . "realm")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/realm.zip")
        (tags . ())))
 ("rebellion"
  .
  #hasheq((author . "jackhfirth@gmail.com")
          (authors . ("jackhfirth@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "rebellion" "doc/rebellion@rebellion/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/rebellion.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/rebellion.txt")))
          (checksum . "5e9da5dbf0ba25d447adc47fd90c97775cf2766c")
          (checksum-error . #f)
          (conflicts . ())
          (date-added . 1552643878)
          (dependencies
           .
           ("base"
            "reprovide-lang"
            "net-doc"
            "racket-doc"
            "rackunit-lib"
            "scribble-lib"))
          (dependency-names
           .
           ("base"
            "reprovide-lang"
            "net-doc"
            "racket-doc"
            "rackunit-lib"
            "scribble-lib"))
          (description . "A collection of infrastructure libraries")
          (implies . ())
          (last-checked . 1557339758)
          (last-edit . 1552935874)
          (last-updated . 1557109381)
          (modules
           .
           ((lib "rebellion/byte.rkt")
            (lib "rebellion/module-export.rkt")
            (lib "rebellion/private/boolean.rkt")
            (lib "rebellion/private/pair.scrbl")
            (lib "rebellion/singleton.rkt")
            (lib "rebellion/private/table.scrbl")
            (lib "rebellion/web-graph.rkt")
            (lib "rebellion/private/dependencies/layer1.rkt")
            (lib "rebellion/private/keyset.scrbl")
            (lib "rebellion/custom-write.rkt")
            (lib "rebellion/permutation.rkt")
            (lib "rebellion/private/dependencies/layer0.rkt")
            (lib "rebellion/private/struct-descriptor.scrbl")
            (lib "rebellion/private/module-export.scrbl")
            (lib "rebellion/media.rkt")
            (lib "rebellion/private/point.rkt")
            (lib "rebellion/private/web-link.scrbl")
            (lib "rebellion/private/name.rkt")
            (lib "rebellion/private/web-graph.rkt")
            (lib "rebellion/private/singleton.scrbl")
            (lib "rebellion/private/variant.scrbl")
            (lib "rebellion/tuple-type.rkt")
            (lib "rebellion/private/symbol.rkt")
            (lib "rebellion/private/equal+hash-struct.rkt")
            (lib "rebellion/record/field.rkt")
            (lib "rebellion/private/web-graph.scrbl")
            (lib "rebellion/private/point.scrbl")
            (lib "rebellion/point.rkt")
            (lib "rebellion/web-link.rkt")
            (lib "rebellion/variant.rkt")
            (lib "rebellion/private/keyword.rkt")
            (lib "rebellion/private/equal+hash.scrbl")
            (lib "rebellion/private/pair.rkt")
            (lib "rebellion/private/custom-write.scrbl")
            (lib "rebellion/private/media.scrbl")
            (lib "rebellion/private/tuple-type.rkt")
            (lib "rebellion/private/record.rkt")
            (lib "rebellion/predicate.rkt")
            (lib "rebellion/equal+hash.rkt")
            (lib "rebellion/private/variant.rkt")
            (lib "rebellion/private/struct-definition-util.rkt")
            (lib "rebellion/struct-descriptor.rkt")
            (lib "rebellion/private/record-field.scrbl")
            (lib "rebellion/private/byte.scrbl")
            (lib "rebellion/private/scribble-evaluator-factory.rkt")
            (lib "rebellion/private/tuple-type-definition.rkt")
            (lib "rebellion/private/custom-write-tuple.rkt")
            (lib "rebellion/equal+hash/struct.rkt")
            (lib "rebellion/entry.rkt")
            (lib "rebellion/tuple-type-definition.rkt")
            (lib "rebellion/private/generative-token.rkt")
            (lib "rebellion/boolean.rkt")
            (lib "rebellion/bit.rkt")
            (lib "rebellion/table.rkt")
            (lib "rebellion/private/keyset.rkt")
            (lib "rebellion/private/permutation.scrbl")
            (lib "rebellion/private/struct-descriptor.rkt")
            (lib "rebellion/main.rkt")
            (lib "rebellion/private/tuple-type.scrbl")
            (lib "rebellion/main.scrbl")
            (lib "rebellion/private/bit.scrbl")
            (lib "rebellion/natural.rkt")
            (lib "rebellion/private/table.rkt")
            (lib "rebellion/private/record.scrbl")
            (lib "rebellion/private/byte.rkt")
            (lib "rebellion/private/equal+hash-tuple.rkt")
            (lib "rebellion/generative-token.rkt")
            (lib "rebellion/private/tuple-type-definition.scrbl")
            (lib "rebellion/filter.rkt")
            (lib "rebellion/private/predicate.rkt")
            (lib "rebellion/custom-write/tuple.rkt")
            (lib "rebellion/equal+hash/tuple.rkt")
            (lib "rebellion/custom-write/struct.rkt")
            (lib "rebellion/private/generative-token.scrbl")
            (lib "rebellion/private/custom-write.rkt")
            (lib "rebellion/private/bit.rkt")
            (lib "rebellion/private/entry.scrbl")
            (lib "rebellion/symbol.rkt")
            (lib "rebellion/private/entry.rkt")
            (lib "rebellion/pair.rkt")
            (lib "rebellion/private/custom-write-struct.rkt")
            (lib "rebellion/keyword.rkt")
            (lib "rebellion/private/singleton.rkt")
            (lib "rebellion/keyset.rkt")
            (lib "rebellion/private/permutation.rkt")
            (lib "rebellion/name.rkt")
            (lib "rebellion/record.rkt")
            (lib "rebellion/private/natural.rkt")
            (lib "rebellion/private/module-export.rkt")
            (lib "rebellion/private/equal+hash.rkt")
            (lib "rebellion/private/filter.rkt")
            (lib "rebellion/private/web-link.rkt")
            (lib "rebellion/private/record-field.rkt")
            (lib "rebellion/private/media.rkt")))
          (name . "rebellion")
          (nix-sha256
           .
           "0dy2m5bpvc2ykm89ckhfmp2gscg60j66kiqx7c2a5z48kk6pfdx4")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:jackhfirth@gmail.com . #t)
                   (data . #t)
                   (experimental . #t)
                   (ring:2 . #t)
                   (tabular . #t)
                   (utility . #t)))
          (source . "https://github.com/jackfirth/rebellion.git")
          (tags . ("data" "experimental" "tabular" "utility"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "5e9da5dbf0ba25d447adc47fd90c97775cf2766c")
                          (source
                           .
                           "https://github.com/jackfirth/rebellion.git")
                          (source_url
                           .
                           "https://github.com/jackfirth/rebellion.git")))))))
 ("recaptcha"
  .
  #hasheq((author . "philip@philipmcgrath.com")
          (authors . ("philip@philipmcgrath.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "reCAPTCHA" "doc/reCAPTCHA@recaptcha/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/recaptcha.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/recaptcha.txt")))
          (checksum . "a4a06e0d9becc5043c8c066ee9a653a671c91b6e")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           (("base" #:version "6.1")
            "web-server-lib"
            "scribble-lib"
            "racket-doc"
            "web-server-doc"))
          (dependency-names
           .
           ("base"
            "web-server-lib"
            "scribble-lib"
            "racket-doc"
            "web-server-doc"))
          (description
           .
           "Utilities for using reCAPTCHA with the web-server/formlets API")
          (implies . ())
          (last-checked . 1557339758)
          (last-edit . 1491366140)
          (last-updated . 1548286973)
          (modules
           .
           ((lib "recaptcha/scribblings/recaptcha.scrbl")
            (lib "recaptcha/keys.rkt")
            (lib "recaptcha/main.rkt")))
          (name . "recaptcha")
          (nix-sha256
           .
           "1iraybmyqcgz04smxss8mhsi24zblb77cpwamzh3jbiwy0jznz7d")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:philip@philipmcgrath.com . #t)
                   (google . #t)
                   (net . #t)
                   (ring:1 . #t)
                   (web . #t)))
          (source . "https://github.com/LiberalArtist/recaptcha.git")
          (tags . ("google" "net" "web"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "a4a06e0d9becc5043c8c066ee9a653a671c91b6e")
                          (source
                           .
                           "https://github.com/LiberalArtist/recaptcha.git")
                          (source_url
                           .
                           "https://github.com/LiberalArtist/recaptcha.git")))))))
 ("reconstruct-template"
  .
  #hasheq((author . "alexander@knauth.org")
          (authors . ("alexander@knauth.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log
                  .
                  "server/built/deps/reconstruct-template.txt")
                 (docs
                  .
                  (("main"
                    "reconstruct-template-list-ctx"
                    "doc/reconstruct-template-list-ctx@reconstruct-template/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log
                  .
                  "server/built/install/reconstruct-template.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/reconstruct-template.txt")))
          (checksum . "2796784c77d26cae66620bc5ae6c54a3c850da13")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "rackunit-lib"))
          (dependency-names . ("base" "rackunit-lib"))
          (description
           .
           "`~list/ctx` pattern and `?list/ctx` template for reconstructing syntax objects for core-form languages")
          (implies . ())
          (last-checked . 1557339758)
          (last-edit . 1545263528)
          (last-updated . 1545811014)
          (modules
           .
           ((lib
             "reconstruct-template/scribblings/reconstruct-template-list-ctx.scrbl")
            (lib "reconstruct-template/list-ctx.rkt")
            (lib "reconstruct-template/util/stx-e-restore.rkt")
            (lib "reconstruct-template/util/stx-equal.rkt")))
          (name . "reconstruct-template")
          (nix-sha256
           .
           "1dywynswlmifvfkggqymrwkiicpy8wsnk07dq5vsn9iixhvz9sdf")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-dep-fail: . #t)
                   (:build-success: . #t)
                   (:docs: . #t)
                   (author:alexander@knauth.org . #t)
                   (experimental . #t)
                   (ring:2 . #t)
                   (syntax . #t)
                   (syntax-parse . #t)))
          (source . "https://github.com/AlexKnauth/reconstruct-template.git")
          (tags . ("experimental" "syntax" "syntax-parse"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "2796784c77d26cae66620bc5ae6c54a3c850da13")
                          (source
                           .
                           "https://github.com/AlexKnauth/reconstruct-template.git")
                          (source_url
                           .
                           "https://github.com/AlexKnauth/reconstruct-template.git")))))))
 ("redex"
  .
  #hash((author . "robby@racket-lang.org bfetscher@racket-lang.org")
        (checksum . "c46896732085530f46d2252c11d804305fda59d0")
        (dependencies
         .
         ("redex-doc" "redex-examples" "redex-lib" "redex-gui-lib"))
        (dependency-names
         .
         ("redex-doc" "redex-examples" "redex-lib" "redex-gui-lib"))
        (description . "robby@racket-lang.org bfetscher@racket-lang.org")
        (modules . ())
        (name . "redex")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/redex.zip")
        (tags . ())))
 ("redex-aam-tutorial"
  .
  #hasheq((author . "dvanhorn@racket-lang.org")
          (authors . ("dvanhorn@racket-lang.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log
                  .
                  "server/built/deps/redex-aam-tutorial.txt")
                 (docs
                  .
                  (("main"
                    "tutorial"
                    "doc/tutorial@redex-aam-tutorial/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/redex-aam-tutorial.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/redex-aam-tutorial.txt")))
          (checksum . "1f3b799ee01f1d444d625be26ed7cf9d21ad6e30")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "redex-lib"
            "scheme-lib"
            "scribble-lib"
            "redex-gui-lib"
            "sandbox-lib"))
          (dependency-names
           .
           ("base"
            "redex-lib"
            "scheme-lib"
            "scribble-lib"
            "redex-gui-lib"
            "sandbox-lib"))
          (description
           .
           "A brief introduction to the Redex  and Abstracting Abstract Machines.")
          (implies . ())
          (last-checked . 1557339758)
          (last-edit . 1511547178)
          (last-updated . 1523759276)
          (modules
           .
           ((lib "redex-aam-tutorial/subst.rkt")
            (lib "redex-aam-tutorial/tutorial.rkt")
            (lib "redex-aam-tutorial/tutorial.scrbl")
            (lib "redex-aam-tutorial/bib.rkt")
            (lib "redex-aam-tutorial/counter.rkt")
            (lib "redex-aam-tutorial/shared.rkt")
            (lib "redex-aam-tutorial/ex.rkt")))
          (name . "redex-aam-tutorial")
          (nix-sha256
           .
           "1dxlnizcw7aqk525wqdy7jjq2sg3j61k7m2zp3pmblca2j4p3di7")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-dep-fail: . #t)
                   (:build-success: . #t)
                   (:docs: . #t)
                   (author:dvanhorn@racket-lang.org . #t)
                   (redex . #t)
                   (ring:2 . #t)))
          (source . "https://github.com/dvanhorn/redex-aam-tutorial.git")
          (tags . ("redex"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "1f3b799ee01f1d444d625be26ed7cf9d21ad6e30")
                          (source
                           .
                           "https://github.com/dvanhorn/redex-aam-tutorial.git")
                          (source_url
                           .
                           "https://github.com/dvanhorn/redex-aam-tutorial.git")))))))
 ("redex-abbrevs"
  .
  #hasheq((author . "types@ccs.neu.edu")
          (authors . ("types@ccs.neu.edu"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . "server/built/fail/redex-abbrevs.txt")
                 (min-failure-log . #f)
                 (success-log . "server/built/install/redex-abbrevs.txt")
                 (test-failure-log . #f)
                 (test-success-log . #f)))
          (checksum . "2bf77739e5dc1db9c53aaf44d449f6edde620517")
          (checksum-error . #f)
          (conflicts . ())
          (date-added . 1557092402)
          (dependencies . ("redex-abbrevs-lib" "redex-abbrevs-doc"))
          (dependency-names . ("redex-abbrevs-lib" "redex-abbrevs-doc"))
          (description . "Tools for PLT Redex")
          (implies . ("redex-abbrevs-lib" "redex-abbrevs-doc"))
          (last-checked . 1557339758)
          (last-edit . 1557092402)
          (last-updated . 1557166960)
          (modules . ())
          (name . "redex-abbrevs")
          (nix-sha256
           .
           "1cyhs63km13ml4srpanw70crgjlar4njnskfh1gxafq3nbk94jxi")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-fail: . #t)
                   (:build-success: . #t)
                   (author:types@ccs.neu.edu . #t)
                   (macro . #t)
                   (redex . #t)
                   (ring:1 . #t)
                   (testing . #t)))
          (source
           .
           "https://github.com/bennn/redex-abbrevs.git?path=redex-abbrevs")
          (tags . ("macro" "redex" "testing"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "2bf77739e5dc1db9c53aaf44d449f6edde620517")
                          (source
                           .
                           "https://github.com/bennn/redex-abbrevs.git?path=redex-abbrevs")
                          (source_url
                           .
                           "https://github.com/bennn/redex-abbrevs.git?path=redex-abbrevs")))))))
 ("redex-abbrevs-doc"
  .
  #hasheq((author . "types@ccs.neu.edu")
          (authors . ("types@ccs.neu.edu"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("none" "redex-abbrevs")))
                 (failure-log . "server/built/fail/redex-abbrevs-doc.txt")
                 (min-failure-log . #f)
                 (success-log . #f)
                 (test-failure-log . #f)
                 (test-success-log . #f)))
          (checksum . "2bf77739e5dc1db9c53aaf44d449f6edde620517")
          (checksum-error . #f)
          (conflicts . ())
          (date-added . 1557092551)
          (dependencies
           .
           ("base"
            "scribble-lib"
            "racket-doc"
            "rackunit-lib"
            "rackunit-doc"
            "redex-doc"))
          (dependency-names
           .
           ("base"
            "scribble-lib"
            "racket-doc"
            "rackunit-lib"
            "rackunit-doc"
            "redex-doc"))
          (description . "documentation for \"redex-abbrevs\"")
          (implies . ())
          (last-checked . 1557339758)
          (last-edit . 1557092551)
          (last-updated . 1557166960)
          (modules . ((lib "redex-abbrevs/scribblings/redex-abbrevs.scrbl")))
          (name . "redex-abbrevs-doc")
          (nix-sha256
           .
           "1cyhs63km13ml4srpanw70crgjlar4njnskfh1gxafq3nbk94jxi")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-fail: . #t)
                   (:docs-error: . #t)
                   (:no-tag: . #t)
                   (author:types@ccs.neu.edu . #t)
                   (ring:2 . #t)))
          (source
           .
           "https://github.com/bennn/redex-abbrevs.git?path=redex-abbrevs-doc")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "2bf77739e5dc1db9c53aaf44d449f6edde620517")
                          (source
                           .
                           "https://github.com/bennn/redex-abbrevs.git?path=redex-abbrevs-doc")
                          (source_url
                           .
                           "https://github.com/bennn/redex-abbrevs.git?path=redex-abbrevs-doc")))))))
 ("redex-abbrevs-lib"
  .
  #hasheq((author . "types@ccs.neu.edu")
          (authors . ("types@ccs.neu.edu"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/redex-abbrevs-lib.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/redex-abbrevs-lib.txt")))
          (checksum . "2bf77739e5dc1db9c53aaf44d449f6edde620517")
          (checksum-error . #f)
          (conflicts . ())
          (date-added . 1557092488)
          (dependencies . ("redex-lib" "base" "rackunit-lib"))
          (dependency-names . ("redex-lib" "base" "rackunit-lib"))
          (description . "Implementation of \"redex-abbrevs\"")
          (implies . ())
          (last-checked . 1557339758)
          (last-edit . 1557092488)
          (last-updated . 1557166960)
          (modules
           .
           ((lib "redex-abbrevs/private/redex-abbrevs.rkt")
            (lib "redex-abbrevs/main.rkt")
            (lib "redex-abbrevs/unstable.rkt")))
          (name . "redex-abbrevs-lib")
          (nix-sha256
           .
           "1cyhs63km13ml4srpanw70crgjlar4njnskfh1gxafq3nbk94jxi")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:no-tag: . #t)
                   (author:types@ccs.neu.edu . #t)
                   (ring:2 . #t)))
          (source
           .
           "https://github.com/bennn/redex-abbrevs.git?path=redex-abbrevs-lib")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "2bf77739e5dc1db9c53aaf44d449f6edde620517")
                          (source
                           .
                           "https://github.com/bennn/redex-abbrevs.git?path=redex-abbrevs-lib")
                          (source_url
                           .
                           "https://github.com/bennn/redex-abbrevs.git?path=redex-abbrevs-lib")))))))
 ("redex-benchmark"
  .
  #hash((author . "robby@racket-lang.org bfetscher@racket-lang.org")
        (checksum . "7eedfd1f8ea7efc0a116e3a2132b3dd1445ae706")
        (dependencies
         .
         ("base"
          "compiler-lib"
          "rackunit-lib"
          "redex-lib"
          "redex-examples"
          "math-lib"
          "plot-lib"))
        (dependency-names
         .
         ("base"
          "compiler-lib"
          "rackunit-lib"
          "redex-lib"
          "redex-examples"
          "math-lib"
          "plot-lib"))
        (description . "robby@racket-lang.org bfetscher@racket-lang.org")
        (modules . ())
        (name . "redex-benchmark")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/redex-benchmark.zip")
        (tags . ())))
 ("redex-chk"
  .
  #hasheq((author . "sgtamk@gmail.com")
          (authors . ("sgtamk@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/redex-chk.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/redex-chk.txt")))
          (checksum . "b66f415966434e689842cc3cc60f8a48836d881b")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("redex-lib" "base" "rackunit-lib"))
          (dependency-names . ("redex-lib" "base" "rackunit-lib"))
          (description
           .
           "rackunit/chk style checks for redex ('term' quotes automatically)")
          (implies . ())
          (last-checked . 1557339758)
          (last-edit . 1476382419)
          (last-updated . 1502816388)
          (modules . ((lib "redex-chk/main.rkt")))
          (name . "redex-chk")
          (nix-sha256
           .
           "1jxjg32sw1s65kn1yqs91pxyhwda4a0fwyb12i4p8fkblw505vsn")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:sgtamk@gmail.com . #t)
                   (redex . #t)
                   (ring:1 . #t)
                   (testing . #t)))
          (source . "git://github.com/pnwamk/redex-chk#master")
          (tags . ("redex" "testing"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "b66f415966434e689842cc3cc60f8a48836d881b")
                          (source
                           .
                           "git://github.com/pnwamk/redex-chk#master")
                          (source_url
                           .
                           "http://github.com/pnwamk/redex-chk/tree/master#master")))))))
 ("redex-doc"
  .
  #hash((author . "robby@racket-lang.org bfetscher@racket-lang.org")
        (checksum . "6e9754641d693bbdb2e698773e08ed9d5b00e81b")
        (dependencies
         .
         ("base"
          "racket-doc"
          "draw-doc"
          "gui-doc"
          "htdp-doc"
          "pict-doc"
          "slideshow-doc"
          "at-exp-lib"
          "data-doc"
          "data-enumerate-lib"
          ("scribble-lib" #:version "1.16")
          "gui-lib"
          "htdp-lib"
          "pict-lib"
          "redex-gui-lib"
          "redex-benchmark"
          "rackunit-lib"
          "sandbox-lib"))
        (dependency-names
         .
         ("base"
          "racket-doc"
          "draw-doc"
          "gui-doc"
          "htdp-doc"
          "pict-doc"
          "slideshow-doc"
          "at-exp-lib"
          "data-doc"
          "data-enumerate-lib"
          "scribble-lib"
          "gui-lib"
          "htdp-lib"
          "pict-lib"
          "redex-gui-lib"
          "redex-benchmark"
          "rackunit-lib"
          "sandbox-lib"))
        (description . "robby@racket-lang.org bfetscher@racket-lang.org")
        (modules . ())
        (name . "redex-doc")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/redex-doc.zip")
        (tags . ())))
 ("redex-examples"
  .
  #hash((author . "robby@racket-lang.org bfetscher@racket-lang.org")
        (checksum . "6999d735acff19fae2522462c070ce3e38c39be5")
        (dependencies
         .
         ("base"
          "compiler-lib"
          "rackunit-lib"
          "redex-gui-lib"
          "slideshow-lib"
          "math-lib"
          "plot-lib"))
        (dependency-names
         .
         ("base"
          "compiler-lib"
          "rackunit-lib"
          "redex-gui-lib"
          "slideshow-lib"
          "math-lib"
          "plot-lib"))
        (description . "robby@racket-lang.org bfetscher@racket-lang.org")
        (modules . ())
        (name . "redex-examples")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/redex-examples.zip")
        (tags . ())))
 ("redex-gui-lib"
  .
  #hash((author . "robby@racket-lang.org bfetscher@racket-lang.org")
        (checksum . "784b5d7acce8fdd9cd8f99d1f225a8f3098c4daa")
        (dependencies
         .
         ("scheme-lib"
          "base"
          "draw-lib"
          "gui-lib"
          "data-lib"
          "profile-lib"
          "redex-lib"
          "redex-pict-lib"
          "pict-lib"
          "rackunit-lib"))
        (dependency-names
         .
         ("scheme-lib"
          "base"
          "draw-lib"
          "gui-lib"
          "data-lib"
          "profile-lib"
          "redex-lib"
          "redex-pict-lib"
          "pict-lib"
          "rackunit-lib"))
        (description . "robby@racket-lang.org bfetscher@racket-lang.org")
        (modules . ())
        (name . "redex-gui-lib")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/redex-gui-lib.zip")
        (tags . ())))
 ("redex-lib"
  .
  #hash((author . "robby@racket-lang.org bfetscher@racket-lang.org")
        (checksum . "0a0acc5b67d6db9bcb8cd46e14dd6556fe65b9b1")
        (dependencies
         .
         (("data-enumerate-lib" #:version "1.3")
          "scheme-lib"
          ("base" #:version "6.2.900.6")
          "data-lib"
          "math-lib"
          "tex-table"
          "profile-lib"
          "typed-racket-lib"
          "testing-util-lib"
          "2d-lib"
          "rackunit-lib"))
        (dependency-names
         .
         ("data-enumerate-lib"
          "scheme-lib"
          "base"
          "data-lib"
          "math-lib"
          "tex-table"
          "profile-lib"
          "typed-racket-lib"
          "testing-util-lib"
          "2d-lib"
          "rackunit-lib"))
        (description . "robby@racket-lang.org bfetscher@racket-lang.org")
        (modules . ())
        (name . "redex-lib")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/redex-lib.zip")
        (tags . ())))
 ("redex-pict-lib"
  .
  #hash((author . "robby@racket-lang.org bfetscher@racket-lang.org")
        (checksum . "2bbd7523ef036701d523606b18c70a029d8e0ce7")
        (dependencies
         .
         ("scheme-lib"
          "base"
          "draw-lib"
          "data-lib"
          "profile-lib"
          "redex-lib"
          "pict-lib"
          "rackunit-lib"))
        (dependency-names
         .
         ("scheme-lib"
          "base"
          "draw-lib"
          "data-lib"
          "profile-lib"
          "redex-lib"
          "pict-lib"
          "rackunit-lib"))
        (description . "robby@racket-lang.org bfetscher@racket-lang.org")
        (modules . ())
        (name . "redex-pict-lib")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/redex-pict-lib.zip")
        (tags . ())))
 ("redex-test"
  .
  #hash((author . "robby@racket-lang.org bfetscher@racket-lang.org")
        (checksum . "ef995adc04f81f78d756f20600a20c6297685282")
        (dependencies
         .
         ("base"
          "rackunit-lib"
          "at-exp-lib"
          "compatibility-lib"
          "drracket"
          "gui-lib"
          "pict-lib"
          "redex-gui-lib"
          "redex-examples"
          "data-enumerate-lib"
          "data-lib"
          "racket-index"
          "scheme-lib"
          "slideshow-lib"))
        (dependency-names
         .
         ("base"
          "rackunit-lib"
          "at-exp-lib"
          "compatibility-lib"
          "drracket"
          "gui-lib"
          "pict-lib"
          "redex-gui-lib"
          "redex-examples"
          "data-enumerate-lib"
          "data-lib"
          "racket-index"
          "scheme-lib"
          "slideshow-lib"))
        (description . "robby@racket-lang.org bfetscher@racket-lang.org")
        (modules . ())
        (name . "redex-test")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/redex-test.zip")
        (tags . ())))
 ("redis"
  .
  #hasheq((author . "stchang@racket-lang.org")
          (authors . ("stchang@racket-lang.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/redis.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/redis.txt")))
          (checksum . "ec69a3ea1c6b5eda35502361bc88d204c38b1120")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "data-lib" "rackunit-lib"))
          (dependency-names . ("base" "data-lib" "rackunit-lib"))
          (description . "A redis client for Racket.")
          (implies . ())
          (last-checked . 1557339760)
          (last-edit . 1380348836)
          (last-updated . 1502816397)
          (modules
           .
           ((lib "redis/redis.rkt")
            (lib "redis/redis-cmds.rkt")
            (lib "redis/test-utils.rkt")
            (lib "redis/main.rkt")
            (lib "redis/redis-tests.rkt")
            (lib "redis/bytes-utils.rkt")))
          (name . "redis")
          (nix-sha256
           .
           "1mgv35kns9wsdpq9jcmkqp04ya8b6r7p4cqqdld8y0zldif084q2")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:stchang@racket-lang.org . #t)
                   (db . #t)
                   (redis . #t)
                   (ring:1 . #t)))
          (source . "github://github.com/stchang/redis/master")
          (tags . ("db" "redis"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "ec69a3ea1c6b5eda35502361bc88d204c38b1120")
                          (source
                           .
                           "github://github.com/stchang/redis/master")
                          (source_url
                           .
                           "http://github.com/stchang/redis/tree/master")))))))
 ("reed-solomon"
  .
  #hasheq((author . "chenxiao770117@gmail.com")
          (authors . ("chenxiao770117@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "reed-solomon"
                    "doc/reed-solomon@reed-solomon/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/reed-solomon.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/reed-solomon.txt")))
          (checksum . "22a4e4c07fc12d76cc8db7db4f5e46303337aa2b")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "rackunit-lib" "racket-doc" "scribble-lib"))
          (dependency-names
           .
           ("base" "rackunit-lib" "racket-doc" "scribble-lib"))
          (description . "Reed-Solomon implementation")
          (implies . ())
          (last-checked . 1557339760)
          (last-edit . 1545374519)
          (last-updated . 1545374391)
          (modules
           .
           ((lib "reed-solomon/tests/decode/decode-test.rkt")
            (lib "reed-solomon/example/example.rkt")
            (lib "reed-solomon/lib/decode/express/express.rkt")
            (lib "reed-solomon/lib/share/lib.rkt")
            (lib "reed-solomon/lib/encode/express/error-code/error-code.rkt")
            (lib "reed-solomon/lib/encode/encode.rkt")
            (lib
             "reed-solomon/lib/encode/express/message-poly/message-poly.rkt")
            (lib "reed-solomon/main.rkt")
            (lib "reed-solomon/lib/decode/express/finally/finally.rkt")
            (lib "reed-solomon/lib/share/euclidean.rkt")
            (lib "reed-solomon/tests/share/euclidean-test.rkt")
            (lib "reed-solomon/lib/decode/express/no-error/no-error.rkt")
            (lib "reed-solomon/lib/encode/generator-poly.rkt")
            (lib "reed-solomon/lib/decode/express/forney/forney.rkt")
            (lib "reed-solomon/tests/encode/generate-poly-test.rkt")
            (lib "reed-solomon/tests/share/poly-test.rkt")
            (lib "reed-solomon/tests/decode/forney-test.rkt")
            (lib "reed-solomon/tests/decode/error-locator-poly-test.rkt")
            (lib "reed-solomon/lib/decode/chien-search.rkt")
            (lib
             "reed-solomon/lib/decode/express/chien-search/chien-search.rkt")
            (lib "reed-solomon/lib/decode/syndrome.rkt")
            (lib
             "reed-solomon/lib/encode/express/primitive-poly/primitive-poly.rkt")
            (lib "reed-solomon/tests/encode/encode-test.rkt")
            (lib
             "reed-solomon/lib/decode/express/too-many-errors/too-many-errors.rkt")
            (lib "reed-solomon/lib/decode/forney.rkt")
            (lib "reed-solomon/lib/decode/decode.rkt")
            (lib "reed-solomon/tests/share/gf-field-test.rkt")
            (lib "reed-solomon/tests/decode/chien-search-test.rkt")
            (lib
             "reed-solomon/lib/encode/express/generator-poly/generator-poly.rkt")
            (lib "reed-solomon/lib/encode/express/start.rkt")
            (lib "reed-solomon/tests/decode/correct-error-test.rkt")
            (lib "reed-solomon/lib/share/poly.rkt")
            (lib "reed-solomon/tests/decode/syndrome-test.rkt")
            (lib
             "reed-solomon/lib/decode/express/syndrome-poly/syndrome-poly.rkt")
            (lib
             "reed-solomon/lib/decode/express/euclidean-decode/euclidean-decode.rkt")
            (lib "reed-solomon/lib/encode/express/express.rkt")
            (lib "reed-solomon/scribble/reed-solomon.scrbl")
            (lib
             "reed-solomon/lib/encode/express/galois-fields/galois-fields.rkt")
            (lib "reed-solomon/lib/share/gf.rkt")
            (lib "reed-solomon/lib/encode/express/input/input.rkt")
            (lib "reed-solomon/lib/decode/express/input/input.rkt")
            (lib "reed-solomon/lib/decode/express/start.rkt")
            (lib "reed-solomon/lib/decode/error-locator-poly.rkt")
            (lib "reed-solomon/lib/decode/correct-error.rkt")))
          (name . "reed-solomon")
          (nix-sha256
           .
           "13npgy653v236blfp4ax8hhawdqf5szlx0clshiyliawb3cksi8h")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:chenxiao770117@gmail.com . #t)
                   (reed-solomon . #t)
                   (ring:2 . #t)))
          (source . "https://github.com/simmone/racket-reed-solomon.git")
          (tags . ("reed-solomon"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "22a4e4c07fc12d76cc8db7db4f5e46303337aa2b")
                          (source
                           .
                           "https://github.com/simmone/racket-reed-solomon.git")
                          (source_url
                           .
                           "https://github.com/simmone/racket-reed-solomon.git")))))))
 ("refined-acl2"
  .
  #hasheq((author . "cce@racket-lang.org")
          (authors . ("cce@racket-lang.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . "server/built/fail/refined-acl2.txt")
                 (min-failure-log . #f)
                 (success-log . #f)
                 (test-failure-log . #f)
                 (test-success-log . #f)))
          (checksum . "2e344ad7bcbc5b5a758296a8158dcf9a7f3880bd")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("mischief"))
          (dependency-names . ("mischief"))
          (description
           .
           "Refined ACL2: experimental implementation of ACL2-verifiable code with ML modules and Racket macros.")
          (implies . ())
          (last-checked . 1557339760)
          (last-edit . 1378339910)
          (last-updated . 1502816397)
          (modules
           .
           ((lib "refined-acl2/certify.rkt")
            (lib "refined-acl2/model/names.rkt")
            (lib "refined-acl2/prelude/core/component.rkt")
            (lib "refined-acl2/examples/virtual-machine/descriptions.rkt")
            (lib "refined-acl2/legacy/type/base.rkt")
            (lib "refined-acl2/examples/id-non-dracula/original.rkt")
            (lib "refined-acl2/prelude/list-of.rkt")
            (lib "refined-acl2/prelude/core/keywords.rkt")
            (lib "refined-acl2/model/acl2.rkt")
            (lib "refined-acl2/model/api.rkt")
            (lib "refined-acl2/examples/id-non-dracula/check.rkt")
            (lib "refined-acl2/examples/vm.rkt")
            (lib "refined-acl2/prelude.rkt")
            (lib "refined-acl2/prelude/base/struct.rkt")
            (lib "refined-acl2/examples/generic.rkt")
            (lib "refined-acl2/prelude/core/description.rkt")
            (lib "refined-acl2/tests/suite/modular.rkt")
            (lib "refined-acl2/prelude/core/imported.rkt")
            (lib "refined-acl2/tests/suite/atomic.rkt")
            (lib "refined-acl2/prelude/type.rkt")
            (lib "refined-acl2/core.rkt")
            (lib "refined-acl2/prelude/core/expressions.rkt")
            (lib "refined-acl2/prelude/base/datatype.rkt")
            (lib "refined-acl2/tests/run.rkt")
            (lib "refined-acl2/legacy/type/function.rkt")
            (lib "refined-acl2/expansion/grammar.rkt")
            (lib "refined-acl2/legacy/ref.rkt")
            (lib "refined-acl2/expansion/runtime.rkt")
            (lib "refined-acl2/examples/sexp.rkt")
            (lib "refined-acl2/legacy/type/theorem.rkt")
            (lib "refined-acl2/examples/id-non-dracula/fresh.rkt")
            (lib "refined-acl2/tests/suite/macro.rkt")
            (lib "refined-acl2/base.rkt")
            (lib "refined-acl2/tests/harness.rkt")
            (lib "refined-acl2/expansion/simplify.rkt")
            (lib "refined-acl2/examples/virtual-machine/soundness.rkt")
            (lib "refined-acl2/prelude/core/expansion.rkt")
            (lib "refined-acl2/examples/ast.rkt")
            (lib "refined-acl2/legacy/type/generic.rkt")
            (lib "refined-acl2/legacy/type.rkt")
            (lib "refined-acl2/proof/static.rkt")
            (lib "refined-acl2/primitive.rkt")
            (lib "refined-acl2/legacy/api.rkt")
            (lib "refined-acl2/prelude/sexp.rkt")
            (lib "refined-acl2/legacy/type/field.rkt")
            (lib "refined-acl2/legacy/type/description.rkt")
            (lib "refined-acl2/legacy/registry.rkt")
            (lib "refined-acl2/prelude/base/shorthand.rkt")
            (lib "refined-acl2/kernel.rkt")
            (lib "refined-acl2/model.rkt")
            (lib "refined-acl2/proof/term.rkt")
            (lib "refined-acl2/examples/bug.rkt")
            (lib "refined-acl2/prelude/base/primitive.rkt")
            (lib "refined-acl2/model/data.rkt")
            (lib "refined-acl2/prelude/base/mutual.rkt")
            (lib "refined-acl2/model/verify.rkt")
            (lib "refined-acl2/examples/id-non-dracula/different.rkt")
            (lib "refined-acl2/examples/id-non-dracula/identical.rkt")
            (lib "refined-acl2/expansion/names.rkt")
            (lib "refined-acl2/prelude/core/input-streams.rkt")
            (lib "refined-acl2/proof/dynamic.rkt")
            (lib "refined-acl2/legacy/check.rkt")
            (lib "refined-acl2/prelude/core/atomic.rkt")
            (lib "refined-acl2/tests/suite/surface.rkt")
            (lib "refined-acl2/expansion/alpha.rkt")
            (lib "refined-acl2/legacy/proof.rkt")
            (lib "refined-acl2/prelude/base.rkt")
            (lib "refined-acl2/prelude/base/match.rkt")
            (lib "refined-acl2/prelude/core/support.rkt")
            (lib "refined-acl2/legacy/rename.rkt")
            (lib "refined-acl2/legacy/type/component.rkt")
            (lib "refined-acl2/tests/diff.rkt")
            (lib "refined-acl2/model/parse.rkt")
            (lib "refined-acl2/model/quote.rkt")
            (lib "refined-acl2/model/subst.rkt")
            (lib "refined-acl2/legacy/unique.rkt")
            (lib "refined-acl2/prelude/set-of.rkt")
            (lib "refined-acl2/legacy/type/value.rkt")
            (lib "refined-acl2/expansion/paths.rkt")
            (lib "refined-acl2/model/proof-term.rkt")
            (lib "refined-acl2/model/syntax.rkt")
            (lib "refined-acl2/expansion/dependency.rkt")
            (lib "refined-acl2/model/unparse.rkt")
            (lib "refined-acl2/tests/suite/component.rkt")
            (lib "refined-acl2/examples/diss.rkt")
            (lib "refined-acl2/main.rkt")
            (lib "refined-acl2/prelude/core.rkt")))
          (name . "refined-acl2")
          (nix-sha256
           .
           "0d34c281l2rbcns8l4fg53di787dzxqqn11fgp9i14nih0rzh3gx")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-fail: . #t)
                   (:no-tag: . #t)
                   (author:cce@racket-lang.org . #t)
                   (ring:1 . #t)))
          (source . "github://github.com/carl-eastlund/refined-acl2/master")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "2e344ad7bcbc5b5a758296a8158dcf9a7f3880bd")
                          (source
                           .
                           "github://github.com/carl-eastlund/refined-acl2/master")
                          (source_url
                           .
                           "http://github.com/carl-eastlund/refined-acl2/tree/master")))))))
 ("regex-machine"
  .
  #hasheq((author . "jackhfirth@gmail.com")
          (authors . ("jackhfirth@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "regex-machine"
                    "doc/regex-machine@regex-machine/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/regex-machine.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/regex-machine.txt")))
          (checksum . "25754a4dc2aae351e2fe5db1b98101abb9ce088e")
          (checksum-error . #f)
          (conflicts . ())
          (date-added . 1549322621)
          (dependencies
           .
           ("base"
            "gui-lib"
            "pict-lib"
            "reprovide-lang"
            "rackunit-lib"
            "racket-doc"
            "scribble-lib"))
          (dependency-names
           .
           ("base"
            "gui-lib"
            "pict-lib"
            "reprovide-lang"
            "rackunit-lib"
            "racket-doc"
            "scribble-lib"))
          (description
           .
           "An implementation of Russ Cox's regular expression machine language")
          (implies . ())
          (last-checked . 1557339760)
          (last-edit . 1549322621)
          (last-updated . 1549406575)
          (modules
           .
           ((lib "regex-machine/main.scrbl")
            (lib "regex-machine/main.rkt")
            (lib "regex-machine/program.rkt")
            (lib "regex-machine/vm.rkt")
            (lib "regex-machine/gui.rkt")))
          (name . "regex-machine")
          (nix-sha256
           .
           "1b8p7j1h4an30y7m58aqaxdxwshbb2znld538qs7p7w2yabdpmha")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (:no-tag: . #t)
                   (author:jackhfirth@gmail.com . #t)
                   (ring:2 . #t)))
          (source . "https://github.com/jackfirth/regex-machine.git")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "25754a4dc2aae351e2fe5db1b98101abb9ce088e")
                          (source
                           .
                           "https://github.com/jackfirth/regex-machine.git")
                          (source_url
                           .
                           "https://github.com/jackfirth/regex-machine.git")))))))
 ("reloadable"
  .
  #hasheq((author . "tonygarnockjones@gmail.com")
          (authors . ("tonygarnockjones@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/reloadable.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/reloadable.txt")))
          (checksum . "cae2a141955bc2e0d068153f2cd07f88e6a6e9ef")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base"))
          (dependency-names . ("base"))
          (description
           .
           "Support for code-reloading for long-running racket programs (such as web-servers).")
          (implies . ())
          (last-checked . 1557339760)
          (last-edit . 1416004703)
          (last-updated . 1502816397)
          (modules . ((lib "reloadable/main.rkt")))
          (name . "reloadable")
          (nix-sha256
           .
           "0fzdp3nyl4786ykl264iyc5wfaw83sa44lavjf4rkwj8rghn68a2")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:tonygarnockjones@gmail.com . #t)
                   (ring:1 . #t)
                   (system . #t)
                   (web . #t)))
          (source . "github://github.com/tonyg/racket-reloadable/master")
          (tags . ("system" "web"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "cae2a141955bc2e0d068153f2cd07f88e6a6e9ef")
                          (source
                           .
                           "github://github.com/tonyg/racket-reloadable/master")
                          (source_url
                           .
                           "http://github.com/tonyg/racket-reloadable/tree/master")))))))
 ("remap"
  .
  #hasheq((author . "hashim.muqtadir@gmail.com")
          (authors . ("hashim.muqtadir@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("salvage" "remap" "doc/remap@remap/index.html")))
                 (failure-log . "server/built/fail/remap.txt")
                 (min-failure-log . #f)
                 (success-log . #f)
                 (test-failure-log . #f)
                 (test-success-log . #f)))
          (checksum . "3682db9fff3bc5007833e07bf9a9ed6e8e0170a9")
          (checksum-error . #f)
          (conflicts . ())
          (date-added . 1551713661)
          (dependencies
           .
           ("base"
            "db-lib"
            "typed-racket-lib"
            "typed-racket-more"
            "scribble-lib"
            "racket-doc"
            "rackunit-typed"))
          (dependency-names
           .
           ("base"
            "db-lib"
            "typed-racket-lib"
            "typed-racket-more"
            "scribble-lib"
            "racket-doc"
            "rackunit-typed"))
          (description
           .
           "An ORM kinda thing for Racket, without the objects.")
          (implies . ())
          (last-checked . 1557339760)
          (last-edit . 1551713661)
          (last-updated . 1553094368)
          (modules
           .
           ((lib "remap/private/tables.rkt")
            (lib "remap/private/creates-and-updates.rkt")
            (lib "remap/scribblings/remap.scrbl")
            (lib "remap/private/query.rkt")
            (lib "remap/private/to-sql.rkt")
            (lib "remap/private/fancy-select.rkt")
            (lib "remap/private/grouping-v2.rkt")
            (lib "remap/private/parser.rkt")
            (lib "remap/private/utils.rkt")
            (lib "remap/private/grouping.rkt")
            (lib "remap/private/tests.rkt")
            (lib "remap/main.rkt")
            (lib "remap/private/delete.rkt")))
          (name . "remap")
          (nix-sha256
           .
           "16yqzhcgwcf27llbx9l8sv1gymwym9wh4dls3ydmcvza26wfvnhz")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-fail: . #t)
                   (:docs-error: . #t)
                   (:docs: . #t)
                   (ORM . #t)
                   (SQL . #t)
                   (author:hashim.muqtadir@gmail.com . #t)
                   (db . #t)
                   (mapper . #t)
                   (object . #t)
                   (relational . #t)
                   (ring:2 . #t)))
          (source . "https://gitlab.com/hashimmm/remap.git")
          (tags . ("db" "mapper" "object" "ORM" "relational" "SQL"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "3682db9fff3bc5007833e07bf9a9ed6e8e0170a9")
                          (source . "https://gitlab.com/hashimmm/remap.git")
                          (source_url
                           .
                           "https://gitlab.com/hashimmm/remap.git")))))))
 ("remember"
  .
  #hasheq((author . "georges.duperon@gmail.com")
          (authors . ("georges.duperon@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "remember" "doc/remember@remember/index.html")
                   ("main"
                    "remember-implementation.hl"
                    "doc/remember-implementation.hl@remember/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/remember.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/remember.txt")))
          (checksum . "6d497291dcc0d90e5437300aef70d462f7865c91")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "rackunit-lib"
            "compatibility-lib"
            "scribble-lib"
            "typed-racket-lib"
            "phc-toolkit"
            "hyper-literate"
            "scribble-lib"
            "racket-doc"
            "typed-racket-doc"
            "scribble-enhanced"))
          (dependency-names
           .
           ("base"
            "rackunit-lib"
            "compatibility-lib"
            "scribble-lib"
            "typed-racket-lib"
            "phc-toolkit"
            "hyper-literate"
            "scribble-lib"
            "racket-doc"
            "typed-racket-doc"
            "scribble-enhanced"))
          (description
           .
           "Compile-time memoize across compilations. Writes values to a file, so that they will be remembered during the next compilation.")
          (implies . ())
          (last-checked . 1557339761)
          (last-edit . 1470945478)
          (last-updated . 1555924009)
          (modules
           .
           ((lib "remember/test/test1.rkt")
            (lib "remember/test/input1.rkt")
            (lib "remember/test/input-error.rkt")
            (lib "remember/remember-implementation.hl.rkt")
            (lib "remember/scribblings/remember.scrbl")
            (lib "remember/main.rkt")
            (lib "remember/test/test2.rkt")
            (lib "remember/test/input3.rkt")
            (lib "remember/test/test3.rkt")
            (lib "remember/test/io2.rkt")
            (lib "remember/test/test-error.rkt")))
          (name . "remember")
          (nix-sha256
           .
           "1vzmdmpym78b9rzl2mbvbjijnygv80gzb86wjdiks2l2vf46lml1")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:georges.duperon@gmail.com . #t)
                   (memoization . #t)
                   (ring:1 . #t)
                   (syntax . #t)))
          (source . "https://github.com/jsmaniac/remember.git")
          (tags . ("memoization" "syntax"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "6d497291dcc0d90e5437300aef70d462f7865c91")
                          (source
                           .
                           "https://github.com/jsmaniac/remember.git")
                          (source_url
                           .
                           "https://github.com/jsmaniac/remember.git")))))))
 ("remix"
  .
  #hasheq((author . "jay.mccarthy@gmail.com")
          (authors . ("jay.mccarthy@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "remix" "doc/remix@remix/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/remix.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/remix.txt")))
          (checksum . "982529019d12252b5f6ab49c17a1a8283ccfb9df")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "at-exp-lib"
            "rackunit-lib"
            "datalog"
            "scribble-doc"
            "rackunit-lib"
            "base"
            "racket-doc"
            "scribble-lib"
            "typed-racket-lib"
            "unstable-lib"))
          (dependency-names
           .
           ("base"
            "at-exp-lib"
            "rackunit-lib"
            "datalog"
            "scribble-doc"
            "rackunit-lib"
            "base"
            "racket-doc"
            "scribble-lib"
            "typed-racket-lib"
            "unstable-lib"))
          (description . "a revised version of Racket")
          (implies . ())
          (last-checked . 1557339761)
          (last-edit . 1448414063)
          (last-updated . 1543924824)
          (modules
           .
           ((lib "remix/tests/2-required.rkt")
            (lib "remix/scribblings/racket2.scrbl")
            (lib "remix/tests/2-reader.rkt")
            (lib "remix/tests/expand-from.rkt")
            (lib "remix/static-interface.rkt")
            (lib "remix/stx.rkt")
            (lib "remix/tests/theory.rkt")
            (lib "remix/test.rkt")
            (lib "remix/tests/module.rkt")
            (lib "remix/private/required-helper.rkt")
            (lib "remix/main.rkt")
            (lib "remix/module.rkt")
            (lib "remix/stx/raw.rkt")
            (lib "remix/tests/2-required-server.rkt")
            (lib "remix/default-in.rkt")
            (lib "remix/racket.rkt")
            (lib "remix/tests/stx.rkt")
            (lib "remix/tests/layout.rkt")
            (lib "remix/class.rkt")
            (lib "remix/tests/racket/remixd.rkt")
            (lib "remix/datalog.rkt")
            (lib "remix/tests/expand-to.rkt")
            (lib "remix/tests/2-require-star-d.rkt")
            (lib "remix/tests/class.rkt")
            (lib "remix/base.rkt")
            (lib "remix/exp/unit-test.rkt")
            (lib "remix/layout.rkt")
            (lib "remix/stx/singleton-struct.rkt")
            (lib "remix/exp/unit.rkt")
            (lib "remix/scribblings/remix.scrbl")
            (lib "remix/tests/static-interface.rkt")
            (lib "remix/theory.rkt")))
          (name . "remix")
          (nix-sha256
           .
           "0zvv1wv78091884xjbj2ysv9cvdksgj0mqmy5243nbz769nsxckd")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:jay.mccarthy@gmail.com . #t)
                   (lang . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/jeapostrophe/remix")
          (tags . ("lang"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "982529019d12252b5f6ab49c17a1a8283ccfb9df")
                          (source . "git://github.com/jeapostrophe/remix")
                          (source_url
                           .
                           "http://github.com/jeapostrophe/remix/tree/master")))))))
 ("remote-shell"
  .
  #hash((author . "mflatt@racket-lang.org")
        (authors . ("mflatt@racket-lang.org"))
        (build
         .
         #hash((conflicts-log . #f)
               (dep-failure-log . #f)
               (docs . ())
               (failure-log . #f)
               (min-failure-log . #f)
               (success-log . "server/built/install/remote-shell.txt")
               (test-failure-log . #f)
               (test-success-log
                .
                "server/built/test-success/remote-shell.txt")))
        (checksum . "4829323916d295d4d11faa9af9b60303b599e872")
        (checksum-error . #f)
        (conflicts . ())
        (dependencies . ("remote-shell-lib" "remote-shell-doc"))
        (dependency-names . ("remote-shell-lib" "remote-shell-doc"))
        (description
         .
         "Tools for running on remote and virtual-machine hosts")
        (implies . ("remote-shell-lib" "remote-shell-doc"))
        (last-checked . 1557339761)
        (last-edit . 1417307461)
        (last-updated . 1515435510)
        (modules . ())
        (name . "remote-shell")
        (nix-sha256 . "02mkd149cxqwnm68qdb6jiyfrjb7ifcmh6xdssx665dazdn0390j")
        (ring . 0)
        (search-terms
         .
         #hasheq((:build-success: . #t)
                 (:no-tag: . #t)
                 (author:mflatt@racket-lang.org . #t)
                 (ring:0 . #t)))
        (source . "git://github.com/racket/remote-shell/?path=remote-shell")
        (tags . ())
        (versions
         .
         #hash((default
                .
                #hasheq((checksum
                         .
                         "4829323916d295d4d11faa9af9b60303b599e872")
                        (source
                         .
                         "git://github.com/racket/remote-shell/?path=remote-shell")
                        (source_url
                         .
                         "git://github.com/racket/remote-shell/?path=remote-shell")))
               ("5.3.4"
                .
                #hash((checksum . "9f098dddde7f217879070816090c1e8e74d49432")
                      (source
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")
                      (source_url
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")))
               ("5.3.5"
                .
                #hash((checksum . "9f098dddde7f217879070816090c1e8e74d49432")
                      (source
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")
                      (source_url
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")))
               ("5.3.6"
                .
                #hash((checksum . "9f098dddde7f217879070816090c1e8e74d49432")
                      (source
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")
                      (source_url
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")))))))
 ("remote-shell-doc"
  .
  #hash((author . "mflatt@racket-lang.org")
        (authors . ("mflatt@racket-lang.org"))
        (build
         .
         #hash((conflicts-log . #f)
               (dep-failure-log . #f)
               (docs
                .
                (("main"
                  "remote-shell"
                  "doc/remote-shell@remote-shell-doc/index.html")))
               (failure-log . #f)
               (min-failure-log . #f)
               (success-log . "server/built/install/remote-shell-doc.txt")
               (test-failure-log . #f)
               (test-success-log
                .
                "server/built/test-success/remote-shell-doc.txt")))
        (checksum . "4829323916d295d4d11faa9af9b60303b599e872")
        (checksum-error . #f)
        (conflicts . ())
        (dependencies
         .
         ("base" "racket-doc" "remote-shell-lib" "scribble-lib"))
        (dependency-names
         .
         ("base" "racket-doc" "remote-shell-lib" "scribble-lib"))
        (description . "documentation part of \"remote-shell\"")
        (implies . ())
        (last-checked . 1557339761)
        (last-edit . 1417307461)
        (last-updated . 1515435510)
        (modules . ((lib "remote-shell/remote-shell.scrbl")))
        (name . "remote-shell-doc")
        (nix-sha256 . "02mkd149cxqwnm68qdb6jiyfrjb7ifcmh6xdssx665dazdn0390j")
        (ring . 0)
        (search-terms
         .
         #hasheq((:build-success: . #t)
                 (:docs: . #t)
                 (:no-tag: . #t)
                 (author:mflatt@racket-lang.org . #t)
                 (ring:0 . #t)))
        (source
         .
         "git://github.com/racket/remote-shell/?path=remote-shell-doc")
        (tags . ())
        (versions
         .
         #hash((default
                .
                #hasheq((checksum
                         .
                         "4829323916d295d4d11faa9af9b60303b599e872")
                        (source
                         .
                         "git://github.com/racket/remote-shell/?path=remote-shell-doc")
                        (source_url
                         .
                         "git://github.com/racket/remote-shell/?path=remote-shell-doc")))
               ("5.3.4"
                .
                #hash((checksum . "9f098dddde7f217879070816090c1e8e74d49432")
                      (source
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")
                      (source_url
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")))
               ("5.3.5"
                .
                #hash((checksum . "9f098dddde7f217879070816090c1e8e74d49432")
                      (source
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")
                      (source_url
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")))
               ("5.3.6"
                .
                #hash((checksum . "9f098dddde7f217879070816090c1e8e74d49432")
                      (source
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")
                      (source_url
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")))))))
 ("remote-shell-lib"
  .
  #hash((author . "mflatt@racket-lang.org")
        (checksum . "47fdd749e01b5ed4fadc3e5727f965dfc33cb352")
        (dependencies . ("base"))
        (dependency-names . ("base"))
        (description . "mflatt@racket-lang.org")
        (modules . ())
        (name . "remote-shell-lib")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/remote-shell-lib.zip")
        (tags . ())))
 ("repeated-application"
  .
  #hasheq((author . "vincentnys@gmail.com")
          (authors . ("vincentnys@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "repeated-application"
                    "doc/repeated-application@repeated-application/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log
                  .
                  "server/built/install/repeated-application.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/repeated-application.txt")))
          (checksum . "6a5ef2192f38f01de98deb03532b4b3d83b09ed3")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("at-exp-lib"
            "base"
            "racket-doc"
            "rackunit-lib"
            "scribble-lib"
            "sugar"))
          (dependency-names
           .
           ("at-exp-lib"
            "base"
            "racket-doc"
            "rackunit-lib"
            "scribble-lib"
            "sugar"))
          (description
           .
           "Variants of apply which compute a least fixpoint or run a number of consecutive applications.")
          (implies . ())
          (last-checked . 1557339761)
          (last-edit . 1506784992)
          (last-updated . 1507098615)
          (modules
           .
           ((lib "repeated-application/main.rkt")
            (lib
             "repeated-application/scribblings/repeated-application.scrbl")))
          (name . "repeated-application")
          (nix-sha256
           .
           "0cdx2zv32fpixgzjxkmi5hq1fry7hi8qcb0jj989vd3h5zf29cn9")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (application . #t)
                   (author:vincentnys@gmail.com . #t)
                   (fixpoint . #t)
                   (recursion . #t)
                   (ring:2 . #t)))
          (source . "git://github.com/v-nys/repeated-application")
          (tags . ("application" "fixpoint" "recursion"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "6a5ef2192f38f01de98deb03532b4b3d83b09ed3")
                          (source
                           .
                           "git://github.com/v-nys/repeated-application")
                          (source_url
                           .
                           "http://github.com/v-nys/repeated-application/tree/master")))))))
 ("repltest"
  .
  #hasheq((author . "georges.duperon@gmail.com")
          (authors . ("georges.duperon@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "repltest" "doc/repltest@repltest/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/repltest.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/repltest.txt")))
          (checksum . "23d62fec561abf14a587d07ad6c896e8d012ed1d")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "rackunit-lib"
            "typed-racket-lib"
            "afl"
            "scribble-lib"
            "racket-doc"
            "typed-racket-doc"))
          (dependency-names
           .
           ("base"
            "rackunit-lib"
            "typed-racket-lib"
            "afl"
            "scribble-lib"
            "racket-doc"
            "typed-racket-doc"))
          (description
           .
           "REPL test: copy-paste REPL interactions and run them as tests")
          (implies . ())
          (last-checked . 1557339761)
          (last-edit . 1470399295)
          (last-updated . 1556194014)
          (modules
           .
           ((lib "repltest/scribblings/repltest.scrbl")
            (lib "repltest/test/test.rkt")
            (lib "repltest/private/util.rkt")
            (lib "repltest/test/doc2-no-newline-at-end-of-file.rkt")
            (lib "repltest/test/doc4.rkt")
            (lib "repltest/test/doc5.rkt")
            (lib "repltest/private/run-interactions.rkt")
            (lib "repltest/test/simple.rkt")
            (lib "repltest/test/doc2-newline-at-end-of-file.rkt")
            (lib "repltest/main.rkt")
            (lib "repltest/lang/reader.rkt")
            (lib "repltest/test/meta.rkt")
            (lib "repltest/test/doc3.rkt")
            (lib "repltest/test/doc1.rkt")))
          (name . "repltest")
          (nix-sha256
           .
           "0v2gsl2p3bj4s4hl651wqis1dlhw2n6y89xivxb2a6x4r1m8ji8h")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:georges.duperon@gmail.com . #t)
                   (lang-extension . #t)
                   (repl . #t)
                   (ring:1 . #t)
                   (testing . #t)))
          (source . "git://github.com/jsmaniac/repltest")
          (tags . ("lang-extension" "repl" "testing"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "23d62fec561abf14a587d07ad6c896e8d012ed1d")
                          (source . "git://github.com/jsmaniac/repltest")
                          (source_url
                           .
                           "http://github.com/jsmaniac/repltest/tree/master")))))))
 ("reprovide-lang"
  .
  #hasheq((author . "alexander@knauth.org")
          (authors . ("alexander@knauth.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "reprovide"
                    "doc/reprovide@reprovide-lang/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/reprovide-lang.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/reprovide-lang.txt")))
          (checksum . "0f6fa2f9b5c5a7972f6f3616436e111b7fff9e5d")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "lang-file"
            "syntax-macro-lang"
            "rackunit-lib"
            "scribble-lib"
            "racket-doc"))
          (dependency-names
           .
           ("base"
            "lang-file"
            "syntax-macro-lang"
            "rackunit-lib"
            "scribble-lib"
            "racket-doc"))
          (description . "a #lang for reproviding modules")
          (implies . ())
          (last-checked . 1557339761)
          (last-edit . 1542680644)
          (last-updated . 1542862010)
          (modules
           .
           ((lib "reprovide/test/test-combine-in-except.rkt")
            (lib "reprovide/test/use-glob-in.rkt")
            (lib "reprovide/reprovide.rkt")
            (lib
             "reprovide/require-transformer/private/this-expression-source-file.rkt")
            (lib "reprovide/test/example-directory/c.rkt")
            (lib "reprovide/test/test.rkt")
            (lib "reprovide/test/use.rkt")
            (lib "reprovide/require-transformer/combine-in-except.rkt")
            (lib "reprovide/test/use-combine-in-except.rkt")
            (lib "reprovide/main.rkt")
            (lib "reprovide/require-transformer/directory-in.rkt")
            (lib "reprovide/test/other-subdir/indirect-glob-in.rkt")
            (lib "reprovide/test/example-directory/b.rkt")
            (lib "reprovide/require-transformer/glob-in.rkt")
            (lib "reprovide/test/example-directory/a.rkt")
            (lib "reprovide/scribblings/reprovide.scrbl")))
          (name . "reprovide-lang")
          (nix-sha256
           .
           "1h36mnrphcz8nf5lcqigh0bix4c35f8k4z9gm80njgnmr1fv9137")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:alexander@knauth.org . #t)
                   (provide . #t)
                   (require . #t)
                   (ring:1 . #t)))
          (source . "https://github.com/AlexKnauth/reprovide-lang.git")
          (tags . ("provide" "require"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "0f6fa2f9b5c5a7972f6f3616436e111b7fff9e5d")
                          (source
                           .
                           "https://github.com/AlexKnauth/reprovide-lang.git")
                          (source_url
                           .
                           "https://github.com/AlexKnauth/reprovide-lang.git")))
                 ("6.0"
                  .
                  #hasheq((checksum
                           .
                           "358c5cc735e11a9863631f9e1fd464c493511d92")
                          (source
                           .
                           "git://github.com/AlexKnauth/reprovide-lang#for-v-up-to-6.6")
                          (source_url
                           .
                           "http://github.com/AlexKnauth/reprovide-lang/tree/master#for-v-up-to-6.6")))
                 ("6.0.1"
                  .
                  #hasheq((checksum
                           .
                           "358c5cc735e11a9863631f9e1fd464c493511d92")
                          (source
                           .
                           "git://github.com/AlexKnauth/reprovide-lang#for-v-up-to-6.6")
                          (source_url
                           .
                           "http://github.com/AlexKnauth/reprovide-lang/tree/master#for-v-up-to-6.6")))
                 ("6.1"
                  .
                  #hasheq((checksum
                           .
                           "358c5cc735e11a9863631f9e1fd464c493511d92")
                          (source
                           .
                           "git://github.com/AlexKnauth/reprovide-lang#for-v-up-to-6.6")
                          (source_url
                           .
                           "http://github.com/AlexKnauth/reprovide-lang/tree/master#for-v-up-to-6.6")))
                 ("6.1.1"
                  .
                  #hasheq((checksum
                           .
                           "358c5cc735e11a9863631f9e1fd464c493511d92")
                          (source
                           .
                           "git://github.com/AlexKnauth/reprovide-lang#for-v-up-to-6.6")
                          (source_url
                           .
                           "http://github.com/AlexKnauth/reprovide-lang/tree/master#for-v-up-to-6.6")))
                 ("6.2"
                  .
                  #hasheq((checksum
                           .
                           "358c5cc735e11a9863631f9e1fd464c493511d92")
                          (source
                           .
                           "git://github.com/AlexKnauth/reprovide-lang#for-v-up-to-6.6")
                          (source_url
                           .
                           "http://github.com/AlexKnauth/reprovide-lang/tree/master#for-v-up-to-6.6")))
                 ("6.2.1"
                  .
                  #hasheq((checksum
                           .
                           "358c5cc735e11a9863631f9e1fd464c493511d92")
                          (source
                           .
                           "git://github.com/AlexKnauth/reprovide-lang#for-v-up-to-6.6")
                          (source_url
                           .
                           "http://github.com/AlexKnauth/reprovide-lang/tree/master#for-v-up-to-6.6")))
                 ("6.3"
                  .
                  #hasheq((checksum
                           .
                           "358c5cc735e11a9863631f9e1fd464c493511d92")
                          (source
                           .
                           "https://github.com/AlexKnauth/reprovide-lang.git#for-v-up-to-6.6")
                          (source_url
                           .
                           "https://github.com/AlexKnauth/reprovide-lang.git#for-v-up-to-6.6")))
                 ("6.4"
                  .
                  #hasheq((checksum
                           .
                           "358c5cc735e11a9863631f9e1fd464c493511d92")
                          (source
                           .
                           "https://github.com/AlexKnauth/reprovide-lang.git#for-v-up-to-6.6")
                          (source_url
                           .
                           "https://github.com/AlexKnauth/reprovide-lang.git#for-v-up-to-6.6")))
                 ("6.5"
                  .
                  #hasheq((checksum
                           .
                           "358c5cc735e11a9863631f9e1fd464c493511d92")
                          (source
                           .
                           "https://github.com/AlexKnauth/reprovide-lang.git#for-v-up-to-6.6")
                          (source_url
                           .
                           "https://github.com/AlexKnauth/reprovide-lang.git#for-v-up-to-6.6")))
                 ("6.6"
                  .
                  #hasheq((checksum
                           .
                           "358c5cc735e11a9863631f9e1fd464c493511d92")
                          (source
                           .
                           "https://github.com/AlexKnauth/reprovide-lang.git#for-v-up-to-6.6")
                          (source_url
                           .
                           "https://github.com/AlexKnauth/reprovide-lang.git#for-v-up-to-6.6")))))))
 ("request"
  .
  #hasheq((author . "jackhfirth@gmail.com")
          (authors . ("jackhfirth@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "request" "doc/request@request/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/request.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/request.txt")))
          (checksum . "49936b297d43021cb3b67c009fcbf950ef32f61d")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "fancy-app"
            "rackunit-lib"
            "scribble-lib"
            "typed-racket-lib"
            "typed-racket-more"
            "net-doc"
            "rackunit-lib"
            "rackunit-doc"
            "racket-doc"))
          (dependency-names
           .
           ("base"
            "fancy-app"
            "rackunit-lib"
            "scribble-lib"
            "typed-racket-lib"
            "typed-racket-more"
            "net-doc"
            "rackunit-lib"
            "rackunit-doc"
            "racket-doc"))
          (description
           .
           "A package for constructing HTTP and REST-ful requesters and integration tests. Currently unstable.")
          (implies . ())
          (last-checked . 1557339762)
          (last-edit . 1500077087)
          (last-updated . 1502816400)
          (modules
           .
           ((lib "request/private/call-response.rkt")
            (lib "request/private/exn.scrbl")
            (lib "request/check.scrbl")
            (lib "request/private/exn.rkt")
            (lib "request/doc-utils/def.rkt")
            (lib "request/doc-utils/examples.rkt")
            (lib "request/private/wrap.rkt")
            (lib "request/private/struct.scrbl")
            (lib "request/private/http-location.scrbl")
            (lib "request/private/http-location.rkt")
            (lib "request/main.scrbl")
            (lib "request/private/struct.rkt")
            (lib "request/param.rkt")
            (lib "request/main.rkt")
            (lib "request/private/wrap.scrbl")
            (lib "request/check.rkt")
            (lib "request/param.scrbl")
            (lib "request/private/base.scrbl")
            (lib "request/private/base.rkt")))
          (name . "request")
          (nix-sha256
           .
           "159npbp3mwwcbs8drig4xdihk52y4ahlvm48lqyrcljz8vnsgr2v")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:jackhfirth@gmail.com . #t)
                   (experimental . #t)
                   (http . #t)
                   (rest . #t)
                   (ring:1 . #t)
                   (testing . #t)))
          (source . "git://github.com/jackfirth/racket-request")
          (tags . ("experimental" "http" "rest" "testing"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "49936b297d43021cb3b67c009fcbf950ef32f61d")
                          (source
                           .
                           "git://github.com/jackfirth/racket-request")
                          (source_url
                           .
                           "http://github.com/jackfirth/racket-request/tree/master")))))))
 ("require-typed-check"
  .
  #hasheq((author . "types@ccs.neu.edu")
          (authors . ("types@ccs.neu.edu"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "require-typed-check"
                    "doc/require-typed-check@require-typed-check/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log
                  .
                  "server/built/install/require-typed-check.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/require-typed-check.txt")))
          (checksum . "4a2946f55a77a178fe48c24d81b6e6427490f75b")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "typed-racket-lib"
            "typed-racket-more"
            "scribble-lib"
            "racket-doc"
            "rackunit-lib"
            "math-doc"
            "math-lib"
            "typed-racket-doc"))
          (dependency-names
           .
           ("base"
            "typed-racket-lib"
            "typed-racket-more"
            "scribble-lib"
            "racket-doc"
            "rackunit-lib"
            "math-doc"
            "math-lib"
            "typed-racket-doc"))
          (description
           .
           "require/typed, but skips contracts on already-typed imports")
          (implies . ())
          (last-checked . 1557339762)
          (last-edit . 1468765166)
          (last-updated . 1552755987)
          (modules
           .
           ((lib "require-typed-check/test/basic/main.rkt")
            (lib "require-typed-check/test/fsm/automata.rkt")
            (lib "require-typed-check/test/fsm/main.rkt")
            (lib "require-typed-check/scribblings/require-typed-check.scrbl")
            (lib "require-typed-check/test/fsm/utilities.rkt")
            (lib "require-typed-check/private/log.rkt")
            (lib "require-typed-check/test/submodule/main.rkt")
            (lib "require-typed-check/test/fsm/automata-adapted.rkt")
            (lib "require-typed-check/test/opaque/untyped.rkt")
            (lib "require-typed-check/private/test-util.rkt")
            (lib "require-typed-check/test/bogus/main.rkt")
            (lib "require-typed-check/test/basic/untyped.rkt")
            (lib "require-typed-check/test/pr/3.rkt")
            (lib "require-typed-check/test/fsm/population.rkt")
            (lib "require-typed-check/test/opaque/main.rkt")
            (lib "require-typed-check/test/pr/1.rkt")
            (lib "require-typed-check/test/bogus/typed.rkt")
            (lib "require-typed-check/test/opaque/typed.rkt")
            (lib "require-typed-check/test/basic/typed.rkt")
            (lib "require-typed-check/main.rkt")
            (lib "require-typed-check/logging.rkt")
            (lib "require-typed-check/private/require-typed-check.rkt")))
          (name . "require-typed-check")
          (nix-sha256
           .
           "0ya7n0jfcihx8ds40rcpqic6sx5cpd6c5r9lc1vmavfprzkhvaif")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:types@ccs.neu.edu . #t)
                   (contracts . #t)
                   (require . #t)
                   (ring:1 . #t)
                   (typed-racket . #t)))
          (source . "git://github.com/bennn/require-typed-check")
          (tags . ("contracts" "require" "typed-racket"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "4a2946f55a77a178fe48c24d81b6e6427490f75b")
                          (source
                           .
                           "git://github.com/bennn/require-typed-check")
                          (source_url
                           .
                           "http://github.com/bennn/require-typed-check/tree/master")))))))
 ("response-ext"
  .
  #hasheq((author . "dk-junker@ya.ru")
          (authors . ("dk-junker@ya.ru"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "response-ext"
                    "doc/response-ext@response-ext/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/response-ext.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/response-ext.txt")))
          (checksum . "50c95a7799602079b6a77d5576832a8d91a4bbd5")
          (checksum-error . #f)
          (conflicts . ())
          (date-added . 1552838218)
          (dependencies
           .
           ("base"
            "web-server-lib"
            "rackunit-lib"
            "scribble-lib"
            "racket-doc"
            "rackunit-lib"
            "web-server-doc"))
          (dependency-names
           .
           ("base"
            "web-server-lib"
            "rackunit-lib"
            "scribble-lib"
            "racket-doc"
            "rackunit-lib"
            "web-server-doc"))
          (description
           .
           "Extended HTTP response functions for Racket Web Server")
          (implies . ())
          (last-checked . 1557339762)
          (last-edit . 1552838218)
          (last-updated . 1553012780)
          (modules
           .
           ((lib "response-ext/main.rkt")
            (lib "response-ext/test.rkt")
            (lib "response-ext/scribblings/response-ext.scrbl")))
          (name . "response-ext")
          (nix-sha256
           .
           "0a4226yzmxqjm5fl1fcxnwb5mpv8spnzxrn4ld98sq202zdr1z10")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:dk-junker@ya.ru . #t)
                   (http . #t)
                   (response . #t)
                   (ring:2 . #t)
                   (web-server . #t)))
          (source . "https://github.com/Junker/response-ext.git")
          (tags . ("http" "response" "web-server"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "50c95a7799602079b6a77d5576832a8d91a4bbd5")
                          (source
                           .
                           "https://github.com/Junker/response-ext.git")
                          (source_url
                           .
                           "https://github.com/Junker/response-ext.git")))))))
 ("restore"
  .
  #hasheq((author . "jay.mccarthy@gmail.com")
          (authors . ("jay.mccarthy@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/restore.txt")
                 (test-failure-log . "server/built/test-fail/restore.txt")
                 (test-success-log . #f)))
          (checksum . "c38049acd1bde962453977d2469cf2ae8b99acb7")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . (("base" #:version "6.2.900.15") "unstable-lib"))
          (dependency-names . ("base" "unstable-lib"))
          (description . "protocol for restore program state")
          (implies . ())
          (last-checked . 1557339762)
          (last-edit . 1504535420)
          (last-updated . 1502816401)
          (modules
           .
           ((lib "restore/tests/client.rkt")
            (lib "restore/tests/server.rkt")
            (lib "restore/main.rkt")))
          (name . "restore")
          (nix-sha256
           .
           "0w93j42rq3dh66686qnv74vhmb8vw9s9yhs4chmb531mk0qmh51c")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:jay.mccarthy@gmail.com . #t)
                   (data . #t)
                   (environment . #t)
                   (filesystem . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/jeapostrophe/restore")
          (tags . ("data" "environment" "filesystem"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "c38049acd1bde962453977d2469cf2ae8b99acb7")
                          (source . "git://github.com/jeapostrophe/restore")
                          (source_url
                           .
                           "http://github.com/jeapostrophe/restore/tree/master")))))))
 ("retry"
  .
  #hasheq((author . "jackhfirth@gmail.com")
          (authors . ("jackhfirth@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "retry" "doc/retry@retry/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/retry.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/retry.txt")))
          (checksum . "2a6ba58ab5f14707305e75063c3ee4519fc6dc7d")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("compose-app"
            "fancy-app"
            "gregor-lib"
            "reprovide-lang"
            ("base" #:version "6.5")
            ("mock" #:version "2.1")
            "at-exp-lib"
            "gregor-doc"
            "scribble-text-lib"
            "racket-doc"
            "scribble-lib"
            "rackunit-lib"
            "mock-rackunit"))
          (dependency-names
           .
           ("compose-app"
            "fancy-app"
            "gregor-lib"
            "reprovide-lang"
            "base"
            "mock"
            "at-exp-lib"
            "gregor-doc"
            "scribble-text-lib"
            "racket-doc"
            "scribble-lib"
            "rackunit-lib"
            "mock-rackunit"))
          (description
           .
           "Composable configurable retryers for flakily failing operations.")
          (implies . ())
          (last-checked . 1557339762)
          (last-edit . 1500073485)
          (last-updated . 1512454089)
          (modules
           .
           ((lib "retry/private/retryers.rkt")
            (lib "retry/private/gregor.rkt")
            (lib "retry/main.rkt")
            (lib "retry/scribblings/base.rkt")
            (lib "retry/private/higher-order.rkt")
            (lib "retry/scribblings/reference.scrbl")
            (lib "retry/scribblings/main.scrbl")
            (lib "retry/private/inject.rkt")
            (lib "retry/scribblings/guide.scrbl")
            (lib "retry/private/base.rkt")))
          (name . "retry")
          (nix-sha256
           .
           "1hqk1zp41yzqnk3djkx3b51ax9mnh5dpbq8admqyzvcwd5v6x358")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:jackhfirth@gmail.com . #t)
                   (concurrency . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/jackfirth/racket-retry")
          (tags . ("concurrency"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "2a6ba58ab5f14707305e75063c3ee4519fc6dc7d")
                          (source . "git://github.com/jackfirth/racket-retry")
                          (source_url
                           .
                           "http://github.com/jackfirth/racket-retry/tree/master")))))))
 ("rex"
  .
  #hasheq((author . "ahedges@ethz.ch")
          (authors . ("ahedges@ethz.ch"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "rex" "doc/rex@rex/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/rex.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/rex.txt")))
          (checksum . "e3b41f706b4b72ea5f168b0f2a2600d77ee07ea0")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "br-parser-tools-lib"
            "brag"
            "data-lib"
            "racket-doc"
            "rackunit-lib"
            "scribble-lib"))
          (dependency-names
           .
           ("base"
            "br-parser-tools-lib"
            "brag"
            "data-lib"
            "racket-doc"
            "rackunit-lib"
            "scribble-lib"))
          (description . "Language for deterministic finite state machines")
          (implies . ())
          (last-checked . 1557339762)
          (last-edit . 1500317682)
          (last-updated . 1528916113)
          (modules
           .
           ((lib "rex/reader.rkt")
            (lib "rex/tests/test-parser.rkt")
            (lib "rex/expander.rkt")
            (lib "rex/parser.rkt")
            (lib "rex/tests/test-branches.rkt")
            (lib "rex/tests/test-expander.rkt")
            (lib "rex/tokenizer.rkt")
            (lib "rex/tests/test-not.rkt")
            (lib "rex/main.rkt")
            (lib "rex/tests/test-basic.rkt")
            (lib "rex/tests/test-cycles.rkt")
            (lib "rex/tests/helper.rkt")
            (lib "rex/scribblings/rex.scrbl")))
          (name . "rex")
          (nix-sha256
           .
           "11hr1hwhfbkyn16hwfz534p03qp7yabmxw66g07dc48mglgrvbrn")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (DFA . #t)
                   (author:ahedges@ethz.ch . #t)
                   (dsl . #t)
                   (ring:1 . #t)))
          (source . "https://github.com/alehed/rex.git")
          (tags . ("DFA" "dsl"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "e3b41f706b4b72ea5f168b0f2a2600d77ee07ea0")
                          (source . "https://github.com/alehed/rex.git")
                          (source_url
                           .
                           "https://github.com/alehed/rex.git")))))))
 ("rfc3339-old"
  .
  #hasheq((author . "neil@neilvandyke.org")
          (authors . ("neil@neilvandyke.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "rfc3339-old"
                    "doc/rfc3339-old@rfc3339-old/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/rfc3339-old.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/rfc3339-old.txt")))
          (checksum . "4f52cf57d9905cbf8683f1aa25a23ba8d4ecc004")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base" "mcfly" "racket-doc" "scribble-lib" "overeasy"))
          (dependency-names
           .
           ("base" "mcfly" "racket-doc" "scribble-lib" "overeasy"))
          (description . "RFC 3339 Timestamps")
          (implies . ())
          (last-checked . 1557339762)
          (last-edit . 1456803335)
          (last-updated . 1502816401)
          (modules
           .
           ((lib "rfc3339-old/rfc3339-old.scrbl")
            (lib "rfc3339-old/main.rkt")))
          (name . "rfc3339-old")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (:no-tag: . #t)
                   (author:neil@neilvandyke.org . #t)
                   (ring:1 . #t)))
          (source . "http://www.neilvandyke.org/racket/rfc3339-old.zip")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "4f52cf57d9905cbf8683f1aa25a23ba8d4ecc004")
                          (source
                           .
                           "http://www.neilvandyke.org/racket/rfc3339-old.zip")
                          (source_url
                           .
                           "http://www.neilvandyke.org/racket/rfc3339-old.zip")))))))
 ("rfc6455"
  .
  #hasheq((author . "tonygarnockjones@gmail.com")
          (authors . ("tonygarnockjones@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "rfc6455" "doc/rfc6455@rfc6455/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/rfc6455.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/rfc6455.txt")))
          (checksum . "ba4fa215e3ec71741bd00bb9804c76fc2b3b9e2e")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "net-lib"
            "rackunit-lib"
            "web-server-lib"
            "scribble-lib"
            "net-doc"
            "racket-doc"
            "web-server-doc"))
          (dependency-names
           .
           ("base"
            "net-lib"
            "rackunit-lib"
            "web-server-lib"
            "scribble-lib"
            "net-doc"
            "racket-doc"
            "web-server-doc"))
          (description . "RFC 6455 WebSockets support for Racket.")
          (implies . ())
          (last-checked . 1557339763)
          (last-edit . 1382575770)
          (last-updated . 1502816402)
          (modules
           .
           ((lib "net/rfc6455/hybi00/dispatcher.rkt")
            (lib "net/rfc6455/hybi00/handshake.rkt")
            (lib "net/rfc6455/examples/time-client-with-threads.rkt")
            (lib "net/rfc6455/hybi00/conn.rkt")
            (lib "net/rfc6455/rfc6455/client.rkt")
            (lib "net/rfc6455/scribblings/rfc6455.scrbl")
            (lib "net/rfc6455.rkt")
            (lib "net/rfc6455/hybi00/client.rkt")
            (lib "net/rfc6455/examples/time-server.rkt")
            (lib "net/rfc6455/rfc6455/frame.rkt")
            (lib "net/rfc6455/rfc6455/dispatcher.rkt")
            (lib "net/rfc6455/examples/test-service-mapper.rkt")
            (lib "net/rfc6455/client.rkt")
            (lib "net/rfc6455/url.rkt")
            (lib "net/rfc6455/http.rkt")
            (lib "net/rfc6455/examples/client.rkt")
            (lib "net/rfc6455/server.rkt")
            (lib "net/rfc6455/conn-api.rkt")
            (lib "net/rfc6455/rfc6455/conn.rkt")
            (lib "net/rfc6455/rfc6455/handshake.rkt")
            (lib "net/rfc6455/private/connection-manager.rkt")
            (lib "net/rfc6455/service-mapper.rkt")
            (lib "net/rfc6455/timeout.rkt")
            (lib "net/rfc6455/dispatcher.rkt")
            (lib "net/rfc6455/examples/test-server.rkt")
            (lib "net/rfc6455/examples/time-client-with-sync.rkt")))
          (name . "rfc6455")
          (nix-sha256
           .
           "0dr5a2vwqbsahgam8x7q933yrz6x8h74m89x2207ljkwmf7s5kdx")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:tonygarnockjones@gmail.com . #t)
                   (http . #t)
                   (net . #t)
                   (ring:1 . #t)
                   (web . #t)))
          (source . "git://github.com/tonyg/racket-rfc6455")
          (tags . ("http" "net" "web"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "ba4fa215e3ec71741bd00bb9804c76fc2b3b9e2e")
                          (source . "git://github.com/tonyg/racket-rfc6455")
                          (source_url
                           .
                           "http://github.com/tonyg/racket-rfc6455/tree/master")))))))
 ("ricoeur-kernel"
  .
  #hasheq((author . "philip@philipmcgrath.com")
          (authors . ("philip@philipmcgrath.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/ricoeur-kernel.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/ricoeur-kernel.txt")))
          (checksum . "74d9274ab62c495ec0e2cf61229d441d62a33160")
          (checksum-error . #f)
          (conflicts . ())
          (date-added . 1554233392)
          (dependencies
           .
           (("base" #:version "7.2")
            "adjutor"
            "reprovide-lang"
            "gregor"
            "functional-lib"
            "scribble-lib"
            "racket-doc"
            "rackunit-lib"))
          (dependency-names
           .
           ("base"
            "adjutor"
            "reprovide-lang"
            "gregor"
            "functional-lib"
            "scribble-lib"
            "racket-doc"
            "rackunit-lib"))
          (description . "A \"standard library\" for Digital Ricoeur")
          (implies . ())
          (last-checked . 1557339764)
          (last-edit . 1554233392)
          (last-updated . 1554260821)
          (modules
           .
           ((lib "ricoeur/kernel/maybe.rkt")
            (lib "ricoeur/kernel.rkt")
            (lib "ricoeur/kernel/xml-path.rkt")
            (lib "ricoeur/kernel/utils.rkt")
            (lib "ricoeur/kernel/pre-kernel-lib.rkt")
            (lib "ricoeur/kernel/main.rkt")
            (lib "ricoeur/kernel/output-to-file.rkt")))
          (name . "ricoeur-kernel")
          (nix-sha256
           .
           "01yqb8al82ghi4qbkc0m275jvn1422xb1wlxbfni36sl72rmwkk1")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:philip@philipmcgrath.com . #t)
                   (ring:2 . #t)
                   (util . #t)
                   (utilities . #t)
                   (utility . #t)
                   (utils . #t)))
          (source . "https://bitbucket.org/digitalricoeur/ricoeur-kernel.git")
          (tags . ("util" "utilities" "utility" "utils"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "74d9274ab62c495ec0e2cf61229d441d62a33160")
                          (source
                           .
                           "https://bitbucket.org/digitalricoeur/ricoeur-kernel.git")
                          (source_url
                           .
                           "https://bitbucket.org/digitalricoeur/ricoeur-kernel.git")))))))
 ("ricoeur-tei-utils"
  .
  #hasheq((author . "philip@philipmcgrath.com")
          (authors . ("philip@philipmcgrath.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "ricoeur-tei-utils"
                    "doc/ricoeur-tei-utils@ricoeur-tei-utils/index.html")
                   ("main"
                    "ricoeur-tei-guidelines"
                    "doc/ricoeur-tei-guidelines@ricoeur-tei-utils/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/ricoeur-tei-utils.txt")
                 (test-failure-log
                  .
                  "server/built/test-fail/ricoeur-tei-utils.txt")
                 (test-success-log . #f)))
          (checksum . "7347a24ba09fe3eb202fe10aa090eb19d970f5de")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           (("base" #:version "7.2")
            ("adjutor" #:version "0.2.5")
            "ricoeur-kernel"
            "functional-lib"
            "roman-numeral"
            "gregor-lib"
            "gui-lib"
            "pict-lib"
            "scribble-lib"
            "data-lib"
            "db-lib"
            ("sql" #:version "1.3")
            "draw-lib"
            "icns"
            "parser-tools-lib"
            "pict-snip-lib"
            "typed-racket-lib"
            ("xmllint-win32-x86_64"
             #:platform
             "win32\\x86_64"
             #:version
             "0.1")
            "at-exp-lib"
            "syntax-color-lib"
            "scribble-lib"
            "racket-doc"
            "at-exp-lib"
            "functional-doc"
            "gregor-doc"
            "rackunit-lib"
            ("_-exp" #:version "0.1")
            "db-doc"
            "data-doc"
            "gui-doc"
            "scribble-doc"
            "todo-list"
            "racket-index"))
          (dependency-names
           .
           ("base"
            "adjutor"
            "ricoeur-kernel"
            "functional-lib"
            "roman-numeral"
            "gregor-lib"
            "gui-lib"
            "pict-lib"
            "scribble-lib"
            "data-lib"
            "db-lib"
            "sql"
            "draw-lib"
            "icns"
            "parser-tools-lib"
            "pict-snip-lib"
            "typed-racket-lib"
            "xmllint-win32-x86_64"
            "at-exp-lib"
            "syntax-color-lib"
            "scribble-lib"
            "racket-doc"
            "at-exp-lib"
            "functional-doc"
            "gregor-doc"
            "rackunit-lib"
            "_-exp"
            "db-doc"
            "data-doc"
            "gui-doc"
            "scribble-doc"
            "todo-list"
            "racket-index"))
          (description . "Digital Ricoeur library for TEI XML files")
          (implies . ())
          (last-checked . 1557339764)
          (last-edit . 1537410666)
          (last-updated . 1555312018)
          (modules
           .
           ((lib "ricoeur/tei/tools/tei-lint/new-tei-document/from-file.rkt")
            (lib "ricoeur/tei/tools/tei-lint/lib.rkt")
            (lib "ricoeur/tei/tools/tei-lint/lint/document/pb-report.rkt")
            (lib
             "ricoeur/tei/tools/tei-lint/lint/document/warning-components.rkt")
            (lib "ricoeur/tei/tools/tei-lint/lint/toolkit/proto-frame.rkt")
            (lib "ricoeur/tei/tools/tei-lint/lib/ed.rkt")
            (lib "ricoeur/tei/spec-lang/test/extend.rkt")
            (lib "ricoeur/tei/tools/tei-lint/lib/menu-bar.rkt")
            (lib "ricoeur/tei/base/specification/textClass.rkt")
            (lib "ricoeur/core-doc-lang/color-lexer.rkt")
            (lib "ricoeur/tei/kernel/interfaces.rkt")
            (lib "ricoeur/tei/spec-lang.rkt")
            (lib "ricoeur/tei/scribblings/guidelines/background.scrbl")
            (lib "ricoeur/tei/scribblings/guidelines/refining.scrbl")
            (lib "ricoeur/tei/kernel/xexpr/normalize.rkt")
            (lib "ricoeur/tei/spec-lang/test/test3.rkt")
            (lib "ricoeur/tei/search/noop.rkt")
            (lib "ricoeur/tei/base/segments.rkt")
            (lib "ricoeur/core-doc-lang/examples/module-star.rkt")
            (lib "ricoeur/tei/kernel/instance-info.rkt")
            (lib "ricoeur/tei/spec-lang/stxparam.rkt")
            (lib "ricoeur/tei/tools/tei-lint/tei-lint.rkt")
            (lib "ricoeur/core-doc-lang/lift.rkt")
            (lib "ricoeur/tei/base/specification/content-elements.rkt")
            (lib "ricoeur/tei/tools/tei-lint/lint/toolkit/error.rkt")
            (lib "ricoeur/core-doc-lang/examples/derived-macro/provider.rkt")
            (lib "ricoeur/tei/tools/raco/raco.rkt")
            (lib "ricoeur/tei/corpus.rkt")
            (lib "ricoeur/tei/base/segments/location-stack.rkt")
            (lib "ricoeur/tei/kernel/xexpr/plain-contracts.rkt")
            (lib "ricoeur/tei/base/specification/teiHeader.rkt")
            (lib "ricoeur/tei/kernel.rkt")
            (lib "ricoeur/tei/spec-lang/ir/syntax-class.rkt")
            (lib "ricoeur/core-doc-lang/examples/good.rkt")
            (lib "ricoeur/tei/spec-lang/adt/base.rkt")
            (lib "ricoeur/tei/spec-lang/interface-macros.rkt")
            (lib "ricoeur/tei/tools/tei-lint/lib/long-path.rkt")
            (lib "ricoeur/tei/tools/tei-lint/lint/file-snip.rkt")
            (lib "ricoeur/tei/search/sql-support.rkt")
            (lib "ricoeur/tei/search/regexp.rkt")
            (lib
             "ricoeur/tei/scribblings/tei-utils/implementation/lang/for-lang-kernel.rkt")
            (lib "ricoeur/tei/tools/tei-lint/lint/toolkit/interfaces.rkt")
            (lib "ricoeur/tei/spec-lang/adt.rkt")
            (lib
             "ricoeur/tei/scribblings/tei-utils/implementation/lang/lang-kernel.scrbl")
            (lib "ricoeur/tei/tools/tei-lint/convert-icon.rkt")
            (lib "ricoeur/tei/base/specification/sourceDesc.rkt")
            (lib "ricoeur/tei/base/guess-paragraphs.rkt")
            (lib "ricoeur/tei/tools/tei-lint/lib/xml-preview.rkt")
            (lib "ricoeur/tei/tools/raco/encode-xml-entities.rkt")
            (lib "ricoeur/core-doc-lang/module-reader.rkt")
            (lib "ricoeur/tei/spec-lang/static-info.rkt")
            (lib "ricoeur/tei/tools/raco/directory-clean-filenames.rkt")
            (lib "ricoeur/tei/base/specification/titleStmt.rkt")
            (lib "ricoeur/tei/tools/raco/guess-paragraphs.rkt")
            (lib "ricoeur/tei/scribblings/tei-utils/general.scrbl")
            (lib "ricoeur/tei/spec-lang/test/scope.rkt")
            (lib "ricoeur/tei/tools/tei-lint/lint/paragraphs/common.rkt")
            (lib "ricoeur/tei/spec-lang/test/combine.rkt")
            (lib "ricoeur/tei/scribblings/guidelines/tools.scrbl")
            (lib "ricoeur/tei/kernel/instance-set.rkt")
            (lib
             "ricoeur/tei/tools/tei-lint/new-tei-document/new-tei-document-frame.rkt")
            (lib "ricoeur/tei/scribblings/tei-utils/element.scrbl")
            (lib "ricoeur/tei/base/segments/meta.rkt")
            (lib "ricoeur/tei/scribblings/tei-utils/ricoeur-tei-utils.scrbl")
            (lib "ricoeur/tei/spec-lang/adt/sugar.rkt")
            (lib "ricoeur/tei/kernel/xexpr/entity-utils.rkt")
            (lib "ricoeur/tei/corpus/class-exptime.rkt")
            (lib "ricoeur/tei/tools/tei-lint/lint/paragraphs/component.rkt")
            (lib "ricoeur/tei/tools/tei-lint/new-tei-document/bib-info.rkt")
            (lib "ricoeur/tei/spec-lang/test/test-use.rkt")
            (lib "ricoeur/tei/search/common.rkt")
            (lib "ricoeur/core-doc-lang/examples/derived-macro/user.rkt")
            (lib "ricoeur/tei/tools/tei-lint/lint/toolkit/status-dot.rkt")
            (lib "ricoeur/tei/scribblings/tei-utils/implementation.scrbl")
            (lib "ricoeur/tei/tools/tei-lint/lint/document.rkt")
            (lib
             "ricoeur/tei/scribblings/tei-utils/implementation/lang/objectives.scrbl")
            (lib "ricoeur/tei/tools/raco/to-plain-text.rkt")
            (lib "ricoeur/core-doc-lang/make-module-begin.rkt")
            (lib
             "ricoeur/tei/scribblings/guidelines/ricoeur-tei-guidelines.scrbl")
            (lib "ricoeur/tei/corpus/test.rkt")
            (lib "ricoeur/tei/base/specification/structural-elements.rkt")
            (lib "ricoeur/tei/scribblings/guidelines/for-guidelines.rkt")
            (lib "ricoeur/tei/search/postgresql.rkt")
            (lib
             "ricoeur/tei/tools/tei-lint/lint/document/info-components.rkt")
            (lib "ricoeur/tei/search/data-source-contract.rkt")
            (lib "ricoeur/tei/tools/tei-lint/lib/xml-color.rkt")
            (lib "ricoeur/tei/scribblings/guidelines/getting-started.scrbl")
            (lib
             "ricoeur/tei/scribblings/tei-utils/implementation/lang/doc-lang.scrbl")
            (lib
             "ricoeur/tei/scribblings/tei-utils/implementation/search.scrbl")
            (lib
             "ricoeur/tei/scribblings/tei-utils/implementation/lang/define-element.scrbl")
            (lib "ricoeur/tei/kernel/schema.rkt")
            (lib "ricoeur/tei/spec-lang/ir/struct.rkt")
            (lib "ricoeur/tei/base/specification/text.rkt")
            (lib "ricoeur/tei/kernel/xmllint.rkt")
            (lib "ricoeur/tei/spec-lang/doc-support.rkt")
            (lib "ricoeur/tei/scribblings/tei-utils/installing.scrbl")
            (lib
             "ricoeur/tei/scribblings/tei-utils/implementation/lang/module-structure.scrbl")
            (lib "ricoeur/tei/tools/tei-lint/lint/toolkit.rkt")
            (lib "ricoeur/tei/spec-lang/test/test.rkt")
            (lib "ricoeur/tei/spec-lang/test/test-stx.rkt")
            (lib "ricoeur/tei/scribblings/tei-utils/segment.scrbl")
            (lib "ricoeur/core-doc-lang/examples/ambiguous.rkt")
            (lib "ricoeur/core-doc-lang/begin-for-runtime.rkt")
            (lib "ricoeur/tei/kernel/xexpr/contract-utils.rkt")
            (lib "ricoeur/core-doc-lang/examples/parent-for-label.rkt")
            (lib "ricoeur/tei/spec-lang/test/test4.rkt")
            (lib "ricoeur/tei/search.rkt")
            (lib "ricoeur/tei/spec-lang/test/adt-test.rkt")
            (lib "ricoeur/tei/spec-lang/elem-for-runtime.rkt")
            (lib "ricoeur/tei/scribblings/tei-utils/for-manual.rkt")
            (lib "ricoeur/tei/tools/tei-lint/lib/shutdown.rkt")
            (lib "ricoeur/tei/kernel/base-structs.rkt")
            (lib "ricoeur/tei/spec-lang/link.rkt")
            (lib "ricoeur/tei/spec-lang/specification-lang.rkt")
            (lib "ricoeur/tei/tools/tei-lint/lint/lint-file.rkt")
            (lib "ricoeur/tei/base/def-from-spec.rkt")
            (lib "ricoeur/tei/tools/tei-lint/lint/paragraphs/prompt.rkt")
            (lib
             "ricoeur/tei/scribblings/tei-utils/implementation/lang/linking.scrbl")
            (lib "ricoeur/tei/base.rkt")
            (lib "ricoeur/tei/base/get-page-breaks.rkt")
            (lib "ricoeur/tei/tools/tei-lint/new-tei-document.rkt")
            (lib "ricoeur/tei/tools/tei-lint/lint/toolkit/make-doc-class.rkt")
            (lib "ricoeur/tei/spec-lang/test/test2.rkt")
            (lib "ricoeur/tei/tools/tei-lint/new-tei-document/pages.rkt")
            (lib "ricoeur/tei/tools/tei-lint/lint/paragraphs/confirm.rkt")
            (lib "ricoeur/tei/tools/raco/validate-directory.rkt")
            (lib "ricoeur/tei.rkt")
            (lib "ricoeur/core-doc-lang/main.rkt")
            (lib "ricoeur/tei/corpus/plain-corpus.rkt")
            (lib "ricoeur/tei/tools/tei-lint/lint/directory-frame.rkt")
            (lib "ricoeur/tei/tools/tei-lint/lint/paragraphs.rkt")
            (lib "ricoeur/tei/corpus/search-corpus.rkt")
            (lib
             "ricoeur/tei/scribblings/tei-utils/implementation/tei-lint.scrbl")
            (lib "ricoeur/core-doc-lang.rkt")
            (lib "ricoeur/tei/scribblings/tei-utils/xexpr+xml.scrbl")
            (lib "ricoeur/tei/tools/tei-lint/lint/toolkit/menu.rkt")
            (lib "ricoeur/tei/scribblings/tei-utils/document.scrbl")
            (lib "ricoeur/tei/scribblings/tei-utils/corpus.scrbl")
            (lib "ricoeur/tei/spec-lang/test/test-duplicate.rkt")
            (lib "ricoeur/tei/base/specification/specification.rkt")
            (lib "ricoeur/tei/tools/tei-lint/lint.rkt")
            (lib "ricoeur/tei/scribblings/tei-utils/instance-info.scrbl")
            (lib "ricoeur/tei/spec-lang/doc-lang.rkt")
            (lib "ricoeur/core-doc-lang/doc-time.rkt")))
          (name . "ricoeur-tei-utils")
          (nix-sha256
           .
           "1slvs2dxijd938fjjajkry1hfqlxbvvx77sxv98cy90gq0mrrlcd")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (application . #t)
                   (author:philip@philipmcgrath.com . #t)
                   (ring:2 . #t)
                   (xml . #t)))
          (source . "https://bitbucket.org/digitalricoeur/tei-utils.git")
          (tags . ("application" "xml"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "7347a24ba09fe3eb202fe10aa090eb19d970f5de")
                          (source
                           .
                           "https://bitbucket.org/digitalricoeur/tei-utils.git")
                          (source_url
                           .
                           "https://bitbucket.org/digitalricoeur/tei-utils.git")))))))
 ("riff"
  .
  #hasheq((author . "lehi@tosk.in")
          (authors . ("lehi@tosk.in"))
          (build
           .
           #hash((conflicts-log . "conflicts.txt")
                 (dep-failure-log . #f)
                 (docs . (("extract" "manual" "doc/manual@riff/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/riff.txt")
                 (test-failure-log . "server/built/test-fail/riff.txt")
                 (test-success-log . #f)))
          (checksum . "459efecc4168cf922660f95b6195935d66cb6a2b")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "scribble-lib" "racket-doc"))
          (dependency-names . ("base" "scribble-lib" "racket-doc"))
          (description . "riff is a racket wrapper for FLIF")
          (implies . ())
          (last-checked . 1557339765)
          (last-edit . 1486938836)
          (last-updated . 1502816402)
          (modules
           .
           ((lib "riff/main.rkt")
            (lib "riff/doc/manual.scrbl")
            (lib "riff/dec.rkt")
            (lib "riff/flif.rkt")
            (lib "riff/doc/flif.scrbl")
            (lib "riff/doc/enc.scrbl")
            (lib "riff/doc/dec.scrbl")
            (lib "riff/enc.rkt")))
          (name . "riff")
          (nix-sha256
           .
           "0il8m7ap5hmavzkp2l56kjdwnns0ligzk5i675xpzk24k9vf6b9z")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-conflicts: . #t)
                   (:build-success: . #t)
                   (:docs-error: . #t)
                   (:docs: . #t)
                   (author:lehi@tosk.in . #t)
                   (compression . #t)
                   (decompression . #t)
                   (ffi . #t)
                   (flif . #t)
                   (images . #t)
                   (ring:1 . #t)
                   (wrapper . #t)))
          (source . "git://github.com/lehitoskin/riff")
          (tags
           .
           ("compression" "decompression" "ffi" "flif" "images" "wrapper"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "459efecc4168cf922660f95b6195935d66cb6a2b")
                          (source . "git://github.com/lehitoskin/riff")
                          (source_url
                           .
                           "http://github.com/lehitoskin/riff/tree/master")))))))
 ("rilouworld"
  .
  #hasheq((author . "jerome.martin.dev@gmail.com")
          (authors . ("jerome.martin.dev@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . "server/built/deps/rilouworld.txt")
                 (docs
                  .
                  (("main"
                    "rilouworld"
                    "doc/rilouworld@rilouworld/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/rilouworld.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/rilouworld.txt")))
          (checksum . "184dea6c187f4f94da6616b89ec15cc8ba6bb786")
          (checksum-error . #f)
          (conflicts . ())
          (date-added . 1551127368)
          (dependencies
           .
           ("base"
            "math-lib"
            "draw-lib"
            "anaphoric"
            "web-server-lib"
            "mode-lambda"
            "lux"
            "reprovide-lang"
            "racket-doc"
            "scribble-lib"))
          (dependency-names
           .
           ("base"
            "math-lib"
            "draw-lib"
            "anaphoric"
            "web-server-lib"
            "mode-lambda"
            "lux"
            "reprovide-lang"
            "racket-doc"
            "scribble-lib"))
          (description
           .
           "Decentralized game universe in which players create and share their own levels")
          (implies . ())
          (last-checked . 1557339765)
          (last-edit . 1551127368)
          (last-updated . 1555020414)
          (modules
           .
           ((lib "rilouworld/private/network/api.rkt")
            (lib "rilouworld/scribblings/reference/reference.scrbl")
            (lib "rilouworld/scribblings/reference/engine.scrbl")
            (lib "rilouworld/bundle.rkt")
            (lib "rilouworld/scribblings/bundles/spacecat.scrbl")
            (lib "rilouworld/quest.rkt")
            (lib "rilouworld/private/core/event.rkt")
            (lib "rilouworld/scribblings/networking-guide.scrbl")
            (lib "rilouworld/engine.rkt")
            (lib "rilouworld/private/quest/expander.rkt")
            (lib "rilouworld/main.rkt")
            (lib "rilouworld/private/network/account.rkt")
            (lib "rilouworld/private/quest/props-meta.rkt")
            (lib "rilouworld/private/quest/reader.rkt")
            (lib "rilouworld/private/bundle/expander.rkt")
            (lib "rilouworld/scribblings/rilouworld.scrbl")
            (lib "rilouworld/private/utils/log.rkt")
            (lib "rilouworld/private/core/sprite.rkt")
            (lib "rilouworld/private/core/receiver.rkt")
            (lib "rilouworld/account.rkt")
            (lib "rilouworld/private/core/state-machine.rkt")
            (lib "rilouworld/private/quest/world.rkt")
            (lib "rilouworld/private/ai/ai-xor.rkt")
            (lib "rilouworld/scribblings/bundles/rilouw.scrbl")
            (lib "rilouworld/private/bundle/reader.rkt")
            (lib "rilouworld/bundles/quest.rkt")
            (lib "rilouworld/bundles/spacecat.rkt")
            (lib "rilouworld/private/quest/loader.rkt")
            (lib "rilouworld/private/quest/props.rkt")
            (lib "rilouworld/scribblings/quest-guide.scrbl")
            (lib "rilouworld/scribblings/reference/quest.scrbl")
            (lib "rilouworld/private/utils/struct.rkt")
            (lib "rilouworld/private/core/engine.rkt")
            (lib "rilouworld/scribblings/vocabulary.scrbl")
            (lib "rilouworld/bundles/rilouw.rkt")
            (lib "rilouworld/private/core/database.rkt")
            (lib "rilouworld/scribblings/reference/account.scrbl")
            (lib "rilouworld/private/core/player.rkt")
            (lib "rilouworld/scribblings/bundles/bundles.scrbl")
            (lib "rilouworld/private/ai/ai.rkt")))
          (name . "rilouworld")
          (nix-sha256
           .
           "18a5dc49jwyk1lwcfcz4slbbhx1mppklvncnjf23b0d4fk1bsfka")
          (ring . 2)
          (search-terms
           .
           #hasheq((2d . #t)
                   (:build-dep-fail: . #t)
                   (:build-success: . #t)
                   (:docs: . #t)
                   (author:jerome.martin.dev@gmail.com . #t)
                   (game . #t)
                   (game-engine . #t)
                   (games . #t)
                   (network . #t)
                   (ring:2 . #t)))
          (source . "https://github.com/euhmeuh/rilouworld.git")
          (tags . ("2d" "game" "game-engine" "games" "network"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "184dea6c187f4f94da6616b89ec15cc8ba6bb786")
                          (source
                           .
                           "https://github.com/euhmeuh/rilouworld.git")
                          (source_url
                           .
                           "https://github.com/euhmeuh/rilouworld.git")))))))
 ("ring-buffer"
  .
  #hasheq((author . "jay.mccarthy@gmail.com")
          (authors . ("jay.mccarthy@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "ring-buffer"
                    "doc/ring-buffer@ring-buffer/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/ring-buffer.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/ring-buffer.txt")))
          (checksum . "e93665407487ca0d31e1dadebc570371044f0c27")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base" "eli-tester" "racket-doc" "rackunit-lib" "scribble-lib"))
          (dependency-names
           .
           ("base" "eli-tester" "racket-doc" "rackunit-lib" "scribble-lib"))
          (description
           .
           "An imperative overwriting ring buffer data structure")
          (implies . ())
          (last-checked . 1557339765)
          (last-edit . 1353515180)
          (last-updated . 1549111376)
          (modules
           .
           ((lib "data/ring-buffer/ring-buffer.scrbl")
            (lib "data/ring-buffer.rkt")
            (lib "tests/data/ring-buffer.rkt")))
          (name . "ring-buffer")
          (nix-sha256
           .
           "1c0s8mvx3r4fh04h8hbs4hqzaysz3xf65jj7r5dj54ijmlamlq3i")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:jay.mccarthy@gmail.com . #t)
                   (data . #t)
                   (ring:1 . #t)))
          (source . "github://github.com/jeapostrophe/ring-buffer/master")
          (tags . ("data"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "e93665407487ca0d31e1dadebc570371044f0c27")
                          (source
                           .
                           "github://github.com/jeapostrophe/ring-buffer/master")
                          (source_url
                           .
                           "http://github.com/jeapostrophe/ring-buffer/tree/master")))))))
 ("riposte"
  .
  #hasheq((author . "jesse@lisp.sh")
          (authors . ("jesse@lisp.sh"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "riposte" "doc/riposte@riposte/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/riposte.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/riposte.txt")))
          (checksum . "398f8c1c19002d41dda05b69710f8287fb81b96d")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "brag"
            "beautiful-racket-lib"
            "http"
            "argo"
            "dotenv"
            "json-pointer"
            "uri-template"
            "ejs"
            "scribble-lib"
            "rackunit-lib"
            "racket-doc"
            "beautiful-racket-lib"))
          (dependency-names
           .
           ("base"
            "brag"
            "beautiful-racket-lib"
            "http"
            "argo"
            "dotenv"
            "json-pointer"
            "uri-template"
            "ejs"
            "scribble-lib"
            "rackunit-lib"
            "racket-doc"
            "beautiful-racket-lib"))
          (description . "Language for testing JSON-based HTTP APIs")
          (implies . ())
          (last-checked . 1557339765)
          (last-edit . 1539004087)
          (last-updated . 1557033755)
          (modules
           .
           ((lib "riposte/tokenizer.rkt")
            (lib "riposte/scribblings/parameters.scrbl")
            (lib "riposte/expander.rkt")
            (lib "riposte/scribblings/assertions.scrbl")
            (lib "riposte/identifier.rkt")
            (lib "riposte/scribblings/misc.scrbl")
            (lib "riposte/scribblings/use.scrbl")
            (lib "riposte/parameters.rkt")
            (lib "riposte/literal.rkt")
            (lib "riposte/parser.rkt")
            (lib "riposte/main.rkt")
            (lib "riposte/program.rkt")
            (lib "riposte/exec.rkt")
            (lib "riposte/check.rkt")
            (lib "riposte/evaluator.rkt")
            (lib "riposte/scribblings/commands.scrbl")
            (lib "riposte/expression.rkt")
            (lib "riposte/step.rkt")
            (lib "riposte/dependencies.rkt")
            (lib "riposte/predication.rkt")
            (lib "riposte/scribblings/import.scrbl")
            (lib "riposte/json.rkt")
            (lib "riposte/arithmetic.rkt")
            (lib "riposte/value.rkt")
            (lib "riposte/import.rkt")
            (lib "riposte/scribblings/wishlist.scrbl")
            (lib "riposte/assertion.rkt")
            (lib "riposte/scribblings/philosophy.scrbl")
            (lib "riposte/version.rkt")
            (lib "riposte/begin.rkt")
            (lib "riposte/riposte.rkt")
            (lib "riposte/empty.rkt")
            (lib "riposte/grammar.rkt")
            (lib "riposte/reader.rkt")
            (lib "riposte/echo.rkt")
            (lib "riposte/assignment.rkt")
            (lib "riposte/command.rkt")
            (lib "riposte/scribblings/riposte.scrbl")
            (lib "riposte/scribblings/briefly.scrbl")
            (lib "riposte/util.rkt")
            (lib "riposte/scribblings/origins.scrbl")
            (lib "riposte/environment.rkt")
            (lib "riposte/scribblings/assignments.scrbl")
            (lib "riposte/json-pointer.rkt")
            (lib "riposte/scribblings/limitations.scrbl")
            (lib "riposte/scribblings/language.scrbl")
            (lib "riposte/scribblings/installation.scrbl")))
          (name . "riposte")
          (nix-sha256
           .
           "0hlmrrkd0jfcsa9h609cb566brmr7gcs793bc81h1cqihh6fffbm")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:jesse@lisp.sh . #t)
                   (http . #t)
                   (json . #t)
                   (lang . #t)
                   (ring:2 . #t)
                   (testing . #t)))
          (source . "https://github.com/vicampo/riposte.git")
          (tags . ("http" "json" "lang" "testing"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "398f8c1c19002d41dda05b69710f8287fb81b96d")
                          (source . "https://github.com/vicampo/riposte.git")
                          (source_url
                           .
                           "https://github.com/vicampo/riposte.git")))))))
 ("rktvk"
  .
  #hasheq((author . "aydar.js@gmail.com")
          (authors . ("aydar.js@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "rktvk" "doc/rktvk@rktvk/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/rktvk.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/rktvk.txt")))
          (checksum . "305670650353648319a2e110785542818d7fa7d3")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "scribble-lib" "racket-doc" "rackunit-lib"))
          (dependency-names
           .
           ("base" "scribble-lib" "racket-doc" "rackunit-lib"))
          (description . "Racket library for working with VK API")
          (implies . ())
          (last-checked . 1557339765)
          (last-edit . 1546359401)
          (last-updated . 1545749890)
          (modules
           .
           ((lib "rktvk/main.rkt") (lib "rktvk/scribblings/rktvk.scrbl")))
          (name . "rktvk")
          (nix-sha256
           .
           "05hsgmf4za6c0w0ka8qiicjbv62931yxqkfz6x6q991njsps1rwz")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (API . #t)
                   (api . #t)
                   (author:aydar.js@gmail.com . #t)
                   (ring:2 . #t)))
          (source . "git://github.com/iZarif/rktvk")
          (tags . ("api" "API"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "305670650353648319a2e110785542818d7fa7d3")
                          (source . "git://github.com/iZarif/rktvk")
                          (source_url
                           .
                           "http://github.com/iZarif/rktvk/tree/master")))))))
 ("rmacs"
  .
  #hasheq((author . "tonygarnockjones@gmail.com")
          (authors . ("tonygarnockjones@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/rmacs.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/rmacs.txt")))
          (checksum . "8c99dd5dfa22f1f34707bbe957de268dc6a7a632")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "ansi"
            "syntax-color-lib"
            "gui-lib"
            "unix-signals"
            "diff-merge"
            "web-server-lib"
            "profile-lib"
            "rackunit-lib"))
          (dependency-names
           .
           ("base"
            "ansi"
            "syntax-color-lib"
            "gui-lib"
            "unix-signals"
            "diff-merge"
            "web-server-lib"
            "profile-lib"
            "rackunit-lib"))
          (description
           .
           "An EMACS written in Racket. Runs in ANSI-compatible terminals.")
          (implies . ())
          (last-checked . 1557339765)
          (last-edit . 1420183943)
          (last-updated . 1527986662)
          (modules
           .
           ((lib "rmacs/topsort.rkt")
            (lib "rmacs/buffer.rkt")
            (lib "rmacs/mode.rkt")
            (lib "rmacs/display-gui-check.rkt")
            (lib "rmacs/rope/range.rkt")
            (lib "rmacs/mode/fundamental.rkt")
            (lib "rmacs/keys.rkt")
            (lib "rmacs/rope.rkt")
            (lib "rmacs/main.rkt")
            (lib "rmacs/search.rkt")
            (lib "rmacs/minibuf.rkt")
            (lib "rmacs/window.rkt")
            (lib "rmacs/file.rkt")
            (lib "rmacs/rope/index.rkt")
            (lib "rmacs/rope/piece.rkt")
            (lib "rmacs/mark.rkt")
            (lib "rmacs/wrap.rkt")
            (lib "rmacs/local.rkt")
            (lib "rmacs/strings.rkt")
            (lib "rmacs/rope/string.rkt")
            (lib "rmacs/render.rkt")
            (lib "rmacs/ring.rkt")
            (lib "rmacs/colorize.rkt")
            (lib "rmacs/circular-list.rkt")
            (lib "rmacs/display-terminal.rkt")
            (lib "rmacs/api.rkt")
            (lib "rmacs/display-gui.rkt")
            (lib "rmacs/syntax.rkt")
            (lib "rmacs/lists.rkt")
            (lib "rmacs/rope/test.rkt")
            (lib "rmacs/timing.rkt")
            (lib "rmacs/editor.rkt")
            (lib "rmacs/history.rkt")
            (lib "rmacs/display.rkt")))
          (name . "rmacs")
          (nix-sha256
           .
           "11608v9b5x3ah6zxvp8rxljl7zy3krj9n7nvl02h1cy073g770qz")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:tonygarnockjones@gmail.com . #t)
                   (editor . #t)
                   (ring:1 . #t)
                   (terminal . #t)))
          (source . "github://github.com/tonyg/rmacs/master")
          (tags . ("editor" "terminal"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "8c99dd5dfa22f1f34707bbe957de268dc6a7a632")
                          (source . "github://github.com/tonyg/rmacs/master")
                          (source_url
                           .
                           "http://github.com/tonyg/rmacs/tree/master")))))))
 ("rmc"
  .
  #hasheq((author . "jay.mccarthy@gmail.com")
          (authors . ("jay.mccarthy@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/rmc.txt")
                 (test-failure-log . "server/built/test-fail/rmc.txt")
                 (test-success-log . #f)))
          (checksum . "e11425287cfecb3940f75a25a29f9b74826c2605")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("pprint" "chk" "base" "rackunit-lib"))
          (dependency-names . ("pprint" "chk" "base" "rackunit-lib"))
          (description . "Racket-made C")
          (implies . ())
          (last-checked . 1557339765)
          (last-edit . 1462316946)
          (last-updated . 1502816403)
          (modules
           .
           ((lib "rmc/lib.rkt")
            (lib "rmc/t.rkt")
            (lib "rmc/h.rkt")
            (lib "rmc/t/libc.rkt")
            (lib "rmc/h/libc.rkt")
            (lib "rmc/t/fac.rkt")
            (lib "rmc/t/ts.rkt")
            (lib "rmc/t/lib.rkt")
            (lib "rmc/h/glfw.rkt")
            (lib "rmc/main.rkt")
            (lib "rmc/private/class.rkt")))
          (name . "rmc")
          (nix-sha256
           .
           "0jk1whndmk8cmyb7z0gz91xk5jghs2akpnhq2y19d1bl61y9n0ak")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:jay.mccarthy@gmail.com . #t)
                   (c . #t)
                   (dsl . #t)
                   (ffi . #t)
                   (ring:1 . #t)
                   (systems . #t)))
          (source . "git://github.com/jeapostrophe/rmc")
          (tags . ("c" "dsl" "ffi" "systems"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "e11425287cfecb3940f75a25a29f9b74826c2605")
                          (source . "git://github.com/jeapostrophe/rmc")
                          (source_url
                           .
                           "http://github.com/jeapostrophe/rmc/tree/master")))))))
 ("rml-core"
  .
  #hasheq((author . "johnstonskj@gmail.com")
          (authors . ("johnstonskj@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "rml-core" "doc/rml-core@rml-core/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/rml-core.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/rml-core.txt")))
          (checksum . "aa73f78a14e5724fba95349d18d59c5125af45bd")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "math-lib"
            "csv-reading"
            "mcfly"
            "rackunit-lib"
            "racket-index"
            "scribble-lib"
            "racket-doc"
            "math-doc"
            "sandbox-lib"
            "cover-coveralls"))
          (dependency-names
           .
           ("base"
            "math-lib"
            "csv-reading"
            "mcfly"
            "rackunit-lib"
            "racket-index"
            "scribble-lib"
            "racket-doc"
            "math-doc"
            "sandbox-lib"
            "cover-coveralls"))
          (description
           .
           "This Package is part of an expected set of packages implementing machine learning capabilities\r\nfor Racket. The core of this package is the management of 'datasets', these datasets are assumed\r\nto be for training and testing of machine learning capabilities.")
          (implies . ())
          (last-checked . 1557339765)
          (last-edit . 1530203779)
          (last-updated . 1534953865)
          (modules
           .
           ((lib "rml/test/not-implemented.rkt")
            (lib "rml/data.rkt")
            (lib "rml/main.rkt")
            (lib "rml/statistics.rkt")
            (lib "rml/test/classify.rkt")
            (lib "rml/test/individual.rkt")
            (lib "rml/test/statistics.rkt")
            (lib "rml/private/csv.rkt")
            (lib "rml/not-implemented.rkt")
            (lib "rml/results.rkt")
            (lib "rml/private/dataset.rkt")
            (lib "rml/test/data.rkt")
            (lib "rml/private/json.rkt")
            (lib "rml/individual.rkt")
            (lib "rml/classify.rkt")
            (lib "rml/test/data-sets.rkt")
            (lib "rml/scribblings/rml-core.scrbl")
            (lib "rml/test/results.rkt")
            (lib "rml/test/scribblings.rkt")))
          (name . "rml-core")
          (nix-sha256
           .
           "1ys8jl8xng4l3xlpsjlr3gbxman2gdfd6x5jgns34zd0wffbfkd2")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:johnstonskj@gmail.com . #t)
                   (ml . #t)
                   (ring:2 . #t)))
          (source . "https://github.com/johnstonskj/rml-core.git")
          (tags . ("ml"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "aa73f78a14e5724fba95349d18d59c5125af45bd")
                          (source
                           .
                           "https://github.com/johnstonskj/rml-core.git")
                          (source_url
                           .
                           "https://github.com/johnstonskj/rml-core.git")))))))
 ("rml-decisiontrees"
  .
  #hasheq((author . "johnstonskj@gmail.com")
          (authors . ("johnstonskj@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "rml-decisiontrees"
                    "doc/rml-decisiontrees@rml-decisiontrees/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/rml-decisiontrees.txt")
                 (test-failure-log
                  .
                  "server/built/test-fail/rml-decisiontrees.txt")
                 (test-success-log . #f)))
          (checksum . "180b22bfcc3a3a0134302c6e738cde3659e7be3f")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "rml-core"
            "math-lib"
            "sandbox-lib"
            "racket-index"
            "rackunit-lib"
            "scribble-lib"
            "racket-doc"
            "cover-coveralls"))
          (dependency-names
           .
           ("base"
            "rml-core"
            "math-lib"
            "sandbox-lib"
            "racket-index"
            "rackunit-lib"
            "scribble-lib"
            "racket-doc"
            "cover-coveralls"))
          (description
           .
           "This Package is part of a set of packages implementing machine learning capabilities for Racket. This particular package implements support for classification of individuals using decision trees.")
          (implies . ())
          (last-checked . 1557339765)
          (last-edit . 1533765455)
          (last-updated . 1533876338)
          (modules
           .
           ((lib "rml-decisiontrees/test/scribblings.rkt")
            (lib "rml-decisiontrees/test/main.rkt")
            (lib "rml-decisiontrees/scribblings/rml-decisiontrees.scrbl")
            (lib "rml-decisiontrees/main.rkt")))
          (name . "rml-decisiontrees")
          (nix-sha256
           .
           "0k7y3zbgl8c0jx576s5kzvkzyvn3pqwsab3wi90p4v6agkaaky10")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:johnstonskj@gmail.com . #t)
                   (ml . #t)
                   (ring:2 . #t)))
          (source . "https://github.com/johnstonskj/rml-decisiontrees.git")
          (tags . ("ml"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "180b22bfcc3a3a0134302c6e738cde3659e7be3f")
                          (source
                           .
                           "https://github.com/johnstonskj/rml-decisiontrees.git")
                          (source_url
                           .
                           "https://github.com/johnstonskj/rml-decisiontrees.git")))))))
 ("rml-knn"
  .
  #hasheq((author . "johnstonskj@gmail.com")
          (authors . ("johnstonskj@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "rml-knn" "doc/rml-knn@rml-knn/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/rml-knn.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/rml-knn.txt")))
          (checksum . "83e3755c56b1c486b9fc1663b4ef21b2254b9634")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "rml-core"
            "math-lib"
            "rackunit-lib"
            "racket-index"
            "scribble-lib"
            "racket-doc"
            "sandbox-lib"
            "cover-coveralls"))
          (dependency-names
           .
           ("base"
            "rml-core"
            "math-lib"
            "rackunit-lib"
            "racket-index"
            "scribble-lib"
            "racket-doc"
            "sandbox-lib"
            "cover-coveralls"))
          (description
           .
           "This Package is part of a set of packages implementing machine learning capabilities for Racket. This particular package implements the K-Nearest Neighbor approach for classification.")
          (implies . ())
          (last-checked . 1557339765)
          (last-edit . 1530419600)
          (last-updated . 1537394320)
          (modules
           .
           ((lib "rml-knn/test/classifier.rkt")
            (lib "rml-knn/classifier.rkt")
            (lib "rml-knn/test/scribblings.rkt")
            (lib "rml-knn/main.rkt")
            (lib "rml-knn/scribblings/rml-knn.scrbl")))
          (name . "rml-knn")
          (nix-sha256
           .
           "0vgmp36zia561f90whf3bhpgb3882jjvvv5fxfcl35ahg88jhz1d")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:johnstonskj@gmail.com . #t)
                   (ml . #t)
                   (ring:2 . #t)))
          (source . "https://github.com/johnstonskj/rml-knn.git")
          (tags . ("ml"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "83e3755c56b1c486b9fc1663b4ef21b2254b9634")
                          (source
                           .
                           "https://github.com/johnstonskj/rml-knn.git")
                          (source_url
                           .
                           "https://github.com/johnstonskj/rml-knn.git")))))))
 ("rml-neural"
  .
  #hasheq((author . "johnstonskj@gmail.com")
          (authors . ("johnstonskj@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "rml-neural"
                    "doc/rml-neural@rml-neural/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/rml-neural.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/rml-neural.txt")))
          (checksum . "5e3c95ab118007e16ac25627229674894e8c5302")
          (checksum-error . #f)
          (conflicts . ())
          (date-added . 1550686995)
          (dependencies
           .
           ("base"
            "math-lib"
            "plot-gui-lib"
            "plot-lib"
            "rackunit-lib"
            "scribble-lib"
            "scribble-math"
            "racket-doc"
            "racket-index"
            "sandbox-lib"
            "cover-coveralls"))
          (dependency-names
           .
           ("base"
            "math-lib"
            "plot-gui-lib"
            "plot-lib"
            "rackunit-lib"
            "scribble-lib"
            "scribble-math"
            "racket-doc"
            "racket-index"
            "sandbox-lib"
            "cover-coveralls"))
          (description
           .
           "Pedantic implementation of neural networks for deep learning in Racket")
          (implies . ())
          (last-checked . 1557339766)
          (last-edit . 1550687059)
          (last-updated . 1553040408)
          (modules
           .
           ((lib "rml-neural/activation.rkt")
            (lib "rml-neural/scribblings/activation.scrbl")
            (lib "rml-neural/private/act-struct.rkt")
            (lib "rml-neural/main.rkt")
            (lib "rml-neural/private/act-syntax.rkt")
            (lib "rml-neural/private/act-plot.rkt")
            (lib "rml-neural/private/contract.rkt")
            (lib "rml-neural/tests/rml-neural.rkt")
            (lib "rml-neural/perceptron.rkt")
            (lib "rml-neural/scribblings/rml-neural.scrbl")
            (lib "rml-neural/scribblings/_rml-neural.scrbl")
            (lib "rml-neural/tests/test-doc-complete.rkt")
            (lib "rml-neural/private/rml-neural.rkt")
            (lib "rml-neural/cost.rkt")
            (lib "rml-neural/flmatrix.rkt")
            (lib "rml-neural/scribblings/act-plots.rkt")))
          (name . "rml-neural")
          (nix-sha256
           .
           "1fgix0j1b37ibgxf06477jga08pqp3hvyyyd9vlg4izjlw01hg1d")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:johnstonskj@gmail.com . #t)
                   (ml . #t)
                   (ring:2 . #t)))
          (source . "https://github.com/johnstonskj/rml-neural.git")
          (tags . ("ml"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "5e3c95ab118007e16ac25627229674894e8c5302")
                          (source
                           .
                           "https://github.com/johnstonskj/rml-neural.git")
                          (source_url
                           .
                           "https://github.com/johnstonskj/rml-neural.git")))))))
 ("rokit-racket"
  .
  #hasheq((author . "stephen@thoughtstem.com")
          (authors . ("stephen@thoughtstem.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . "server/built/deps/rokit-racket.txt")
                 (docs
                  .
                  (("main"
                    "rokit-racket"
                    "doc/rokit-racket@rokit-racket/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/rokit-racket.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/rokit-racket.txt")))
          (checksum . "4b5362ff1d2204384270a0ffa786023a17886e0d")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("racket-to"))
          (dependency-names . ("racket-to"))
          (description
           .
           "Racket library for compiling to the Rokit Arduino-based robotics kits.  We use these kits in ThoughtSTEM robotics classes. ")
          (implies . ())
          (last-checked . 1557339766)
          (last-edit . 1525725090)
          (last-updated . 1527900262)
          (modules
           .
           ((lib "rokit-racket/main.rkt")
            (lib "rokit-racket/test.rkt")
            (lib "rokit-racket/arduino-lang.rkt")
            (lib "rokit-racket/arduino-compile.rkt")
            (lib "rokit-racket/rokit-racket-module.rkt")
            (lib "rokit-racket/rokit-racket.scrbl")
            (lib "rokit-racket/prefs.rkt")))
          (name . "rokit-racket")
          (nix-sha256
           .
           "1wb5fj9b5ip6mq4aqisyfykagr7gg0myf101z7jscdq3sgxm9clk")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-dep-fail: . #t)
                   (:build-success: . #t)
                   (:docs: . #t)
                   (author:stephen@thoughtstem.com . #t)
                   (ring:2 . #t)
                   (robotics . #t)))
          (source
           .
           "https://github.com/thoughtstem/rokit-racket.git?path=rokit-racket")
          (tags . ("robotics"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "4b5362ff1d2204384270a0ffa786023a17886e0d")
                          (source
                           .
                           "https://github.com/thoughtstem/rokit-racket.git?path=rokit-racket")
                          (source_url
                           .
                           "https://github.com/thoughtstem/rokit-racket.git?path=rokit-racket")))))))
 ("roman-numeral"
  .
  #hasheq((author . "philip@philipmcgrath.com")
          (authors . ("philip@philipmcgrath.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "roman-numeral"
                    "doc/roman-numeral@roman-numeral/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/roman-numeral.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/roman-numeral.txt")))
          (checksum . "a704e448c5e751dec4bda3ddbe4ea7237208a6eb")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           (("base" #:version "6.4")
            "rackunit-lib"
            "scribble-lib"
            "racket-doc"))
          (dependency-names
           .
           ("base" "rackunit-lib" "scribble-lib" "racket-doc"))
          (description . "Utilities for parsing and writing Roman numerals")
          (implies . ())
          (last-checked . 1557339766)
          (last-edit . 1501020510)
          (last-updated . 1543391274)
          (modules
           .
           ((lib "roman-numeral/scribblings/roman-numeral.scrbl")
            (lib "roman-numeral/main.rkt")))
          (name . "roman-numeral")
          (nix-sha256
           .
           "0y25i932adlhr2i4n2q884inmz3rjxsjvy8bl6vidpsk7gdpdv93")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:philip@philipmcgrath.com . #t)
                   (parser . #t)
                   (parsing . #t)
                   (ring:1 . #t)
                   (util . #t)
                   (utility . #t)))
          (source . "git://github.com/LiberalArtist/roman-numeral")
          (tags . ("parser" "parsing" "util" "utility"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "a704e448c5e751dec4bda3ddbe4ea7237208a6eb")
                          (source
                           .
                           "git://github.com/LiberalArtist/roman-numeral")
                          (source_url
                           .
                           "http://github.com/LiberalArtist/roman-numeral/tree/master")))))))
 ("roomba"
  .
  #hasheq((author . "neil@neilvandyke.org")
          (authors . ("neil@neilvandyke.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "roomba" "doc/roomba@roomba/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/roomba.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/roomba.txt")))
          (checksum . "7d3968beb6d16886038e6b3875144d074990ef33")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "mcfly"
            "scribble-lib"
            "scribble-lib"
            "racket-doc"
            "overeasy"))
          (dependency-names
           .
           ("base"
            "mcfly"
            "scribble-lib"
            "scribble-lib"
            "racket-doc"
            "overeasy"))
          (description . "iRobot Roomba/Create Interface")
          (implies . ())
          (last-checked . 1557339766)
          (last-edit . 1456463423)
          (last-updated . 1502816404)
          (modules
           .
           ((lib "roomba/roomba-doc-utils.rkt")
            (lib "roomba/main.rkt")
            (lib "roomba/roomba.rkt")
            (lib "roomba/roomba.scrbl")))
          (name . "roomba")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:neil@neilvandyke.org . #t)
                   (ring:1 . #t)
                   (robotics . #t)))
          (source . "http://www.neilvandyke.org/racket/roomba.zip")
          (tags . ("robotics"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "7d3968beb6d16886038e6b3875144d074990ef33")
                          (source
                           .
                           "http://www.neilvandyke.org/racket/roomba.zip")
                          (source_url
                           .
                           "http://www.neilvandyke.org/racket/roomba.zip")))))))
 ("rosetta"
  .
  #hasheq((author . "antonio.menezes.leitao@gmail.com")
          (authors . ("antonio.menezes.leitao@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . "server/built/deps/rosetta.txt")
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/rosetta.txt")
                 (test-failure-log . "server/built/test-fail/rosetta.txt")
                 (test-success-log . #f)))
          (checksum . "88f4946fa3ac070bca30ce227ddc71aa6b11c5c3")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ())
          (dependency-names . ())
          (description . "")
          (implies . ())
          (last-checked . 1557339766)
          (last-edit . 1444488892)
          (last-updated . 1549309383)
          (modules
           .
           ((lib "rosetta/base/connection.rkt")
            (lib "rosetta/archicad/protobuf1/protobuf.rkt")
            (lib "rosetta/simulation/materials.rkt")
            (lib "rosetta/autocad/ac-com.rkt")
            (lib "rosetta/main.rkt")
            (lib "rosetta/archicad/objects.rkt")
            (lib "rosetta/archicad/protobuf1/encoding.rkt")
            (lib "rosetta/robot/robot-com.rkt")
            (lib "rosetta/simulation/simulation.rkt")
            (lib "rosetta/lighting-simulation.rkt")
            (lib "rosetta/sketchup/backend.rkt")
            (lib "rosetta/autocad-server/backend.rkt")
            (lib "rosetta/revit/pbContracts.rkt")
            (lib "rosetta/base/coord.rkt")
            (lib "rosetta/base/bim-families.rkt")
            (lib "rosetta/rhino.rkt")
            (lib "rosetta/base/enums.rkt")
            (lib "rosetta/autocad/ac-enums.rkt")
            (lib "rosetta/tikz/backend.rkt")
            (lib "rosetta/tikz/primops.rkt")
            (lib "rosetta/revit-server.rkt")
            (lib "rosetta/util/delaunay.rkt")
            (lib "rosetta/revit/main.rkt")
            (lib "rosetta/revit/rosetta/protobuf1/protobuf.rkt")
            (lib "rosetta/revit/backend.rkt")
            (lib "rosetta/autocad/main.rkt")
            (lib "rosetta/autocad-server/primitives.rkt")
            (lib "rosetta/robot/robot-enums.rkt")
            (lib "rosetta/archicad.rkt")
            (lib "rosetta/revit-server/backend.rkt")
            (lib "rosetta/archicad/protobuf1/syntax.rkt")
            (lib "rosetta/robot/backend.rkt")
            (lib "rosetta/revit/rosetta/protobuf1/encoding.rkt")
            (lib "rosetta/base/utils.rkt")
            (lib "rosetta/revit/racketSide.rkt")
            (lib "rosetta/autocad/backend.rkt")
            (lib "rosetta/autocad-native.rkt")
            (lib "rosetta/base/com.rkt")
            (lib "rosetta/base/bim-operations.rkt")
            (lib "rosetta/rhinoceros/rh-com.rkt")
            (lib "rosetta/base/raw-connection.rkt")
            (lib "rosetta/util/geometry.rkt")
            (lib "rosetta/revit/rosetta/protobuf1/reflection.rkt")
            (lib "rosetta/autocad.rkt")
            (lib "rosetta/revit.rkt")
            (lib "rosetta/rhinoceros/backend.rkt")
            (lib "rosetta/revit-server/primitives.rkt")
            (lib "rosetta/autocad-server.rkt")
            (lib "rosetta/tikz.rkt")
            (lib "rosetta/sketchup/primops.rkt")
            (lib "rosetta/archicad/protobuf1/reflection.rkt")
            (lib "rosetta/archicad/geometry.rkt")
            (lib "rosetta/util/excel.rkt")
            (lib "rosetta/base/shapes.rkt")
            (lib "rosetta/base/typed-com.rkt")
            (lib "rosetta/archicad/communication.rkt")
            (lib "rosetta/archicad/messages.rkt")
            (lib "rosetta/archicad/backend.rkt")
            (lib "rosetta/tikz/main.rkt")
            (lib "rosetta/archicad/inspector.rkt")
            (lib "rosetta/archicad/install.rkt")
            (lib "rosetta/revit/rosetta/protobuf1/syntax.rkt")
            (lib "rosetta/sketchup.rkt")))
          (name . "rosetta")
          (nix-sha256
           .
           "0qjbchhjbp01d1jqjyqzji6qc5hjkm21wi4smgah1mg82qgpvqdq")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-dep-fail: . #t)
                   (:build-success: . #t)
                   (:no-desc: . #t)
                   (:no-tag: . #t)
                   (author:antonio.menezes.leitao@gmail.com . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/aptmcl/rosetta")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "88f4946fa3ac070bca30ce227ddc71aa6b11c5c3")
                          (source . "git://github.com/aptmcl/rosetta")
                          (source_url
                           .
                           "http://github.com/aptmcl/rosetta/tree/master")))))))
 ("rosette"
  .
  #hasheq((author . "emina@cs.washington.edu")
          (authors . ("emina@cs.washington.edu"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "rosette-guide"
                    "doc/rosette-guide@rosette/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/rosette.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/rosette.txt")))
          (checksum . "5f9f1404d42664cb759240f336808357386eb1df")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("r6rs-lib"
            "rfc6455"
            "net-lib"
            "web-server-lib"
            "rackunit-lib"
            "slideshow-lib"
            "base"
            "pict-doc"
            "scribble-lib"
            "racket-doc"
            "errortrace-doc"))
          (dependency-names
           .
           ("r6rs-lib"
            "rfc6455"
            "net-lib"
            "web-server-lib"
            "rackunit-lib"
            "slideshow-lib"
            "base"
            "pict-doc"
            "scribble-lib"
            "racket-doc"
            "errortrace-doc"))
          (description . "The Rosette Language")
          (implies . ())
          (last-checked . 1557339766)
          (last-edit . 1458871007)
          (last-updated . 1552702363)
          (modules
           .
           ((lib "sdsl/websynth/test/imdb250_8.rkt")
            (lib "sdsl/synthcl/model/runtime.rkt")
            (lib "sdsl/synthcl/examples/toy/synth/kernel.rkt")
            (lib "sdsl/websynth/test/itunes100_8.rkt")
            (lib "sdsl/synthcl/lang/sugar.rkt")
            (lib "sdsl/synthcl/examples/sobelFilter/test.rkt")
            (lib "rosette/lib/profile/renderer/noop.rkt")
            (lib "sdsl/websynth/test/alanon_arkansas_16.rkt")
            (lib "sdsl/synthcl/lang/env.rkt")
            (lib "sdsl/synthcl/lang/forms.rkt")
            (lib "rosette/base/core/term.rkt")
            (lib "test/all-sdsl-tests.rkt")
            (lib "sdsl/synthcl/examples/fastWalshTransform/verify/kernel.rkt")
            (lib "sdsl/ifc/basic.rkt")
            (lib "sdsl/fsm/query.rkt")
            (lib "sdsl/synthcl/examples/toy/synth/host.rkt")
            (lib "test/base/equality.rkt")
            (lib "rosette/base/adt/generic.rkt")
            (lib "rosette/doc/guide/scribble/forms/racket-forms.scrbl")
            (lib "rosette/doc/guide/scribble/datatypes/boxes.scrbl")
            (lib "rosette/base/core/lift.rkt")
            (lib "rosette/doc/guide/scribble/util/clean.rkt")
            (lib "rosette/private/install.rkt")
            (lib "rosette/solver/smt/z3.rkt")
            (lib "rosette/base/core/equality.rkt")
            (lib "sdsl/synthcl/lang/typecheck.rkt")
            (lib "rosette/lib/profile/renderer/report/terms.rkt")
            (lib "sdsl/websynth/benchmarks/imdb250_8.rkt")
            (lib "sdsl/websynth/websynth.rkt")
            (lib
             "rosette/doc/guide/scribble/datatypes/defined-datatypes.scrbl")
            (lib "rosette/safe.rkt")
            (lib "rosette/lib/profile/feature.rkt")
            (lib "sdsl/websynth/test/itunes100_16.rkt")
            (lib "sdsl/ifc/value.rkt")
            (lib "sdsl/bv/test/all-tests.rkt")
            (lib "test/base/uninterpreted.rkt")
            (lib "sdsl/synthcl/test/snippets.rkt")
            (lib "sdsl/ifc/indistinguishable.rkt")
            (lib "rosette/base/form/module.rkt")
            (lib "rosette/solver/smt/server.rkt")
            (lib "sdsl/websynth/test/alanon_arkansas_2.rkt")
            (lib "sdsl/bv/lang/log.rkt")
            (lib "sdsl/ifc/jump.rkt")
            (lib "sdsl/synthcl/model/flags.rkt")
            (lib "rosette/base/adt/vector.rkt")
            (lib "rosette/base/core/real.rkt")
            (lib "rosette/lib/profile/tool.rkt")
            (lib "test/base/list.rkt")
            (lib "sdsl/synthcl/examples/sobelFilter/kernel.rkt")
            (lib "test/base/bitvector.rkt")
            (lib "test/base/distinct.rkt")
            (lib "rosette/doc/guide/scribble/datatypes/vectors.scrbl")
            (lib "test/base/common.rkt")
            (lib "sdsl/websynth/benchmarks/itunes100_4.rkt")
            (lib "rosette/solver/smt/env.rkt")
            (lib "sdsl/synthcl/model/program.rkt")
            (lib "sdsl/bv/lang/bvops.rkt")
            (lib "test/base/effects.rkt")
            (lib "rosette/query/core.rkt")
            (lib "test/base/forall.rkt")
            (lib "rosette/lib/profile/renderer/report/ws-server.rkt")
            (lib "sdsl/fsm/viz.rkt")
            (lib "sdsl/bv/lang/form.rkt")
            (lib "test/base/solver.rkt")
            (lib "rosette/query/form.rkt")
            (lib "test/base/real.rkt")
            (lib "rosette/doc/guide/scribble/util/lifted.rkt")
            (lib
             "rosette/doc/guide/scribble/reflection/symbolic-reflection.scrbl")
            (lib "rosette/base/util/ord-dict.rkt")
            (lib "rosette/lib/profile/raco.rkt")
            (lib "rosette/lib/synthax/core.rkt")
            (lib "sdsl/synthcl/examples/matrixMultiply/verify/test.rkt")
            (lib "rosette/solver/smt/cvc4.rkt")
            (lib "rosette/lib/profile/renderer/renderer.rkt")
            (lib "rosette/base/core/polymorphic.rkt")
            (lib "rosette/safe/lang/reader.rkt")
            (lib "sdsl/synthcl/test/operators.rkt")
            (lib "sdsl/websynth/test/imdb250_2.rkt")
            (lib "sdsl/synthcl/test/typecheck.rkt")
            (lib "rosette/doc/guide/scribble/datatypes/bitvectors.scrbl")
            (lib "rosette/doc/guide/scribble/essentials/essentials.scrbl")
            (lib "test/base/exprs.rkt")
            (lib "rosette/base/core/distinct.rkt")
            (lib "rosette/solver/smt/dec.rkt")
            (lib "sdsl/synthcl/examples/matrixMultiply/verify/kernel.rkt")
            (lib "rosette/solver/smt/smtlib2.rkt")
            (lib "test/base/generics.rkt")
            (lib "sdsl/synthcl/model/pointers.rkt")
            (lib "sdsl/synthcl/model/context.rkt")
            (lib "rosette/query/eval.rkt")
            (lib "rosette/base/adt/list.rkt")
            (lib "test/base/finitize.rkt")
            (lib "sdsl/websynth/test/alanon_arkansas_8.rkt")
            (lib "sdsl/synthcl/test/reals.rkt")
            (lib "sdsl/synthcl/examples/fastWalshTransform/synth/kernel.rkt")
            (lib "rosette/lib/util/syntax.rkt")
            (lib "rosette/doc/guide/scribble/performance/performance.scrbl")
            (lib "rosette/solver/mip/common.rkt")
            (lib "sdsl/synthcl/model/kernel.rkt")
            (lib "rosette/base/core/merge.rkt")
            (lib "rosette/base/util/array.rkt")
            (lib "sdsl/ifc/machine.rkt")
            (lib "sdsl/synthcl/lang/errors.rkt")
            (lib "rosette/lib/profile/renderer/syntax.rkt")
            (lib "sdsl/ifc/call.rkt")
            (lib "rosette/lib/profile/renderer/report/generic.rkt")
            (lib "rosette/query/query.rkt")
            (lib "rosette/lib/profile/compile.rkt")
            (lib "test/profile/test.rkt")
            (lib "test/profile/benchmarks/list.rkt")
            (lib "rosette/lib/profile/renderer/report/callgraph.rkt")
            (lib "sdsl/websynth/test/alanon_arkansas_4.rkt")
            (lib "sdsl/synthcl/test/more-snippets.rkt")
            (lib "test/profile/benchmarks/update-at.rkt")
            (lib "sdsl/bv/bv.rkt")
            (lib "sdsl/synthcl/examples/fastWalshTransform/synth/host.rkt")
            (lib "sdsl/ifc/instruction.rkt")
            (lib
             "rosette/doc/guide/scribble/reflection/value-reflection.scrbl")
            (lib "sdsl/bv/test/medium.rkt")
            (lib "sdsl/websynth/test/imdb250_4.rkt")
            (lib "rosette/base/base.rkt")
            (lib "test/query/solve+.rkt")
            (lib "sdsl/synthcl/examples/matrixMultiply/synth/test.rkt")
            (lib "rosette/lib/match.rkt")
            (lib "rosette/base/struct/generics.rkt")
            (lib "rosette/base/struct/struct-type.rkt")
            (lib "rosette/query/finitize.rkt")
            (lib "sdsl/websynth/test/itunes100_2.rkt")
            (lib "rosette/base/core/safe.rkt")
            (lib "sdsl/websynth/benchmarks/alanon_arkansas_16.rkt")
            (lib "sdsl/synthcl/lang/builtins.rkt")
            (lib "test/base/vector.rkt")
            (lib "rosette/doc/guide/scribble/datatypes/equality.scrbl")
            (lib "sdsl/synthcl/examples/sobelFilter/host.rkt")
            (lib "rosette/doc/guide/scribble/forms/forms.scrbl")
            (lib "rosette/doc/guide/scribble/libs/libraries.scrbl")
            (lib "sdsl/synthcl/examples/toy/verify/host.rkt")
            (lib "rosette/base/struct/struct.rkt")
            (lib "sdsl/synthcl/model/work.rkt")
            (lib "rosette/lib/profile/data.rkt")
            (lib "rosette/base/form/app.rkt")
            (lib "sdsl/synthcl/model/reals.rkt")
            (lib "test/profile/benchmarks/exn.rkt")
            (lib "rosette/solver/smt/boolector.rkt")
            (lib "test/base/quantified.rkt")
            (lib "sdsl/bv/test/easy.rkt")
            (lib "sdsl/ifc/test.rkt")
            (lib "rosette/lib/profile/graph.rkt")
            (lib "test/query/synthax-external.rkt")
            (lib "rosette/base/adt/box.rkt")
            (lib "sdsl/synthcl/lang/operators.rkt")
            (lib "sdsl/fsm/automaton.rkt")
            (lib "rosette/base/core/function.rkt")
            (lib "rosette/doc/guide/scribble/essentials/poly.rkt")
            (lib "rosette/doc/guide/scribble/libs/racket-libs.scrbl")
            (lib "sdsl/ifc/verify.rkt")
            (lib "test/base/ord-dict.rkt")
            (lib "sdsl/fsm/lib.rkt")
            (lib "sdsl/websynth/benchmarks/imdb250_16.rkt")
            (lib "sdsl/websynth/benchmarks/itunes100_8.rkt")
            (lib "rosette/lib/lift.rkt")
            (lib "rosette/lib/angelic.rkt")
            (lib "rosette/lib/profile/record.rkt")
            (lib "sdsl/synthcl/examples/matrixMultiply/synth/kernel.rkt")
            (lib "rosette/base/core/procedure.rkt")
            (lib "sdsl/bv/examples/hard.rkt")
            (lib "sdsl/synthcl/examples/fastWalshTransform/verify/host.rkt")
            (lib "sdsl/synthcl/test/all-tests.rkt")
            (lib "rosette/solver/smt/cmd.rkt")
            (lib "test/base/push-pop.rkt")
            (lib "rosette/lib/profile/renderer/report.rkt")
            (lib "sdsl/websynth/benchmarks/alanon_arkansas_4.rkt")
            (lib "test/query/solve.rkt")
            (lib "rosette/base/core/union.rkt")
            (lib "rosette/lib/profile.rkt")
            (lib "rosette/base/core/reporter.rkt")
            (lib "rosette/solver/smt/yices.rkt")
            (lib "test/all-rosette-tests.rkt")
            (lib "sdsl/websynth/benchmarks/imdb250_4.rkt")
            (lib "rosette/lib/render.rkt")
            (lib "rosette/base/form/define.rkt")
            (lib
             "rosette/doc/guide/scribble/datatypes/bools+ints+reals.scrbl")
            (lib "rosette/base/form/state.rkt")
            (lib "sdsl/websynth/test/all-tests.rkt")
            (lib "sdsl/websynth/benchmarks/imdb250_2.rkt")
            (lib "sdsl/websynth/benchmarks/itunes100_2.rkt")
            (lib "sdsl/bv/examples/medium.rkt")
            (lib "sdsl/bv/lang/fragment.rkt")
            (lib "rosette/solver/mip/enc.rkt")
            (lib "sdsl/websynth/benchmarks/alanon_arkansas_8.rkt")
            (lib "sdsl/bv/lang/program.rkt")
            (lib "sdsl/bv/examples/reference.rkt")
            (lib "rosette/base/core/bool.rkt")
            (lib "rosette/solver/mip/cmd.rkt")
            (lib "sdsl/ifc/verify-EENI-demo.rkt")
            (lib "test/base/type.rkt")
            (lib "rosette/lib/profile/renderer/trace.rkt")
            (lib "rosette/doc/guide/scribble/datatypes/procedures.scrbl")
            (lib "sdsl/synthcl/lang/types.rkt")
            (lib "rosette/lib/synthax/form.rkt")
            (lib "rosette/lib/roseunit.rkt")
            (lib "rosette/lib/profile/renderer/report/solver.rkt")
            (lib "sdsl/fsm/fsm.rkt")
            (lib "test/base/term.rkt")
            (lib "rosette/doc/guide/scribble/libs/rosette-lib-test.rkt")
            (lib
             "rosette/doc/guide/scribble/reflection/state-reflection.scrbl")
            (lib "sdsl/websynth/test/imdb250_16.rkt")
            (lib "test/cplex/solve.rkt")
            (lib "sdsl/synthcl/lang/queries.rkt")
            (lib "rosette/solver/smt/base-solver.rkt")
            (lib "sdsl/synthcl/test/grammar.rkt")
            (lib "rosette/doc/guide/scribble/welcome/welcome.scrbl")
            (lib "rosette/doc/guide/scribble/rosette-guide.scrbl")
            (lib "rosette/lib/synthax.rkt")
            (lib "test/query/synthesize.rkt")
            (lib "rosette/main.rkt")
            (lib "test/query/synthax.rkt")
            (lib "sdsl/synthcl/lang/util.rkt")
            (lib "rosette/query/debug.rkt")
            (lib "rosette/solver/solver.rkt")
            (lib "sdsl/synthcl/model/errors.rkt")
            (lib "rosette/doc/guide/scribble/datatypes/test.rkt")
            (lib "test/base/merge.rkt")
            (lib "sdsl/websynth/dom.rkt")
            (lib
             "rosette/doc/guide/scribble/datatypes/solvers+solutions.scrbl")
            (lib "test/profile/renderer.rkt")
            (lib "test/query/verify.rkt")
            (lib "sdsl/synthcl/examples/sobelFilter/reference.rkt")
            (lib "rosette/doc/guide/scribble/datatypes/pairs.scrbl")
            (lib "sdsl/synthcl/test/work.rkt")
            (lib "sdsl/bv/examples/easy.rkt")
            (lib "sdsl/synthcl/examples/fastWalshTransform/synth/test.rkt")
            (lib "rosette/solver/smt/enc.rkt")
            (lib "sdsl/synthcl/model/buffer.rkt")
            (lib "rosette/base/adt/seq.rkt")
            (lib "rosette/lib/profile/reporter.rkt")
            (lib "sdsl/synthcl/examples/matrixMultiply/verify/host.rkt")
            (lib "rosette/lang/reader.rkt")
            (lib "rosette/doc/guide/scribble/unsafe/unsafe.scrbl")
            (lib "sdsl/synthcl/examples/matrixMultiply/verify/host-buggy.rkt")
            (lib "rosette/doc/guide/scribble/reflection/test.rkt")
            (lib "sdsl/synthcl/test/memory.rkt")
            (lib "rosette/base/core/type.rkt")
            (lib "sdsl/fsm/demo.rkt")
            (lib "sdsl/websynth/benchmarks/itunes100_16.rkt")
            (lib "rosette/solver/mip/server.rkt")
            (lib "rosette/base/core/forall.rkt")
            (lib "test/query/debug.rkt")
            (lib "sdsl/synthcl/lang/main.rkt")
            (lib "rosette/doc/guide/scribble/datatypes/uninterpreted.scrbl")
            (lib "sdsl/synthcl/model/objects.rkt")
            (lib "sdsl/synthcl/model/operators.rkt")
            (lib "test/base/decode.rkt")
            (lib "sdsl/synthcl/model/memory.rkt")
            (lib "sdsl/synthcl/model/queue.rkt")
            (lib "rosette/solver/mip/cplex.rkt")
            (lib "rosette/lib/profile/renderer/heap.rkt")
            (lib "rosette/base/core/reflect.rkt")
            (lib
             "rosette/doc/guide/scribble/datatypes/builtin-datatypes.scrbl")
            (lib "rosette/doc/guide/scribble/libs/rosette-libs.scrbl")
            (lib "sdsl/synthcl/examples/fastWalshTransform/verify/test.rkt")
            (lib "sdsl/websynth/test/itunes100_4.rkt")
            (lib "sdsl/synthcl/examples/toy/verify/kernel.rkt")
            (lib "rosette/doc/guide/scribble/forms/rosette-forms.scrbl")
            (lib "rosette/base/core/bitvector.rkt")
            (lib "rosette/lib/util/syntax-properties.rkt")
            (lib "test/query/optimize.rkt")
            (lib "rosette/base/form/control.rkt")
            (lib "sdsl/bv/test/util.rkt")
            (lib "sdsl/websynth/benchmarks/alanon_arkansas_2.rkt")
            (lib "sdsl/synthcl/examples/matrixMultiply/synth/host.rkt")
            (lib "sdsl/synthcl/model/type.rkt")
            (lib "rosette/solver/solution.rkt")
            (lib "test/base/bool.rkt")
            (lib "rosette/base/core/numerics.rkt")
            (lib "sdsl/bv/lang/core.rkt")
            (lib "rosette/base/core/effects.rkt")
            (lib "sdsl/websynth/websynthlib.rkt")
            (lib "rosette/doc/guide/scribble/refs.scrbl")))
          (name . "rosette")
          (nix-sha256
           .
           "0s3n7vbla7aaqh2lpqizs1lblynxqazslsp4v58sj60wh60q957b")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (:no-tag: . #t)
                   (author:emina@cs.washington.edu . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/emina/rosette")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "5f9f1404d42664cb759240f336808357386eb1df")
                          (source . "git://github.com/emina/rosette")
                          (source_url
                           .
                           "http://github.com/emina/rosette/tree/master")))))))
 ("rosette-extras"
  .
  #hasheq((author . "sam@lenary.co.uk")
          (authors . ("sam@lenary.co.uk"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/rosette-extras.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/rosette-extras.txt")))
          (checksum . "66f45e9cddd8ac3e2c9b182e38a71dd49c8ef089")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "rosette" "rackunit-lib"))
          (dependency-names . ("base" "rosette" "rackunit-lib"))
          (description . "A few extra utilities for Rosette")
          (implies . ())
          (last-checked . 1557339767)
          (last-edit . 1527791068)
          (last-updated . 1527791068)
          (modules
           .
           ((lib "rosette-extras/main.rkt")
            (lib "rosette-extras/synthax.rkt")))
          (name . "rosette-extras")
          (nix-sha256
           .
           "0ar4qygf73rd3fifjsr1d1mirrakppymsv7aqsa45w40h6rnwqih")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:sam@lenary.co.uk . #t)
                   (ring:2 . #t)
                   (rosette . #t)))
          (source . "https://github.com/lenary/rosette-extras.git")
          (tags . ("rosette"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "66f45e9cddd8ac3e2c9b182e38a71dd49c8ef089")
                          (source
                           .
                           "https://github.com/lenary/rosette-extras.git")
                          (source_url
                           .
                           "https://github.com/lenary/rosette-extras.git")))))))
 ("routy"
  .
  #hasheq((author . "dk-junker@ya.ru")
          (authors . ("dk-junker@ya.ru"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "routy" "doc/routy@routy/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/routy.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/routy.txt")))
          (checksum . "cbe23310020968bf78389fb538a4091549f41b06")
          (checksum-error . #f)
          (conflicts . ())
          (date-added . 1552813635)
          (dependencies
           .
           ("base"
            "web-server-lib"
            "rackunit-lib"
            "racket-route-match"
            "response-ext"
            "scribble-lib"
            "racket-doc"
            "rackunit-lib"
            "web-server-doc"))
          (dependency-names
           .
           ("base"
            "web-server-lib"
            "rackunit-lib"
            "racket-route-match"
            "response-ext"
            "scribble-lib"
            "racket-doc"
            "rackunit-lib"
            "web-server-doc"))
          (description
           .
           "Routy is a lightweight high performance HTTP request router for Racket.  ")
          (implies . ())
          (last-checked . 1557339767)
          (last-edit . 1552813635)
          (last-updated . 1553245607)
          (modules
           .
           ((lib "routy/test.rkt")
            (lib "routy/scribblings/routy.scrbl")
            (lib "routy/main.rkt")))
          (name . "routy")
          (nix-sha256
           .
           "0idg1wghs8ikmjdsa0f249h3k48nwrjk50vkxm40j4mx6cxi1119")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:dk-junker@ya.ru . #t)
                   (framework . #t)
                   (http . #t)
                   (ring:2 . #t)
                   (router . #t)
                   (web . #t)))
          (source . "https://github.com/Junker/routy.git")
          (tags . ("framework" "http" "router" "web"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "cbe23310020968bf78389fb538a4091549f41b06")
                          (source . "https://github.com/Junker/routy.git")
                          (source_url
                           .
                           "https://github.com/Junker/routy.git")))))))
 ("rsa"
  .
  #hasheq((author . "michael.g.bowe@gmail.com")
          (authors . ("michael.g.bowe@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . "server/built/deps/rsa.txt")
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/rsa.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/rsa.txt")))
          (checksum . "0498189663e984d849ef4f2109cfd32058b247e0")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ())
          (dependency-names . ())
          (description . "An rsa encryption library for racket")
          (implies . ())
          (last-checked . 1557339767)
          (last-edit . 1475156358)
          (last-updated . 1475156282)
          (modules . ((lib "rsa/rsa.rkt")))
          (name . "rsa")
          (nix-sha256
           .
           "0cd9d2nfhaz6c56kykl0d2lksf2qzvhsa87zqmacqlkf5y4w85q9")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-dep-fail: . #t)
                   (:build-success: . #t)
                   (:no-tag: . #t)
                   (author:michael.g.bowe@gmail.com . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/mgbowe1/racket-rsa")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "0498189663e984d849ef4f2109cfd32058b247e0")
                          (source . "git://github.com/mgbowe1/racket-rsa")
                          (source_url
                           .
                           "http://github.com/mgbowe1/racket-rsa/tree/master")))))))
 ("rsc3"
  .
  #hasheq((author
           .
           "mushk45@gmail.com mkhafate@calpoly.edu clements@racket-lang.org")
          (authors
           .
           ("mushk45@gmail.com"
            "mkhafate@calpoly.edu"
            "clements@racket-lang.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/rsc3.txt")
                 (test-failure-log . "server/built/test-fail/rsc3.txt")
                 (test-success-log . #f)))
          (checksum . "a25985dab29ad951893cd7afa6d86a9371315871")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "gui-lib"
            "r6rs-lib"
            "srfi-lib"
            "srfi-lite-lib"
            "rackunit-lib"))
          (dependency-names
           .
           ("base"
            "gui-lib"
            "r6rs-lib"
            "srfi-lib"
            "srfi-lite-lib"
            "rackunit-lib"))
          (description . "The rsc3 SuperCollider client ported to Racket")
          (implies . ())
          (last-checked . 1557339767)
          (last-edit . 1392515523)
          (last-updated . 1502816408)
          (modules
           .
           ((lib "oregano/routing.rkt")
            (lib "oregano/gui.rkt")
            (lib "oregano/examples/filters.rkt")
            (lib "rsc3/examples/bus-routing.rkt")
            (lib "rsc3/rsc3.scrbl")
            (lib "rhs/rhs.rkt")
            (lib "oregano/main.rkt")
            (lib "oregano/examples/gui-example.rkt")
            (lib "oregano/instrument.rkt")
            (lib "sosc/ip.rkt")
            (lib "rsc3/examples/rsc3-sine-play.rkt")
            (lib "sosc/transport.rkt")
            (lib "rsc3/main.rkt")
            (lib "rsc3/tests/regression-tests.rkt")
            (lib "rsc3/examples/ring3.rkt")
            (lib "oregano/sample.rkt")
            (lib "sosc/sosc.rkt")
            (lib "oregano/examples/instrument-example.rkt")
            (lib "rsc3/examples/moog-filter.rkt")
            (lib "sosc/bytevector.rkt")
            (lib "oregano/system.rkt")))
          (name . "rsc3")
          (nix-sha256
           .
           "0lyj710x7777liljyqyvcac7n95vwan35qpdh9806g8hwmiwq5h1")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (SuperCollider . #t)
                   (audio . #t)
                   (author:clements@racket-lang.org . #t)
                   (author:mkhafate@calpoly.edu . #t)
                   (author:mushk45@gmail.com . #t)
                   (music . #t)
                   (osc . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/quakehead/rsc3")
          (tags . ("audio" "music" "osc" "SuperCollider"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "a25985dab29ad951893cd7afa6d86a9371315871")
                          (source . "git://github.com/quakehead/rsc3")
                          (source_url
                           .
                           "http://github.com/quakehead/rsc3/tree/master")))))))
 ("rsound"
  .
  #hasheq((author . "clements@racket-lang.org")
          (authors . ("clements@racket-lang.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "rsound" "doc/rsound@rsound/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/rsound.txt")
                 (test-failure-log . "server/built/test-fail/rsound.txt")
                 (test-success-log . #f)))
          (checksum . "f21ce268bca7aabbebc70f9fb10703351cbcf02b")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           (("portaudio" "0.1")
            "base"
            "data-lib"
            "gui-lib"
            "htdp-lib"
            "math-lib"
            "plot-lib"
            "plot-gui-lib"
            "rackunit-lib"
            "typed-racket-lib"
            "drracket-plugin-lib"
            "memoize"
            "pict-lib"
            "wxme-lib"
            "snip-lib"
            "scribble-lib"
            "racket-doc"
            "wxme-lib"))
          (dependency-names
           .
           ("portaudio"
            "base"
            "data-lib"
            "gui-lib"
            "htdp-lib"
            "math-lib"
            "plot-lib"
            "plot-gui-lib"
            "rackunit-lib"
            "typed-racket-lib"
            "drracket-plugin-lib"
            "memoize"
            "pict-lib"
            "wxme-lib"
            "snip-lib"
            "scribble-lib"
            "racket-doc"
            "wxme-lib"))
          (description
           .
           "A framework for manipulating and playing sounds using the portaudio library. Runs on Windows, Mac OS X, and linux.")
          (implies . ())
          (last-checked . 1557339767)
          (last-edit . 1384111813)
          (last-updated . 1509685375)
          (modules
           .
           ((lib "rsound/test/manual-test-latency.rkt")
            (lib "rsound/test/check-recording.rkt")
            (lib "rsound/rsound-snip.rkt")
            (lib "rsound/examples/gogo.rkt")
            (lib "rsound/test/test-sequencer.rkt")
            (lib "rsound/main.rkt")
            (lib "rsound/examples/bach-notes.rkt")
            (lib "rsound/contrib/crush.rkt")
            (lib "rsound/examples/katy-sliders.rkt")
            (lib "rsound/test/test-read-wav.rkt")
            (lib "rsound/contrib/drum-machine.rkt")
            (lib "rsound/test/manual-draw-test.rkt")
            (lib "rsound/test/manual-play-stream-latency-test.rkt")
            (lib "rsound/test/check-math-fft-speed.rkt")
            (lib "rsound/test/test-filter.rkt")
            (lib "rsound/test/manual-stream-play-test.rkt")
            (lib "rsound/looper.rkt")
            (lib "rsound/contrib/cs4hs-lab.scrbl")
            (lib "rsound/private/s16vector-add.rkt")
            (lib "rsound/test/test-single-cycle.rkt")
            (lib "rsound/rsound-commander.rkt")
            (lib "rsound/test/plot-signal.rkt")
            (lib "rsound/test/test-fsound.rkt")
            (lib "rsound/contrib/bassdrum.rkt")
            (lib "rsound/test/test-envelope.rkt")
            (lib "rsound/sequencer.rkt")
            (lib "rsound/test/check-signal-speed.rkt")
            (lib "rsound/common.rkt")
            (lib "rsound/examples/test-audio-filtering.rkt")
            (lib "rsound/test/check-resample-speed.rkt")
            (lib "rsound/contrib/cs4hs-lib.rkt")
            (lib "rsound/wavetable.rkt")
            (lib "rsound/reverb.rkt")
            (lib "rsound/test/test-write-wav.rkt")
            (lib "rsound/draw.rkt")
            (lib "rsound/util.rkt")
            (lib "rsound/drum-samples.rkt")
            (lib "rsound/signals.scrbl")
            (lib "rsound/test/interactive-drr-frequency-response.rkt")
            (lib "rsound/examples/harmonic-overlay.rkt")
            (lib "rsound/examples/random-tone-example.rkt")
            (lib "rsound/examples/markov-model.rkt")
            (lib "rsound/wxme-rsound-snip.rkt")
            (lib "rsound/test/test-rsound-commander.rkt")
            (lib "rsound/paste-util.rkt")
            (lib "rsound/filter-typed.rkt")
            (lib "rsound/envelope.rkt")
            (lib "rsound/examples/quantize-looper.rkt")
            (lib "rsound/test/test-util.rkt")
            (lib "rsound/write-wav.rkt")
            (lib "rsound/rsound.rkt")
            (lib "rsound/test/manual-playing-test.rkt")
            (lib "rsound/single-cycle.rkt")
            (lib "rsound/contrib/cs4hs-lab.rkt")
            (lib "rsound/rsound.scrbl")
            (lib "rsound/define-argcheck.rkt")
            (lib "rsound/examples/sequencer-playing-example.rkt")
            (lib "rsound/examples/sub-sampling.rkt")
            (lib "rsound/diagnose.rkt")
            (lib "rsound/prefs.rkt")
            (lib "rsound/contrib/adventure-kid-waveforms.rkt")
            (lib "rsound/examples/piano-samples.rkt")
            (lib "rsound/test/manual-playing-signal-block-test.rkt")
            (lib "rsound/tool.rkt")
            (lib "rsound/test/test-paste-util.rkt")
            (lib "rsound/test/test-network.rkt")
            (lib "rsound/read-wav.rkt")
            (lib "rsound/test/test-rsound.rkt")
            (lib "rsound/test/test-make-tone.rkt")
            (lib "rsound/test/manual-test-big-draw.rkt")
            (lib "rsound/stream-play.rkt")
            (lib "rsound/test/check-timing.rkt")
            (lib "rsound/test/test-s16vector-add.rkt")
            (lib "rsound/integral-cycles.rkt")
            (lib "rsound/piano-tones.rkt")
            (lib "rsound/fsound.rkt")
            (lib "rsound/test/check-c-lib-speedup.rkt")
            (lib "rsound/test/manual-test-fft.rkt")
            (lib "rsound/frequency-response.rkt")
            (lib "rsound/network.rkt")
            (lib "rsound/filter.rkt")
            (lib "rsound/test/test-reverb.rkt")))
          (name . "rsound")
          (nix-sha256
           .
           "1rfq40h4al5qaj9pggbrf1aiqyx8943kn1q0h1rmsc9dnhxxxaj7")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (audio . #t)
                   (author:clements@racket-lang.org . #t)
                   (ffi . #t)
                   (io . #t)
                   (ring:1 . #t)))
          (source . "github://github.com/jbclements/RSound/master/")
          (tags . ("audio" "ffi" "io"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "f21ce268bca7aabbebc70f9fb10703351cbcf02b")
                          (source
                           .
                           "github://github.com/jbclements/RSound/master/")
                          (source_url
                           .
                           "http://github.com/jbclements/RSound/tree/master/")))
                 ("5.3.2"
                  .
                  #hasheq((checksum
                           .
                           "39580725993288d4f8495fd988f3d99e8db60613")
                          (source
                           .
                           "github://github.com/jbclements/RSound/pre-6/")
                          (source_url
                           .
                           "http://github.com/jbclements/RSound/tree/pre-6/")))
                 ("5.3.3"
                  .
                  #hasheq((checksum
                           .
                           "39580725993288d4f8495fd988f3d99e8db60613")
                          (source
                           .
                           "github://github.com/jbclements/RSound/pre-6/")
                          (source_url
                           .
                           "http://github.com/jbclements/RSound/tree/pre-6/")))
                 ("5.3.4"
                  .
                  #hasheq((checksum
                           .
                           "39580725993288d4f8495fd988f3d99e8db60613")
                          (source
                           .
                           "github://github.com/jbclements/RSound/pre-6/")
                          (source_url
                           .
                           "http://github.com/jbclements/RSound/tree/pre-6/")))
                 ("5.3.5"
                  .
                  #hasheq((checksum
                           .
                           "39580725993288d4f8495fd988f3d99e8db60613")
                          (source
                           .
                           "github://github.com/jbclements/RSound/pre-6/")
                          (source_url
                           .
                           "http://github.com/jbclements/RSound/tree/pre-6/")))
                 ("5.3.6"
                  .
                  #hasheq((checksum
                           .
                           "39580725993288d4f8495fd988f3d99e8db60613")
                          (source
                           .
                           "github://github.com/jbclements/RSound/pre-6/")
                          (source_url
                           .
                           "http://github.com/jbclements/RSound/tree/pre-6/")))
                 ("5.92"
                  .
                  #hasheq((checksum
                           .
                           "39580725993288d4f8495fd988f3d99e8db60613")
                          (source
                           .
                           "github://github.com/jbclements/RSound/pre-6/")
                          (source_url
                           .
                           "http://github.com/jbclements/RSound/tree/pre-6/")))
                 ("5.93"
                  .
                  #hasheq((checksum
                           .
                           "39580725993288d4f8495fd988f3d99e8db60613")
                          (source
                           .
                           "github://github.com/jbclements/RSound/pre-6/")
                          (source_url
                           .
                           "http://github.com/jbclements/RSound/tree/pre-6/")))))))
 ("rsvg"
  .
  #hasheq((author . "asumu@ccs.neu.edu")
          (authors . ("asumu@ccs.neu.edu"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "rsvg" "doc/rsvg@rsvg/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/rsvg.txt")
                 (test-failure-log . "server/built/test-fail/rsvg.txt")
                 (test-success-log . #f)))
          (checksum . "c326fe15679086b471fa529befa6b4241883271f")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "draw-lib"
            "gui-lib"
            "pict-lib"
            "pict-doc"
            "scribble-lib"
            "rackunit-lib"
            "scribble-lib"
            "pict-lib"
            "draw-doc"
            "racket-doc"
            "slideshow-doc"))
          (dependency-names
           .
           ("base"
            "draw-lib"
            "gui-lib"
            "pict-lib"
            "pict-doc"
            "scribble-lib"
            "rackunit-lib"
            "scribble-lib"
            "pict-lib"
            "draw-doc"
            "racket-doc"
            "slideshow-doc"))
          (description
           .
           "FFI bindings to libRSVG, a library for loading SVG documents")
          (implies . ())
          (last-checked . 1557339767)
          (last-edit . 1369787451)
          (last-updated . 1502816414)
          (modules
           .
           ((lib "rsvg/tests/tests.rkt")
            (lib "rsvg/rsvg.scrbl")
            (lib "rsvg/main.rkt")
            (lib "rsvg/rsvg.rkt")))
          (name . "rsvg")
          (nix-sha256
           .
           "1yfl4rvmdikla2sygvg2jqjj51c8g8bcy66bls03jqhss17zd013")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:asumu@ccs.neu.edu . #t)
                   (graphics . #t)
                   (ring:1 . #t)
                   (svg . #t)))
          (source . "github://github.com/takikawa/racket-rsvg/master")
          (tags . ("graphics" "svg"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "c326fe15679086b471fa529befa6b4241883271f")
                          (source
                           .
                           "github://github.com/takikawa/racket-rsvg/master")
                          (source_url
                           .
                           "http://github.com/takikawa/racket-rsvg/tree/master")))))))
 ("rtmidi"
  .
  #hasheq((author . "clements@racket-lang.org m4burns@uwaterloo.ca")
          (authors . ("clements@racket-lang.org" "m4burns@uwaterloo.ca"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "rtmidi" "doc/rtmidi@rtmidi/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/rtmidi.txt")
                 (test-failure-log . "server/built/test-fail/rtmidi.txt")
                 (test-success-log . #f)))
          (checksum . "61c9f0892f9ce1fab46ea96b984e37f3632b6498")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "scribble-lib" "racket-doc"))
          (dependency-names . ("base" "scribble-lib" "racket-doc"))
          (description
           .
           "RtMidi provides racket bindings for the RtMidi library, thus enabling racket programs to send and receive MIDI events.")
          (implies . ())
          (last-checked . 1557339768)
          (last-edit . 1415741132)
          (last-updated . 1502816414)
          (modules
           .
           ((lib "rtmidi/main.rkt")
            (lib "rtmidi/rtmidi.scrbl")
            (lib "rtmidi/rtmidi-example.rkt")))
          (name . "rtmidi")
          (nix-sha256
           .
           "1r2a5l0f8rzk8qjymjjblq82vmzp1fc6q76r4qirayr0i5qxnngn")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (audio . #t)
                   (author:clements@racket-lang.org . #t)
                   (author:m4burns@uwaterloo.ca . #t)
                   (io . #t)
                   (midi . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/jbclements/rtmidi")
          (tags . ("audio" "io" "midi"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "61c9f0892f9ce1fab46ea96b984e37f3632b6498")
                          (source . "git://github.com/jbclements/rtmidi")
                          (source_url
                           .
                           "http://github.com/jbclements/rtmidi/tree/master")))))))
 ("rtnl"
  .
  #hasheq((author . "mordae@anilinux.org")
          (authors . ("mordae@anilinux.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/rtnl.txt")
                 (test-failure-log . "server/built/test-fail/rtnl.txt")
                 (test-success-log . #f)))
          (checksum . "53cf9eb3d1927cd4357ebdf785ffb58cacff6c3e")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "scribble-lib" "misc1"))
          (dependency-names . ("base" "scribble-lib" "misc1"))
          (description . "Racket FFI Bindings for the Route-Netlink Library")
          (implies . ())
          (last-checked . 1557339768)
          (last-edit . 1370358707)
          (last-updated . 1502816414)
          (modules . ((lib "rtnl/main.rkt")))
          (name . "rtnl")
          (nix-sha256
           .
           "183x992v809imi7k24kz3b1a5mgn65l91b35vxsq366rgx6mfpn0")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:mordae@anilinux.org . #t)
                   (ffi . #t)
                   (linux . #t)
                   (ring:1 . #t)))
          (source . "github://github.com/mordae/racket-rtnl/master")
          (tags . ("ffi" "linux"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "53cf9eb3d1927cd4357ebdf785ffb58cacff6c3e")
                          (source
                           .
                           "github://github.com/mordae/racket-rtnl/master")
                          (source_url
                           .
                           "http://github.com/mordae/racket-rtnl/tree/master")))))))
 ("ruckus"
  .
  #hasheq((author . "code@cliffle.com")
          (authors . ("code@cliffle.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "ruckus" "doc/ruckus@ruckus/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/ruckus.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/ruckus.txt")))
          (checksum . "62cd4a00837783a88a007c2d5979909a4e86ca0f")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "gui-lib" "math-lib" "opengl" "racket-doc"))
          (dependency-names
           .
           ("base" "gui-lib" "math-lib" "opengl" "racket-doc"))
          (description . "Procedural CAD system for solid modeling")
          (implies . ())
          (last-checked . 1557339768)
          (last-edit . 1454611218)
          (last-updated . 1502816414)
          (modules
           .
           ((lib "ruckus/viz/shaderdump.rkt")
            (lib "ruckus/viz/view2d.rkt")
            (lib "ruckus/lang/colors.rkt")
            (lib "ruckus/lang/rktdump.rkt")
            (lib "ruckus/viz/two-viewer.rkt")
            (lib "ruckus/ex/multi/part-b.rkt")
            (lib "ruckus/viz/spheretrace-viewer.rkt")
            (lib "ruckus/lang/irdump.rkt")
            (lib "ruckus/ex/multi/top.rkt")
            (lib "ruckus/lang/mlang.rkt")
            (lib "ruckus/ex/two-d.rkt")
            (lib "ruckus/viz/glsl.rkt")
            (lib "ruckus/ex/reflect-distance.rkt")
            (lib "ruckus/out/outline.rkt")
            (lib "ruckus/lang/interpolation.rkt")
            (lib "ruckus/lang/state.rkt")
            (lib "ruckus/main.rkt")
            (lib "ruckus/doc/utils.rkt")
            (lib "ruckus/out/descent3.rkt")
            (lib "ruckus/viz/view3d.rkt")
            (lib "ruckus/out/marching-foo.rkt")
            (lib "ruckus/lang/evaluator.rkt")
            (lib "ruckus/ex/holography.rkt")
            (lib "ruckus/doc/internals/compiler.scrbl")
            (lib "ruckus/doc/internals.scrbl")
            (lib "ruckus/ex/interpolation-surface.rkt")
            (lib "ruckus/ex/multi/part-a.rkt")
            (lib "ruckus/ex/test.rkt")
            (lib "ruckus/out/marching-tets.rkt")
            (lib "ruckus/core/compiler/canon.rkt")
            (lib "ruckus/viz/viewer.rkt")
            (lib "ruckus/doc/basics.scrbl")
            (lib "ruckus/out/marching-squares.rkt")
            (lib "ruckus/ex/radial-repeat.rkt")
            (lib "ruckus/ex/capsule.rkt")
            (lib "ruckus/lang/loader.rkt")
            (lib "ruckus/doc/tools.scrbl")
            (lib "ruckus/doc/prereq.scrbl")
            (lib "ruckus/doc/internals/math.scrbl")
            (lib "ruckus/out/marching-cubes.rkt")
            (lib "ruckus/lang/edsl.rkt")
            (lib "ruckus/core/df-prims.rkt")
            (lib "ruckus/core/lazy-require.rkt")
            (lib "ruckus/core/math.rkt")
            (lib "ruckus/core/compiler/racket.rkt")
            (lib "ruckus/lang/reader.rkt")
            (lib "ruckus/ex/box.rkt")
            (lib "ruckus/core/compiler/lower.rkt")
            (lib "ruckus/core/compiler/enumerate.rkt")
            (lib "ruckus/core/model.rkt")
            (lib "ruckus/doc/ruckus.scrbl")
            (lib "ruckus/out/binary-stl.rkt")
            (lib "ruckus/doc/whirlwind.scrbl")
            (lib "ruckus/out/surface.rkt")
            (lib "ruckus/lang/astdump.rkt")))
          (name . "ruckus")
          (nix-sha256
           .
           "1zrxznyalfmhykmj1203pn56i804101c7jgwia0nbzddwwmii7na")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:code@cliffle.com . #t)
                   (cad . #t)
                   (graphics . #t)
                   (ring:1 . #t)
                   (scientific . #t)))
          (source . "git://github.com/cbiffle/ruckus")
          (tags . ("cad" "graphics" "scientific"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "62cd4a00837783a88a007c2d5979909a4e86ca0f")
                          (source . "git://github.com/cbiffle/ruckus")
                          (source_url
                           .
                           "http://github.com/cbiffle/ruckus/tree/master")))))))
 ("ruinit"
  .
  #hasheq((author
           .
           "lukas.lazarek@eecs.northwestern.edu lukasalazarek@gmail.com")
          (authors
           .
           ("lukas.lazarek@eecs.northwestern.edu" "lukasalazarek@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/ruinit.txt")
                 (test-failure-log . "server/built/test-fail/ruinit.txt")
                 (test-success-log . #f)))
          (checksum . "7d90e8003c4e548efacbac1761e0151ebb5b648e")
          (checksum-error . #f)
          (conflicts . ())
          (date-added . 1554313706)
          (dependencies . ("base" "rackunit" "racket-doc" "scribble-lib"))
          (dependency-names . ("base" "rackunit" "racket-doc" "scribble-lib"))
          (description . "A small unit testing framework.")
          (implies . ())
          (last-checked . 1557339768)
          (last-edit . 1554314732)
          (last-updated . 1555891615)
          (modules
           .
           ((lib "scribblings/ruinit/ruinit-doc.scrbl")
            (lib "ruinit/ruinit-tests.rkt")
            (lib "ruinit/diff/diff.rkt")
            (lib "ruinit/ruinit.rkt")
            (lib "ruinit/ruinit-result-combinators.rkt")
            (lib "ruinit/main.rkt")))
          (name . "ruinit")
          (nix-sha256
           .
           "0ff4ikj0y6g9wwx0g3zs0yx8b63b0ixzaarv2mggxqg73f6dw4bn")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:lukas.lazarek@eecs.northwestern.edu . #t)
                   (author:lukasalazarek@gmail.com . #t)
                   (ring:2 . #t)
                   (testing . #t)))
          (source . "https://github.com/LLazarek/ruinit.git")
          (tags . ("testing"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "7d90e8003c4e548efacbac1761e0151ebb5b648e")
                          (source . "https://github.com/LLazarek/ruinit.git")
                          (source_url
                           .
                           "https://github.com/LLazarek/ruinit.git")))))))
 ("russian"
  .
  #hasheq((author . "kalimehtar@mail.ru")
          (authors . ("kalimehtar@mail.ru"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "russian" "doc/russian@russian/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/russian.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/russian.txt")))
          (checksum . "b38cc823a386d9368f7d80690e106358fbe347b9")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "srfi-lite-lib"
            "scribble-lib"
            "racket-doc"
            "rackunit-lib"))
          (dependency-names
           .
           ("base"
            "srfi-lite-lib"
            "scribble-lib"
            "racket-doc"
            "rackunit-lib"))
          (description . "Russian internationalization bits")
          (implies . ())
          (last-checked . 1557339768)
          (last-edit . 1525272344)
          (last-updated . 1556510521)
          (modules
           .
           ((lib "russian/scribblings/russian.scrbl")
            (lib "russian/date.rkt")))
          (name . "russian")
          (nix-sha256
           .
           "1rhshfjgmyg0myr780rr47zy74akg75yg9xwivhck556h9j8gxgc")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:kalimehtar@mail.ru . #t)
                   (internationalization . #t)
                   (ring:2 . #t)))
          (source . "https://github.com/Kalimehtar/russian.git")
          (tags . ("internationalization"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "b38cc823a386d9368f7d80690e106358fbe347b9")
                          (source
                           .
                           "https://github.com/Kalimehtar/russian.git")
                          (source_url
                           .
                           "https://github.com/Kalimehtar/russian.git")))))))
 ("rwind"
  .
  #hasheq((author . "laurent.orseau@gmail.com")
          (authors . ("laurent.orseau@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/rwind.txt")
                 (test-failure-log . "server/built/test-fail/rwind.txt")
                 (test-success-log . #f)))
          (checksum . "865e872cef7edf2a317ae063784d1c971404b06c")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("x11"
            "base"
            "rackunit-lib"
            "slideshow-lib"
            "readline-lib"
            "gui-lib"))
          (dependency-names
           .
           ("x11"
            "base"
            "rackunit-lib"
            "slideshow-lib"
            "readline-lib"
            "gui-lib"))
          (description
           .
           "An X11 window manager written in Racket (still in early stage)")
          (implies . ())
          (last-checked . 1557339768)
          (last-edit . 1383853326)
          (last-updated . 1516442402)
          (modules
           .
           ((lib "rwind/keymap.rkt")
            (lib "rwind/user.rkt")
            (lib "rwind/util.rkt")
            (lib "rwind/configure.rkt")
            (lib "rwind/rwind.rkt")
            (lib "rwind/policy/simple.rkt")
            (lib "rwind/workspace.rkt")
            (lib "rwind/policy/base.rkt")
            (lib "rwind/events.rkt")
            (lib "rwind/server-sync.rkt")
            (lib "rwind/policy/tiling.rkt")
            (lib "rwind/base.rkt")
            (lib "rwind/client2.rkt")
            (lib "rwind/client.rkt")
            (lib "rwind/window.rkt")
            (lib "rwind/main.rkt")
            (lib "rwind/display.rkt")
            (lib "rwind/doc-string.rkt")
            (lib "rwind/server.rkt")
            (lib "rwind/launcher.rkt")
            (lib "rwind/private/try-layout.rkt")
            (lib "rwind/color.rkt")
            (lib "rwind/launcher-base.rkt")
            (lib "rwind/user-files/config-simple.rkt")))
          (name . "rwind")
          (nix-sha256
           .
           "1y418jlnjllx311706fj61y2f73hiiv3lv4vyb6nj9w9fwdmldan")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (app . #t)
                   (author:laurent.orseau@gmail.com . #t)
                   (ring:1 . #t)
                   (unix . #t)))
          (source . "github://github.com/Metaxal/rwind/master")
          (tags . ("app" "unix"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "865e872cef7edf2a317ae063784d1c971404b06c")
                          (source
                           .
                           "github://github.com/Metaxal/rwind/master")
                          (source_url
                           .
                           "http://github.com/Metaxal/rwind/tree/master")))))))
 ("rws-html-template"
  .
  #hasheq((author . "neil@neilvandyke.org")
          (authors . ("neil@neilvandyke.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "rws-html-template"
                    "doc/rws-html-template@rws-html-template/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/rws-html-template.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/rws-html-template.txt")))
          (checksum . "18af61049ea3adf14472753ccc6ba0602563ff61")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "racket-doc"
            "scribble-lib"
            "web-server-lib"
            "web-server-doc"
            "mcfly"
            "html-template"))
          (dependency-names
           .
           ("base"
            "racket-doc"
            "scribble-lib"
            "web-server-lib"
            "web-server-doc"
            "mcfly"
            "html-template"))
          (description . "Racket Web Server html-template Support")
          (implies . ())
          (last-checked . 1557339768)
          (last-edit . 1456463485)
          (last-updated . 1502816415)
          (modules
           .
           ((lib "rws-html-template/rws-html-template.scrbl")
            (lib "rws-html-template/main.rkt")))
          (name . "rws-html-template")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:neil@neilvandyke.org . #t)
                   (html . #t)
                   (ring:1 . #t)
                   (sxml . #t)
                   (web . #t)))
          (source . "http://www.neilvandyke.org/racket/rws-html-template.zip")
          (tags . ("html" "sxml" "web"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "18af61049ea3adf14472753ccc6ba0602563ff61")
                          (source
                           .
                           "http://www.neilvandyke.org/racket/rws-html-template.zip")
                          (source_url
                           .
                           "http://www.neilvandyke.org/racket/rws-html-template.zip")))))))
 ("rx"
  .
  #hasheq((author . "vervaeck.sam@skynet.be")
          (authors . ("vervaeck.sam@skynet.be"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . "server/built/deps/rx.txt")
                 (docs . (("main" "rx" "doc/rx@rx/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/rx.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/rx.txt")))
          (checksum . "562392ae225e112d153860c8aa5555418cf123b7")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("racket-doc" "gui-doc" "scribble-lib"))
          (dependency-names . ("racket-doc" "gui-doc" "scribble-lib"))
          (description
           .
           "A set of tools and utilities for reactive programming")
          (implies . ())
          (last-checked . 1557339769)
          (last-edit . 1488525318)
          (last-updated . 1502816415)
          (modules
           .
           ((lib "rx/main.rkt")
            (lib "rx/gui.rkt")
            (lib "rx/event-stream.rkt")
            (lib "rx/scribblings/rx.scrbl")
            (lib "rx/event.rkt")
            (lib "rx/cell.rkt")
            (lib "rx/event-emitter.rkt")))
          (name . "rx")
          (nix-sha256
           .
           "13zblsd236sd2b8h3yvzkkpg413s4j63sispbhi3fqcgsxymjndz")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-dep-fail: . #t)
                   (:build-success: . #t)
                   (:docs: . #t)
                   (author:vervaeck.sam@skynet.be . #t)
                   (ring:1 . #t)
                   (rx . #t)
                   (tools . #t)))
          (source . "git://github.com/samvv/racket-rx")
          (tags . ("rx" "tools"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "562392ae225e112d153860c8aa5555418cf123b7")
                          (source . "git://github.com/samvv/racket-rx")
                          (source_url
                           .
                           "http://github.com/samvv/racket-rx/tree/master")))))))
 ("s-lib"
  .
  #hasheq((author . "vlad.piersec@gmail.com")
          (authors . ("vlad.piersec@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/s-lib.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/s-lib.txt")))
          (checksum . "de6ae621d8ffd670fede37f51212c8cb5a84bcf3")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "rackunit"))
          (dependency-names . ("base" "rackunit"))
          (description
           .
           "A collection of functions for string & word manipulation")
          (implies . ())
          (last-checked . 1557339769)
          (last-edit . 1401213158)
          (last-updated . 1502816416)
          (modules . ((lib "s-lib/main.rkt")))
          (name . "s-lib")
          (nix-sha256
           .
           "09n0s2g708pdz11wajiz8l5fkcp16r00wrb5nr37k80zfgf579d7")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:vlad.piersec@gmail.com . #t)
                   (ring:1 . #t)
                   (strings . #t)
                   (words . #t)))
          (source . "git://github.com/caisah/s-lib")
          (tags . ("strings" "words"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "de6ae621d8ffd670fede37f51212c8cb5a84bcf3")
                          (source . "git://github.com/caisah/s-lib")
                          (source_url
                           .
                           "http://github.com/caisah/s-lib/tree/master")))))))
 ("s3-sync"
  .
  #hasheq((author . "mflatt@cs.utah.edu")
          (authors . ("mflatt@cs.utah.edu"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "s3-sync" "doc/s3-sync@s3-sync/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/s3-sync.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/s3-sync.txt")))
          (checksum . "f47a76fc116d14088604aab70fb60b370315147b")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           (("aws" #:version "1.8")
            ("http" #:version "0.2")
            ("base" #:version "6.0.0.4")
            "scribble-lib"
            "racket-doc"
            "rackunit-lib"))
          (dependency-names
           .
           ("aws" "http" "base" "scribble-lib" "racket-doc" "rackunit-lib"))
          (description . "Sync filesystem with an S3 bucket")
          (implies . ())
          (last-checked . 1557339769)
          (last-edit . 1394587384)
          (last-updated . 1502816416)
          (modules
           .
           ((lib "s3-sync/routing-rule.rkt")
            (lib "s3-sync/s3-sync.scrbl")
            (lib "s3-sync/main.rkt")
            (lib "s3-sync/tests/main.rkt")
            (lib "s3-sync/web-config.rkt")
            (lib "s3-sync/web.rkt")
            (lib "s3-sync/gzip.rkt")))
          (name . "s3-sync")
          (nix-sha256
           .
           "0szjgvyhdqiy4230vysngprvl1qmrwmsm7asqssxdf85gdpml4hx")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (AWS . #t)
                   (author:mflatt@cs.utah.edu . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/mflatt/s3-sync")
          (tags . ("AWS"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "f47a76fc116d14088604aab70fb60b370315147b")
                          (source . "git://github.com/mflatt/s3-sync")
                          (source_url
                           .
                           "http://github.com/mflatt/s3-sync/tree/master")))))))
 ("sandbox-lib"
  .
  #hash((author . "eli@racket-lang.org")
        (checksum . "5e1ec0d9c2ca9303463b6fdb275715ca18bbc532")
        (dependencies . ("scheme-lib" "base" "errortrace-lib"))
        (dependency-names . ("scheme-lib" "base" "errortrace-lib"))
        (description . "eli@racket-lang.org")
        (modules . ())
        (name . "sandbox-lib")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/sandbox-lib.zip")
        (tags . ())))
 ("sasl"
  .
  #hash((author . "ryanc@racket-lang.org")
        (checksum . "9dc01d162929f57e0507d24cbb8c2620fa635c3f")
        (dependencies . ("sasl-lib" "sasl-doc" "base"))
        (dependency-names . ("sasl-lib" "sasl-doc" "base"))
        (description . "ryanc@racket-lang.org")
        (modules . ())
        (name . "sasl")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/sasl.zip")
        (tags . ())))
 ("sasl-doc"
  .
  #hash((author . "ryanc@racket-lang.org")
        (checksum . "9b9e5cf26fc22a6a1dfcebeec40f4642a542134e")
        (dependencies . ("base" "scribble-lib" "sasl-lib" "racket-doc"))
        (dependency-names . ("base" "scribble-lib" "sasl-lib" "racket-doc"))
        (description . "ryanc@racket-lang.org")
        (modules . ())
        (name . "sasl-doc")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/sasl-doc.zip")
        (tags . ())))
 ("sasl-lib"
  .
  #hash((author . "ryanc@racket-lang.org")
        (checksum . "838eeef99f15c6e842f49d8b0a355b3bc619ce37")
        (dependencies . (("base" #:version "6.10")))
        (dependency-names . ("base"))
        (description . "ryanc@racket-lang.org")
        (modules . ())
        (name . "sasl-lib")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/sasl-lib.zip")
        (tags . ())))
 ("sasl-test"
  .
  #hash((author . "ryanc@racket-lang.org")
        (checksum . "f1c0cd4030fbb63bab9871be7ff53e5e5019ba6a")
        (dependencies . ("base" "sasl-lib" "rackunit-lib"))
        (dependency-names . ("base" "sasl-lib" "rackunit-lib"))
        (description . "ryanc@racket-lang.org")
        (modules . ())
        (name . "sasl-test")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/sasl-test.zip")
        (tags . ())))
 ("sau-cptr-405"
  .
  #hasheq((author . "rordonez@southern.edu")
          (authors . ("rordonez@southern.edu"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "sau-cptr-405"
                    "doc/sau-cptr-405@sau-cptr-405/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/sau-cptr-405.txt")
                 (test-failure-log
                  .
                  "server/built/test-fail/sau-cptr-405.txt")
                 (test-success-log . #f)))
          (checksum . "95fe87935c02790dce8d3ef2c30b117f98685fe7")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "compatibility-lib"
            "drracket"
            "drracket-plugin-lib"
            "gui-lib"
            "htdp-lib"
            "net-lib"
            "pconvert-lib"
            "sandbox-lib"
            "rackunit-lib"
            "web-server-lib"
            "plai-typed"
            "plai-typed-s-exp-match"
            "gui-doc"
            "racket-doc"
            "scribble-lib"))
          (dependency-names
           .
           ("base"
            "compatibility-lib"
            "drracket"
            "drracket-plugin-lib"
            "gui-lib"
            "htdp-lib"
            "net-lib"
            "pconvert-lib"
            "sandbox-lib"
            "rackunit-lib"
            "web-server-lib"
            "plai-typed"
            "plai-typed-s-exp-match"
            "gui-doc"
            "racket-doc"
            "scribble-lib"))
          (description . "SAU CPTR-405 W18 handin plugin for DrRacket")
          (implies . ())
          (last-checked . 1557339770)
          (last-edit . 1517236569)
          (last-updated . 1517236569)
          (modules
           .
           ((lib "sau-cptr-405/client.rkt")
            (lib "sau-cptr-405/main.rkt")
            (lib "sau-cptr-405/scribblings/sau-cptr-405.scrbl")
            (lib "sau-cptr-405/this-collection.rkt")
            (lib "sau-cptr-405/handin-multi.rkt")
            (lib "sau-cptr-405/client-gui.rkt")
            (lib "sau-cptr-405/updater.rkt")))
          (name . "sau-cptr-405")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (:no-tag: . #t)
                   (author:rordonez@southern.edu . #t)
                   (ring:1 . #t)))
          (source
           .
           "http://computing.southern.edu/rordonez/class/CPTR-405/sau-cptr-405.zip")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "95fe87935c02790dce8d3ef2c30b117f98685fe7")
                          (source
                           .
                           "http://computing.southern.edu/rordonez/class/CPTR-405/sau-cptr-405.zip")
                          (source_url
                           .
                           "http://computing.southern.edu/rordonez/class/CPTR-405/sau-cptr-405.zip")))))))
 ("scgi"
  .
  #hasheq((author . "neil@neilvandyke.org")
          (authors . ("neil@neilvandyke.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "scgi" "doc/scgi@scgi/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/scgi.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/scgi.txt")))
          (checksum . "07cc9ba2713cb0d947931cdf1011a84d5ccfb4da")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "mcfly" "racket-doc" "scribble-lib"))
          (dependency-names . ("base" "mcfly" "racket-doc" "scribble-lib"))
          (description . "Web Server HTTP SCGI and CGI")
          (implies . ())
          (last-checked . 1557339772)
          (last-edit . 1456463446)
          (last-updated . 1502816418)
          (modules
           .
           ((lib "scgi/main.rkt")
            (lib "scgi/stress1-server.rkt")
            (lib "scgi/scgi.scrbl")
            (lib "scgi/sample-1.rkt")))
          (name . "scgi")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:neil@neilvandyke.org . #t)
                   (ring:1 . #t)
                   (web . #t)))
          (source . "http://www.neilvandyke.org/racket/scgi.zip")
          (tags . ("web"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "07cc9ba2713cb0d947931cdf1011a84d5ccfb4da")
                          (source
                           .
                           "http://www.neilvandyke.org/racket/scgi.zip")
                          (source_url
                           .
                           "http://www.neilvandyke.org/racket/scgi.zip")))))))
 ("schema"
  .
  #hasheq((author . "juzhenliang@gmail.com")
          (authors . ("juzhenliang@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "schema" "doc/schema@schema/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/schema.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/schema.txt")))
          (checksum . "c7ebb5a3402084c02c0cec4d4a96be6faa4102e0")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "w3s"
            "db-lib"
            "typed-racket-lib"
            "typed-racket-more"
            "scribble-lib"
            "racket-doc"))
          (dependency-names
           .
           ("base"
            "w3s"
            "db-lib"
            "typed-racket-lib"
            "typed-racket-more"
            "scribble-lib"
            "racket-doc"))
          (description . "A data modeling tool for Typed Racket")
          (implies . ())
          (last-checked . 1557339772)
          (last-edit . 1537113878)
          (last-updated . 1537700355)
          (modules
           .
           ((lib "schema/digitama/exchange/csv/reader/port.rkt")
            (lib "schema/tamer/csv/reader/unix.rkt")
            (lib
             "schema/tamer/csv/reader/performance/port-lines-counting.rkt")
            (lib "schema/digitama/syntax.rkt")
            (lib "schema/digitama/exchange/sql.rkt")
            (lib "schema/digitama/exchange/csv/reader/line.rkt")
            (lib "schema/tamer/uupk.rkt")
            (lib "schema/tamer/csv/reader/row.rkt")
            (lib "schema/digitama/exchange/csv/reader/string.rkt")
            (lib "schema/tamer/csv/reader/space.rkt")
            (lib "schema/digitama/message.rkt")
            (lib "schema/tamer/schema.scrbl")
            (lib "schema/digitama/exchange/csv/reader/progress.rkt")
            (lib "schema/message.rkt")
            (lib "schema/tamer/csv/reader/skip-header.rkt")
            (lib "schema/tamer/csv/reader/performance/sequence.rkt")
            (lib "schema/digitama/schema.rkt")
            (lib "schema/tamer/csv/reader/fixed-row.rkt")
            (lib "schema/tamer/csv/reader/csv.rkt")
            (lib "schema/digitama/exchange/csv/dialect.rkt")
            (lib "schema/tamer/csv/reader/performance/bytes/string.rkt")
            (lib "schema/digitama/exchange/base.rkt")
            (lib "schema/digitama/exchange/csv/reader/misc.rkt")
            (lib "schema/tamer/csv/reader/performance/list.rkt")
            (lib "schema/tamer/csv/reader/empty.rkt")
            (lib "schema/main.rkt")
            (lib "schema/digitama/virtual-sql.rkt")
            (lib "schema/csv.rkt")
            (lib "schema/uupk.rkt")
            (lib "schema/digitama/normalize.rkt")
            (lib "schema/tamer/normalize.rkt")
            (lib "schema/tamer/csv/reader/performance/string.rkt")
            (lib "schema/tamer/csv/reader/performance/bytes/port.rkt")
            (lib "schema/tamer/csv/reader/performance/progress.rkt")
            (lib "schema/digitama/shadow.rkt")
            (lib "schema/digitama/unsafe/query.rkt")
            (lib "schema/tamer/csv/reader/escape.rkt")
            (lib "schema/tamer/csv/reader/performance/vector.rkt")
            (lib "schema/digitama/exchange/xlsx/misc.rkt")
            (lib "schema/digitama/exchange/xlsx/package.rkt")
            (lib "schema/xlsx.rkt")
            (lib "schema/tamer/xlsx/StormEvents.rkt")
            (lib "schema/digitama/misc.rkt")
            (lib "schema/digitama/exchange/racket.rkt")
            (lib "schema/digitama/exchange/xlsx/consumer.rkt")
            (lib "schema/tamer/xlsx/xlsx.rkt")
            (lib "schema/tamer/sqlite3.rkt")
            (lib "schema/sqlite3.rkt")))
          (name . "schema")
          (nix-sha256
           .
           "1a4kvbd7zg9r7x536izlk96qsswdcr4lf1ghjbl9g15rgic8262c")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:juzhenliang@gmail.com . #t)
                   (csv . #t)
                   (database . #t)
                   (ring:1 . #t)
                   (schema . #t)
                   (sqlite3 . #t)
                   (typed-racket . #t)
                   (unstable . #t)
                   (xlsx . #t)))
          (source . "https://github.com/wargrey/schema.git")
          (tags
           .
           ("csv"
            "database"
            "schema"
            "sqlite3"
            "typed-racket"
            "unstable"
            "xlsx"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "c7ebb5a3402084c02c0cec4d4a96be6faa4102e0")
                          (source . "https://github.com/wargrey/schema.git")
                          (source_url
                           .
                           "https://github.com/wargrey/schema.git")))))))
 ("scheme-lib"
  .
  #hash((author . "mflatt@racket-lang.org")
        (checksum . "742d3f2f1df0f0659a3cae395e07dac74c010c25")
        (dependencies . ("base"))
        (dependency-names . ("base"))
        (description . "mflatt@racket-lang.org")
        (modules . ())
        (name . "scheme-lib")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/scheme-lib.zip")
        (tags . ())))
 ("schemeunit"
  .
  #hash((author . "jay@racket-lang.org")
        (checksum . "9b4d0faa18bf1e19eb3a6d2304f1df51ec6c014e")
        (dependencies . ("base" "rackunit-lib" "rackunit-gui"))
        (dependency-names . ("base" "rackunit-lib" "rackunit-gui"))
        (description . "jay@racket-lang.org")
        (modules . ())
        (name . "schemeunit")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/schemeunit.zip")
        (tags . ())))
 ("scope-operations"
  .
  #hasheq((author . "georges.duperon@gmail.com")
          (authors . ("georges.duperon@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "scope-operations"
                    "doc/scope-operations@scope-operations/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/scope-operations.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/scope-operations.txt")))
          (checksum . "475928d46e32efb7a506443efd6ce0b99990f665")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "rackunit-lib" "scribble-lib" "racket-doc"))
          (dependency-names
           .
           ("base" "rackunit-lib" "scribble-lib" "racket-doc"))
          (description
           .
           "High-level operations on scopes and sets of scopes, for use in unhygienic macros.")
          (implies . ())
          (last-checked . 1557339773)
          (last-edit . 1481748736)
          (last-updated . 1556194025)
          (modules
           .
           ((lib "scope-operations/short.rkt")
            (lib "scope-operations/scribblings/scope-operations.scrbl")
            (lib "scope-operations/main.rkt")))
          (name . "scope-operations")
          (nix-sha256
           .
           "0l1z5mzajkzwlxvprlgcaxzbmswyp9y7qc9i938vnm1qyf7ypadl")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:georges.duperon@gmail.com . #t)
                   (ring:1 . #t)
                   (scopes . #t)
                   (syntax . #t)))
          (source . "https://github.com/jsmaniac/scope-operations.git")
          (tags . ("scopes" "syntax"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "475928d46e32efb7a506443efd6ce0b99990f665")
                          (source
                           .
                           "https://github.com/jsmaniac/scope-operations.git")
                          (source_url
                           .
                           "https://github.com/jsmaniac/scope-operations.git")))))))
 ("scratch"
  .
  #hasheq((author . "leif@leifandersen.net")
          (authors . ("leif@leifandersen.net"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "scratch" "doc/scratch@scratch/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/scratch.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/scratch.txt")))
          (checksum . "21e95dcfb153ba7a8a538461c0f5b338dfc86e4f")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "rackunit-lib"
            "reprovide-lang"
            "at-exp-lib"
            "gui-lib"
            "pict-lib"
            "plot-gui-lib"
            "draw-lib"
            "data-lib"
            "profile-lib"
            "wxme-lib"
            "sandbox-lib"
            "syntax-color-lib"
            "zo-lib"
            "with-cache"
            "scribble-lib"
            "racket-doc"))
          (dependency-names
           .
           ("base"
            "rackunit-lib"
            "reprovide-lang"
            "at-exp-lib"
            "gui-lib"
            "pict-lib"
            "plot-gui-lib"
            "draw-lib"
            "data-lib"
            "profile-lib"
            "wxme-lib"
            "sandbox-lib"
            "syntax-color-lib"
            "zo-lib"
            "with-cache"
            "scribble-lib"
            "racket-doc"))
          (description . "")
          (implies . ())
          (last-checked . 1557339773)
          (last-edit . 1488564673)
          (last-updated . 1533674769)
          (modules
           .
           ((lib "scratch/scribblings/scratch.scrbl")
            (lib "scratch/private/reader-submod.rkt")
            (lib "scratch/full.rkt")
            (lib "scratch/main.rkt")
            (lib "scratch/ng.rkt")
            (lib "scratch/no-gui.rkt")))
          (name . "scratch")
          (nix-sha256
           .
           "1rwmccqsg9s2mwdl1wlsbip2fd85hi24lmvi2xvz1cj64jnyvn7h")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (:no-desc: . #t)
                   (:no-tag: . #t)
                   (author:leif@leifandersen.net . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/LeifAndersen/racket-scratch")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "21e95dcfb153ba7a8a538461c0f5b338dfc86e4f")
                          (source
                           .
                           "git://github.com/LeifAndersen/racket-scratch")
                          (source_url
                           .
                           "http://github.com/LeifAndersen/racket-scratch/tree/master")))))))
 ("scratchy"
  .
  #hasheq((author . "mflatt@cs.utah.edu")
          (authors . ("mflatt@cs.utah.edu"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "scratchy" "doc/scratchy@scratchy/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/scratchy.txt")
                 (test-failure-log . "server/built/test-fail/scratchy.txt")
                 (test-success-log . #f)))
          (checksum . "aef8883759fc962828bf977811697fccf06ef8b0")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("algol60"
            "base"
            "draw-lib"
            "gui-lib"
            "parser-tools-lib"
            "slideshow-lib"
            "racket-doc"
            "scribble-lib"))
          (dependency-names
           .
           ("algol60"
            "base"
            "draw-lib"
            "gui-lib"
            "parser-tools-lib"
            "slideshow-lib"
            "racket-doc"
            "scribble-lib"))
          (description . "Scratch-like runtime and language")
          (implies . ())
          (last-checked . 1557339773)
          (last-edit . 1354463739)
          (last-updated . 1502816420)
          (modules
           .
           ((lib "scratchy/parser.rkt")
            (lib "scratchy/examples/other.rkt")
            (lib "scratchy/examples/fish.rkt")
            (lib "scratchy/examples/fish-text.rkt")
            (lib "scratchy/scratchy.scrbl")
            (lib "scratchy/examples/splash.rkt")
            (lib "scratchy/images.rkt")
            (lib "scratchy/reader.rkt")
            (lib "scratchy/runtime.rkt")
            (lib "scratchy/examples/costume.rkt")
            (lib "scratchy/examples/just-fish.rkt")
            (lib "scratchy/main.rkt")
            (lib "scratchy/scratchy.rkt")))
          (name . "scratchy")
          (nix-sha256
           .
           "0b274p7yhw3h0449sv7wkx82qrfpkbffyz3skfajw17nrv9lnx2c")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:mflatt@cs.utah.edu . #t)
                   (games . #t)
                   (graphics . #t)
                   (gui . #t)
                   (ring:1 . #t)))
          (source . "github://github.com/mflatt/scratchy/master")
          (tags . ("games" "graphics" "gui"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "aef8883759fc962828bf977811697fccf06ef8b0")
                          (source
                           .
                           "github://github.com/mflatt/scratchy/master")
                          (source_url
                           .
                           "http://github.com/mflatt/scratchy/tree/master")))))))
 ("scribble"
  .
  #hash((author . "mflatt@racket-lang.org eli@racket-lang.org")
        (checksum . "94a5517b8da3160993ad2881f3623b83565488a2")
        (dependencies . ("scribble-lib" "scribble-doc"))
        (dependency-names . ("scribble-lib" "scribble-doc"))
        (description . "mflatt@racket-lang.org eli@racket-lang.org")
        (modules . ())
        (name . "scribble")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/scribble.zip")
        (tags . ())))
 ("scribble-abbrevs"
  .
  #hasheq((author . "types@ccs.neu.edu")
          (authors . ("types@ccs.neu.edu"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "scribble-abbrevs"
                    "doc/scribble-abbrevs@scribble-abbrevs/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/scribble-abbrevs.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/scribble-abbrevs.txt")))
          (checksum . "a01471b4e9101362745b0cf444a03293c16ac4de")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "scribble-lib"
            "reprovide-lang"
            "pict-lib"
            "draw-lib"
            "scribble-lib"
            "scribble-doc"
            "racket-doc"
            "rackunit-abbrevs"
            "rackunit-lib"
            "rackunit-abbrevs"
            "pict-doc"))
          (dependency-names
           .
           ("base"
            "scribble-lib"
            "reprovide-lang"
            "pict-lib"
            "draw-lib"
            "scribble-lib"
            "scribble-doc"
            "racket-doc"
            "rackunit-abbrevs"
            "rackunit-lib"
            "rackunit-abbrevs"
            "pict-doc"))
          (description . "Scribble-to-LaTeX helper functions")
          (implies . ())
          (last-checked . 1557339773)
          (last-edit . 1503077696)
          (last-updated . 1552072584)
          (modules
           .
           ((lib "scribble-abbrevs/latex.rkt")
            (lib "scribble-abbrevs/main.rkt")
            (lib "scribble-abbrevs/private/manual.rkt")
            (lib "scribble-abbrevs/scribble.rkt")
            (lib "scribble-abbrevs/private/pict.rkt")
            (lib "scribble-abbrevs/pict.rkt")
            (lib "scribble-abbrevs/private/integer-word.rkt")
            (lib "scribble-abbrevs/manual.rkt")
            (lib "scribble-abbrevs/private/scribble.rkt")
            (lib "scribble-abbrevs/scribblings/scribble-abbrevs.scrbl")
            (lib "scribble-abbrevs/private/latex.rkt")))
          (name . "scribble-abbrevs")
          (nix-sha256
           .
           "176rdz0y1nk2v6ni4ysrdmb92rqa5dgjnw81hjx829i4aq5xajbd")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:types@ccs.neu.edu . #t)
                   (ring:1 . #t)
                   (scribble . #t)
                   (utility . #t)))
          (source . "git://github.com/bennn/scribble-abbrevs")
          (tags . ("scribble" "utility"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "a01471b4e9101362745b0cf444a03293c16ac4de")
                          (source . "git://github.com/bennn/scribble-abbrevs")
                          (source_url
                           .
                           "http://github.com/bennn/scribble-abbrevs/tree/master")))))))
 ("scribble-code-examples"
  .
  #hasheq((author . "alexander@knauth.org")
          (authors . ("alexander@knauth.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "scribble-code-examples"
                    "doc/scribble-code-examples@scribble-code-examples/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log
                  .
                  "server/built/install/scribble-code-examples.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/scribble-code-examples.txt")))
          (checksum . "18166292d8d491881cf5ac98352c23bd5ebec312")
          (checksum-error . #f)
          (conflicts . ())
          (date-added . 1548446697)
          (dependencies
           .
           ("base"
            "scribble-code-examples-lib"
            "scribble-lib"
            "sandbox-lib"
            "racket-doc"
            "scribble-doc"))
          (dependency-names
           .
           ("base"
            "scribble-code-examples-lib"
            "scribble-lib"
            "sandbox-lib"
            "racket-doc"
            "scribble-doc"))
          (description
           .
           "A scribble examples form that works with non-s-exp languages")
          (implies . ("scribble-code-examples-lib"))
          (last-checked . 1557339773)
          (last-edit . 1548446697)
          (last-updated . 1549690972)
          (modules
           .
           ((lib "scribble-code-examples/tests/test.scrbl")
            (lib
             "scribble-code-examples/scribblings/scribble-code-examples.scrbl")))
          (name . "scribble-code-examples")
          (nix-sha256
           .
           "0drhqlp903fgvsdjz13zxbas7320yqz8mxdxd76z0zsghsng8yd8")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:alexander@knauth.org . #t)
                   (documentation . #t)
                   (ring:1 . #t)
                   (scribble . #t)))
          (source
           .
           "git://github.com/AlexKnauth/scribble-code-examples?path=scribble-code-examples")
          (tags . ("documentation" "scribble"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "18166292d8d491881cf5ac98352c23bd5ebec312")
                          (source
                           .
                           "git://github.com/AlexKnauth/scribble-code-examples?path=scribble-code-examples")
                          (source_url
                           .
                           "http://github.com/AlexKnauth/scribble-code-examples/tree/master?path=scribble-code-examples")))))))
 ("scribble-code-examples-lib"
  .
  #hasheq((author . "alexander@knauth.org")
          (authors . ("alexander@knauth.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log
                  .
                  "server/built/install/scribble-code-examples-lib.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/scribble-code-examples-lib.txt")))
          (checksum . "18166292d8d491881cf5ac98352c23bd5ebec312")
          (checksum-error . #f)
          (conflicts . ())
          (date-added . 1548446649)
          (dependencies
           .
           ("base" "scribble-lib" "sandbox-lib" "rackunit-lib"))
          (dependency-names
           .
           ("base" "scribble-lib" "sandbox-lib" "rackunit-lib"))
          (description
           .
           "A scribble examples form that works with non-s-exp languages")
          (implies . ())
          (last-checked . 1557339773)
          (last-edit . 1548446853)
          (last-updated . 1549690972)
          (modules
           .
           ((lib "scribble-code-examples/util/srcloc-position-char-index.rkt")
            (lib "scribble-code-examples/main.rkt")))
          (name . "scribble-code-examples-lib")
          (nix-sha256
           .
           "0drhqlp903fgvsdjz13zxbas7320yqz8mxdxd76z0zsghsng8yd8")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:alexander@knauth.org . #t)
                   (documentation . #t)
                   (ring:2 . #t)
                   (scribble . #t)))
          (source
           .
           "https://github.com/AlexKnauth/scribble-code-examples.git?path=scribble-code-examples-lib")
          (tags . ("documentation" "scribble"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "18166292d8d491881cf5ac98352c23bd5ebec312")
                          (source
                           .
                           "https://github.com/AlexKnauth/scribble-code-examples.git?path=scribble-code-examples-lib")
                          (source_url
                           .
                           "https://github.com/AlexKnauth/scribble-code-examples.git?path=scribble-code-examples-lib")))))))
 ("scribble-coq"
  .
  #hasheq((author . "wjb@williamjbowman.com")
          (authors . ("wjb@williamjbowman.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/scribble-coq.txt")
                 (test-failure-log
                  .
                  "server/built/test-fail/scribble-coq.txt")
                 (test-success-log . #f)))
          (checksum . "b7d0a3a8e718041ca66e286e9a343b43a87dc581")
          (checksum-error . #f)
          (conflicts . ())
          (date-added . 1551754229)
          (dependencies
           .
           ("threading-lib" "scribble-lib" "scribble-minted" "base"))
          (dependency-names
           .
           ("threading-lib" "scribble-lib" "scribble-minted" "base"))
          (description
           .
           "A library for typesetting Coq and coqtop interactions in Scribble.")
          (implies . ())
          (last-checked . 1557339773)
          (last-edit . 1551754229)
          (last-updated . 1551819893)
          (modules
           .
           ((lib "scribble/coqtop-interop.rkt")
            (lib "scribble/string-utils.rkt")
            (lib "scribble/coq.rkt")))
          (name . "scribble-coq")
          (nix-sha256
           .
           "101h05bld4vslcrpaka8p2yfb9hwbhhzv14kpmf7cxhm3qlavr67")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:no-tag: . #t)
                   (author:wjb@williamjbowman.com . #t)
                   (ring:2 . #t)))
          (source . "https://github.com/wilbowma/scribble-coq.git")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "b7d0a3a8e718041ca66e286e9a343b43a87dc581")
                          (source
                           .
                           "https://github.com/wilbowma/scribble-coq.git")
                          (source_url
                           .
                           "https://github.com/wilbowma/scribble-coq.git")))))))
 ("scribble-doc"
  .
  #hash((author . "mflatt@racket-lang.org eli@racket-lang.org")
        (checksum . "b5a58e7e5f8b31769b2f689ef8b5ed9b6ab32e1c")
        (dependencies
         .
         ("racket-index"
          "mzscheme-doc"
          "net-doc"
          "scheme-lib"
          "draw-doc"
          "gui-doc"
          "slideshow-doc"
          "pict-doc"
          "typed-racket-doc"
          "at-exp-lib"
          "base"
          "compatibility-lib"
          "draw-lib"
          "pict-lib"
          "sandbox-lib"
          "slideshow-lib"
          "scribble-lib"
          "scribble-text-lib"
          "racket-doc"))
        (dependency-names
         .
         ("racket-index"
          "mzscheme-doc"
          "net-doc"
          "scheme-lib"
          "draw-doc"
          "gui-doc"
          "slideshow-doc"
          "pict-doc"
          "typed-racket-doc"
          "at-exp-lib"
          "base"
          "compatibility-lib"
          "draw-lib"
          "pict-lib"
          "sandbox-lib"
          "slideshow-lib"
          "scribble-lib"
          "scribble-text-lib"
          "racket-doc"))
        (description . "mflatt@racket-lang.org eli@racket-lang.org")
        (modules . ())
        (name . "scribble-doc")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/scribble-doc.zip")
        (tags . ())))
 ("scribble-enhanced"
  .
  #hasheq((author . "georges.duperon@gmail.com")
          (authors . ("georges.duperon@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "scribble-enhanced-template.lp2"
                    "doc/scribble-enhanced-template.lp2@scribble-enhanced/index.html")
                   ("main"
                    "scribble-enhanced"
                    "doc/scribble-enhanced@scribble-enhanced/index.html")
                   ("main"
                    "scribble-enhanced-example.lp2"
                    "doc/scribble-enhanced-example.lp2@scribble-enhanced/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/scribble-enhanced.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/scribble-enhanced.txt")))
          (checksum . "a9e385f71759ad6421107e577f2a0782c16cef07")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "rackunit-lib"
            "scribble-lib"
            "scheme-lib"
            "compatibility-lib"
            "slideshow-lib"
            "typed-racket-lib"
            "reprovide-lang"
            "mutable-match-lambda"
            "scribble-lib"
            "racket-doc"
            "at-exp-lib"
            "typed-racket-more"
            "typed-racket-doc"
            "scribble-doc"))
          (dependency-names
           .
           ("base"
            "rackunit-lib"
            "scribble-lib"
            "scheme-lib"
            "compatibility-lib"
            "slideshow-lib"
            "typed-racket-lib"
            "reprovide-lang"
            "mutable-match-lambda"
            "scribble-lib"
            "racket-doc"
            "at-exp-lib"
            "typed-racket-more"
            "typed-racket-doc"
            "scribble-doc"))
          (description
           .
           "Temporary package, will eventually be merged into the scribble-math and hyper-literate packages. Do not use.")
          (implies . ())
          (last-checked . 1557339773)
          (last-edit . 1470944703)
          (last-updated . 1556194026)
          (modules
           .
           ((lib "scribble-enhanced/with-manual.rkt")
            (lib "scribble-enhanced/main.rkt")
            (lib "scribble-enhanced/forkmeongithub.rkt")
            (lib
             "scribble-enhanced/scribblings/scribble-enhanced-template.lp2.rkt")
            (lib "scribble-enhanced/math.rkt")
            (lib "scribble-enhanced/racket.rkt")
            (lib "scribble-enhanced/doc.rkt")
            (lib "scribble-enhanced/scribblings/scribble-enhanced.scrbl")
            (lib "scribble-enhanced/manual-form.rkt")
            (lib "scribble-enhanced/manual-scheme.rkt")
            (lib "scribble-enhanced/unicode-chars.sty.rkt")
            (lib
             "scribble-enhanced/scribblings/scribble-enhanced-example.lp2.rkt")))
          (name . "scribble-enhanced")
          (nix-sha256
           .
           "091qq76zy0p05k199535b2jdk9prszsd79f974dw4x74fggnr999")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:georges.duperon@gmail.com . #t)
                   (deprecated . #t)
                   (ring:1 . #t)))
          (source . "https://github.com/jsmaniac/scribble-enhanced.git")
          (tags . ("deprecated"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "a9e385f71759ad6421107e577f2a0782c16cef07")
                          (source
                           .
                           "https://github.com/jsmaniac/scribble-enhanced.git")
                          (source_url
                           .
                           "https://github.com/jsmaniac/scribble-enhanced.git")))))))
 ("scribble-html-lib"
  .
  #hash((author . "mflatt@racket-lang.org eli@racket-lang.org")
        (checksum . "996f99e3b72485d28322260bd6d46ef8e734a887")
        (dependencies
         .
         ("scheme-lib" "base" "at-exp-lib" "scribble-text-lib"))
        (dependency-names
         .
         ("scheme-lib" "base" "at-exp-lib" "scribble-text-lib"))
        (description . "mflatt@racket-lang.org eli@racket-lang.org")
        (modules . ())
        (name . "scribble-html-lib")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/scribble-html-lib.zip")
        (tags . ())))
 ("scribble-lib"
  .
  #hash((author . "mflatt@racket-lang.org eli@racket-lang.org")
        (checksum . "e793baf76c136c13f74a68a4856de37088244198")
        (dependencies
         .
         ("scheme-lib"
          "base"
          "compatibility-lib"
          "scribble-text-lib"
          "scribble-html-lib"
          "planet-lib"
          "net-lib"
          "at-exp-lib"
          "draw-lib"
          "syntax-color-lib"
          "sandbox-lib"
          "typed-racket-lib"
          "rackunit-lib"))
        (dependency-names
         .
         ("scheme-lib"
          "base"
          "compatibility-lib"
          "scribble-text-lib"
          "scribble-html-lib"
          "planet-lib"
          "net-lib"
          "at-exp-lib"
          "draw-lib"
          "syntax-color-lib"
          "sandbox-lib"
          "typed-racket-lib"
          "rackunit-lib"))
        (description . "mflatt@racket-lang.org eli@racket-lang.org")
        (modules . ())
        (name . "scribble-lib")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/scribble-lib.zip")
        (tags . ())))
 ("scribble-math"
  .
  #hasheq((author . "georges.duperon@gmail.com jensaxel@soegaard.net")
          (authors . ("georges.duperon@gmail.com" "jensaxel@soegaard.net"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "scribble-math"
                    "doc/scribble-math@scribble-math/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/scribble-math.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/scribble-math.txt")))
          (checksum . "1793123c881915c1731620f99aa8e4e281abb59b")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "rackunit-lib"
            "scribble-lib"
            "scribble-lib"
            "racket-doc"
            "at-exp-lib"
            "scribble-doc"))
          (dependency-names
           .
           ("base"
            "rackunit-lib"
            "scribble-lib"
            "scribble-lib"
            "racket-doc"
            "at-exp-lib"
            "scribble-doc"))
          (description
           .
           "Typesetting math in scribble (uses MathJax and/or KaTeX). Also supports figures with Asymptote.")
          (implies . ())
          (last-checked . 1557339774)
          (last-edit . 1498225731)
          (last-updated . 1556194027)
          (modules
           .
           ((lib "scribble-math/main.rkt")
            (lib "scribble-math/mathjax-convert-unicode.rkt")
            (lib "scribble-math/katex-convert-unicode.rkt")
            (lib "scribble-math/asymptote.rkt")
            (lib "scribble-math/scribblings/scribble-math.scrbl")
            (lib "scribble-math/dollar.rkt")))
          (name . "scribble-math")
          (nix-sha256
           .
           "16q9ch68dylqvliwsswkcnmdjhxjs3jq6839j517lqy9cp28zfga")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (LaTeX . #t)
                   (Math . #t)
                   (author:georges.duperon@gmail.com . #t)
                   (author:jensaxel@soegaard.net . #t)
                   (documentation . #t)
                   (math . #t)
                   (ring:1 . #t)
                   (scribble . #t)))
          (source . "https://github.com/jsmaniac/scribble-math.git")
          (tags . ("documentation" "LaTeX" "math" "Math" "scribble"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "1793123c881915c1731620f99aa8e4e281abb59b")
                          (source
                           .
                           "https://github.com/jsmaniac/scribble-math.git")
                          (source_url
                           .
                           "https://github.com/jsmaniac/scribble-math.git")))))))
 ("scribble-minted"
  .
  #hasheq((author . "wjb@williamjbowman.com")
          (authors . ("wjb@williamjbowman.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/scribble-minted.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/scribble-minted.txt")))
          (checksum . "10b31bf20f67a25db46d46edb0467bb2fe71aca1")
          (checksum-error . #f)
          (conflicts . ())
          (date-added . 1550296818)
          (dependencies . ("rackunit-lib" "scribble-lib" "base"))
          (dependency-names . ("rackunit-lib" "scribble-lib" "base"))
          (description . "A scribble library for using pygmentize ")
          (implies . ())
          (last-checked . 1557339774)
          (last-edit . 1550296818)
          (last-updated . 1552072585)
          (modules . ((lib "scribble/minted.rkt")))
          (name . "scribble-minted")
          (nix-sha256
           .
           "1kbq0v7lb3iln9nan204scsfnfyp8gndryp28wlvdmzv1avivy4y")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:no-tag: . #t)
                   (author:wjb@williamjbowman.com . #t)
                   (ring:2 . #t)))
          (source . "https://github.com/wilbowma/scribble-minted.git")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "10b31bf20f67a25db46d46edb0467bb2fe71aca1")
                          (source
                           .
                           "https://github.com/wilbowma/scribble-minted.git")
                          (source_url
                           .
                           "https://github.com/wilbowma/scribble-minted.git")))))))
 ("scribble-test"
  .
  #hash((author . "mflatt@racket-lang.org eli@racket-lang.org")
        (checksum . "2ac9d2af6171a917c46319e4360fae9a6e118d26")
        (dependencies
         .
         ("at-exp-lib"
          "base"
          "eli-tester"
          "rackunit-lib"
          "sandbox-lib"
          "scribble-doc"
          "scribble-lib"
          "scribble-text-lib"
          "racket-index"))
        (dependency-names
         .
         ("at-exp-lib"
          "base"
          "eli-tester"
          "rackunit-lib"
          "sandbox-lib"
          "scribble-doc"
          "scribble-lib"
          "scribble-text-lib"
          "racket-index"))
        (description . "mflatt@racket-lang.org eli@racket-lang.org")
        (modules . ())
        (name . "scribble-test")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/scribble-test.zip")
        (tags . ())))
 ("scribble-text-lib"
  .
  #hash((author . "mflatt@racket-lang.org eli@racket-lang.org")
        (checksum . "4eac00e3186362f4d82f0be3767427e9e81134c4")
        (dependencies . ("scheme-lib" "base" "at-exp-lib"))
        (dependency-names . ("scheme-lib" "base" "at-exp-lib"))
        (description . "mflatt@racket-lang.org eli@racket-lang.org")
        (modules . ())
        (name . "scribble-text-lib")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/scribble-text-lib.zip")
        (tags . ())))
 ("scriblogify"
  .
  #hasheq((author . "ryanc@racket-lang.org")
          (authors . ("ryanc@racket-lang.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "scriblogify"
                    "doc/scriblogify@scriblogify/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/scriblogify.txt")
                 (test-failure-log . "server/built/test-fail/scriblogify.txt")
                 (test-success-log . #f)))
          (checksum . "7771d00ce6101bd5d415b54134eb79c42b92f1ef")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "sxml"
            "webapi"
            "scribble-lib"
            "compatibility-lib"
            "web-server-lib"
            "html-parsing"
            "html-writing"
            "racket-doc"
            "scribble-doc"
            "scribble-lib"))
          (dependency-names
           .
           ("base"
            "sxml"
            "webapi"
            "scribble-lib"
            "compatibility-lib"
            "web-server-lib"
            "html-parsing"
            "html-writing"
            "racket-doc"
            "scribble-doc"
            "scribble-lib"))
          (description . "Scribble your blog!")
          (implies . ())
          (last-checked . 1557339774)
          (last-edit . 1382387607)
          (last-updated . 1502816421)
          (modules
           .
           ((lib "scriblogify/scribble-util.rkt")
            (lib "scriblogify/private/scriblogify.rkt")
            (lib "scriblogify/samples/scribble-your-blogs.scrbl")
            (lib "scriblogify/private/util.rkt")
            (lib "scriblogify/run-setup.rkt")
            (lib "scriblogify/run.rkt")
            (lib "scriblogify/main.rkt")
            (lib "scriblogify/scribblings/scriblogify.scrbl")
            (lib "scriblogify/private/handlers.rkt")))
          (name . "scriblogify")
          (nix-sha256
           .
           "1bpjdxmc4ihhndahk3q5vapa13w8fs5mdi9vynx0qxfzw5g3l5b9")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:ryanc@racket-lang.org . #t)
                   (blog . #t)
                   (ring:1 . #t)
                   (scribble . #t)))
          (source . "git://github.com/rmculpepper/scriblogify#pkg")
          (tags . ("blog" "scribble"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "7771d00ce6101bd5d415b54134eb79c42b92f1ef")
                          (source
                           .
                           "git://github.com/rmculpepper/scriblogify#pkg")
                          (source_url
                           .
                           "http://github.com/rmculpepper/scriblogify/tree/master#pkg")))))))
 ("script-plugin"
  .
  #hasheq((author . "laurent.orseau@gmail.com")
          (authors . ("laurent.orseau@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "script-plugin"
                    "doc/script-plugin@script-plugin/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/script-plugin.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/script-plugin.txt")))
          (checksum . "c5ab635bae65c6fcaac5221bdce9f6efc9e6c674")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "at-exp-lib"
            "drracket"
            "drracket-plugin-lib"
            "gui-lib"
            "html-lib"
            "net-lib"
            "planet-lib"
            "slideshow-lib"
            "srfi-lite-lib"
            "gui-doc"
            "racket-doc"
            "racket-index"
            "scribble-lib"
            "web-server-lib"
            "planet-doc"
            "draw-doc"))
          (dependency-names
           .
           ("base"
            "at-exp-lib"
            "drracket"
            "drracket-plugin-lib"
            "gui-lib"
            "html-lib"
            "net-lib"
            "planet-lib"
            "slideshow-lib"
            "srfi-lite-lib"
            "gui-doc"
            "racket-doc"
            "racket-index"
            "scribble-lib"
            "web-server-lib"
            "planet-doc"
            "draw-doc"))
          (description
           .
           "Superseded by Quickscript.\r\n(A tool for DrRacket to easily extend it by writing racket scripts, without needing to restart DrRacket)")
          (implies . ())
          (last-checked . 1557339774)
          (last-edit . 1523700096)
          (last-updated . 1523705164)
          (modules
           .
           ((lib "script-plugin/examples/bookmarks.rkt")
            (lib "script-plugin/examples/provided-by.rkt")
            (lib "script-plugin/examples/sections.rkt")
            (lib "script-plugin/examples/tweet.rkt")
            (lib "script-plugin/examples/indent-table.rkt")
            (lib "script-plugin/examples/git.rkt")
            (lib "script-plugin/examples/color-theme.rkt")
            (lib "script-plugin/examples/dynamic-abbrev.rkt")
            (lib "script-plugin/examples/goto-line.rkt")
            (lib "script-plugin/examples/open-dir.rkt")
            (lib "script-plugin/examples/pasterack.rkt")
            (lib "script-plugin/examples/open-terminal.rkt")
            (lib "script-plugin/examples/my-functions.rkt")
            (lib "script-plugin/scribblings/script-plugin.scrbl")
            (lib "script-plugin/examples/author-date.rkt")
            (lib "script-plugin/examples/open-collects.rkt")
            (lib "script-plugin/tool.rkt")
            (lib "script-plugin/examples/test-slideshow.rkt")
            (lib "script-plugin/examples/gui-tools.rkt")
            (lib "script-plugin/examples/abstract.rkt")
            (lib "script-plugin/examples/insert-lambda.rkt")
            (lib "script-plugin/examples/enter-submod.rkt")
            (lib "script-plugin/examples/test-menu.rkt")
            (lib "script-plugin/examples/color-chooser.rkt")
            (lib "script-plugin/examples/def-signatures.rkt")
            (lib "script-plugin/examples/regexp-replace.rkt")
            (lib "script-plugin/examples/string-utils.rkt")
            (lib "script-plugin/examples/complete-word.rkt")))
          (name . "script-plugin")
          (nix-sha256
           .
           "1mz7xrqhh377k5f3l5yylb378gnkc1j449l7p9mlrwzn73m94ggj")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:laurent.orseau@gmail.com . #t)
                   (deprecated . #t)
                   (drracket . #t)
                   (ring:1 . #t)))
          (source . "https://github.com/Metaxal/script-plugin.git")
          (tags . ("deprecated" "drracket"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "c5ab635bae65c6fcaac5221bdce9f6efc9e6c674")
                          (source
                           .
                           "https://github.com/Metaxal/script-plugin.git")
                          (source_url
                           .
                           "https://github.com/Metaxal/script-plugin.git")))))))
 ("scripty"
  .
  #hasheq((author . "lexi.lambda@gmail.com")
          (authors . ("lexi.lambda@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/scripty.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/scripty.txt")))
          (checksum . "09a0e2fd24dfcd5942177d4a328821534ee60ded")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("scripty-doc" "scripty-lib"))
          (dependency-names . ("scripty-doc" "scripty-lib"))
          (description . "")
          (implies . ("scripty-doc" "scripty-lib"))
          (last-checked . 1557339774)
          (last-edit . 1476917251)
          (last-updated . 1502816422)
          (modules . ())
          (name . "scripty")
          (nix-sha256
           .
           "0ib233dr7vlm6vwkxzb24vpgj5f9my894dd2ja0ry5ykl75cvzia")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:no-desc: . #t)
                   (author:lexi.lambda@gmail.com . #t)
                   (ring:1 . #t)
                   (scripting . #t)))
          (source . "git://github.com/lexi-lambda/scripty.git?path=scripty")
          (tags . ("scripting"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "09a0e2fd24dfcd5942177d4a328821534ee60ded")
                          (source
                           .
                           "git://github.com/lexi-lambda/scripty.git?path=scripty")
                          (source_url
                           .
                           "http://github.com/lexi-lambda/scripty.git/tree/master?path=scripty")))))))
 ("scripty-doc"
  .
  #hasheq((author . "lexi.lambda@gmail.com")
          (authors . ("lexi.lambda@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "scripty" "doc/scripty@scripty-doc/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/scripty-doc.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/scripty-doc.txt")))
          (checksum . "09a0e2fd24dfcd5942177d4a328821534ee60ded")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "racket-doc" "scribble-lib" "scripty-lib"))
          (dependency-names
           .
           ("base" "racket-doc" "scribble-lib" "scripty-lib"))
          (description . "")
          (implies . ())
          (last-checked . 1557339774)
          (last-edit . 1476917300)
          (last-updated . 1502816422)
          (modules . ((lib "scribblings/scripty.scrbl")))
          (name . "scripty-doc")
          (nix-sha256
           .
           "0ib233dr7vlm6vwkxzb24vpgj5f9my894dd2ja0ry5ykl75cvzia")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (:no-desc: . #t)
                   (author:lexi.lambda@gmail.com . #t)
                   (ring:1 . #t)
                   (scripting . #t)))
          (source
           .
           "git://github.com/lexi-lambda/scripty.git?path=scripty-doc")
          (tags . ("scripting"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "09a0e2fd24dfcd5942177d4a328821534ee60ded")
                          (source
                           .
                           "git://github.com/lexi-lambda/scripty.git?path=scripty-doc")
                          (source_url
                           .
                           "http://github.com/lexi-lambda/scripty.git/tree/master?path=scripty-doc")))))))
 ("scripty-lib"
  .
  #hasheq((author . "lexi.lambda@gmail.com")
          (authors . ("lexi.lambda@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/scripty-lib.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/scripty-lib.txt")))
          (checksum . "09a0e2fd24dfcd5942177d4a328821534ee60ded")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base"))
          (dependency-names . ("base"))
          (description . "")
          (implies . ())
          (last-checked . 1557339774)
          (last-edit . 1476917222)
          (last-updated . 1502816422)
          (modules . ((lib "scripty/main.rkt")))
          (name . "scripty-lib")
          (nix-sha256
           .
           "0ib233dr7vlm6vwkxzb24vpgj5f9my894dd2ja0ry5ykl75cvzia")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:no-desc: . #t)
                   (author:lexi.lambda@gmail.com . #t)
                   (ring:1 . #t)
                   (scripting . #t)))
          (source
           .
           "git://github.com/lexi-lambda/scripty.git?path=scripty-lib")
          (tags . ("scripting"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "09a0e2fd24dfcd5942177d4a328821534ee60ded")
                          (source
                           .
                           "git://github.com/lexi-lambda/scripty.git?path=scripty-lib")
                          (source_url
                           .
                           "http://github.com/lexi-lambda/scripty.git/tree/master?path=scripty-lib")))))))
 ("scrypt"
  .
  #hasheq((author . "tonygarnockjones@gmail.com")
          (authors . ("tonygarnockjones@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . "server/built/min-fail/scrypt.txt")
                 (success-log . "server/built/install/scrypt.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/scrypt.txt")))
          (checksum . "0a37d1cdca43e08c086f0e2e312c7916cb790edb")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("srfi-lite-lib" "base" "dynext-lib" "rackunit-lib"))
          (dependency-names
           .
           ("srfi-lite-lib" "base" "dynext-lib" "rackunit-lib"))
          (description
           .
           "Racket binding to Colin Percival's \"scrypt\" function.")
          (implies . ())
          (last-checked . 1557339774)
          (last-edit . 1365202290)
          (last-updated . 1502816423)
          (modules
           .
           ((lib "scrypt/private/install.rkt")
            (lib "scrypt/wrapper.rkt")
            (lib "scrypt/main.rkt")
            (lib "scrypt/test-main.rkt")))
          (name . "scrypt")
          (nix-sha256
           .
           "0xm6apzgilf4g664rw5bzicl30gf534xvf4pvl1g27jnww9lcq27")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:tonygarnockjones@gmail.com . #t)
                   (crypto . #t)
                   (ffi . #t)
                   (ring:1 . #t)))
          (source . "github://github.com/tonyg/racket-scrypt/master/")
          (tags . ("crypto" "ffi"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "0a37d1cdca43e08c086f0e2e312c7916cb790edb")
                          (source
                           .
                           "github://github.com/tonyg/racket-scrypt/master/")
                          (source_url
                           .
                           "http://github.com/tonyg/racket-scrypt/tree/master/")))))))
 ("sdl"
  .
  #hasheq((author . "cosmez leif@leifandersen.net")
          (authors . ("cosmez" "leif@leifandersen.net"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/sdl.txt")
                 (test-failure-log . "server/built/test-fail/sdl.txt")
                 (test-success-log . #f)))
          (checksum . "8b31e76b77b24afe76683d4d5630c771a0329683")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base" "rackunit-lib" "gui-lib" "scribble-lib" "racket-doc"))
          (dependency-names
           .
           ("base" "rackunit-lib" "gui-lib" "scribble-lib" "racket-doc"))
          (description . "Racket bindings for SDL")
          (implies . ())
          (last-checked . 1557339774)
          (last-edit . 1477494205)
          (last-updated . 1502816423)
          (modules
           .
           ((lib "sdl/constants.rkt")
            (lib "sdl/main.rkt")
            (lib "sdl/definitions.rkt")
            (lib "sdl/structs.rkt")))
          (name . "sdl")
          (nix-sha256
           .
           "067v0dhf7w8n2rixcpbndc4wkq36mfs3yng4lprl41nyq70kyx5w")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:no-tag: . #t)
                   (author:cosmez . #t)
                   (author:leif@leifandersen.net . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/cosmez/racket-sdl/?path=sdl")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "8b31e76b77b24afe76683d4d5630c771a0329683")
                          (source
                           .
                           "git://github.com/cosmez/racket-sdl/?path=sdl")
                          (source_url
                           .
                           "git://github.com/cosmez/racket-sdl/?path=sdl")))))))
 ("sdraw"
  .
  #hasheq((author . "jack@rosenth.al")
          (authors . ("jack@rosenth.al"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "sdraw" "doc/sdraw@sdraw/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/sdraw.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/sdraw.txt")))
          (checksum . "b885937074fa2c8ac0db4df2f84f11ea3e52ddcf")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "pict-lib"
            "scribble-lib"
            "racket-doc"
            "rackunit-lib"
            "pict-doc"))
          (dependency-names
           .
           ("base"
            "pict-lib"
            "scribble-lib"
            "racket-doc"
            "rackunit-lib"
            "pict-doc"))
          (description
           .
           "Generate cons-cell diagrams using pict. Includes extensive options for customizing the look and feel of the diagrams.")
          (implies . ())
          (last-checked . 1557339775)
          (last-edit . 1546417041)
          (last-updated . 1546474945)
          (modules
           .
           ((lib "sdraw/main.rkt")
            (lib "sdraw/scribblings/sdraw.scrbl")
            (lib "sdraw/sdraw.rkt")))
          (name . "sdraw")
          (nix-sha256
           .
           "1wpc7fzxaiz0zdj87zylq6nyrmj2yzi1rr8hs779zgl918dhpafk")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:jack@rosenth.al . #t)
                   (education . #t)
                   (lisp . #t)
                   (pict . #t)
                   (ring:2 . #t)))
          (source . "https://github.com/jackrosenthal/sdraw-racket.git")
          (tags . ("education" "lisp" "pict"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "b885937074fa2c8ac0db4df2f84f11ea3e52ddcf")
                          (source
                           .
                           "https://github.com/jackrosenthal/sdraw-racket.git")
                          (source_url
                           .
                           "https://github.com/jackrosenthal/sdraw-racket.git")))))))
 ("secd"
  .
  #hasheq((author . "gasparricci.p95@gmail.com")
          (authors . ("gasparricci.p95@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "secd" "doc/secd@secd/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/secd.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/secd.txt")))
          (checksum . "cebf4c32d4c48c6d964449788c0e708524872120")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "beautiful-racket-lib"
            "brag"
            "data-lib"
            "racket-doc"
            "scribble-lib"))
          (dependency-names
           .
           ("base"
            "beautiful-racket-lib"
            "brag"
            "data-lib"
            "racket-doc"
            "scribble-lib"))
          (description
           .
           "An SECD to ARM Assembler compiler, supporting a small subset of instructions.")
          (implies . ())
          (last-checked . 1557339775)
          (last-edit . 1532995965)
          (last-updated . 1533012358)
          (modules
           .
           ((lib "secd/lexer.rkt")
            (lib "secd/main.rkt")
            (lib "secd/test.rkt")
            (lib "secd/expander.rkt")
            (lib "secd/tokenizer.rkt")
            (lib "secd/parser.rkt")
            (lib "secd/tokenize-only.rkt")
            (lib "secd/parse-only.rkt")
            (lib "secd/scribblings/secd.scrbl")))
          (name . "secd")
          (nix-sha256
           .
           "1kypfg3sq8zy3nyv43s6gqd0c3ix739hijw5frpg15cs8lfg8n56")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:gasparricci.p95@gmail.com . #t)
                   (ring:2 . #t)
                   (secd . #t)
                   (secd-abstract-machine . #t)
                   (secd-to-arm . #t)))
          (source . "https://github.com/GPRicci/secd.git")
          (tags . ("secd" "secd-abstract-machine" "secd-to-arm"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "cebf4c32d4c48c6d964449788c0e708524872120")
                          (source . "https://github.com/GPRicci/secd.git")
                          (source_url
                           .
                           "https://github.com/GPRicci/secd.git")))))))
 ("semilit"
  .
  #hasheq((author . "samth@ccs.neu.edu")
          (authors . ("samth@ccs.neu.edu"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/semilit.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/semilit.txt")))
          (checksum . "51a4c9d2bc1d2307a732c488745b7d2cdda22f98")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "datalog" "scribble-lib"))
          (dependency-names . ("base" "datalog" "scribble-lib"))
          (description . "Semi-literate programming for any Racket language")
          (implies . ())
          (last-checked . 1557339775)
          (last-edit . 1353018353)
          (last-updated . 1502816423)
          (modules
           .
           ((lib "semilit/main.rkt")
            (lib "semilit/scribble-example.rkt")
            (lib "semilit/example.rkt")
            (lib "semilit/ancestor.rkt")))
          (name . "semilit")
          (nix-sha256
           .
           "1fas98gwfav7janmaz2svz1ld8g607z8pbvvvqv4ky1ch8s7ngsf")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:samth@ccs.neu.edu . #t)
                   (dev . #t)
                   (documentation . #t)
                   (language . #t)
                   (ring:1 . #t)))
          (source . "github://github.com/samth/semilit/master")
          (tags . ("dev" "documentation" "language"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "51a4c9d2bc1d2307a732c488745b7d2cdda22f98")
                          (source
                           .
                           "github://github.com/samth/semilit/master")
                          (source_url
                           .
                           "http://github.com/samth/semilit/tree/master")))))))
 ("semver"
  .
  #hasheq((author . "lexi.lambda@gmail.com")
          (authors . ("lexi.lambda@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "semver" "doc/semver@semver/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/semver.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/semver.txt")))
          (checksum . "20f87e1c2d84b687b82dff3e58187df13f231d73")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "typed-racket-lib"
            "alexis-util"
            "racket-doc"
            "scribble-lib"
            "typed-racket-doc"
            "typed-racket-more"))
          (dependency-names
           .
           ("base"
            "typed-racket-lib"
            "alexis-util"
            "racket-doc"
            "scribble-lib"
            "typed-racket-doc"
            "typed-racket-more"))
          (description
           .
           "An implementation of the semver (semantic versioning) specification")
          (implies . ())
          (last-checked . 1557339775)
          (last-edit . 1422729008)
          (last-updated . 1502816424)
          (modules
           .
           ((lib "semver/scribblings/semver.scrbl") (lib "semver/main.rkt")))
          (name . "semver")
          (nix-sha256
           .
           "16p688kkwlyiaz9c9nriajw05jr0ck8qhvlwdfhvspmzl3lnf2vh")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (:no-tag: . #t)
                   (author:lexi.lambda@gmail.com . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/lexi-lambda/racket-semver")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "20f87e1c2d84b687b82dff3e58187df13f231d73")
                          (source
                           .
                           "git://github.com/lexi-lambda/racket-semver")
                          (source_url
                           .
                           "http://github.com/lexi-lambda/racket-semver/tree/master")))
                 ("6.1.1"
                  .
                  #hasheq((checksum
                           .
                           "220527934536b26476e652adf5340dd96e102d47")
                          (source
                           .
                           "git://github.com/lexi-lambda/racket-semver#v6.1.1")
                          (source_url
                           .
                           "http://github.com/lexi-lambda/racket-semver/tree/master#v6.1.1")))))))
 ("send-exp"
  .
  #hasheq((author . "tonygarnockjones@gmail.com")
          (authors . ("tonygarnockjones@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/send-exp.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/send-exp.txt")))
          (checksum . "fcbb060fb9a0d8efc6810f6d77accf11093f6c8e")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base"))
          (dependency-names . ("base"))
          (description . "Terse syntax for object-oriented message sending")
          (implies . ())
          (last-checked . 1557339775)
          (last-edit . 1402507661)
          (last-updated . 1535626727)
          (modules
           .
           ((lib "send-exp/lang/reader.rkt") (lib "send-exp/lang.rkt")))
          (name . "send-exp")
          (nix-sha256
           .
           "04v25vw69xbzlv42zlypy19x6wq0p0rd5jycgyfhkrfc2j4nil5m")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:tonygarnockjones@gmail.com . #t)
                   (ring:1 . #t)
                   (syntax . #t)))
          (source . "git://github.com/tonyg/racket-send-exp")
          (tags . ("syntax"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "fcbb060fb9a0d8efc6810f6d77accf11093f6c8e")
                          (source . "git://github.com/tonyg/racket-send-exp")
                          (source_url
                           .
                           "http://github.com/tonyg/racket-send-exp/tree/master")))))))
 ("seq-no-order"
  .
  #hasheq((author . "alexander@knauth.org")
          (authors . ("alexander@knauth.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "seq-no-order"
                    "doc/seq-no-order@seq-no-order/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/seq-no-order.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/seq-no-order.txt")))
          (checksum . "dd9bc6956a2431f986d0b02aabcf61f5c91dc82f")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           (("base" #:version "6.1.1")
            "rackunit-lib"
            "scribble-lib"
            "racket-doc"))
          (dependency-names
           .
           ("base" "rackunit-lib" "scribble-lib" "racket-doc"))
          (description
           .
           "~seq-no-order and ~no-order as pattern-expanders that work with syntax/parse.")
          (implies . ())
          (last-checked . 1557339775)
          (last-edit . 1415186905)
          (last-updated . 1502816424)
          (modules
           .
           ((lib "seq-no-order/seq-no-order.rkt")
            (lib "seq-no-order/main.rkt")
            (lib "seq-no-order/groups-no-order.rkt")
            (lib "seq-no-order/docs/seq-no-order.scrbl")))
          (name . "seq-no-order")
          (nix-sha256
           .
           "1242qsh9z55ydks51p23q775xspxzdhxnkk6lgrhqgd34h4xff0g")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:alexander@knauth.org . #t)
                   (ring:1 . #t)
                   (syntax-parse . #t)))
          (source . "git://github.com/AlexKnauth/seq-no-order")
          (tags . ("syntax-parse"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "dd9bc6956a2431f986d0b02aabcf61f5c91dc82f")
                          (source
                           .
                           "git://github.com/AlexKnauth/seq-no-order")
                          (source_url
                           .
                           "http://github.com/AlexKnauth/seq-no-order/tree/master")))
                 ("6.1"
                  .
                  #hasheq((checksum
                           .
                           "09633cc6e9c1d98630e45098692cb907d545035f")
                          (source
                           .
                           "git://github.com/AlexKnauth/seq-no-order#for-v-up-to-6.1")
                          (source_url
                           .
                           "http://github.com/AlexKnauth/seq-no-order/tree/master#for-v-up-to-6.1")))))))
 ("serial"
  .
  #hasheq((author . "bprzygoda@gmail.com")
          (authors . ("bprzygoda@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . "server/built/min-fail/serial.txt")
                 (success-log . "server/built/install/serial.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/serial.txt")))
          (checksum . "47cb5ed979cdcd9481001aeb559e82c0d96bb42a")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "termios"))
          (dependency-names . ("base" "termios"))
          (description
           .
           "Helper FFI bindings for serial port communication based on pyserial")
          (implies . ())
          (last-checked . 1557339775)
          (last-edit . 1424731342)
          (last-updated . 1502816424)
          (modules
           .
           ((lib "serial/private/install.rkt")
            (lib "serial/main.rkt")
            (lib "serial/serial.rkt")
            (lib "serial/ioctl.rkt")))
          (name . "serial")
          (nix-sha256
           .
           "1l7zhvbh6rivz1kbvclkwx9mjrm37w2yid9by3mjyhf4b4wh3q4p")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:bprzygoda@gmail.com . #t)
                   (communication . #t)
                   (linux . #t)
                   (port . #t)
                   (ring:1 . #t)
                   (serial . #t)))
          (source . "git://github.com/BartAdv/racket-serial")
          (tags . ("communication" "linux" "port" "serial"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "47cb5ed979cdcd9481001aeb559e82c0d96bb42a")
                          (source . "git://github.com/BartAdv/racket-serial")
                          (source_url
                           .
                           "http://github.com/BartAdv/racket-serial/tree/master")))))))
 ("serialize-cstruct-lib"
  .
  #hash((author . "tobias.hammer@dlr.de")
        (checksum . "80b9a9154d8bdc4733026195790b1f98ad1c40a6")
        (dependencies . ("base"))
        (dependency-names . ("base"))
        (description . "tobias.hammer@dlr.de")
        (modules . ())
        (name . "serialize-cstruct-lib")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/serialize-cstruct-lib.zip")
        (tags . ())))
 ("serialize-syntax-introducer"
  .
  #hasheq((author . "alexander@knauth.org iitalics@gmail.com")
          (authors . ("alexander@knauth.org" "iitalics@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "serialize-syntax-introducer"
                    "doc/serialize-syntax-introducer@serialize-syntax-introducer/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log
                  .
                  "server/built/install/serialize-syntax-introducer.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/serialize-syntax-introducer.txt")))
          (checksum . "5944d9f32df50b608c3493a7fd6a510afabf8fd3")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "scribble-lib" "racket-doc"))
          (dependency-names . ("base" "scribble-lib" "racket-doc"))
          (description
           .
           "Serializing syntax introducers into values that can be embedded into syntax objects, compiled, read back as syntax, and restored to functions that introduce the same scopes")
          (implies . ())
          (last-checked . 1557339775)
          (last-edit . 1526585989)
          (last-updated . 1529190173)
          (modules
           .
           ((lib "serialize-syntax-introducer/main.rkt")
            (lib
             "serialize-syntax-introducer/scribblings/serialize-syntax-introducer.scrbl")))
          (name . "serialize-syntax-introducer")
          (nix-sha256
           .
           "01kzkp19i437biz3kb5xf3kcsqjh77npzng3cnsbnixlx0ljlhi1")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:alexander@knauth.org . #t)
                   (author:iitalics@gmail.com . #t)
                   (ring:2 . #t)
                   (syntax . #t)))
          (source
           .
           "https://github.com/macrotypefunctors/serialize-syntax-introducer.git")
          (tags . ("syntax"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "5944d9f32df50b608c3493a7fd6a510afabf8fd3")
                          (source
                           .
                           "https://github.com/macrotypefunctors/serialize-syntax-introducer.git")
                          (source_url
                           .
                           "https://github.com/macrotypefunctors/serialize-syntax-introducer.git")))))))
 ("set"
  .
  #hasheq((author . "samth@ccs.neu.edu")
          (authors . ("samth@ccs.neu.edu"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "new-set" "doc/new-set@set/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/set.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/set.txt")))
          (checksum . "655e2567cefe9684b0425a0ec601a97d1faf7d0e")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "scribble-lib" "racket-doc"))
          (dependency-names . ("base" "scribble-lib" "racket-doc"))
          (description . "Use `racket/set` instead")
          (implies . ())
          (last-checked . 1557339775)
          (last-edit . 1410271687)
          (last-updated . 1524366249)
          (modules
           .
           ((lib "data/new-set.scrbl")
            (lib "data/main.rkt")
            (lib "data/private/common.rkt")
            (lib "data/set.rkt")
            (lib "data/seteq.rkt")))
          (name . "set")
          (nix-sha256
           .
           "0jp8na3bsb7511sx70y9l4cr6sy5a2pbvid9bc3ls0f45zdlkl14")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:samth@ccs.neu.edu . #t)
                   (data . #t)
                   (ring:1 . #t)))
          (source . "github://github.com/samth/set.rkt/master")
          (tags . ("data"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "655e2567cefe9684b0425a0ec601a97d1faf7d0e")
                          (source
                           .
                           "github://github.com/samth/set.rkt/master")
                          (source_url
                           .
                           "http://github.com/samth/set.rkt/tree/master")))))))
 ("set-exp"
  .
  #hasheq((author . "jackhfirth@gmail.com")
          (authors . ("jackhfirth@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "set-exp" "doc/set-exp@set-exp/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/set-exp.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/set-exp.txt")))
          (checksum . "19c898f13278efee5399de7307fc95d0f53ee82d")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "rackunit-lib"
            "doc-coverage"
            "cover"
            "doc-coverage"
            "scribble-lib"
            "rackunit-lib"
            "racket-doc"))
          (dependency-names
           .
           ("base"
            "rackunit-lib"
            "doc-coverage"
            "cover"
            "doc-coverage"
            "scribble-lib"
            "rackunit-lib"
            "racket-doc"))
          (description . "Literal set syntax")
          (implies . ())
          (last-checked . 1557339775)
          (last-edit . 1500077346)
          (last-updated . 1549323800)
          (modules
           .
           ((lib "set-exp/lang/reader.rkt")
            (lib "set-exp/set-exp.scrbl")
            (lib "set-exp/lang.rkt")
            (lib "set-exp/test.rkt")))
          (name . "set-exp")
          (nix-sha256
           .
           "14l96fdzj7031950xw559nx0f4n84z76bwwgsgz7zlcg4jx1c26b")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:jackhfirth@gmail.com . #t)
                   (experimental . #t)
                   (reader . #t)
                   (ring:1 . #t)
                   (sugar . #t)))
          (source . "git://github.com/jackfirth/set-exp")
          (tags . ("experimental" "reader" "sugar"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "19c898f13278efee5399de7307fc95d0f53ee82d")
                          (source . "git://github.com/jackfirth/set-exp")
                          (source_url
                           .
                           "http://github.com/jackfirth/set-exp/tree/master")))))))
 ("set-extras"
  .
  #hasheq((author . "pcn@cs.umd.edu")
          (authors . ("pcn@cs.umd.edu"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/set-extras.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/set-extras.txt")))
          (checksum . "7feeb7a3a6b05c2e9ce39a0ff31eae25e150119d")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "typed-racket-lib" "typed-racket-more"))
          (dependency-names . ("base" "typed-racket-lib" "typed-racket-more"))
          (description
           .
           "Some conveniences for set, including fancy unicode aliases and more comprehension forms")
          (implies . ())
          (last-checked . 1557339776)
          (last-edit . 1492836289)
          (last-updated . 1557109396)
          (modules
           .
           ((lib "set-extras/main.rkt") (lib "set-extras/tests.rkt")))
          (name . "set-extras")
          (nix-sha256
           .
           "0h9vnigjgvhp48cqzb46ar3a6yg83zgyg2h1i3kfklfdrvx3v8j0")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:pcn@cs.umd.edu . #t)
                   (ring:1 . #t)
                   (set . #t)
                   (typed-racket . #t)
                   (unicode . #t)))
          (source . "git://github.com/philnguyen/set-extras?path=set-extras")
          (tags . ("set" "typed-racket" "unicode"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "7feeb7a3a6b05c2e9ce39a0ff31eae25e150119d")
                          (source
                           .
                           "git://github.com/philnguyen/set-extras?path=set-extras")
                          (source_url
                           .
                           "http://github.com/philnguyen/set-extras/tree/master?path=set-extras")))))))
 ("sexp-diff"
  .
  #hasheq((author . "stamourv@racket-lang.org")
          (authors . ("stamourv@racket-lang.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "sexp-diff" "doc/sexp-diff@sexp-diff/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/sexp-diff.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/sexp-diff.txt")))
          (checksum . "5b5034c7e6b930002870877e8e1eb1e6d69ae0b4")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "scribble-lib" "rackunit-lib"))
          (dependency-names . ("base" "scribble-lib" "rackunit-lib"))
          (description
           .
           "Diffs s-expressions based on Levenshtein-like edit distance.")
          (implies . ())
          (last-checked . 1557339776)
          (last-edit . 1384896424)
          (last-updated . 1502816426)
          (modules
           .
           ((lib "sexp-diff/sexp-diff.scrbl") (lib "sexp-diff/main.rkt")))
          (name . "sexp-diff")
          (nix-sha256
           .
           "0wjdz3kb2f5hbb1ha8x2ksgc3ccb5pfwh75m6fpnkjy9vdv1dq8a")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (:no-tag: . #t)
                   (author:stamourv@racket-lang.org . #t)
                   (ring:1 . #t)))
          (source . "github://github.com/stamourv/sexp-diff/master")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "5b5034c7e6b930002870877e8e1eb1e6d69ae0b4")
                          (source
                           .
                           "github://github.com/stamourv/sexp-diff/master")
                          (source_url
                           .
                           "http://github.com/stamourv/sexp-diff/tree/master")))))))
 ("sfont"
  .
  #hasheq((author . "capo.daniele@gmail.com")
          (authors . ("capo.daniele@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "sfont" "doc/sfont@sfont/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/sfont.txt")
                 (test-failure-log . "server/built/test-fail/sfont.txt")
                 (test-success-log . #f)))
          (checksum . "18b842c24164b4cda04cd042e2a9ce608445a14d")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "draw-lib"
            "gui-lib"
            "slideshow-lib"
            "pict-doc"
            "racket-doc"
            "scribble-lib"))
          (dependency-names
           .
           ("base"
            "draw-lib"
            "gui-lib"
            "slideshow-lib"
            "pict-doc"
            "racket-doc"
            "scribble-lib"))
          (description
           .
           "A package for manipulating and creating fonts in Racket.")
          (implies . ())
          (last-checked . 1557339776)
          (last-edit . 1384683843)
          (last-updated . 1502816426)
          (modules
           .
           ((lib "sfont/scribblings/sfont.scrbl")
            (lib "sfont/navigator.rkt")
            (lib "sfont/space.rkt")
            (lib "sfont/utilities.rkt")
            (lib "sfont-examples/fontwrite-random.rkt")
            (lib "sfont/export/writepfa.rkt")
            (lib "sfont/private/geom/bounding-box.rkt")
            (lib "sfont/private/fontmath/info-kern-math.rkt")
            (lib "sfont/main.rkt")
            (lib "sfont/private/geom/vec.rkt")
            (lib "sfont/private/ufo/ufo-def.rkt")
            (lib "sfont/private/gui/simple-frames.rkt")
            (lib "sfont/export/ufopfa.rkt")
            (lib "sfont/private/fontpict.rkt")
            (lib "sfont/private/fontmath/math.rkt")
            (lib "sfont/private/ufo/plists.rkt")
            (lib "sfont/private/geom/geometric-generic.rkt")
            (lib "sfont/private/geom/bezier.rkt")
            (lib "sfont/private/ufo/names.rkt")
            (lib "sfont-examples/fontwrite-contours.rkt")
            (lib "sfont-examples/fontwrite-gradient.rkt")
            (lib "sfont-examples/fontwrite-chart.rkt")
            (lib "sfont/private/parametric/path.rkt")
            (lib "sfont/private/gui/draw-property.rkt")
            (lib "sfont/private/spacing/space.rkt")
            (lib "sfont-examples/fontwrite-equalizer.rkt")
            (lib "sfont/geometry.rkt")
            (lib "sfont/glyphlist.rkt")
            (lib "sfont/private/fontmath/interpolables.rkt")
            (lib "sfont/windows.rkt")
            (lib "sfont/parametric.rkt")
            (lib "sfont/math.rkt")
            (lib "sfont/private/parametric/fontwriter.rkt")
            (lib "sfont/properties.rkt")
            (lib "sfont/export/type1.rkt")
            (lib "sfont/private/ufo/ufo-read-write.rkt")
            (lib "sfont/private/spacing/kern.rkt")
            (lib "sfont-examples/fontwrite-square.rkt")))
          (name . "sfont")
          (nix-sha256
           .
           "19hscm196dv0aqgmcxxqgfr1p583a1qa3zsq62rd6fk9177jzvq6")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:capo.daniele@gmail.com . #t)
                   (fonts . #t)
                   (graphics . #t)
                   (ring:1 . #t)))
          (source . "github://github.com/danielecapo/sfont/master")
          (tags . ("fonts" "graphics"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "18b842c24164b4cda04cd042e2a9ce608445a14d")
                          (source
                           .
                           "github://github.com/danielecapo/sfont/master")
                          (source_url
                           .
                           "http://github.com/danielecapo/sfont/tree/master")))))))
 ("sgl"
  .
  #hash((author . "jay@racket-lang.org")
        (checksum . "fe90b545bd3c78f370ad3640ceb9789577c9d0c8")
        (dependencies
         .
         ("scheme-lib"
          "base"
          "compatibility-lib"
          "gui-lib"
          "draw-doc"
          "gui-doc"
          "racket-doc"
          "scribble-lib"))
        (dependency-names
         .
         ("scheme-lib"
          "base"
          "compatibility-lib"
          "gui-lib"
          "draw-doc"
          "gui-doc"
          "racket-doc"
          "scribble-lib"))
        (description . "jay@racket-lang.org")
        (modules . ())
        (name . "sgl")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/sgl.zip")
        (tags . ())))
 ("sha"
  .
  #hasheq((author . "greghendershott@gmail.com")
          (authors . ("greghendershott@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "sha" "doc/sha@sha/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/sha.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/sha.txt")))
          (checksum . "6781b30549cd53fd4c77fb8c2cd44b13e1b2811c")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "racket-doc" "rackunit-lib" "scribble-lib"))
          (dependency-names
           .
           ("base" "racket-doc" "rackunit-lib" "scribble-lib"))
          (description . "SHA-1 and SHA-2, via FFI to OpenSSL.")
          (implies . ())
          (last-checked . 1557339776)
          (last-edit . 1396443625)
          (last-updated . 1542901994)
          (modules
           .
           ((lib "sha/bytes.rkt") (lib "sha/main.rkt") (lib "sha/sha.scrbl")))
          (name . "sha")
          (nix-sha256
           .
           "1y7ifjg7aca85dgmh4vhn0m8djycn09b1570x3mdcc034dqv2l91")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:greghendershott@gmail.com . #t)
                   (crypto . #t)
                   (ring:1 . #t)
                   (web . #t)))
          (source . "github://github.com/greghendershott/sha/master")
          (tags . ("crypto" "web"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "6781b30549cd53fd4c77fb8c2cd44b13e1b2811c")
                          (source
                           .
                           "github://github.com/greghendershott/sha/master")
                          (source_url
                           .
                           "http://github.com/greghendershott/sha/tree/master")))))))
 ("shell-completion"
  .
  #hash((author
         .
         "samth@racket-lang.org sstrickl@racket-lang.org stamourv@racket-lang.org")
        (checksum . "72005889b82bdbc29a4ec916a181252d510bc491")
        (dependencies . ("base"))
        (dependency-names . ("base"))
        (description
         .
         "samth@racket-lang.org sstrickl@racket-lang.org stamourv@racket-lang.org")
        (modules . ())
        (name . "shell-completion")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/shell-completion.zip")
        (tags . ())))
 ("shell-pipeline"
  .
  #hasheq((author . "willghatch@gmail.com")
          (authors . ("willghatch@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "shell-pipeline"
                    "doc/shell-pipeline@shell-pipeline/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/shell-pipeline.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/shell-pipeline.txt")))
          (checksum . "77363527621054ca4e64eda4f542a5c45f7b4861")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "scribble-lib" "racket-doc" "rackunit-lib"))
          (dependency-names
           .
           ("base" "scribble-lib" "racket-doc" "rackunit-lib"))
          (description . "Shell pipeline library")
          (implies . ())
          (last-checked . 1557339776)
          (last-edit . 1523468959)
          (last-updated . 1556575502)
          (modules
           .
           ((lib "shell/utils/bourne-expansion-utils.rkt")
            (lib "shell/private/define-simple-alias.rkt")
            (lib "shell/private/pipeline-operators.rkt")
            (lib "shell/private/test/test-pipeline.rkt")
            (lib "shell/scribblings/mixed-pipeline.scrbl")
            (lib "shell/pipeline.rkt")
            (lib "shell/private/mostly-structs.rkt")
            (lib "shell/private/pipeline-operator-transform.rkt")
            (lib "shell/private/pipeline-operator-default.rkt")
            (lib "shell/private/subprocess-pipeline.rkt")
            (lib "shell/private/good-unix-operator.rkt")
            (lib "shell/demo/more-pipeline-operators.rkt")
            (lib "shell/scribblings/pipeline-macro.scrbl")
            (lib "shell/private/pipeline-operator-detect.rkt")
            (lib "shell/private/pipeline-macro-logicwrapper.rkt")
            (lib "shell/private/test/test-pipeline-macro.rkt")
            (lib "shell/scribblings/shell-pipeline.scrbl")
            (lib "shell/pipeline-macro.rkt")
            (lib "shell/private/define-pipeline-alias.rkt")
            (lib "shell/private/pipeline-alias.rkt")
            (lib "shell/private/filter-keyword-args.rkt")
            (lib "shell/private/mixed-pipeline.rkt")
            (lib "shell/private/test/test-mixed-pipeline.rkt")
            (lib "shell/private/pipeline-macro-parse.rkt")
            (lib "shell/scribblings/pipeline.scrbl")
            (lib "shell/private/misc-utils.rkt")
            (lib "shell/mixed-pipeline.rkt")))
          (name . "shell-pipeline")
          (nix-sha256
           .
           "1jliy66bs5kgxyck7yg0nr4hn7cp9ifspvhn6vr4sgwmk3d0l4jh")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:willghatch@gmail.com . #t)
                   (ring:1 . #t)
                   (shell . #t)
                   (unix . #t)))
          (source
           .
           "https://github.com/willghatch/racket-rash.git?path=shell-pipeline")
          (tags . ("shell" "unix"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "77363527621054ca4e64eda4f542a5c45f7b4861")
                          (source
                           .
                           "https://github.com/willghatch/racket-rash.git?path=shell-pipeline")
                          (source_url
                           .
                           "https://github.com/willghatch/racket-rash.git?path=shell-pipeline")))))))
 ("shootout"
  .
  #hasheq((author . "neil@neilvandyke.org")
          (authors . ("neil@neilvandyke.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "shootout" "doc/shootout@shootout/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/shootout.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/shootout.txt")))
          (checksum . "8d4454844112861f4baeb72d8ed6b22e53c28448")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "mcfly" "racket-doc" "scribble-lib"))
          (dependency-names . ("base" "mcfly" "racket-doc" "scribble-lib"))
          (description . "Expression Performance Comparison")
          (implies . ())
          (last-checked . 1557339776)
          (last-edit . 1456797982)
          (last-updated . 1502816427)
          (modules
           .
           ((lib "shootout/shootout.scrbl") (lib "shootout/main.rkt")))
          (name . "shootout")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (:no-tag: . #t)
                   (author:neil@neilvandyke.org . #t)
                   (ring:1 . #t)))
          (source . "http://www.neilvandyke.org/racket/shootout.zip")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "8d4454844112861f4baeb72d8ed6b22e53c28448")
                          (source
                           .
                           "http://www.neilvandyke.org/racket/shootout.zip")
                          (source_url
                           .
                           "http://www.neilvandyke.org/racket/shootout.zip")))))))
 ("sicp"
  .
  #hasheq((author . "jensaxel@soegaard.net")
          (authors . ("jensaxel@soegaard.net"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "sicp-manual" "doc/sicp-manual@sicp/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/sicp.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/sicp.txt")))
          (checksum . "dce62d44790e731b00d53c5acb57aa4410a674a3")
          (checksum-error . #f)
          (conflicts . ())
          (date-added . 1556729468)
          (dependencies
           .
           ("base"
            "draw-lib"
            "r5rs-lib"
            "rackunit-lib"
            "snip-lib"
            "draw-doc"
            "gui-doc"
            "r5rs-doc"
            "racket-doc"
            "scribble-lib"))
          (dependency-names
           .
           ("base"
            "draw-lib"
            "r5rs-lib"
            "rackunit-lib"
            "snip-lib"
            "draw-doc"
            "gui-doc"
            "r5rs-doc"
            "racket-doc"
            "scribble-lib"))
          (description . "SICP Support for DrRacket")
          (implies . ())
          (last-checked . 1557339777)
          (last-edit . 1556729468)
          (last-updated . 1556366670)
          (modules
           .
           ((lib "sicp-pict/main.rkt")
            (lib "sicp-doc/sicp-pict.scrbl")
            (lib "sicp/lang/reader.rkt")
            (lib "sicp-pict/test/tests.rkt")
            (lib "sicp-doc/sicp-manual.scrbl")
            (lib "sicp-doc/contributors.scrbl")
            (lib "sicp-doc/installation.scrbl")
            (lib "sicp-doc/sicp.scrbl")
            (lib "sicp/test/amb.rkt")
            (lib "sicp-doc/external-links.scrbl")
            (lib "sicp/main.rkt")))
          (name . "sicp")
          (nix-sha256
           .
           "0ps1zbd5vhy50if6g9skmpx12v8lmvdirhy14bfvgxs1k3zgw950")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:jensaxel@soegaard.net . #t)
                   (books . #t)
                   (pictures . #t)
                   (ring:1 . #t)
                   (scheme . #t)
                   (sicp . #t)
                   (textbook . #t)))
          (source . "https://github.com/sicp-lang/sicp.git")
          (tags . ("books" "pictures" "scheme" "sicp" "textbook"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "dce62d44790e731b00d53c5acb57aa4410a674a3")
                          (source . "https://github.com/sicp-lang/sicp.git")
                          (source_url
                           .
                           "https://github.com/sicp-lang/sicp.git")))))))
 ("signature"
  .
  #hasheq((author . "scott@thinkmoore.net")
          (authors . ("scott@thinkmoore.net"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "signature" "doc/signature@signature/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/signature.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/signature.txt")))
          (checksum . "c8be60858474259d27f94b23214f7397d9653eb1")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("kw-utils"
            "racklog"
            "base"
            "rackunit-lib"
            "scribble-lib"
            "racket-doc"))
          (dependency-names
           .
           ("kw-utils"
            "racklog"
            "base"
            "rackunit-lib"
            "scribble-lib"
            "racket-doc"))
          (description
           .
           "Syntax and utilities for writing function contracts as signatures")
          (implies . ())
          (last-checked . 1557339777)
          (last-edit . 1493742329)
          (last-updated . 1502816428)
          (modules
           .
           ((lib "signature/syntax.rkt")
            (lib "signature/utils.rkt")
            (lib "signature/scribblings/signature.scrbl")
            (lib "signature/main.rkt")))
          (name . "signature")
          (nix-sha256
           .
           "1wk5d61npy1j2iyf636ny069mmd02nc9n28g05qba6x75dzcjv33")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:scott@thinkmoore.net . #t)
                   (contracts . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/thinkmoore/signature")
          (tags . ("contracts"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "c8be60858474259d27f94b23214f7397d9653eb1")
                          (source . "git://github.com/thinkmoore/signature")
                          (source_url
                           .
                           "http://github.com/thinkmoore/signature/tree/master")))))))
 ("simple-barcode"
  .
  #hasheq((author . "chenxiao770117@gmail.com")
          (authors . ("chenxiao770117@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "simple-barcode"
                    "doc/simple-barcode@simple-barcode/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/simple-barcode.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/simple-barcode.txt")))
          (checksum . "ab70e02811d16319002ba119df674c30d2b68845")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base" "rackunit-lib" "draw-lib" "racket-doc" "scribble-lib"))
          (dependency-names
           .
           ("base" "rackunit-lib" "draw-lib" "racket-doc" "scribble-lib"))
          (description . "Barcode tool")
          (implies . ())
          (last-checked . 1557339777)
          (last-edit . 1545374414)
          (last-updated . 1502816428)
          (modules
           .
           ((lib "simple-barcode/example/example.rkt")
            (lib "simple-barcode/lib/code39-lib.rkt")
            (lib "simple-barcode/main.rkt")
            (lib "simple-barcode/tests/main/main-test.rkt")
            (lib "simple-barcode/tests/code39/code39-test.rkt")
            (lib "simple-barcode/simple-barcode.scrbl")
            (lib "simple-barcode/tests/share-test.rkt")
            (lib "simple-barcode/tests/code128/code128-test.rkt")
            (lib "simple-barcode/lib/share.rkt")
            (lib "simple-barcode/tests/ean13/ean13-test.rkt")
            (lib "simple-barcode/lib/ean13-lib.rkt")
            (lib "simple-barcode/lib/code128-lib.rkt")))
          (name . "simple-barcode")
          (nix-sha256
           .
           "06aavdzr8s9xds6hhb459x486sl4n8vhyl3405l4yf5mxjnd6z01")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:chenxiao770117@gmail.com . #t)
                   (barcode . #t)
                   (ring:1 . #t)))
          (source . "https://github.com/simmone/racket-simple-barcode.git")
          (tags . ("barcode"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "ab70e02811d16319002ba119df674c30d2b68845")
                          (source
                           .
                           "https://github.com/simmone/racket-simple-barcode.git")
                          (source_url
                           .
                           "https://github.com/simmone/racket-simple-barcode.git")))))))
 ("simple-csv"
  .
  #hasheq((author . "pragun.goyal@gmail.com")
          (authors . ("pragun.goyal@gmail.com"))
          (build
           .
           #hash((conflicts-log . "conflicts.txt")
                 (dep-failure-log . "server/built/deps/simple-csv.txt")
                 (docs . (("extract" "csv" "doc/csv@simple-csv/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/simple-csv.txt")
                 (test-failure-log . "server/built/test-fail/simple-csv.txt")
                 (test-success-log . #f)))
          (checksum . "f71d9b92826203cacf483ab5b2379fd18f8585d3")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ())
          (dependency-names . ())
          (description . "")
          (implies . ())
          (last-checked . 1557339777)
          (last-edit . 1461266728)
          (last-updated . 1502816429)
          (modules
           .
           ((lib "simple-csv/csv-reader.rkt")
            (lib "simple-csv/scribblings/csv.scrbl")
            (lib "simple-csv/csv.rkt")
            (lib "simple-csv/csv-writer.rkt")))
          (name . "simple-csv")
          (nix-sha256
           .
           "1yspfhdry63w9dqn5iqhf0v7cqid06c1awqv70vgxcc5sfs3v03v")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-conflicts: . #t)
                   (:build-dep-fail: . #t)
                   (:build-success: . #t)
                   (:docs-error: . #t)
                   (:docs: . #t)
                   (:no-desc: . #t)
                   (author:pragun.goyal@gmail.com . #t)
                   (csv . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/pragun/simple-csv")
          (tags . ("csv"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "f71d9b92826203cacf483ab5b2379fd18f8585d3")
                          (source . "git://github.com/pragun/simple-csv")
                          (source_url
                           .
                           "http://github.com/pragun/simple-csv/tree/master")))))))
 ("simple-http"
  .
  #hasheq((author . "info@v25media.com")
          (authors . ("info@v25media.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "simple-http"
                    "doc/simple-http@simple-http/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/simple-http.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/simple-http.txt")))
          (checksum . "ff008b634872022b7960a368d61133b8860bad38")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base" "rackunit-lib" "html-parsing" "scribble-lib" "racket-doc"))
          (dependency-names
           .
           ("base" "rackunit-lib" "html-parsing" "scribble-lib" "racket-doc"))
          (description
           .
           "Very small lib for making HTTP requests, usually to APIs.")
          (implies . ())
          (last-checked . 1557339777)
          (last-edit . 1494770663)
          (last-updated . 1550519954)
          (modules
           .
           ((lib "simple-http/main.rkt")
            (lib "simple-http/scribblings/simple-http.scrbl")))
          (name . "simple-http")
          (nix-sha256
           .
           "18k1nbnba257zr7cwa4n4g33ij06lip2xsmdrf658yyx3m662gdf")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:info@v25media.com . #t)
                   (http . #t)
                   (net . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/DarrenN/simple-http")
          (tags . ("http" "net"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "ff008b634872022b7960a368d61133b8860bad38")
                          (source . "git://github.com/DarrenN/simple-http")
                          (source_url
                           .
                           "http://github.com/DarrenN/simple-http/tree/master")))))))
 ("simple-oauth2"
  .
  #hasheq((author . "johnstonskj@gmail.com")
          (authors . ("johnstonskj@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "simple-oauth2"
                    "doc/simple-oauth2@simple-oauth2/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/simple-oauth2.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/simple-oauth2.txt")))
          (checksum . "5393058265f20669ab3c683e4aa660f80f0e0d30")
          (checksum-error . #f)
          (conflicts . ())
          (date-added . 1549389191)
          (dependencies
           .
           ("base"
            "crypto-lib"
            "dali"
            "net-jwt"
            "threading"
            "web-server-lib"
            "rackunit-lib"
            "rackunit-spec"
            "scribble-lib"
            "racket-doc"
            "racket-index"
            "sandbox-lib"
            "cover-coveralls"))
          (dependency-names
           .
           ("base"
            "crypto-lib"
            "dali"
            "net-jwt"
            "threading"
            "web-server-lib"
            "rackunit-lib"
            "rackunit-spec"
            "scribble-lib"
            "racket-doc"
            "racket-index"
            "sandbox-lib"
            "cover-coveralls"))
          (description . "Simple OAuth 2.0 client implementation")
          (implies . ())
          (last-checked . 1557339777)
          (last-edit . 1549389191)
          (last-updated . 1550267455)
          (modules
           .
           ((lib "oauth2/private/external-ip.rkt")
            (lib "oauth2/scribblings/simple-oauth2.scrbl")
            (lib "oauth2/tools/common.rkt")
            (lib "oauth2/client.rkt")
            (lib "oauth2/private/logging.rkt")
            (lib "oauth2/client/pkce.rkt")
            (lib "oauth2/storage/config.rkt")
            (lib "oauth2/private/storage.rkt")
            (lib "oauth2/tools/fitbit.rkt")
            (lib "oauth2/scribblings/storage.scrbl")
            (lib "oauth2/client/flow.rkt")
            (lib "oauth2/scribblings/oauth2.scrbl")
            (lib "oauth2/tests/test-doc-complete.rkt")
            (lib "oauth2/main.rkt")
            (lib "oauth2/scribblings/client.scrbl")
            (lib "oauth2/tools/livongo.rkt")
            (lib "oauth2/storage/clients.rkt")
            (lib "oauth2/private/http.rkt")
            (lib "oauth2/private/privacy.rkt")
            (lib "oauth2/storage/tokens.rkt")
            (lib "oauth2/private/template.rkt")
            (lib "oauth2/private/redirect-server.rkt")
            (lib "oauth2/scribblings/tools.scrbl")))
          (name . "simple-oauth2")
          (nix-sha256
           .
           "0r4x8pmc08ax41jijblwfv9ml0npnv8nafphx1zdskh1csnakmbl")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:johnstonskj@gmail.com . #t)
                   (oauth . #t)
                   (ring:2 . #t)))
          (source . "https://github.com/johnstonskj/simple-oauth2.git")
          (tags . ("oauth"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "5393058265f20669ab3c683e4aa660f80f0e0d30")
                          (source
                           .
                           "https://github.com/johnstonskj/simple-oauth2.git")
                          (source_url
                           .
                           "https://github.com/johnstonskj/simple-oauth2.git")))))))
 ("simple-qr"
  .
  #hasheq((author . "chenxiao770117@gmail.com")
          (authors . ("chenxiao770117@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "simple-qr" "doc/simple-qr@simple-qr/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/simple-qr.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/simple-qr.txt")))
          (checksum . "084986fd04eb5ba35abc954f693bf4c16b4c74b8")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "rackunit-lib"
            "draw-lib"
            "racket-doc"
            "scribble-lib"
            "reed-solomon"))
          (dependency-names
           .
           ("base"
            "rackunit-lib"
            "draw-lib"
            "racket-doc"
            "scribble-lib"
            "reed-solomon"))
          (description . "QR code tool")
          (implies . ())
          (last-checked . 1557339777)
          (last-edit . 1545374444)
          (last-updated . 1548824314)
          (modules
           .
           ((lib "simple-qr/share/separator.rkt")
            (lib "simple-qr/write/lib/func/code-info/code-info-dic.rkt")
            (lib "simple-qr/tests/write/func/remainder-bits-func-test.rkt")
            (lib
             "simple-qr/read/lib/express/exclude-version-information/exclude-version-information.rkt")
            (lib
             "simple-qr/write/lib/express/add-indicator/add-indicator.rkt")
            (lib "simple-qr/read/lib/express/data-recovery/data-recovery.rkt")
            (lib "simple-qr/tests/write/data-encoding-test.rkt")
            (lib
             "simple-qr/read/lib/express/interleave-data/interleave-data.rkt")
            (lib "simple-qr/share/version-information.rkt")
            (lib
             "simple-qr/write/lib/express/finder-pattern/finder-pattern.rkt")
            (lib
             "simple-qr/write/lib/express/format-information/format-information.rkt")
            (lib "simple-qr/write/lib/express/express.rkt")
            (lib "simple-qr/tests/test-cases/case1/case1-test.rkt")
            (lib "simple-qr/tests/share/alignment-pattern-test.rkt")
            (lib
             "simple-qr/write/lib/express/timing-pattern/timing-pattern.rkt")
            (lib "simple-qr/write/lib/express/masked/masked.rkt")
            (lib
             "simple-qr/write/lib/express/group-decimal-list/group-decimal-list.rkt")
            (lib
             "simple-qr/write/lib/express/alignment-pattern/alignment-pattern.rkt")
            (lib "simple-qr/write/lib/func/func.rkt")
            (lib "simple-qr/share/func.rkt")
            (lib "simple-qr/tests/write/func/capacity-func-test.rkt")
            (lib "simple-qr/write/lib/express/input/input.rkt")
            (lib
             "simple-qr/read/lib/express/exclude-timing-pattern/exclude-timing-pattern.rkt")
            (lib "simple-qr/share/code-info/code-info-dic.rkt")
            (lib "simple-qr/share/error-level.rkt")
            (lib "simple-qr/share/timing-pattern.rkt")
            (lib "simple-qr/write/lib/func/code-log/code-log-func.rkt")
            (lib "simple-qr/share/data-group.rkt")
            (lib "simple-qr/read/lib/express/final-string/final-string.rkt")
            (lib "simple-qr/tests/share/timing-pattern-test.rkt")
            (lib "simple-qr/write/lib/express/separator/separator.rkt")
            (lib "simple-qr/share/format-information.rkt")
            (lib "simple-qr/tests/write/func/code-log-func-test.rkt")
            (lib "simple-qr/write/lib/func/poly/poly-dic-func.rkt")
            (lib "simple-qr/tests/share/fill-data-test.rkt")
            (lib
             "simple-qr/write/lib/express/add-terminator/add-terminator.rkt")
            (lib "simple-qr/share/dark-module.rkt")
            (lib "simple-qr/main.rkt")
            (lib
             "simple-qr/write/lib/alignment-pattern/alignment-pattern.rkt")
            (lib "simple-qr/tests/write/func/poly-dic-func-test.rkt")
            (lib "simple-qr/tests/write/func/capacity-dic-test.rkt")
            (lib "simple-qr/tests/write/mask-data-test.rkt")
            (lib "simple-qr/read/lib/express/unmask-data/unmask-data.rkt")
            (lib "simple-qr/write/lib/mask-data/mask-data.rkt")
            (lib
             "simple-qr/write/lib/express/reserved-format-information/reserved-format-information.rkt")
            (lib "simple-qr/write/lib/express/header.rkt")
            (lib "simple-qr/read/lib/express/origin-bits/origin-bits.rkt")
            (lib "simple-qr/write/lib/dark-module/dark-module.rkt")
            (lib "simple-qr/write/lib/func/code-log/code-log-dic.rkt")
            (lib
             "simple-qr/read/lib/express/finder-pattern-center-points/finder-pattern-center-points.rkt")
            (lib "simple-qr/write/lib/express/dark-module/dark-module.rkt")
            (lib "simple-qr/tests/write/func/code-info-func-test.rkt")
            (lib "simple-qr/share/code-info/code-info-func.rkt")
            (lib "simple-qr/write/lib/func/code-log/transform-code-log.rkt")
            (lib "simple-qr/share/finder-pattern.rkt")
            (lib "simple-qr/read/lib/express/rotate-ratio/rotate-ratio.rkt")
            (lib
             "simple-qr/write/lib/func/remainder-bits/remainder-bits-dic.rkt")
            (lib
             "simple-qr/read/lib/express/exclude-alignment-pattern/exclude-alignment-pattern.rkt")
            (lib
             "simple-qr/read/lib/express/exclude-format-information/exclude-format-information.rkt")
            (lib "simple-qr/share/mask-data.rkt")
            (lib "simple-qr/write/lib/express/overview/overview.rkt")
            (lib
             "simple-qr/write/lib/express/version-information/version-information.rkt")
            (lib "simple-qr/write/lib/express/start/start.rkt")
            (lib "simple-qr/scribble/simple-qr.scrbl")
            (lib "simple-qr/write/lib/func/capacity/transform.rkt")
            (lib
             "simple-qr/read/lib/express/exclude-finder-pattern/exclude-finder-pattern.rkt")
            (lib "simple-qr/tests/write/func/func-test.rkt")
            (lib
             "simple-qr/write/lib/express/interleave-data-group/interleave-data-group.rkt")
            (lib
             "simple-qr/write/lib/version-information/version-information.rkt")
            (lib "simple-qr/read/qr-read.rkt")
            (lib "simple-qr/tests/share/character-bit-width-test.rkt")
            (lib "simple-qr/read/lib/express/trimed-bits/trimed-bits.rkt")
            (lib
             "simple-qr/write/lib/func/remainder-bits/remainder-bits-func.rkt")
            (lib "simple-qr/share/alignment-pattern.rkt")
            (lib
             "simple-qr/read/lib/express/basic-information/basic-information.rkt")
            (lib "simple-qr/share/data-encoding.rkt")
            (lib "simple-qr/share/fill-data.rkt")
            (lib "simple-qr/write/lib/express/final/final.rkt")
            (lib "simple-qr/share/character-bit-width.rkt")
            (lib "simple-qr/write/lib/timing-pattern/timing-pattern.rkt")
            (lib "simple-qr/write/lib/express/repeat-pad/repeat-pad.rkt")
            (lib "simple-qr/tests/read/matrix-rotate-test.rkt")
            (lib "simple-qr/write/lib/func/code-info/code-info-func.rkt")
            (lib "simple-qr/read/lib/express/header.rkt")
            (lib "simple-qr/write/lib/express/fill-data/fill-data.rkt")
            (lib
             "simple-qr/write/lib/express/append-remainder/append-remainder.rkt")
            (lib "simple-qr/write/lib/func/capacity/capacity-dic.rkt")
            (lib "simple-qr/read/lib/lib.rkt")
            (lib
             "simple-qr/read/lib/express/exclude-dark-module/exclude-dark-module.rkt")
            (lib "simple-qr/write/lib/fill-data/fill-data.rkt")
            (lib
             "simple-qr/write/lib/format-information/format-information.rkt")
            (lib "simple-qr/read/lib/express/input/input.rkt")
            (lib "simple-qr/write/lib/data-encoding/alphanumeric.rkt")
            (lib "simple-qr/tests/share/data-group-test.rkt")
            (lib "simple-qr/write/lib/express/error-code/error-code.rkt")
            (lib "simple-qr/write/qr-write.rkt")
            (lib "simple-qr/read/lib/express/bw-bits/bw-bits.rkt")
            (lib "simple-qr/example/example.rkt")
            (lib "simple-qr/write/lib/express/data-trace/data-trace.rkt")
            (lib
             "simple-qr/read/lib/express/exclude-separator/exclude-separator.rkt")
            (lib "simple-qr/tests/read/lib-test.rkt")
            (lib "simple-qr/tests/read/qr-read-test.rkt")
            (lib "simple-qr/read/lib/express/decoded-data/decoded-data.rkt")
            (lib "simple-qr/write/lib/express/decimal-list/decimal-list.rkt")
            (lib "simple-qr/write/lib/separator/separator.rkt")
            (lib "simple-qr/write/lib/express/data-bits/data-bits.rkt")
            (lib "simple-qr/write/lib/express/mask-list/mask-list.rkt")
            (lib "simple-qr/read/lib/express/express.rkt")
            (lib "simple-qr/write/lib/func/capacity/capacity-func.rkt")
            (lib
             "simple-qr/write/lib/express/add-multiple8/add-multiple8.rkt")
            (lib "simple-qr/read/lib/express/rotated-bits/rotated-bits.rkt")
            (lib "simple-qr/write/lib/data-encoding/data-encoding.rkt")
            (lib "simple-qr/write/lib/finder-pattern/finder-pattern.rkt")
            (lib "simple-qr/tests/share/func-test.rkt")
            (lib "simple-qr/read/matrix-rotate/lib.rkt")
            (lib "simple-qr/read/lib/express/final-bits/final-bits.rkt")))
          (name . "simple-qr")
          (nix-sha256
           .
           "1h9vym331gjmrnr45zafknklrqc4vibrzzd9fiywrz62abvra2lv")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:chenxiao770117@gmail.com . #t)
                   (qr . #t)
                   (ring:1 . #t)))
          (source . "https://github.com/simmone/racket-simple-qr.git")
          (tags . ("qr"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "084986fd04eb5ba35abc954f693bf4c16b4c74b8")
                          (source
                           .
                           "https://github.com/simmone/racket-simple-qr.git")
                          (source_url
                           .
                           "https://github.com/simmone/racket-simple-qr.git")))))))
 ("simple-xlsx"
  .
  #hasheq((author . "chenxiao770117@gmail.com")
          (authors . ("chenxiao770117@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "simple-xlsx"
                    "doc/simple-xlsx@simple-xlsx/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/simple-xlsx.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/simple-xlsx.txt")))
          (checksum . "bd151b3ffc996728b0c9c1333481051641cbba08")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "rackunit-lib"
            "at-exp-lib"
            "racket-doc"
            "scribble-lib"
            "rackunit-lib"
            "at-exp-lib"))
          (dependency-names
           .
           ("base"
            "rackunit-lib"
            "at-exp-lib"
            "racket-doc"
            "scribble-lib"
            "rackunit-lib"
            "at-exp-lib"))
          (description . "Xlsx File tool")
          (implies . ())
          (last-checked . 1557339777)
          (last-edit . 1545374473)
          (last-updated . 1550802141)
          (modules
           .
           ((lib "simple-xlsx/tests/write-test-cases/write-test.rkt")
            (lib "simple-xlsx/writer/content-type/content-type.rkt")
            (lib "simple-xlsx/tests/read-test-cases/test3/test3-test.rkt")
            (lib "simple-xlsx/writer/xl/_rels/workbook-xml-rels.rkt")
            (lib "simple-xlsx/tests/writer/xl/styles/empty-test.rkt")
            (lib "simple-xlsx/tests/read-test-cases/test5/test5-test.rkt")
            (lib "simple-xlsx/writer/xl/drawings/drawing.rkt")
            (lib "simple-xlsx/writer/xl/charts/line-chart.rkt")
            (lib
             "simple-xlsx/tests/writer/xl/worksheets/worksheet/worksheet-test.rkt")
            (lib "simple-xlsx/writer.rkt")
            (lib "simple-xlsx/tests/writer/docProps/docprops-core-test.rkt")
            (lib "simple-xlsx/lib/lib.rkt")
            (lib "simple-xlsx/writer/xl/styles/styles.rkt")
            (lib "simple-xlsx/tests/xlsx/mix-style-test.rkt")
            (lib "simple-xlsx/tests/writer/xl/charsheets/chartsheet-test.rkt")
            (lib "simple-xlsx/tests/writer/xl/workbook-test.rkt")
            (lib "simple-xlsx/writer/xl/charts/pie-chart.rkt")
            (lib "simple-xlsx/tests/writer/xl/styles/borders-test.rkt")
            (lib "simple-xlsx/tests/writer/xl/sharedStrings-test.rkt")
            (lib "simple-xlsx/tests/writer/xl/charts/pie-chart-test.rkt")
            (lib "simple-xlsx/reader.rkt")
            (lib "simple-xlsx/writer/docProps/docprops-core.rkt")
            (lib "simple-xlsx/tests/read-test-cases/test2/test2-test.rkt")
            (lib "simple-xlsx/tests/writer/docProps/docprops-app-test.rkt")
            (lib "simple-xlsx/writer/xl/charts/chart.rkt")
            (lib "simple-xlsx/tests/writer/xl/charts/chart-test.rkt")
            (lib "simple-xlsx/tests/xlsx/xlsx-test.rkt")
            (lib "simple-xlsx/writer/xl/workbook.rkt")
            (lib "simple-xlsx/tests/read-test-cases/test11/test11-test.rkt")
            (lib "simple-xlsx/tests/writer/xl/styles/fills-test.rkt")
            (lib
             "simple-xlsx/tests/writer/content-type/content-type-test.rkt")
            (lib
             "simple-xlsx/tests/writer/xl/_rels/workbook-xml-rels-test.rkt")
            (lib "simple-xlsx/tests/read-test-cases/test8/test8-test.rkt")
            (lib
             "simple-xlsx/tests/writer/xl/drawings/_rels/drawing-rels-test.rkt")
            (lib "simple-xlsx/tests/read-test-cases/test6/test6-test.rkt")
            (lib "simple-xlsx/writer/xl/worksheets/_rels/rels.rkt")
            (lib "simple-xlsx/tests/writer/xl/styles/styles-test.rkt")
            (lib "simple-xlsx/main.rkt")
            (lib "simple-xlsx/writer/xl/charts/bar-chart.rkt")
            (lib "simple-xlsx/writer/xl/theme/theme.rkt")
            (lib "simple-xlsx/tests/read-test-cases/test13/test13-test.rkt")
            (lib "simple-xlsx/tests/xlsx/numFmt-style-test.rkt")
            (lib "simple-xlsx/tests/read-test-cases/test4/test4-test.rkt")
            (lib "simple-xlsx/tests/read-test-cases/test9/test9-test.rkt")
            (lib "simple-xlsx/writer/xl/chartsheets/chartsheet.rkt")
            (lib "simple-xlsx/tests/lib/lib-test.rkt")
            (lib "simple-xlsx/writer/xl/sharedStrings.rkt")
            (lib "simple-xlsx/tests/xlsx/xlsx-lib-test.rkt")
            (lib
             "simple-xlsx/tests/writer/xl/charsheets/_rels/chartsheet-rels-test.rkt")
            (lib "simple-xlsx/writer/xl/drawings/_rels/drawing-rels.rkt")
            (lib "simple-xlsx/tests/xlsx/font-style-test.rkt")
            (lib "simple-xlsx/tests/writer/xl/drawings/drawing-test.rkt")
            (lib "simple-xlsx/tests/writer/xl/styles/fonts-test.rkt")
            (lib "simple-xlsx/tests/writer/_rels/rels-test.rkt")
            (lib "simple-xlsx/tests/xlsx/fill-style-test.rkt")
            (lib "simple-xlsx/simple-xlsx.scrbl")
            (lib "simple-xlsx/tests/read-test-cases/test12/test12-test.rkt")
            (lib "simple-xlsx/writer/xl/printerSettings/printerSettings.rkt")
            (lib "simple-xlsx/xlsx/xlsx-lib.rkt")
            (lib "simple-xlsx/example/example.rkt")
            (lib "simple-xlsx/tests/writer/xl/charts/bar-chart-test.rkt")
            (lib "simple-xlsx/writer/docProps/docprops-app.rkt")
            (lib "simple-xlsx/tests/read-test-cases/test1/test1-test.rkt")
            (lib "simple-xlsx/tests/xlsx/border-style-test.rkt")
            (lib
             "simple-xlsx/writer/xl/chartsheets/_rels/chartsheet-rels.rkt")
            (lib "simple-xlsx/tests/writer/xl/styles/cellXfs-test.rkt")
            (lib "simple-xlsx/xlsx/xlsx.rkt")
            (lib "simple-xlsx/writer/xl/cal-chain.rkt")
            (lib "simple-xlsx/tests/read-test-cases/test7/test7-test.rkt")
            (lib "simple-xlsx/xlsx/sheet.rkt")
            (lib "simple-xlsx/tests/writer/xl/charts/line-chart-test.rkt")
            (lib "simple-xlsx/tests/writer/xl/styles/numFmt-test.rkt")
            (lib "simple-xlsx/tests/writer/xl/cal-chain-test.rkt")
            (lib "simple-xlsx/writer/_rels/rels.rkt")
            (lib "simple-xlsx/writer/xl/worksheets/worksheet/worksheet.rkt")
            (lib "simple-xlsx/tests/read-test-cases/test10/test10-test.rkt")))
          (name . "simple-xlsx")
          (nix-sha256
           .
           "04kv4qr5hx8xisp13qa7nw32afcf8vncwwsszi5qnl4d04dg5an3")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:chenxiao770117@gmail.com . #t)
                   (ring:1 . #t)
                   (xlsx . #t)))
          (source . "https://github.com/simmone/racket-simple-xlsx.git")
          (tags . ("xlsx"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "bd151b3ffc996728b0c9c1333481051641cbba08")
                          (source
                           .
                           "https://github.com/simmone/racket-simple-xlsx.git")
                          (source_url
                           .
                           "https://github.com/simmone/racket-simple-xlsx.git")))))))
 ("simply-scheme"
  .
  #hasheq((author . "clements@racket-lang.org dyoo@hashcollision.org")
          (authors . ("clements@racket-lang.org" "dyoo@hashcollision.org"))
          (build
           .
           #hash((conflicts-log . "conflicts.txt")
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("extract"
                    "manual"
                    "doc/manual@simply-scheme/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/simply-scheme.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/simply-scheme.txt")))
          (checksum . "8b8ba2b50d8688c0db30a772c5eac7bb2f6400a7")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "drracket-plugin-lib"
            "gui-lib"
            "string-constants-lib"
            "racket-doc"
            "sandbox-lib"
            "scribble-lib"))
          (dependency-names
           .
           ("base"
            "drracket-plugin-lib"
            "gui-lib"
            "string-constants-lib"
            "racket-doc"
            "sandbox-lib"
            "scribble-lib"))
          (description
           .
           "Danny Yoo's \"Simply Scheme\" package, allowing the use of Racket for the \"Simply Scheme\" curriculum")
          (implies . ())
          (last-checked . 1557339777)
          (last-edit . 1508730653)
          (last-updated . 1508778723)
          (modules
           .
           ((lib "simply-scheme/lang/reader.rkt")
            (lib "simply-scheme/manual.scrbl")
            (lib "simply-scheme/simply-scheme.rkt")
            (lib "simply-scheme/tool.rkt")
            (lib "simply-scheme/private/check-bound.rkt")
            (lib "simply-scheme/main.rkt")))
          (name . "simply-scheme")
          (nix-sha256
           .
           "0zm1m28j301yf72c0iwclqqzbnjwcl4d59ladw35h2ys46p6g48f")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-conflicts: . #t)
                   (:build-success: . #t)
                   (:docs-error: . #t)
                   (:docs: . #t)
                   (:no-tag: . #t)
                   (author:clements@racket-lang.org . #t)
                   (author:dyoo@hashcollision.org . #t)
                   (ring:2 . #t)))
          (source . "git://github.com/jbclements/simply-scheme")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "8b8ba2b50d8688c0db30a772c5eac7bb2f6400a7")
                          (source
                           .
                           "git://github.com/jbclements/simply-scheme")
                          (source_url
                           .
                           "http://github.com/jbclements/simply-scheme/tree/master")))))))
 ("sinbad"
  .
  #hasheq((author . "nadeem@acm.org")
          (authors . ("nadeem@acm.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/sinbad.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/sinbad.txt")))
          (checksum . "2a31725861ce9a8c87bd4a3a38d355f571bdebcf")
          (checksum-error . #f)
          (conflicts . ())
          (date-added . 1552764265)
          (dependencies
           .
           ("base"
            "net-lib"
            "htdp-lib"
            "csv-reading"
            "sxml"
            "srfi-lite-lib"
            "racket-doc"
            "scribble-lib"
            "rackunit-lib"))
          (dependency-names
           .
           ("base"
            "net-lib"
            "htdp-lib"
            "csv-reading"
            "sxml"
            "srfi-lite-lib"
            "racket-doc"
            "scribble-lib"
            "rackunit-lib"))
          (description
           .
           "Sinbad is a software library that makes it very easy to uniformly access online data sources provided in standard formats (CSV, JSON, XML).")
          (implies . ())
          (last-checked . 1557339778)
          (last-edit . 1552764265)
          (last-updated . 1542232273)
          (modules
           .
           ((lib "sinbad/plugin.rkt")
            (lib "sinbad/fwf-parse.rkt")
            (lib "sinbad/util.rkt")
            (lib "sinbad/cacher.rkt")
            (lib "sinbad/dot-printer.rkt")
            (lib "sinbad/main.rkt")
            (lib "sinbad/data-source.rkt")
            (lib "sinbad/extras.rkt")
            (lib "sinbad/sinbad-syntax.rkt")
            (lib "sinbad/ftp-fetch.rkt")))
          (name . "sinbad")
          (nix-sha256
           .
           "05yg1cs90afyxpkk5df812mlgic566iny0laclfcqfmwp7rnq0hp")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:nadeem@acm.org . #t)
                   (beginners . #t)
                   (data . #t)
                   (ring:2 . #t)
                   (tabular . #t)
                   (teaching . #t)
                   (web . #t)))
          (source . "https://github.com/berry-cs/sinbad-rkt.git?path=sinbad")
          (tags . ("beginners" "data" "tabular" "teaching" "web"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "2a31725861ce9a8c87bd4a3a38d355f571bdebcf")
                          (source
                           .
                           "https://github.com/berry-cs/sinbad-rkt.git?path=sinbad")
                          (source_url
                           .
                           "https://github.com/berry-cs/sinbad-rkt.git?path=sinbad")))))))
 ("sirmail"
  .
  #hasheq((author . "mflatt@cs.utah.edu")
          (authors . ("mflatt@cs.utah.edu"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/sirmail.txt")
                 (test-failure-log . "server/built/test-fail/sirmail.txt")
                 (test-success-log . #f)))
          (checksum . "1412c4d450ed09200330c618bebd8e8b9723283e")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "compatibility-lib"
            "drracket"
            "gui-lib"
            "net-lib"
            "parser-tools-lib"
            "scheme-lib"
            "syntax-color-lib"
            "sandbox-lib"
            "pict-lib"
            "pict-snip-lib"))
          (dependency-names
           .
           ("base"
            "compatibility-lib"
            "drracket"
            "gui-lib"
            "net-lib"
            "parser-tools-lib"
            "scheme-lib"
            "syntax-color-lib"
            "sandbox-lib"
            "pict-lib"
            "pict-snip-lib"))
          (description . "An IMAP mail client")
          (implies . ())
          (last-checked . 1557339778)
          (last-edit . 1353352399)
          (last-updated . 1548899344)
          (modules
           .
           ((lib "sirmail/sirmails.rkt")
            (lib "sirmail/repl.rkt")
            (lib "sirmail/recover.rkt")
            (lib "sirmail/pref.rkt")
            (lib "sirmail/sirmail.rkt")
            (lib "sirmail/utilr.rkt")
            (lib "sirmail/readr.rkt")
            (lib "sirmail/sirmailr.rkt")
            (lib "sirmail/spell.rkt")
            (lib "sirmail/sendr.rkt")
            (lib "sirmail/folderr.rkt")
            (lib "sirmail/main.rkt")
            (lib "sirmail/optionr.rkt")))
          (name . "sirmail")
          (nix-sha256
           .
           "1d20c1xwfyxbbaknvjgg2850xfv0wkfhd8x33jz80ynvp6hf5fsd")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (app . #t)
                   (author:mflatt@cs.utah.edu . #t)
                   (mail . #t)
                   (net . #t)
                   (ring:1 . #t)))
          (source . "github://github.com/mflatt/sirmail/master")
          (tags . ("app" "mail" "net"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "1412c4d450ed09200330c618bebd8e8b9723283e")
                          (source
                           .
                           "github://github.com/mflatt/sirmail/master")
                          (source_url
                           .
                           "http://github.com/mflatt/sirmail/tree/master")))))))
 ("sl2014"
  .
  #hasheq((author . "matthias@ccs.neu.edu")
          (authors . ("matthias@ccs.neu.edu"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "sl2014" "doc/sl2014@sl2014/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/sl2014.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/sl2014.txt")))
          (checksum . "4ffef910ae5109eef916f3d57aaab95f02981df9")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base" "htdp-lib" "rackunit-lib" "scribble-lib" "racket-doc"))
          (dependency-names
           .
           ("base" "htdp-lib" "rackunit-lib" "scribble-lib" "racket-doc"))
          (description . "")
          (implies . ())
          (last-checked . 1557339778)
          (last-edit . 1442946714)
          (last-updated . 1502816431)
          (modules
           .
           ((lib "sl2014/scribblings/sl2014.scrbl") (lib "sl2014/main.rkt")))
          (name . "sl2014")
          (nix-sha256
           .
           "1izfcyvk6iwk42rgiwn67vndkzi3km6w8ncddiivy70k8jjd8hx5")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (:no-desc: . #t)
                   (author:matthias@ccs.neu.edu . #t)
                   (ring:1 . #t)
                   (testing . #t)))
          (source . "git://github.com/mfelleisen/sl2014")
          (tags . ("testing"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "4ffef910ae5109eef916f3d57aaab95f02981df9")
                          (source . "git://github.com/mfelleisen/sl2014")
                          (source_url
                           .
                           "http://github.com/mfelleisen/sl2014/tree/master")))))))
 ("slack-api"
  .
  #hasheq((author . "octotep@sdf.org")
          (authors . ("octotep@sdf.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/slack-api.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/slack-api.txt")))
          (checksum . "af5e363e0aefbf05c4448ea82d8aef714c30ee78")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "rfc6455"))
          (dependency-names . ("base" "rfc6455"))
          (description . "Racket bindings for the Slack API")
          (implies . ())
          (last-checked . 1557339778)
          (last-edit . 1461724096)
          (last-updated . 1502816431)
          (modules
           .
           ((lib "slack-api/main.rkt")
            (lib "slack-api/rtm.rkt")
            (lib "slack-api/webapi.rkt")))
          (name . "slack-api")
          (nix-sha256
           .
           "11sk22gskj1izn1fyxkjnc2vjw2sl4d7hg7hd2711d0jkn7j3krv")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (api . #t)
                   (author:octotep@sdf.org . #t)
                   (http . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/octotep/racket-slack-api.git")
          (tags . ("api" "http"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "af5e363e0aefbf05c4448ea82d8aef714c30ee78")
                          (source
                           .
                           "git://github.com/octotep/racket-slack-api.git")
                          (source_url
                           .
                           "http://github.com/octotep/racket-slack-api.git/tree/master")))))))
 ("slatex"
  .
  #hash((author . "sstrickl@racket-lang.org")
        (checksum . "b7ef746195027310345543c7395a575d7c4ded6a")
        (dependencies
         .
         ("scheme-lib"
          "base"
          "compatibility-lib"
          "racket-index"
          "eli-tester"
          "racket-doc"
          "scribble-lib"))
        (dependency-names
         .
         ("scheme-lib"
          "base"
          "compatibility-lib"
          "racket-index"
          "eli-tester"
          "racket-doc"
          "scribble-lib"))
        (description . "sstrickl@racket-lang.org")
        (modules . ())
        (name . "slatex")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/slatex.zip")
        (tags . ())))
 ("slideshow"
  .
  #hash((author . "mflatt@racket-lang.org robby@racket-lang.org")
        (checksum . "1a03243e04425da89508cb598ae5a9184faba58a")
        (dependencies
         .
         ("slideshow-lib" "slideshow-exe" "slideshow-plugin" "slideshow-doc"))
        (dependency-names
         .
         ("slideshow-lib" "slideshow-exe" "slideshow-plugin" "slideshow-doc"))
        (description . "mflatt@racket-lang.org robby@racket-lang.org")
        (modules . ())
        (name . "slideshow")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/slideshow.zip")
        (tags . ())))
 ("slideshow-doc"
  .
  #hash((author . "mflatt@racket-lang.org robby@racket-lang.org")
        (checksum . "075dd70445da81565f422bdad13f479ded7fedf1")
        (dependencies
         .
         ("scheme-lib"
          "draw-doc"
          "gui-doc"
          "pict-doc"
          "scribble-doc"
          "web-server-doc"
          "base"
          "gui-lib"
          "pict-lib"
          "scribble-lib"
          "slideshow-lib"
          "racket-doc"
          "at-exp-lib"))
        (dependency-names
         .
         ("scheme-lib"
          "draw-doc"
          "gui-doc"
          "pict-doc"
          "scribble-doc"
          "web-server-doc"
          "base"
          "gui-lib"
          "pict-lib"
          "scribble-lib"
          "slideshow-lib"
          "racket-doc"
          "at-exp-lib"))
        (description . "mflatt@racket-lang.org robby@racket-lang.org")
        (modules . ())
        (name . "slideshow-doc")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/slideshow-doc.zip")
        (tags . ())))
 ("slideshow-exe"
  .
  #hash((author . "mflatt@racket-lang.org robby@racket-lang.org")
        (checksum . "b1015af465b66018b36df627a1cd68c3ac62e44f")
        (dependencies
         .
         ("base" "compatibility-lib" "gui-lib" "pict-lib" "slideshow-lib"))
        (dependency-names
         .
         ("base" "compatibility-lib" "gui-lib" "pict-lib" "slideshow-lib"))
        (description . "mflatt@racket-lang.org robby@racket-lang.org")
        (modules . ())
        (name . "slideshow-exe")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/slideshow-exe.zip")
        (tags . ())))
 ("slideshow-latex"
  .
  #hasheq((author . "jay.mccarthy@gmail.com")
          (authors . ("jay.mccarthy@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "slideshow-latex"
                    "doc/slideshow-latex@slideshow-latex/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/slideshow-latex.txt")
                 (test-failure-log
                  .
                  "server/built/test-fail/slideshow-latex.txt")
                 (test-success-log . #f)))
          (checksum . "73aab49b3a14ea06afbfeb2e5ebd32f148c0196c")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "draw-lib"
            "gui-lib"
            "slideshow-lib"
            "racket-doc"
            "scribble-lib"
            "slideshow-doc"
            "planet-doc"))
          (dependency-names
           .
           ("base"
            "draw-lib"
            "gui-lib"
            "slideshow-lib"
            "racket-doc"
            "scribble-lib"
            "slideshow-doc"
            "planet-doc"))
          (description
           .
           "Slideshow extensions to embed LaTeX and math, as well as other goodies")
          (implies . ())
          (last-checked . 1557339778)
          (last-edit . 1354547872)
          (last-updated . 1502816433)
          (modules
           .
           ((lib "slideshow/latex/latex2bitmap.rkt")
            (lib "slideshow/latex/slideshow-latex.scrbl")
            (lib "slideshow/extras.rkt")
            (lib "tests/slideshow/latex/example.rkt")
            (lib "slideshow/latex.rkt")))
          (name . "slideshow-latex")
          (nix-sha256
           .
           "1mp45w7i0ajgm5iv5ayr0jyicsw4r7y4gqz3q39909gll7frgwfc")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:jay.mccarthy@gmail.com . #t)
                   (ring:1 . #t)
                   (slideshow . #t)))
          (source . "github://github.com/jeapostrophe/slideshow-latex/master")
          (tags . ("slideshow"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "73aab49b3a14ea06afbfeb2e5ebd32f148c0196c")
                          (source
                           .
                           "github://github.com/jeapostrophe/slideshow-latex/master")
                          (source_url
                           .
                           "http://github.com/jeapostrophe/slideshow-latex/tree/master")))))))
 ("slideshow-lib"
  .
  #hash((author . "mflatt@racket-lang.org robby@racket-lang.org")
        (checksum . "fc69192c5a3d0eb58358e5ab5d98c37dfc699213")
        (dependencies
         .
         ("scheme-lib"
          "base"
          "compatibility-lib"
          "draw-lib"
          "pict-lib"
          "gui-lib"))
        (dependency-names
         .
         ("scheme-lib"
          "base"
          "compatibility-lib"
          "draw-lib"
          "pict-lib"
          "gui-lib"))
        (description . "mflatt@racket-lang.org robby@racket-lang.org")
        (modules . ())
        (name . "slideshow-lib")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/slideshow-lib.zip")
        (tags . ())))
 ("slideshow-plugin"
  .
  #hash((author . "mflatt@racket-lang.org robby@racket-lang.org")
        (checksum . "ffdbd7ec7c22760c7fe487402b87f7f0d359034e")
        (dependencies
         .
         ("base"
          "slideshow-lib"
          "pict-lib"
          "string-constants-lib"
          "compatibility-lib"
          "drracket-plugin-lib"
          "gui-lib"))
        (dependency-names
         .
         ("base"
          "slideshow-lib"
          "pict-lib"
          "string-constants-lib"
          "compatibility-lib"
          "drracket-plugin-lib"
          "gui-lib"))
        (description . "mflatt@racket-lang.org robby@racket-lang.org")
        (modules . ())
        (name . "slideshow-plugin")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/slideshow-plugin.zip")
        (tags . ())))
 ("slideshow-pretty"
  .
  #hasheq((author . "leif@leifandersen.net")
          (authors . ("leif@leifandersen.net"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/slideshow-pretty.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/slideshow-pretty.txt")))
          (checksum . "021378757a40163f8e84efe616eb17036eeb2a4f")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "draw-lib"
            "gui-lib"
            "slideshow-lib"
            "slideshow-latex"
            "racket-doc"
            "scribble-lib"
            "slideshow-doc"))
          (dependency-names
           .
           ("base"
            "draw-lib"
            "gui-lib"
            "slideshow-lib"
            "slideshow-latex"
            "racket-doc"
            "scribble-lib"
            "slideshow-doc"))
          (description
           .
           "Slideshow extensions to add pretty transitions between slides.")
          (implies . ())
          (last-checked . 1557339779)
          (last-edit . 1396319678)
          (last-updated . 1502816436)
          (modules . ((lib "slideshow/pretty.rkt")))
          (name . "slideshow-pretty")
          (nix-sha256
           .
           "1ls5awaqjrsmbcdwd8vwh22rpdgj9j017k6mbahmxk7zb7bs17dv")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:leif@leifandersen.net . #t)
                   (ring:1 . #t)
                   (slideshow . #t)))
          (source
           .
           "github://github.com/LeifAndersen/slideshow-pretty/master")
          (tags . ("slideshow"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "021378757a40163f8e84efe616eb17036eeb2a4f")
                          (source
                           .
                           "github://github.com/LeifAndersen/slideshow-pretty/master")
                          (source_url
                           .
                           "http://github.com/LeifAndersen/slideshow-pretty/tree/master")))))))
 ("slideshow-repl"
  .
  #hasheq((author . "mflatt@cs.utah.edu")
          (authors . ("mflatt@cs.utah.edu"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "slideshow-repl"
                    "doc/slideshow-repl@slideshow-repl/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/slideshow-repl.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/slideshow-repl.txt")))
          (checksum . "93246109d2dc471ab1ce28afda9f23305cf94efb")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("errortrace-lib"
            "gui-lib"
            "slideshow-lib"
            "base"
            "pict-lib"
            "pict-snip-lib"
            "draw-doc"
            "draw-lib"
            "pict-doc"
            "racket-doc"
            "scribble-lib"
            "slideshow-doc"))
          (dependency-names
           .
           ("errortrace-lib"
            "gui-lib"
            "slideshow-lib"
            "base"
            "pict-lib"
            "pict-snip-lib"
            "draw-doc"
            "draw-lib"
            "pict-doc"
            "racket-doc"
            "scribble-lib"
            "slideshow-doc"))
          (description . "")
          (implies . ())
          (last-checked . 1557339779)
          (last-edit . 1383054198)
          (last-updated . 1502816436)
          (modules
           .
           ((lib "slideshow/repl.rkt")
            (lib "slideshow/private/editor.rkt")
            (lib "slideshow/scribblings/slideshow-repl.scrbl")))
          (name . "slideshow-repl")
          (nix-sha256
           .
           "0bigsi983ypbi1j6704waivj4z85dnn7pvcp71w5kas31m2b12g4")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (:no-desc: . #t)
                   (author:mflatt@cs.utah.edu . #t)
                   (ring:1 . #t)
                   (slideshow . #t)))
          (source . "github://github.com/mflatt/slideshow-repl/master")
          (tags . ("slideshow"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "93246109d2dc471ab1ce28afda9f23305cf94efb")
                          (source
                           .
                           "github://github.com/mflatt/slideshow-repl/master")
                          (source_url
                           .
                           "http://github.com/mflatt/slideshow-repl/tree/master")))))))
 ("slideshow-text-style"
  .
  #hasheq((author . "asumu@ccs.neu.edu")
          (authors . ("asumu@ccs.neu.edu"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "slideshow-text-style"
                    "doc/slideshow-text-style@slideshow-text-style/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log
                  .
                  "server/built/install/slideshow-text-style.txt")
                 (test-failure-log
                  .
                  "server/built/test-fail/slideshow-text-style.txt")
                 (test-success-log . #f)))
          (checksum . "35dbe13943310720f80f54652aed98c65a08875b")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "pict-lib"
            "slideshow-lib"
            "scribble-text-lib"
            "scribble-lib"
            "at-exp-lib"
            "pict-doc"
            "slideshow-doc"
            "racket-doc"
            "scribble-doc"))
          (dependency-names
           .
           ("base"
            "pict-lib"
            "slideshow-lib"
            "scribble-text-lib"
            "scribble-lib"
            "at-exp-lib"
            "pict-doc"
            "slideshow-doc"
            "racket-doc"
            "scribble-doc"))
          (description
           .
           "Small library that helps with formatting text in a slideshow")
          (implies . ())
          (last-checked . 1557339779)
          (last-edit . 1504725053)
          (last-updated . 1504906254)
          (modules
           .
           ((lib "slideshow-text-style/example.rkt")
            (lib "slideshow-text-style/main.rkt")
            (lib "slideshow-text-style/slideshow-text-style.scrbl")))
          (name . "slideshow-text-style")
          (nix-sha256
           .
           "06dm94499rg810rw2npk4k1c6lkgji8p0dnigkdv0aprs4928dgf")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:asumu@ccs.neu.edu . #t)
                   (ring:1 . #t)
                   (slideshow . #t)))
          (source . "git://github.com/takikawa/slideshow-text-style")
          (tags . ("slideshow"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "35dbe13943310720f80f54652aed98c65a08875b")
                          (source
                           .
                           "git://github.com/takikawa/slideshow-text-style")
                          (source_url
                           .
                           "http://github.com/takikawa/slideshow-text-style/tree/master")))))))
 ("smart-completion"
  .
  #hasheq((author . "1227847322@qq.com")
          (authors . ("1227847322@qq.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . "server/built/deps/smart-completion.txt")
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/smart-completion.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/smart-completion.txt")))
          (checksum . "53ab196bee90d578d9fd09ab9f44a165a7143684")
          (checksum-error . #f)
          (conflicts . ())
          (date-added . 1550970785)
          (dependencies . ())
          (dependency-names . ())
          (description . "")
          (implies . ())
          (last-checked . 1557339779)
          (last-edit . 1550970785)
          (last-updated . 1550977159)
          (modules . ((lib "smart-completion/tool.rkt")))
          (name . "smart-completion")
          (nix-sha256
           .
           "0sfgc0bj8bgza2j15i5icgsjn9ns7464zcggfql2sk6mm5l2vj6q")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-dep-fail: . #t)
                   (:build-success: . #t)
                   (:no-desc: . #t)
                   (:no-tag: . #t)
                   (author:1227847322@qq.com . #t)
                   (ring:2 . #t)))
          (source . "https://github.com/syntacticlosure/smart-completion.git")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "53ab196bee90d578d9fd09ab9f44a165a7143684")
                          (source
                           .
                           "https://github.com/syntacticlosure/smart-completion.git")
                          (source_url
                           .
                           "https://github.com/syntacticlosure/smart-completion.git")))))))
 ("sml"
  .
  #hasheq((author . "leif@leifandersen.net")
          (authors . ("leif@leifandersen.net"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/sml.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/sml.txt")))
          (checksum . "146a28689a6480183ee8ed4c4da55a77d1f98d06")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "at-exp-lib"))
          (dependency-names . ("base" "at-exp-lib"))
          (description . "S-Markup Language")
          (implies . ())
          (last-checked . 1557339779)
          (last-edit . 1527260434)
          (last-updated . 1527346295)
          (modules . ((lib "sml/main.rkt")))
          (name . "sml")
          (nix-sha256
           .
           "1g3k1y5dbyk97xh7x5mqpy896d10ds1ccyisb1wly29c6zf6m6yh")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:no-tag: . #t)
                   (author:leif@leifandersen.net . #t)
                   (ring:2 . #t)))
          (source . "https://github.com/LeifAndersen/racket-sml.git")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "146a28689a6480183ee8ed4c4da55a77d1f98d06")
                          (source
                           .
                           "https://github.com/LeifAndersen/racket-sml.git")
                          (source_url
                           .
                           "https://github.com/LeifAndersen/racket-sml.git")))))))
 ("snappy"
  .
  #hasheq((author . "asumu@ccs.neu.edu stchang@racket-lang.org ")
          (authors . ("asumu@ccs.neu.edu" "stchang@racket-lang.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "snappy" "doc/snappy@snappy/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/snappy.txt")
                 (test-failure-log . "server/built/test-fail/snappy.txt")
                 (test-success-log . #f)))
          (checksum . "c97436037ff6600dc7df447a5aba3d59c3e7e011")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "rackunit-lib" "scribble-lib" "racket-doc"))
          (dependency-names
           .
           ("base" "rackunit-lib" "scribble-lib" "racket-doc"))
          (description . "FFI bindings to snappy, a fast compression library")
          (implies . ())
          (last-checked . 1557339779)
          (last-edit . 1379708154)
          (last-updated . 1502816436)
          (modules
           .
           ((lib "snappy/snappy.rkt")
            (lib "snappy/snappy.scrbl")
            (lib "snappy/snappy-test.rkt")
            (lib "snappy/main.rkt")))
          (name . "snappy")
          (nix-sha256
           .
           "0v3s9c7ijrgxwgh388qjxi98zb9sv862vlq8azqk31wkwa6w82m9")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:asumu@ccs.neu.edu . #t)
                   (author:stchang@racket-lang.org . #t)
                   (compression . #t)
                   (ring:1 . #t)))
          (source . "github://github.com/stchang/snappy/master")
          (tags . ("compression"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "c97436037ff6600dc7df447a5aba3d59c3e7e011")
                          (source
                           .
                           "github://github.com/stchang/snappy/master")
                          (source_url
                           .
                           "http://github.com/stchang/snappy/tree/master")))))))
 ("snip"
  .
  #hash((author . "mflatt@racket-lang.org")
        (checksum . "b45335a2bed6f78ac43881edf121d27f8e4b1e45")
        (dependencies . ("snip-lib" "gui-doc"))
        (dependency-names . ("snip-lib" "gui-doc"))
        (description . "mflatt@racket-lang.org")
        (modules . ())
        (name . "snip")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/snip.zip")
        (tags . ())))
 ("snip-lib"
  .
  #hash((author . "mflatt@racket-lang.org")
        (checksum . "525434155b94fa830b117ad77b5d373db74cdad6")
        (dependencies . ("base" "draw-lib"))
        (dependency-names . ("base" "draw-lib"))
        (description . "mflatt@racket-lang.org")
        (modules . ())
        (name . "snip-lib")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/snip-lib.zip")
        (tags . ())))
 ("socketcan"
  .
  #hasheq((author . "abencz@gmail.com")
          (authors . ("abencz@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . "server/built/min-fail/socketcan.txt")
                 (success-log . "server/built/install/socketcan.txt")
                 (test-failure-log . "server/built/test-fail/socketcan.txt")
                 (test-success-log . #f)))
          (checksum . "744bf37d7a347a55d1ec72885f87d35919f68b7b")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "make" "scribble-lib"))
          (dependency-names . ("base" "make" "scribble-lib"))
          (description . "Linux socketcan bindings for Racket.")
          (implies . ())
          (last-checked . 1557339779)
          (last-edit . 1432766091)
          (last-updated . 1502816437)
          (modules
           .
           ((lib "scribblings/socketcan.scrbl")
            (lib "socketcan/main.rkt")
            (lib "socketcan/tests.rkt")
            (lib "socketcan/private/install.rkt")))
          (name . "socketcan")
          (nix-sha256
           .
           "0y005rgkkbaly7z6k40pprj8icxrad5qifh77zy847sd0cg4lciv")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:no-tag: . #t)
                   (author:abencz@gmail.com . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/abencz/racket-socketcan#master")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "744bf37d7a347a55d1ec72885f87d35919f68b7b")
                          (source
                           .
                           "git://github.com/abencz/racket-socketcan#master")
                          (source_url
                           .
                           "http://github.com/abencz/racket-socketcan/tree/master#master")))
                 ("5.3.6"
                  .
                  #hasheq((checksum
                           .
                           "e87aa767038b78386d18e3c0af8e9a482ca6e421")
                          (source
                           .
                           "github://github.com/abencz/racket-socketcan/racket_5.3.6")
                          (source_url
                           .
                           "http://github.com/abencz/racket-socketcan/tree/racket_5.3.6")))))))
 ("softposit-rkt"
  .
  #hasheq((author . "dthien@cs.washington.edu")
          (authors . ("dthien@cs.washington.edu"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "softposit-rkt"
                    "doc/softposit-rkt@softposit-rkt/index.html")))
                 (failure-log . #f)
                 (min-failure-log . "server/built/min-fail/softposit-rkt.txt")
                 (success-log . "server/built/install/softposit-rkt.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/softposit-rkt.txt")))
          (checksum . "f72703cab40bde5fc80568b8a39930b492c31937")
          (checksum-error . #f)
          (conflicts . ())
          (date-added . 1548136368)
          (dependencies
           .
           ("math-lib" "base" "scribble-lib" "racket-doc" "rackunit-lib"))
          (dependency-names
           .
           ("math-lib" "base" "scribble-lib" "racket-doc" "rackunit-lib"))
          (description
           .
           "Racket bindings for the C softposit library. More info at posithub.org (currently only works on Linux 64-bit.)")
          (implies . ())
          (last-checked . 1557339779)
          (last-edit . 1552710256)
          (last-updated . 1552710248)
          (modules
           .
           ((lib "softposit-rkt/main.rkt")
            (lib "softposit-rkt/install.rkt")
            (lib "softposit-rkt/softposit-rkt.scrbl")
            (lib "softposit-rkt/softposit.rkt")))
          (name . "softposit-rkt")
          (nix-sha256
           .
           "1q6c4kp8m7m4qz16k4mz703r5ilp6w3v81rgvh6sa2d6s0dpfd6i")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:dthien@cs.washington.edu . #t)
                   (ffi . #t)
                   (numerical . #t)
                   (posits . #t)
                   (ring:2 . #t)
                   (softposit . #t)
                   (unum . #t)))
          (source . "https://github.com/DavidThien/softposit-rkt.git")
          (tags . ("ffi" "numerical" "posits" "softposit" "unum"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "f72703cab40bde5fc80568b8a39930b492c31937")
                          (source
                           .
                           "https://github.com/DavidThien/softposit-rkt.git")
                          (source_url
                           .
                           "https://github.com/DavidThien/softposit-rkt.git")))))))
 ("sonic-pi"
  .
  #hasheq((author . "clements@racket-lang.org")
          (authors . ("clements@racket-lang.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "sonic-pi" "doc/sonic-pi@sonic-pi/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/sonic-pi.txt")
                 (test-failure-log . "server/built/test-fail/sonic-pi.txt")
                 (test-success-log . #f)))
          (checksum . "de70c9169b7bb6b6764c513c6caac25f533c79dc")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "osc"
            "rackunit-lib"
            "typed-racket-lib"
            "typed-racket-more"
            "htdp-lib"
            "rackunit-lib"
            "racket-doc"
            "scribble-lib"))
          (dependency-names
           .
           ("base"
            "osc"
            "rackunit-lib"
            "typed-racket-lib"
            "typed-racket-more"
            "htdp-lib"
            "rackunit-lib"
            "racket-doc"
            "scribble-lib"))
          (description
           .
           "For now, this package starts scsynth just like sonic pi does, and can make a few sounds.")
          (implies . ())
          (last-checked . 1557339779)
          (last-edit . 1520224946)
          (last-updated . 1502816437)
          (modules
           .
           ((lib "sonic-pi/scsynth/note.rkt")
            (lib "sonic-pi/lsonic-example.rkt")
            (lib "sonic-pi/examples/uses-go.rkt")
            (lib "sonic-pi/scsynth/scsynth-abstraction.rkt")
            (lib "sonic-pi/scsynth/note-name.rkt")
            (lib "sonic-pi/note.rkt")
            (lib "sonic-pi/scsynth/start-scsynth.rkt")
            (lib "sonic-pi/sonic-pi.scrbl")
            (lib "sonic-pi/examples/chord-notes-fwoosh.rkt")
            (lib "sonic-pi/scsynth/scsynth-communication.rkt")
            (lib "sonic-pi/go.rkt")
            (lib "sonic-pi/lsonic.rkt")))
          (name . "sonic-pi")
          (nix-sha256
           .
           "18grfs28akg2k8pc3xwsb77pamk9q1hwd35vz42apn9x88rcq62h")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (audio . #t)
                   (author:clements@racket-lang.org . #t)
                   (ring:1 . #t)))
          (source . "https://github.com/jbclements/sonic-pi.git")
          (tags . ("audio"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "de70c9169b7bb6b6764c513c6caac25f533c79dc")
                          (source
                           .
                           "https://github.com/jbclements/sonic-pi.git")
                          (source_url
                           .
                           "https://github.com/jbclements/sonic-pi.git")))))))
 ("soundex"
  .
  #hasheq((author . "neil@neilvandyke.org")
          (authors . ("neil@neilvandyke.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "soundex" "doc/soundex@soundex/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/soundex.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/soundex.txt")))
          (checksum . "b870344d2cae67642346fa919f46aded96624703")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base" "mcfly" "racket-doc" "scribble-lib" "overeasy"))
          (dependency-names
           .
           ("base" "mcfly" "racket-doc" "scribble-lib" "overeasy"))
          (description . "Soundex Index Keying")
          (implies . ())
          (last-checked . 1557339779)
          (last-edit . 1456465125)
          (last-updated . 1502816442)
          (modules . ((lib "soundex/soundex.scrbl") (lib "soundex/main.rkt")))
          (name . "soundex")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:neil@neilvandyke.org . #t)
                   (ring:1 . #t)
                   (soundex . #t)))
          (source . "http://www.neilvandyke.org/racket/soundex.zip")
          (tags . ("soundex"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "b870344d2cae67642346fa919f46aded96624703")
                          (source
                           .
                           "http://www.neilvandyke.org/racket/soundex.zip")
                          (source_url
                           .
                           "http://www.neilvandyke.org/racket/soundex.zip")))))))
 ("source-syntax"
  .
  #hash((author
         .
         "samth@racket-lang.org stamourv@racket-lang.org eli@racket-lang.org")
        (checksum . "736996db33a9c9ab6597e1f4fd08d76f8f488aa2")
        (dependencies . ("base"))
        (dependency-names . ("base"))
        (description
         .
         "samth@racket-lang.org stamourv@racket-lang.org eli@racket-lang.org")
        (modules . ())
        (name . "source-syntax")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/source-syntax.zip")
        (tags . ())))
 ("sparse"
  .
  #hasheq((author . "esco.ricky@gmail.com")
          (authors . ("esco.ricky@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "sparse" "doc/sparse@sparse/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/sparse.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/sparse.txt")))
          (checksum . "0d713dd9524c5bbba7fbebe49f44cbe9aab70275")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "rackunit-lib" "racket-doc" "scribble-lib"))
          (dependency-names
           .
           ("base" "rackunit-lib" "racket-doc" "scribble-lib"))
          (description
           .
           "A tool for generating test cases for parsers for simple S-expression languages. It is intended primarily for use by instructors of Programming Languages classes in which students implement a simple S-expression-based programming language. It takes as input a description of the grammar of the language to be implemented and produces test cases for the students' parsers.")
          (implies . ())
          (last-checked . 1557339780)
          (last-edit . 1496892090)
          (last-updated . 1543524496)
          (modules
           .
           ((lib "sparse/main.rkt")
            (lib "sparse/example-grammars.rkt")
            (lib "sparse/minimization.rkt")
            (lib "sparse/sparse.scrbl")
            (lib "sparse/parse-grammar-spec.rkt")
            (lib "sparse/generator.rkt")))
          (name . "sparse")
          (nix-sha256
           .
           "1jp3lkvx6q6wybg13xldaj4ifdf9aplbfkframazqj24lf55zrif")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:esco.ricky@gmail.com . #t)
                   (grammar . #t)
                   (instructors . #t)
                   (parser . #t)
                   (programming-languages . #t)
                   (ring:1 . #t)
                   (testing . #t)))
          (source . "git://github.com/ricky-escobar/sparse")
          (tags
           .
           ("grammar"
            "instructors"
            "parser"
            "programming-languages"
            "testing"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "0d713dd9524c5bbba7fbebe49f44cbe9aab70275")
                          (source . "git://github.com/ricky-escobar/sparse")
                          (source_url
                           .
                           "http://github.com/ricky-escobar/sparse/tree/master")))))))
 ("spipe"
  .
  #hasheq((author . "macocio@gmail.com")
          (authors . ("macocio@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "spipe" "doc/spipe@spipe/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/spipe.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/spipe.txt")))
          (checksum . "d6bc777a8113447fea9a3f10b5a0fbce6269dce4")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "nested-hash"
            "threading"
            "sandbox-lib"
            "scribble-lib"
            "racket-doc"
            "rackunit-lib"))
          (dependency-names
           .
           ("base"
            "nested-hash"
            "threading"
            "sandbox-lib"
            "scribble-lib"
            "racket-doc"
            "rackunit-lib"))
          (description
           .
           "A 'super-pipe' that threads over Racket hash-tables")
          (implies . ())
          (last-checked . 1557339780)
          (last-edit . 1532758354)
          (last-updated . 1541286869)
          (modules
           .
           ((lib "spipe/main.rkt") (lib "spipe/scribblings/spipe.scrbl")))
          (name . "spipe")
          (nix-sha256
           .
           "1hxfn0n29a0lpfsfxg1nv7gm5ffdlb6vn9ks2abkfvqyrwkvf1j5")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:macocio@gmail.com . #t)
                   (hash . #t)
                   (ring:2 . #t)
                   (threading . #t)))
          (source . "https://github.com/BourgondAries/spipe.git")
          (tags . ("hash" "threading"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "d6bc777a8113447fea9a3f10b5a0fbce6269dce4")
                          (source
                           .
                           "https://github.com/BourgondAries/spipe.git")
                          (source_url
                           .
                           "https://github.com/BourgondAries/spipe.git")))))))
 ("split-by"
  .
  #hasheq((author . "samth@ccs.neu.edu")
          (authors . ("samth@ccs.neu.edu"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/split-by.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/split-by.txt")))
          (checksum . "87fc10bda5e0394f78455a78183c3f3a16bc60df")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "rackunit-lib"))
          (dependency-names . ("base" "rackunit-lib"))
          (description . "The `split-by` function from Mathematica")
          (implies . ())
          (last-checked . 1557339781)
          (last-edit . 1503521884)
          (last-updated . 1502816444)
          (modules . ((lib "data/split-by.rkt")))
          (name . "split-by")
          (nix-sha256
           .
           "1n7fs2q7ij4bllv4vwssfm26n1f3z8b51r040fk1wwfp9k3qccya")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:samth@ccs.neu.edu . #t)
                   (lists . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/samth/split-by")
          (tags . ("lists"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "87fc10bda5e0394f78455a78183c3f3a16bc60df")
                          (source . "git://github.com/samth/split-by")
                          (source_url
                           .
                           "http://github.com/samth/split-by/tree/master")))))))
 ("spmatrix"
  .
  #hasheq((author . "jay.mccarthy@gmail.com")
          (authors . ("jay.mccarthy@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "spmatrix" "doc/spmatrix@spmatrix/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/spmatrix.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/spmatrix.txt")))
          (checksum . "15e1c74f8763abbdfb4348702c98ca6043e52a1c")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("spvector"
            "base"
            "compatibility-lib"
            "eli-tester"
            "racket-doc"
            "scribble-lib"))
          (dependency-names
           .
           ("spvector"
            "base"
            "compatibility-lib"
            "eli-tester"
            "racket-doc"
            "scribble-lib"))
          (description . "Semi-persistent matrices based on spvectors")
          (implies . ())
          (last-checked . 1557339781)
          (last-edit . 1354135506)
          (last-updated . 1502816445)
          (modules
           .
           ((lib "tests/data/spmatrix.rkt")
            (lib "data/spmatrix/spmatrix.scrbl")
            (lib "data/spmatrix.rkt")))
          (name . "spmatrix")
          (nix-sha256
           .
           "11prqwhnkw0xl68yw3fdc25mg5mqynzzvbl77mwzqzr2fri3b6rj")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:jay.mccarthy@gmail.com . #t)
                   (data . #t)
                   (ring:1 . #t)))
          (source . "github://github.com/jeapostrophe/matrix/master")
          (tags . ("data"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "15e1c74f8763abbdfb4348702c98ca6043e52a1c")
                          (source
                           .
                           "github://github.com/jeapostrophe/matrix/master")
                          (source_url
                           .
                           "http://github.com/jeapostrophe/matrix/tree/master")))))))
 ("spreadsheet-editor"
  .
  #hasheq((author . "dpavlov@iaaras.ru")
          (authors . ("dpavlov@iaaras.ru"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/spreadsheet-editor.txt")
                 (test-failure-log
                  .
                  "server/built/test-fail/spreadsheet-editor.txt")
                 (test-success-log . #f)))
          (checksum . "73f8cfa89f0534f0bbb72833741cc7d5974ecda8")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "gui" "draw-lib" "data-lib" "table-panel"))
          (dependency-names
           .
           ("base" "gui" "draw-lib" "data-lib" "table-panel"))
          (description
           .
           "Flexible spreadsheet editor built on top of Racket's GUI controls")
          (implies . ())
          (last-checked . 1557339781)
          (last-edit . 1496069411)
          (last-updated . 1502816445)
          (modules
           .
           ((lib "spreadsheet-editor/spreadsheet-editor.rkt")
            (lib "spreadsheet-editor/spreadsheet-editor-demo.rkt")
            (lib "spreadsheet-editor/main.rkt")))
          (name . "spreadsheet-editor")
          (nix-sha256
           .
           "0slkr42ylpv6hddbcg2d4ci5zl1vvcgy1lxmh81j9ffw43w955wm")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:dpavlov@iaaras.ru . #t)
                   (gui . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/kugelblitz/spreadsheet-editor")
          (tags . ("gui"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "73f8cfa89f0534f0bbb72833741cc7d5974ecda8")
                          (source
                           .
                           "git://github.com/kugelblitz/spreadsheet-editor")
                          (source_url
                           .
                           "http://github.com/kugelblitz/spreadsheet-editor/tree/master")))))))
 ("spvector"
  .
  #hasheq((author . "jay.mccarthy@gmail.com")
          (authors . ("jay.mccarthy@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "spvector" "doc/spvector@spvector/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/spvector.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/spvector.txt")))
          (checksum . "aba0ba4f4d8df27dc17252b984eca2f76f4ae414")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "compatibility-lib"
            "eli-tester"
            "racket-doc"
            "scribble-lib"))
          (dependency-names
           .
           ("base"
            "compatibility-lib"
            "eli-tester"
            "racket-doc"
            "scribble-lib"))
          (description
           .
           "Semi-persistent vectors that provide O(1) performance for linear use, but O(n) performance for non-linear accesses")
          (implies . ())
          (last-checked . 1557339781)
          (last-edit . 1354037662)
          (last-updated . 1502816445)
          (modules
           .
           ((lib "data/spvector/spvector.scrbl")
            (lib "tests/data/spvector.rkt")
            (lib "data/spvector.rkt")))
          (name . "spvector")
          (nix-sha256
           .
           "1znrwa38m9g5j97siv794br3abm4wh0gljjxp98p7lwsj0vsqwq2")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:jay.mccarthy@gmail.com . #t)
                   (data . #t)
                   (ring:1 . #t)))
          (source . "github://github.com/jeapostrophe/spvector/master")
          (tags . ("data"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "aba0ba4f4d8df27dc17252b984eca2f76f4ae414")
                          (source
                           .
                           "github://github.com/jeapostrophe/spvector/master")
                          (source_url
                           .
                           "http://github.com/jeapostrophe/spvector/tree/master")))))))
 ("sql"
  .
  #hasheq((author . "ryanc@racket-lang.org")
          (authors . ("ryanc@racket-lang.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "sql" "doc/sql@sql/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/sql.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/sql.txt")))
          (checksum . "792895fae759c6ef60aff054c1f707bb4f15407a")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           (("base" #:version "6.3")
            "rackunit-lib"
            "db-lib"
            "racket-doc"
            "scribble-lib"
            "sandbox-lib"
            "db-doc"))
          (dependency-names
           .
           ("base"
            "rackunit-lib"
            "db-lib"
            "racket-doc"
            "scribble-lib"
            "sandbox-lib"
            "db-doc"))
          (description . "an S-expression notation for SQL")
          (implies . ())
          (last-checked . 1557339781)
          (last-edit . 1478894891)
          (last-updated . 1549381397)
          (modules
           .
           ((lib "sql/private/ast.rkt")
            (lib "sql/private/syntax.rkt")
            (lib "sql/private/sql-keywords.rkt")
            (lib "sql/test.rkt")
            (lib "sql/private/dialect.rkt")
            (lib "sql/private/emit.rkt")
            (lib "sql/private/jumble.rkt")
            (lib "sql/main.rkt")
            (lib "sql/sql.scrbl")
            (lib "sql/private/parse.rkt")
            (lib "sql/private/dynamic.rkt")))
          (name . "sql")
          (nix-sha256
           .
           "1370a1ldfr09i723n13bxh1dsjwj3yg19sh44g2hvmr0ji28y3ww")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:ryanc@racket-lang.org . #t)
                   (db . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/rmculpepper/sql")
          (tags . ("db"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "792895fae759c6ef60aff054c1f707bb4f15407a")
                          (source . "git://github.com/rmculpepper/sql")
                          (source_url
                           .
                           "http://github.com/rmculpepper/sql/tree/master")))))))
 ("sql-sourcery"
  .
  #hasheq((author . "adjkant@gmail.com")
          (authors . ("adjkant@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . "server/built/deps/sql-sourcery.txt")
                 (docs
                  .
                  (("main"
                    "sql-sourcery"
                    "doc/sql-sourcery@sql-sourcery/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/sql-sourcery.txt")
                 (test-failure-log
                  .
                  "server/built/test-fail/sql-sourcery.txt")
                 (test-success-log . #f)))
          (checksum . "f6c0619ed9febbb66864f36aa41fa495df683f95")
          (checksum-error . #f)
          (conflicts . ())
          (date-added . 1549747144)
          (dependencies . ("base" "scribble-lib" "racket-doc" "rackunit-lib"))
          (dependency-names
           .
           ("base" "scribble-lib" "racket-doc" "rackunit-lib"))
          (description
           .
           "An ORM for mapping structures in Racket to database entries in a SQL database. All versions 0.1.X are unstable Alpha releases. Current version 0.1.0")
          (implies . ())
          (last-checked . 1557339781)
          (last-edit . 1552422938)
          (last-updated . 1549751196)
          (modules
           .
           ((lib "sql-sourcery/types.rkt")
            (lib "sql-sourcery/utils-phase-1.rkt")
            (lib "sql-sourcery/scribblings/sql-sourcery.scrbl")
            (lib "sql-sourcery/sourcery-connection.rkt")
            (lib "sql-sourcery/user-testing.rkt")
            (lib "sql-sourcery/main.rkt")
            (lib "sql-sourcery/sql.rkt")
            (lib "sql-sourcery/utils.rkt")
            (lib "sql-sourcery/type-support.rkt")
            (lib "sql-sourcery/sourcery-refs.rkt")))
          (name . "sql-sourcery")
          (nix-sha256
           .
           "1njwxpagk9wmzyp4al3hrkq30dfpcxlxchhqnk7228hmbnpyqnip")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-dep-fail: . #t)
                   (:build-success: . #t)
                   (:docs: . #t)
                   (author:adjkant@gmail.com . #t)
                   (database . #t)
                   (orm . #t)
                   (racket-sourcery . #t)
                   (ring:2 . #t)
                   (sourcery-struct . #t)
                   (sql . #t)
                   (sqlite3 . #t)
                   (struct . #t)))
          (source
           .
           "https://github.com/adjkant/sql-sourcery.git?path=sql-sourcery#f6c0619ed9febbb66864f36aa41fa495df683f95")
          (tags
           .
           ("database"
            "orm"
            "racket-sourcery"
            "sourcery-struct"
            "sql"
            "sqlite3"
            "struct"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "f6c0619ed9febbb66864f36aa41fa495df683f95")
                          (source
                           .
                           "https://github.com/adjkant/sql-sourcery.git?path=sql-sourcery#f6c0619ed9febbb66864f36aa41fa495df683f95")
                          (source_url
                           .
                           "https://github.com/adjkant/sql-sourcery.git?path=sql-sourcery#f6c0619ed9febbb66864f36aa41fa495df683f95")))))))
 ("sqlite-table"
  .
  #hasheq((author . "clements@racket-lang.org")
          (authors . ("clements@racket-lang.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "sqlite-table"
                    "doc/sqlite-table@sqlite-table/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/sqlite-table.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/sqlite-table.txt")))
          (checksum . "d1b892fe91a9413efd42da9ca75b5e1db5333993")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base" "db-lib" "racket-doc" "rackunit-lib" "scribble-lib"))
          (dependency-names
           .
           ("base" "db-lib" "racket-doc" "rackunit-lib" "scribble-lib"))
          (description
           .
           "A quick way to create and query sqlite tables. Basically a simplified wrapper for a subset of the db library.")
          (implies . ())
          (last-checked . 1557339781)
          (last-edit . 1478813742)
          (last-updated . 1512457711)
          (modules
           .
           ((lib "sqlite-table/main.rkt")
            (lib "sqlite-table/sqlite-table.scrbl")))
          (name . "sqlite-table")
          (nix-sha256
           .
           "0a0g2r11q9vwzhf3md7hndy9rdq45s0anzd34jxl3vh37qfhvav4")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:clements@racket-lang.org . #t)
                   (db . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/jbclements/sqlite-table")
          (tags . ("db"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "d1b892fe91a9413efd42da9ca75b5e1db5333993")
                          (source
                           .
                           "git://github.com/jbclements/sqlite-table")
                          (source_url
                           .
                           "http://github.com/jbclements/sqlite-table/tree/master")))))))
 ("squicky"
  .
  #hasheq((author . "gray@nxg.name")
          (authors . ("gray@nxg.name"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "squicky" "doc/squicky@squicky/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/squicky.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/squicky.txt")))
          (checksum . "c73696e916f2b8c1ddcf90abff8aa5f3a91a1a4c")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "parser-tools-lib"
            "scribble-lib"
            "srfi-lite-lib"
            "at-exp-lib"
            "rackunit-lib"
            "racket-doc"))
          (dependency-names
           .
           ("base"
            "parser-tools-lib"
            "scribble-lib"
            "srfi-lite-lib"
            "at-exp-lib"
            "rackunit-lib"
            "racket-doc"))
          (description
           .
           "A parser for a wiki syntax (a mild extension of WikiCreole)")
          (implies . ())
          (last-checked . 1557339781)
          (last-edit . 1421520567)
          (last-updated . 1553371623)
          (modules
           .
           ((lib "squicky/wiki2xml.rkt")
            (lib "squicky/squicky.scrbl")
            (lib "squicky/main.rkt")
            (lib "squicky/parser.rkt")))
          (name . "squicky")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:gray@nxg.name . #t)
                   (parser . #t)
                   (ring:1 . #t)
                   (wiki . #t)))
          (source . "http://nxg.me.uk/dist/squicky/squicky.zip")
          (tags . ("parser" "wiki"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "c73696e916f2b8c1ddcf90abff8aa5f3a91a1a4c")
                          (source
                           .
                           "http://nxg.me.uk/dist/squicky/squicky.zip")
                          (source_url
                           .
                           "http://nxg.me.uk/dist/squicky/squicky.zip")))))))
 ("srfi"
  .
  #hash((author
         .
         "mflatt@racket-lang.org noel@racket-lang.org chongkai@racket-lang.org jay@racket-lang.org")
        (checksum . "63dca22aaab8699aaeb1f8d383a19952fb22de8d")
        (dependencies
         .
         ("srfi-lib" "srfi-lib-nonfree" "srfi-doc" "srfi-doc-nonfree"))
        (dependency-names
         .
         ("srfi-lib" "srfi-lib-nonfree" "srfi-doc" "srfi-doc-nonfree"))
        (description
         .
         "mflatt@racket-lang.org noel@racket-lang.org chongkai@racket-lang.org jay@racket-lang.org")
        (modules . ())
        (name . "srfi")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/srfi.zip")
        (tags . ())))
 ("srfi-doc"
  .
  #hash((author
         .
         "mflatt@racket-lang.org noel@racket-lang.org chongkai@racket-lang.org jay@racket-lang.org")
        (checksum . "e785b773dcdff063a22ce37702e61eb90876708a")
        (dependencies
         .
         ("scheme-lib"
          "base"
          "scribble-lib"
          "compatibility-lib"
          "mzscheme-doc"
          "scheme-lib"
          "base"
          "scribble-lib"
          "srfi-lib"
          "racket-doc"
          "r5rs-doc"
          "r6rs-doc"
          "compatibility-lib"))
        (dependency-names
         .
         ("scheme-lib"
          "base"
          "scribble-lib"
          "compatibility-lib"
          "mzscheme-doc"
          "scheme-lib"
          "base"
          "scribble-lib"
          "srfi-lib"
          "racket-doc"
          "r5rs-doc"
          "r6rs-doc"
          "compatibility-lib"))
        (description
         .
         "mflatt@racket-lang.org noel@racket-lang.org chongkai@racket-lang.org jay@racket-lang.org")
        (modules . ())
        (name . "srfi-doc")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/srfi-doc.zip")
        (tags . ())))
 ("srfi-doc-nonfree"
  .
  #hash((author
         .
         "mflatt@racket-lang.org noel@racket-lang.org chongkai@racket-lang.org jay@racket-lang.org")
        (checksum . "0b8d31d6107324c25c8dba2632741c3dac497318")
        (dependencies
         .
         ("mzscheme-doc"
          "scheme-lib"
          "base"
          "scribble-lib"
          "srfi-doc"
          "srfi-lib-nonfree"
          "racket-doc"
          "r5rs-doc"
          "r6rs-doc"
          "compatibility-lib"))
        (dependency-names
         .
         ("mzscheme-doc"
          "scheme-lib"
          "base"
          "scribble-lib"
          "srfi-doc"
          "srfi-lib-nonfree"
          "racket-doc"
          "r5rs-doc"
          "r6rs-doc"
          "compatibility-lib"))
        (description
         .
         "mflatt@racket-lang.org noel@racket-lang.org chongkai@racket-lang.org jay@racket-lang.org")
        (modules . ())
        (name . "srfi-doc-nonfree")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/srfi-doc-nonfree.zip")
        (tags . ())))
 ("srfi-lib"
  .
  #hash((author
         .
         "mflatt@racket-lang.org noel@racket-lang.org chongkai@racket-lang.org jay@racket-lang.org")
        (checksum . "c91ba54b8388481603624061df5d057e7c04bd23")
        (dependencies
         .
         ("scheme-lib" "base" "srfi-lite-lib" "r6rs-lib" "compatibility-lib"))
        (dependency-names
         .
         ("scheme-lib" "base" "srfi-lite-lib" "r6rs-lib" "compatibility-lib"))
        (description
         .
         "mflatt@racket-lang.org noel@racket-lang.org chongkai@racket-lang.org jay@racket-lang.org")
        (modules . ())
        (name . "srfi-lib")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/srfi-lib.zip")
        (tags . ())))
 ("srfi-lib-nonfree"
  .
  #hash((author
         .
         "mflatt@racket-lang.org noel@racket-lang.org chongkai@racket-lang.org jay@racket-lang.org")
        (checksum . "33e6b1b3dbf5acde1dff7391a1f9c69c4817371b")
        (dependencies
         .
         ("scheme-lib" "base" "r6rs-lib" "srfi-lib" "compatibility-lib"))
        (dependency-names
         .
         ("scheme-lib" "base" "r6rs-lib" "srfi-lib" "compatibility-lib"))
        (description
         .
         "mflatt@racket-lang.org noel@racket-lang.org chongkai@racket-lang.org jay@racket-lang.org")
        (modules . ())
        (name . "srfi-lib-nonfree")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/srfi-lib-nonfree.zip")
        (tags . ())))
 ("srfi-lite-lib"
  .
  #hash((author . "mflatt@racket-lang.org")
        (checksum . "2849cb93557ad09f6283762024eb72eb5c753477")
        (dependencies . ("base"))
        (dependency-names . ("base"))
        (description . "mflatt@racket-lang.org")
        (modules . ())
        (name . "srfi-lite-lib")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/srfi-lite-lib.zip")
        (tags . ())))
 ("srfi-test"
  .
  #hash((author
         .
         "mflatt@racket-lang.org noel@racket-lang.org chongkai@racket-lang.org jay@racket-lang.org")
        (checksum . "8ffedc142a509abe4eea2e5ac2e561bc09d0adc3")
        (dependencies
         .
         ("scheme-lib" "base" "compatibility-lib" "rackunit-lib" "srfi-lib"))
        (dependency-names
         .
         ("scheme-lib" "base" "compatibility-lib" "rackunit-lib" "srfi-lib"))
        (description
         .
         "mflatt@racket-lang.org noel@racket-lang.org chongkai@racket-lang.org jay@racket-lang.org")
        (modules . ())
        (name . "srfi-test")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/srfi-test.zip")
        (tags . ())))
 ("ss-rpc-server"
  .
  #hasheq((author . "sekk1e@yandex.ru")
          (authors . ("sekk1e@yandex.ru"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "ss-rpc-server"
                    "doc/ss-rpc-server@ss-rpc-server/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/ss-rpc-server.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/ss-rpc-server.txt")))
          (checksum . "50f281f251f06ea0b56955a275750aa170a94254")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "srfi-lite-lib"
            "web-server-lib"
            "scribble-lib"
            "racket-doc"))
          (dependency-names
           .
           ("base"
            "srfi-lite-lib"
            "web-server-lib"
            "scribble-lib"
            "racket-doc"))
          (description
           .
           "RPC for using Racket as GNU Emacs extension language")
          (implies . ())
          (last-checked . 1557339783)
          (last-edit . 1473528355)
          (last-updated . 1502816454)
          (modules
           .
           ((lib "ss-rpc-server/examples/echo.rkt")
            (lib "ss-rpc-server/main.rkt")
            (lib "ss-rpc-server/ss-rpc-server.scrbl")))
          (name . "ss-rpc-server")
          (nix-sha256
           .
           "1xy9hrrawcrqaj1515cyq1qq5162qz75pazimdx521939chasm6l")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:sekk1e@yandex.ru . #t)
                   (emacs . #t)
                   (ring:1 . #t)
                   (rpc . #t)))
          (source . "git://github.com/sk1e/ss-rpc-server")
          (tags . ("emacs" "rpc"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "50f281f251f06ea0b56955a275750aa170a94254")
                          (source . "git://github.com/sk1e/ss-rpc-server")
                          (source_url
                           .
                           "http://github.com/sk1e/ss-rpc-server/tree/master")))))))
 ("ssh-hack"
  .
  #hasheq((author . "winston@ml1.net")
          (authors . ("winston@ml1.net"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . "server/built/deps/ssh-hack.txt")
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/ssh-hack.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/ssh-hack.txt")))
          (checksum . "3f058ba19db378874b8da7fdefbc11de42121b37")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ())
          (dependency-names . ())
          (description . "A simple Dgamelaunch client")
          (implies . ())
          (last-checked . 1557339784)
          (last-edit . 1527531521)
          (last-updated . 1527695191)
          (modules
           .
           ((lib "ssh-hack/ssh-hack.rkt") (lib "ssh-hack/main.rkt")))
          (name . "ssh-hack")
          (nix-sha256
           .
           "1p8031k8ai5lxns67s2l7qi85aljn27ir4hl80v6k81r77bdlk8z")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-dep-fail: . #t)
                   (:build-success: . #t)
                   (author:winston@ml1.net . #t)
                   (nethack . #t)
                   (ring:2 . #t)
                   (ssh . #t)
                   (util . #t)
                   (utilities . #t)
                   (utility . #t)))
          (source . "https://github.com/winny-/ssh-hack.git")
          (tags . ("nethack" "ssh" "util" "utilities" "utility"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "3f058ba19db378874b8da7fdefbc11de42121b37")
                          (source . "https://github.com/winny-/ssh-hack.git")
                          (source_url
                           .
                           "https://github.com/winny-/ssh-hack.git")))))))
 ("staged-slide"
  .
  #hasheq((author . "stamourv@racket-lang.org cce@racket-lang.org")
          (authors . ("stamourv@racket-lang.org" "cce@racket-lang.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "staged-slide"
                    "doc/staged-slide@staged-slide/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/staged-slide.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/staged-slide.txt")))
          (checksum . "28b9389ea83984306dd50b634cb795c3bd86ca41")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "pict-lib"
            "slideshow-lib"
            "scribble-lib"
            "pict-doc"
            "racket-doc"
            "slideshow-doc"))
          (dependency-names
           .
           ("base"
            "pict-lib"
            "slideshow-lib"
            "scribble-lib"
            "pict-doc"
            "racket-doc"
            "slideshow-doc"))
          (description . "Helpers for building staged slides in Slideshow")
          (implies . ())
          (last-checked . 1557339784)
          (last-edit . 1441219803)
          (last-updated . 1502816454)
          (modules
           .
           ((lib "slideshow/staged-slide.rkt")
            (lib "slideshow/scribblings/staged-slide.scrbl")))
          (name . "staged-slide")
          (nix-sha256
           .
           "0czkq90ywrplnqkxk2xfx0c21cj1kdf6ksqn447fccrnllzgn7xz")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:cce@racket-lang.org . #t)
                   (author:stamourv@racket-lang.org . #t)
                   (ring:1 . #t)
                   (slideshow . #t)))
          (source . "git://github.com/stamourv/staged-slide")
          (tags . ("slideshow"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "28b9389ea83984306dd50b634cb795c3bd86ca41")
                          (source . "git://github.com/stamourv/staged-slide")
                          (source_url
                           .
                           "http://github.com/stamourv/staged-slide/tree/master")))
                 ("6.2"
                  .
                  #hasheq((checksum
                           .
                           "9f098dddde7f217879070816090c1e8e74d49432")
                          (source
                           .
                           "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")
                          (source_url
                           .
                           "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")))
                 ("6.2.1"
                  .
                  #hasheq((checksum
                           .
                           "9f098dddde7f217879070816090c1e8e74d49432")
                          (source
                           .
                           "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")
                          (source_url
                           .
                           "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")))
                 ("6.3"
                  .
                  #hasheq((checksum
                           .
                           "79e4932c0d877b8aaafce5947bf1634c1ecfa26b")
                          (source
                           .
                           "github://github.com/stamourv/staged-slide/racket-6.3")
                          (source_url
                           .
                           "http://github.com/stamourv/staged-slide/tree/racket-6.3")))))))
 ("stardate"
  .
  #hasheq((author . "dyoo@hashcollision.org")
          (authors . ("dyoo@hashcollision.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "stardate" "doc/stardate@stardate/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/stardate.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/stardate.txt")))
          (checksum . "580558886983d73916c355e21400310a59729be5")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "racket-doc" "scribble-lib"))
          (dependency-names . ("base" "racket-doc" "scribble-lib"))
          (description . "Compute the current TNG stardate.")
          (implies . ())
          (last-checked . 1557339784)
          (last-edit . 1352401914)
          (last-updated . 1502816454)
          (modules
           .
           ((lib "stardate/stardate.scrbl") (lib "stardate/main.rkt")))
          (name . "stardate")
          (nix-sha256
           .
           "0kh2p28npj93z7c41byzxq2pkc36nj0hpskyb11j0dhzrz0vb3yy")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:dyoo@hashcollision.org . #t)
                   (date . #t)
                   (ring:1 . #t)))
          (source . "github://github.com/dyoo/stardate/master")
          (tags . ("date"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "580558886983d73916c355e21400310a59729be5")
                          (source
                           .
                           "github://github.com/dyoo/stardate/master")
                          (source_url
                           .
                           "http://github.com/dyoo/stardate/tree/master")))))))
 ("static-rename"
  .
  #hasheq((author . "lexi.lambda@gmail.com")
          (authors . ("lexi.lambda@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/static-rename.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/static-rename.txt")))
          (checksum . "50f1ff9866a3ef116471eb1a483c1992480dcd45")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("static-rename-doc" "static-rename-lib"))
          (dependency-names . ("static-rename-doc" "static-rename-lib"))
          (description . "")
          (implies . ("static-rename-doc" "static-rename-lib"))
          (last-checked . 1557339784)
          (last-edit . 1490649794)
          (last-updated . 1502816455)
          (modules . ())
          (name . "static-rename")
          (nix-sha256
           .
           "09gzqnlilws5hm7ayg1cc82maz72syxa52p0r89ayazxhw0yfmyx")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:no-desc: . #t)
                   (:no-tag: . #t)
                   (author:lexi.lambda@gmail.com . #t)
                   (ring:1 . #t)))
          (source
           .
           "git://github.com/lexi-lambda/racket-static-rename?path=static-rename")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "50f1ff9866a3ef116471eb1a483c1992480dcd45")
                          (source
                           .
                           "git://github.com/lexi-lambda/racket-static-rename?path=static-rename")
                          (source_url
                           .
                           "http://github.com/lexi-lambda/racket-static-rename/tree/master?path=static-rename")))))))
 ("static-rename-doc"
  .
  #hasheq((author . "lexi.lambda@gmail.com")
          (authors . ("lexi.lambda@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "static-rename"
                    "doc/static-rename@static-rename-doc/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/static-rename-doc.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/static-rename-doc.txt")))
          (checksum . "50f1ff9866a3ef116471eb1a483c1992480dcd45")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base" "racket-doc" "scribble-lib" "static-rename-lib"))
          (dependency-names
           .
           ("base" "racket-doc" "scribble-lib" "static-rename-lib"))
          (description
           .
           "documentation (no implementation) for “static-rename”")
          (implies . ())
          (last-checked . 1557339784)
          (last-edit . 1490649800)
          (last-updated . 1502816455)
          (modules . ((lib "scribblings/static-rename/main.scrbl")))
          (name . "static-rename-doc")
          (nix-sha256
           .
           "09gzqnlilws5hm7ayg1cc82maz72syxa52p0r89ayazxhw0yfmyx")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (:no-tag: . #t)
                   (author:lexi.lambda@gmail.com . #t)
                   (ring:1 . #t)))
          (source
           .
           "git://github.com/lexi-lambda/racket-static-rename?path=static-rename-doc")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "50f1ff9866a3ef116471eb1a483c1992480dcd45")
                          (source
                           .
                           "git://github.com/lexi-lambda/racket-static-rename?path=static-rename-doc")
                          (source_url
                           .
                           "http://github.com/lexi-lambda/racket-static-rename/tree/master?path=static-rename-doc")))))))
 ("static-rename-lib"
  .
  #hasheq((author . "lexi.lambda@gmail.com")
          (authors . ("lexi.lambda@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/static-rename-lib.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/static-rename-lib.txt")))
          (checksum . "50f1ff9866a3ef116471eb1a483c1992480dcd45")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . (("base" #:version "6.2")))
          (dependency-names . ("base"))
          (description
           .
           "implementation (no documentation) for “static-rename”")
          (implies . ())
          (last-checked . 1557339784)
          (last-edit . 1490649800)
          (last-updated . 1502816455)
          (modules . ((lib "static-rename/main.rkt")))
          (name . "static-rename-lib")
          (nix-sha256
           .
           "09gzqnlilws5hm7ayg1cc82maz72syxa52p0r89ayazxhw0yfmyx")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:no-tag: . #t)
                   (author:lexi.lambda@gmail.com . #t)
                   (ring:1 . #t)))
          (source
           .
           "git://github.com/lexi-lambda/racket-static-rename?path=static-rename-lib")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "50f1ff9866a3ef116471eb1a483c1992480dcd45")
                          (source
                           .
                           "git://github.com/lexi-lambda/racket-static-rename?path=static-rename-lib")
                          (source_url
                           .
                           "http://github.com/lexi-lambda/racket-static-rename/tree/master?path=static-rename-lib")))))))
 ("static-rename-test"
  .
  #hasheq((author . "lexi.lambda@gmail.com")
          (authors . ("lexi.lambda@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/static-rename-test.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/static-rename-test.txt")))
          (checksum . "50f1ff9866a3ef116471eb1a483c1992480dcd45")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base" "rackunit-lib" "rackunit-spec" "static-rename-lib"))
          (dependency-names
           .
           ("base" "rackunit-lib" "rackunit-spec" "static-rename-lib"))
          (description . "")
          (implies . ())
          (last-checked . 1557339784)
          (last-edit . 1490649803)
          (last-updated . 1502816455)
          (modules . ((lib "tests/static-rename/main.rkt")))
          (name . "static-rename-test")
          (nix-sha256
           .
           "09gzqnlilws5hm7ayg1cc82maz72syxa52p0r89ayazxhw0yfmyx")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:no-desc: . #t)
                   (:no-tag: . #t)
                   (author:lexi.lambda@gmail.com . #t)
                   (ring:1 . #t)))
          (source
           .
           "git://github.com/lexi-lambda/racket-static-rename?path=static-rename-test")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "50f1ff9866a3ef116471eb1a483c1992480dcd45")
                          (source
                           .
                           "git://github.com/lexi-lambda/racket-static-rename?path=static-rename-test")
                          (source_url
                           .
                           "http://github.com/lexi-lambda/racket-static-rename/tree/master?path=static-rename-test")))))))
 ("statsd"
  .
  #hasheq((author . "me@apgwoz.com")
          (authors . ("me@apgwoz.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/statsd.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/statsd.txt")))
          (checksum . "39a640686053be83442bfb129a279b8d00d6a177")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "scribble-lib" "racket-doc" "rackunit-lib"))
          (dependency-names
           .
           ("base" "scribble-lib" "racket-doc" "rackunit-lib"))
          (description . "statsd client for racket")
          (implies . ())
          (last-checked . 1557339784)
          (last-edit . 1494310113)
          (last-updated . 1502816455)
          (modules
           .
           ((lib "scribblings/net/statsd.scrbl")
            (lib "net/statsd/main.rkt")
            (lib "net/statsd.rkt")))
          (name . "statsd")
          (nix-sha256
           .
           "1za8gi3gbcl5sshqnx23wgpsanrmk6k4dxrscxcrgnqcb5g74w3j")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:me@apgwoz.com . #t)
                   (metrics . #t)
                   (net . #t)
                   (ring:1 . #t)
                   (statsd . #t)))
          (source . "git://github.com/apg/statsd-rkt")
          (tags . ("metrics" "net" "statsd"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "39a640686053be83442bfb129a279b8d00d6a177")
                          (source . "git://github.com/apg/statsd-rkt")
                          (source_url
                           .
                           "http://github.com/apg/statsd-rkt/tree/master")))))))
 ("stockfighter-racket"
  .
  #hasheq((author . "euler90h@gmail.com")
          (authors . ("euler90h@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log
                  .
                  "server/built/deps/stockfighter-racket.txt")
                 (docs
                  .
                  (("main"
                    "stockfighter-api"
                    "doc/stockfighter-api@stockfighter-racket/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log
                  .
                  "server/built/install/stockfighter-racket.txt")
                 (test-failure-log
                  .
                  "server/built/test-fail/stockfighter-racket.txt")
                 (test-success-log . #f)))
          (checksum . "cf7669c2d79645a54ee287df14a3e704006e0096")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base" "rackunit-lib" "rfc6455" "scribble-lib" "racket-doc"))
          (dependency-names
           .
           ("base" "rackunit-lib" "rfc6455" "scribble-lib" "racket-doc"))
          (description . "Stockfighter API client")
          (implies . ())
          (last-checked . 1557339784)
          (last-edit . 1450936553)
          (last-updated . 1502816456)
          (modules
           .
           ((lib "stockfighter-api/time.rkt")
            (lib "stockfighter-api/main.rkt")
            (lib "stockfighter-api/fills.rkt")
            (lib "stockfighter-api/orders.rkt")
            (lib "stockfighter-api/scribblings/stockfighter-api.scrbl")
            (lib "stockfighter-api/quotes.rkt")
            (lib "stockfighter-api/stockfighter.rkt")
            (lib "stockfighter-api/feed.rkt")))
          (name . "stockfighter-racket")
          (nix-sha256
           .
           "0mjy18a5nxjw1mvdnb973rf4nyfkkc7hyy8zq323iiad78xx88gb")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-dep-fail: . #t)
                   (:build-success: . #t)
                   (:docs: . #t)
                   (:no-tag: . #t)
                   (author:euler90h@gmail.com . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/eu90h/stockfighter-racket")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "cf7669c2d79645a54ee287df14a3e704006e0096")
                          (source
                           .
                           "git://github.com/eu90h/stockfighter-racket")
                          (source_url
                           .
                           "http://github.com/eu90h/stockfighter-racket/tree/master")))))))
 ("stomp"
  .
  #hasheq((author . "tonygarnockjones@gmail.com")
          (authors . ("tonygarnockjones@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "stomp" "doc/stomp@stomp/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/stomp.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/stomp.txt")))
          (checksum . "8ec9471362f42253df787c83dc3f241086be6b9f")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "racket-doc" "rackunit-lib" "scribble-lib"))
          (dependency-names
           .
           ("base" "racket-doc" "rackunit-lib" "scribble-lib"))
          (description . "STOMP messaging protocol codec and client")
          (implies . ())
          (last-checked . 1557339784)
          (last-edit . 1441911242)
          (last-updated . 1538045935)
          (modules
           .
           ((lib "stomp/examples/rpc-client.rkt")
            (lib "stomp/examples/stomp-tail-activemq.rkt")
            (lib "stomp/test-functional-queue.rkt")
            (lib "stomp/examples/rpc-server.rkt")
            (lib "stomp/main.rkt")
            (lib "stomp/packet.rkt")
            (lib "stomp/session.rkt")
            (lib "stomp/test-packet.rkt")
            (lib "stomp/functional-queue.rkt")
            (lib "stomp/examples/stomp-tail.rkt")
            (lib "stomp/scribblings/stomp.scrbl")))
          (name . "stomp")
          (nix-sha256
           .
           "0hrqdsxssyp6ldrxv6z96v8kw3jj4gmy2ljp0ma0skan0nyp8r4y")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:tonygarnockjones@gmail.com . #t)
                   (communication . #t)
                   (net . #t)
                   (ring:1 . #t)))
          (source . "github://github.com/tonyg/racket-stomp/master")
          (tags . ("communication" "net"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "8ec9471362f42253df787c83dc3f241086be6b9f")
                          (source
                           .
                           "github://github.com/tonyg/racket-stomp/master")
                          (source_url
                           .
                           "http://github.com/tonyg/racket-stomp/tree/master")))))))
 ("stretchable-snip"
  .
  #hasheq((author . "kalimehtar@mail.ru")
          (authors . ("kalimehtar@mail.ru"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "stretchable-snip"
                    "doc/stretchable-snip@stretchable-snip/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/stretchable-snip.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/stretchable-snip.txt")))
          (checksum . "5953118ad3b3e9d60b350d57b5b5c9a653ee1a14")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "gui-lib"
            "scribble-lib"
            "racket-doc"
            "rackunit-lib"
            "draw-doc"
            "gui-doc"))
          (dependency-names
           .
           ("base"
            "gui-lib"
            "scribble-lib"
            "racket-doc"
            "rackunit-lib"
            "draw-doc"
            "gui-doc"))
          (description
           .
           "Racket library for stretchable (scalable) editor snips")
          (implies . ())
          (last-checked . 1557339784)
          (last-edit . 1535915056)
          (last-updated . 1556510521)
          (modules
           .
           ((lib "stretchable-snip/main.rkt")
            (lib "stretchable-snip/scribblings/stretchable-snip.scrbl")))
          (name . "stretchable-snip")
          (nix-sha256
           .
           "0995hyf68ry95gik75v4al7myjk3fq2648xklnpfqw6vrkjmdhf1")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:kalimehtar@mail.ru . #t)
                   (gui . #t)
                   (ring:2 . #t)))
          (source . "https://github.com/Kalimehtar/stretchable-snip.git")
          (tags . ("gui"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "5953118ad3b3e9d60b350d57b5b5c9a653ee1a14")
                          (source
                           .
                           "https://github.com/Kalimehtar/stretchable-snip.git")
                          (source_url
                           .
                           "https://github.com/Kalimehtar/stretchable-snip.git")))))))
 ("string-constants"
  .
  #hash((author . "robby@racket-lang.org")
        (checksum . "cc980dcabf6d8c7eaf1f054c7e17efac7df1ec67")
        (dependencies . ("string-constants-lib" "string-constants-doc"))
        (dependency-names . ("string-constants-lib" "string-constants-doc"))
        (description . "robby@racket-lang.org")
        (modules . ())
        (name . "string-constants")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/string-constants.zip")
        (tags . ())))
 ("string-constants-doc"
  .
  #hash((author . "robby@racket-lang.org")
        (checksum . "b0167d272ae4920287be161956992397af0d5f60")
        (dependencies
         .
         ("string-constants-lib" "base" "racket-doc" "scribble-lib"))
        (dependency-names
         .
         ("string-constants-lib" "base" "racket-doc" "scribble-lib"))
        (description . "robby@racket-lang.org")
        (modules . ())
        (name . "string-constants-doc")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/string-constants-doc.zip")
        (tags . ())))
 ("string-constants-lib"
  .
  #hash((author . "robby@racket-lang.org")
        (checksum . "356bc815c1d1221b2cceb21deae6ac6f720cf23d")
        (dependencies . ("base"))
        (dependency-names . ("base"))
        (description . "robby@racket-lang.org")
        (modules . ())
        (name . "string-constants-lib")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/string-constants-lib.zip")
        (tags . ())))
 ("string-sexpr"
  .
  #hasheq((author . "matthias@ccs.neu.edu")
          (authors . ("matthias@ccs.neu.edu"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . "server/built/deps/string-sexpr.txt")
                 (docs
                  .
                  (("main"
                    "string-sexpr"
                    "doc/string-sexpr@string-sexpr/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/string-sexpr.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/string-sexpr.txt")))
          (checksum . "b87319d3c34be048df24222e54c7dc4327063dc8")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("racket" "scribble-lib" "racket-doc"))
          (dependency-names . ("scribble-lib" "racket-doc"))
          (description . "a supplementary package for Fundamentals I")
          (implies . ())
          (last-checked . 1557339785)
          (last-edit . 1479092417)
          (last-updated . 1502816458)
          (modules
           .
           ((lib "string-sexpr/scribblings/string-sexpr.scrbl")
            (lib "string-sexpr/main.rkt")))
          (name . "string-sexpr")
          (nix-sha256
           .
           "1r749df8zxhyfas7rslflafxdlxfingl59lv1dp6xn5zhl1izzjz")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-dep-fail: . #t)
                   (:build-success: . #t)
                   (:docs: . #t)
                   (author:matthias@ccs.neu.edu . #t)
                   (ring:1 . #t)
                   (string . #t)))
          (source . "git://github.com/mfelleisen/string-sexpr")
          (tags . ("string"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "b87319d3c34be048df24222e54c7dc4327063dc8")
                          (source
                           .
                           "git://github.com/mfelleisen/string-sexpr")
                          (source_url
                           .
                           "http://github.com/mfelleisen/string-sexpr/tree/master")))))))
 ("string-util"
  .
  #hasheq((author . "ray.racine@gmail.com")
          (authors . ("ray.racine@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "string-util"
                    "doc/string-util@string-util/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/string-util.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/string-util.txt")))
          (checksum . "4af2c3e5f21accaa4bc8f02db2bfe8f1b9a62223")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("opt"
            "list-util"
            "srfi-lite-lib"
            "typed-racket-more"
            "typed-racket-lib"
            "base"
            "scribble-lib"
            "racket-doc"
            "rackunit-lib"))
          (dependency-names
           .
           ("opt"
            "list-util"
            "srfi-lite-lib"
            "typed-racket-more"
            "typed-racket-lib"
            "base"
            "scribble-lib"
            "racket-doc"
            "rackunit-lib"))
          (description . "Additional string utilities in Typed Racket.")
          (implies . ())
          (last-checked . 1557339785)
          (last-edit . 1528468098)
          (last-updated . 1528559408)
          (modules
           .
           ((lib "string-util/main.rkt")
            (lib "string-util/scribblings/string-util.scrbl")))
          (name . "string-util")
          (nix-sha256
           .
           "16m931d278n2r1kxx5klwyb9wbark5z3jpqancswj3ssrhkrb63y")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:ray.racine@gmail.com . #t)
                   (ring:2 . #t)
                   (string . #t)
                   (strings . #t)
                   (typed . #t)
                   (utils . #t)))
          (source . "https://gitlab.com/RayRacine/string-util.git")
          (tags . ("string" "strings" "typed" "utils"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "4af2c3e5f21accaa4bc8f02db2bfe8f1b9a62223")
                          (source
                           .
                           "https://gitlab.com/RayRacine/string-util.git")
                          (source_url
                           .
                           "https://gitlab.com/RayRacine/string-util.git")))))))
 ("struct-defaults"
  .
  #hasheq((author . "tonygarnockjones@gmail.com")
          (authors . ("tonygarnockjones@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/struct-defaults.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/struct-defaults.txt")))
          (checksum . "97fb427ab2210ba145486604b2095704c51da6a9")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "rackunit-lib"))
          (dependency-names . ("base" "rackunit-lib"))
          (description . " Default values in struct ctors and patterns.")
          (implies . ())
          (last-checked . 1557339786)
          (last-edit . 1467565988)
          (last-updated . 1502816459)
          (modules
           .
           ((lib "struct-defaults/test-provide.rkt")
            (lib "struct-defaults/main.rkt")
            (lib "struct-defaults/test-computed-defaults.rkt")))
          (name . "struct-defaults")
          (nix-sha256
           .
           "0c8igcgx9h5pp5497gny385kldrcjsy5pnxyhl5nknfy5aqfgfbp")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:tonygarnockjones@gmail.com . #t)
                   (ring:1 . #t)
                   (structs . #t)))
          (source . "git://github.com/tonyg/racket-struct-defaults")
          (tags . ("structs"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "97fb427ab2210ba145486604b2095704c51da6a9")
                          (source
                           .
                           "git://github.com/tonyg/racket-struct-defaults")
                          (source_url
                           .
                           "http://github.com/tonyg/racket-struct-defaults/tree/master")))))))
 ("struct-define"
  .
  #hasheq((author . "jay.mccarthy@gmail.com")
          (authors . ("jay.mccarthy@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "struct-define"
                    "doc/struct-define@struct-define/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/struct-define.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/struct-define.txt")))
          (checksum . "6f109ba648ab5cc7c5fe59f98786af4516e368be")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "racket-doc" "sandbox-lib" "scribble-lib"))
          (dependency-names
           .
           ("base" "racket-doc" "sandbox-lib" "scribble-lib"))
          (description . "quickly pull out struct fields")
          (implies . ())
          (last-checked . 1557339786)
          (last-edit . 1515102523)
          (last-updated . 1538594774)
          (modules
           .
           ((lib "struct-define/struct-define.scrbl")
            (lib "struct-define/main.rkt")))
          (name . "struct-define")
          (nix-sha256
           .
           "0rhg23yrrp9kayx2sph2ixkq6xjvv8d6kar95z2rw7479awvjbvm")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:jay.mccarthy@gmail.com . #t)
                   (ring:2 . #t)
                   (utilities . #t)))
          (source . "https://github.com/jeapostrophe/struct-define.git")
          (tags . ("utilities"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "6f109ba648ab5cc7c5fe59f98786af4516e368be")
                          (source
                           .
                           "https://github.com/jeapostrophe/struct-define.git")
                          (source_url
                           .
                           "https://github.com/jeapostrophe/struct-define.git")))))))
 ("struct-like-struct-type-property"
  .
  #hasheq((author . "alexander@knauth.org iitalics@gmail.com")
          (authors . ("alexander@knauth.org" "iitalics@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "struct-like-struct-type-property"
                    "doc/struct-like-struct-type-property@struct-like-struct-type-property/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log
                  .
                  "server/built/install/struct-like-struct-type-property.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/struct-like-struct-type-property.txt")))
          (checksum . "1d237f9b8e4bbc01e1aed05a73f23d2dbbb3614b")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "rackunit-lib" "scribble-lib" "racket-doc"))
          (dependency-names
           .
           ("base" "rackunit-lib" "scribble-lib" "racket-doc"))
          (description
           .
           "Creating struct-type properties with a struct-like interface")
          (implies . ())
          (last-checked . 1557339786)
          (last-edit . 1532235409)
          (last-updated . 1545548313)
          (modules
           .
           ((lib "struct-like-struct-type-property/util/id-transformer.rkt")
            (lib "struct-like-struct-type-property/util/fmt-id.rkt")
            (lib "struct-like-struct-type-property/test/syntax-class.rkt")
            (lib "struct-like-struct-type-property/test/test.rkt")
            (lib
             "struct-like-struct-type-property/scribblings/struct-like-struct-type-property.scrbl")
            (lib "struct-like-struct-type-property/test/test-quadratic.rkt")
            (lib "struct-like-struct-type-property/syntax-class.rkt")
            (lib "struct-like-struct-type-property/main.rkt")))
          (name . "struct-like-struct-type-property")
          (nix-sha256
           .
           "1lmj210vcxl2n8p5pxnqlypv46sl4na2vp6nmq4j6v5jrhlr4yfq")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:alexander@knauth.org . #t)
                   (author:iitalics@gmail.com . #t)
                   (ring:2 . #t)
                   (struct-type-property . #t)
                   (structs . #t)))
          (source
           .
           "https://github.com/AlexKnauth/struct-like-struct-type-property.git")
          (tags . ("struct-type-property" "structs"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "1d237f9b8e4bbc01e1aed05a73f23d2dbbb3614b")
                          (source
                           .
                           "https://github.com/AlexKnauth/struct-like-struct-type-property.git")
                          (source_url
                           .
                           "https://github.com/AlexKnauth/struct-like-struct-type-property.git")))))))
 ("struct-plus-plus"
  .
  #hasheq((author . "david.storrs@gmail.com")
          (authors . ("david.storrs@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("salvage"
                    "struct-plus-plus"
                    "doc/struct-plus-plus@struct-plus-plus/index.html")))
                 (failure-log . "server/built/fail/struct-plus-plus.txt")
                 (min-failure-log . #f)
                 (success-log . #f)
                 (test-failure-log . #f)
                 (test-success-log . #f)))
          (checksum . "66e84c30982d0434ccd1b3a00be1e7a4c2cbfbf9")
          (checksum-error . #f)
          (conflicts . ())
          (date-added . 1550364995)
          (dependencies
           .
           ("base"
            "handy"
            "syntax-classes-lib"
            "at-exp-lib"
            "racket-doc"
            "scribble-lib"))
          (dependency-names
           .
           ("base"
            "handy"
            "syntax-classes-lib"
            "at-exp-lib"
            "racket-doc"
            "scribble-lib"))
          (description
           .
           "Extended form of struct.  Generates keyword constructors, functional setters and updaters.  Allows per-field default values, contracts, wrapper functions, and declarative-syntax rules for interfield relations and transformations.")
          (implies . ())
          (last-checked . 1557339786)
          (last-edit . 1550364995)
          (last-updated . 1555481237)
          (modules
           .
           ((lib "struct-plus-plus/scribblings/struct-plus-plus.scrbl")
            (lib "struct-plus-plus/make_functional_setter.rkt")
            (lib "struct-plus-plus/reflection.rkt")
            (lib "struct-plus-plus/main.rkt")
            (lib "struct-plus-plus/tests/test_make_functional_setter.rkt")
            (lib "struct-plus-plus/tests/test_main.rkt")))
          (name . "struct-plus-plus")
          (nix-sha256
           .
           "1gla4hvaklgh5jyw7n4agqvgwrjk3cyd8fp9ak4qvhddva0dd3rk")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-fail: . #t)
                   (:docs-error: . #t)
                   (:docs: . #t)
                   (author:david.storrs@gmail.com . #t)
                   (ring:2 . #t)
                   (struct . #t)))
          (source . "https://github.com/dstorrs/struct-plus-plus.git")
          (tags . ("struct"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "66e84c30982d0434ccd1b3a00be1e7a4c2cbfbf9")
                          (source
                           .
                           "https://github.com/dstorrs/struct-plus-plus.git")
                          (source_url
                           .
                           "https://github.com/dstorrs/struct-plus-plus.git")))))))
 ("struct-update"
  .
  #hasheq((author . "lexi.lambda@gmail.com")
          (authors . ("lexi.lambda@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/struct-update.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/struct-update.txt")))
          (checksum . "8ce456cde8764ae27c348123ec9e01e76826d536")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "struct-update-lib" "struct-update-doc"))
          (dependency-names
           .
           ("base" "struct-update-lib" "struct-update-doc"))
          (description . "")
          (implies . ("struct-update-lib" "struct-update-doc"))
          (last-checked . 1557339786)
          (last-edit . 1469648515)
          (last-updated . 1502816459)
          (modules . ())
          (name . "struct-update")
          (nix-sha256
           .
           "14bmg0lchqy198wmbx05a8w5rpgk4rqagfg9izyj4dgkii9wrgzh")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:no-desc: . #t)
                   (:no-tag: . #t)
                   (author:lexi.lambda@gmail.com . #t)
                   (ring:1 . #t)))
          (source
           .
           "git://github.com/lexi-lambda/struct-update.git?path=struct-update")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "8ce456cde8764ae27c348123ec9e01e76826d536")
                          (source
                           .
                           "git://github.com/lexi-lambda/struct-update.git?path=struct-update")
                          (source_url
                           .
                           "http://github.com/lexi-lambda/struct-update.git/tree/master?path=struct-update")))))))
 ("struct-update-doc"
  .
  #hasheq((author . "lexi.lambda@gmail.com")
          (authors . ("lexi.lambda@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "struct-update"
                    "doc/struct-update@struct-update-doc/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/struct-update-doc.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/struct-update-doc.txt")))
          (checksum . "8ce456cde8764ae27c348123ec9e01e76826d536")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base" "racket-doc" "scribble-lib" "struct-update-lib"))
          (dependency-names
           .
           ("base" "racket-doc" "scribble-lib" "struct-update-lib"))
          (description
           .
           "documentation (no implementation) for “struct-update”")
          (implies . ())
          (last-checked . 1557339786)
          (last-edit . 1469648494)
          (last-updated . 1502816459)
          (modules . ((lib "scribblings/struct-update.scrbl")))
          (name . "struct-update-doc")
          (nix-sha256
           .
           "14bmg0lchqy198wmbx05a8w5rpgk4rqagfg9izyj4dgkii9wrgzh")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (:no-tag: . #t)
                   (author:lexi.lambda@gmail.com . #t)
                   (ring:1 . #t)))
          (source
           .
           "git://github.com/lexi-lambda/struct-update.git?path=struct-update-doc")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "8ce456cde8764ae27c348123ec9e01e76826d536")
                          (source
                           .
                           "git://github.com/lexi-lambda/struct-update.git?path=struct-update-doc")
                          (source_url
                           .
                           "http://github.com/lexi-lambda/struct-update.git/tree/master?path=struct-update-doc")))))))
 ("struct-update-lib"
  .
  #hasheq((author . "lexi.lambda@gmail.com")
          (authors . ("lexi.lambda@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/struct-update-lib.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/struct-update-lib.txt")))
          (checksum . "8ce456cde8764ae27c348123ec9e01e76826d536")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "syntax-classes-lib"))
          (dependency-names . ("base" "syntax-classes-lib"))
          (description
           .
           "implementation (no documentation) for “struct-update”")
          (implies . ())
          (last-checked . 1557339786)
          (last-edit . 1469648472)
          (last-updated . 1502816459)
          (modules . ((lib "struct-update/main.rkt")))
          (name . "struct-update-lib")
          (nix-sha256
           .
           "14bmg0lchqy198wmbx05a8w5rpgk4rqagfg9izyj4dgkii9wrgzh")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:no-tag: . #t)
                   (author:lexi.lambda@gmail.com . #t)
                   (ring:1 . #t)))
          (source
           .
           "git://github.com/lexi-lambda/struct-update.git?path=struct-update-lib")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "8ce456cde8764ae27c348123ec9e01e76826d536")
                          (source
                           .
                           "git://github.com/lexi-lambda/struct-update.git?path=struct-update-lib")
                          (source_url
                           .
                           "http://github.com/lexi-lambda/struct-update.git/tree/master?path=struct-update-lib")))))))
 ("struct-update-test"
  .
  #hasheq((author . "lexi.lambda@gmail.com")
          (authors . ("lexi.lambda@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/struct-update-test.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/struct-update-test.txt")))
          (checksum . "8ce456cde8764ae27c348123ec9e01e76826d536")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base" "rackunit-lib" "rackunit-spec" "struct-update-lib"))
          (dependency-names
           .
           ("base" "rackunit-lib" "rackunit-spec" "struct-update-lib"))
          (description . "")
          (implies . ())
          (last-checked . 1557339786)
          (last-edit . 1469648507)
          (last-updated . 1502816459)
          (modules
           .
           ((lib "tests/struct-update.rkt")
            (lib "tests/struct-update-super.rkt")))
          (name . "struct-update-test")
          (nix-sha256
           .
           "14bmg0lchqy198wmbx05a8w5rpgk4rqagfg9izyj4dgkii9wrgzh")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:no-desc: . #t)
                   (:no-tag: . #t)
                   (author:lexi.lambda@gmail.com . #t)
                   (ring:1 . #t)))
          (source
           .
           "git://github.com/lexi-lambda/struct-update.git?path=struct-update-test")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "8ce456cde8764ae27c348123ec9e01e76826d536")
                          (source
                           .
                           "git://github.com/lexi-lambda/struct-update.git?path=struct-update-test")
                          (source_url
                           .
                           "http://github.com/lexi-lambda/struct-update.git/tree/master?path=struct-update-test")))))))
 ("stxparse-info"
  .
  #hasheq((author . "georges.duperon@gmail.com")
          (authors . ("georges.duperon@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "stxparse-info"
                    "doc/stxparse-info@stxparse-info/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/stxparse-info.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/stxparse-info.txt")))
          (checksum . "c725ad4265a804e9161e4f2a6e53d5f7069c18fe")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           (("base" #:version "6.7.0.900")
            "rackunit-lib"
            "version-case"
            "subtemplate"
            "auto-syntax-e"
            "compatibility-lib"
            "scribble-lib"
            "racket-doc"
            "at-exp-lib"))
          (dependency-names
           .
           ("base"
            "rackunit-lib"
            "version-case"
            "subtemplate"
            "auto-syntax-e"
            "compatibility-lib"
            "scribble-lib"
            "racket-doc"
            "at-exp-lib"))
          (description
           .
           "Patched version of syntax/parse which tracks which syntax pattern variables are bound. Use (current-pvars) to access that list.")
          (implies . ())
          (last-checked . 1557339786)
          (last-edit . 1522049206)
          (last-updated . 1556140038)
          (modules
           .
           ((lib "stxparse-info/case/stxloc.rkt")
            (lib "stxparse-info/parse/experimental/template.rkt")
            (lib "stxparse-info/test/test-compatibility1.rkt")
            (lib "stxparse-info/parse/experimental/splicing.rkt")
            (lib "stxparse-info/parse/private/runtime-progress.rkt")
            (lib "stxparse-info/my-include.rkt")
            (lib "stxparse-info/case/template.rkt")
            (lib "stxparse-info/test/test-current-pvars.rkt")
            (lib "stxparse-info/parse/private/residual.rkt")
            (lib "stxparse-info/parse/experimental/provide.rkt")
            (lib "stxparse-info/parse/define.rkt")
            (lib "stxparse-info/parse/private/runtime.rkt")
            (lib "stxparse-info/test/test-check-variable-visible.rkt")
            (lib "stxparse-info/case/syntax.rkt")
            (lib "stxparse-info/parse/experimental/specialize.rkt")
            (lib "stxparse-info/parse/private/txlift.rkt")
            (lib "stxparse-info/case/with-stx.rkt")
            (lib "stxparse-info/parse/private/parse.rkt")
            (lib "stxparse-info/parse/private/litconv.rkt")
            (lib "stxparse-info/parse/private/runtime-reflect.rkt")
            (lib "stxparse-info/case/stxcase-scheme.rkt")
            (lib "stxparse-info/parse/debug.rkt")
            (lib "stxparse-info/test/test-expansion-order.rkt")
            (lib "stxparse-info/parse/private/make.rkt")
            (lib "stxparse-info/parse/experimental/eh.rkt")
            (lib "stxparse-info/case/stxcase.rkt")
            (lib "stxparse-info/parse.rkt")
            (lib "stxparse-info/parse/private/3d-stx.rkt")
            (lib "stxparse-info/parse/experimental/private/substitute.rkt")
            (lib "stxparse-info/scribblings/stxparse-info.scrbl")
            (lib "stxparse-info/parse/pre.rkt")
            (lib "stxparse-info/parse/lib/function-header.rkt")
            (lib "stxparse-info/parse/experimental/contract.rkt")
            (lib "stxparse-info/current-pvars.rkt")
            (lib "stxparse-info/parse/experimental/reflect.rkt")
            (lib "stxparse-info/scribblings/ovl.rkt")
            (lib "stxparse-info/parse/private/opt.rkt")
            (lib "stxparse-info/parse/private/lib.rkt")
            (lib "stxparse-info/test/test-compatibility2.rkt")
            (lib "stxparse-info/parse/private/runtime-report.rkt")
            (lib "stxparse-info/main.rkt")
            (lib "stxparse-info/case.rkt")
            (lib "stxparse-info/parse/private/rep.rkt")
            (lib "stxparse-info/parse/private/sc.rkt")
            (lib "stxparse-info/parse/private/parse-aux.rkt")
            (lib "stxparse-info/parse/experimental/dset.rkt")))
          (name . "stxparse-info")
          (nix-sha256
           .
           "160rql287cmjg32zh6fka0h6zwapxpxjfns2dpky6mlmjy2nzkjd")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:georges.duperon@gmail.com . #t)
                   (ring:1 . #t)
                   (syntax . #t)
                   (syntax-parse . #t)))
          (source . "https://github.com/jsmaniac/stxparse-info.git")
          (tags . ("syntax" "syntax-parse"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "c725ad4265a804e9161e4f2a6e53d5f7069c18fe")
                          (source
                           .
                           "https://github.com/jsmaniac/stxparse-info.git")
                          (source_url
                           .
                           "https://github.com/jsmaniac/stxparse-info.git")))))))
 ("subtemplate"
  .
  #hasheq((author . "georges.duperon@gmail.com")
          (authors . ("georges.duperon@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "subtemplate"
                    "doc/subtemplate@subtemplate/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/subtemplate.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/subtemplate.txt")))
          (checksum . "a3292113bb0d7dd8dc2114702b90e76f23963496")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "rackunit-lib"
            "backport-template-pr1514"
            "phc-toolkit"
            "srfi-lite-lib"
            "stxparse-info"
            "alexis-util"
            "scope-operations"
            "auto-syntax-e"
            "version-case"
            "scribble-lib"
            "racket-doc"
            "scribble-math"))
          (dependency-names
           .
           ("base"
            "rackunit-lib"
            "backport-template-pr1514"
            "phc-toolkit"
            "srfi-lite-lib"
            "stxparse-info"
            "alexis-util"
            "scope-operations"
            "auto-syntax-e"
            "version-case"
            "scribble-lib"
            "racket-doc"
            "scribble-math"))
          (description
           .
           "Experimental. In a syntax template, auto-generate yᵢ … from xᵢ … . Also includes several improvements, like ellipses outside of syntax templates, and ellipsis-preserving unsyntax.")
          (implies . ())
          (last-checked . 1557339786)
          (last-edit . 1501079107)
          (last-updated . 1556784442)
          (modules
           .
           ((lib "subtemplate/test/test-ddd-forms.rkt")
            (lib "subtemplate/test/test-ddd-top.rkt")
            (lib "subtemplate/scribblings/orig.rkt")
            (lib "subtemplate/private/override.rkt")
            (lib "subtemplate/private/patch-arrows.rkt")
            (lib
             "subtemplate/test/assumption-local-expand-reuse-let-bound-id.rkt")
            (lib "subtemplate/test/test-ddd.rkt")
            (lib "subtemplate/scribblings/subtemplate.scrbl")
            (lib "subtemplate/private/top-subscripts.rkt")
            (lib "subtemplate/scribblings/examples.scrbl")
            (lib "subtemplate/test/test-performance.rkt")
            (lib "subtemplate/test/test-use-before-definition.rkt")
            (lib "subtemplate/private/cross-phase-splicing-list.rkt")
            (lib "subtemplate/test/test-optional.rkt")
            (lib "subtemplate/private/subscripts.rkt")
            (lib "subtemplate/private/optcontract.rkt")
            (lib "subtemplate/test/assumption-free-identifier-equal.rkt")
            (lib "subtemplate/private/copy-attribute.rkt")
            (lib "subtemplate/test/test-splice.rkt")
            (lib "subtemplate/test/test-subtemplate.rkt")
            (lib "subtemplate/test/test-subtemplate-detect-stxinfo.rkt")
            (lib "subtemplate/test/test-splice-append.rkt")
            (lib "subtemplate/test/assumption-weak-hash.rkt")
            (lib "subtemplate/private/template-subscripts.rkt")
            (lib "subtemplate/test/test-copy-attribute-template-problem.rkt")
            (lib "subtemplate/test/test-copy-attribute.rkt")
            (lib "subtemplate/private/fully-expanded-grammar.rkt")
            (lib "subtemplate/test/test-missing-nested.rkt")
            (lib "subtemplate/private/unsyntax-preparse.rkt")
            (lib "subtemplate/override.rkt")
            (lib "subtemplate/test/test-or-syntax.rkt")
            (lib "subtemplate/test/bug-5.rkt")
            (lib "subtemplate/test/test-syntax-case-as-syntax-parse.rkt")
            (lib "subtemplate/private/ddd.rkt")
            (lib "subtemplate/private/find-defined-pvars.rkt")
            (lib "subtemplate/private/lifted-variables-communication.rkt")
            (lib "subtemplate/light.rkt")
            (lib "subtemplate/scribblings/light.scrbl")
            (lib "subtemplate/test/test-or.rkt")
            (lib "subtemplate/private/ddd-forms.rkt")
            (lib "subtemplate/test/test-unsyntax2.rkt")
            (lib "subtemplate/main.rkt")
            (lib
             "subtemplate/private/fully-expanded-grammar-extract-bindings.rkt")
            (lib "subtemplate/test/test-unsyntax.rkt")
            (lib "subtemplate/private/syntax-case-as-syntax-parse.rkt")))
          (name . "subtemplate")
          (nix-sha256
           .
           "15rwf96c5l37apazldyzsvqs9k3wxkd1sgyh5qhjcw03k68kgfjf")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:georges.duperon@gmail.com . #t)
                   (experimental . #t)
                   (ring:1 . #t)
                   (syntax . #t)
                   (syntax-parse . #t)
                   (template . #t)))
          (source . "https://github.com/jsmaniac/subtemplate.git")
          (tags . ("experimental" "syntax" "syntax-parse" "template"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "a3292113bb0d7dd8dc2114702b90e76f23963496")
                          (source
                           .
                           "https://github.com/jsmaniac/subtemplate.git")
                          (source_url
                           .
                           "https://github.com/jsmaniac/subtemplate.git")))))))
 ("sudo"
  .
  #hasheq((author . "neil@neilvandyke.org")
          (authors . ("neil@neilvandyke.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "sudo" "doc/sudo@sudo/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/sudo.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/sudo.txt")))
          (checksum . "b0fdd9113b261b7e117773be749e9c198f12f47d")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base" "mcfly" "racket-doc" "scribble-lib" "overeasy"))
          (dependency-names
           .
           ("base" "mcfly" "racket-doc" "scribble-lib" "overeasy"))
          (description . "Sudo Command Processes")
          (implies . ())
          (last-checked . 1557339786)
          (last-edit . 1456469637)
          (last-updated . 1502816460)
          (modules . ((lib "sudo/sudo.scrbl") (lib "sudo/main.rkt")))
          (name . "sudo")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (:no-tag: . #t)
                   (author:neil@neilvandyke.org . #t)
                   (ring:1 . #t)))
          (source . "http://www.neilvandyke.org/racket/sudo.zip")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "b0fdd9113b261b7e117773be749e9c198f12f47d")
                          (source
                           .
                           "http://www.neilvandyke.org/racket/sudo.zip")
                          (source_url
                           .
                           "http://www.neilvandyke.org/racket/sudo.zip")))))))
 ("sugar"
  .
  #hasheq((author . "mb@mbtype.com")
          (authors . ("mb@mbtype.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "sugar" "doc/sugar@sugar/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/sugar.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/sugar.txt")))
          (checksum . "0081cdaab82951eb6854c871f9a699b76202e544")
          (checksum-error . #f)
          (conflicts . ())
          (date-added . 1556661471)
          (dependencies . ("base" "scribble-lib" "racket-doc" "rackunit-lib"))
          (dependency-names
           .
           ("base" "scribble-lib" "racket-doc" "rackunit-lib"))
          (description . "shortcuts for simplicity & readability")
          (implies . ())
          (last-checked . 1557339787)
          (last-edit . 1556661471)
          (last-updated . 1553040429)
          (modules
           .
           ((lib "sugar/unstable/port.rkt")
            (lib "sugar/define.rkt")
            (lib "sugar/scribblings/installation.scrbl")
            (lib "sugar/unstable/len.rkt")
            (lib "sugar/unstable/source.rkt")
            (lib "sugar/xml.rkt")
            (lib "sugar/scribblings/xml.scrbl")
            (lib "sugar/scribblings/include.scrbl")
            (lib "sugar/unstable/stub.rkt")
            (lib "sugar/unstable/case.rkt")
            (lib "sugar/scribblings/len.scrbl")
            (lib "sugar/file.rkt")
            (lib "sugar/scribblings/file-extensions.scrbl")
            (lib "sugar/unstable/misc.rkt")
            (lib "sugar/main.rkt")
            (lib "sugar/unstable/class.rkt")
            (lib "sugar/scribblings/list.scrbl")
            (lib "sugar/unstable/js.rkt")
            (lib "sugar/test/test-require-modes.rkt")
            (lib "sugar/unstable/include.rkt")
            (lib "sugar/test.rkt")
            (lib "sugar/scribblings/cache.scrbl")
            (lib "sugar/scribblings/sugar.scrbl")
            (lib "sugar/scribblings/debug.scrbl")
            (lib "sugar/scribblings/license.scrbl")
            (lib "sugar/list.rkt")
            (lib "sugar/debug.rkt")
            (lib "sugar/private/syntax-utils.rkt")
            (lib "sugar/coerce/contract.rkt")
            (lib "sugar/test/main.rkt")
            (lib "sugar/cache.rkt")
            (lib "sugar/unstable/string.rkt")
            (lib "sugar/scribblings/container.scrbl")
            (lib "sugar/unstable/contract.rkt")
            (lib "sugar/unstable/container.rkt")
            (lib "sugar/coerce.rkt")
            (lib "sugar/unstable/dict.rkt")
            (lib "sugar/coerce/base.rkt")
            (lib "sugar/scribblings/string.scrbl")
            (lib "sugar/test/debug-meta-lang.rkt")
            (lib "sugar/scribblings/coerce.scrbl")))
          (name . "sugar")
          (nix-sha256
           .
           "1fmmfkcbnfgb11yfrnb2n5ig578la3ihg5w1k1ac2pdf8fi3bhkr")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:mb@mbtype.com . #t)
                   (ring:1 . #t)
                   (sweet . #t)))
          (source . "https://github.com/mbutterick/sugar.git")
          (tags . ("sweet"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "0081cdaab82951eb6854c871f9a699b76202e544")
                          (source . "https://github.com/mbutterick/sugar.git")
                          (source_url
                           .
                           "https://github.com/mbutterick/sugar.git")))))))
 ("superc"
  .
  #hasheq((author . "jay.mccarthy@gmail.com")
          (authors . ("jay.mccarthy@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "superc" "doc/superc@superc/index.html")))
                 (failure-log . #f)
                 (min-failure-log . "server/built/min-fail/superc.txt")
                 (success-log . "server/built/install/superc.txt")
                 (test-failure-log . "server/built/test-fail/superc.txt")
                 (test-success-log . #f)))
          (checksum . "929d3e32db7a5c69fa9e033db7b5707cff329672")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("at-exp-lib"
            "base"
            "scribble-text-lib"
            "scheme-lib"
            "racket-doc"
            "scribble-lib"))
          (dependency-names
           .
           ("at-exp-lib"
            "base"
            "scribble-text-lib"
            "scheme-lib"
            "racket-doc"
            "scribble-lib"))
          (description
           .
           "A language for writing C with Racket macros and an easy interface to Racket")
          (implies . ())
          (last-checked . 1557339787)
          (last-edit . 1353686056)
          (last-updated . 1502816461)
          (modules
           .
           ((lib "superc/scribblings/superc.scrbl")
            (lib "superc/lang/reader.rkt")
            (lib "superc/c-loader.rkt")
            (lib "tests/superc/bdb.rkt")
            (lib "tests/superc/hello.rkt")
            (lib "tests/superc/math.rkt")
            (lib "superc/lang.rkt")
            (lib "superc/lang-api.rkt")))
          (name . "superc")
          (nix-sha256
           .
           "1scsny08a2z7ivsc18lv7fdjcg93rkb2ci2h69k06rw4zmbkxcjn")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:jay.mccarthy@gmail.com . #t)
                   (ffi . #t)
                   (language . #t)
                   (ring:1 . #t)))
          (source . "github://github.com/jeapostrophe/superc/master")
          (tags . ("ffi" "language"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "929d3e32db7a5c69fa9e033db7b5707cff329672")
                          (source
                           .
                           "github://github.com/jeapostrophe/superc/master")
                          (source_url
                           .
                           "http://github.com/jeapostrophe/superc/tree/master")))))))
 ("superv"
  .
  #hasheq((author . "steven.leibrock@gmail.com")
          (authors . ("steven.leibrock@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "superv" "doc/superv@superv/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/superv.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/superv.txt")))
          (checksum . "23a7132484f293c3ca407db5b3e86a9e0a7a9708")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "rackunit-lib" "scribble-lib" "racket-doc"))
          (dependency-names
           .
           ("base" "rackunit-lib" "scribble-lib" "racket-doc"))
          (description . "Supervise your subprocesses with Racket")
          (implies . ())
          (last-checked . 1557339787)
          (last-edit . 1490382344)
          (last-updated . 1502816461)
          (modules
           .
           ((lib "superv/supervisor/config.rkt")
            (lib "superv/supervisor/data.rkt")
            (lib "superv/supervisor/superv.rkt")
            (lib "superv/supervisor/main.rkt")
            (lib "superv/supervisor/subprocess.rkt")
            (lib "superv/supervisor/program.rkt")
            (lib "superv/scribblings/superv.scrbl")))
          (name . "superv")
          (nix-sha256
           .
           "19x4gk6wv75gfv49cg59rkwdj2x1gf1m3lk9kyb3ggvjsqbpgl2b")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:steven.leibrock@gmail.com . #t)
                   (ring:1 . #t)
                   (supervisor . #t)))
          (source . "git://github.com/sleibrock/superv.git")
          (tags . ("supervisor"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "23a7132484f293c3ca407db5b3e86a9e0a7a9708")
                          (source . "git://github.com/sleibrock/superv.git")
                          (source_url
                           .
                           "http://github.com/sleibrock/superv.git/tree/master")))))))
 ("sweet-exp"
  .
  #hasheq((author . "asumu@ccs.neu.edu alexander@knauth.org")
          (authors . ("asumu@ccs.neu.edu" "alexander@knauth.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "sweet" "doc/sweet@sweet-exp/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/sweet-exp.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/sweet-exp.txt")))
          (checksum . "a3c1ae74c2e75e8d6164a3a9d8eb34335a7ba4de")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "sweet-exp-lib"
            "sweet-exp-test"
            "scribble-lib"
            "racket-doc"
            "scribble-doc"
            "lazy"))
          (dependency-names
           .
           ("base"
            "sweet-exp-lib"
            "sweet-exp-test"
            "scribble-lib"
            "racket-doc"
            "scribble-doc"
            "lazy"))
          (description . "Sweet expressions: an alternative to s-expressions")
          (implies . ("sweet-exp-lib" "sweet-exp-test"))
          (last-checked . 1557339787)
          (last-edit . 1469717633)
          (last-updated . 1533332760)
          (modules . ((lib "sweet-exp/sweet.scrbl")))
          (name . "sweet-exp")
          (nix-sha256
           .
           "0rwq63miz95s15zg4h7mnxp1ibwxh2mq4hzn78rr16bqp8r2dbam")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:alexander@knauth.org . #t)
                   (author:asumu@ccs.neu.edu . #t)
                   (ring:1 . #t)
                   (syntax . #t)))
          (source . "git://github.com/takikawa/sweet-racket?path=sweet-exp")
          (tags . ("syntax"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "a3c1ae74c2e75e8d6164a3a9d8eb34335a7ba4de")
                          (source
                           .
                           "git://github.com/takikawa/sweet-racket?path=sweet-exp")
                          (source_url
                           .
                           "http://github.com/takikawa/sweet-racket/tree/master?path=sweet-exp")))))))
 ("sweet-exp-lib"
  .
  #hasheq((author . "alexander@knauth.org asumu@ccs.neu.edu")
          (authors . ("alexander@knauth.org" "asumu@ccs.neu.edu"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/sweet-exp-lib.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/sweet-exp-lib.txt")))
          (checksum . "a3c1ae74c2e75e8d6164a3a9d8eb34335a7ba4de")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base"))
          (dependency-names . ("base"))
          (description . "Implementation part of sweet-exp")
          (implies . ())
          (last-checked . 1557339788)
          (last-edit . 1469717779)
          (last-updated . 1533332760)
          (modules
           .
           ((lib "sweet-exp/main.rkt")
            (lib "sweet-exp/util.rkt")
            (lib "sweet-exp/sugar.rkt")
            (lib "sweet-exp/racket/init.rkt")
            (lib "sweet-exp/modern/process-curly.rkt")
            (lib "sweet-exp/modern.rkt")
            (lib "sweet-exp/read-sig.rkt")
            (lib "sweet-exp/sweet.rkt")
            (lib "sweet-exp/indent.rkt")))
          (name . "sweet-exp-lib")
          (nix-sha256
           .
           "0rwq63miz95s15zg4h7mnxp1ibwxh2mq4hzn78rr16bqp8r2dbam")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:alexander@knauth.org . #t)
                   (author:asumu@ccs.neu.edu . #t)
                   (ring:1 . #t)
                   (syntax . #t)))
          (source
           .
           "git://github.com/takikawa/sweet-racket?path=sweet-exp-lib")
          (tags . ("syntax"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "a3c1ae74c2e75e8d6164a3a9d8eb34335a7ba4de")
                          (source
                           .
                           "git://github.com/takikawa/sweet-racket?path=sweet-exp-lib")
                          (source_url
                           .
                           "http://github.com/takikawa/sweet-racket/tree/master?path=sweet-exp-lib")))))))
 ("sweet-exp-test"
  .
  #hasheq((author . "alexander@knauth.org asumu@ccs.neu.edu")
          (authors . ("alexander@knauth.org" "asumu@ccs.neu.edu"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/sweet-exp-test.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/sweet-exp-test.txt")))
          (checksum . "a3c1ae74c2e75e8d6164a3a9d8eb34335a7ba4de")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base" "sweet-exp-lib" "rackunit-lib" "lazy" "typed-racket-lib"))
          (dependency-names
           .
           ("base" "sweet-exp-lib" "rackunit-lib" "lazy" "typed-racket-lib"))
          (description . "Tests for sweet-exp")
          (implies . ())
          (last-checked . 1557339788)
          (last-edit . 1469718032)
          (last-updated . 1533332760)
          (modules
           .
           ((lib "sweet-exp/tests/rest-arg.rkt")
            (lib "sweet-exp/tests/whitespace.rkt")
            (lib "sweet-exp/tests/srcloc.rkt")
            (lib "sweet-exp/tests/kw.rkt")
            (lib "sweet-exp/tests/typed.rkt")
            (lib "sweet-exp/tests/bad-close-error.rkt")
            (lib "sweet-exp/tests/modern.rkt")
            (lib "sweet-exp/tests/sweet.rkt")
            (lib "sweet-exp/tests/strip-context/use-m.rkt")
            (lib "sweet-exp/tests/srcloc-helper.rkt")
            (lib "sweet-exp/tests/2htdp.rkt")
            (lib "sweet-exp/tests/strip-context/m.rkt")
            (lib "sweet-exp/tests/return.rkt")
            (lib "sweet-exp/tests/typed2.rkt")
            (lib "sweet-exp/tests/sweet-test-run.rkt")
            (lib "sweet-exp/tests/335.rkt")
            (lib "sweet-exp/tests/hash.rkt")
            (lib "sweet-exp/tests/lazy.rkt")
            (lib "sweet-exp/tests/fib.rkt")
            (lib "sweet-exp/run-tests.rkt")
            (lib "sweet-exp/tests/define-syntax-rule.rkt")
            (lib "sweet-exp/tests/paren-shape.rkt")
            (lib "sweet-exp/tests/case-lambda.rkt")))
          (name . "sweet-exp-test")
          (nix-sha256
           .
           "0rwq63miz95s15zg4h7mnxp1ibwxh2mq4hzn78rr16bqp8r2dbam")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:alexander@knauth.org . #t)
                   (author:asumu@ccs.neu.edu . #t)
                   (ring:1 . #t)
                   (syntax . #t)))
          (source
           .
           "git://github.com/takikawa/sweet-racket?path=sweet-exp-test")
          (tags . ("syntax"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "a3c1ae74c2e75e8d6164a3a9d8eb34335a7ba4de")
                          (source
                           .
                           "git://github.com/takikawa/sweet-racket?path=sweet-exp-test")
                          (source_url
                           .
                           "http://github.com/takikawa/sweet-racket/tree/master?path=sweet-exp-test")))))))
 ("swindle"
  .
  #hash((author . "eli@racket-lang.org")
        (checksum . "fa98a87f1898e373d8e0ec4a8ce446d7e437e789")
        (dependencies
         .
         ("scheme-lib"
          "base"
          "compatibility-lib"
          "drracket-plugin-lib"
          "gui-lib"
          "net-lib"
          "string-constants-lib"
          "compatibility-doc"
          "racket-doc"
          "scribble-lib"))
        (dependency-names
         .
         ("scheme-lib"
          "base"
          "compatibility-lib"
          "drracket-plugin-lib"
          "gui-lib"
          "net-lib"
          "string-constants-lib"
          "compatibility-doc"
          "racket-doc"
          "scribble-lib"))
        (description . "eli@racket-lang.org")
        (modules . ())
        (name . "swindle")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/swindle.zip")
        (tags . ())))
 ("sxml"
  .
  #hasheq((author . "clements@brinckerhoff.org")
          (authors . ("clements@brinckerhoff.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "sxml" "doc/sxml@sxml/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/sxml.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/sxml.txt")))
          (checksum . "ff10c5873be0874ea081025dc5afb003be441e9c")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "srfi-lib" "racket-doc" "scribble-lib"))
          (dependency-names . ("base" "srfi-lib" "racket-doc" "scribble-lib"))
          (description . "SXML family of tools (including SXPath)")
          (implies . ())
          (last-checked . 1557339788)
          (last-edit . 1356565820)
          (last-updated . 1526498751)
          (modules
           .
           ((lib "sxml/serializer.rkt")
            (lib "sxml/sxpath-ext.rkt")
            (lib "sxml/ssax/ssax.rkt")
            (lib "sxml/xpath-parser.rkt")
            (lib "sxml/tests/vSXML-tree-trans.rkt")
            (lib "sxml/tests/ssax-tests.rkt")
            (lib "sxml/ddo-txpath.rkt")
            (lib "sxml/ssax/ssax-prim.rkt")
            (lib "sxml/scribblings/sxslt.scrbl")
            (lib "sxml/main.rkt")
            (lib "sxml/sxml-tools.rkt")
            (lib "sxml/scribblings/sxpath.scrbl")
            (lib "sxml/tests/tests.rkt")
            (lib "sxml/modif.rkt")
            (lib "sxml/ssax/parse-error.rkt")
            (lib "sxml/scribblings/serialization.scrbl")
            (lib "sxml/ssax/xlink-parser.rkt")
            (lib "sxml/ssax/util.rkt")
            (lib "sxml/scribblings/sxml-rep.scrbl")
            (lib "sxml/xpath-context_xlink.rkt")
            (lib "sxml/lazy-xpath.rkt")
            (lib "sxml/ssax/SSAX-code.rkt")
            (lib "sxml/ssax/myenv.rkt")
            (lib "sxml/ssax/multi-parser.rkt")
            (lib "sxml/ssax/access-remote.rkt")
            (lib "sxml/scribblings/extract-provides.rkt")
            (lib "sxml/ddo-axes.rkt")
            (lib "sxml/scribblings/extracted-sperber.scrbl")
            (lib "sxml/ssax/sxpathlib.rkt")
            (lib "sxml/scribblings/sax-parsing.scrbl")
            (lib "sxml/sxpath.rkt")
            (lib "sxml/ssax/SXML-tree-trans.rkt")
            (lib "sxml/txpath.rkt")
            (lib "sxml/ssax/input-parse.rkt")
            (lib "sxml/lazy-ssax.rkt")
            (lib "sxml/ssax/errors-and-warnings.rkt")
            (lib "sxml/scribblings/util.rkt")
            (lib "sxml/scribblings/sxml.scrbl")
            (lib "sxml/ssax/id.rkt")
            (lib "sxml/xpath-ast.rkt")
            (lib "sxml/tests/vSXML-to-HTML.rkt")
            (lib "sxml/scribblings/all-exported.scrbl")))
          (name . "sxml")
          (nix-sha256
           .
           "1ks70yxvlaj6qc615p5phaz24sg78ln2r3y7g7pqgid7g5d8h5sx")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:clements@brinckerhoff.org . #t)
                   (ring:1 . #t)
                   (sxml . #t)
                   (web . #t)
                   (xml . #t)))
          (source . "github://github.com/jbclements/sxml/master")
          (tags . ("sxml" "web" "xml"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "ff10c5873be0874ea081025dc5afb003be441e9c")
                          (source
                           .
                           "github://github.com/jbclements/sxml/master")
                          (source_url
                           .
                           "http://github.com/jbclements/sxml/tree/master")))))))
 ("sxml-intro"
  .
  #hasheq((author . "neil@neilvandyke.org")
          (authors . ("neil@neilvandyke.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "sxml-intro"
                    "doc/sxml-intro@sxml-intro/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/sxml-intro.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/sxml-intro.txt")))
          (checksum . "f3ad1b1a3be60c165f74c0d8668de44fbf8a9137")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "scribble-lib"))
          (dependency-names . ("base" "scribble-lib"))
          (description . "SXML in Racket: Tools for XML and HTML")
          (implies . ())
          (last-checked . 1557339788)
          (last-edit . 1456463466)
          (last-updated . 1502816463)
          (modules . ((lib "sxml-intro/sxml-intro.scrbl")))
          (name . "sxml-intro")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:neil@neilvandyke.org . #t)
                   (html . #t)
                   (ring:1 . #t)
                   (sxml . #t)
                   (web . #t)
                   (xml . #t)))
          (source . "http://www.neilvandyke.org/racket/sxml-intro.zip")
          (tags . ("html" "sxml" "web" "xml"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "f3ad1b1a3be60c165f74c0d8668de44fbf8a9137")
                          (source
                           .
                           "http://www.neilvandyke.org/racket/sxml-intro.zip")
                          (source_url
                           .
                           "http://www.neilvandyke.org/racket/sxml-intro.zip")))))))
 ("symalg"
  .
  #hasheq((author . "johannes@johannes.tax")
          (authors . ("johannes@johannes.tax"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "symalg" "doc/symalg@symalg/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/symalg.txt")
                 (test-failure-log . "server/built/test-fail/symalg.txt")
                 (test-success-log . #f)))
          (checksum . "5c551e9fcead240dcc70261563c5b981428ca67a")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "multimethod"
            "parser-tools"
            "scribble-lib"
            "racket-doc"
            "rackunit-lib"))
          (dependency-names
           .
           ("base"
            "multimethod"
            "parser-tools"
            "scribble-lib"
            "racket-doc"
            "rackunit-lib"))
          (description
           .
           "Expressing and manipulating symbolic algebraic expressions in Racket. ")
          (implies . ())
          (last-checked . 1557339789)
          (last-edit . 1521273472)
          (last-updated . 1522592538)
          (modules
           .
           ((lib "symalg/scribblings/symalg.scrbl")
            (lib "symalg/symalg/private/data.rkt")
            (lib "symalg/symalg/latex.rkt")
            (lib "symalg/symalg/linear.rkt")
            (lib "symalg/symalg/simplify.rkt")
            (lib "symalg/symalg/smaller.rkt")
            (lib "symalg/symalg/parse.rkt")
            (lib "symalg/symalg/private/util.rkt")
            (lib "symalg/symalg/differentiate.rkt")
            (lib "symalg/symalg/infix.rkt")
            (lib "symalg/symalg/symalg-expr.rkt")
            (lib "symalg/symalg/private/zero-expr.rkt")
            (lib "symalg/symalg/evaluate.rkt")
            (lib "symalg/main.rkt")
            (lib "symalg/symalg/sexpr.rkt")
            (lib "symalg/symalg/private/preorder.rkt")))
          (name . "symalg")
          (nix-sha256
           .
           "1622hv6j570098599jrk6sgb84jklv9bcfj7am4z9i9bls3avx3m")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (algebra . #t)
                   (author:johannes@johannes.tax . #t)
                   (math . #t)
                   (ring:2 . #t)))
          (source . "https://github.com/pyohannes/racket-symalg.git")
          (tags . ("algebra" "math"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "5c551e9fcead240dcc70261563c5b981428ca67a")
                          (source
                           .
                           "https://github.com/pyohannes/racket-symalg.git")
                          (source_url
                           .
                           "https://github.com/pyohannes/racket-symalg.git")))))))
 ("syndicate"
  .
  #hasheq((author . "tonygarnockjones@gmail.com")
          (authors . ("tonygarnockjones@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("salvage"
                    "syndicate-gl"
                    "doc/syndicate-gl@syndicate/index.html")
                   ("salvage"
                    "syndicate"
                    "doc/syndicate@syndicate/index.html")))
                 (failure-log . "server/built/fail/syndicate.txt")
                 (min-failure-log . #f)
                 (success-log . #f)
                 (test-failure-log . #f)
                 (test-success-log . #f)))
          (checksum . "0da903e43834ef64f2ba69d3177c45d3edcaabff")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("rfc6455"
            "base"
            "data-lib"
            "net-lib"
            "web-server-lib"
            "profile-lib"
            "rackunit-lib"
            "htdp-lib"
            "data-enumerate-lib"
            "datalog"
            "draw-lib"
            "gui-lib"
            "pict-lib"
            "sgl"
            "struct-defaults"
            "auxiliary-macro-context"
            "sandbox-lib"
            "images-lib"
            "automata"
            "sha"
            "racket-doc"
            "scribble-lib"
            "sha"
            "draw-doc"
            "gui-doc"
            "htdp-doc"
            "pict-doc"))
          (dependency-names
           .
           ("rfc6455"
            "base"
            "data-lib"
            "net-lib"
            "web-server-lib"
            "profile-lib"
            "rackunit-lib"
            "htdp-lib"
            "data-enumerate-lib"
            "datalog"
            "draw-lib"
            "gui-lib"
            "pict-lib"
            "sgl"
            "struct-defaults"
            "auxiliary-macro-context"
            "sandbox-lib"
            "images-lib"
            "automata"
            "sha"
            "racket-doc"
            "scribble-lib"
            "sha"
            "draw-doc"
            "gui-doc"
            "htdp-doc"
            "pict-doc"))
          (description . "A language for interactive programs")
          (implies . ())
          (last-checked . 1557339789)
          (last-edit . 1459611228)
          (last-updated . 1551214411)
          (modules
           .
           ((lib "syndicate/broker/protocol.rkt")
            (lib "syndicate/examples/chat-no-quit-world-no-nesting.rkt")
            (lib "syndicate/test.rkt")
            (lib "syndicate/examples/example-lang.rkt")
            (lib "syndicate/little-actors/core.rkt")
            (lib "syndicate/examples/actor/tcp-relay2.rkt")
            (lib "syndicate/firewall.rkt")
            (lib "typed/examples/roles/bank-account.rkt")
            (lib "typed/examples/roles/require-struct/client.rkt")
            (lib "syndicate-gl/examples/basic.rkt")
            (lib "syndicate/monolithic.rkt")
            (lib "syndicate/examples/example-wildcard-assertion-2.rkt")
            (lib "syndicate/profile.rkt")
            (lib
             "syndicate/examples/actor/example-during-criterion-snapshotting.rkt")
            (lib "syndicate/supervise.rkt")
            (lib "syndicate/support/bytes.rkt")
            (lib "syndicate/examples/actor/broadcast-messages.rkt")
            (lib "syndicate/examples/actor/query-set.rkt")
            (lib "syndicate/trace/util.rkt")
            (lib "syndicate/trace/stderr.rkt")
            (lib "syndicate/functional-queue.rkt")
            (lib "syndicate/relay.rkt")
            (lib
             "syndicate/examples/all-pairs-shortest-paths/all-pairs-shortest-paths.rkt")
            (lib "syndicate/tset.rkt")
            (lib "syndicate/monolithic/scn.rkt")
            (lib "syndicate/examples/actor/flink.rkt")
            (lib "syndicate/examples/tcp-hello.rkt")
            (lib "syndicate/protocol/instance.rkt")
            (lib "syndicate/examples/actor/forward-chaining-mini.rkt")
            (lib "syndicate/dataflow.rkt")
            (lib "syndicate/examples/actor/mutex.rkt")
            (lib "typed/examples/roles/two-buyer-protocol.rkt")
            (lib "syndicate/examples/actor/file-system-lll.rkt")
            (lib "typed/examples/two-buyer-protocol.rkt")
            (lib "syndicate-gl/examples/clock-face.rkt")
            (lib "syndicate/examples/actor/show-field-scope-enforcement1.rkt")
            (lib "syndicate/drivers/smtp.rkt")
            (lib "syndicate/core.rkt")
            (lib "syndicate-ide/hsv.rkt")
            (lib "syndicate/examples/two-buyer-protocol-incremental.rkt")
            (lib "typed/examples/roles/simple-query-set.rkt")
            (lib "typed/syndicate/lang/reader.rkt")
            (lib "syndicate/main.rkt")
            (lib "syndicate/examples/bank-account-monolithic.rkt")
            (lib "syndicate/examples/actor/chat-no-quit-world-no-nesting.rkt")
            (lib "syndicate-gl/examples/many.rkt")
            (lib "syndicate/examples/big-bang.rkt")
            (lib "syndicate/examples/actor/f-to-c3.rkt")
            (lib "syndicate/tests/simple-multi-level.rkt")
            (lib "syndicate/examples/actor/add1-simple.rkt")
            (lib "typed/examples/roles/simple-dataspace.rkt")
            (lib "typed/examples/roles/book-club.rkt")
            (lib "syndicate/examples/udp-hello-plain.rkt")
            (lib "syndicate/upside-down.rkt")
            (lib "syndicate/examples/actor/gui.rkt")
            (lib "syndicate/big-bang.rkt")
            (lib "syndicate/support/hash.rkt")
            (lib "syndicate/examples/chat-no-quit-world.rkt")
            (lib "syndicate/examples/actor/mutable-cell.rkt")
            (lib "typed/example.rkt")
            (lib
             "syndicate/examples/all-pairs-shortest-paths/all-pairs-shortest-paths3.rkt")
            (lib "syndicate/examples/actor/lambda.rkt")
            (lib "typed/examples/roles/chat-tcp2.rkt")
            (lib "syndicate/examples/actor/rpc-with-error.rkt")
            (lib "syndicate/examples/actor/example-termination-scripts-1.rkt")
            (lib "syndicate/patch.rkt")
            (lib "syndicate/lang.rkt")
            (lib "syndicate/tests/boop.rkt")
            (lib "typed/examples/core/bank-account.rkt")
            (lib "syndicate/ground.rkt")
            (lib "syndicate/tests/multi-level-message.rkt")
            (lib "syndicate/examples/actor/running-total.rkt")
            (lib "typed/drivers/tcp.rkt")
            (lib "syndicate/examples/actor/box-and-client.rkt")
            (lib "syndicate/trace/render-msd.rkt")
            (lib "syndicate/protocol/standard-relay.rkt")
            (lib "typed/examples/core/box-and-client.rkt")
            (lib "syndicate/examples/actor/chat-client-tcp2.rkt")
            (lib
             "syndicate/examples/actor/example-multiple-suspension-resumption.rkt")
            (lib "syndicate/trie.rkt")
            (lib "syndicate/tests/ping-pong.rkt")
            (lib "syndicate/examples/actor/chain.rkt")
            (lib "syndicate/examples/mini-echo.rkt")
            (lib "syndicate/examples/actor/tcp-relay.rkt")
            (lib
             "syndicate/examples/actor/example-demand-matcher-glitch-bug.rkt")
            (lib "syndicate/examples/actor/file-system2.rkt")
            (lib "syndicate/tests/nested-spawn-exceptions.rkt")
            (lib "syndicate/examples/actor/chat-multiroom.rkt")
            (lib "syndicate/examples/actor/example-supervise.rkt")
            (lib "syndicate/examples/actor/cleanup.rkt")
            (lib "syndicate/examples/actor/example-partial-retraction.rkt")
            (lib
             "syndicate/examples/actor/example-action-after-suspension.rkt")
            (lib "syndicate/examples/chat.rkt")
            (lib "syndicate/monolithic/core.rkt")
            (lib "syndicate/examples/durable-key-value-store.rkt")
            (lib "syndicate/examples/actor/chat-multiroom-topic-persist.rkt")
            (lib "syndicate/test-lang.rkt")
            (lib "syndicate/examples/actor/example-glitch.rkt")
            (lib "syndicate/examples/actor/timestate.rkt")
            (lib "syndicate/examples/actor/queue-no-credit2.rkt")
            (lib "typed/examples/roles/simple-query-value.rkt")
            (lib "syndicate/examples/key-value-store.rkt")
            (lib "syndicate-gl/texture.rkt")
            (lib "syndicate/drivers/udp.rkt")
            (lib "syndicate/scribblings/syndicate.scrbl")
            (lib "syndicate/examples/actor/two-buyer-protocol.rkt")
            (lib "syndicate/treap.rkt")
            (lib "typed/examples/roles/simple-stop-facet.rkt")
            (lib "syndicate/examples/example-plain.rkt")
            (lib "syndicate/examples/actor/chat.rkt")
            (lib
             "syndicate/examples/all-pairs-shortest-paths/all-pairs-shortest-paths2.rkt")
            (lib "syndicate/examples/actor/chat-multiroom-topic.rkt")
            (lib "syndicate/store.rkt")
            (lib "syndicate/examples/example-meta-echo.rkt")
            (lib "syndicate/examples/actor/example-synthetic-patch-2.rkt")
            (lib "syndicate/examples/chat-client.rkt")
            (lib "syndicate/protocol/advertise.rkt")
            (lib "typed/examples/roles/cell.rkt")
            (lib "syndicate/monitor.rkt")
            (lib "syndicate/examples/actor/f-to-c4.rkt")
            (lib "typed/syndicate/roles/lang/reader.rkt")
            (lib "syndicate-gl/scribblings/syndicate-gl.scrbl")
            (lib "syndicate/examples/actor/flip-flop.rkt")
            (lib "syndicate/drivers/filesystem.rkt")
            (lib "syndicate/tests/bank-account.rkt")
            (lib "syndicate/examples/actor/f-to-c2.rkt")
            (lib "syndicate/examples/udp-multicast.rkt")
            (lib "syndicate-gl/2d.rkt")
            (lib "syndicate/trace.rkt")
            (lib "syndicate/examples/actor/irc.rkt")
            (lib "syndicate/tests/maintain-knowledge-across-events.rkt")
            (lib "syndicate/random-test.rkt")
            (lib "syndicate/threaded.rkt")
            (lib "syndicate/examples/actor/example-synthetic-patch.rkt")
            (lib "syndicate/trace/msd.rkt")
            (lib "syndicate/examples/actor/f-to-c.rkt")
            (lib "syndicate/core-lang.rkt")
            (lib "typed/examples/roles/requires.rkt")
            (lib "syndicate/examples/actor/f-to-c5.rkt")
            (lib "typed/examples/roles/file-system.rkt")
            (lib "syndicate/examples/actor/queue.rkt")
            (lib "syndicate/support/struct.rkt")
            (lib "syndicate/syntax-classes.rkt")
            (lib "syndicate/examples/actor/vacuous-facet.rkt")
            (lib "syndicate/examples/box-and-client.rkt")
            (lib "syndicate/examples/actor/simple-dns.rkt")
            (lib "syndicate/examples/actor/ceu-leds.rkt")
            (lib "syndicate/examples/example-meta-drop.rkt")
            (lib "syndicate/drivers/gui.rkt")
            (lib "syndicate/mux.rkt")
            (lib "syndicate/drivers/line-reader.rkt")
            (lib "syndicate-gl/affine.rkt")
            (lib "syndicate/hierarchy.rkt")
            (lib "syndicate/canonicalize.rkt")
            (lib "typed/roles.rkt")
            (lib "syndicate/examples/actor/parameters.rkt")
            (lib "typed/examples/roles/simple-during.rkt")
            (lib "typed/examples/roles/provides.rkt")
            (lib "syndicate/examples/actor/chat-tcp2.rkt")
            (lib "syndicate/examples/actor/fib-server.rkt")
            (lib "typed/examples/bank-account.rkt")
            (lib "syndicate/examples/actor/show-field-scope-enforcement4.rkt")
            (lib "syndicate/examples/ws-hello-ssl.rkt")
            (lib
             "syndicate/examples/actor/example-responsibility-transfer-2.rkt")
            (lib "syndicate/drivers/websocket.rkt")
            (lib "syndicate/tests/multi-level-other-way.rkt")
            (lib "syndicate/examples/actor/echo.rkt")
            (lib "syndicate/examples/example-quit-world.rkt")
            (lib "syndicate/examples/actor/fs-protocol.rkt")
            (lib "syndicate/examples/ws-echo.rkt")
            (lib "syndicate/drivers/timestate.rkt")
            (lib "syndicate/examples/actor/big-bang.rkt")
            (lib "syndicate/tests/simple1.rkt")
            (lib "typed/examples/core/book-club.rkt")
            (lib "syndicate/examples/actor/sandbox-os.rkt")
            (lib "typed/main.rkt")
            (lib "syndicate/examples/actor/chat-simplified-internals.rkt")
            (lib "syndicate/actor-lang.rkt")
            (lib "syndicate/examples/actor/file-system.rkt")
            (lib "syndicate/dataspace.rkt")
            (lib "syndicate/examples/actor/chat-client.rkt")
            (lib "syndicate/drivers/tcp.rkt")
            (lib "syndicate/examples/actor/file-system-during2.rkt")
            (lib "syndicate/examples/actor/irc-client.rkt")
            (lib "syndicate/drivers/irc.rkt")
            (lib "syndicate/examples/actor/queue-no-credit.rkt")
            (lib
             "syndicate/examples/actor/example-demand-matcher-glitch-bug2.rkt")
            (lib "syndicate/examples/actor/example-bug-query-scope.rkt")
            (lib "syndicate/comprehensions.rkt")
            (lib "syndicate/tests/create-new-facet-in-on-stop.rkt")
            (lib "syndicate/demand-matcher.rkt")
            (lib
             "syndicate/examples/actor/example-responsibility-transfer-1.rkt")
            (lib "syndicate/examples/actor/example-assertion-spike.rkt")
            (lib "syndicate/examples/example-layer.rkt")
            (lib "syndicate/examples/actor/spreadsheet.rkt")
            (lib "syndicate/broker/server.rkt")
            (lib
             "syndicate/examples/example-quit-dataspace-with-assertion.rkt")
            (lib "typed/core.rkt")
            (lib "syndicate/examples/actor/example-bug-rising-edge-true.rkt")
            (lib "syndicate/examples/actor/web-sanity-check.rkt")
            (lib "syndicate/drivers/tcp2.rkt")
            (lib "syndicate/examples/ws-echo-client.rkt")
            (lib "syndicate/examples/example-meta-echo2.rkt")
            (lib "syndicate/examples/actor/simple-cross-layer.rkt")
            (lib "syndicate/examples/actor/chat-simplified-internals2.rkt")
            (lib "syndicate/big-bang/timestate.rkt")
            (lib "syndicate/drivers/config.rkt")
            (lib "syndicate/examples/example-swap-int-and-claim.rkt")
            (lib "typed/examples/roles/simple-dataflow.rkt")
            (lib "syndicate/examples/actor/chat-no-quit-world.rkt")
            (lib "typed/examples/roles/require-struct/driver.rkt")
            (lib "syndicate/examples/actor/example-termination-scripts-2.rkt")
            (lib "syndicate/examples/example-wildcard-assertion-1.rkt")
            (lib "syndicate/examples/actor/make.rkt")
            (lib "syndicate/examples/bank-account.rkt")
            (lib "syndicate/examples/actor/file-system-during.rkt")
            (lib "syndicate/examples/actor/file-system-lll2.rkt")
            (lib "syndicate/pretty.rkt")
            (lib "syndicate/examples/actor/mini-echo.rkt")
            (lib "syndicate/drivers/web.rkt")
            (lib "syndicate/tests/stop-when-react.rkt")
            (lib "syndicate/examples/actor/example-memoized.rkt")
            (lib
             "syndicate/tests/facet-creation-during-stop-from-grandchild.rkt")
            (lib "typed/examples/roles/ping-pong.rkt")
            (lib "syndicate/examples/forward-chaining.rkt")
            (lib "syndicate/actor.rkt")
            (lib "syndicate/examples/actor/fs-shell.rkt")
            (lib "typed/syndicate/core/lang/reader.rkt")
            (lib "syndicate/examples/chat-simplified-internals.rkt")
            (lib "syndicate-ide/main.rkt")
            (lib "syndicate/examples/actor/example-filesystem.rkt")
            (lib "syndicate/hash-order.rkt")
            (lib "syndicate/drivers/timer.rkt")
            (lib "syndicate/examples/actor/firewall-demo.rkt")
            (lib "syndicate/examples/actor/chat-bot.rkt")
            (lib "syndicate/tests/use-current-knowledge-with-new-facet.rkt")
            (lib "syndicate/examples/ws-hello.rkt")
            (lib "syndicate/examples/actor/bank-account.rkt")
            (lib "syndicate/examples/actor/double-click.rkt")
            (lib "syndicate/examples/actor/let-event.rkt")
            (lib "syndicate/reload.rkt")
            (lib "syndicate/examples/actor/web-demo.rkt")
            (lib "syndicate/lang/reader.rkt")
            (lib "syndicate/pattern.rkt")
            (lib "syndicate/examples/actor/udp-echo.rkt")
            (lib "syndicate/examples/echo.rkt")
            (lib "syndicate/examples/two-buyer-protocol-monolithic.rkt")))
          (name . "syndicate")
          (nix-sha256
           .
           "1w9v294b6jwfin7sr7d47d67g9p8zplb1spcx44208vwq2x50czn")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-fail: . #t)
                   (:docs-error: . #t)
                   (:docs: . #t)
                   (:no-tag: . #t)
                   (author:tonygarnockjones@gmail.com . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/tonyg/syndicate?path=racket/")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "0da903e43834ef64f2ba69d3177c45d3edcaabff")
                          (source
                           .
                           "git://github.com/tonyg/syndicate?path=racket/")
                          (source_url
                           .
                           "http://github.com/tonyg/syndicate/tree/master?path=racket%2F")))))))
 ("syntax-class-or"
  .
  #hasheq((author . "alexander@knauth.org")
          (authors . ("alexander@knauth.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "syntax-class-or"
                    "doc/syntax-class-or@syntax-class-or/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/syntax-class-or.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/syntax-class-or.txt")))
          (checksum . "948a823026cb462f113400b5deb5276c9bd1846a")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "rackunit-lib" "scribble-lib" "racket-doc"))
          (dependency-names
           .
           ("base" "rackunit-lib" "scribble-lib" "racket-doc"))
          (description
           .
           "Combining syntax classes together as multiple variants")
          (implies . ())
          (last-checked . 1557339789)
          (last-edit . 1533087949)
          (last-updated . 1533139131)
          (modules
           .
           ((lib
             "syntax/parse/syntax-class-or/scribblings/syntax-class-or.scrbl")
            (lib "syntax/parse/syntax-class-or.rkt")))
          (name . "syntax-class-or")
          (nix-sha256
           .
           "1788mij9ilvkvp6imjsk2x4h5ci4360j7h0g7cmh4h16fyvzaram")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:alexander@knauth.org . #t)
                   (ring:2 . #t)
                   (syntax-parse . #t)))
          (source . "https://github.com/AlexKnauth/syntax-class-or.git")
          (tags . ("syntax-parse"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "948a823026cb462f113400b5deb5276c9bd1846a")
                          (source
                           .
                           "https://github.com/AlexKnauth/syntax-class-or.git")
                          (source_url
                           .
                           "https://github.com/AlexKnauth/syntax-class-or.git")))))))
 ("syntax-classes"
  .
  #hasheq((author . "lexi.lambda@gmail.com")
          (authors . ("lexi.lambda@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/syntax-classes.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/syntax-classes.txt")))
          (checksum . "a8a95ede1c72d7dae0764437126f5ce9bbe7967a")
          (checksum-error . #f)
          (conflicts . ())
          (date-added . 1548802590)
          (dependencies . ("base" "syntax-classes-lib" "syntax-classes-doc"))
          (dependency-names
           .
           ("base" "syntax-classes-lib" "syntax-classes-doc"))
          (description
           .
           "Additional useful syntax classes for use with syntax/parse")
          (implies . ("syntax-classes-lib" "syntax-classes-doc"))
          (last-checked . 1557339789)
          (last-edit . 1548802649)
          (last-updated . 1548802649)
          (modules . ())
          (name . "syntax-classes")
          (nix-sha256
           .
           "03x3rd2wb2kdmw9baklryxs3f72v23apq5iqmnf99yll3vijmycf")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:lexi.lambda@gmail.com . #t)
                   (ring:1 . #t)
                   (syntax . #t)))
          (source
           .
           "https://github.com/lexi-lambda/syntax-classes.git?path=syntax-classes")
          (tags . ("syntax"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "a8a95ede1c72d7dae0764437126f5ce9bbe7967a")
                          (source
                           .
                           "https://github.com/lexi-lambda/syntax-classes.git?path=syntax-classes")
                          (source_url
                           .
                           "https://github.com/lexi-lambda/syntax-classes.git?path=syntax-classes")))
                 ("6.0"
                  .
                  #hasheq((checksum
                           .
                           "c76e1e103487f2af6a6866162cd2243a5918a88c")
                          (source
                           .
                           "https://github.com/lexi-lambda/syntax-classes.git?path=syntax-classes#version-exception--6.2")
                          (source_url
                           .
                           "https://github.com/lexi-lambda/syntax-classes.git?path=syntax-classes#version-exception--6.2")))
                 ("6.0.1"
                  .
                  #hasheq((checksum
                           .
                           "c76e1e103487f2af6a6866162cd2243a5918a88c")
                          (source
                           .
                           "https://github.com/lexi-lambda/syntax-classes.git?path=syntax-classes#version-exception--6.2")
                          (source_url
                           .
                           "https://github.com/lexi-lambda/syntax-classes.git?path=syntax-classes#version-exception--6.2")))
                 ("6.1"
                  .
                  #hasheq((checksum
                           .
                           "c76e1e103487f2af6a6866162cd2243a5918a88c")
                          (source
                           .
                           "https://github.com/lexi-lambda/syntax-classes.git?path=syntax-classes#version-exception--6.2")
                          (source_url
                           .
                           "https://github.com/lexi-lambda/syntax-classes.git?path=syntax-classes#version-exception--6.2")))
                 ("6.1.1"
                  .
                  #hasheq((checksum
                           .
                           "c76e1e103487f2af6a6866162cd2243a5918a88c")
                          (source
                           .
                           "https://github.com/lexi-lambda/syntax-classes.git?path=syntax-classes#version-exception--6.2")
                          (source_url
                           .
                           "https://github.com/lexi-lambda/syntax-classes.git?path=syntax-classes#version-exception--6.2")))
                 ("6.10"
                  .
                  #hasheq((checksum
                           .
                           "9498cdfcf949b277ebef3d69062ae024f2005380")
                          (source
                           .
                           "https://github.com/lexi-lambda/syntax-classes.git?path=syntax-classes#version-exception--6.11")
                          (source_url
                           .
                           "https://github.com/lexi-lambda/syntax-classes.git?path=syntax-classes#version-exception--6.11")))
                 ("6.11"
                  .
                  #hasheq((checksum
                           .
                           "9498cdfcf949b277ebef3d69062ae024f2005380")
                          (source
                           .
                           "https://github.com/lexi-lambda/syntax-classes.git?path=syntax-classes#version-exception--6.11")
                          (source_url
                           .
                           "https://github.com/lexi-lambda/syntax-classes.git?path=syntax-classes#version-exception--6.11")))
                 ("6.2"
                  .
                  #hasheq((checksum
                           .
                           "c76e1e103487f2af6a6866162cd2243a5918a88c")
                          (source
                           .
                           "https://github.com/lexi-lambda/syntax-classes.git?path=syntax-classes#version-exception--6.2")
                          (source_url
                           .
                           "https://github.com/lexi-lambda/syntax-classes.git?path=syntax-classes#version-exception--6.2")))
                 ("6.2.1"
                  .
                  #hasheq((checksum
                           .
                           "c76e1e103487f2af6a6866162cd2243a5918a88c")
                          (source
                           .
                           "https://github.com/lexi-lambda/syntax-classes.git?path=syntax-classes#version-exception--6.2")
                          (source_url
                           .
                           "https://github.com/lexi-lambda/syntax-classes.git?path=syntax-classes#version-exception--6.2")))
                 ("6.3"
                  .
                  #hasheq((checksum
                           .
                           "9498cdfcf949b277ebef3d69062ae024f2005380")
                          (source
                           .
                           "https://github.com/lexi-lambda/syntax-classes.git?path=syntax-classes#version-exception--6.11")
                          (source_url
                           .
                           "https://github.com/lexi-lambda/syntax-classes.git?path=syntax-classes#version-exception--6.11")))
                 ("6.4"
                  .
                  #hasheq((checksum
                           .
                           "9498cdfcf949b277ebef3d69062ae024f2005380")
                          (source
                           .
                           "https://github.com/lexi-lambda/syntax-classes.git?path=syntax-classes#version-exception--6.11")
                          (source_url
                           .
                           "https://github.com/lexi-lambda/syntax-classes.git?path=syntax-classes#version-exception--6.11")))
                 ("6.5"
                  .
                  #hasheq((checksum
                           .
                           "9498cdfcf949b277ebef3d69062ae024f2005380")
                          (source
                           .
                           "https://github.com/lexi-lambda/syntax-classes.git?path=syntax-classes#version-exception--6.11")
                          (source_url
                           .
                           "https://github.com/lexi-lambda/syntax-classes.git?path=syntax-classes#version-exception--6.11")))
                 ("6.6"
                  .
                  #hasheq((checksum
                           .
                           "9498cdfcf949b277ebef3d69062ae024f2005380")
                          (source
                           .
                           "https://github.com/lexi-lambda/syntax-classes.git?path=syntax-classes#version-exception--6.11")
                          (source_url
                           .
                           "https://github.com/lexi-lambda/syntax-classes.git?path=syntax-classes#version-exception--6.11")))
                 ("6.7"
                  .
                  #hasheq((checksum
                           .
                           "9498cdfcf949b277ebef3d69062ae024f2005380")
                          (source
                           .
                           "https://github.com/lexi-lambda/syntax-classes.git?path=syntax-classes#version-exception--6.11")
                          (source_url
                           .
                           "https://github.com/lexi-lambda/syntax-classes.git?path=syntax-classes#version-exception--6.11")))
                 ("6.8"
                  .
                  #hasheq((checksum
                           .
                           "9498cdfcf949b277ebef3d69062ae024f2005380")
                          (source
                           .
                           "https://github.com/lexi-lambda/syntax-classes.git?path=syntax-classes#version-exception--6.11")
                          (source_url
                           .
                           "https://github.com/lexi-lambda/syntax-classes.git?path=syntax-classes#version-exception--6.11")))
                 ("6.9"
                  .
                  #hasheq((checksum
                           .
                           "9498cdfcf949b277ebef3d69062ae024f2005380")
                          (source
                           .
                           "https://github.com/lexi-lambda/syntax-classes.git?path=syntax-classes#version-exception--6.11")
                          (source_url
                           .
                           "https://github.com/lexi-lambda/syntax-classes.git?path=syntax-classes#version-exception--6.11")))))))
 ("syntax-classes-doc"
  .
  #hasheq((author . "lexi.lambda@gmail.com")
          (authors . ("lexi.lambda@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "syntax-classes"
                    "doc/syntax-classes@syntax-classes-doc/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/syntax-classes-doc.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/syntax-classes-doc.txt")))
          (checksum . "9498cdfcf949b277ebef3d69062ae024f2005380")
          (checksum-error . #f)
          (conflicts . ())
          (date-added . 1548802779)
          (dependencies
           .
           ("base" "racket-doc" "scribble-lib" "syntax-classes-lib"))
          (dependency-names
           .
           ("base" "racket-doc" "scribble-lib" "syntax-classes-lib"))
          (description
           .
           "documentation (no implementation) for “syntax-classes”")
          (implies . ())
          (last-checked . 1557339790)
          (last-edit . 1548802779)
          (last-updated . 1548802779)
          (modules . ((lib "scribblings/syntax-classes.scrbl")))
          (name . "syntax-classes-doc")
          (nix-sha256
           .
           "1n8524z6b5bhf8zz84f978iyvsl4dpqc58p69si06gimrirgvklp")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:lexi.lambda@gmail.com . #t)
                   (ring:1 . #t)
                   (syntax . #t)))
          (source
           .
           "https://github.com/lexi-lambda/syntax-classes.git?path=syntax-classes-doc#version-exception--6.11")
          (tags . ("syntax"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "9498cdfcf949b277ebef3d69062ae024f2005380")
                          (source
                           .
                           "https://github.com/lexi-lambda/syntax-classes.git?path=syntax-classes-doc#version-exception--6.11")
                          (source_url
                           .
                           "https://github.com/lexi-lambda/syntax-classes.git?path=syntax-classes-doc#version-exception--6.11")))
                 ("6.0"
                  .
                  #hasheq((checksum
                           .
                           "c76e1e103487f2af6a6866162cd2243a5918a88c")
                          (source
                           .
                           "https://github.com/lexi-lambda/syntax-classes.git?path=syntax-classes-doc#version-exception--6.2")
                          (source_url
                           .
                           "https://github.com/lexi-lambda/syntax-classes.git?path=syntax-classes-doc#version-exception--6.2")))
                 ("6.0.1"
                  .
                  #hasheq((checksum
                           .
                           "c76e1e103487f2af6a6866162cd2243a5918a88c")
                          (source
                           .
                           "https://github.com/lexi-lambda/syntax-classes.git?path=syntax-classes-doc#version-exception--6.2")
                          (source_url
                           .
                           "https://github.com/lexi-lambda/syntax-classes.git?path=syntax-classes-doc#version-exception--6.2")))
                 ("6.1"
                  .
                  #hasheq((checksum
                           .
                           "c76e1e103487f2af6a6866162cd2243a5918a88c")
                          (source
                           .
                           "https://github.com/lexi-lambda/syntax-classes.git?path=syntax-classes-doc#version-exception--6.2")
                          (source_url
                           .
                           "https://github.com/lexi-lambda/syntax-classes.git?path=syntax-classes-doc#version-exception--6.2")))
                 ("6.1.1"
                  .
                  #hasheq((checksum
                           .
                           "c76e1e103487f2af6a6866162cd2243a5918a88c")
                          (source
                           .
                           "https://github.com/lexi-lambda/syntax-classes.git?path=syntax-classes-doc#version-exception--6.2")
                          (source_url
                           .
                           "https://github.com/lexi-lambda/syntax-classes.git?path=syntax-classes-doc#version-exception--6.2")))
                 ("6.10"
                  .
                  #hasheq((checksum
                           .
                           "9498cdfcf949b277ebef3d69062ae024f2005380")
                          (source
                           .
                           "https://github.com/lexi-lambda/syntax-classes.git?path=syntax-classes-doc#version-exception--6.11")
                          (source_url
                           .
                           "https://github.com/lexi-lambda/syntax-classes.git?path=syntax-classes-doc#version-exception--6.11")))
                 ("6.11"
                  .
                  #hasheq((checksum
                           .
                           "9498cdfcf949b277ebef3d69062ae024f2005380")
                          (source
                           .
                           "https://github.com/lexi-lambda/syntax-classes.git?path=syntax-classes-doc#version-exception--6.11")
                          (source_url
                           .
                           "https://github.com/lexi-lambda/syntax-classes.git?path=syntax-classes-doc#version-exception--6.11")))
                 ("6.2"
                  .
                  #hasheq((checksum
                           .
                           "c76e1e103487f2af6a6866162cd2243a5918a88c")
                          (source
                           .
                           "https://github.com/lexi-lambda/syntax-classes.git?path=syntax-classes-doc#version-exception--6.2")
                          (source_url
                           .
                           "https://github.com/lexi-lambda/syntax-classes.git?path=syntax-classes-doc#version-exception--6.2")))
                 ("6.2.1"
                  .
                  #hasheq((checksum
                           .
                           "c76e1e103487f2af6a6866162cd2243a5918a88c")
                          (source
                           .
                           "https://github.com/lexi-lambda/syntax-classes.git?path=syntax-classes-doc#version-exception--6.2")
                          (source_url
                           .
                           "https://github.com/lexi-lambda/syntax-classes.git?path=syntax-classes-doc#version-exception--6.2")))
                 ("6.3"
                  .
                  #hasheq((checksum
                           .
                           "9498cdfcf949b277ebef3d69062ae024f2005380")
                          (source
                           .
                           "https://github.com/lexi-lambda/syntax-classes.git?path=syntax-classes-doc#version-exception--6.11")
                          (source_url
                           .
                           "https://github.com/lexi-lambda/syntax-classes.git?path=syntax-classes-doc#version-exception--6.11")))
                 ("6.4"
                  .
                  #hasheq((checksum
                           .
                           "9498cdfcf949b277ebef3d69062ae024f2005380")
                          (source
                           .
                           "https://github.com/lexi-lambda/syntax-classes.git?path=syntax-classes-doc#version-exception--6.11")
                          (source_url
                           .
                           "https://github.com/lexi-lambda/syntax-classes.git?path=syntax-classes-doc#version-exception--6.11")))
                 ("6.5"
                  .
                  #hasheq((checksum
                           .
                           "9498cdfcf949b277ebef3d69062ae024f2005380")
                          (source
                           .
                           "https://github.com/lexi-lambda/syntax-classes.git?path=syntax-classes-doc#version-exception--6.11")
                          (source_url
                           .
                           "https://github.com/lexi-lambda/syntax-classes.git?path=syntax-classes-doc#version-exception--6.11")))
                 ("6.6"
                  .
                  #hasheq((checksum
                           .
                           "9498cdfcf949b277ebef3d69062ae024f2005380")
                          (source
                           .
                           "https://github.com/lexi-lambda/syntax-classes.git?path=syntax-classes-doc#version-exception--6.11")
                          (source_url
                           .
                           "https://github.com/lexi-lambda/syntax-classes.git?path=syntax-classes-doc#version-exception--6.11")))
                 ("6.7"
                  .
                  #hasheq((checksum
                           .
                           "9498cdfcf949b277ebef3d69062ae024f2005380")
                          (source
                           .
                           "https://github.com/lexi-lambda/syntax-classes.git?path=syntax-classes-doc#version-exception--6.11")
                          (source_url
                           .
                           "https://github.com/lexi-lambda/syntax-classes.git?path=syntax-classes-doc#version-exception--6.11")))
                 ("6.8"
                  .
                  #hasheq((checksum
                           .
                           "9498cdfcf949b277ebef3d69062ae024f2005380")
                          (source
                           .
                           "https://github.com/lexi-lambda/syntax-classes.git?path=syntax-classes-doc#version-exception--6.11")
                          (source_url
                           .
                           "https://github.com/lexi-lambda/syntax-classes.git?path=syntax-classes-doc#version-exception--6.11")))
                 ("6.9"
                  .
                  #hasheq((checksum
                           .
                           "9498cdfcf949b277ebef3d69062ae024f2005380")
                          (source
                           .
                           "https://github.com/lexi-lambda/syntax-classes.git?path=syntax-classes-doc#version-exception--6.11")
                          (source_url
                           .
                           "https://github.com/lexi-lambda/syntax-classes.git?path=syntax-classes-doc#version-exception--6.11")))))))
 ("syntax-classes-lib"
  .
  #hasheq((author . "lexi.lambda@gmail.com")
          (authors . ("lexi.lambda@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/syntax-classes-lib.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/syntax-classes-lib.txt")))
          (checksum . "a8a95ede1c72d7dae0764437126f5ce9bbe7967a")
          (checksum-error . #f)
          (conflicts . ())
          (date-added . 1548802876)
          (dependencies . (("base" #:version "6.12")))
          (dependency-names . ("base"))
          (description
           .
           "implementation (no documentation) for “syntax-classes”")
          (implies . ())
          (last-checked . 1557339791)
          (last-edit . 1548802876)
          (last-updated . 1548802876)
          (modules
           .
           ((lib "syntax/parse/class/local-value.rkt")
            (lib "syntax/parse/class/paren-shape.rkt")
            (lib "syntax/parse/class/struct-id.rkt")))
          (name . "syntax-classes-lib")
          (nix-sha256
           .
           "03x3rd2wb2kdmw9baklryxs3f72v23apq5iqmnf99yll3vijmycf")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:lexi.lambda@gmail.com . #t)
                   (ring:1 . #t)
                   (syntax . #t)))
          (source
           .
           "https://github.com/lexi-lambda/syntax-classes.git?path=syntax-classes-lib")
          (tags . ("syntax"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "a8a95ede1c72d7dae0764437126f5ce9bbe7967a")
                          (source
                           .
                           "https://github.com/lexi-lambda/syntax-classes.git?path=syntax-classes-lib")
                          (source_url
                           .
                           "https://github.com/lexi-lambda/syntax-classes.git?path=syntax-classes-lib")))
                 ("6.0"
                  .
                  #hasheq((checksum
                           .
                           "c76e1e103487f2af6a6866162cd2243a5918a88c")
                          (source
                           .
                           "https://github.com/lexi-lambda/syntax-classes.git?path=syntax-classes-lib#version-exception--6.2")
                          (source_url
                           .
                           "https://github.com/lexi-lambda/syntax-classes.git?path=syntax-classes-lib#version-exception--6.2")))
                 ("6.0.1"
                  .
                  #hasheq((checksum
                           .
                           "c76e1e103487f2af6a6866162cd2243a5918a88c")
                          (source
                           .
                           "https://github.com/lexi-lambda/syntax-classes.git?path=syntax-classes-lib#version-exception--6.2")
                          (source_url
                           .
                           "https://github.com/lexi-lambda/syntax-classes.git?path=syntax-classes-lib#version-exception--6.2")))
                 ("6.1"
                  .
                  #hasheq((checksum
                           .
                           "c76e1e103487f2af6a6866162cd2243a5918a88c")
                          (source
                           .
                           "https://github.com/lexi-lambda/syntax-classes.git?path=syntax-classes-lib#version-exception--6.2")
                          (source_url
                           .
                           "https://github.com/lexi-lambda/syntax-classes.git?path=syntax-classes-lib#version-exception--6.2")))
                 ("6.1.1"
                  .
                  #hasheq((checksum
                           .
                           "c76e1e103487f2af6a6866162cd2243a5918a88c")
                          (source
                           .
                           "https://github.com/lexi-lambda/syntax-classes.git?path=syntax-classes-lib#version-exception--6.2")
                          (source_url
                           .
                           "https://github.com/lexi-lambda/syntax-classes.git?path=syntax-classes-lib#version-exception--6.2")))
                 ("6.10"
                  .
                  #hasheq((checksum
                           .
                           "9498cdfcf949b277ebef3d69062ae024f2005380")
                          (source
                           .
                           "https://github.com/lexi-lambda/syntax-classes.git?path=syntax-classes-lib#version-exception--6.11")
                          (source_url
                           .
                           "https://github.com/lexi-lambda/syntax-classes.git?path=syntax-classes-lib#version-exception--6.11")))
                 ("6.11"
                  .
                  #hasheq((checksum
                           .
                           "9498cdfcf949b277ebef3d69062ae024f2005380")
                          (source
                           .
                           "https://github.com/lexi-lambda/syntax-classes.git?path=syntax-classes-lib#version-exception--6.11")
                          (source_url
                           .
                           "https://github.com/lexi-lambda/syntax-classes.git?path=syntax-classes-lib#version-exception--6.11")))
                 ("6.2"
                  .
                  #hasheq((checksum
                           .
                           "c76e1e103487f2af6a6866162cd2243a5918a88c")
                          (source
                           .
                           "https://github.com/lexi-lambda/syntax-classes.git?path=syntax-classes-lib#version-exception--6.2")
                          (source_url
                           .
                           "https://github.com/lexi-lambda/syntax-classes.git?path=syntax-classes-lib#version-exception--6.2")))
                 ("6.2.1"
                  .
                  #hasheq((checksum
                           .
                           "c76e1e103487f2af6a6866162cd2243a5918a88c")
                          (source
                           .
                           "https://github.com/lexi-lambda/syntax-classes.git?path=syntax-classes-lib#version-exception--6.2")
                          (source_url
                           .
                           "https://github.com/lexi-lambda/syntax-classes.git?path=syntax-classes-lib#version-exception--6.2")))
                 ("6.3"
                  .
                  #hasheq((checksum
                           .
                           "9498cdfcf949b277ebef3d69062ae024f2005380")
                          (source
                           .
                           "https://github.com/lexi-lambda/syntax-classes.git?path=syntax-classes-lib#version-exception--6.11")
                          (source_url
                           .
                           "https://github.com/lexi-lambda/syntax-classes.git?path=syntax-classes-lib#version-exception--6.11")))
                 ("6.4"
                  .
                  #hasheq((checksum
                           .
                           "9498cdfcf949b277ebef3d69062ae024f2005380")
                          (source
                           .
                           "https://github.com/lexi-lambda/syntax-classes.git?path=syntax-classes-lib#version-exception--6.11")
                          (source_url
                           .
                           "https://github.com/lexi-lambda/syntax-classes.git?path=syntax-classes-lib#version-exception--6.11")))
                 ("6.5"
                  .
                  #hasheq((checksum
                           .
                           "9498cdfcf949b277ebef3d69062ae024f2005380")
                          (source
                           .
                           "https://github.com/lexi-lambda/syntax-classes.git?path=syntax-classes-lib#version-exception--6.11")
                          (source_url
                           .
                           "https://github.com/lexi-lambda/syntax-classes.git?path=syntax-classes-lib#version-exception--6.11")))
                 ("6.6"
                  .
                  #hasheq((checksum
                           .
                           "9498cdfcf949b277ebef3d69062ae024f2005380")
                          (source
                           .
                           "https://github.com/lexi-lambda/syntax-classes.git?path=syntax-classes-lib#version-exception--6.11")
                          (source_url
                           .
                           "https://github.com/lexi-lambda/syntax-classes.git?path=syntax-classes-lib#version-exception--6.11")))
                 ("6.7"
                  .
                  #hasheq((checksum
                           .
                           "9498cdfcf949b277ebef3d69062ae024f2005380")
                          (source
                           .
                           "https://github.com/lexi-lambda/syntax-classes.git?path=syntax-classes-lib#version-exception--6.11")
                          (source_url
                           .
                           "https://github.com/lexi-lambda/syntax-classes.git?path=syntax-classes-lib#version-exception--6.11")))
                 ("6.8"
                  .
                  #hasheq((checksum
                           .
                           "9498cdfcf949b277ebef3d69062ae024f2005380")
                          (source
                           .
                           "https://github.com/lexi-lambda/syntax-classes.git?path=syntax-classes-lib#version-exception--6.11")
                          (source_url
                           .
                           "https://github.com/lexi-lambda/syntax-classes.git?path=syntax-classes-lib#version-exception--6.11")))
                 ("6.9"
                  .
                  #hasheq((checksum
                           .
                           "9498cdfcf949b277ebef3d69062ae024f2005380")
                          (source
                           .
                           "https://github.com/lexi-lambda/syntax-classes.git?path=syntax-classes-lib#version-exception--6.11")
                          (source_url
                           .
                           "https://github.com/lexi-lambda/syntax-classes.git?path=syntax-classes-lib#version-exception--6.11")))))))
 ("syntax-classes-test"
  .
  #hasheq((author . "lexi.lambda@gmail.com")
          (authors . ("lexi.lambda@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log
                  .
                  "server/built/install/syntax-classes-test.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/syntax-classes-test.txt")))
          (checksum . "a8a95ede1c72d7dae0764437126f5ce9bbe7967a")
          (checksum-error . #f)
          (conflicts . ())
          (date-added . 1548803006)
          (dependencies
           .
           ("base" "rackunit-lib" "rackunit-spec" "syntax-classes-lib"))
          (dependency-names
           .
           ("base" "rackunit-lib" "rackunit-spec" "syntax-classes-lib"))
          (description . "")
          (implies . ())
          (last-checked . 1557339792)
          (last-edit . 1548803006)
          (last-updated . 1548803006)
          (modules
           .
           ((lib "tests/syntax/parse/class/struct-id.rkt")
            (lib "tests/syntax/parse/class/paren-shape.rkt")))
          (name . "syntax-classes-test")
          (nix-sha256
           .
           "03x3rd2wb2kdmw9baklryxs3f72v23apq5iqmnf99yll3vijmycf")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:no-desc: . #t)
                   (author:lexi.lambda@gmail.com . #t)
                   (ring:1 . #t)
                   (syntax . #t)))
          (source
           .
           "https://github.com/lexi-lambda/syntax-classes.git?path=syntax-classes-test")
          (tags . ("syntax"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "a8a95ede1c72d7dae0764437126f5ce9bbe7967a")
                          (source
                           .
                           "https://github.com/lexi-lambda/syntax-classes.git?path=syntax-classes-test")
                          (source_url
                           .
                           "https://github.com/lexi-lambda/syntax-classes.git?path=syntax-classes-test")))
                 ("6.0"
                  .
                  #hasheq((checksum
                           .
                           "c76e1e103487f2af6a6866162cd2243a5918a88c")
                          (source
                           .
                           "https://github.com/lexi-lambda/syntax-classes.git?path=syntax-classes-test#version-exception--6.2")
                          (source_url
                           .
                           "https://github.com/lexi-lambda/syntax-classes.git?path=syntax-classes-test#version-exception--6.2")))
                 ("6.0.1"
                  .
                  #hasheq((checksum
                           .
                           "c76e1e103487f2af6a6866162cd2243a5918a88c")
                          (source
                           .
                           "https://github.com/lexi-lambda/syntax-classes.git?path=syntax-classes-test#version-exception--6.2")
                          (source_url
                           .
                           "https://github.com/lexi-lambda/syntax-classes.git?path=syntax-classes-test#version-exception--6.2")))
                 ("6.1"
                  .
                  #hasheq((checksum
                           .
                           "c76e1e103487f2af6a6866162cd2243a5918a88c")
                          (source
                           .
                           "https://github.com/lexi-lambda/syntax-classes.git?path=syntax-classes-test#version-exception--6.2")
                          (source_url
                           .
                           "https://github.com/lexi-lambda/syntax-classes.git?path=syntax-classes-test#version-exception--6.2")))
                 ("6.1.1"
                  .
                  #hasheq((checksum
                           .
                           "c76e1e103487f2af6a6866162cd2243a5918a88c")
                          (source
                           .
                           "https://github.com/lexi-lambda/syntax-classes.git?path=syntax-classes-test#version-exception--6.2")
                          (source_url
                           .
                           "https://github.com/lexi-lambda/syntax-classes.git?path=syntax-classes-test#version-exception--6.2")))
                 ("6.10"
                  .
                  #hasheq((checksum
                           .
                           "9498cdfcf949b277ebef3d69062ae024f2005380")
                          (source
                           .
                           "https://github.com/lexi-lambda/syntax-classes.git?path=syntax-classes-test#version-exception--6.11")
                          (source_url
                           .
                           "https://github.com/lexi-lambda/syntax-classes.git?path=syntax-classes-test#version-exception--6.11")))
                 ("6.11"
                  .
                  #hasheq((checksum
                           .
                           "9498cdfcf949b277ebef3d69062ae024f2005380")
                          (source
                           .
                           "https://github.com/lexi-lambda/syntax-classes.git?path=syntax-classes-test#version-exception--6.11")
                          (source_url
                           .
                           "https://github.com/lexi-lambda/syntax-classes.git?path=syntax-classes-test#version-exception--6.11")))
                 ("6.2"
                  .
                  #hasheq((checksum
                           .
                           "c76e1e103487f2af6a6866162cd2243a5918a88c")
                          (source
                           .
                           "https://github.com/lexi-lambda/syntax-classes.git?path=syntax-classes-test#version-exception--6.2")
                          (source_url
                           .
                           "https://github.com/lexi-lambda/syntax-classes.git?path=syntax-classes-test#version-exception--6.2")))
                 ("6.2.1"
                  .
                  #hasheq((checksum
                           .
                           "c76e1e103487f2af6a6866162cd2243a5918a88c")
                          (source
                           .
                           "https://github.com/lexi-lambda/syntax-classes.git?path=syntax-classes-test#version-exception--6.2")
                          (source_url
                           .
                           "https://github.com/lexi-lambda/syntax-classes.git?path=syntax-classes-test#version-exception--6.2")))
                 ("6.3"
                  .
                  #hasheq((checksum
                           .
                           "9498cdfcf949b277ebef3d69062ae024f2005380")
                          (source
                           .
                           "https://github.com/lexi-lambda/syntax-classes.git?path=syntax-classes-test#version-exception--6.11")
                          (source_url
                           .
                           "https://github.com/lexi-lambda/syntax-classes.git?path=syntax-classes-test#version-exception--6.11")))
                 ("6.4"
                  .
                  #hasheq((checksum
                           .
                           "9498cdfcf949b277ebef3d69062ae024f2005380")
                          (source
                           .
                           "https://github.com/lexi-lambda/syntax-classes.git?path=syntax-classes-test#version-exception--6.11")
                          (source_url
                           .
                           "https://github.com/lexi-lambda/syntax-classes.git?path=syntax-classes-test#version-exception--6.11")))
                 ("6.5"
                  .
                  #hasheq((checksum
                           .
                           "9498cdfcf949b277ebef3d69062ae024f2005380")
                          (source
                           .
                           "https://github.com/lexi-lambda/syntax-classes.git?path=syntax-classes-test#version-exception--6.11")
                          (source_url
                           .
                           "https://github.com/lexi-lambda/syntax-classes.git?path=syntax-classes-test#version-exception--6.11")))
                 ("6.6"
                  .
                  #hasheq((checksum
                           .
                           "9498cdfcf949b277ebef3d69062ae024f2005380")
                          (source
                           .
                           "https://github.com/lexi-lambda/syntax-classes.git?path=syntax-classes-test#version-exception--6.11")
                          (source_url
                           .
                           "https://github.com/lexi-lambda/syntax-classes.git?path=syntax-classes-test#version-exception--6.11")))
                 ("6.7"
                  .
                  #hasheq((checksum
                           .
                           "9498cdfcf949b277ebef3d69062ae024f2005380")
                          (source
                           .
                           "https://github.com/lexi-lambda/syntax-classes.git?path=syntax-classes-test#version-exception--6.11")
                          (source_url
                           .
                           "https://github.com/lexi-lambda/syntax-classes.git?path=syntax-classes-test#version-exception--6.11")))
                 ("6.8"
                  .
                  #hasheq((checksum
                           .
                           "9498cdfcf949b277ebef3d69062ae024f2005380")
                          (source
                           .
                           "https://github.com/lexi-lambda/syntax-classes.git?path=syntax-classes-test#version-exception--6.11")
                          (source_url
                           .
                           "https://github.com/lexi-lambda/syntax-classes.git?path=syntax-classes-test#version-exception--6.11")))
                 ("6.9"
                  .
                  #hasheq((checksum
                           .
                           "9498cdfcf949b277ebef3d69062ae024f2005380")
                          (source
                           .
                           "https://github.com/lexi-lambda/syntax-classes.git?path=syntax-classes-test#version-exception--6.11")
                          (source_url
                           .
                           "https://github.com/lexi-lambda/syntax-classes.git?path=syntax-classes-test#version-exception--6.11")))))))
 ("syntax-color"
  .
  #hash((author . "mflatt@racket-lang.org")
        (checksum . "72eff871b5f762ff72210a68fec4ad1e93c2cdaa")
        (dependencies . ("syntax-color-lib" "syntax-color-doc"))
        (dependency-names . ("syntax-color-lib" "syntax-color-doc"))
        (description . "mflatt@racket-lang.org")
        (modules . ())
        (name . "syntax-color")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/syntax-color.zip")
        (tags . ())))
 ("syntax-color-doc"
  .
  #hash((author . "mflatt@racket-lang.org")
        (checksum . "437e442d61bc51e1e3dd7534465011e698778f96")
        (dependencies
         .
         ("base"
          "gui-doc"
          "scribble-doc"
          "gui-lib"
          "scribble-lib"
          "racket-doc"
          "syntax-color-lib"))
        (dependency-names
         .
         ("base"
          "gui-doc"
          "scribble-doc"
          "gui-lib"
          "scribble-lib"
          "racket-doc"
          "syntax-color-lib"))
        (description . "mflatt@racket-lang.org")
        (modules . ())
        (name . "syntax-color-doc")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/syntax-color-doc.zip")
        (tags . ())))
 ("syntax-color-lib"
  .
  #hash((author . "mflatt@racket-lang.org")
        (checksum . "3b5cd8d5f5a2cc7c6132980e9ac064e583ca65d2")
        (dependencies
         .
         ("scheme-lib"
          "base"
          "compatibility-lib"
          "parser-tools-lib"
          "option-contract-lib"))
        (dependency-names
         .
         ("scheme-lib"
          "base"
          "compatibility-lib"
          "parser-tools-lib"
          "option-contract-lib"))
        (description . "mflatt@racket-lang.org")
        (modules . ())
        (name . "syntax-color-lib")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/syntax-color-lib.zip")
        (tags . ())))
 ("syntax-color-test"
  .
  #hash((author . "mflatt@racket-lang.org")
        (checksum . "e575d6cd251ccade75e7657085d8ea7f26670419")
        (dependencies
         .
         ("base" "rackunit-lib" "scheme-lib" "syntax-color-lib" "gui-lib"))
        (dependency-names
         .
         ("base" "rackunit-lib" "scheme-lib" "syntax-color-lib" "gui-lib"))
        (description . "mflatt@racket-lang.org")
        (modules . ())
        (name . "syntax-color-test")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/syntax-color-test.zip")
        (tags . ())))
 ("syntax-lang"
  .
  #hasheq((author . "jackhfirth@gmail.com")
          (authors . ("jackhfirth@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "syntax-lang"
                    "doc/syntax-lang@syntax-lang/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/syntax-lang.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/syntax-lang.txt")))
          (checksum . "50897fef061bcf8640110a7695c81a3a06e38e6d")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "racket-doc" "scribble-lib"))
          (dependency-names . ("base" "racket-doc" "scribble-lib"))
          (description
           .
           "Mini-library for creating new #lang languages from simple macros")
          (implies . ())
          (last-checked . 1557339794)
          (last-edit . 1500077461)
          (last-updated . 1502816469)
          (modules
           .
           ((lib "syntax/lang.rkt")
            (lib "syntax/lang/main.scrbl")
            (lib "syntax/lang/main.rkt")))
          (name . "syntax-lang")
          (nix-sha256
           .
           "14ai9r55vfnsfhr6662l1agrnwvmh92ffnhq1yq674drr1049nz0")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:jackhfirth@gmail.com . #t)
                   (experimental . #t)
                   (lang . #t)
                   (ring:1 . #t)
                   (sugar . #t)
                   (syntax . #t)))
          (source . "git://github.com/jackfirth/racket-syntax-lang")
          (tags . ("experimental" "lang" "sugar" "syntax"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "50897fef061bcf8640110a7695c81a3a06e38e6d")
                          (source
                           .
                           "git://github.com/jackfirth/racket-syntax-lang")
                          (source_url
                           .
                           "http://github.com/jackfirth/racket-syntax-lang/tree/master")))))))
 ("syntax-macro-lang"
  .
  #hasheq((author . "alexander@knauth.org")
          (authors . ("alexander@knauth.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log
                  .
                  "server/built/min-fail/syntax-macro-lang.txt")
                 (success-log . "server/built/install/syntax-macro-lang.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/syntax-macro-lang.txt")))
          (checksum . "fad6fd9c44ea20335b03e820b06b042883bb40bf")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base"))
          (dependency-names . ("base"))
          (description
           .
           "experimental racket module language for creating languages, inspired by syntax-lang")
          (implies . ())
          (last-checked . 1557339794)
          (last-edit . 1443624472)
          (last-updated . 1540696538)
          (modules
           .
           ((lib "syntax/macro-lang.rkt")
            (lib "tests/syntax/macro-lang/the-lang.rkt")
            (lib "tests/syntax/macro-lang/test.rkt")))
          (name . "syntax-macro-lang")
          (nix-sha256
           .
           "0fdnhr41zydh4qamyxdvfjq6nfxdg8aaxfjdgx53yrqb0gcnkn3j")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:alexander@knauth.org . #t)
                   (lang . #t)
                   (ring:1 . #t)
                   (syntax . #t)))
          (source . "git://github.com/AlexKnauth/syntax-macro-lang")
          (tags . ("lang" "syntax"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "fad6fd9c44ea20335b03e820b06b042883bb40bf")
                          (source
                           .
                           "git://github.com/AlexKnauth/syntax-macro-lang")
                          (source_url
                           .
                           "http://github.com/AlexKnauth/syntax-macro-lang/tree/master")))))))
 ("syntax-parse-example"
  .
  #hasheq((author . "types@ccs.neu.edu")
          (authors . ("types@ccs.neu.edu"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "syntax-parse-example"
                    "doc/syntax-parse-example@syntax-parse-example/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log
                  .
                  "server/built/install/syntax-parse-example.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/syntax-parse-example.txt")))
          (checksum . "73f62bf5a54079b9bdb3f580fa6a4c65054b1110")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("at-exp-lib"
            "base"
            "scribble-lib"
            "rackunit-lib"
            "typed-racket-lib"
            "scribble-lib"
            "racket-doc"
            "rackunit-doc"
            "rackunit-lib"
            "scribble-doc"
            "rackunit-typed"
            "typed-racket-doc"))
          (dependency-names
           .
           ("at-exp-lib"
            "base"
            "scribble-lib"
            "rackunit-lib"
            "typed-racket-lib"
            "scribble-lib"
            "racket-doc"
            "rackunit-doc"
            "rackunit-lib"
            "scribble-doc"
            "rackunit-typed"
            "typed-racket-doc"))
          (description . "Example macros written using syntax/parse")
          (implies . ())
          (last-checked . 1557339794)
          (last-edit . 1494875077)
          (last-updated . 1552756015)
          (modules
           .
           ((lib
             "syntax-parse-example/first-class-or/first-class-or-test.rkt")
            (lib "syntax-parse-example/struct-list/struct-list.scrbl")
            (lib "syntax-parse-example/def/def.rkt")
            (lib "syntax-parse-example/let-star/let-star-test.rkt")
            (lib "syntax-parse-example/let-star/let-star.rkt")
            (lib "syntax-parse-example/optional-assert/optional-assert.scrbl")
            (lib
             "syntax-parse-example/cross-macro-communication/cross-macro-communication-test.rkt")
            (lib "syntax-parse-example/struct-list/struct-list.rkt")
            (lib
             "syntax-parse-example/cross-macro-communication/cross-macro-communication.scrbl")
            (lib "syntax-parse-example/optional-assert/optional-assert.rkt")
            (lib
             "syntax-parse-example/multi-check-true/multi-check-true.scrbl")
            (lib "syntax-parse-example/rec-contract/rec-contract.rkt")
            (lib "syntax-parse-example/index.scrbl")
            (lib "syntax-parse-example/struct-list/struct-list-test.rkt")
            (lib "syntax-parse-example/raco.rkt")
            (lib "syntax-parse-example/multi-check-true/multi-check-true.rkt")
            (lib "syntax-parse-example/let-star/let-star.scrbl")
            (lib "syntax-parse-example/lang/reader.rkt")
            (lib
             "syntax-parse-example/define-datum-literal-set/define-datum-literal-set.rkt")
            (lib
             "syntax-parse-example/define-datum-literal-set/define-datum-literal-set.scrbl")
            (lib "syntax-parse-example/first-class-or/first-class-or.scrbl")
            (lib
             "syntax-parse-example/conditional-require/conditional-require.scrbl")
            (lib
             "syntax-parse-example/conditional-require/conditional-require.rkt")
            (lib "syntax-parse-example/def/def.scrbl")
            (lib "syntax-parse-example/first-class-or/first-class-or.rkt")
            (lib "syntax-parse-example/render.rkt")
            (lib
             "syntax-parse-example/cross-macro-communication/cross-macro-communication.rkt")
            (lib
             "syntax-parse-example/multi-check-true/multi-check-true-test.rkt")
            (lib
             "syntax-parse-example/define-datum-literal-set/define-datum-literal-set-test.rkt")
            (lib "syntax-parse-example/rec-contract/rec-contract-test.rkt")
            (lib "syntax-parse-example/rec-contract/rec-contract.scrbl")
            (lib "syntax-parse-example/def/def-test.rkt")
            (lib "syntax-parse-example/test.rkt")
            (lib
             "syntax-parse-example/conditional-require/conditional-require-test.rkt")
            (lib
             "syntax-parse-example/optional-assert/optional-assert-test.rkt")
            (lib "syntax-parse-example/syntax-parse-example.scrbl")))
          (name . "syntax-parse-example")
          (nix-sha256
           .
           "0vnj3d7sk1wpnmci2g624jax5hp14s0bm14aav51z9hr2d7ncc4y")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:types@ccs.neu.edu . #t)
                   (macro . #t)
                   (ring:1 . #t)
                   (tutorial . #t)))
          (source . "git://github.com/bennn/syntax-parse-example")
          (tags . ("macro" "tutorial"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "73f62bf5a54079b9bdb3f580fa6a4c65054b1110")
                          (source
                           .
                           "git://github.com/bennn/syntax-parse-example")
                          (source_url
                           .
                           "http://github.com/bennn/syntax-parse-example/tree/master")))))))
 ("syntax-sloc"
  .
  #hasheq((author . "alexander@knauth.org")
          (authors . ("alexander@knauth.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "syntax-sloc"
                    "doc/syntax-sloc@syntax-sloc/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/syntax-sloc.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/syntax-sloc.txt")))
          (checksum . "ea9bfa06a207ba63b481dcc794c55475eb6bcc33")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "typed-racket-lib"
            "lang-file"
            "rackunit-lib"
            "scribble-lib"
            "scribble-code-examples"
            "racket-doc"
            "typed-racket-more"))
          (dependency-names
           .
           ("base"
            "typed-racket-lib"
            "lang-file"
            "rackunit-lib"
            "scribble-lib"
            "scribble-code-examples"
            "racket-doc"
            "typed-racket-more"))
          (description
           .
           "counts the number of source lines of code in a racket syntax object")
          (implies . ())
          (last-checked . 1557339794)
          (last-edit . 1462284326)
          (last-updated . 1503978849)
          (modules
           .
           ((lib "syntax-sloc/pkg-sloc.rkt")
            (lib "syntax-sloc/syntax-sloc.rkt")
            (lib "typed/syntax-sloc/main.rkt")
            (lib "syntax-sloc/read-lang-file.rkt")
            (lib "syntax-sloc/private/accumulate-stx.rkt")
            (lib "syntax-sloc/raco-sloc.rkt")
            (lib "typed/syntax-sloc/directory-sloc.rkt")
            (lib "syntax-sloc/scribblings/syntax-sloc.scrbl")
            (lib "syntax-sloc/directory-sloc.rkt")
            (lib "typed/syntax-sloc/read-lang-file.rkt")
            (lib "typed/syntax-sloc/syntax-sloc.rkt")
            (lib "typed/syntax-sloc/lang-file-sloc.rkt")
            (lib "syntax-sloc/private/pkg-module-paths.rkt")
            (lib "typed/syntax-sloc.rkt")
            (lib "syntax-sloc/lang-file-sloc.rkt")
            (lib "syntax-sloc/main.rkt")))
          (name . "syntax-sloc")
          (nix-sha256
           .
           "156rmzywjld6lf0cj8lwskgrn49ij45h1jhcj4dhrzqbyws4acgv")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (:no-tag: . #t)
                   (author:alexander@knauth.org . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/AlexKnauth/syntax-sloc")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "ea9bfa06a207ba63b481dcc794c55475eb6bcc33")
                          (source . "git://github.com/AlexKnauth/syntax-sloc")
                          (source_url
                           .
                           "http://github.com/AlexKnauth/syntax-sloc/tree/master")))))))
 ("syntax-warn"
  .
  #hasheq((author . "jackhfirth@gmail.com")
          (authors . ("jackhfirth@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/syntax-warn.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/syntax-warn.txt")))
          (checksum . "f00b27f92656f60d32853831ee905ceeb00693d9")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "syntax-warn-base"
            "syntax-warn-cli"
            "syntax-warn-doc"
            "syntax-warn-lang"))
          (dependency-names
           .
           ("base"
            "syntax-warn-base"
            "syntax-warn-cli"
            "syntax-warn-doc"
            "syntax-warn-lang"))
          (description
           .
           "Define and attach syntax warnings to code, with automated fixes and built in warnings. Implies -base, -lang, -cli, and -doc packages.")
          (implies
           .
           ("syntax-warn-base"
            "syntax-warn-cli"
            "syntax-warn-doc"
            "syntax-warn-lang"))
          (last-checked . 1557339794)
          (last-edit . 1500077527)
          (last-updated . 1502920413)
          (modules . ())
          (name . "syntax-warn")
          (nix-sha256
           .
           "0py8h9yxlxfnqlppcy1rwjj8bmnxymkavhpgcd68m1bj6ng4dhfn")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:jackhfirth@gmail.com . #t)
                   (lang . #t)
                   (raco . #t)
                   (ring:1 . #t)
                   (syntax . #t)
                   (syntax-warn . #t)))
          (source . "git://github.com/jackfirth/syntax-warn?path=syntax-warn")
          (tags . ("lang" "raco" "syntax" "syntax-warn"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "f00b27f92656f60d32853831ee905ceeb00693d9")
                          (source
                           .
                           "git://github.com/jackfirth/syntax-warn?path=syntax-warn")
                          (source_url
                           .
                           "http://github.com/jackfirth/syntax-warn/tree/master?path=syntax-warn")))))))
 ("syntax-warn-base"
  .
  #hasheq((author . "jackhfirth@gmail.com")
          (authors . ("jackhfirth@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/syntax-warn-base.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/syntax-warn-base.txt")))
          (checksum . "f00b27f92656f60d32853831ee905ceeb00693d9")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . (("base" #:version "6.4") "rackunit-lib"))
          (dependency-names . ("base" "rackunit-lib"))
          (description
           .
           "Base library for defining and attaching syntax warnings")
          (implies . ())
          (last-checked . 1557339794)
          (last-edit . 1473746021)
          (last-updated . 1502920413)
          (modules
           .
           ((lib "syntax/warn/private/syntax-format.rkt")
            (lib "syntax/warn/private/filter-index.rkt")
            (lib "syntax/warn/private/rackunit-string.rkt")
            (lib "syntax/warn/private/string-lines.rkt")
            (lib "syntax/warn/private/list.rkt")
            (lib "syntax/warn/private/string-pad.rkt")
            (lib "syntax/warn/private/warn-property.rkt")
            (lib "syntax/warn.rkt")
            (lib "syntax/warn/private/warn-config.rkt")
            (lib "syntax/warn/private/syntax-srcloc.rkt")
            (lib "syntax/warn/private/warn.rkt")
            (lib "syntax/warn/private/syntax-srcloc-test.rkt")
            (lib "syntax/warn/private/rackunit-syntax.rkt")
            (lib "syntax/warn/private/syntax-srcloc-data.rkt")
            (lib "syntax/warn/private/warn-module.rkt")))
          (name . "syntax-warn-base")
          (nix-sha256
           .
           "0py8h9yxlxfnqlppcy1rwjj8bmnxymkavhpgcd68m1bj6ng4dhfn")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:jackhfirth@gmail.com . #t)
                   (ring:1 . #t)
                   (syntax . #t)
                   (syntax-warn . #t)))
          (source
           .
           "git://github.com/jackfirth/syntax-warn?path=syntax-warn-base")
          (tags . ("syntax" "syntax-warn"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "f00b27f92656f60d32853831ee905ceeb00693d9")
                          (source
                           .
                           "git://github.com/jackfirth/syntax-warn?path=syntax-warn-base")
                          (source_url
                           .
                           "http://github.com/jackfirth/syntax-warn/tree/master?path=syntax-warn-base")))))))
 ("syntax-warn-cli"
  .
  #hasheq((author . "jackhfirth@gmail.com")
          (authors . ("jackhfirth@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/syntax-warn-cli.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/syntax-warn-cli.txt")))
          (checksum . "f00b27f92656f60d32853831ee905ceeb00693d9")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("rackunit-lib"
            "syntax-warn-lang"
            "base"
            "compiler-lib"
            "syntax-warn-base"
            "rackunit-lib"))
          (dependency-names
           .
           ("rackunit-lib"
            "syntax-warn-lang"
            "base"
            "compiler-lib"
            "syntax-warn-base"
            "rackunit-lib"))
          (description
           .
           "Command line raco tools for checking and fixing syntax warnings")
          (implies . ())
          (last-checked . 1557339794)
          (last-edit . 1473746160)
          (last-updated . 1502920414)
          (modules
           .
           ((lib "syntax/warn/test-no-warnings/main.rkt")
            (lib "syntax/warn/private/read.rkt")
            (lib "syntax/warn/private/module.rkt")
            (lib "syntax/warn/private/command.rkt")
            (lib "syntax/warn/test-warnings/main.rkt")
            (lib "syntax/warn/private/read-test.rkt")
            (lib "syntax/warn/private/string-delta.rkt")
            (lib "syntax/warn/private/test.rkt")
            (lib "syntax/warn/raco-fix.rkt")
            (lib "syntax/warn/private/syntax-string.rkt")
            (lib "syntax/warn/test-warnings-suppressed/main.rkt")
            (lib "syntax/warn/private/config.rkt")
            (lib "syntax/warn/raco-warn.rkt")))
          (name . "syntax-warn-cli")
          (nix-sha256
           .
           "0py8h9yxlxfnqlppcy1rwjj8bmnxymkavhpgcd68m1bj6ng4dhfn")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:jackhfirth@gmail.com . #t)
                   (raco . #t)
                   (ring:1 . #t)
                   (syntax . #t)
                   (syntax-warn . #t)))
          (source
           .
           "git://github.com/jackfirth/syntax-warn?path=syntax-warn-cli")
          (tags . ("raco" "syntax" "syntax-warn"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "f00b27f92656f60d32853831ee905ceeb00693d9")
                          (source
                           .
                           "git://github.com/jackfirth/syntax-warn?path=syntax-warn-cli")
                          (source_url
                           .
                           "http://github.com/jackfirth/syntax-warn/tree/master?path=syntax-warn-cli")))))))
 ("syntax-warn-doc"
  .
  #hasheq((author . "jackhfirth@gmail.com")
          (authors . ("jackhfirth@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "syntax-warn"
                    "doc/syntax-warn@syntax-warn-doc/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/syntax-warn-doc.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/syntax-warn-doc.txt")))
          (checksum . "f00b27f92656f60d32853831ee905ceeb00693d9")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("syntax-warn-base"
            "scribble-lib"
            "scribble-text-lib"
            "base"
            "racket-doc"
            "scribble-lib"
            "syntax-warn-base"))
          (dependency-names
           .
           ("syntax-warn-base"
            "scribble-lib"
            "scribble-text-lib"
            "base"
            "racket-doc"
            "scribble-lib"
            "syntax-warn-base"))
          (description . "Documentation for the syntax-warn packages")
          (implies . ())
          (last-checked . 1557339794)
          (last-edit . 1500077547)
          (last-updated . 1502920414)
          (modules
           .
           ((lib "syntax-warn-doc/base.rkt")
            (lib "syntax-warn-doc/main.scrbl")
            (lib "syntax-warn-doc/reference.scrbl")
            (lib "syntax-warn-doc/cli.scrbl")
            (lib "syntax-warn-doc/lang.scrbl")))
          (name . "syntax-warn-doc")
          (nix-sha256
           .
           "0py8h9yxlxfnqlppcy1rwjj8bmnxymkavhpgcd68m1bj6ng4dhfn")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:jackhfirth@gmail.com . #t)
                   (docs . #t)
                   (ring:1 . #t)
                   (syntax . #t)
                   (syntax-warn . #t)))
          (source
           .
           "git://github.com/jackfirth/syntax-warn?path=syntax-warn-doc")
          (tags . ("docs" "syntax" "syntax-warn"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "f00b27f92656f60d32853831ee905ceeb00693d9")
                          (source
                           .
                           "git://github.com/jackfirth/syntax-warn?path=syntax-warn-doc")
                          (source_url
                           .
                           "http://github.com/jackfirth/syntax-warn/tree/master?path=syntax-warn-doc")))))))
 ("syntax-warn-lang"
  .
  #hasheq((author . "jackhfirth@gmail.com")
          (authors . ("jackhfirth@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/syntax-warn-lang.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/syntax-warn-lang.txt")))
          (checksum . "f00b27f92656f60d32853831ee905ceeb00693d9")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "syntax-warn-base" "rackunit-lib"))
          (dependency-names . ("base" "syntax-warn-base" "rackunit-lib"))
          (description
           .
           "#lang racket/base/warn - Racket with syntax warnings")
          (implies . ())
          (last-checked . 1557339794)
          (last-edit . 1473746095)
          (last-updated . 1502920414)
          (modules
           .
           ((lib "racket/base/warn.rkt")
            (lib "racket/base/private/require.rkt")))
          (name . "syntax-warn-lang")
          (nix-sha256
           .
           "0py8h9yxlxfnqlppcy1rwjj8bmnxymkavhpgcd68m1bj6ng4dhfn")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:jackhfirth@gmail.com . #t)
                   (lang . #t)
                   (ring:1 . #t)
                   (syntax . #t)
                   (syntax-warn . #t)))
          (source
           .
           "git://github.com/jackfirth/syntax-warn?path=syntax-warn-lang")
          (tags . ("lang" "syntax" "syntax-warn"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "f00b27f92656f60d32853831ee905ceeb00693d9")
                          (source
                           .
                           "git://github.com/jackfirth/syntax-warn?path=syntax-warn-lang")
                          (source_url
                           .
                           "http://github.com/jackfirth/syntax-warn/tree/master?path=syntax-warn-lang")))))))
 ("sysfs"
  .
  #hasheq((author . "mordae@anilinux.org")
          (authors . ("mordae@anilinux.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/sysfs.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/sysfs.txt")))
          (checksum . "80a68016bfd28fa5e86269e7bae0cbbe5ad8de87")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "scribble-lib" "misc1"))
          (dependency-names . ("base" "scribble-lib" "misc1"))
          (description . "Linux /sys utilities.")
          (implies . ())
          (last-checked . 1557339794)
          (last-edit . 1368570744)
          (last-updated . 1502816471)
          (modules
           .
           ((lib "sysfs/net.rkt")
            (lib "sysfs/util.rkt")
            (lib "sysfs/block.rkt")
            (lib "sysfs/main.rkt")))
          (name . "sysfs")
          (nix-sha256
           .
           "0g6f38n60ivkvszvpn352q1ylmynkkg0krh37ajhhy3k1qii23jh")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:mordae@anilinux.org . #t)
                   (linux . #t)
                   (ring:1 . #t)))
          (source . "github://github.com/mordae/racket-sysfs/master")
          (tags . ("linux"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "80a68016bfd28fa5e86269e7bae0cbbe5ad8de87")
                          (source
                           .
                           "github://github.com/mordae/racket-sysfs/master")
                          (source_url
                           .
                           "http://github.com/mordae/racket-sysfs/tree/master")))))))
 ("systemd"
  .
  #hasheq((author . "mordae@anilinux.org")
          (authors . ("mordae@anilinux.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "systemd" "doc/systemd@systemd/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/systemd.txt")
                 (test-failure-log . "server/built/test-fail/systemd.txt")
                 (test-success-log . #f)))
          (checksum . "fd389e3d6369aeae47004deef9d1d93018db7da4")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base" "scribble-lib" "misc1" "libuuid" "racket-doc"))
          (dependency-names
           .
           ("base" "scribble-lib" "misc1" "libuuid" "racket-doc"))
          (description . "SystemD Support")
          (implies . ())
          (last-checked . 1557339795)
          (last-edit . 1408365472)
          (last-updated . 1502816471)
          (modules
           .
           ((lib "systemd/id.scrbl")
            (lib "systemd/id.rkt")
            (lib "systemd/daemon.rkt")
            (lib "systemd/systemd.scrbl")
            (lib "systemd/daemon.scrbl")
            (lib "systemd/main.rkt")))
          (name . "systemd")
          (nix-sha256
           .
           "143fzaflys8l48vdq1phqziyy9si57gn2p57ddrkiw1wglfgf7ph")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:mordae@anilinux.org . #t)
                   (linux . #t)
                   (ring:1 . #t)))
          (source . "github://github.com/mordae/racket-systemd/master")
          (tags . ("linux"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "fd389e3d6369aeae47004deef9d1d93018db7da4")
                          (source
                           .
                           "github://github.com/mordae/racket-systemd/master")
                          (source_url
                           .
                           "http://github.com/mordae/racket-systemd/tree/master")))))))
 ("t-test"
  .
  #hasheq((author . "clements@racket-lang.org")
          (authors . ("clements@racket-lang.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "t-test" "doc/t-test@t-test/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/t-test.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/t-test.txt")))
          (checksum . "eb5cc28868689324f6c27722d2516715570cab97")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "math-lib"
            "typed-racket-lib"
            "racket-doc"
            "rackunit-typed"
            "scribble-lib"
            "math-doc"))
          (dependency-names
           .
           ("base"
            "math-lib"
            "typed-racket-lib"
            "racket-doc"
            "rackunit-typed"
            "scribble-lib"
            "math-doc"))
          (description
           .
           "Simple implementations of Welch's and Student's t-tests")
          (implies . ())
          (last-checked . 1557339795)
          (last-edit . 1546212337)
          (last-updated . 1552766748)
          (modules . ((lib "t-test/t-test.scrbl") (lib "t-test/main.rkt")))
          (name . "t-test")
          (nix-sha256
           .
           "16m6vd80nw8ab5jzhw98zhynh6wjz8788p39npslq1w3a4cai4d2")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:clements@racket-lang.org . #t)
                   (ring:2 . #t)
                   (statistics . #t)
                   (t-test . #t)))
          (source . "https://github.com/jbclements/t-test.git")
          (tags . ("statistics" "t-test"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "eb5cc28868689324f6c27722d2516715570cab97")
                          (source
                           .
                           "https://github.com/jbclements/t-test.git")
                          (source_url
                           .
                           "https://github.com/jbclements/t-test.git")))))))
 ("table-panel"
  .
  #hasheq((author . "spdegabrielle@gmail.com m.douglas.williams@gmail.com")
          (authors
           .
           ("spdegabrielle@gmail.com" "m.douglas.williams@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "table-panel"
                    "doc/table-panel@table-panel/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/table-panel.txt")
                 (test-failure-log . "server/built/test-fail/table-panel.txt")
                 (test-success-log . #f)))
          (checksum . "e5994d6b0e11bae486679af2bcfa38442f0e5093")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "rackunit-lib"
            "gui"
            "srfi-lib"
            "scribble-lib"
            "racket-doc"))
          (dependency-names
           .
           ("base"
            "rackunit-lib"
            "gui"
            "srfi-lib"
            "scribble-lib"
            "racket-doc"))
          (description
           .
           "This library provides a table-panel% class that specializes the panel% class to provide a panel that aligns its children to a grid. A simple demonstration program is also provided. Copyright(c) 2008, M. Douglas Williams.")
          (implies . ())
          (last-checked . 1557339795)
          (last-edit . 1419869682)
          (last-updated . 1535392739)
          (modules
           .
           ((lib "table-panel/scribblings/table-panel.scrbl")
            (lib "table-panel/test-table-panel.rkt")
            (lib "table-panel/main.rkt")))
          (name . "table-panel")
          (nix-sha256
           .
           "0yfp3nq9lj2qlwh1v5kgnilyhg0szhsxdq7rk86s3rh9z0gxbl89")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:m.douglas.williams@gmail.com . #t)
                   (author:spdegabrielle@gmail.com . #t)
                   (gui . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/spdegabrielle/table-panel")
          (tags . ("gui"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "e5994d6b0e11bae486679af2bcfa38442f0e5093")
                          (source
                           .
                           "git://github.com/spdegabrielle/table-panel")
                          (source_url
                           .
                           "http://github.com/spdegabrielle/table-panel/tree/master")))))))
 ("tabular"
  .
  #hasheq((author . "tonygarnockjones@gmail.com")
          (authors . ("tonygarnockjones@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/tabular.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/tabular.txt")))
          (checksum . "5b1e3687dd27660f8bd3ecc10d52e8d57b150ff4")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "rackunit-lib" "data-lib" "htdp-lib"))
          (dependency-names . ("base" "rackunit-lib" "data-lib" "htdp-lib"))
          (description . "Experimental tabular data package")
          (implies . ())
          (last-checked . 1557339795)
          (last-edit . 1471901163)
          (last-updated . 1506083466)
          (modules . ((lib "tabular/google.rkt") (lib "tabular/main.rkt")))
          (name . "tabular")
          (nix-sha256
           .
           "1rv5dji9dxyswycjrm1bdc2jf3ms03ai976nv1pvin4dch8rf872")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:no-tag: . #t)
                   (author:tonygarnockjones@gmail.com . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/tonyg/racket-tabular")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "5b1e3687dd27660f8bd3ecc10d52e8d57b150ff4")
                          (source . "git://github.com/tonyg/racket-tabular")
                          (source_url
                           .
                           "http://github.com/tonyg/racket-tabular/tree/master")))))))
 ("taglib"
  .
  #hasheq((author . "asumu@ccs.neu.edu")
          (authors . ("asumu@ccs.neu.edu"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "taglib" "doc/taglib@taglib/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/taglib.txt")
                 (test-failure-log . "server/built/test-fail/taglib.txt")
                 (test-success-log . #f)))
          (checksum . "69b0494bac4cf2d4c6b99701c7b586bdb827a0a3")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "scribble-lib" "racket-doc"))
          (dependency-names . ("base" "scribble-lib" "racket-doc"))
          (description
           .
           "Bindings to the taglib C library, which provides simple access to audio file metadata.")
          (implies . ())
          (last-checked . 1557339795)
          (last-edit . 1352400326)
          (last-updated . 1502816472)
          (modules
           .
           ((lib "taglib/scribblings/taglib.scrbl")
            (lib "taglib/main.rkt")
            (lib "taglib/taglib.rkt")))
          (name . "taglib")
          (nix-sha256
           .
           "07ag4ppy757qzr81yavwh9lfakqas3429kwiqaminv56fhbmz603")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (audio . #t)
                   (author:asumu@ccs.neu.edu . #t)
                   (ring:1 . #t)))
          (source . "github://github.com/takikawa/taglib-racket/master")
          (tags . ("audio"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "69b0494bac4cf2d4c6b99701c7b586bdb827a0a3")
                          (source
                           .
                           "github://github.com/takikawa/taglib-racket/master")
                          (source_url
                           .
                           "http://github.com/takikawa/taglib-racket/tree/master")))))))
 ("talk-typer"
  .
  #hasheq((author . "spencer@florence.io")
          (authors . ("spencer@florence.io"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/talk-typer.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/talk-typer.txt")))
          (checksum . "24c5779e4d5b9548f96ac66d7c638c9bef0e7428")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "gui-lib" "data-lib" "drracket-plugin-lib"))
          (dependency-names
           .
           ("base" "gui-lib" "data-lib" "drracket-plugin-lib"))
          (description . "A tool to make live coding during talks easier")
          (implies . ())
          (last-checked . 1557339795)
          (last-edit . 1473866914)
          (last-updated . 1502816472)
          (modules
           .
           ((lib "talk-typer/private/text.rkt") (lib "talk-typer/tool.rkt")))
          (name . "talk-typer")
          (nix-sha256
           .
           "10gdsnarwvs7q1pbf6swhl36dl513i065q542qvafycf8n934l73")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:no-tag: . #t)
                   (author:spencer@florence.io . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/florence/talk-typer")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "24c5779e4d5b9548f96ac66d7c638c9bef0e7428")
                          (source . "git://github.com/florence/talk-typer")
                          (source_url
                           .
                           "http://github.com/florence/talk-typer/tree/master")))))))
 ("tandem"
  .
  #hasheq((author . "mordae@anilinux.org")
          (authors . ("mordae@anilinux.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "tandem" "doc/tandem@tandem/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/tandem.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/tandem.txt")))
          (checksum . "fa6bae480f6f4a3ae411ca5c3bad7ae5f8d106ac")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "scribble-lib" "misc1" "racket-doc"))
          (dependency-names . ("base" "scribble-lib" "misc1" "racket-doc"))
          (description . "Cooperative Communication Framework for Racket")
          (implies . ())
          (last-checked . 1557339795)
          (last-edit . 1384508973)
          (last-updated . 1502816472)
          (modules . ((lib "tandem/tandem.scrbl") (lib "tandem/main.rkt")))
          (name . "tandem")
          (nix-sha256
           .
           "06vdfigil34svqjh3qqq4cniws3818nin1r6ym5l8wqxw7xac4xk")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (:no-tag: . #t)
                   (author:mordae@anilinux.org . #t)
                   (ring:1 . #t)))
          (source . "github://github.com/mordae/racket-tandem/master")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "fa6bae480f6f4a3ae411ca5c3bad7ae5f8d106ac")
                          (source
                           .
                           "github://github.com/mordae/racket-tandem/master")
                          (source_url
                           .
                           "http://github.com/mordae/racket-tandem/tree/master")))))))
 ("taskibble"
  .
  #hasheq((author . "hi@that.world")
          (authors . ("hi@that.world"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/taskibble.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/taskibble.txt")))
          (checksum . "c333907e04ab23b0a79cd7c763f691dd743897ac")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("scheme-lib"
            "base"
            "compatibility-lib"
            "planet-lib"
            "net-lib"
            "at-exp-lib"
            "draw-lib"
            "syntax-color-lib"
            "sandbox-lib"
            "typed-racket-lib"
            "datalog"
            "rackunit-lib"))
          (dependency-names
           .
           ("scheme-lib"
            "base"
            "compatibility-lib"
            "planet-lib"
            "net-lib"
            "at-exp-lib"
            "draw-lib"
            "syntax-color-lib"
            "sandbox-lib"
            "typed-racket-lib"
            "datalog"
            "rackunit-lib"))
          (description . "Fork of Scribble for task management")
          (implies . ())
          (last-checked . 1557339795)
          (last-edit . 1487386684)
          (last-updated . 1502816473)
          (modules
           .
           ((lib "taskibble/base-render.rkt")
            (lib "taskibble/decode-struct.rkt")
            (lib "taskibble/private/indirect-renderer.rkt")
            (lib "taskibble/core.rkt")
            (lib "taskibble/private/literal-anchor.rkt")
            (lib "taskibble/base.rkt")
            (lib "taskibble/private/render-utils.rkt")
            (lib "taskibble/html-properties.rkt")
            (lib "taskibble/extract.rkt")
            (lib "taskibble/private/qsloc.rkt")
            (lib "taskibble/private/run-pdflatex.rkt")
            (lib "taskibble/tag.rkt")
            (lib "taskibble/doclang.rkt")
            (lib "taskibble/private/provide-structs.rkt")
            (lib "taskibble/render-struct.rkt")
            (lib "taskibble/basic.rkt")
            (lib "taskibble/doc/main.rkt")
            (lib "taskibble/private/on-demand.rkt")
            (lib "taskibble/struct.rkt")
            (lib "taskibble/doclang2.rkt")
            (lib "taskibble/latex-properties.rkt")
            (lib "taskibble/private/defaults.rkt")
            (lib "taskibble/pdf-render.rkt")
            (lib "taskibble/xref.rkt")
            (lib "taskibble/search.rkt")
            (lib "taskibble/render.rkt")
            (lib "taskibble/doc/lang/reader.rkt")
            (lib "taskibble/run.rkt")
            (lib "taskibble/private/serialize.rkt")
            (lib "taskibble/decode.rkt")
            (lib "taskibble/config.rkt")
            (lib "taskibble/latex-prefix.rkt")
            (lib "taskibble/latex-render.rkt")))
          (name . "taskibble")
          (nix-sha256
           .
           "1qrdf3yn0lxkqd50kq5brnn1f8p6s0hf7h4zbiq5cfgbhrpsyj56")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:no-tag: . #t)
                   (author:hi@that.world . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/sorpaas/taskibble")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "c333907e04ab23b0a79cd7c763f691dd743897ac")
                          (source . "git://github.com/sorpaas/taskibble")
                          (source_url
                           .
                           "http://github.com/sorpaas/taskibble/tree/master")))))))
 ("tasks"
  .
  #hasheq((author . "mordae@anilinux.org")
          (authors . ("mordae@anilinux.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "tasks" "doc/tasks@tasks/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/tasks.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/tasks.txt")))
          (checksum . "2d2e1e096fec61da49531a86421d7e7eb4a9f3df")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "scribble-lib" "racket-doc"))
          (dependency-names . ("base" "scribble-lib" "racket-doc"))
          (description . "Sugar for sync.")
          (implies . ())
          (last-checked . 1557339795)
          (last-edit . 1385477023)
          (last-updated . 1502816473)
          (modules . ((lib "tasks/main.rkt") (lib "tasks/tasks.scrbl")))
          (name . "tasks")
          (nix-sha256
           .
           "16k9b21nazyag1jqsdix4jwx89kczkl1vr5x7cvi6jv5a9k4w626")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (:no-tag: . #t)
                   (author:mordae@anilinux.org . #t)
                   (ring:1 . #t)))
          (source . "github://github.com/mordae/racket-tasks/master")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "2d2e1e096fec61da49531a86421d7e7eb4a9f3df")
                          (source
                           .
                           "github://github.com/mordae/racket-tasks/master")
                          (source_url
                           .
                           "http://github.com/mordae/racket-tasks/tree/master")))))))
 ("teachpacks"
  .
  #hasheq((author . "tyynetyyne@gmail.com")
          (authors . ("tyynetyyne@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . "server/built/deps/teachpacks.txt")
                 (docs
                  .
                  (("main"
                    "racket_turtle"
                    "doc/racket_turtle@teachpacks/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/teachpacks.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/teachpacks.txt")))
          (checksum . "f82605dc2de7e6b6267fe2b2e6a6481a1ab33a35")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("gui-lib"
            "base"
            "htdp-lib"
            "plot-gui-lib"
            "plot-lib"
            "scribble-lib"
            "scribble-doc"
            "htdp-doc"
            "racket-doc"))
          (dependency-names
           .
           ("gui-lib"
            "base"
            "htdp-lib"
            "plot-gui-lib"
            "plot-lib"
            "scribble-lib"
            "scribble-doc"
            "htdp-doc"
            "racket-doc"))
          (description . "Racket Turtle for drawing turtle-graphics.")
          (implies . ())
          (last-checked . 1557339795)
          (last-edit . 1440666321)
          (last-updated . 1508317933)
          (modules
           .
           ((lib "teachpacks/plot2D.rkt")
            (lib "teachpacks/display-read.rkt")
            (lib "teachpacks/game-helper.rkt")
            (lib "teachpacks/math-utils.rkt")
            (lib "teachpacks/racket-turtle.rkt")
            (lib "teachpacks/doc/racket_turtle_examples.scrbl")
            (lib "teachpacks/doc/racket_turtle.scrbl")
            (lib "teachpacks/doc/racket_turtle_commands.scrbl")
            (lib "teachpacks/doc/racket_turtle_examples_recursion.scrbl")
            (lib "teachpacks/display-read-touch.rkt")
            (lib "teachpacks/big-crunch.rkt")
            (lib "teachpacks/plot2.rkt")
            (lib "teachpacks/doc/racket_turtle_functionality.scrbl")
            (lib "teachpacks/doc/racket_turtle_functions.scrbl")
            (lib "teachpacks/plot.rkt")))
          (name . "teachpacks")
          (nix-sha256
           .
           "1l84b60j0lcfaz7y0hp30s84c4sigfqfwq6y11draxcjn9qxpbw0")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-dep-fail: . #t)
                   (:build-success: . #t)
                   (:docs: . #t)
                   (:no-tag: . #t)
                   (author:tyynetyyne@gmail.com . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/tyynetyyne/teachpacks.git")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "f82605dc2de7e6b6267fe2b2e6a6481a1ab33a35")
                          (source
                           .
                           "git://github.com/tyynetyyne/teachpacks.git")
                          (source_url
                           .
                           "http://github.com/tyynetyyne/teachpacks.git/tree/master")))))))
 ("temp-c"
  .
  #hasheq((author . "jay.mccarthy@gmail.com")
          (authors . ("jay.mccarthy@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/temp-c.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/temp-c.txt")))
          (checksum . "43f7f2141c81a301aa229ef4105f458eee070653")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("temp-c-lib" "temp-c-doc"))
          (dependency-names . ("temp-c-lib" "temp-c-doc"))
          (description . "temporal contracts")
          (implies . ("temp-c-lib" "temp-c-doc"))
          (last-checked . 1557339795)
          (last-edit . 1438288079)
          (last-updated . 1502816474)
          (modules . ())
          (name . "temp-c")
          (nix-sha256
           .
           "0wfidwr35dwx2hp22q0gp2cw5phnb72mczm68jbhfwzfxiiryd1b")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:jay.mccarthy@gmail.com . #t)
                   (contracts . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/jeapostrophe/temp-c/?path=temp-c")
          (tags . ("contracts"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "43f7f2141c81a301aa229ef4105f458eee070653")
                          (source
                           .
                           "git://github.com/jeapostrophe/temp-c/?path=temp-c")
                          (source_url
                           .
                           "git://github.com/jeapostrophe/temp-c/?path=temp-c")))
                 ("6.2"
                  .
                  #hasheq((checksum
                           .
                           "9f098dddde7f217879070816090c1e8e74d49432")
                          (source
                           .
                           "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")
                          (source_url
                           .
                           "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")))))))
 ("temp-c-doc"
  .
  #hasheq((author . "jay.mccarthy@gmail.com")
          (authors . ("jay.mccarthy@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "temp-c" "doc/temp-c@temp-c-doc/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/temp-c-doc.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/temp-c-doc.txt")))
          (checksum . "43f7f2141c81a301aa229ef4105f458eee070653")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           (("base" #:version "6.2.900.4")
            "temp-c-lib"
            "scribble-lib"
            "automata"
            "racket-doc"))
          (dependency-names
           .
           ("base" "temp-c-lib" "scribble-lib" "automata" "racket-doc"))
          (description . "temporal contracts")
          (implies . ())
          (last-checked . 1557339795)
          (last-edit . 1504535626)
          (last-updated . 1502816475)
          (modules . ((lib "temp-c/scribblings/temp-c.scrbl")))
          (name . "temp-c-doc")
          (nix-sha256
           .
           "0wfidwr35dwx2hp22q0gp2cw5phnb72mczm68jbhfwzfxiiryd1b")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:jay.mccarthy@gmail.com . #t)
                   (contracts . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/jeapostrophe/temp-c?path=temp-c-doc")
          (tags . ("contracts"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "43f7f2141c81a301aa229ef4105f458eee070653")
                          (source
                           .
                           "git://github.com/jeapostrophe/temp-c?path=temp-c-doc")
                          (source_url
                           .
                           "http://github.com/jeapostrophe/temp-c/tree/master?path=temp-c-doc")))
                 ("6.2"
                  .
                  #hasheq((checksum
                           .
                           "9f098dddde7f217879070816090c1e8e74d49432")
                          (source
                           .
                           "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")
                          (source_url
                           .
                           "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")))))))
 ("temp-c-lib"
  .
  #hasheq((author . "jay.mccarthy@gmail.com")
          (authors . ("jay.mccarthy@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/temp-c-lib.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/temp-c-lib.txt")))
          (checksum . "43f7f2141c81a301aa229ef4105f458eee070653")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . (("base" #:version "6.2.900.4") "automata-lib"))
          (dependency-names . ("base" "automata-lib"))
          (description . "temporal contracts")
          (implies . ())
          (last-checked . 1557339795)
          (last-edit . 1504535573)
          (last-updated . 1502816475)
          (modules . ((lib "temp-c/dsl.rkt") (lib "temp-c/monitor.rkt")))
          (name . "temp-c-lib")
          (nix-sha256
           .
           "0wfidwr35dwx2hp22q0gp2cw5phnb72mczm68jbhfwzfxiiryd1b")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:jay.mccarthy@gmail.com . #t)
                   (contracts . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/jeapostrophe/temp-c?path=temp-c-lib")
          (tags . ("contracts"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "43f7f2141c81a301aa229ef4105f458eee070653")
                          (source
                           .
                           "git://github.com/jeapostrophe/temp-c?path=temp-c-lib")
                          (source_url
                           .
                           "http://github.com/jeapostrophe/temp-c/tree/master?path=temp-c-lib")))
                 ("6.2"
                  .
                  #hasheq((checksum
                           .
                           "9f098dddde7f217879070816090c1e8e74d49432")
                          (source
                           .
                           "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")
                          (source_url
                           .
                           "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")))))))
 ("temp-c-test"
  .
  #hasheq((author . "jay.mccarthy@gmail.com")
          (authors . ("jay.mccarthy@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/temp-c-test.txt")
                 (test-failure-log . "server/built/test-fail/temp-c-test.txt")
                 (test-success-log . #f)))
          (checksum . "43f7f2141c81a301aa229ef4105f458eee070653")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           (("base" #:version "6.2.900.4")
            "temp-c-lib"
            "eli-tester"
            "errortrace-lib"
            "racket-test"))
          (dependency-names
           .
           ("base" "temp-c-lib" "eli-tester" "errortrace-lib" "racket-test"))
          (description . "temporal contracts")
          (implies . ())
          (last-checked . 1557339796)
          (last-edit . 1504535435)
          (last-updated . 1502816475)
          (modules
           .
           ((lib "automata/tests/ttt-bench-com.rkt")
            (lib "automata/tests/ex-matthias-b.rkt")
            (lib "automata/tests/ex-dsl.rkt")
            (lib "automata/tests/dr-err-help.rkt")
            (lib "automata/tests/bench.rkt")
            (lib "automata/tests/ex-matthias-a.rkt")
            (lib "automata/tests/bench-affine.rkt")
            (lib "automata/tests/test-temporal-no-call-after-return.rkt")
            (lib "automata/tests/dr-err.rkt")
            (lib "automata/tests/ex-memclass.rkt")
            (lib "automata/tests/ex-matthias-ctc.rkt")
            (lib "automata/tests/ttt-bench.rkt")
            (lib "automata/tests/ttt.rkt")
            (lib "automata/tests/ex-con.rkt")
            (lib "automata/tests/ex-mem.rkt")
            (lib "automata/tests/ttt-bench-raw.rkt")
            (lib "automata/tests/ex-lock.rkt")
            (lib "automata/tests/ex-matthias.rkt")
            (lib "automata/tests/ttt-players.rkt")
            (lib "automata/tests/ttt-bench-ctc.rkt")
            (lib "automata/tests/test-temporal-no-call-after-return2.rkt")
            (lib "automata/tests/id-bench.rkt")
            (lib "automata/tests/future-ctc.rkt")))
          (name . "temp-c-test")
          (nix-sha256
           .
           "0wfidwr35dwx2hp22q0gp2cw5phnb72mczm68jbhfwzfxiiryd1b")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:jay.mccarthy@gmail.com . #t)
                   (contracts . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/jeapostrophe/temp-c?path=temp-c-test")
          (tags . ("contracts"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "43f7f2141c81a301aa229ef4105f458eee070653")
                          (source
                           .
                           "git://github.com/jeapostrophe/temp-c?path=temp-c-test")
                          (source_url
                           .
                           "http://github.com/jeapostrophe/temp-c/tree/master?path=temp-c-test")))
                 ("6.2"
                  .
                  #hasheq((checksum
                           .
                           "9f098dddde7f217879070816090c1e8e74d49432")
                          (source
                           .
                           "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")
                          (source_url
                           .
                           "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")))))))
 ("termination"
  .
  #hasheq((author . "pcn@cs.umd.edu")
          (authors . ("pcn@cs.umd.edu"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . "server/built/fail/termination.txt")
                 (min-failure-log . #f)
                 (success-log . #f)
                 (test-failure-log . #f)
                 (test-success-log . #f)))
          (checksum . "af205abedbf336e8baaa60e1e47b5acade320643")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("profile-lib"
            "r5rs-lib"
            "rackunit-lib"
            "base"
            "typed-racket-lib"
            "typed-racket-more"
            "bnf"
            "set-extras"
            "unreachable"
            "traces"))
          (dependency-names
           .
           ("profile-lib"
            "r5rs-lib"
            "rackunit-lib"
            "base"
            "typed-racket-lib"
            "typed-racket-more"
            "bnf"
            "set-extras"
            "unreachable"
            "traces"))
          (description . "Dynamic enforcement of size-change termination")
          (implies . ())
          (last-checked . 1557339796)
          (last-edit . 1522411969)
          (last-updated . 1542413987)
          (modules
           .
           ((lib "termination/benchmarks/krauss/permute.rkt")
            (lib "termination/benchmarks/takr.rkt")
            (lib "termination/benchmarks/deriv.rkt")
            (lib "termination/benchmarks/fo-sc/ex-4.rkt")
            (lib "termination/benchmarks/manolios/fig-6.rkt")
            (lib
             "termination/whole-program-experiment/size-change-graph-whole-program.rkt")
            (lib "termination/benchmarks/maze2.rkt")
            (lib "termination/size-change-graph.rkt")
            (lib "termination/benchmarks/cpstak.rkt")
            (lib "termination/benchmarks/takl.rkt")
            (lib "termination/benchmarks/ray.rkt")
            (lib "termination/benchmarks/scheme-i2.rkt")
            (lib "termination/flow-analysis/analyze.rkt")
            (lib "termination/benchmarks/fo-sc/ex-3.rkt")
            (lib "termination/benchmarks/vazou/gcd.rkt")
            (lib "termination/benchmarks/main.rkt")
            (lib "termination/micro-benchmarks.rkt")
            (lib "termination/unsafe.rkt")
            (lib "termination/benchmarks/krauss/bar.rkt")
            (lib "termination/benchmarks/fo-sc/ex-2.rkt")
            (lib
             "termination/whole-program-experiment/whole-program-test.rkt")
            (lib "termination/syntax-utils.rkt")
            (lib "termination/benchmarks/peval.rkt")
            (lib "termination/benchmarks/nestedloop.rkt")
            (lib "termination/benchmarks/kanren.rkt")
            (lib "termination/benchmarks/earley.rkt")
            (lib "termination/benchmarks/nucleic3.rkt")
            (lib "termination/benchmarks/puzzle.rkt")
            (lib "termination/benchmarks/nboyer.rkt")
            (lib "termination/benchmarks/vazou/map.rkt")
            (lib "termination/benchmarks/ho-sc/ack.rkt")
            (lib "termination/benchmarks/collatz.rkt")
            (lib "termination/flow-analysis/lang.rkt")
            (lib "termination/flow-analysis/main.rkt")
            (lib "termination/benchmarks/fo-sc/ex-5.rkt")
            (lib "termination/flattened-parameter.rkt")
            (lib "termination/benchmarks/krauss/f.rkt")
            (lib "termination/benchmarks/scheme.rkt")
            (lib "termination/benchmarks/vazou/merge.rkt")
            (lib "termination/benchmarks/destruct.rkt")
            (lib "termination/benchmarks/manolios/fig-2.rkt")
            (lib "termination/benchmarks/vazou/range.rkt")
            (lib "termination/benchmarks/sum.rkt")
            (lib "termination/benchmarks/test-unsafe.rkt")
            (lib "termination/apply-with-termination.rkt")
            (lib "termination/benchmarks/ctak.rkt")
            (lib "termination/benchmarks/fo-sc/ex-6.rkt")
            (lib "termination/benchmarks/ho-sc/fold.rkt")
            (lib "termination/benchmarks/sboyer.rkt")
            (lib "termination/benchmarks/traverse.rkt")
            (lib "termination/benchmarks/sort1.rkt")
            (lib "termination/benchmarks/triangle.rkt")
            (lib "termination/benchmarks/fft.rkt")
            (lib "termination/main.rkt")
            (lib "termination/benchmarks/nucleic2.rkt")
            (lib "termination/benchmarks/collatz-q.rkt")
            (lib "termination/benchmarks/manolios/fig-7.rkt")
            (lib "termination/runtime-utils.rkt")
            (lib "termination/benchmarks/scheme-c2.rkt")
            (lib "termination/benchmarks/fo-sc/ex-1.rkt")
            (lib "termination/benchmarks/div.rkt")
            (lib "termination/benchmarks/krauss/poly.rkt")
            (lib "termination/flow-analysis/utils.rkt")
            (lib "termination/benchmarks/graphs.rkt")
            (lib "termination/test.rkt")
            (lib "termination/benchmarks/dynamic.rkt")
            (lib "termination/benchmarks/dderiv.rkt")
            (lib "termination/benchmarks/takr2.rkt")
            (lib "termination/benchmarks/vazou/tfact.rkt")
            (lib "termination/benchmarks/paraffins.rkt")
            (lib "termination/benchmarks/lattice2.rkt")
            (lib "termination/benchmarks/krauss/foo.rkt")
            (lib "termination/benchmarks/ho-sc/fg.rkt")
            (lib "termination/flow-analysis/parse.rkt")
            (lib "termination/benchmarks/tak.rkt")
            (lib "termination/benchmarks/conform.rkt")
            (lib "termination/benchmarks/manolios/abs.rkt")
            (lib "termination/unsafe-apply-with-termination.rkt")
            (lib "termination/benchmarks/nqueens.rkt")
            (lib "termination/benchmarks/ackermann.rkt")
            (lib "termination/benchmarks/mazefun.rkt")
            (lib "termination/benchmarks/loop.rkt")
            (lib "termination/benchmarks/nfa.rkt")))
          (name . "termination")
          (nix-sha256
           .
           "0zgxdmxwss45fkg592wi7s3slxv78gnsa7a2c1x4y4bpky1zjvhf")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-fail: . #t)
                   (author:pcn@cs.umd.edu . #t)
                   (contracts . #t)
                   (ring:2 . #t)
                   (termination . #t)))
          (source
           .
           "https://github.com/philnguyen/termination.git?path=termination")
          (tags . ("contracts" "termination"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "af205abedbf336e8baaa60e1e47b5acade320643")
                          (source
                           .
                           "https://github.com/philnguyen/termination.git?path=termination")
                          (source_url
                           .
                           "https://github.com/philnguyen/termination.git?path=termination")))))))
 ("termios"
  .
  #hasheq((author . "bprzygoda@gmail.com")
          (authors . ("bprzygoda@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . "server/built/min-fail/termios.txt")
                 (success-log . "server/built/install/termios.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/termios.txt")))
          (checksum . "b6632c54c587577c0cce86e62a72e9b09c38342e")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base"))
          (dependency-names . ("base"))
          (description . "FFI bindings to POSIX terminal interface functions")
          (implies . ())
          (last-checked . 1557339796)
          (last-edit . 1424731185)
          (last-updated . 1502816475)
          (modules
           .
           ((lib "termios/defines.rkt")
            (lib "termios/termios.rkt")
            (lib "termios/main.rkt")
            (lib "termios/private/install.rkt")))
          (name . "termios")
          (nix-sha256
           .
           "0i7lyqxclkkk6g1300w6k8gp2fs4h41wybrqxz4mv60l80k2id15")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:bprzygoda@gmail.com . #t)
                   (ffi . #t)
                   (linux . #t)
                   (posix . #t)
                   (ring:1 . #t)
                   (termios . #t)))
          (source . "git://github.com/BartAdv/racket-termios")
          (tags . ("ffi" "linux" "posix" "termios"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "b6632c54c587577c0cce86e62a72e9b09c38342e")
                          (source . "git://github.com/BartAdv/racket-termios")
                          (source_url
                           .
                           "http://github.com/BartAdv/racket-termios/tree/master")))))))
 ("tesira"
  .
  #hasheq((author . "mordae@anilinux.org")
          (authors . ("mordae@anilinux.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "tesira" "doc/tesira@tesira/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/tesira.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/tesira.txt")))
          (checksum . "47ae8cd92ad3b2610a3f95db9ba3e16db6b24d48")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "scribble-lib"
            "typed-racket-lib"
            "parser-tools-lib"
            "typed-racket-more"
            "mordae"
            "racket-doc"
            "typed-racket-doc"
            "typed-racket-lib"))
          (dependency-names
           .
           ("base"
            "scribble-lib"
            "typed-racket-lib"
            "parser-tools-lib"
            "typed-racket-more"
            "mordae"
            "racket-doc"
            "typed-racket-doc"
            "typed-racket-lib"))
          (description . "Biamp Tesira Client Library")
          (implies . ())
          (last-checked . 1557339796)
          (last-edit . 1439289370)
          (last-updated . 1502816476)
          (modules
           .
           ((lib "tesira/main.rkt")
            (lib "tesira/telnet.rkt")
            (lib "tesira/util.scrbl")
            (lib "tesira/encoding.rkt")
            (lib "tesira/mixer.rkt")
            (lib "tesira/private/encoding.rkt")
            (lib "tesira/util.rkt")
            (lib "tesira/tesira.scrbl")))
          (name . "tesira")
          (nix-sha256
           .
           "189crg5zndkmf48yqlic3z0afpvab3j7ii50n541k1fx1iyr7gp5")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:mordae@anilinux.org . #t)
                   (net . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/mordae/racket-tesira")
          (tags . ("net"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "47ae8cd92ad3b2610a3f95db9ba3e16db6b24d48")
                          (source . "git://github.com/mordae/racket-tesira")
                          (source_url
                           .
                           "http://github.com/mordae/racket-tesira/tree/master")))))))
 ("tesseract"
  .
  #hasheq((author . "lasfter@gmail.com")
          (authors . ("lasfter@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/tesseract.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/tesseract.txt")))
          (checksum . "ef1da2619bf4814ff75a840b8a3e42eaf10cfb01")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base"))
          (dependency-names . ("base"))
          (description . "Bindings for Google's Tesseract-OCR")
          (implies . ())
          (last-checked . 1557339796)
          (last-edit . 1429408989)
          (last-updated . 1502816476)
          (modules . ((lib "main/tesseracket.rkt")))
          (name . "tesseract")
          (nix-sha256
           .
           "0haadixjsb6nrq4pkw0pp4agimvpimgfn9dk0a5178ilh7l6mb2a")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:lasfter@gmail.com . #t)
                   (google . #t)
                   (ocr . #t)
                   (ring:1 . #t)
                   (tesseract . #t)))
          (source . "git://github.com/lasfter/tesseracket")
          (tags . ("google" "ocr" "tesseract"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "ef1da2619bf4814ff75a840b8a3e42eaf10cfb01")
                          (source . "git://github.com/lasfter/tesseracket")
                          (source_url
                           .
                           "http://github.com/lasfter/tesseracket/tree/master")))))))
 ("test-more"
  .
  #hasheq((author . "david.storrs@gmail.com")
          (authors . ("david.storrs@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/test-more.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/test-more.txt")))
          (checksum . "659c90a27ffd575bf95b0eb60ec594a3e7420f16")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base"))
          (dependency-names . ("base"))
          (description
           .
           "A Racket version of the Perl Test::More module.  As compared to default Racket tests, this:  Shows results for all tests, not just failing ones.  Returns values from tests to simplify conditional tests. Much more flexible approximation testing.  Shorter test names.  Docs are in the README.md")
          (implies . ())
          (last-checked . 1557339796)
          (last-edit . 1536777754)
          (last-updated . 1556752476)
          (modules
           .
           ((lib "test-more/tests/test-main.rkt") (lib "test-more/main.rkt")))
          (name . "test-more")
          (nix-sha256
           .
           "0rf3hcnifv4zrwc3jm41bk1d3j1bnvhpmq9i7424wnscdj7agiir")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:david.storrs@gmail.com . #t)
                   (ring:2 . #t)
                   (test . #t)
                   (testing . #t)))
          (source . "https://github.com/dstorrs/racket-test-more.git")
          (tags . ("test" "testing"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "659c90a27ffd575bf95b0eb60ec594a3e7420f16")
                          (source
                           .
                           "https://github.com/dstorrs/racket-test-more.git")
                          (source_url
                           .
                           "https://github.com/dstorrs/racket-test-more.git")))))))
 ("testing-util-lib"
  .
  #hash((author . "florence@racket-lang.org")
        (checksum . "21c04c13231c4dd86cef3baa86c0617cdbdde656")
        (dependencies . ("base"))
        (dependency-names . ("base"))
        (description . "florence@racket-lang.org")
        (modules . ())
        (name . "testing-util-lib")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/testing-util-lib.zip")
        (tags . ())))
 ("tetris"
  .
  #hasheq((author . "mosceo@gmail.com")
          (authors . ("mosceo@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . "server/built/fail/tetris.txt")
                 (min-failure-log . #f)
                 (success-log . #f)
                 (test-failure-log . #f)
                 (test-success-log . #f)))
          (checksum . "fd8ea2d3b2d9374d2a4a88b6e01382f0eba9cbcb")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ())
          (dependency-names . ())
          (description . "A colorful version of tetris.")
          (implies . ())
          (last-checked . 1557339796)
          (last-edit . 1511608932)
          (last-updated . 1511611579)
          (modules . ((lib "tetris/tetris.rkt") (lib "tetris/unittest.rkt")))
          (name . "tetris")
          (nix-sha256
           .
           "1wb1sknlzyxwnz1cii8qm1ijycszisn0qyyw7hvxl6k01ck6904d")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-fail: . #t)
                   (author:mosceo@gmail.com . #t)
                   (games . #t)
                   (ring:2 . #t)
                   (tetris . #t)))
          (source . "https://github.com/mosceo/tetris.git")
          (tags . ("games" "tetris"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "fd8ea2d3b2d9374d2a4a88b6e01382f0eba9cbcb")
                          (source . "https://github.com/mosceo/tetris.git")
                          (source_url
                           .
                           "https://github.com/mosceo/tetris.git")))))))
 ("tex-table"
  .
  #hash((author . "robby@racket-lang.org")
        (checksum . "15efd44bf0e78f4c40af98a8008a5bc090e6f637")
        (dependencies . ("base"))
        (dependency-names . ("base"))
        (description . "robby@racket-lang.org")
        (modules . ())
        (name . "tex-table")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/tex-table.zip")
        (tags . ())))
 ("texmath"
  .
  #hasheq((author . "dedbox@gmail.com")
          (authors . ("dedbox@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . "server/built/deps/texmath.txt")
                 (docs
                  .
                  (("main" "texmath" "doc/texmath@texmath/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/texmath.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/texmath.txt")))
          (checksum . "d9f2ab220b7e5216068dd37c634194e7ea11c6d9")
          (checksum-error . #f)
          (conflicts . ())
          (date-added . 1553038358)
          (dependencies
           .
           ("base"
            "functional-lib"
            "megaparsack-lib"
            "scribble-lib"
            "at-exp-lib"
            "scribble-lib"
            "rackunit-lib"))
          (dependency-names
           .
           ("base"
            "functional-lib"
            "megaparsack-lib"
            "scribble-lib"
            "at-exp-lib"
            "scribble-lib"
            "rackunit-lib"))
          (description . "Pseudo-(La)TeX mathematical notation for Scribble")
          (implies . ())
          (last-checked . 1557339796)
          (last-edit . 1553038358)
          (last-updated . 1553019003)
          (modules
           .
           ((lib "texmath/scribblings/sample.scrbl")
            (lib "texmath/scribblings/main.scrbl")
            (lib "texmath/main.rkt")
            (lib "texmath/inferrule.rkt")))
          (name . "texmath")
          (nix-sha256
           .
           "126krk5f14am3m7xhvmp2nncla8if7ww47s2i5lm9b1q92jfc7s6")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-dep-fail: . #t)
                   (:build-success: . #t)
                   (:docs: . #t)
                   (LaTeX . #t)
                   (Math . #t)
                   (author:dedbox@gmail.com . #t)
                   (ring:2 . #t)
                   (scribble . #t)))
          (source . "https://github.com/dedbox/racket-texmath.git")
          (tags . ("LaTeX" "Math" "scribble"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "d9f2ab220b7e5216068dd37c634194e7ea11c6d9")
                          (source
                           .
                           "https://github.com/dedbox/racket-texmath.git")
                          (source_url
                           .
                           "https://github.com/dedbox/racket-texmath.git")))))))
 ("text-table"
  .
  #hasheq((author . "laurent.orseau@gmail.com")
          (authors . ("laurent.orseau@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "text-table"
                    "doc/text-table@text-table/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/text-table.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/text-table.txt")))
          (checksum . "a8648fdca9d93a69a6701238dc69d3240692309b")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "scribble-lib" "racket-doc" "rackunit-lib"))
          (dependency-names
           .
           ("base" "scribble-lib" "racket-doc" "rackunit-lib"))
          (description
           .
           "A simple package to display text tables with utf-8 frames.")
          (implies . ())
          (last-checked . 1557339796)
          (last-edit . 1506204348)
          (last-updated . 1507829468)
          (modules
           .
           ((lib "text-table/scribblings/text-table.scrbl")
            (lib "text-table/main.rkt")))
          (name . "text-table")
          (nix-sha256
           .
           "1aclpma2cdznby5pvdjgjhg9523dap6p61313na46fbq05anrn3r")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:laurent.orseau@gmail.com . #t)
                   (format . #t)
                   (ring:1 . #t)
                   (tabular . #t)
                   (text . #t)))
          (source . "git://github.com/Metaxal/text-table")
          (tags . ("format" "tabular" "text"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "a8648fdca9d93a69a6701238dc69d3240692309b")
                          (source . "git://github.com/Metaxal/text-table")
                          (source_url
                           .
                           "http://github.com/Metaxal/text-table/tree/master")))))))
 ("the-unicoder"
  .
  #hasheq((author . "willghatch@gmail.com")
          (authors . ("willghatch@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "the-unicoder"
                    "doc/the-unicoder@the-unicoder/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/the-unicoder.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/the-unicoder.txt")))
          (checksum . "4eb4c074c6411a059a0bbaba5c1486c3b335d369")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "gui-lib"
            ("unix-socket-lib" #:version "1.1")
            "tex-table"
            "basedir"
            "scribble-lib"
            "racket-doc"))
          (dependency-names
           .
           ("base"
            "gui-lib"
            "unix-socket-lib"
            "tex-table"
            "basedir"
            "scribble-lib"
            "racket-doc"))
          (description . "Universal unicode input system")
          (implies . ())
          (last-checked . 1557339796)
          (last-edit . 1459550147)
          (last-updated . 1541780195)
          (modules
           .
           ((lib "the-unicoder/parse-unicode-data.rkt")
            (lib "the-unicoder/prompter.rkt")
            (lib "the-unicoder/server.rkt")
            (lib "the-unicoder/client.rkt")
            (lib "the-unicoder/the-unicoder.scrbl")
            (lib "the-unicoder/config.rkt")
            (lib "the-unicoder/user-tables.rkt")
            (lib "the-unicoder/main.rkt")
            (lib "the-unicoder/misc-tables.rkt")))
          (name . "the-unicoder")
          (nix-sha256
           .
           "01l9b9ljph9fbwqw06cr1ml1yx66v7zssj16wz69d9zspjdgqry8")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:willghatch@gmail.com . #t)
                   (ring:1 . #t)
                   (unicode . #t)))
          (source . "git://github.com/willghatch/the-unicoder.git")
          (tags . ("unicode"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "4eb4c074c6411a059a0bbaba5c1486c3b335d369")
                          (source
                           .
                           "git://github.com/willghatch/the-unicoder.git")
                          (source_url
                           .
                           "http://github.com/willghatch/the-unicoder.git/tree/master")))))))
 ("this-and-that"
  .
  #hasheq((author . "jensaxel@soegaard.net")
          (authors . ("jensaxel@soegaard.net"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("none" "chipmunk")))
                 (failure-log . "server/built/fail/this-and-that.txt")
                 (min-failure-log . #f)
                 (success-log . #f)
                 (test-failure-log . #f)
                 (test-success-log . #f)))
          (checksum . "bb2afd0834f6fdbc3cb8a9867e2a307063f38b80")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ())
          (dependency-names . ())
          (description . "Small useful bits and pieces.")
          (implies . ())
          (last-checked . 1557339797)
          (last-edit . 1362234825)
          (last-updated . 1438374991)
          (modules
           .
           ((lib "this-and-that/readtable/test-clojure-maps.rkt")
            (lib "this-and-that/tmp/racket-chipmunk/1d-tree.rkt")
            (lib "this-and-that/tmp/racket-chipmunk/2d-tree.rkt")
            (lib "this-and-that/racket-poppler/racket-poppler.rkt")
            (lib "this-and-that/snoopy/kd-tree.rkt")
            (lib "this-and-that/split-between.rkt")
            (lib "this-and-that/brevity/terse-hash.rkt")
            (lib "this-and-that/readtable/pratt.rkt")
            (lib "this-and-that/readtable/test-parser.rkt")
            (lib "this-and-that/readtable/lang/reader.rkt")
            (lib "this-and-that/memoize/test-memo.rkt")
            (lib "this-and-that/readtable/mv-parser.rkt")
            (lib "this-and-that/tmp/chipmunk/chipmunk-ffi.rkt")
            (lib "this-and-that/snoopy/1d-range-searching.rkt")
            (lib "this-and-that/spell-checker/spell-checker.rkt")
            (lib "this-and-that/heart-beat/in-heart-beat.rkt")
            (lib "this-and-that/readtable/test2.rkt")
            (lib "this-and-that/readtable/test.rkt")
            (lib "this-and-that/readtable/lang/read-and-read-syntax.rkt")
            (lib "this-and-that/snoopy/1d-tree.rkt")
            (lib "this-and-that/lexer/lexer.rkt")
            (lib "this-and-that/readtable/lang/converter.rkt")
            (lib "this-and-that/readtable/lang/parse-reader-spec.rkt")
            (lib "this-and-that/readers/read-number.rkt")
            (lib "this-and-that/memoize/memo.rkt")
            (lib "this-and-that/readtable/lang/pratt-parser.rkt")
            (lib "this-and-that/snoopy/racket-chipmunk.rkt")
            (lib "this-and-that/tmp/racket-chipmunk/racket-chipmunk.rkt")
            (lib "this-and-that/tmp/chipmunk/main.rkt")
            (lib "this-and-that/declare/declare.rkt")
            (lib "this-and-that/updatable-struct/updatable-struct.rkt")
            (lib "this-and-that/heart-beat/in-effect.rkt")
            (lib "this-and-that/tmp/chipmunk/chipmunk.scrbl")
            (lib "this-and-that/brevity/brevity.rkt")
            (lib "this-and-that/tmp/chipmunk/chipmunk.rkt")
            (lib "this-and-that/snoopy/2d-tree.rkt")))
          (name . "this-and-that")
          (nix-sha256
           .
           "0ayby3jg1mdyd3fklmjsbhhfnckjlahwrc3n4gxffcbkn57zpycv")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-fail: . #t)
                   (:docs-error: . #t)
                   (:no-tag: . #t)
                   (author:jensaxel@soegaard.net . #t)
                   (ring:1 . #t)))
          (source . "github://github.com/soegaard/this-and-that/master")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "bb2afd0834f6fdbc3cb8a9867e2a307063f38b80")
                          (source
                           .
                           "github://github.com/soegaard/this-and-that/master")
                          (source_url
                           .
                           "http://github.com/soegaard/this-and-that/tree/master")))))))
 ("thread-utils"
  .
  #hasheq((author . "kalimehtar@mail.ru")
          (authors . ("kalimehtar@mail.ru"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "thread-utils"
                    "doc/thread-utils@thread-utils/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/thread-utils.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/thread-utils.txt")))
          (checksum . "656771f8f0fac7dcfa3ac76c8826801671e98187")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "scribble-lib" "racket-doc" "rackunit-lib"))
          (dependency-names
           .
           ("base" "scribble-lib" "racket-doc" "rackunit-lib"))
          (description . "Error-safe infinite loop and until-timeout")
          (implies . ())
          (last-checked . 1557339797)
          (last-edit . 1518799224)
          (last-updated . 1523550514)
          (modules
           .
           ((lib "thread-utils/scribblings/thread-utils.scrbl")
            (lib "thread-utils/main.rkt")))
          (name . "thread-utils")
          (nix-sha256
           .
           "1sjzd2lvv3r65v7p82avyri1qng9vk3ab59jp1cc0hczgyj0yxmz")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:kalimehtar@mail.ru . #t)
                   (concurrency . #t)
                   (ring:2 . #t)
                   (utilities . #t)))
          (source . "https://github.com/Kalimehtar/thread-utils.git")
          (tags . ("concurrency" "utilities"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "656771f8f0fac7dcfa3ac76c8826801671e98187")
                          (source
                           .
                           "https://github.com/Kalimehtar/thread-utils.git")
                          (source_url
                           .
                           "https://github.com/Kalimehtar/thread-utils.git")))))))
 ("threading"
  .
  #hasheq((author . "lexi.lambda@gmail.com")
          (authors . ("lexi.lambda@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/threading.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/threading.txt")))
          (checksum . "de68f80c91b47b5860709a0bb31b462b8300eb09")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("threading-doc" "threading-lib"))
          (dependency-names . ("threading-doc" "threading-lib"))
          (description . "")
          (implies . ("threading-doc" "threading-lib"))
          (last-checked . 1557339797)
          (last-edit . 1497304010)
          (last-updated . 1502816483)
          (modules . ())
          (name . "threading")
          (nix-sha256
           .
           "03c7z97nn3l6033g99hhjmywrksf3ii4617kxnla8q8jsjpwzf81")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:no-desc: . #t)
                   (:no-tag: . #t)
                   (author:lexi.lambda@gmail.com . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/lexi-lambda/threading?path=threading")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "de68f80c91b47b5860709a0bb31b462b8300eb09")
                          (source
                           .
                           "git://github.com/lexi-lambda/threading?path=threading")
                          (source_url
                           .
                           "http://github.com/lexi-lambda/threading/tree/master?path=threading")))
                 ("5.3.2"
                  .
                  #hasheq((checksum
                           .
                           "abed5715993ec2e53d201d55c3c9b57be30874fc")
                          (source
                           .
                           "git://github.com/lexi-lambda/threading#compatibility-5.3.2-to-6.1")
                          (source_url
                           .
                           "http://github.com/lexi-lambda/threading/tree/master#compatibility-5.3.2-to-6.1")))
                 ("5.3.3"
                  .
                  #hasheq((checksum
                           .
                           "abed5715993ec2e53d201d55c3c9b57be30874fc")
                          (source
                           .
                           "git://github.com/lexi-lambda/threading#compatibility-5.3.2-to-6.1")
                          (source_url
                           .
                           "http://github.com/lexi-lambda/threading/tree/master#compatibility-5.3.2-to-6.1")))
                 ("5.3.4"
                  .
                  #hasheq((checksum
                           .
                           "abed5715993ec2e53d201d55c3c9b57be30874fc")
                          (source
                           .
                           "git://github.com/lexi-lambda/threading#compatibility-5.3.2-to-6.1")
                          (source_url
                           .
                           "http://github.com/lexi-lambda/threading/tree/master#compatibility-5.3.2-to-6.1")))
                 ("5.3.5"
                  .
                  #hasheq((checksum
                           .
                           "abed5715993ec2e53d201d55c3c9b57be30874fc")
                          (source
                           .
                           "git://github.com/lexi-lambda/threading#compatibility-5.3.2-to-6.1")
                          (source_url
                           .
                           "http://github.com/lexi-lambda/threading/tree/master#compatibility-5.3.2-to-6.1")))
                 ("5.3.6"
                  .
                  #hasheq((checksum
                           .
                           "abed5715993ec2e53d201d55c3c9b57be30874fc")
                          (source
                           .
                           "git://github.com/lexi-lambda/threading#compatibility-5.3.2-to-6.1")
                          (source_url
                           .
                           "http://github.com/lexi-lambda/threading/tree/master#compatibility-5.3.2-to-6.1")))
                 ("5.92"
                  .
                  #hasheq((checksum
                           .
                           "abed5715993ec2e53d201d55c3c9b57be30874fc")
                          (source
                           .
                           "git://github.com/lexi-lambda/threading#compatibility-5.3.2-to-6.1")
                          (source_url
                           .
                           "http://github.com/lexi-lambda/threading/tree/master#compatibility-5.3.2-to-6.1")))
                 ("5.93"
                  .
                  #hasheq((checksum
                           .
                           "abed5715993ec2e53d201d55c3c9b57be30874fc")
                          (source
                           .
                           "git://github.com/lexi-lambda/threading#compatibility-5.3.2-to-6.1")
                          (source_url
                           .
                           "http://github.com/lexi-lambda/threading/tree/master#compatibility-5.3.2-to-6.1")))
                 ("6.0"
                  .
                  #hasheq((checksum
                           .
                           "abed5715993ec2e53d201d55c3c9b57be30874fc")
                          (source
                           .
                           "git://github.com/lexi-lambda/threading#compatibility-5.3.2-to-6.1")
                          (source_url
                           .
                           "http://github.com/lexi-lambda/threading/tree/master#compatibility-5.3.2-to-6.1")))
                 ("6.0.1"
                  .
                  #hasheq((checksum
                           .
                           "abed5715993ec2e53d201d55c3c9b57be30874fc")
                          (source
                           .
                           "git://github.com/lexi-lambda/threading#compatibility-5.3.2-to-6.1")
                          (source_url
                           .
                           "http://github.com/lexi-lambda/threading/tree/master#compatibility-5.3.2-to-6.1")))
                 ("6.1"
                  .
                  #hasheq((checksum
                           .
                           "abed5715993ec2e53d201d55c3c9b57be30874fc")
                          (source
                           .
                           "git://github.com/lexi-lambda/threading#compatibility-5.3.2-to-6.1")
                          (source_url
                           .
                           "http://github.com/lexi-lambda/threading/tree/master#compatibility-5.3.2-to-6.1")))
                 ("6.1.1"
                  .
                  #hasheq((checksum
                           .
                           "abed5715993ec2e53d201d55c3c9b57be30874fc")
                          (source
                           .
                           "git://github.com/lexi-lambda/threading#compatibility-5.3.2-to-6.1")
                          (source_url
                           .
                           "http://github.com/lexi-lambda/threading/tree/master#compatibility-5.3.2-to-6.1")))
                 ("6.2"
                  .
                  #hasheq((checksum
                           .
                           "dee85e8d3cffaed85eb27bed8a8c61fc1eea8395")
                          (source
                           .
                           "git://github.com/lexi-lambda/threading?path=threading#compatibility-6.2")
                          (source_url
                           .
                           "http://github.com/lexi-lambda/threading/tree/master?path=threading#compatibility-6.2")))
                 ("6.2.1"
                  .
                  #hasheq((checksum
                           .
                           "dee85e8d3cffaed85eb27bed8a8c61fc1eea8395")
                          (source
                           .
                           "git://github.com/lexi-lambda/threading?path=threading#compatibility-6.2")
                          (source_url
                           .
                           "http://github.com/lexi-lambda/threading/tree/master?path=threading#compatibility-6.2")))))))
 ("threading-doc"
  .
  #hasheq((author . "lexi.lambda@gmail.com")
          (authors . ("lexi.lambda@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "threading"
                    "doc/threading@threading-doc/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/threading-doc.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/threading-doc.txt")))
          (checksum . "de68f80c91b47b5860709a0bb31b462b8300eb09")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base" "racket-doc" "scribble-lib" "threading-lib"))
          (dependency-names
           .
           ("base" "racket-doc" "scribble-lib" "threading-lib"))
          (description . "documentation (no implementation) for “threading”")
          (implies . ())
          (last-checked . 1557339798)
          (last-edit . 1497305804)
          (last-updated . 1502816484)
          (modules . ((lib "scribblings/threading.scrbl")))
          (name . "threading-doc")
          (nix-sha256
           .
           "03c7z97nn3l6033g99hhjmywrksf3ii4617kxnla8q8jsjpwzf81")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (:no-tag: . #t)
                   (author:lexi.lambda@gmail.com . #t)
                   (ring:1 . #t)))
          (source
           .
           "git://github.com/lexi-lambda/threading?path=threading-doc")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "de68f80c91b47b5860709a0bb31b462b8300eb09")
                          (source
                           .
                           "git://github.com/lexi-lambda/threading?path=threading-doc")
                          (source_url
                           .
                           "http://github.com/lexi-lambda/threading/tree/master?path=threading-doc")))
                 ("6.2"
                  .
                  #hasheq((checksum
                           .
                           "dee85e8d3cffaed85eb27bed8a8c61fc1eea8395")
                          (source
                           .
                           "git://github.com/lexi-lambda/threading?path=threading-doc#compatibility-6.2")
                          (source_url
                           .
                           "http://github.com/lexi-lambda/threading/tree/master?path=threading-doc#compatibility-6.2")))
                 ("6.2.1"
                  .
                  #hasheq((checksum
                           .
                           "dee85e8d3cffaed85eb27bed8a8c61fc1eea8395")
                          (source
                           .
                           "git://github.com/lexi-lambda/threading?path=threading-doc#compatibility-6.2")
                          (source_url
                           .
                           "http://github.com/lexi-lambda/threading/tree/master?path=threading-doc#compatibility-6.2")))))))
 ("threading-lib"
  .
  #hasheq((author . "lexi.lambda@gmail.com")
          (authors . ("lexi.lambda@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/threading-lib.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/threading-lib.txt")))
          (checksum . "de68f80c91b47b5860709a0bb31b462b8300eb09")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . (("base" #:version "6.3")))
          (dependency-names . ("base"))
          (description . "implementation (no documentation) for “threading”")
          (implies . ())
          (last-checked . 1557339798)
          (last-edit . 1497305814)
          (last-updated . 1502816484)
          (modules . ((lib "threading/main.rkt")))
          (name . "threading-lib")
          (nix-sha256
           .
           "03c7z97nn3l6033g99hhjmywrksf3ii4617kxnla8q8jsjpwzf81")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:no-tag: . #t)
                   (author:lexi.lambda@gmail.com . #t)
                   (ring:1 . #t)))
          (source
           .
           "git://github.com/lexi-lambda/threading?path=threading-lib")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "de68f80c91b47b5860709a0bb31b462b8300eb09")
                          (source
                           .
                           "git://github.com/lexi-lambda/threading?path=threading-lib")
                          (source_url
                           .
                           "http://github.com/lexi-lambda/threading/tree/master?path=threading-lib")))
                 ("6.2"
                  .
                  #hasheq((checksum
                           .
                           "dee85e8d3cffaed85eb27bed8a8c61fc1eea8395")
                          (source
                           .
                           "git://github.com/lexi-lambda/threading?path=threading-lib#compatibility-6.2")
                          (source_url
                           .
                           "http://github.com/lexi-lambda/threading/tree/master?path=threading-lib#compatibility-6.2")))
                 ("6.2.1"
                  .
                  #hasheq((checksum
                           .
                           "dee85e8d3cffaed85eb27bed8a8c61fc1eea8395")
                          (source
                           .
                           "git://github.com/lexi-lambda/threading?path=threading-lib#compatibility-6.2")
                          (source_url
                           .
                           "http://github.com/lexi-lambda/threading/tree/master?path=threading-lib#compatibility-6.2")))))))
 ("thrift"
  .
  #hasheq((author . "johnstonskj@gmail.com")
          (authors . ("johnstonskj@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "thrift" "doc/thrift@thrift/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/thrift.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/thrift.txt")))
          (checksum . "bbed34e6af97167ec5e9327c7c6ad739e331e793")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "http"
            "unix-socket-lib"
            "rackunit-lib"
            "racket-index"
            "scribble-lib"
            "racket-doc"
            "sandbox-lib"
            "cover-coveralls"))
          (dependency-names
           .
           ("base"
            "http"
            "unix-socket-lib"
            "rackunit-lib"
            "racket-index"
            "scribble-lib"
            "racket-doc"
            "sandbox-lib"
            "cover-coveralls"))
          (description . "Support for the Apache Thrift messaging framework")
          (implies . ())
          (last-checked . 1557339798)
          (last-edit . 1544044370)
          (last-updated . 1544047852)
          (modules
           .
           ((lib "thrift/private/literals.rkt")
            (lib "thrift/scribblings/processor.scrbl")
            (lib "thrift/exn-common.rkt")
            (lib "thrift/protocol/sexpression.rkt")
            (lib "thrift/tests/private.rkt")
            (lib "thrift/scribblings/idl.scrbl")
            (lib "thrift/scribblings/transport.scrbl")
            (lib "thrift/common.rkt")
            (lib "thrift/private/protocol.rkt")
            (lib "thrift/transport/file.rkt")
            (lib "thrift/private/struct-enumeration.rkt")
            (lib "thrift/idl/language.rkt")
            (lib "thrift/idl/generator.rkt")
            (lib "thrift/tests/test-doc-complete.rkt")
            (lib "thrift/tests/transport.rkt")
            (lib "thrift/scribblings/thrift.scrbl")
            (lib "thrift/protocol/json.rkt")
            (lib "thrift/transport/buffered.rkt")
            (lib "thrift/tests/idl.rkt")
            (lib "thrift/private/logging.rkt")
            (lib "thrift/main.rkt")
            (lib "thrift/private/enumeration.rkt")
            (lib "thrift/tests/protocol.rkt")
            (lib "thrift/private/bytedebug.rkt")
            (lib "thrift/protocol/decoding.rkt")
            (lib "thrift/protocol/multiplexed.rkt")
            (lib "thrift/transport/exn-common.rkt")
            (lib "thrift/protocol/encoding.rkt")
            (lib "thrift/scribblings/architecture.scrbl")
            (lib "thrift/private/transport.rkt")
            (lib "thrift/protocol/binary.rkt")
            (lib "thrift/transport/common.rkt")
            (lib "thrift/transport/console.rkt")
            (lib "thrift/processor/common.rkt")
            (lib "thrift/tests/processor.rkt")
            (lib "thrift/transport/serializer.rkt")
            (lib "thrift/transport/socket.rkt")
            (lib "thrift/protocol/exn-common.rkt")
            (lib "thrift/protocol/common.rkt")
            (lib "thrift/idl/common.rkt")
            (lib "thrift/scribblings/protocol.scrbl")
            (lib "thrift/transport/memory.rkt")
            (lib "thrift/protocol/compact.rkt")))
          (name . "thrift")
          (nix-sha256
           .
           "140kb7zkd08l1iiwkd3jqaslmxsxhs4sd29mhihas7j4bl5yik97")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:johnstonskj@gmail.com . #t)
                   (data . #t)
                   (ml . #t)
                   (ring:2 . #t)
                   (rpc . #t)))
          (source . "https://github.com/johnstonskj/racket-thrift.git")
          (tags . ("data" "ml" "rpc"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "bbed34e6af97167ec5e9327c7c6ad739e331e793")
                          (source
                           .
                           "https://github.com/johnstonskj/racket-thrift.git")
                          (source_url
                           .
                           "https://github.com/johnstonskj/racket-thrift.git")))))))
 ("tjson"
  .
  #hasheq((author . "ray.racine@gmail.com")
          (authors . ("ray.racine@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "tjson" "doc/tjson@tjson/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/tjson.txt")
                 (test-failure-log . "server/built/test-fail/tjson.txt")
                 (test-success-log . #f)))
          (checksum . "b8471434b51592d3fcab819bb203380c8ede5de3")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "typed-racket-more"
            "typed-racket-lib"
            "scribble-lib"
            "sandbox-lib"
            "racket-doc"
            "rackunit-lib"
            "typed-racket-lib"
            "typed-racket-more"
            "typed-racket-doc"))
          (dependency-names
           .
           ("base"
            "typed-racket-more"
            "typed-racket-lib"
            "scribble-lib"
            "sandbox-lib"
            "racket-doc"
            "rackunit-lib"
            "typed-racket-lib"
            "typed-racket-more"
            "typed-racket-doc"))
          (description . "Basic Typed Racket Json Parser and Emitter")
          (implies . ())
          (last-checked . 1557339798)
          (last-edit . 1537637941)
          (last-updated . 1543675526)
          (modules
           .
           ((lib "tjson/scribblings/tjson.scrbl") (lib "tjson/main.rkt")))
          (name . "tjson")
          (nix-sha256
           .
           "114qb5lvmbwng7hk986g3jwf45dmx9wgbnshg1qbw3kz1gbd01n2")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:ray.racine@gmail.com . #t)
                   (emitter . #t)
                   (json . #t)
                   (parser . #t)
                   (ring:2 . #t)
                   (searialization . #t)
                   (typed . #t)))
          (source . "https://gitlab.com/RayRacine/tjson.git")
          (tags . ("emitter" "json" "parser" "searialization" "typed"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "b8471434b51592d3fcab819bb203380c8ede5de3")
                          (source . "https://gitlab.com/RayRacine/tjson.git")
                          (source_url
                           .
                           "https://gitlab.com/RayRacine/tjson.git")))))))
 ("tmemoize"
  .
  #hasheq((author . "soura.jagat@gmail.com")
          (authors . ("soura.jagat@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "tmemoize" "doc/tmemoize@tmemoize/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/tmemoize.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/tmemoize.txt")))
          (checksum . "aa72d69cd3ee176cfeda159ac077d55b626caa23")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "typed-racket-lib"
            "rackunit-lib"
            "scribble-lib"
            "racket-doc"
            "typed-racket-doc"))
          (dependency-names
           .
           ("base"
            "typed-racket-lib"
            "rackunit-lib"
            "scribble-lib"
            "racket-doc"
            "typed-racket-doc"))
          (description . "A basic memoize utility for typed racket")
          (implies . ())
          (last-checked . 1557339799)
          (last-edit . 1485781465)
          (last-updated . 1502816484)
          (modules
           .
           ((lib "tmemoize/scribblings/tmemoize.scrbl")
            (lib "tmemoize/main.rkt")))
          (name . "tmemoize")
          (nix-sha256
           .
           "0dxsnc1fgqahwx5kqrv2k97cwd707vs1pncnsqb0da61gd8xpqqz")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:soura.jagat@gmail.com . #t)
                   (ring:1 . #t)
                   (typed-racket . #t)))
          (source . "https://github.com/souravdatta/tmemoize.git")
          (tags . ("typed-racket"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "aa72d69cd3ee176cfeda159ac077d55b626caa23")
                          (source
                           .
                           "https://github.com/souravdatta/tmemoize.git")
                          (source_url
                           .
                           "https://github.com/souravdatta/tmemoize.git")))))))
 ("todo-list"
  .
  #hasheq((author . "david@davidchristiansen.dk")
          (authors . ("david@davidchristiansen.dk"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "todo-list" "doc/todo-list@todo-list/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/todo-list.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/todo-list.txt")))
          (checksum . "589e9c8f58f4684eae64d3254bdbad0b1bcaae39")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "data-lib"
            "drracket-plugin-lib"
            "gui-lib"
            "scribble-lib"
            "racket-doc"))
          (dependency-names
           .
           ("base"
            "data-lib"
            "drracket-plugin-lib"
            "gui-lib"
            "scribble-lib"
            "racket-doc"))
          (description
           .
           "A list of goals + interactive commands for solving them in DrRacket")
          (implies . ())
          (last-checked . 1557339799)
          (last-edit . 1511371944)
          (last-updated . 1538333957)
          (modules
           .
           ((lib "todo-list/test-command.rkt")
            (lib "todo-list/private/expansion-handler.rkt")
            (lib "todo-list/tool.rkt")
            (lib "todo-list/main.rkt")
            (lib "todo-list/private/syntax-info.rkt")
            (lib "todo-list/scribblings/todo-list.scrbl")
            (lib "todo-list/demo.rkt")
            (lib "todo-list/private/goal-info.rkt")))
          (name . "todo-list")
          (nix-sha256
           .
           "00p2nnnpp8hjmsnwpvh8hv36g8vx84ksx1aihk9sabfgkf5jrw7k")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:david@davidchristiansen.dk . #t)
                   (drracket . #t)
                   (editing . #t)
                   (ring:2 . #t)))
          (source . "https://github.com/david-christiansen/todo-list.git")
          (tags . ("drracket" "editing"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "589e9c8f58f4684eae64d3254bdbad0b1bcaae39")
                          (source
                           .
                           "https://github.com/david-christiansen/todo-list.git")
                          (source_url
                           .
                           "https://github.com/david-christiansen/todo-list.git")))))))
 ("tomato-timer"
  .
  #hasheq((author . "types@ccs.neu.edu")
          (authors . ("types@ccs.neu.edu"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "tomato-timer"
                    "doc/tomato-timer@tomato-timer/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/tomato-timer.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/tomato-timer.txt")))
          (checksum . "962031301cef61b1759fc6eb9fbea50498b17b5e")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "racket-doc" "rackunit-lib" "scribble-lib"))
          (dependency-names
           .
           ("base" "racket-doc" "rackunit-lib" "scribble-lib"))
          (description . "Command-line timer")
          (implies . ())
          (last-checked . 1557339799)
          (last-edit . 1487903930)
          (last-updated . 1552756020)
          (modules
           .
           ((lib "tomato-timer/docs/tomato-timer.scrbl")
            (lib "tomato-timer/main.rkt")))
          (name . "tomato-timer")
          (nix-sha256
           .
           "1bqxglhaghvdfgr7gn8gq5gdm00spl0kz9fwsyj3kglvv1myb789")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:types@ccs.neu.edu . #t)
                   (ring:1 . #t)
                   (utility . #t)))
          (source . "git://github.com/bennn/tomato-timer")
          (tags . ("utility"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "962031301cef61b1759fc6eb9fbea50498b17b5e")
                          (source . "git://github.com/bennn/tomato-timer")
                          (source_url
                           .
                           "http://github.com/bennn/tomato-timer/tree/master")))))))
 ("towers"
  .
  #hasheq((author . "laurent.orseau@gmail.com")
          (authors . ("laurent.orseau@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/towers.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/towers.txt")))
          (checksum . "e1224228b5b5b514c7063b44810c1bdd5f8d5d14")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "gui-lib" "net-lib" "bazaar" "towers-lib"))
          (dependency-names
           .
           ("base" "gui-lib" "net-lib" "bazaar" "towers-lib"))
          (description . "The GUI client interface for the Towers game.")
          (implies . ())
          (last-checked . 1557339799)
          (last-edit . 1516442594)
          (last-updated . 1516476620)
          (modules
           .
           ((lib "towers/replay.rkt")
            (lib "towers/main.rkt")
            (lib "towers/frame.rkt")
            (lib "towers/controller.rkt")
            (lib "towers/player-alpha-beta-gui.rkt")
            (lib "towers/base.rkt")
            (lib "towers/gui.rkt")
            (lib "towers/graphics.rkt")))
          (name . "towers")
          (nix-sha256
           .
           "1ip1sr61415zfg3pkcdx18zsxaknb1r8hna90f2ypcvag3wvbp0w")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (app . #t)
                   (author:laurent.orseau@gmail.com . #t)
                   (games . #t)
                   (gui . #t)
                   (ring:1 . #t)))
          (source . "https://github.com/Metaxal/towers.git?path=towers")
          (tags . ("app" "games" "gui"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "e1224228b5b5b514c7063b44810c1bdd5f8d5d14")
                          (source
                           .
                           "https://github.com/Metaxal/towers.git?path=towers")
                          (source_url
                           .
                           "https://github.com/Metaxal/towers.git?path=towers")))))))
 ("towers-lib"
  .
  #hasheq((author . "laurent.orseau@gmail.com")
          (authors . ("laurent.orseau@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/towers-lib.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/towers-lib.txt")))
          (checksum . "e1224228b5b5b514c7063b44810c1bdd5f8d5d14")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "compatibility-lib" "bazaar"))
          (dependency-names . ("base" "compatibility-lib" "bazaar"))
          (description . "Library for the Towers game.")
          (implies . ())
          (last-checked . 1557339799)
          (last-edit . 1516442614)
          (last-updated . 1516476621)
          (modules
           .
           ((lib "towers-lib/player-ai-base.rkt")
            (lib "towers-lib/player-alpha-beta.rkt")
            (lib "towers-lib/connection.rkt")
            (lib "towers-lib/player.rkt")
            (lib "towers-lib/game.rkt")
            (lib "towers-lib/file.rkt")
            (lib "towers-lib/base.rkt")
            (lib "towers-lib/rules.rkt")
            (lib "towers-lib/player-ai1.rkt")
            (lib "towers-lib/player-base.rkt")))
          (name . "towers-lib")
          (nix-sha256
           .
           "1ip1sr61415zfg3pkcdx18zsxaknb1r8hna90f2ypcvag3wvbp0w")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:laurent.orseau@gmail.com . #t)
                   (games . #t)
                   (ring:1 . #t)))
          (source . "https://github.com/Metaxal/towers.git?path=towers-lib")
          (tags . ("games"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "e1224228b5b5b514c7063b44810c1bdd5f8d5d14")
                          (source
                           .
                           "https://github.com/Metaxal/towers.git?path=towers-lib")
                          (source_url
                           .
                           "https://github.com/Metaxal/towers.git?path=towers-lib")))))))
 ("towers-server"
  .
  #hasheq((author . "laurent.orseau@gmail.com")
          (authors . ("laurent.orseau@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/towers-server.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/towers-server.txt")))
          (checksum . "e1224228b5b5b514c7063b44810c1bdd5f8d5d14")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base" "db-lib" "web-server-lib" "bazaar" "towers-lib"))
          (dependency-names
           .
           ("base" "db-lib" "web-server-lib" "bazaar" "towers-lib"))
          (description
           .
           "The server for the Towers game. Not required to play.")
          (implies . ())
          (last-checked . 1557339799)
          (last-edit . 1516442631)
          (last-updated . 1516476622)
          (modules
           .
           ((lib "towers-server/main.rkt")
            (lib "towers-server/server.rkt")
            (lib "towers-server/db.rkt")))
          (name . "towers-server")
          (nix-sha256
           .
           "1ip1sr61415zfg3pkcdx18zsxaknb1r8hna90f2ypcvag3wvbp0w")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:laurent.orseau@gmail.com . #t)
                   (games . #t)
                   (ring:1 . #t)
                   (server . #t)))
          (source
           .
           "https://github.com/Metaxal/towers.git?path=towers-server")
          (tags . ("games" "server"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "e1224228b5b5b514c7063b44810c1bdd5f8d5d14")
                          (source
                           .
                           "https://github.com/Metaxal/towers.git?path=towers-server")
                          (source_url
                           .
                           "https://github.com/Metaxal/towers.git?path=towers-server")))))))
 ("tr-immutable"
  .
  #hasheq((author . "georges.duperon@gmail.com")
          (authors . ("georges.duperon@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "tr-immutable"
                    "doc/tr-immutable@tr-immutable/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/tr-immutable.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/tr-immutable.txt")))
          (checksum . "da227b14ca63e1e1a9aaae07e94471202aaaaf26")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "rackunit-lib"
            "typed-racket-lib"
            "typed-racket-more"
            "typed-map-lib"
            "scribble-lib"
            "racket-doc"
            "typed-racket-doc"))
          (dependency-names
           .
           ("base"
            "rackunit-lib"
            "typed-racket-lib"
            "typed-racket-more"
            "typed-map-lib"
            "scribble-lib"
            "racket-doc"
            "typed-racket-doc"))
          (description
           .
           "Helpers to write macros using typed/racket at phase 1. Heavily unstable, WIP, experimental, not documented yet. I'm currently dogfooding this to work out the best strategy.")
          (implies . ())
          (last-checked . 1557339799)
          (last-edit . 1501078978)
          (last-updated . 1556194057)
          (modules
           .
           ((lib "tr-immutable/typed-syntax/typed-pairof-predicate.rkt")
            (lib "tr-immutable/typed-syntax/typed-syntax-predicate.rkt")
            (lib "tr-immutable/typed-syntax/typed-syntax-convert2.rkt")
            (lib "tr-immutable/typed-syntax.rkt")
            (lib "tr-immutable/typed-syntax/typed-prefab-declarations.rkt")
            (lib "tr-immutable/private/unsafe.rkt")
            (lib "tr-immutable/test/test-vector.rkt")
            (lib "tr-immutable/typed-syntax/typed-syntax-convert.rkt")
            (lib "tr-immutable/scribblings/tr-immutable.scrbl")
            (lib "tr-immutable/main.rkt")))
          (name . "tr-immutable")
          (nix-sha256
           .
           "1mhvbhfbxlpj2j26x8hxgbdq3ir5higji1rv4701b27s7jaimbqh")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:georges.duperon@gmail.com . #t)
                   (experimental . #t)
                   (ring:1 . #t)
                   (syntax . #t)
                   (typed-racket . #t)
                   (unstable . #t)))
          (source . "https://github.com/jsmaniac/tr-immutable.git")
          (tags . ("experimental" "syntax" "typed-racket" "unstable"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "da227b14ca63e1e1a9aaae07e94471202aaaaf26")
                          (source
                           .
                           "https://github.com/jsmaniac/tr-immutable.git")
                          (source_url
                           .
                           "https://github.com/jsmaniac/tr-immutable.git")))))))
 ("trace"
  .
  #hash((author . "mflatt@racket-lang.org robby@racket-lang.org")
        (checksum . "7a796718a63e519c202084db60720f559ae4f31b")
        (dependencies
         .
         ("scheme-lib"
          "base"
          "compatibility-lib"
          "scribble-lib"
          "racket-doc"))
        (dependency-names
         .
         ("scheme-lib"
          "base"
          "compatibility-lib"
          "scribble-lib"
          "racket-doc"))
        (description . "mflatt@racket-lang.org robby@racket-lang.org")
        (modules . ())
        (name . "trace")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/trace.zip")
        (tags . ())))
 ("traces"
  .
  #hasheq((author . "pcn@cs.umd.edu")
          (authors . ("pcn@cs.umd.edu"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . "server/built/deps/traces.txt")
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/traces.txt")
                 (test-failure-log . "server/built/test-fail/traces.txt")
                 (test-success-log . #f)))
          (checksum . "de08fadc1b1d73362c7b6d83f0dd9a4c9dc36743")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base" "typed-racket-lib" "typed-racket-more" "redex-gui-lib"))
          (dependency-names
           .
           ("base" "typed-racket-lib" "typed-racket-more" "redex-gui-lib"))
          (description
           .
           "Tracing utilities for functions and hash-tables, similar to `traces` from `redex`")
          (implies . ())
          (last-checked . 1557339799)
          (last-edit . 1520015300)
          (last-updated . 1553289233)
          (modules
           .
           ((lib "traces/main.rkt")
            (lib "traces/typed.rkt")
            (lib "traces/test.rkt")))
          (name . "traces")
          (nix-sha256
           .
           "08w40qm5sk0dk495lkqg9mb9yx757qsk6yib932449yc7yfqjh9h")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-dep-fail: . #t)
                   (:build-success: . #t)
                   (author:pcn@cs.umd.edu . #t)
                   (debugging . #t)
                   (graph . #t)
                   (ring:2 . #t)
                   (traces . #t)))
          (source . "https://github.com/philnguyen/traces.git?path=traces")
          (tags . ("debugging" "graph" "traces"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "de08fadc1b1d73362c7b6d83f0dd9a4c9dc36743")
                          (source
                           .
                           "https://github.com/philnguyen/traces.git?path=traces")
                          (source_url
                           .
                           "https://github.com/philnguyen/traces.git?path=traces")))))))
 ("treap"
  .
  #hasheq((author . "snwhiteh@uwaterloo.ca")
          (authors . ("snwhiteh@uwaterloo.ca"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . "server/built/deps/treap.txt")
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/treap.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/treap.txt")))
          (checksum . "e703ae7f1bec7a7131eeb2e9e5e6b488c4b45d7e")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ())
          (dependency-names . ())
          (description
           .
           "Balanced binary search trees implemented through treaps")
          (implies . ())
          (last-checked . 1557339799)
          (last-edit . 1476043556)
          (last-updated . 1476043536)
          (modules . ((lib "treap/treap.rkt")))
          (name . "treap")
          (nix-sha256
           .
           "0ai87bhaqclrck7fzabgyxgxd7iywhji1lnpl7v7c2ya0bi0b1mk")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-dep-fail: . #t)
                   (:build-success: . #t)
                   (:no-tag: . #t)
                   (author:snwhiteh@uwaterloo.ca . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/spencereir/treap")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "e703ae7f1bec7a7131eeb2e9e5e6b488c4b45d7e")
                          (source . "git://github.com/spencereir/treap")
                          (source_url
                           .
                           "http://github.com/spencereir/treap/tree/master")))))))
 ("trivial"
  .
  #hasheq((author . "types@ccs.neu.edu")
          (authors . ("types@ccs.neu.edu"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "trivial" "doc/trivial@trivial/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/trivial.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/trivial.txt")))
          (checksum . "8987c7588d64d6cf3455465d125b28d2a5bd948e")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "db-lib"
            "math-lib"
            "plot-lib"
            "rackunit-lib"
            "reprovide-lang"
            "scribble-lib"
            "typed-racket-lib"
            "typed-racket-more"
            "at-exp-lib"
            "racket-doc"
            "rackunit-abbrevs"
            "rackunit-lib"
            "scribble-doc"
            "typed-racket-doc"
            "scribble-lib"))
          (dependency-names
           .
           ("base"
            "db-lib"
            "math-lib"
            "plot-lib"
            "rackunit-lib"
            "reprovide-lang"
            "scribble-lib"
            "typed-racket-lib"
            "typed-racket-more"
            "at-exp-lib"
            "racket-doc"
            "rackunit-abbrevs"
            "rackunit-lib"
            "scribble-doc"
            "typed-racket-doc"
            "scribble-lib"))
          (description . "type-tailored standard library functions")
          (implies . ())
          (last-checked . 1557339799)
          (last-edit . 1481669306)
          (last-updated . 1553033294)
          (modules
           .
           ((lib "trivial/private/db/postgres.rkt")
            (lib "trivial/private/sequence-domain.rkt")
            (lib "trivial/private/define.rkt")
            (lib "trivial/private/db/query.rkt")
            (lib "trivial/integer.rkt")
            (lib "trivial/private/regexp.rkt")
            (lib "trivial/private/string.rkt")
            (lib "trivial/main.rkt")
            (lib "trivial/scribblings/using-tailorings.scrbl")
            (lib "trivial/list.rkt")
            (lib "trivial/private/list.rkt")
            (lib "trivial/private/vector.rkt")
            (lib "trivial/private/format.rkt")
            (lib "trivial/private/db.rkt")
            (lib "trivial/tailoring.rkt")
            (lib "trivial/scribblings/defining-tailorings.scrbl")
            (lib "trivial/no-colon.rkt")
            (lib "trivial/private/tailoring.rkt")
            (lib "trivial/string.rkt")
            (lib "trivial/define.rkt")
            (lib "trivial/format.rkt")
            (lib "trivial/private/test-common.rkt")
            (lib "trivial/vector.rkt")
            (lib "trivial/private/integer.rkt")
            (lib "trivial/private/db/schema.rkt")
            (lib "trivial/private/common.rkt")
            (lib "trivial/function.rkt")
            (lib "trivial/scribblings/trivial.scrbl")
            (lib "trivial/private/raco-command.rkt")
            (lib "trivial/regexp.rkt")
            (lib "trivial/private/function.rkt")))
          (name . "trivial")
          (nix-sha256
           .
           "0ka5cdf8zp8cc5jqyyqlgzwp1n7zpq00f75wy3842bbzagg2kjir")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:types@ccs.neu.edu . #t)
                   (ring:1 . #t)
                   (typed-racket . #t)))
          (source . "https://github.com/bennn/trivial.git?path=trivial")
          (tags . ("typed-racket"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "8987c7588d64d6cf3455465d125b28d2a5bd948e")
                          (source
                           .
                           "https://github.com/bennn/trivial.git?path=trivial")
                          (source_url
                           .
                           "https://github.com/bennn/trivial.git?path=trivial")))
                 ("6.4"
                  .
                  #hasheq((checksum
                           .
                           "04835b533960ef073022c173fad45807c77ecc5f")
                          (source
                           .
                           "https://github.com/bennn/trivial.git#6.4")
                          (source_url
                           .
                           "https://github.com/bennn/trivial.git#6.4")))
                 ("6.5"
                  .
                  #hasheq((checksum
                           .
                           "f4ae715164ad36fd0684d6687151dbe445646445")
                          (source
                           .
                           "https://github.com/bennn/trivial.git#6.7")
                          (source_url
                           .
                           "https://github.com/bennn/trivial.git#6.7")))
                 ("6.6"
                  .
                  #hasheq((checksum
                           .
                           "f4ae715164ad36fd0684d6687151dbe445646445")
                          (source
                           .
                           "https://github.com/bennn/trivial.git#6.7")
                          (source_url
                           .
                           "https://github.com/bennn/trivial.git#6.7")))
                 ("6.7"
                  .
                  #hasheq((checksum
                           .
                           "f4ae715164ad36fd0684d6687151dbe445646445")
                          (source
                           .
                           "https://github.com/bennn/trivial.git#6.7")
                          (source_url
                           .
                           "https://github.com/bennn/trivial.git#6.7")))))))
 ("try"
  .
  #hasheq((author . "ray.racine@gmail.com")
          (authors . ("ray.racine@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "try" "doc/try@try/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/try.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/try.txt")))
          (checksum . "b73f3053ac6930443bbbc6a12cfd947e1b4d9413")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("typed-racket-lib"
            "base"
            "typed-racket-lib"
            "scribble-lib"
            "racket-doc"
            "rackunit-lib"))
          (dependency-names
           .
           ("typed-racket-lib"
            "base"
            "typed-racket-lib"
            "scribble-lib"
            "racket-doc"
            "rackunit-lib"))
          (description
           .
           "A Typed Racket Try datatype and routines for computations that throw exceptions.")
          (implies . ())
          (last-checked . 1557339800)
          (last-edit . 1528402413)
          (last-updated . 1528481712)
          (modules . ((lib "try/main.rkt") (lib "try/scribblings/try.scrbl")))
          (name . "try")
          (nix-sha256
           .
           "1vay9kr20fwj2sdb1xixrl38byp1gg9wcgn94wmvwvzf1v6pyg5a")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:ray.racine@gmail.com . #t)
                   (datatype . #t)
                   (exceptions . #t)
                   (ring:2 . #t)))
          (source . "https://gitlab.com/RayRacine/try.git")
          (tags . ("datatype" "exceptions"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "b73f3053ac6930443bbbc6a12cfd947e1b4d9413")
                          (source . "https://gitlab.com/RayRacine/try.git")
                          (source_url
                           .
                           "https://gitlab.com/RayRacine/try.git")))))))
 ("ts-files"
  .
  #hasheq((author . "stephen@thoughtstem.com")
          (authors . ("stephen@thoughtstem.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . "server/built/fail/ts-files.txt")
                 (min-failure-log . #f)
                 (success-log . #f)
                 (test-failure-log . #f)
                 (test-success-log . #f)))
          (checksum . "3252c883500641609200b698b73a09f0c96a6042")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ())
          (dependency-names . ())
          (description
           .
           "Demo files for ThoughtSTEM.  Probably not useful to anyone outside of ThoughtSTEM.   ")
          (implies . ())
          (last-checked . 1557339800)
          (last-edit . 1538523376)
          (last-updated . 1539638216)
          (modules
           .
           ((lib "ts-files/cpx/tscpx_clap_light.rkt")
            (lib "ts-files/cpx/tscpx_notes.rkt")
            (lib "ts-files/tsrokit/tsrokit_mousebot2.rkt")
            (lib "ts-files/tsrokit/tsrokit_trailerbot4.rkt")
            (lib "ts-files/app/tsapp_asl_app.rkt")
            (lib "ts-files/cpx/tscpx_target_b.rkt")
            (lib "ts-files/cpx/tscpx_servo.rkt")
            (lib "ts-files/mt/tsmt_schematic.rkt")
            (lib "ts-files/tsweb/tsweb_module3_complete.rkt")
            (lib "ts-files/cpx/tscpx_laser_tag_teams.rkt")
            (lib "ts-files/cpx/tscpx_sound_meter.rkt")
            (lib "ts-files/tsrokit/tsrokit_mousebot.rkt")
            (lib "ts-files/tsgd/style-demos/tsgd_style_4.rkt")
            (lib "ts-files/app/tsapp_flashcards.rkt")
            (lib "ts-files/tsrokit/tsrokit_linefollow.rkt")
            (lib "ts-files/cpx/tscpx_set_light_wait.rkt")
            (lib "ts-files/tsgd/tsgd_quest9_complete.rkt")
            (lib "ts-files/cpx/tscpx_riff_1.rkt")
            (lib "ts-files/tsgd/tsgd_quest10_complete.rkt")
            (lib "ts-files/tsgd/style-demos/tsgd_style_3.rkt")
            (lib "ts-files/cpx/tscpx_hot_potato.rkt")
            (lib "ts-files/app/tsapp_cookie_clicker.rkt")
            (lib "ts-files/tscc/tscc_module10.rkt")
            (lib "ts-files/cpx/tscpx_night_light.rkt")
            (lib "ts-files/tsrokit/tsrokit_sumobot2.rkt")
            (lib "ts-files/cpx/tscpx_blaster_b.rkt")
            (lib "ts-files/tsgd/style-demos/tsgd_style_1.rkt")
            (lib "ts-files/tsrokit/tsrokit_sumobot.rkt")
            (lib "ts-files/vr/tsvr_components.rkt")
            (lib "ts-files/cpx/tscpx_set_function.rkt")
            (lib "ts-files/tsrokit/tsrokit_linefollow2.rkt")
            (lib "ts-files/tsweb/tsweb_module7_complete.rkt")
            (lib "ts-files/cpx/tscpx_blaster_f.rkt")
            (lib "ts-files/cpx/tscpx_saber_d.rkt")
            (lib "ts-files/cpx/tscpx_test.rkt")
            (lib "ts-files/mt/tsmt_custom_drop.rkt")
            (lib "ts-files/tsweb/tsweb_blog_template.rkt")
            (lib "ts-files/cpx/tscpx_blaster_d.rkt")
            (lib "ts-files/tsgd/tsgd_race_game_starter.rkt")
            (lib "ts-files/tsrokit/tsrokit_trailerbot2.rkt")
            (lib "ts-files/cpx/tscpx_saber_c.rkt")
            (lib "ts-files/cpx/tscpx_riff_surprise_1.rkt")
            (lib "ts-files/cpx/tscpx_colors.rkt")
            (lib "ts-files/tsgd/tsgd_adventure_quest4_complete.rkt")
            (lib "ts-files/cpx/tscpx_set_light.rkt")
            (lib "ts-files/tsrokit/tsrokit_soccerbot4.rkt")
            (lib "ts-files/cpx/tscpx_forever_siren.rkt")
            (lib "ts-files/tsgd/tsgd_quest8_complete.rkt")
            (lib "ts-files/mt/tsmt_entity.rkt")
            (lib "ts-files/cpx/tscpx_set_light_function.rkt")
            (lib "ts-files/tsgd/tsgd_fireball.rkt")
            (lib "ts-files/tsrokit/tsrokit_trailerbot3.rkt")
            (lib "ts-files/cpx/tscpx_led.rkt")
            (lib "ts-files/tsweb/tsweb_text_adventure.rkt")
            (lib "ts-files/cpx/tscpx_riff_2.rkt")
            (lib "ts-files/tsrokit/tsrokit_soccerbot2.rkt")
            (lib "ts-files/cpx/tscpx_blaster_a.rkt")
            (lib "ts-files/tsweb/tsweb_module5_complete.rkt")
            (lib "ts-files/cpx/tscpx_cool_riff.rkt")
            (lib "ts-files/mt/tsmt_multi_face.rkt")
            (lib "ts-files/vr/tsvr_start_b.rkt")
            (lib "ts-files/tsgd/tsgd_adventure_game_demo.rkt")
            (lib "ts-files/tsrokit/tsrokit_soccerbot3.rkt")
            (lib "ts-files/tsgd/style-demos/tsgd_style_2.rkt")
            (lib "ts-files/tsgd/tsgd_adventure_quest5_complete.rkt")
            (lib "ts-files/tsgd/tsgd_race_game_5p.rkt")
            (lib "ts-files/vr/tsvr_lighttime.rkt")
            (lib "ts-files/cpx/tscpx_saber_b.rkt")
            (lib "ts-files/tsgd/tsgd_enemy.rkt")
            (lib "ts-files/cpx/tscpx_saber_e.rkt")
            (lib "ts-files/cpx/tscpx_set_function_10.rkt")
            (lib "ts-files/tsrokit/tsrokit_soccerbot.rkt")
            (lib "ts-files/tsgd/tsgd_laser.rkt")
            (lib "ts-files/tsweb/tsweb_module1_complete.rkt")
            (lib "ts-files/tsgd/tsgd_quest6_complete.rkt")
            (lib "ts-files/tsgd/tsgd_quest7_complete.rkt")
            (lib "ts-files/mt/tsmt_custom_block.rkt")
            (lib "ts-files/tsgd/tsgd_boss_health.rkt")
            (lib "ts-files/tsgd/tsgd_quest11_complete.rkt")
            (lib "ts-files/mt/tsmt_multi_drop.rkt")
            (lib "ts-files/tsgd/tsgd_quest5_complete.rkt")
            (lib "ts-files/cpx/tscpx_target_a.rkt")
            (lib "ts-files/tsgd/tsgd_wall_and_lava.rkt")
            (lib "ts-files/tsrokit/tsrokit_linefollow3.rkt")
            (lib "ts-files/cpx/tscpx_blaster_c.rkt")
            (lib "ts-files/tsgd/tsgd_quest_item.rkt")
            (lib "ts-files/mt/tsmt_custom_item.rkt")
            (lib "ts-files/cpx/tscpx_rainbow_sparkle.rkt")
            (lib "ts-files/tsrokit/tsrokit_trailerbot.rkt")
            (lib "ts-files/cpx/tscpx_blaster_e.rkt")
            (lib "ts-files/mt/tsmt_particle.rkt")
            (lib "ts-files/cpx/tscpx_laser_tag.rkt")
            (lib "ts-files/vr/tsvr_streetlamp.rkt")
            (lib "ts-files/vr/tsvr_start_a.rkt")
            (lib "ts-files/tsrokit/tsrokit_mousebot3.rkt")
            (lib "ts-files/cpx/tscpx_saber_a.rkt")
            (lib "ts-files/tsrokit/tsrokit_sumobot3.rkt")))
          (name . "ts-files")
          (nix-sha256
           .
           "1hid3m5fkmb2bzv0hmikf4189jvpfdz1jj34v2rl6445yaicjh4f")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-fail: . #t)
                   (:no-tag: . #t)
                   (author:stephen@thoughtstem.com . #t)
                   (ring:2 . #t)))
          (source . "https://github.com/thoughtstem/ts-files.git")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "3252c883500641609200b698b73a09f0c96a6042")
                          (source
                           .
                           "https://github.com/thoughtstem/ts-files.git")
                          (source_url
                           .
                           "https://github.com/thoughtstem/ts-files.git")))))))
 ("tulip"
  .
  #hasheq((author . "lexi.lambda@gmail.com")
          (authors . ("lexi.lambda@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/tulip.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/tulip.txt")))
          (checksum . "1613cfd4d7e8dbc8ceb86cf33479375147f42b2f")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "tulip-lib"))
          (dependency-names . ("base" "tulip-lib"))
          (description . "")
          (implies . ("tulip-lib"))
          (last-checked . 1557339801)
          (last-edit . 1466529282)
          (last-updated . 1502816488)
          (modules . ())
          (name . "tulip")
          (nix-sha256
           .
           "1lzj7skc9b78cj2k2scp5ydxdgympbrj9jh9w10nld4fycba3rc1")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:no-desc: . #t)
                   (:no-tag: . #t)
                   (author:lexi.lambda@gmail.com . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/lexi-lambda/racket-tulip?path=tulip")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "1613cfd4d7e8dbc8ceb86cf33479375147f42b2f")
                          (source
                           .
                           "git://github.com/lexi-lambda/racket-tulip?path=tulip")
                          (source_url
                           .
                           "http://github.com/lexi-lambda/racket-tulip/tree/master?path=tulip")))))))
 ("tulip-lib"
  .
  #hasheq((author . "lexi.lambda@gmail.com")
          (authors . ("lexi.lambda@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/tulip-lib.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/tulip-lib.txt")))
          (checksum . "1613cfd4d7e8dbc8ceb86cf33479375147f42b2f")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "functional-lib"
            "megaparsack-lib"
            "megaparsack-parser-tools"
            "parser-tools-lib"
            "curly-fn"))
          (dependency-names
           .
           ("base"
            "functional-lib"
            "megaparsack-lib"
            "megaparsack-parser-tools"
            "parser-tools-lib"
            "curly-fn"))
          (description . "")
          (implies . ())
          (last-checked . 1557339801)
          (last-edit . 1466529290)
          (last-updated . 1502816488)
          (modules
           .
           ((lib "tulip/lang/reader.rkt")
            (lib "tulip/lang/parser.rkt")
            (lib "tulip/private/util/srcloc.rkt")
            (lib "tulip/lang/lexer.rkt")
            (lib "tulip/lang/emitter.rkt")
            (lib "tulip/list.rkt")
            (lib "tulip/main.rkt")
            (lib "tulip/base.rkt")
            (lib "tulip/private/util/syntax-loc-props.rkt")
            (lib "tulip/lang/configure-runtime.rkt")
            (lib "tulip/math.rkt")
            (lib "tulip/racket/ffi.rkt")
            (lib "tulip/private/configured-runtime-lang.rkt")
            (lib "tulip/private/util/curry.rkt")))
          (name . "tulip-lib")
          (nix-sha256
           .
           "1lzj7skc9b78cj2k2scp5ydxdgympbrj9jh9w10nld4fycba3rc1")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:no-desc: . #t)
                   (:no-tag: . #t)
                   (author:lexi.lambda@gmail.com . #t)
                   (ring:1 . #t)))
          (source
           .
           "git://github.com/lexi-lambda/racket-tulip?path=tulip-lib")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "1613cfd4d7e8dbc8ceb86cf33479375147f42b2f")
                          (source
                           .
                           "git://github.com/lexi-lambda/racket-tulip?path=tulip-lib")
                          (source_url
                           .
                           "http://github.com/lexi-lambda/racket-tulip/tree/master?path=tulip-lib")))))))
 ("tulip-test"
  .
  #hasheq((author . "lexi.lambda@gmail.com")
          (authors . ("lexi.lambda@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/tulip-test.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/tulip-test.txt")))
          (checksum . "1613cfd4d7e8dbc8ceb86cf33479375147f42b2f")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "rackunit-lib" "tulip-lib"))
          (dependency-names . ("base" "rackunit-lib" "tulip-lib"))
          (description . "")
          (implies . ())
          (last-checked . 1557339801)
          (last-edit . 1466529328)
          (last-updated . 1502816489)
          (modules
           .
           ((lib "tests/tulip/id-namespace.rkt")
            (lib "tests/tulip/list.rkt")
            (lib "tests/tulip/corecur.rkt")
            (lib "tests/tulip/import.rkt")
            (lib "tests/tulip/assert.rkt")
            (lib "tests/tulip/chain.rkt")))
          (name . "tulip-test")
          (nix-sha256
           .
           "1lzj7skc9b78cj2k2scp5ydxdgympbrj9jh9w10nld4fycba3rc1")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:no-desc: . #t)
                   (:no-tag: . #t)
                   (author:lexi.lambda@gmail.com . #t)
                   (ring:1 . #t)))
          (source
           .
           "git://github.com/lexi-lambda/racket-tulip?path=tulip-test")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "1613cfd4d7e8dbc8ceb86cf33479375147f42b2f")
                          (source
                           .
                           "git://github.com/lexi-lambda/racket-tulip?path=tulip-test")
                          (source_url
                           .
                           "http://github.com/lexi-lambda/racket-tulip/tree/master?path=tulip-test")))))))
 ("turn-based-game"
  .
  #hasheq((author . "alexander@knauth.org")
          (authors . ("alexander@knauth.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "turn-based-game"
                    "doc/turn-based-game@turn-based-game/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/turn-based-game.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/turn-based-game.txt")))
          (checksum . "bdc793d50f67bb59446caecc9e5771d84e1eba17")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "agile"
            "collections-lib"
            "htdp-lib"
            "rackunit-lib"
            "scribble-lib"
            "racket-doc"
            "htdp-doc"
            "collections-doc"))
          (dependency-names
           .
           ("base"
            "agile"
            "collections-lib"
            "htdp-lib"
            "rackunit-lib"
            "scribble-lib"
            "racket-doc"
            "htdp-doc"
            "collections-doc"))
          (description
           .
           "interfaces and tools for defining and playing turn-based games")
          (implies . ())
          (last-checked . 1557339801)
          (last-edit . 1498674875)
          (last-updated . 1547909023)
          (modules
           .
           ((lib "turn-based-game/examples/checkers-gui.rkt")
            (lib "turn-based-game/demo/tic-tac-toe.rkt")
            (lib "turn-based-game/turn-based-game.rkt")
            (lib "turn-based-game/examples/checkers.rkt")
            (lib "turn-based-game/demo/checkers.rkt")
            (lib "turn-based-game/computer-player.rkt")
            (lib "turn-based-game/computer-player/n-ahead.rkt")
            (lib "turn-based-game/controller/human-player-gui-controller.rkt")
            (lib "turn-based-game/examples/tic-tac-toe-gui.rkt")
            (lib "turn-based-game/demo/connect-four.rkt")
            (lib "turn-based-game/turn-based-game-gui.rkt")
            (lib
             "turn-based-game/controller/computer-player-gui-controller.rkt")
            (lib "turn-based-game/examples/connect-four-gui.rkt")
            (lib "turn-based-game/computer-player/score-explore-random.rkt")
            (lib "turn-based-game/examples/connect-four.rkt")
            (lib "turn-based-game/examples/tic-tac-toe.rkt")
            (lib "turn-based-game/scribblings/turn-based-game.scrbl")))
          (name . "turn-based-game")
          (nix-sha256
           .
           "1j1nc26pghd5lp8yi7sxh1mmjhz1dir1s9k41zzn2kqjdca31r41")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:alexander@knauth.org . #t)
                   (games . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/AlexKnauth/turn-based-game")
          (tags . ("games"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "bdc793d50f67bb59446caecc9e5771d84e1eba17")
                          (source
                           .
                           "git://github.com/AlexKnauth/turn-based-game")
                          (source_url
                           .
                           "http://github.com/AlexKnauth/turn-based-game/tree/master")))))))
 ("turnstile"
  .
  #hasheq((author . "alexander@knauth.org stchang@racket-lang.org")
          (authors . ("alexander@knauth.org" "stchang@racket-lang.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/turnstile.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/turnstile.txt")))
          (checksum . "5111e55fd15ef2284455085b7bf770736dc12235")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           (("turnstile-lib" #:version "0.3.1")
            ("turnstile-example" #:version "0.3.1")
            ("turnstile-doc" #:version "0.3.1")
            ("turnstile-test" #:version "0.3.1")))
          (dependency-names
           .
           ("turnstile-lib"
            "turnstile-example"
            "turnstile-doc"
            "turnstile-test"))
          (description . "#lang for implementing typed languages with Racket")
          (implies . ())
          (last-checked . 1557339801)
          (last-edit . 1540228201)
          (last-updated . 1544047278)
          (modules . ())
          (name . "turnstile")
          (nix-sha256
           .
           "1nb4f81a0q8j347ilmvgl0mzc6ivfm2d78i8vp1nk5wx1wn0zg5h")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:alexander@knauth.org . #t)
                   (author:stchang@racket-lang.org . #t)
                   (lang . #t)
                   (language . #t)
                   (ring:1 . #t)))
          (source
           .
           "https://github.com/stchang/macrotypes.git?path=turnstile")
          (tags . ("lang" "language"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "5111e55fd15ef2284455085b7bf770736dc12235")
                          (source
                           .
                           "https://github.com/stchang/macrotypes.git?path=turnstile")
                          (source_url
                           .
                           "https://github.com/stchang/macrotypes.git?path=turnstile")))))))
 ("turnstile-doc"
  .
  #hasheq((author . "stchang@racket-lang.org")
          (authors . ("stchang@racket-lang.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "turnstile"
                    "doc/turnstile@turnstile-doc/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/turnstile-doc.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/turnstile-doc.txt")))
          (checksum . "5111e55fd15ef2284455085b7bf770736dc12235")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           (("base" #:version "7.0")
            "racket-doc"
            "sandbox-lib"
            "scribble-lib"
            ("turnstile-lib" #:version "0.3.6")
            ("turnstile-example" #:version "0.3.1")))
          (dependency-names
           .
           ("base"
            "racket-doc"
            "sandbox-lib"
            "scribble-lib"
            "turnstile-lib"
            "turnstile-example"))
          (description . "")
          (implies . ())
          (last-checked . 1557339801)
          (last-edit . 1540411795)
          (last-updated . 1544047279)
          (modules
           .
           ((lib "turnstile/scribblings/common.rkt")
            (lib "turnstile/scribblings/doc-utils.rkt")
            (lib "turnstile/scribblings/turnstile.scrbl")
            (lib "turnstile/scribblings/guide.scrbl")
            (lib "turnstile/scribblings/reference.scrbl")))
          (name . "turnstile-doc")
          (nix-sha256
           .
           "1nb4f81a0q8j347ilmvgl0mzc6ivfm2d78i8vp1nk5wx1wn0zg5h")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (:no-desc: . #t)
                   (:no-tag: . #t)
                   (author:stchang@racket-lang.org . #t)
                   (ring:2 . #t)))
          (source
           .
           "https://github.com/stchang/macrotypes.git?path=turnstile-doc")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "5111e55fd15ef2284455085b7bf770736dc12235")
                          (source
                           .
                           "https://github.com/stchang/macrotypes.git?path=turnstile-doc")
                          (source_url
                           .
                           "https://github.com/stchang/macrotypes.git?path=turnstile-doc")))))))
 ("turnstile-example"
  .
  #hasheq((author . "stchang@racket-lang.org")
          (authors . ("stchang@racket-lang.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/turnstile-example.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/turnstile-example.txt")))
          (checksum . "5111e55fd15ef2284455085b7bf770736dc12235")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           (("base" #:version "7.0")
            "typed-racket"
            ("turnstile-lib" #:version "0.3.6")
            ("macrotypes-lib" #:version "0.3.2")))
          (dependency-names
           .
           ("base" "typed-racket" "turnstile-lib" "macrotypes-lib"))
          (description . "")
          (implies . ())
          (last-checked . 1557339801)
          (last-edit . 1540411812)
          (last-updated . 1544047280)
          (modules
           .
           ((lib "turnstile/examples/simple/stlc.rkt")
            (lib "turnstile/examples/linear/lin+chan.rkt")
            (lib "turnstile/examples/stlc+tup.rkt")
            (lib "turnstile/examples/stlc+reco+var.rkt")
            (lib "turnstile/examples/cmu15-814/stlc+sum+rec.rkt")
            (lib "turnstile/examples/stlc+reco2.rkt")
            (lib "turnstile/examples/linear/lin+var.rkt")
            (lib "turnstile/examples/mlish-do.rkt")
            (lib "turnstile/examples/fomega-no-reuse.rkt")
            (lib "turnstile/examples/dep/dep-ind-cur2+sugar.rkt")
            (lib "turnstile/examples/exist.rkt")
            (lib "turnstile/examples/dep/dep-ind-cur2+eq.rkt")
            (lib "turnstile/examples/dep/dep-ind-cur2+nat.rkt")
            (lib "turnstile/examples/dep/dep-ind-cur2+nat+datum.rkt")
            (lib "turnstile/examples/samc-define-lang2.rkt")
            (lib "turnstile/examples/stlc+union.rkt")
            (lib "turnstile/examples/cmu15-814/stlc+sum+forall.rkt")
            (lib "turnstile/examples/fomega2.rkt")
            (lib "turnstile/examples/fomega.rkt")
            (lib "turnstile/examples/dep/dep-ind-cur2+bool.rkt")
            (lib "turnstile/examples/util/filter-maximal.rkt")
            (lib "turnstile/examples/simple/ext-stlc.rkt")
            (lib "turnstile/examples/samc-define-lang.rkt")
            (lib "turnstile/examples/linear/lin+cons.rkt")
            (lib "turnstile/examples/linear/fabul.rkt")
            (lib "turnstile/examples/sysf.rkt")
            (lib "turnstile/examples/stlc+reco+sub.rkt")
            (lib "turnstile/examples/ext-stlc-no-unicode.rkt")
            (lib "turnstile/examples/stlc+box.rkt")
            (lib "turnstile/examples/linear/lin5.rkt")
            (lib "turnstile/examples/dep/dep-ind-cur2+eq2.rkt")
            (lib "turnstile/examples/dep/dep-ind-cur2+data.rkt")
            (lib "turnstile/examples/cmu15-814/stlc+sum.rkt")
            (lib "turnstile/examples/fomega-no-reuse-old.rkt")
            (lib "turnstile/examples/cmu15-814/stlc+sum+fix.rkt")
            (lib "turnstile/examples/linear/lin2.rkt")
            (lib "turnstile/examples/stlc-jesse.rkt")
            (lib "turnstile/examples/simple/stlc+lit.rkt")
            (lib "turnstile/examples/cmu15-814/stlc.rkt")
            (lib "turnstile/examples/infer.rkt")
            (lib "turnstile/examples/dep/dep-ind-cur2+data2.rkt")
            (lib "turnstile/examples/dep/dep-ind-cur2.rkt")
            (lib "turnstile/examples/dep.rkt")
            (lib "turnstile/examples/stlc+union+case.rkt")
            (lib "turnstile/examples/linear/lin4.rkt")
            (lib "turnstile/examples/linear/lin3.rkt")
            (lib "turnstile/examples/linear/lin.rkt")
            (lib "turnstile/examples/gadt.rkt")
            (lib "turnstile/examples/stlc+effect.rkt")
            (lib "turnstile/examples/stlc+rec-iso.rkt")
            (lib "turnstile/examples/trivial.rkt")
            (lib "turnstile/examples/linear/fabul-utils.rkt")
            (lib "turnstile/examples/mlish+adhoc.rkt")
            (lib "turnstile/examples/linear/lin+tup.rkt")
            (lib "turnstile/examples/stlc+sub.rkt")
            (lib "turnstile/examples/stlc+cons.rkt")
            (lib "turnstile/examples/cmu15-814/stlc+sum+exist.rkt")
            (lib "turnstile/examples/ext-stlc.rkt")
            (lib "turnstile/examples/mlish.rkt")
            (lib "turnstile/examples/stlc+lit.rkt")
            (lib "turnstile/examples/fsub.rkt")
            (lib "turnstile/examples/stlc.rkt")))
          (name . "turnstile-example")
          (nix-sha256
           .
           "1nb4f81a0q8j347ilmvgl0mzc6ivfm2d78i8vp1nk5wx1wn0zg5h")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:no-desc: . #t)
                   (:no-tag: . #t)
                   (author:stchang@racket-lang.org . #t)
                   (ring:2 . #t)))
          (source
           .
           "https://github.com/stchang/macrotypes.git?path=turnstile-example")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "5111e55fd15ef2284455085b7bf770736dc12235")
                          (source
                           .
                           "https://github.com/stchang/macrotypes.git?path=turnstile-example")
                          (source_url
                           .
                           "https://github.com/stchang/macrotypes.git?path=turnstile-example")))))))
 ("turnstile-lib"
  .
  #hasheq((author . "stchang@racket-lang.org")
          (authors . ("stchang@racket-lang.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/turnstile-lib.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/turnstile-lib.txt")))
          (checksum . "5111e55fd15ef2284455085b7bf770736dc12235")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           (("base" #:version "7.0")
            ("macrotypes-lib" #:version "0.3.2")
            "lens-lib"))
          (dependency-names . ("base" "macrotypes-lib" "lens-lib"))
          (description . "")
          (implies . ())
          (last-checked . 1557339801)
          (last-edit . 1540403996)
          (last-updated . 1544047281)
          (modules
           .
           ((lib "turnstile/no-unicode.rkt")
            (lib "turnstile/lang/lang/reader.rkt")
            (lib "turnstile/main.rkt")
            (lib "turnstile/turnstile.rkt")
            (lib "turnstile/more-utils.rkt")
            (lib "turnstile/quicklang/lang/reader.rkt")
            (lib "turnstile/lang/reader.rkt")
            (lib "turnstile/mode.rkt")
            (lib "turnstile/eval.rkt")
            (lib "turnstile/lang.rkt")
            (lib "turnstile/base.rkt")
            (lib "turnstile/base/lang/reader.rkt")
            (lib "turnstile/typedefs.rkt")))
          (name . "turnstile-lib")
          (nix-sha256
           .
           "1nb4f81a0q8j347ilmvgl0mzc6ivfm2d78i8vp1nk5wx1wn0zg5h")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:no-desc: . #t)
                   (:no-tag: . #t)
                   (author:stchang@racket-lang.org . #t)
                   (ring:2 . #t)))
          (source
           .
           "https://github.com/stchang/macrotypes.git?path=turnstile-lib")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "5111e55fd15ef2284455085b7bf770736dc12235")
                          (source
                           .
                           "https://github.com/stchang/macrotypes.git?path=turnstile-lib")
                          (source_url
                           .
                           "https://github.com/stchang/macrotypes.git?path=turnstile-lib")))))))
 ("turnstile-test"
  .
  #hasheq((author . "stchang@racket-lang.org")
          (authors . ("stchang@racket-lang.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/turnstile-test.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/turnstile-test.txt")))
          (checksum . "5111e55fd15ef2284455085b7bf770736dc12235")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           (("base" #:version "7.0")
            ("turnstile-example" #:version "0.3.6")
            ("rackunit-macrotypes-lib" #:version "0.3.1")))
          (dependency-names
           .
           ("base" "turnstile-example" "rackunit-macrotypes-lib"))
          (description . "")
          (implies . ())
          (last-checked . 1557339801)
          (last-edit . 1540412263)
          (last-updated . 1544047282)
          (modules
           .
           ((lib "tests/turnstile/dep/dep-ind-cur2-eq-tests2.rkt")
            (lib "tests/turnstile/stlc+sub-tests.rkt")
            (lib "tests/turnstile/fomega-tests.rkt")
            (lib "tests/turnstile/stlc+union.rkt")
            (lib "tests/turnstile/load-time-tests/turnstile-lang-prog.rkt")
            (lib "tests/turnstile/exist-tests.rkt")
            (lib "tests/turnstile/ext-stlc-tests.rkt")
            (lib "tests/turnstile/linear/lin3-tests.rkt")
            (lib "tests/turnstile/ext-stlc-no-unicode-tests.rkt")
            (lib "tests/turnstile/linear/lin4-tests.rkt")
            (lib "tests/turnstile/samc-define-lang-tests.rkt")
            (lib "tests/turnstile/sysf-tests.rkt")
            (lib "tests/turnstile/rackunit-typechecking.rkt")
            (lib "tests/turnstile/cmu15-814/stlc+sum+fix-tests.rkt")
            (lib "tests/turnstile/mlish/sweet-map.rkt")
            (lib "tests/turnstile/filter-maximal.rkt")
            (lib "tests/turnstile/linear/lin-tests.rkt")
            (lib "tests/turnstile/fomega2-tests.rkt")
            (lib "tests/turnstile/dep/dep-ind-cur2-nat-tests.rkt")
            (lib "tests/turnstile/mlish+gadt-tests.rkt")
            (lib "tests/turnstile/dep/dep-ind-cur2-list-tests2.rkt")
            (lib "tests/turnstile/dep/dep-ind-cur2-list-tests.rkt")
            (lib "tests/turnstile/cmu15-814/stlc+sum-tests.rkt")
            (lib "tests/turnstile/linear/lin+var-tests.rkt")
            (lib "tests/turnstile/stlc+reco+sub-tests.rkt")
            (lib "tests/turnstile/stlc+effect-tests.rkt")
            (lib "tests/turnstile/stlc-jesse-tests.rkt")
            (lib "tests/turnstile/dep/dep-ind-cur2-bool-tests.rkt")
            (lib "tests/turnstile/dep/dep-ind-cur2-tests.rkt")
            (lib "tests/turnstile/dep/dep-ind-cur2-subtype-tests.rkt")
            (lib "tests/turnstile/stlc+cons-tests.rkt")
            (lib "tests/turnstile/dep-tests.rkt")
            (lib "tests/turnstile/cmu15-814/stlc-tests.rkt")
            (lib "tests/turnstile/dep/dep-ind-cur2-data2-tests.rkt")
            (lib
             "tests/turnstile/load-time-tests/turnstile-base-lang-prog.rkt")
            (lib "tests/turnstile/cmu15-814/stlc+sum+rec-tests.rkt")
            (lib "tests/turnstile/linear/rackunit-lin.rkt")
            (lib "tests/turnstile/fomega-no-reuse-tests-old.rkt")
            (lib "tests/turnstile/linear/fabul-tests.rkt")
            (lib "tests/turnstile/linear/lin+cons-tests.rkt")
            (lib "tests/turnstile/stlc+lit-tests.rkt")
            (lib "tests/turnstile/tlb-infer-tests.rkt")
            (lib "tests/turnstile/stlc+box-tests.rkt")
            (lib "tests/turnstile/linear/lin2-tests.rkt")
            (lib "tests/turnstile/stlc+union+case.rkt")
            (lib "tests/turnstile/simple/stlc+lit-tests.rkt")
            (lib "tests/turnstile/stlc+tup-tests.rkt")
            (lib "tests/turnstile/dep/dep-ind-cur2-eq-tests.rkt")
            (lib "tests/turnstile/cmu15-814/stlc+sum+forall-tests.rkt")
            (lib "tests/turnstile/linear/lin+chan-tests.rkt")
            (lib "tests/turnstile/pat-expander-tests-def.rkt")
            (lib "tests/turnstile/stlc-tests.rkt")
            (lib "tests/turnstile/fsub-tests.rkt")
            (lib "tests/turnstile/samc-define-lang-tests2.rkt")
            (lib "tests/turnstile/linear/lin5-tests.rkt")
            (lib "tests/turnstile/typed-rackunit-typechecking.rkt")
            (lib "tests/turnstile/fomega-no-reuse-tests.rkt")
            (lib "tests/turnstile/simple/stlc-tests.rkt")
            (lib "tests/turnstile/linear/lin+tup-tests.rkt")
            (lib "tests/turnstile/cmu15-814/stlc+sum+exist-tests.rkt")
            (lib "tests/turnstile/trivial-test.rkt")
            (lib "tests/turnstile/mlish-tests.rkt")
            (lib "tests/turnstile/load-time-tests/racket-prog.rkt")
            (lib "tests/turnstile/load-time-tests/racket-base-prog.rkt")
            (lib "tests/turnstile/dep/dep-ind-cur2-nat+datum-tests.rkt")
            (lib "tests/turnstile/load-time-tests/turnstile-base-lang.rkt")
            (lib "tests/turnstile/simple/ext-stlc-tests.rkt")
            (lib "tests/turnstile/stlc+rec-iso-tests.rkt")
            (lib "tests/turnstile/turnstile-tests.rkt")
            (lib "tests/turnstile/rackunit-kindchecking.rkt")
            (lib "tests/turnstile/load-time-tests/turnstile-lang.rkt")
            (lib "tests/turnstile/stlc+reco+var-tests.rkt")
            (lib "tests/turnstile/mode.rkt")
            (lib "tests/turnstile/pat-expander-tests.rkt")
            (lib "tests/turnstile/stlc+reco2-tests.rkt")))
          (name . "turnstile-test")
          (nix-sha256
           .
           "1nb4f81a0q8j347ilmvgl0mzc6ivfm2d78i8vp1nk5wx1wn0zg5h")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:no-desc: . #t)
                   (:no-tag: . #t)
                   (author:stchang@racket-lang.org . #t)
                   (ring:2 . #t)))
          (source
           .
           "https://github.com/stchang/macrotypes.git?path=turnstile-test")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "5111e55fd15ef2284455085b7bf770736dc12235")
                          (source
                           .
                           "https://github.com/stchang/macrotypes.git?path=turnstile-test")
                          (source_url
                           .
                           "https://github.com/stchang/macrotypes.git?path=turnstile-test")))))))
 ("twilio"
  .
  #hasheq((author . "bogdan@defn.io")
          (authors . ("bogdan@defn.io"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/twilio.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/twilio.txt")))
          (checksum . "0a280a7d51704638c034f5bca63937e120cc6d2f")
          (checksum-error . #f)
          (conflicts . ())
          (date-added . 1554730962)
          (dependencies . ("base"))
          (dependency-names . ("base"))
          (description . "A Twilio client for Racket.")
          (implies . ())
          (last-checked . 1557339801)
          (last-edit . 1554730962)
          (last-updated . 1556359645)
          (modules . ((lib "twilio/main.rkt")))
          (name . "twilio")
          (nix-sha256
           .
           "1ds56m3x0jarkxacsrsihxv56rvqgch5abw7yzwyvcfandfzqmbr")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:bogdan@defn.io . #t)
                   (ring:2 . #t)
                   (sms . #t)
                   (twilio . #t)
                   (web . #t)))
          (source
           .
           "https://github.com/Bogdanp/racket-twilio.git?path=twilio")
          (tags . ("sms" "twilio" "web"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "0a280a7d51704638c034f5bca63937e120cc6d2f")
                          (source
                           .
                           "https://github.com/Bogdanp/racket-twilio.git?path=twilio")
                          (source_url
                           .
                           "https://github.com/Bogdanp/racket-twilio.git?path=twilio")))))))
 ("txexpr"
  .
  #hasheq((author . "mb@mbtype.com")
          (authors . ("mb@mbtype.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "txexpr" "doc/txexpr@txexpr/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/txexpr.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/txexpr.txt")))
          (checksum . "d3f16ceebe00f8558f807375a23abc3302cbf1e2")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            ("sugar" #:version "0.2")
            "rackunit-lib"
            "scribble-lib"
            "racket-doc"
            "rackunit-doc"))
          (dependency-names
           .
           ("base"
            "sugar"
            "rackunit-lib"
            "scribble-lib"
            "racket-doc"
            "rackunit-doc"))
          (description
           .
           "Handy tools for working with HTML-style tagged X-expressions")
          (implies . ())
          (last-checked . 1557339801)
          (last-edit . 1544961873)
          (last-updated . 1550808395)
          (modules
           .
           ((lib "txexpr/private/container.rkt")
            (lib "txexpr/test/check-values.rkt")
            (lib "txexpr/scribblings/txexpr.scrbl")
            (lib "txexpr/stx.rkt")
            (lib "txexpr/unstable/main.rkt")
            (lib "txexpr/private/define-provide-safe-match.rkt")
            (lib "txexpr/main.rkt")
            (lib "txexpr/test/tests.rkt")
            (lib "txexpr/base.rkt")
            (lib "txexpr/check.rkt")
            (lib "txexpr/test/contract-tests.rkt")
            (lib "txexpr/test/test-txexpr-stx.rkt")))
          (name . "txexpr")
          (nix-sha256
           .
           "0pa5c3vpspsax7lqnwzx839sm06130929406qlpxhdariaavhy7n")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:mb@mbtype.com . #t)
                   (ring:1 . #t)
                   (web . #t)))
          (source . "https://github.com/mbutterick/txexpr.git")
          (tags . ("web"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "d3f16ceebe00f8558f807375a23abc3302cbf1e2")
                          (source
                           .
                           "https://github.com/mbutterick/txexpr.git")
                          (source_url
                           .
                           "https://github.com/mbutterick/txexpr.git")))
                 ("6.0"
                  .
                  #hasheq((checksum
                           .
                           "3b6f81bccf10cf6604b27a362eb5bee9a395954a")
                          (source
                           .
                           "git://github.com/mbutterick/txexpr#v6.0-exception")
                          (source_url
                           .
                           "http://github.com/mbutterick/txexpr/tree/master#v6.0-exception")))))))
 ("txexpr-stxparse"
  .
  #hasheq((author . "alexander@knauth.org")
          (authors . ("alexander@knauth.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/txexpr-stxparse.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/txexpr-stxparse.txt")))
          (checksum . "9cd7beea3ff8ecf1fd3e77cddf71c931f9fc24df")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "txexpr" "rackunit-lib"))
          (dependency-names . ("base" "txexpr" "rackunit-lib"))
          (description
           .
           "syntax-parse patterns for parsing Tagged X-expressions")
          (implies . ())
          (last-checked . 1557339801)
          (last-edit . 1544921169)
          (last-updated . 1544763662)
          (modules
           .
           ((lib "txexpr/stx/test/test-txexpr-stxparse.rkt")
            (lib "txexpr/stx/parse.rkt")))
          (name . "txexpr-stxparse")
          (nix-sha256
           .
           "1h7fzg0a0k0ynm7pkbwa7lj0cq890q1akfrlbgwj7k2b0di0b3ap")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:alexander@knauth.org . #t)
                   (ring:2 . #t)
                   (xexpr . #t)))
          (source . "https://github.com/AlexKnauth/txexpr-stxparse.git")
          (tags . ("xexpr"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "9cd7beea3ff8ecf1fd3e77cddf71c931f9fc24df")
                          (source
                           .
                           "https://github.com/AlexKnauth/txexpr-stxparse.git")
                          (source_url
                           .
                           "https://github.com/AlexKnauth/txexpr-stxparse.git")))
                 ("6.1.1"
                  .
                  #hasheq((checksum
                           .
                           "9cd7beea3ff8ecf1fd3e77cddf71c931f9fc24df")
                          (source
                           .
                           "git://github.com/AlexKnauth/txexpr-stxparse")
                          (source_url
                           .
                           "http://github.com/AlexKnauth/txexpr-stxparse/tree/master")))))))
 ("type-conventions"
  .
  #hasheq((author . "jackhfirth@gmail.com")
          (authors . ("jackhfirth@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/type-conventions.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/type-conventions.txt")))
          (checksum . "550d9045206bd1c0a05713fa866a9cc2a0b48d99")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base" "typed-racket-lib" "typed-racket-more" "rackunit-lib"))
          (dependency-names
           .
           ("base" "typed-racket-lib" "typed-racket-more" "rackunit-lib"))
          (description
           .
           "Forms for giving specific argument names implicit types")
          (implies . ())
          (last-checked . 1557339802)
          (last-edit . 1412969219)
          (last-updated . 1502816494)
          (modules
           .
           ((lib "type-conventions/main.rkt")
            (lib "type-conventions/conventions-data.rkt")
            (lib "type-conventions/default-conventions.rkt")
            (lib "type-conventions/example.rkt")
            (lib "type-conventions/stx-helpers.rkt")
            (lib "type-conventions/type-args.rkt")
            (lib "type-conventions/stx-test-helpers.rkt")
            (lib "type-conventions/formals-class.rkt")))
          (name . "type-conventions")
          (nix-sha256
           .
           "08rgqm9ydqmw5r05pgl61cil61pl0yfiyvd7g9yybnnaqb6k9ggz")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:jackhfirth@gmail.com . #t)
                   (ring:1 . #t)
                   (shorthand . #t)
                   (syntax . #t)
                   (typed-racket . #t)))
          (source . "git://github.com/jackfirth/type-conventions")
          (tags . ("shorthand" "syntax" "typed-racket"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "550d9045206bd1c0a05713fa866a9cc2a0b48d99")
                          (source
                           .
                           "git://github.com/jackfirth/type-conventions")
                          (source_url
                           .
                           "http://github.com/jackfirth/type-conventions/tree/master")))))))
 ("type-expander"
  .
  #hasheq((author . "georges.duperon@gmail.com")
          (authors . ("georges.duperon@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "type-expander-implementation"
                    "doc/type-expander-implementation@type-expander/index.html")
                   ("main"
                    "type-expander"
                    "doc/type-expander@type-expander/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/type-expander.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/type-expander.txt")))
          (checksum . "22f9c4511531719eac76a5fe94688cbfbcee8f0a")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "rackunit-lib"
            "scribble-lib"
            "typed-racket-lib"
            "typed-racket-more"
            "hyper-literate"
            "auto-syntax-e"
            "debug-scopes"
            "version-case"
            "scribble-lib"
            "racket-doc"
            "typed-racket-more"
            "typed-racket-doc"
            "scribble-enhanced"
            "mutable-match-lambda"))
          (dependency-names
           .
           ("base"
            "rackunit-lib"
            "scribble-lib"
            "typed-racket-lib"
            "typed-racket-more"
            "hyper-literate"
            "auto-syntax-e"
            "debug-scopes"
            "version-case"
            "scribble-lib"
            "racket-doc"
            "typed-racket-more"
            "typed-racket-doc"
            "scribble-enhanced"
            "mutable-match-lambda"))
          (description
           .
           "Type expanders for typed/racket, which work like match expanders for match")
          (implies . ())
          (last-checked . 1557339802)
          (last-edit . 1471008019)
          (last-updated . 1556194060)
          (modules
           .
           ((lib "type-expander/test/readme.rkt")
            (lib "type-expander/test/base-lang-test-1.rkt")
            (lib "type-expander/base.rkt")
            (lib "type-expander/scribblings/type-expander.scrbl")
            (lib "type-expander/test/base-lang-test-2.rkt")
            (lib "type-expander/utils.rkt")
            (lib "type-expander/test/lang-test-2.rkt")
            (lib "type-expander/test/base-lang-test-3.rkt")
            (lib "type-expander/dbg.rkt")
            (lib "type-expander/test/lang-test-1.rkt")
            (lib "type-expander/contracts-to-types.rkt")
            (lib "type-expander/expander.rkt")
            (lib "type-expander/main.rkt")
            (lib "type-expander/lang/lang/reader.rkt")
            (lib "type-expander/identifiers.rkt")
            (lib "type-expander/lang.rkt")
            (lib "type-expander/scribblings/contracts-to-types.scrbl")
            (lib "type-expander/parameterize-lexical-context.rkt")
            (lib "type-expander/test/lang-test-3.rkt")
            (lib
             "type-expander/scribblings/type-expander-implementation.scrbl")
            (lib "type-expander/lang/reader.rkt")
            (lib "type-expander/test/test-contracts-to-types.rkt")
            (lib "type-expander/base/lang/reader.rkt")
            (lib "type-expander/scribblings/deprecated-colon.scrbl")
            (lib "type-expander/more-expanders.hl.rkt")
            (lib "type-expander/type-expander.hl.rkt")
            (lib "type-expander/test/type-expander-test.rkt")
            (lib "type-expander/lang/main.rkt")))
          (name . "type-expander")
          (nix-sha256
           .
           "14wva97qizalqmmsrhpp5an6s475mmlf82f1csgj6rh6gh8s3i4z")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:georges.duperon@gmail.com . #t)
                   (ring:1 . #t)
                   (typed-racket . #t)))
          (source . "https://github.com/jsmaniac/type-expander.git")
          (tags . ("typed-racket"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "22f9c4511531719eac76a5fe94688cbfbcee8f0a")
                          (source
                           .
                           "https://github.com/jsmaniac/type-expander.git")
                          (source_url
                           .
                           "https://github.com/jsmaniac/type-expander.git")))))))
 ("typed-map"
  .
  #hasheq((author . "georges.duperon@gmail.com")
          (authors . ("georges.duperon@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/typed-map.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/typed-map.txt")))
          (checksum . "e61454db13bab1c7749745a62821ad0a17adc26f")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("typed-map-lib" "typed-map-test" "typed-map-doc"))
          (dependency-names
           .
           ("typed-map-lib" "typed-map-test" "typed-map-doc"))
          (description
           .
           "Type inference helper for map with Typed/Racket. Supports afl (rather the unhygienic variant, aful/unhygienic), un-annotated lambdas and polymorphic functions.")
          (implies . ("typed-map-lib" "typed-map-test" "typed-map-doc"))
          (last-checked . 1557339802)
          (last-edit . 1501078475)
          (last-updated . 1555924053)
          (modules . ())
          (name . "typed-map")
          (nix-sha256
           .
           "06k7pcs5kzh6ihbl4qmcl1l7vb8nq1hbbvw13gmn5q5b7zxz5804")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:georges.duperon@gmail.com . #t)
                   (functional . #t)
                   (ring:1 . #t)
                   (typed-racket . #t)))
          (source
           .
           "https://github.com/jsmaniac/typed-map.git?path=typed-map")
          (tags . ("functional" "typed-racket"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "e61454db13bab1c7749745a62821ad0a17adc26f")
                          (source
                           .
                           "https://github.com/jsmaniac/typed-map.git?path=typed-map")
                          (source_url
                           .
                           "https://github.com/jsmaniac/typed-map.git?path=typed-map")))))))
 ("typed-map-doc"
  .
  #hasheq((author . "georges.duperon@gmail.com")
          (authors . ("georges.duperon@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "typed-map"
                    "doc/typed-map@typed-map-doc/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/typed-map-doc.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/typed-map-doc.txt")))
          (checksum . "e61454db13bab1c7749745a62821ad0a17adc26f")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "scribble-lib"
            "racket-doc"
            "typed-racket-doc"
            "aful"
            "typed-map-lib"))
          (dependency-names
           .
           ("base"
            "scribble-lib"
            "racket-doc"
            "typed-racket-doc"
            "aful"
            "typed-map-lib"))
          (description . "Documentation for typed-map")
          (implies . ())
          (last-checked . 1557339802)
          (last-edit . 1501078498)
          (last-updated . 1555924053)
          (modules . ((lib "typed-map/scribblings/typed-map.scrbl")))
          (name . "typed-map-doc")
          (nix-sha256
           .
           "06k7pcs5kzh6ihbl4qmcl1l7vb8nq1hbbvw13gmn5q5b7zxz5804")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:georges.duperon@gmail.com . #t)
                   (docs . #t)
                   (ring:1 . #t)
                   (typed-map . #t)))
          (source
           .
           "https://github.com/jsmaniac/typed-map.git?path=typed-map-doc")
          (tags . ("docs" "typed-map"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "e61454db13bab1c7749745a62821ad0a17adc26f")
                          (source
                           .
                           "https://github.com/jsmaniac/typed-map.git?path=typed-map-doc")
                          (source_url
                           .
                           "https://github.com/jsmaniac/typed-map.git?path=typed-map-doc")))))))
 ("typed-map-lib"
  .
  #hasheq((author . "georges.duperon@gmail.com")
          (authors . ("georges.duperon@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/typed-map-lib.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/typed-map-lib.txt")))
          (checksum . "e61454db13bab1c7749745a62821ad0a17adc26f")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "typed-racket-lib"))
          (dependency-names . ("base" "typed-racket-lib"))
          (description . "Implementation of typed-map")
          (implies . ())
          (last-checked . 1557339802)
          (last-edit . 1501078546)
          (last-updated . 1555924053)
          (modules . ((lib "typed-map/main.rkt")))
          (name . "typed-map-lib")
          (nix-sha256
           .
           "06k7pcs5kzh6ihbl4qmcl1l7vb8nq1hbbvw13gmn5q5b7zxz5804")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:georges.duperon@gmail.com . #t)
                   (ring:1 . #t)
                   (typed-map . #t)))
          (source
           .
           "https://github.com/jsmaniac/typed-map.git?path=typed-map-lib")
          (tags . ("typed-map"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "e61454db13bab1c7749745a62821ad0a17adc26f")
                          (source
                           .
                           "https://github.com/jsmaniac/typed-map.git?path=typed-map-lib")
                          (source_url
                           .
                           "https://github.com/jsmaniac/typed-map.git?path=typed-map-lib")))))))
 ("typed-map-test"
  .
  #hasheq((author . "georges.duperon@gmail.com")
          (authors . ("georges.duperon@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/typed-map-test.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/typed-map-test.txt")))
          (checksum . "e61454db13bab1c7749745a62821ad0a17adc26f")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "rackunit-lib"
            "typed-racket-lib"
            "typed-racket-more"
            "typed-map-lib"
            "aful"))
          (dependency-names
           .
           ("base"
            "rackunit-lib"
            "typed-racket-lib"
            "typed-racket-more"
            "typed-map-lib"
            "aful"))
          (description . "Tests for typed-map")
          (implies . ())
          (last-checked . 1557339802)
          (last-edit . 1501078564)
          (last-updated . 1555924053)
          (modules
           .
           ((lib "typed-map/test/test-map.rkt")
            (lib "typed-map/test/gh-bug-2.rkt")))
          (name . "typed-map-test")
          (nix-sha256
           .
           "06k7pcs5kzh6ihbl4qmcl1l7vb8nq1hbbvw13gmn5q5b7zxz5804")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:georges.duperon@gmail.com . #t)
                   (ring:1 . #t)
                   (tests . #t)
                   (typed-map . #t)))
          (source
           .
           "https://github.com/jsmaniac/typed-map.git?path=typed-map-test")
          (tags . ("tests" "typed-map"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "e61454db13bab1c7749745a62821ad0a17adc26f")
                          (source
                           .
                           "https://github.com/jsmaniac/typed-map.git?path=typed-map-test")
                          (source_url
                           .
                           "https://github.com/jsmaniac/typed-map.git?path=typed-map-test")))))))
 ("typed-racket"
  .
  #hash((author . "samth@racket-lang.org stamourv@racket-lang.org")
        (checksum . "3a61a4a96e0296cf50465423eb8756a36733ed9d")
        (dependencies . ("typed-racket-lib" "typed-racket-doc"))
        (dependency-names . ("typed-racket-lib" "typed-racket-doc"))
        (description . "samth@racket-lang.org stamourv@racket-lang.org")
        (modules . ())
        (name . "typed-racket")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/typed-racket.zip")
        (tags . ())))
 ("typed-racket-compatibility"
  .
  #hash((author . "samth@racket-lang.org stamourv@racket-lang.org")
        (checksum . "e0e18958fc913182993ae099c96d778e86a4f939")
        (dependencies . ("scheme-lib" "typed-racket-lib" "base"))
        (dependency-names . ("scheme-lib" "typed-racket-lib" "base"))
        (description . "samth@racket-lang.org stamourv@racket-lang.org")
        (modules . ())
        (name . "typed-racket-compatibility")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/typed-racket-compatibility.zip")
        (tags . ())))
 ("typed-racket-doc"
  .
  #hash((author . "samth@racket-lang.org stamourv@racket-lang.org")
        (checksum . "eb7e366ce9fb7d7ec63dc277d653d19d7765acd8")
        (dependencies
         .
         ("base"
          "net-doc"
          "scheme-lib"
          "srfi-lite-lib"
          "r6rs-doc"
          "srfi-doc"
          "r6rs-lib"
          "sandbox-lib"
          "at-exp-lib"
          ("scribble-lib" #:version "1.16")
          "pict-lib"
          ("typed-racket-lib" #:version "1.10")
          "typed-racket-compatibility"
          "typed-racket-more"
          "racket-doc"
          "draw-lib"))
        (dependency-names
         .
         ("base"
          "net-doc"
          "scheme-lib"
          "srfi-lite-lib"
          "r6rs-doc"
          "srfi-doc"
          "r6rs-lib"
          "sandbox-lib"
          "at-exp-lib"
          "scribble-lib"
          "pict-lib"
          "typed-racket-lib"
          "typed-racket-compatibility"
          "typed-racket-more"
          "racket-doc"
          "draw-lib"))
        (description . "samth@racket-lang.org stamourv@racket-lang.org")
        (modules . ())
        (name . "typed-racket-doc")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/typed-racket-doc.zip")
        (tags . ())))
 ("typed-racket-hacks"
  .
  #hasheq((author . "pcn@cs.umd.edu")
          (authors . ("pcn@cs.umd.edu"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log
                  .
                  "server/built/deps/typed-racket-hacks.txt")
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/typed-racket-hacks.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/typed-racket-hacks.txt")))
          (checksum . "6d462852a29abb4406d53db2587e9d463b90b2ae")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "typed-racket-lib" "set-extras"))
          (dependency-names . ("base" "typed-racket-lib" "set-extras"))
          (description
           .
           "Various workarounds for Typed Racket, most of which are expected to be eventually obsolete")
          (implies . ())
          (last-checked . 1557339802)
          (last-edit . 1520300277)
          (last-updated . 1545076018)
          (modules
           .
           ((lib "typed-racket-hacks/unsafe.rkt")
            (lib "typed-racket-hacks/tests.rkt")
            (lib "typed-racket-hacks/main.rkt")))
          (name . "typed-racket-hacks")
          (nix-sha256
           .
           "1y11mcz90y2m3wpx3sr3z7av0b6b9sxjqkiwm9vdpmb5kh6k4bzy")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-dep-fail: . #t)
                   (:build-success: . #t)
                   (author:pcn@cs.umd.edu . #t)
                   (hacks . #t)
                   (ring:2 . #t)
                   (typed-racket . #t)))
          (source
           .
           "https://github.com/philnguyen/typed-racket-hacks.git?path=typed-racket-hacks")
          (tags . ("hacks" "typed-racket"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "6d462852a29abb4406d53db2587e9d463b90b2ae")
                          (source
                           .
                           "https://github.com/philnguyen/typed-racket-hacks.git?path=typed-racket-hacks")
                          (source_url
                           .
                           "https://github.com/philnguyen/typed-racket-hacks.git?path=typed-racket-hacks")))))))
 ("typed-racket-lib"
  .
  #hash((author . "samth@racket-lang.org stamourv@racket-lang.org")
        (checksum . "867db3bde6e00cae4b7735b7eaa2ad585ef8247b")
        (dependencies
         .
         (("base" #:version "6.90.0.30")
          "source-syntax"
          "compatibility-lib"
          "string-constants-lib"))
        (dependency-names
         .
         ("base" "source-syntax" "compatibility-lib" "string-constants-lib"))
        (description . "samth@racket-lang.org stamourv@racket-lang.org")
        (modules . ())
        (name . "typed-racket-lib")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/typed-racket-lib.zip")
        (tags . ())))
 ("typed-racket-more"
  .
  #hash((author . "samth@racket-lang.org stamourv@racket-lang.org")
        (checksum . "655515f68bb21caeaaab474da55b6c9ee011d522")
        (dependencies
         .
         ("srfi-lite-lib"
          "base"
          "net-lib"
          "web-server-lib"
          "db-lib"
          "draw-lib"
          "rackunit-lib"
          "rackunit-gui"
          "rackunit-typed"
          "snip-lib"
          "typed-racket-lib"
          "gui-lib"
          "pict-lib"
          "images-lib"
          "racket-index"
          "sandbox-lib"))
        (dependency-names
         .
         ("srfi-lite-lib"
          "base"
          "net-lib"
          "web-server-lib"
          "db-lib"
          "draw-lib"
          "rackunit-lib"
          "rackunit-gui"
          "rackunit-typed"
          "snip-lib"
          "typed-racket-lib"
          "gui-lib"
          "pict-lib"
          "images-lib"
          "racket-index"
          "sandbox-lib"))
        (description . "samth@racket-lang.org stamourv@racket-lang.org")
        (modules . ())
        (name . "typed-racket-more")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/typed-racket-more.zip")
        (tags . ())))
 ("typed-racket-stream"
  .
  #hasheq((author . "alexander@knauth.org")
          (authors . ("alexander@knauth.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log
                  .
                  "server/built/install/typed-racket-stream.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/typed-racket-stream.txt")))
          (checksum . "74b0dcf6787d23ef50977134a5d232674e35adf0")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "typed-racket-lib" "typed-racket-more"))
          (dependency-names . ("base" "typed-racket-lib" "typed-racket-more"))
          (description . "Streams for typed racket")
          (implies . ())
          (last-checked . 1557339803)
          (last-edit . 1451845688)
          (last-updated . 1502816505)
          (modules
           .
           ((lib "typed/racket/stream/stream-cons-thunk-untyped.rkt")
            (lib "typed/racket/stream/stream-pred.rkt")
            (lib "typed/racket/stream.rkt")
            (lib "typed/racket/stream/stream-cons-thunk.rkt")
            (lib "typed/racket/stream/tests/test-stream.rkt")
            (lib "typed/racket/stream/stream-cons.rkt")))
          (name . "typed-racket-stream")
          (nix-sha256
           .
           "1hi15nhfdgaqbllniwbhspj8dwqqx6fgxr0cw7p0ypdly9pfhw0b")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:alexander@knauth.org . #t)
                   (ring:1 . #t)
                   (typed-racket . #t)))
          (source . "git://github.com/AlexKnauth/typed-racket-stream")
          (tags . ("typed-racket"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "74b0dcf6787d23ef50977134a5d232674e35adf0")
                          (source
                           .
                           "git://github.com/AlexKnauth/typed-racket-stream")
                          (source_url
                           .
                           "http://github.com/AlexKnauth/typed-racket-stream/tree/master")))
                 ("6.2"
                  .
                  #hasheq((checksum
                           .
                           "72ba65f2202ff1de973f7aa385f2112074b6387b")
                          (source
                           .
                           "git://github.com/AlexKnauth/typed-racket-stream#for-v-up-to-6.2.1")
                          (source_url
                           .
                           "http://github.com/AlexKnauth/typed-racket-stream/tree/master#for-v-up-to-6.2.1")))
                 ("6.2.1"
                  .
                  #hasheq((checksum
                           .
                           "72ba65f2202ff1de973f7aa385f2112074b6387b")
                          (source
                           .
                           "git://github.com/AlexKnauth/typed-racket-stream#for-v-up-to-6.2.1")
                          (source_url
                           .
                           "http://github.com/AlexKnauth/typed-racket-stream/tree/master#for-v-up-to-6.2.1")))))))
 ("typed-racket-test"
  .
  #hash((author . "samth@racket-lang.org stamourv@racket-lang.org")
        (checksum . "c03778b4a446ddad49c80c91a4f454293311dc5f")
        (dependencies
         .
         ("redex-lib"
          "sandbox-lib"
          ("base" #:version "6.2.900.16")
          ("typed-racket-lib" #:version "1.10")
          "typed-racket-more"
          "typed-racket-compatibility"
          "2d"
          "rackunit-lib"
          "racket-index"
          "compatibility-lib"
          "math-lib"
          "scheme-lib"
          "base"
          "racket-benchmarks"
          "rackunit-lib"
          "compiler-lib"
          "redex-lib"
          "htdp-lib"
          "sandbox-lib"))
        (dependency-names
         .
         ("redex-lib"
          "sandbox-lib"
          "base"
          "typed-racket-lib"
          "typed-racket-more"
          "typed-racket-compatibility"
          "2d"
          "rackunit-lib"
          "racket-index"
          "compatibility-lib"
          "math-lib"
          "scheme-lib"
          "base"
          "racket-benchmarks"
          "rackunit-lib"
          "compiler-lib"
          "redex-lib"
          "htdp-lib"
          "sandbox-lib"))
        (description . "samth@racket-lang.org stamourv@racket-lang.org")
        (modules . ())
        (name . "typed-racket-test")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/typed-racket-test.zip")
        (tags . ())))
 ("typed-rosette"
  .
  #hasheq((author . "stchang@racket-lang.org")
          (authors . ("stchang@racket-lang.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . "server/built/fail/typed-rosette.txt")
                 (min-failure-log . #f)
                 (success-log . #f)
                 (test-failure-log . #f)
                 (test-success-log . #f)))
          (checksum . "d72d4e7aad2c339fdd49c70682d56f83ab3eae3d")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           (("racket" #:version "6.8.0.3")
            "base"
            "rosette"
            "turnstile"
            "rackunit-lib"
            "lens-common"
            "lens-unstable"
            "syntax-classes-lib"
            "rackunit-lib"))
          (dependency-names
           .
           ("base"
            "rosette"
            "turnstile"
            "rackunit-lib"
            "lens-common"
            "lens-unstable"
            "syntax-classes-lib"
            "rackunit-lib"))
          (description . "A typed variant of the Rosette language.")
          (implies . ())
          (last-checked . 1557339803)
          (last-edit . 1515534266)
          (last-updated . 1533585629)
          (modules
           .
           ((lib "typed/rosette/set.rkt")
            (lib "test/synthcl-matrix-synth-tests.rkt")
            (lib "test/rosette-tests.rkt")
            (lib "typed/rosette/unsafe.rkt")
            (lib "test/rosette-guide-sec5-tests.rkt")
            (lib "test/typed-rosette/case-arrow.rkt")
            (lib "typed/rosette/list.rkt")
            (lib "test/rosette-guide-sec8-tests.rkt")
            (lib "typed/rosette/match-core.rkt")
            (lib "typed/bv/lang/reader.rkt")
            (lib "typed/rosette/struct-type-properties.rkt")
            (lib "test/matrix-verify-kernel.rkt")
            (lib "sdsl/typed-fsm/fsm.rkt")
            (lib "typed/rosette/base-forms.rkt")
            (lib "sdsl/typed-ifc/ifc.rkt")
            (lib "typed/query/debug.rkt")
            (lib "test/rosette-guide-sec43-tests.rkt")
            (lib "test/synthcl-matrix-verify-tests.rkt")
            (lib "test/typed-rosette/occurrence.rkt")
            (lib "typed/lib/angelic.rkt")
            (lib "sdsl/typed-synthcl/synthcl-model.rkt")
            (lib "test/walsh-synth-kernel.rkt")
            (lib "test/synthcl-walsh-verify-tests.rkt")
            (lib "test/synthcl-walsh-synth-tests.rkt")
            (lib "test/rosette-guide-sec45-tests.rkt")
            (lib "test/sobel-kernel.rkt")
            (lib "typed/lib/synthax.rkt")
            (lib "test/rosette-guide-sec4-tests.rkt")
            (lib "test/synthcl-tests.rkt")
            (lib "typed/lib/roseunit.rkt")
            (lib "sdsl/typed-bv/bv.rkt")
            (lib "typed/rosette/bool.rkt")
            (lib "test/rosette-guide-sec49-tests.rkt")
            (lib "typed/rosette/types.rkt")
            (lib "test/rosette-guide-sec46-tests.rkt")
            (lib "typed/rosette/vector.rkt")
            (lib "typed/ifc/lang/reader.rkt")
            (lib "test/rosette-guide-sec7-tests.rkt")
            (lib "test/synthcl-matrix-verify-buggy-tests.rkt")
            (lib "typed/rosette-util.rkt")
            (lib "typed/lib/check-asserts.rkt")
            (lib "test/bv-ref-tests.rkt")
            (lib "test/synthcl-sobel-tests.rkt")
            (lib "typed/rosette/lang/reader.rkt")
            (lib "sdsl/typed-synthcl/synthcl.rkt")
            (lib "typed/fsm/lang/reader.rkt")
            (lib "test/walsh-verify-kernel.rkt")
            (lib "typed/rosette/format.rkt")
            (lib "typed/rosette/hash.rkt")
            (lib "test/typed-rosette/occurrence2.rkt")
            (lib "test/typed-rosette/for-all-union.rkt")
            (lib "test/rosette-guide-sec3-tests.rkt")
            (lib "typed/rosette/function.rkt")
            (lib "typed/lib/render.rkt")
            (lib "test/rosette-guide-sec2-tests.rkt")
            (lib "typed/lib/lift.rkt")
            (lib "test/quote-tests.rkt")
            (lib "typed/main.rkt")
            (lib "typed/rosette/generic-interfaces.rkt")
            (lib "test/fsm-tests.rkt")
            (lib "test/matrix-synth-kernel.rkt")
            (lib "typed/rosette.rkt")
            (lib "typed/rosette/concrete-predicate.rkt")
            (lib "typed/rosette/for-forms.rkt")
            (lib "test/typed-rosette/rest-arg.rkt")
            (lib "test/rosette-guide-sec6-tests.rkt")
            (lib "test/rosette-guide-sec44-tests.rkt")
            (lib "test/typed-rosette/for-tests.rkt")
            (lib "typed/synthcl/lang/reader.rkt")
            (lib "typed/rosette/struct.rkt")
            (lib "typed/rosette/match-pat-forms.rkt")
            (lib "test/ifc-tests.rkt")
            (lib "test/typed-rosette/test-type-decl.rkt")
            (lib "typed/rosette/forms-pre-match.rkt")
            (lib "test/bv-test-utils.rkt")
            (lib "test/bv-tests.rkt")))
          (name . "typed-rosette")
          (nix-sha256
           .
           "0nav2rs3a4hpad9f5ccib4mhwh9fwix0rwi9hqg8ipx4ilcqs30a")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-fail: . #t)
                   (author:stchang@racket-lang.org . #t)
                   (ring:2 . #t)
                   (rosette . #t)
                   (symbolic-execution . #t)
                   (typed . #t)))
          (source . "https://github.com/stchang/typed-rosette.git")
          (tags . ("rosette" "symbolic-execution" "typed"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "d72d4e7aad2c339fdd49c70682d56f83ab3eae3d")
                          (source
                           .
                           "https://github.com/stchang/typed-rosette.git")
                          (source_url
                           .
                           "https://github.com/stchang/typed-rosette.git")))))))
 ("typed-stack"
  .
  #hasheq((author . "lehi@tosk.in")
          (authors . ("lehi@tosk.in"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "typed-stack"
                    "doc/typed-stack@typed-stack/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/typed-stack.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/typed-stack.txt")))
          (checksum . "f6e63310ea20e147f9fbb80e5fb9768b6905f7aa")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "typed-racket-more"
            "typed-racket-lib"
            "scribble-lib"
            "typed-racket-doc"
            "racket-doc"))
          (dependency-names
           .
           ("base"
            "typed-racket-more"
            "typed-racket-lib"
            "scribble-lib"
            "typed-racket-doc"
            "racket-doc"))
          (description . "A simple stack library written in TR.")
          (implies . ())
          (last-checked . 1557339803)
          (last-edit . 1486890793)
          (last-updated . 1513747039)
          (modules
           .
           ((lib "typed-stack/main.rkt")
            (lib "typed-stack/test/stack-test.rkt")
            (lib "typed-stack/doc/typed-stack.scrbl")
            (lib "typed-stack/typed-stack.rkt")))
          (name . "typed-stack")
          (nix-sha256
           .
           "17wy3h04ndz86s8ka7csf4v2ni8sjcvfbwyxc2k1j1dnnv510m7a")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:lehi@tosk.in . #t)
                   (ring:1 . #t)
                   (stack . #t)
                   (typed-racket . #t)))
          (source . "git://github.com/lehitoskin/typed-stack")
          (tags . ("stack" "typed-racket"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "f6e63310ea20e147f9fbb80e5fb9768b6905f7aa")
                          (source . "git://github.com/lehitoskin/typed-stack")
                          (source_url
                           .
                           "http://github.com/lehitoskin/typed-stack/tree/master")))))))
 ("typed-struct-props"
  .
  #hasheq((author . "georges.duperon@gmail.com")
          (authors . ("georges.duperon@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "typed-struct-props"
                    "doc/typed-struct-props@typed-struct-props/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/typed-struct-props.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/typed-struct-props.txt")))
          (checksum . "416c1123a7043eaf08e803cf91317b49f030fc18")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "rackunit-lib"
            "typed-racket-lib"
            "typed-racket-more"
            "type-expander"
            "scribble-lib"
            "racket-doc"
            "typed-racket-doc"))
          (dependency-names
           .
           ("base"
            "rackunit-lib"
            "typed-racket-lib"
            "typed-racket-more"
            "type-expander"
            "scribble-lib"
            "racket-doc"
            "typed-racket-doc"))
          (description
           .
           "Some struct type properties in Typed/Racket, in a more type-safe way.\r\n\r\nThe API should hopefully stay backward-compatible when Typed/Racket officially supports (or rejects) structure type properties.")
          (implies . ())
          (last-checked . 1557339803)
          (last-edit . 1473027055)
          (last-updated . 1555924055)
          (modules
           .
           ((lib "typed-struct-props/test/test-after.rkt")
            (lib "typed-struct-props/scribblings/typed-struct-props.scrbl")
            (lib "typed-struct-props/test/test-none.rkt")
            (lib "typed-struct-props/test/test-write+equal+hash-poly.rkt")
            (lib "typed-struct-props/test/test-write.rkt")
            (lib "typed-struct-props/test/test-parent.rkt")
            (lib "typed-struct-props/test/test-child.rkt")
            (lib "typed-struct-props/test/test-write+equal+hash.rkt")
            (lib "typed-struct-props/test/test-equal+hash.rkt")
            (lib "typed-struct-props/test/test-equal+hash-poly.rkt")
            (lib "typed-struct-props/test/test-none-poly.rkt")
            (lib "typed-struct-props/test/test-write-poly.rkt")
            (lib "typed-struct-props/main.rkt")
            (lib "typed-struct-props/test/test-poly.rkt")))
          (name . "typed-struct-props")
          (nix-sha256
           .
           "1wkfp6s778xprk3wb8wx1j6giqk53gh8yy4xzh6nn1p4baf10gds")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:georges.duperon@gmail.com . #t)
                   (ring:1 . #t)
                   (structs . #t)
                   (typed-racket . #t)))
          (source . "https://github.com/jsmaniac/typed-struct-props.git")
          (tags . ("structs" "typed-racket"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "416c1123a7043eaf08e803cf91317b49f030fc18")
                          (source
                           .
                           "https://github.com/jsmaniac/typed-struct-props.git")
                          (source_url
                           .
                           "https://github.com/jsmaniac/typed-struct-props.git")))))))
 ("typed-worklist"
  .
  #hasheq((author . "georges.duperon@gmail.com")
          (authors . ("georges.duperon@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "typed-worklist"
                    "doc/typed-worklist@typed-worklist/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/typed-worklist.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/typed-worklist.txt")))
          (checksum . "976b85d9c6c7956184e0c3843a15bc727173719c")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           (("base" "6.6.0.900")
            "rackunit-lib"
            "type-expander"
            "typed-racket-lib"
            "typed-racket-more"
            "scribble-lib"
            "racket-doc"))
          (dependency-names
           .
           ("base"
            "rackunit-lib"
            "type-expander"
            "typed-racket-lib"
            "typed-racket-more"
            "scribble-lib"
            "racket-doc"))
          (description
           .
           "A Typed Racket implementation of a general-purpose worklist, with multiple worklists of different types.")
          (implies . ())
          (last-checked . 1557339803)
          (last-edit . 1492714040)
          (last-updated . 1556147252)
          (modules
           .
           ((lib "typed-worklist/main.rkt")
            (lib "typed-worklist/scribblings/typed-worklist.scrbl")
            (lib "typed-worklist/test/test-experiment.rkt")))
          (name . "typed-worklist")
          (nix-sha256
           .
           "18c59ff2n2mmnyjn1s24i01nc9ws6mrxcyygxzisnnmbl8ff1w58")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:georges.duperon@gmail.com . #t)
                   (ring:1 . #t)
                   (typed-racket . #t)
                   (utility . #t)))
          (source . "https://github.com/jsmaniac/typed-worklist.git")
          (tags . ("typed-racket" "utility"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "976b85d9c6c7956184e0c3843a15bc727173719c")
                          (source
                           .
                           "https://github.com/jsmaniac/typed-worklist.git")
                          (source_url
                           .
                           "https://github.com/jsmaniac/typed-worklist.git")))))))
 ("typeset-rewriter"
  .
  #hasheq((author . "sgtamk@gmail.com")
          (authors . ("sgtamk@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/typeset-rewriter.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/typeset-rewriter.txt")))
          (checksum . "9737f385b57a74564221ebd719c01f4180fbf6f8")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "redex-pict-lib"))
          (dependency-names . ("base" "redex-pict-lib"))
          (description
           .
           "Simple, low-level rewriter tools for typesetting PLT Redex models")
          (implies . ())
          (last-checked . 1557339803)
          (last-edit . 1476382398)
          (last-updated . 1502816508)
          (modules . ((lib "typeset-rewriter/main.rkt")))
          (name . "typeset-rewriter")
          (nix-sha256
           .
           "13zzdpr913whkhzrq4qrniv6h6l09r7fyh264nj5b5l1j2j5jqha")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:sgtamk@gmail.com . #t)
                   (redex . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/pnwamk/typeset-rewriter#master")
          (tags . ("redex"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "9737f385b57a74564221ebd719c01f4180fbf6f8")
                          (source
                           .
                           "git://github.com/pnwamk/typeset-rewriter#master")
                          (source_url
                           .
                           "http://github.com/pnwamk/typeset-rewriter/tree/master#master")))))))
 ("tzdata"
  .
  #hasheq((author . "zeppieri@gmail.com")
          (authors . ("zeppieri@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/tzdata.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/tzdata.txt")))
          (checksum . "1fd6159dcc525e5a48701021d2547487a149f48e")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base"))
          (dependency-names . ("base"))
          (description
           .
           "zoneinfo data mainly for Windows systems using tzinfo")
          (implies . ())
          (last-checked . 1557339803)
          (last-edit . 1426995763)
          (last-updated . 1548038608)
          (modules . ())
          (name . "tzdata")
          (nix-sha256
           .
           "1fy5k6gdch75r3613py8aga1kg22vag317mvpxpz321ck6c3hw9f")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:zeppieri@gmail.com . #t)
                   (ring:1 . #t)
                   (timezone . #t)))
          (source . "git://github.com/97jaz/tzdata")
          (tags . ("timezone"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "1fd6159dcc525e5a48701021d2547487a149f48e")
                          (source . "git://github.com/97jaz/tzdata")
                          (source_url
                           .
                           "http://github.com/97jaz/tzdata/tree/master")))))))
 ("tzinfo"
  .
  #hasheq((author . "zeppieri@gmail.com")
          (authors . ("zeppieri@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "tzinfo" "doc/tzinfo@tzinfo/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/tzinfo.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/tzinfo.txt")))
          (checksum . "7f3ea1120d410febb10aea2ef7fc732ffbd979db")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "cldr-core"
            "rackunit-lib"
            ("tzdata" #:platform windows #:version "0.3")
            "racket-doc"
            "scribble-lib"))
          (dependency-names
           .
           ("base"
            "cldr-core"
            "rackunit-lib"
            "tzdata"
            "racket-doc"
            "scribble-lib"))
          (description . "API for querying the IANA tz database")
          (implies . ())
          (last-checked . 1557339804)
          (last-edit . 1427001065)
          (last-updated . 1551294439)
          (modules
           .
           ((lib "tzinfo/private/os/unix.rkt")
            (lib "tzinfo/private/tzfile-parser.rkt")
            (lib "tzinfo/zoneinfo.rkt")
            (lib "tzinfo/private/structs.rkt")
            (lib "tzinfo/private/os/windows.rkt")
            (lib "tzinfo/test/zoneinfo.rkt")
            (lib "tzinfo/private/os/windows-registry.rkt")
            (lib "tzinfo/private/zoneinfo.rkt")
            (lib "tzinfo/private/zoneinfo-search.rkt")
            (lib "tzinfo/private/tabfile-parser.rkt")
            (lib "tzinfo/private/generics.rkt")
            (lib "tzinfo/main.rkt")
            (lib "tzinfo/source.rkt")
            (lib "tzinfo/private/os/env.rkt")
            (lib "tzinfo/scribblings/tzinfo.scrbl")))
          (name . "tzinfo")
          (nix-sha256
           .
           "0kx37zyrckc5yvr3h0b6pc6a7qch1vghr45fxagshcys36fjca08")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:zeppieri@gmail.com . #t)
                   (ring:1 . #t)
                   (timezone . #t)))
          (source . "git://github.com/97jaz/tzinfo")
          (tags . ("timezone"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "7f3ea1120d410febb10aea2ef7fc732ffbd979db")
                          (source . "git://github.com/97jaz/tzinfo")
                          (source_url
                           .
                           "http://github.com/97jaz/tzinfo/tree/master")))))))
 ("udelim"
  .
  #hasheq((author . "willghatch@gmail.com")
          (authors . ("willghatch@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "udelim" "doc/udelim@udelim/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/udelim.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/udelim.txt")))
          (checksum . "0952a8263c8e6cf1e7cd60e2daed62008246f25e")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base" "racket-doc" "scribble-lib" "sandbox-lib" "rackunit-lib"))
          (dependency-names
           .
           ("base" "racket-doc" "scribble-lib" "sandbox-lib" "rackunit-lib"))
          (description . "Add more parens and string delimiters.")
          (implies . ())
          (last-checked . 1557339804)
          (last-edit . 1523469688)
          (last-updated . 1551467245)
          (modules
           .
           ((lib "udelim/defaults.rkt")
            (lib "udelim/main.rkt")
            (lib "udelim/lang/reader.rkt")
            (lib "udelim/udelim.scrbl")))
          (name . "udelim")
          (nix-sha256
           .
           "1wp0maw0b8qj6dwgpgf9mhqj3dgz5pnsrwimx1ar1w3rzbgrxd4n")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:willghatch@gmail.com . #t)
                   (reader . #t)
                   (ring:1 . #t)))
          (source . "https://github.com/willghatch/racket-udelim.git")
          (tags . ("reader"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "0952a8263c8e6cf1e7cd60e2daed62008246f25e")
                          (source
                           .
                           "https://github.com/willghatch/racket-udelim.git")
                          (source_url
                           .
                           "https://github.com/willghatch/racket-udelim.git")))))))
 ("udev"
  .
  #hasheq((author . "mordae@anilinux.org")
          (authors . ("mordae@anilinux.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/udev.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/udev.txt")))
          (checksum . "de2cbf3f9b3fb754aecce1bf5ee64811e1700c5b")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "scribble-lib" "misc1"))
          (dependency-names . ("base" "scribble-lib" "misc1"))
          (description . "udev bindings for Racket")
          (implies . ())
          (last-checked . 1557339804)
          (last-edit . 1437487719)
          (last-updated . 1502816509)
          (modules . ((lib "udev/private/ffi.rkt") (lib "udev/main.rkt")))
          (name . "udev")
          (nix-sha256
           .
           "0jvr47r66l3qbn2dmkrw10pi7wzd6np7y85sa1md7frg9s187wvx")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:mordae@anilinux.org . #t)
                   (ffi . #t)
                   (linux . #t)
                   (ring:1 . #t)))
          (source . "github://github.com/mordae/racket-udev/master")
          (tags . ("ffi" "linux"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "de2cbf3f9b3fb754aecce1bf5ee64811e1700c5b")
                          (source
                           .
                           "github://github.com/mordae/racket-udev/master")
                          (source_url
                           .
                           "http://github.com/mordae/racket-udev/tree/master")))))))
 ("unicode-properties"
  .
  #hasheq((author . "clements@racket-lang.org")
          (authors . ("clements@racket-lang.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "unicode"
                    "doc/unicode@unicode-properties/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/unicode-properties.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/unicode-properties.txt")))
          (checksum . "c72c6c7678e44257bde7a8a4973196b064a9237f")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "rackunit-lib" "scribble-lib" "racket-doc"))
          (dependency-names
           .
           ("base" "rackunit-lib" "scribble-lib" "racket-doc"))
          (description
           .
           "This package provides definitions for several unicode properties, and also an auto-update mechanism that can extract additional ones.")
          (implies . ())
          (last-checked . 1557339804)
          (last-edit . 1367965731)
          (last-updated . 1513624646)
          (modules
           .
           ((lib "unicode-props/unicode.scrbl")
            (lib "unicode-props/test.rkt")
            (lib "unicode-props/derived-core-properties.rkt")
            (lib "unicode-props/compute-prop.rkt")
            (lib "unicode-props/main.rkt")
            (lib "unicode-props/derived-binary-properties.rkt")
            (lib "unicode-props/fn-and-ranges.rkt")))
          (name . "unicode-properties")
          (nix-sha256
           .
           "1680a8wyw9y7zbk0zbxr7axw7fkh9zb719iy0p4jzy8q5p54f30x")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:clements@racket-lang.org . #t)
                   (io . #t)
                   (ring:1 . #t)
                   (unicode . #t)))
          (source . "github://github.com/jbclements/unicode-props/master")
          (tags . ("io" "unicode"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "c72c6c7678e44257bde7a8a4973196b064a9237f")
                          (source
                           .
                           "github://github.com/jbclements/unicode-props/master")
                          (source_url
                           .
                           "http://github.com/jbclements/unicode-props/tree/master")))))))
 ("unix-signals"
  .
  #hasheq((author . "tonygarnockjones@gmail.com")
          (authors . ("tonygarnockjones@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "unix-signals"
                    "doc/unix-signals@unix-signals/index.html")))
                 (failure-log . #f)
                 (min-failure-log . "server/built/min-fail/unix-signals.txt")
                 (success-log . "server/built/install/unix-signals.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/unix-signals.txt")))
          (checksum . "7231d17617a013da8f0b057f479f3c189d56daf6")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base" "rackunit-lib" "make" "racket-doc" "scribble-lib"))
          (dependency-names
           .
           ("base" "rackunit-lib" "make" "racket-doc" "scribble-lib"))
          (description . "Sending and handling Unix signals from Racket")
          (implies . ())
          (last-checked . 1557339804)
          (last-edit . 1473801462)
          (last-updated . 1502816510)
          (modules
           .
           ((lib "unix-signals/private/install.rkt")
            (lib "unix-signals/main.rkt")
            (lib "unix-signals/unix-signals.scrbl")))
          (name . "unix-signals")
          (nix-sha256
           .
           "03yy3dq1rnibsg1xg7c6cjpk37d7rnrrk0ipbvrwx8s3r6hdvai2")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:tonygarnockjones@gmail.com . #t)
                   (ring:1 . #t)
                   (unix . #t)))
          (source . "git://github.com/tonyg/racket-unix-signals")
          (tags . ("unix"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "7231d17617a013da8f0b057f479f3c189d56daf6")
                          (source
                           .
                           "git://github.com/tonyg/racket-unix-signals")
                          (source_url
                           .
                           "http://github.com/tonyg/racket-unix-signals/tree/master")))))))
 ("unix-socket"
  .
  #hash((author . "ryanc@racket-lang.org")
        (checksum . "98a0d29889301a8fb9a6580702d6ed1ab9eb1fe7")
        (dependencies . ("unix-socket-lib" "unix-socket-doc"))
        (dependency-names . ("unix-socket-lib" "unix-socket-doc"))
        (description . "ryanc@racket-lang.org")
        (modules . ())
        (name . "unix-socket")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/unix-socket.zip")
        (tags . ())))
 ("unix-socket-doc"
  .
  #hash((author . "ryanc@racket-lang.org")
        (checksum . "ea521fdf0c1fdb2f261ad515da120271240dfddf")
        (dependencies
         .
         ("base"
          ("unix-socket-lib" #:version "1.2")
          "scribble-lib"
          "racket-doc"))
        (dependency-names
         .
         ("base" "unix-socket-lib" "scribble-lib" "racket-doc"))
        (description . "ryanc@racket-lang.org")
        (modules . ())
        (name . "unix-socket-doc")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/unix-socket-doc.zip")
        (tags . ())))
 ("unix-socket-lib"
  .
  #hash((author . "ryanc@racket-lang.org")
        (checksum . "50f655e24079d4d6845dcddd2d22e5db2148a57e")
        (dependencies . (("base" #:version "6.11.0.5")))
        (dependency-names . ("base"))
        (description . "ryanc@racket-lang.org")
        (modules . ())
        (name . "unix-socket-lib")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/unix-socket-lib.zip")
        (tags . ())))
 ("unix-socket-test"
  .
  #hash((author . "ryanc@racket-lang.org")
        (checksum . "f8b78e26310292859bc311c09665b7824338d6f3")
        (dependencies
         .
         ("base" "rackunit-lib" ("unix-socket-lib" #:version "1.2")))
        (dependency-names . ("base" "rackunit-lib" "unix-socket-lib"))
        (description . "ryanc@racket-lang.org")
        (modules . ())
        (name . "unix-socket-test")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/unix-socket-test.zip")
        (tags . ())))
 ("unreachable"
  .
  #hasheq((author . "pcn@cs.umd.edu")
          (authors . ("pcn@cs.umd.edu"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . "server/built/deps/unreachable.txt")
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/unreachable.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/unreachable.txt")))
          (checksum . "a7d303d673ebb887ed49550ee27da307948cda37")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base"))
          (dependency-names . ("base"))
          (description
           .
           "Utilities for expressing supposedly unreachable code")
          (implies . ())
          (last-checked . 1557339805)
          (last-edit . 1513906987)
          (last-updated . 1536947952)
          (modules
           .
           ((lib "unreachable/test.rkt") (lib "unreachable/main.rkt")))
          (name . "unreachable")
          (nix-sha256
           .
           "0wdax75gbysr94vlz0g7s54svf4a5ixh14l2hjb7z5y2z7gj74ky")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-dep-fail: . #t)
                   (:build-success: . #t)
                   (absurd . #t)
                   (author:pcn@cs.umd.edu . #t)
                   (case . #t)
                   (cond . #t)
                   (dead-code . #t)
                   (ring:2 . #t)
                   (unreachable . #t)))
          (source
           .
           "https://github.com/philnguyen/unreachable.git?path=unreachable")
          (tags . ("absurd" "case" "cond" "dead-code" "unreachable"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "a7d303d673ebb887ed49550ee27da307948cda37")
                          (source
                           .
                           "https://github.com/philnguyen/unreachable.git?path=unreachable")
                          (source_url
                           .
                           "https://github.com/philnguyen/unreachable.git?path=unreachable")))))))
 ("unstable"
  .
  #hash((author
         .
         "jay@racket-lang.org samth@racket-lang.org cce@racket-lang.org ryanc@racket-lang.org")
        (authors
         .
         ("jay@racket-lang.org"
          "samth@racket-lang.org"
          "cce@racket-lang.org"
          "ryanc@racket-lang.org"))
        (build
         .
         #hash((conflicts-log . #f)
               (dep-failure-log . #f)
               (docs . ())
               (failure-log . #f)
               (min-failure-log . #f)
               (success-log . "server/built/install/unstable.txt")
               (test-failure-log . #f)
               (test-success-log . "server/built/test-success/unstable.txt")))
        (checksum . "480535837da0cc72112b9edc601885620ba8a55d")
        (checksum-error . #f)
        (conflicts . ())
        (dependencies . ("unstable-lib" "unstable-doc"))
        (dependency-names . ("unstable-lib" "unstable-doc"))
        (description . "Experimental libraries")
        (implies . ("unstable-lib" "unstable-doc"))
        (last-checked . 1557339805)
        (last-edit . 1445382797)
        (last-updated . 1536095099)
        (modules . ())
        (name . "unstable")
        (nix-sha256 . "1l133jg699d8cn4gylv279vcaanzskna40ffdzapvl3fzn8r5v5s")
        (ring . 0)
        (search-terms
         .
         #hasheq((:build-success: . #t)
                 (author:cce@racket-lang.org . #t)
                 (author:jay@racket-lang.org . #t)
                 (author:ryanc@racket-lang.org . #t)
                 (author:samth@racket-lang.org . #t)
                 (ring:0 . #t)
                 (unstable . #t)))
        (source . "git://github.com/racket/unstable/?path=unstable")
        (tags . ("unstable"))
        (versions
         .
         #hash((default
                .
                #hasheq((checksum
                         .
                         "480535837da0cc72112b9edc601885620ba8a55d")
                        (source
                         .
                         "git://github.com/racket/unstable/?path=unstable")
                        (source_url
                         .
                         "git://github.com/racket/unstable/?path=unstable")))
               ("5.3.4"
                .
                #hash((checksum . "9f098dddde7f217879070816090c1e8e74d49432")
                      (source
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")
                      (source_url
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")))
               ("5.3.5"
                .
                #hash((checksum . "9f098dddde7f217879070816090c1e8e74d49432")
                      (source
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")
                      (source_url
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")))
               ("5.3.6"
                .
                #hash((checksum . "9f098dddde7f217879070816090c1e8e74d49432")
                      (source
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")
                      (source_url
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")))))))
 ("unstable-2d"
  .
  #hash((author . "robby@racket-lang.org")
        (authors . ("robby@racket-lang.org"))
        (build
         .
         #hash((conflicts-log . #f)
               (dep-failure-log . #f)
               (docs . ())
               (failure-log . #f)
               (min-failure-log . #f)
               (success-log . "server/built/install/unstable-2d.txt")
               (test-failure-log . #f)
               (test-success-log
                .
                "server/built/test-success/unstable-2d.txt")))
        (checksum . "abe368e38bf860c607a6b11c212e86519ac8f80e")
        (checksum-error . #f)
        (conflicts . ())
        (dependencies . ("base" "2d-lib"))
        (dependency-names . ("base" "2d-lib"))
        (description . "Experimental 2d syntax")
        (implies . ())
        (last-checked . 1557339805)
        (last-edit . 1445382797)
        (last-updated . 1502816512)
        (modules
         .
         ((lib "unstable/2d/lang/reader.rkt")
          (lib "unstable/2d/cond.rkt")
          (lib "unstable/2d/match.rkt")
          (lib "unstable/2d/tabular.rkt")
          (lib "unstable/2d/dir-chars.rkt")))
        (name . "unstable-2d")
        (nix-sha256 . "1vdhglzwzljy03ca4b6h9mdfk6wz89cgyplapiy4xc1ijxh3197l")
        (ring . 0)
        (search-terms
         .
         #hasheq((:build-success: . #t)
                 (author:robby@racket-lang.org . #t)
                 (ring:0 . #t)
                 (unstable . #t)))
        (source . "git://github.com/racket/unstable-2d")
        (tags . ("unstable"))
        (versions
         .
         #hash((default
                .
                #hasheq((checksum
                         .
                         "abe368e38bf860c607a6b11c212e86519ac8f80e")
                        (source . "git://github.com/racket/unstable-2d")
                        (source_url
                         .
                         "http://github.com/racket/unstable-2d/tree/master")))
               ("5.3.4"
                .
                #hash((checksum . "9f098dddde7f217879070816090c1e8e74d49432")
                      (source
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")
                      (source_url
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")))
               ("5.3.5"
                .
                #hash((checksum . "9f098dddde7f217879070816090c1e8e74d49432")
                      (source
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")
                      (source_url
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")))
               ("5.3.6"
                .
                #hash((checksum . "9f098dddde7f217879070816090c1e8e74d49432")
                      (source
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")
                      (source_url
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")))))))
 ("unstable-contract-lib"
  .
  #hash((author . "robby@racket-lang.org ryanc@racket-lang.org")
        (authors . ("robby@racket-lang.org" "ryanc@racket-lang.org"))
        (build
         .
         #hash((conflicts-log . #f)
               (dep-failure-log . #f)
               (docs . ())
               (failure-log . #f)
               (min-failure-log . #f)
               (success-log
                .
                "server/built/install/unstable-contract-lib.txt")
               (test-failure-log . #f)
               (test-success-log
                .
                "server/built/test-success/unstable-contract-lib.txt")))
        (checksum . "36f4e320c574cef6630ec34ac73f69a2911b86b0")
        (checksum-error . #f)
        (conflicts . ())
        (dependencies . ("base"))
        (dependency-names . ("base"))
        (description . "Experimental libraries for working with contracts")
        (implies . ())
        (last-checked . 1557339805)
        (last-edit . 1445382797)
        (last-updated . 1502816512)
        (modules . ((lib "unstable/contract.rkt")))
        (name . "unstable-contract-lib")
        (nix-sha256 . "1m8rp3kqfg6lmm96hlaknns0014dvixik6sm4qxjsf80dfvp57wf")
        (ring . 0)
        (search-terms
         .
         #hasheq((:build-success: . #t)
                 (author:robby@racket-lang.org . #t)
                 (author:ryanc@racket-lang.org . #t)
                 (ring:0 . #t)
                 (unstable . #t)))
        (source . "git://github.com/racket/unstable-contract-lib")
        (tags . ("unstable"))
        (versions
         .
         #hash((default
                .
                #hasheq((checksum
                         .
                         "36f4e320c574cef6630ec34ac73f69a2911b86b0")
                        (source
                         .
                         "git://github.com/racket/unstable-contract-lib")
                        (source_url
                         .
                         "http://github.com/racket/unstable-contract-lib/tree/master")))
               ("5.3.4"
                .
                #hash((checksum . "9f098dddde7f217879070816090c1e8e74d49432")
                      (source
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")
                      (source_url
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")))
               ("5.3.5"
                .
                #hash((checksum . "9f098dddde7f217879070816090c1e8e74d49432")
                      (source
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")
                      (source_url
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")))
               ("5.3.6"
                .
                #hash((checksum . "9f098dddde7f217879070816090c1e8e74d49432")
                      (source
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")
                      (source_url
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")))))))
 ("unstable-debug-lib"
  .
  #hash((author . "samth@racket-lang.org")
        (authors . ("samth@racket-lang.org"))
        (build
         .
         #hash((conflicts-log . #f)
               (dep-failure-log . #f)
               (docs . ())
               (failure-log . #f)
               (min-failure-log . #f)
               (success-log . "server/built/install/unstable-debug-lib.txt")
               (test-failure-log . #f)
               (test-success-log
                .
                "server/built/test-success/unstable-debug-lib.txt")))
        (checksum . "f72727898e9a59429eeb419752f5c55926d1a6c4")
        (checksum-error . #f)
        (conflicts . ())
        (dependencies . (("base" #:version "6.2.900.15")))
        (dependency-names . ("base"))
        (description . "Experimental libraries for debugging")
        (implies . ())
        (last-checked . 1557339805)
        (last-edit . 1445382797)
        (last-updated . 1502816513)
        (modules . ((lib "unstable/debug.rkt")))
        (name . "unstable-debug-lib")
        (nix-sha256 . "195bjfbgf42gbrdpay4zscwlq493xpnaik683vzmqms3akdykhxl")
        (ring . 0)
        (search-terms
         .
         #hasheq((:build-success: . #t)
                 (author:samth@racket-lang.org . #t)
                 (ring:0 . #t)
                 (unstable . #t)))
        (source . "git://github.com/racket/unstable-debug-lib")
        (tags . ("unstable"))
        (versions
         .
         #hash((default
                .
                #hasheq((checksum
                         .
                         "f72727898e9a59429eeb419752f5c55926d1a6c4")
                        (source
                         .
                         "git://github.com/racket/unstable-debug-lib")
                        (source_url
                         .
                         "http://github.com/racket/unstable-debug-lib/tree/master")))
               ("5.3.4"
                .
                #hash((checksum . "9f098dddde7f217879070816090c1e8e74d49432")
                      (source
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")
                      (source_url
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")))
               ("5.3.5"
                .
                #hash((checksum . "9f098dddde7f217879070816090c1e8e74d49432")
                      (source
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")
                      (source_url
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")))
               ("5.3.6"
                .
                #hash((checksum . "9f098dddde7f217879070816090c1e8e74d49432")
                      (source
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")
                      (source_url
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")))))))
 ("unstable-doc"
  .
  #hash((author
         .
         "jay@racket-lang.org samth@racket-lang.org cce@racket-lang.org ryanc@racket-lang.org")
        (authors
         .
         ("jay@racket-lang.org"
          "samth@racket-lang.org"
          "cce@racket-lang.org"
          "ryanc@racket-lang.org"))
        (build
         .
         #hash((conflicts-log . #f)
               (dep-failure-log . #f)
               (docs
                .
                (("main" "unstable" "doc/unstable@unstable-doc/index.html")
                 ("main"
                  "unstable-gui"
                  "doc/unstable-gui@unstable-doc/index.html")))
               (failure-log . #f)
               (min-failure-log . #f)
               (success-log . "server/built/install/unstable-doc.txt")
               (test-failure-log . #f)
               (test-success-log
                .
                "server/built/test-success/unstable-doc.txt")))
        (checksum . "480535837da0cc72112b9edc601885620ba8a55d")
        (checksum-error . #f)
        (conflicts . ())
        (dependencies
         .
         ("base"
          "rackunit-doc"
          "scheme-lib"
          "at-exp-lib"
          "compatibility-lib"
          "draw-lib"
          "gui-lib"
          "pict-lib"
          "racket-doc"
          "rackunit-lib"
          "scribble-lib"
          "slideshow-lib"
          "typed-racket-lib"
          "unstable-contract-lib"
          "unstable-debug-lib"
          "unstable-lib"
          "unstable-list-lib"
          "unstable-macro-testing-lib"
          "unstable-options-lib"
          "unstable-parameter-group-lib"
          "unstable-pretty-lib"
          "unstable-2d"
          "draw-doc"
          "gui-doc"
          "pict-doc"
          "scribble-doc"
          "slideshow-doc"
          "class-iop-doc"
          "automata-doc"
          "markparam-doc"
          "temp-c-doc"
          "unix-socket-doc"
          "2d-doc"
          "option-contract-doc"))
        (dependency-names
         .
         ("base"
          "rackunit-doc"
          "scheme-lib"
          "at-exp-lib"
          "compatibility-lib"
          "draw-lib"
          "gui-lib"
          "pict-lib"
          "racket-doc"
          "rackunit-lib"
          "scribble-lib"
          "slideshow-lib"
          "typed-racket-lib"
          "unstable-contract-lib"
          "unstable-debug-lib"
          "unstable-lib"
          "unstable-list-lib"
          "unstable-macro-testing-lib"
          "unstable-options-lib"
          "unstable-parameter-group-lib"
          "unstable-pretty-lib"
          "unstable-2d"
          "draw-doc"
          "gui-doc"
          "pict-doc"
          "scribble-doc"
          "slideshow-doc"
          "class-iop-doc"
          "automata-doc"
          "markparam-doc"
          "temp-c-doc"
          "unix-socket-doc"
          "2d-doc"
          "option-contract-doc"))
        (description . "documentation part of \"unstable\"")
        (implies . ())
        (last-checked . 1557339805)
        (last-edit . 1445382797)
        (last-updated . 1536095100)
        (modules
         .
         ((lib "unstable/scribblings/find.scrbl")
          (lib "unstable/scribblings/class-iop.scrbl")
          (lib "unstable/scribblings/match.scrbl")
          (lib "unstable/scribblings/logging.scrbl")
          (lib "unstable/scribblings/gui/pict.scrbl")
          (lib "unstable/scribblings/sandbox.scrbl")
          (lib "unstable/scribblings/automata.scrbl")
          (lib "unstable/scribblings/contract.scrbl")
          (lib "unstable/scribblings/options.scrbl")
          (lib "unstable/scribblings/struct.scrbl")
          (lib "unstable/scribblings/custom-write.scrbl")
          (lib "unstable/scribblings/wrapc.scrbl")
          (lib "unstable/scribblings/macro-testing.scrbl")
          (lib "unstable/scribblings/unstable.scrbl")
          (lib "unstable/scribblings/string.scrbl")
          (lib "unstable/scribblings/gui/unstable-gui.scrbl")
          (lib "unstable/scribblings/gui/prefs.scrbl")
          (lib "unstable/scribblings/socket.scrbl")
          (lib "unstable/scribblings/syntax.scrbl")
          (lib "unstable/scribblings/pretty.scrbl")
          (lib "unstable/scribblings/temp-c.scrbl")
          (lib "unstable/scribblings/utils.rkt")
          (lib "unstable/scribblings/function.scrbl")
          (lib "unstable/scribblings/open-place.scrbl")
          (lib "unstable/scribblings/markparam.scrbl")
          (lib "unstable/scribblings/error.scrbl")
          (lib "unstable/scribblings/recontract.scrbl")
          (lib "unstable/scribblings/lazy-require.scrbl")
          (lib "unstable/scribblings/hash.scrbl")
          (lib "unstable/scribblings/parameter-group.scrbl")
          (lib "unstable/scribblings/debug.scrbl")
          (lib "unstable/scribblings/sequence.scrbl")
          (lib "unstable/scribblings/future.scrbl")
          (lib "unstable/scribblings/gui/scribble.scrbl")
          (lib "unstable/scribblings/2d.scrbl")
          (lib "unstable/scribblings/gui/notify.scrbl")
          (lib "unstable/scribblings/gui/snip.scrbl")
          (lib "unstable/scribblings/define.scrbl")
          (lib "unstable/scribblings/gui/slideshow.scrbl")
          (lib "unstable/scribblings/list.scrbl")
          (lib "unstable/scribblings/bytes.scrbl")))
        (name . "unstable-doc")
        (nix-sha256 . "1l133jg699d8cn4gylv279vcaanzskna40ffdzapvl3fzn8r5v5s")
        (ring . 0)
        (search-terms
         .
         #hasheq((:build-success: . #t)
                 (:docs: . #t)
                 (author:cce@racket-lang.org . #t)
                 (author:jay@racket-lang.org . #t)
                 (author:ryanc@racket-lang.org . #t)
                 (author:samth@racket-lang.org . #t)
                 (ring:0 . #t)
                 (unstable . #t)))
        (source . "git://github.com/racket/unstable/?path=unstable-doc")
        (tags . ("unstable"))
        (versions
         .
         #hash((default
                .
                #hasheq((checksum
                         .
                         "480535837da0cc72112b9edc601885620ba8a55d")
                        (source
                         .
                         "git://github.com/racket/unstable/?path=unstable-doc")
                        (source_url
                         .
                         "git://github.com/racket/unstable/?path=unstable-doc")))
               ("5.3.4"
                .
                #hash((checksum . "9f098dddde7f217879070816090c1e8e74d49432")
                      (source
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")
                      (source_url
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")))
               ("5.3.5"
                .
                #hash((checksum . "9f098dddde7f217879070816090c1e8e74d49432")
                      (source
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")
                      (source_url
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")))
               ("5.3.6"
                .
                #hash((checksum . "9f098dddde7f217879070816090c1e8e74d49432")
                      (source
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")
                      (source_url
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")))))))
 ("unstable-flonum-doc"
  .
  #hash((author . "ntoronto@racket-lang.org")
        (authors . ("ntoronto@racket-lang.org"))
        (build
         .
         #hash((conflicts-log . #f)
               (dep-failure-log . #f)
               (docs
                .
                (("main"
                  "unstable-flonum"
                  "doc/unstable-flonum@unstable-flonum-doc/index.html")))
               (failure-log . #f)
               (min-failure-log . #f)
               (success-log . "server/built/install/unstable-flonum-doc.txt")
               (test-failure-log . #f)
               (test-success-log
                .
                "server/built/test-success/unstable-flonum-doc.txt")))
        (checksum . "7071d9a3ee0ad60f947c0a597ddd4b64bed3d94a")
        (checksum-error . #f)
        (conflicts . ())
        (dependencies
         .
         ("base"
          "scribble-lib"
          "unstable"
          "unstable-flonum-lib"
          "plot"
          "math-doc"
          "racket-doc"))
        (dependency-names
         .
         ("base"
          "scribble-lib"
          "unstable"
          "unstable-flonum-lib"
          "plot"
          "math-doc"
          "racket-doc"))
        (description
         .
         "Experimental libraries for flonum computations (documentation)")
        (implies . ())
        (last-checked . 1557339805)
        (last-edit . 1445382797)
        (last-updated . 1502816513)
        (modules . ((lib "unstable/unstable-flonum.scrbl")))
        (name . "unstable-flonum-doc")
        (nix-sha256 . "0ll6mqmyi3pisgpnv8ilji90c91d2kzc6bhqiyqqrm8930kymqld")
        (ring . 0)
        (search-terms
         .
         #hasheq((:build-success: . #t)
                 (:docs: . #t)
                 (author:ntoronto@racket-lang.org . #t)
                 (ring:0 . #t)
                 (unstable . #t)))
        (source
         .
         "git://github.com/racket/unstable-flonum/?path=unstable-flonum-doc")
        (tags . ("unstable"))
        (versions
         .
         #hash((default
                .
                #hasheq((checksum
                         .
                         "7071d9a3ee0ad60f947c0a597ddd4b64bed3d94a")
                        (source
                         .
                         "git://github.com/racket/unstable-flonum/?path=unstable-flonum-doc")
                        (source_url
                         .
                         "git://github.com/racket/unstable-flonum/?path=unstable-flonum-doc")))
               ("5.3.4"
                .
                #hash((checksum . "9f098dddde7f217879070816090c1e8e74d49432")
                      (source
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")
                      (source_url
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")))
               ("5.3.5"
                .
                #hash((checksum . "9f098dddde7f217879070816090c1e8e74d49432")
                      (source
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")
                      (source_url
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")))
               ("5.3.6"
                .
                #hash((checksum . "9f098dddde7f217879070816090c1e8e74d49432")
                      (source
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")
                      (source_url
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")))))))
 ("unstable-flonum-lib"
  .
  #hash((author . "ntoronto@racket-lang.org")
        (authors . ("ntoronto@racket-lang.org"))
        (build
         .
         #hash((conflicts-log . #f)
               (dep-failure-log . #f)
               (docs . ())
               (failure-log . #f)
               (min-failure-log . #f)
               (success-log . "server/built/install/unstable-flonum-lib.txt")
               (test-failure-log . #f)
               (test-success-log
                .
                "server/built/test-success/unstable-flonum-lib.txt")))
        (checksum . "7071d9a3ee0ad60f947c0a597ddd4b64bed3d94a")
        (checksum-error . #f)
        (conflicts . ())
        (dependencies . ("base"))
        (dependency-names . ("base"))
        (description . "Experimental libraries for flonum computations")
        (implies . ())
        (last-checked . 1557339805)
        (last-edit . 1445382797)
        (last-updated . 1502816513)
        (modules . ((lib "unstable/flonum.rkt")))
        (name . "unstable-flonum-lib")
        (nix-sha256 . "0ll6mqmyi3pisgpnv8ilji90c91d2kzc6bhqiyqqrm8930kymqld")
        (ring . 0)
        (search-terms
         .
         #hasheq((:build-success: . #t)
                 (author:ntoronto@racket-lang.org . #t)
                 (ring:0 . #t)
                 (unstable . #t)))
        (source
         .
         "git://github.com/racket/unstable-flonum/?path=unstable-flonum-lib")
        (tags . ("unstable"))
        (versions
         .
         #hash((default
                .
                #hasheq((checksum
                         .
                         "7071d9a3ee0ad60f947c0a597ddd4b64bed3d94a")
                        (source
                         .
                         "git://github.com/racket/unstable-flonum/?path=unstable-flonum-lib")
                        (source_url
                         .
                         "git://github.com/racket/unstable-flonum/?path=unstable-flonum-lib")))
               ("5.3.4"
                .
                #hash((checksum . "9f098dddde7f217879070816090c1e8e74d49432")
                      (source
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")
                      (source_url
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")))
               ("5.3.5"
                .
                #hash((checksum . "9f098dddde7f217879070816090c1e8e74d49432")
                      (source
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")
                      (source_url
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")))
               ("5.3.6"
                .
                #hash((checksum . "9f098dddde7f217879070816090c1e8e74d49432")
                      (source
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")
                      (source_url
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")))))))
 ("unstable-latent-contract-lib"
  .
  #hash((author . "mflatt@racket-lang.org ntoronto@racket-lang.org")
        (authors . ("mflatt@racket-lang.org" "ntoronto@racket-lang.org"))
        (build
         .
         #hash((conflicts-log . #f)
               (dep-failure-log . #f)
               (docs . ())
               (failure-log . #f)
               (min-failure-log . #f)
               (success-log
                .
                "server/built/install/unstable-latent-contract-lib.txt")
               (test-failure-log . #f)
               (test-success-log
                .
                "server/built/test-success/unstable-latent-contract-lib.txt")))
        (checksum . "3bd435890dae3365abe90fd1b5f7c62837e3801e")
        (checksum-error . #f)
        (conflicts . ())
        (dependencies
         .
         ("base" "scribble-lib" ("images-lib" #:version "1.2")))
        (dependency-names . ("base" "scribble-lib" "images-lib"))
        (description . "Experimental libraries for contracts at definitions")
        (implies . ())
        (last-checked . 1557339806)
        (last-edit . 1445382797)
        (last-updated . 1502816514)
        (modules
         .
         ((lib "unstable/latent-contract/defthing.rkt")
          (lib "unstable/latent-contract.rkt")
          (lib "unstable/latent-contract/serialize-syntax.rkt")))
        (name . "unstable-latent-contract-lib")
        (nix-sha256 . "0wv0kh6mr97yz16yy3f3zkc7pv1f2jvc41jqs5wlilb7dkqz0csc")
        (ring . 0)
        (search-terms
         .
         #hasheq((:build-success: . #t)
                 (author:mflatt@racket-lang.org . #t)
                 (author:ntoronto@racket-lang.org . #t)
                 (ring:0 . #t)
                 (unstable . #t)))
        (source . "git://github.com/racket/unstable-latent-contract-lib")
        (tags . ("unstable"))
        (versions
         .
         #hash((default
                .
                #hasheq((checksum
                         .
                         "3bd435890dae3365abe90fd1b5f7c62837e3801e")
                        (source
                         .
                         "git://github.com/racket/unstable-latent-contract-lib")
                        (source_url
                         .
                         "http://github.com/racket/unstable-latent-contract-lib/tree/master")))
               ("5.3.4"
                .
                #hash((checksum . "9f098dddde7f217879070816090c1e8e74d49432")
                      (source
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")
                      (source_url
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")))
               ("5.3.5"
                .
                #hash((checksum . "9f098dddde7f217879070816090c1e8e74d49432")
                      (source
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")
                      (source_url
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")))
               ("5.3.6"
                .
                #hash((checksum . "9f098dddde7f217879070816090c1e8e74d49432")
                      (source
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")
                      (source_url
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")))))))
 ("unstable-lib"
  .
  #hash((author
         .
         "jay@racket-lang.org samth@racket-lang.org cce@racket-lang.org ryanc@racket-lang.org")
        (authors
         .
         ("jay@racket-lang.org"
          "samth@racket-lang.org"
          "cce@racket-lang.org"
          "ryanc@racket-lang.org"))
        (build
         .
         #hash((conflicts-log . #f)
               (dep-failure-log . #f)
               (docs . ())
               (failure-log . #f)
               (min-failure-log . #f)
               (success-log . "server/built/install/unstable-lib.txt")
               (test-failure-log . #f)
               (test-success-log
                .
                "server/built/test-success/unstable-lib.txt")))
        (checksum . "480535837da0cc72112b9edc601885620ba8a55d")
        (checksum-error . #f)
        (conflicts . ())
        (dependencies
         .
         ("automata-lib"
          ("base" #:version "6.2.900.6")
          ("draw-lib" #:version "1.7")
          ("gui-lib" #:version "1.18")
          "markparam-lib"
          ("pict-lib" #:version "1.4")
          "ppict"
          "scribble-lib"
          ("slideshow-lib" #:version "1.2")
          "temp-c-lib"
          "unstable-macro-testing-lib"
          "unix-socket-lib"
          "staged-slide"
          "rackunit-lib"))
        (dependency-names
         .
         ("automata-lib"
          "base"
          "draw-lib"
          "gui-lib"
          "markparam-lib"
          "pict-lib"
          "ppict"
          "scribble-lib"
          "slideshow-lib"
          "temp-c-lib"
          "unstable-macro-testing-lib"
          "unix-socket-lib"
          "staged-slide"
          "rackunit-lib"))
        (description
         .
         "implementation (no documentation) part of \"unstable\"")
        (implies . ("unstable-macro-testing-lib"))
        (last-checked . 1557339806)
        (last-edit . 1445382797)
        (last-updated . 1536095100)
        (modules
         .
         ((lib "unstable/gui/notify.rkt")
          (lib "unstable/automata/re-ext.rkt")
          (lib "unstable/gui/slideshow.rkt")
          (lib "unstable/wrapc.rkt")
          (lib "unstable/gui/scribble.rkt")
          (lib "unstable/gui/snip.rkt")
          (lib "unstable/logging.rkt")
          (lib "unstable/find.rkt")
          (lib "unstable/string.rkt")
          (lib "unstable/gui/ppict.rkt")
          (lib "unstable/syntax.rkt")
          (lib "unstable/match.rkt")
          (lib "unstable/automata/nfa.rkt")
          (lib "unstable/lazy-require.rkt")
          (lib "unstable/gui/pslide.rkt")
          (lib "unstable/future.rkt")
          (lib "unstable/define.rkt")
          (lib "unstable/automata/re.rkt")
          (lib "unstable/temp-c/dsl.rkt")
          (lib "unstable/arrow.rkt")
          (lib "unstable/automata/machine.rkt")
          (lib "unstable/socket.rkt")
          (lib "unstable/automata/nfa-ep.rkt")
          (lib "unstable/gui/pict/plt-logo.rkt")
          (lib "unstable/gui/prefs.rkt")
          (lib "unstable/custom-write.rkt")
          (lib "unstable/sequence.rkt")
          (lib "unstable/time.rkt")
          (lib "unstable/gui/pict/align.rkt")
          (lib "unstable/error.rkt")
          (lib "unstable/struct.rkt")
          (lib "unstable/markparam.rkt")
          (lib "unstable/recontract.rkt")
          (lib "unstable/gui/pict.rkt")
          (lib "unstable/open-place.rkt")
          (lib "unstable/sandbox.rkt")
          (lib "unstable/automata/dfa.rkt")
          (lib "unstable/temp-c/monitor.rkt")))
        (name . "unstable-lib")
        (nix-sha256 . "1l133jg699d8cn4gylv279vcaanzskna40ffdzapvl3fzn8r5v5s")
        (ring . 0)
        (search-terms
         .
         #hasheq((:build-success: . #t)
                 (author:cce@racket-lang.org . #t)
                 (author:jay@racket-lang.org . #t)
                 (author:ryanc@racket-lang.org . #t)
                 (author:samth@racket-lang.org . #t)
                 (ring:0 . #t)
                 (unstable . #t)))
        (source . "git://github.com/racket/unstable/?path=unstable-lib")
        (tags . ("unstable"))
        (versions
         .
         #hash((default
                .
                #hasheq((checksum
                         .
                         "480535837da0cc72112b9edc601885620ba8a55d")
                        (source
                         .
                         "git://github.com/racket/unstable/?path=unstable-lib")
                        (source_url
                         .
                         "git://github.com/racket/unstable/?path=unstable-lib")))
               ("5.3.4"
                .
                #hash((checksum . "9f098dddde7f217879070816090c1e8e74d49432")
                      (source
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")
                      (source_url
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")))
               ("5.3.5"
                .
                #hash((checksum . "9f098dddde7f217879070816090c1e8e74d49432")
                      (source
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")
                      (source_url
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")))
               ("5.3.6"
                .
                #hash((checksum . "9f098dddde7f217879070816090c1e8e74d49432")
                      (source
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")
                      (source_url
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")))))))
 ("unstable-list-lib"
  .
  #hash((author . "ryanc@racket-lang.org samth@racket-lang.org")
        (authors . ("ryanc@racket-lang.org" "samth@racket-lang.org"))
        (build
         .
         #hash((conflicts-log . #f)
               (dep-failure-log . #f)
               (docs . ())
               (failure-log . #f)
               (min-failure-log . #f)
               (success-log . "server/built/install/unstable-list-lib.txt")
               (test-failure-log . #f)
               (test-success-log
                .
                "server/built/test-success/unstable-list-lib.txt")))
        (checksum . "a328c5e663072779f70a42a722d2c3e9f2c430c3")
        (checksum-error . #f)
        (conflicts . ())
        (dependencies . ("base" "class-iop-lib"))
        (dependency-names . ("base" "class-iop-lib"))
        (description . "Experimental libraries for list operations")
        (implies . ())
        (last-checked . 1557339806)
        (last-edit . 1445382797)
        (last-updated . 1502816514)
        (modules
         .
         ((lib "unstable/bytes.rkt")
          (lib "unstable/hash.rkt")
          (lib "unstable/class-iop.rkt")
          (lib "unstable/list.rkt")
          (lib "unstable/function.rkt")))
        (name . "unstable-list-lib")
        (nix-sha256 . "1vjccqyqysbkb45j5nrdgl3i92vzy99g1mh303lr5gh72h6v6b4h")
        (ring . 0)
        (search-terms
         .
         #hasheq((:build-success: . #t)
                 (author:ryanc@racket-lang.org . #t)
                 (author:samth@racket-lang.org . #t)
                 (ring:0 . #t)
                 (unstable . #t)))
        (source . "git://github.com/racket/unstable-list-lib")
        (tags . ("unstable"))
        (versions
         .
         #hash((default
                .
                #hasheq((checksum
                         .
                         "a328c5e663072779f70a42a722d2c3e9f2c430c3")
                        (source . "git://github.com/racket/unstable-list-lib")
                        (source_url
                         .
                         "http://github.com/racket/unstable-list-lib/tree/master")))
               ("5.3.4"
                .
                #hash((checksum . "9f098dddde7f217879070816090c1e8e74d49432")
                      (source
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")
                      (source_url
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")))
               ("5.3.5"
                .
                #hash((checksum . "9f098dddde7f217879070816090c1e8e74d49432")
                      (source
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")
                      (source_url
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")))
               ("5.3.6"
                .
                #hash((checksum . "9f098dddde7f217879070816090c1e8e74d49432")
                      (source
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")
                      (source_url
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")))))))
 ("unstable-macro-testing-lib"
  .
  #hash((author . "ryanc@racket-lang.org")
        (authors . ("ryanc@racket-lang.org"))
        (build
         .
         #hash((conflicts-log . #f)
               (dep-failure-log . #f)
               (docs . ())
               (failure-log . #f)
               (min-failure-log . #f)
               (success-log
                .
                "server/built/install/unstable-macro-testing-lib.txt")
               (test-failure-log . #f)
               (test-success-log
                .
                "server/built/test-success/unstable-macro-testing-lib.txt")))
        (checksum . "92c7c6d8fb35f17fb74ab4f2ad995f487cca0d96")
        (checksum-error . #f)
        (conflicts . ())
        (dependencies . (("base" #:version "6.2.900.6")))
        (dependency-names . ("base"))
        (description . "Experimental libraries for testing macros")
        (implies . ())
        (last-checked . 1557339806)
        (last-edit . 1445382797)
        (last-updated . 1502816515)
        (modules . ((lib "unstable/macro-testing.rkt")))
        (name . "unstable-macro-testing-lib")
        (nix-sha256 . "03x9vl9i2sr4v41wik5zaxljy40dw4srxkbbakskisz8sw25w6q6")
        (ring . 0)
        (search-terms
         .
         #hasheq((:build-success: . #t)
                 (author:ryanc@racket-lang.org . #t)
                 (ring:0 . #t)
                 (unstable . #t)))
        (source . "git://github.com/racket/unstable-macro-testing-lib")
        (tags . ("unstable"))
        (versions
         .
         #hash((default
                .
                #hasheq((checksum
                         .
                         "92c7c6d8fb35f17fb74ab4f2ad995f487cca0d96")
                        (source
                         .
                         "git://github.com/racket/unstable-macro-testing-lib")
                        (source_url
                         .
                         "http://github.com/racket/unstable-macro-testing-lib/tree/master")))
               ("5.3.4"
                .
                #hash((checksum . "9f098dddde7f217879070816090c1e8e74d49432")
                      (source
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")
                      (source_url
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")))
               ("5.3.5"
                .
                #hash((checksum . "9f098dddde7f217879070816090c1e8e74d49432")
                      (source
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")
                      (source_url
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")))
               ("5.3.6"
                .
                #hash((checksum . "9f098dddde7f217879070816090c1e8e74d49432")
                      (source
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")
                      (source_url
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")))))))
 ("unstable-options-lib"
  .
  #hash((author . "chrdimo@racket-lang.org robby@racket-lang.org")
        (authors . ("chrdimo@racket-lang.org" "robby@racket-lang.org"))
        (build
         .
         #hash((conflicts-log . #f)
               (dep-failure-log . #f)
               (docs . ())
               (failure-log . #f)
               (min-failure-log . #f)
               (success-log . "server/built/install/unstable-options-lib.txt")
               (test-failure-log . #f)
               (test-success-log
                .
                "server/built/test-success/unstable-options-lib.txt")))
        (checksum . "1063efe9e8f02ecdf8aefd6200d759ba1f0e8d5c")
        (checksum-error . #f)
        (conflicts . ())
        (dependencies . ("base" "option-contract-lib"))
        (dependency-names . ("base" "option-contract-lib"))
        (description . "Experimental libraries for option contracts")
        (implies . ())
        (last-checked . 1557339806)
        (last-edit . 1445382797)
        (last-updated . 1502816515)
        (modules . ((lib "unstable/options.rkt")))
        (name . "unstable-options-lib")
        (nix-sha256 . "1msq3fqsrqxx93yc1fp7v1wh2bjak19jkkd7i008867hclvw8p5z")
        (ring . 0)
        (search-terms
         .
         #hasheq((:build-success: . #t)
                 (author:chrdimo@racket-lang.org . #t)
                 (author:robby@racket-lang.org . #t)
                 (ring:0 . #t)
                 (unstable . #t)))
        (source . "git://github.com/racket/unstable-options-lib")
        (tags . ("unstable"))
        (versions
         .
         #hash((default
                .
                #hasheq((checksum
                         .
                         "1063efe9e8f02ecdf8aefd6200d759ba1f0e8d5c")
                        (source
                         .
                         "git://github.com/racket/unstable-options-lib")
                        (source_url
                         .
                         "http://github.com/racket/unstable-options-lib/tree/master")))
               ("5.3.4"
                .
                #hash((checksum . "9f098dddde7f217879070816090c1e8e74d49432")
                      (source
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")
                      (source_url
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")))
               ("5.3.5"
                .
                #hash((checksum . "9f098dddde7f217879070816090c1e8e74d49432")
                      (source
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")
                      (source_url
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")))
               ("5.3.6"
                .
                #hash((checksum . "9f098dddde7f217879070816090c1e8e74d49432")
                      (source
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")
                      (source_url
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")))))))
 ("unstable-parameter-group-lib"
  .
  #hash((author . "mflatt@racket-lang.org ntoronto@racket-lang.org")
        (authors . ("mflatt@racket-lang.org" "ntoronto@racket-lang.org"))
        (build
         .
         #hash((conflicts-log . #f)
               (dep-failure-log . #f)
               (docs . ())
               (failure-log . #f)
               (min-failure-log . #f)
               (success-log
                .
                "server/built/install/unstable-parameter-group-lib.txt")
               (test-failure-log . #f)
               (test-success-log
                .
                "server/built/test-success/unstable-parameter-group-lib.txt")))
        (checksum . "30de3acb3487c9c3ed4e8ef664ca18bb9667be09")
        (checksum-error . #f)
        (conflicts . ())
        (dependencies . ("base" ("images-lib" #:version "1.2")))
        (dependency-names . ("base" "images-lib"))
        (description . "Experimental libraries for parameter groups")
        (implies . ())
        (last-checked . 1557339806)
        (last-edit . 1445382797)
        (last-updated . 1502816515)
        (modules . ((lib "unstable/parameter-group.rkt")))
        (name . "unstable-parameter-group-lib")
        (nix-sha256 . "1bxwkf6j6pkm1j4wx6ypx6qs82mgiq0vc00n50brrh72sf4qdv2w")
        (ring . 0)
        (search-terms
         .
         #hasheq((:build-success: . #t)
                 (author:mflatt@racket-lang.org . #t)
                 (author:ntoronto@racket-lang.org . #t)
                 (ring:0 . #t)
                 (unstable . #t)))
        (source . "git://github.com/racket/unstable-parameter-group-lib")
        (tags . ("unstable"))
        (versions
         .
         #hash((default
                .
                #hasheq((checksum
                         .
                         "30de3acb3487c9c3ed4e8ef664ca18bb9667be09")
                        (source
                         .
                         "git://github.com/racket/unstable-parameter-group-lib")
                        (source_url
                         .
                         "http://github.com/racket/unstable-parameter-group-lib/tree/master")))
               ("5.3.4"
                .
                #hash((checksum . "9f098dddde7f217879070816090c1e8e74d49432")
                      (source
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")
                      (source_url
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")))
               ("5.3.5"
                .
                #hash((checksum . "9f098dddde7f217879070816090c1e8e74d49432")
                      (source
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")
                      (source_url
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")))
               ("5.3.6"
                .
                #hash((checksum . "9f098dddde7f217879070816090c1e8e74d49432")
                      (source
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")
                      (source_url
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")))))))
 ("unstable-pretty-lib"
  .
  #hash((author . "cce@racket-lang.org")
        (authors . ("cce@racket-lang.org"))
        (build
         .
         #hash((conflicts-log . #f)
               (dep-failure-log . #f)
               (docs . ())
               (failure-log . #f)
               (min-failure-log . #f)
               (success-log . "server/built/install/unstable-pretty-lib.txt")
               (test-failure-log . #f)
               (test-success-log
                .
                "server/built/test-success/unstable-pretty-lib.txt")))
        (checksum . "5d6d24be2b0a9c773ac30a22c870b7817ce9f90a")
        (checksum-error . #f)
        (conflicts . ())
        (dependencies . ("base"))
        (dependency-names . ("base"))
        (description . "Experimental libraries for pretty printing")
        (implies . ())
        (last-checked . 1557339806)
        (last-edit . 1445382797)
        (last-updated . 1502816515)
        (modules . ((lib "unstable/pretty.rkt")))
        (name . "unstable-pretty-lib")
        (nix-sha256 . "02nv3l1x0fljqr5isrxf98z25zm3jpjfjiy6827g37vwc7iq6d7r")
        (ring . 0)
        (search-terms
         .
         #hasheq((:build-success: . #t)
                 (author:cce@racket-lang.org . #t)
                 (ring:0 . #t)
                 (unstable . #t)))
        (source . "git://github.com/racket/unstable-pretty-lib")
        (tags . ("unstable"))
        (versions
         .
         #hash((default
                .
                #hasheq((checksum
                         .
                         "5d6d24be2b0a9c773ac30a22c870b7817ce9f90a")
                        (source
                         .
                         "git://github.com/racket/unstable-pretty-lib")
                        (source_url
                         .
                         "http://github.com/racket/unstable-pretty-lib/tree/master")))
               ("5.3.4"
                .
                #hash((checksum . "9f098dddde7f217879070816090c1e8e74d49432")
                      (source
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")
                      (source_url
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")))
               ("5.3.5"
                .
                #hash((checksum . "9f098dddde7f217879070816090c1e8e74d49432")
                      (source
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")
                      (source_url
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")))
               ("5.3.6"
                .
                #hash((checksum . "9f098dddde7f217879070816090c1e8e74d49432")
                      (source
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")
                      (source_url
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")))))))
 ("unstable-redex"
  .
  #hash((author . "ryanc@racket-lang.org")
        (authors . ("ryanc@racket-lang.org"))
        (build
         .
         #hash((conflicts-log . #f)
               (dep-failure-log . #f)
               (docs
                .
                (("main"
                  "unstable-redex"
                  "doc/unstable-redex@unstable-redex/index.html")))
               (failure-log . #f)
               (min-failure-log . #f)
               (success-log . "server/built/install/unstable-redex.txt")
               (test-failure-log . #f)
               (test-success-log
                .
                "server/built/test-success/unstable-redex.txt")))
        (checksum . "a132a56200d99be9e3cec3928d8580559402beb6")
        (checksum-error . #f)
        (conflicts . ())
        (dependencies
         .
         ("base"
          "pict-lib"
          "redex-lib"
          "redex-pict-lib"
          "scribble-lib"
          "pict-doc"
          "redex-doc"
          "racket-doc"))
        (dependency-names
         .
         ("base"
          "pict-lib"
          "redex-lib"
          "redex-pict-lib"
          "scribble-lib"
          "pict-doc"
          "redex-doc"
          "racket-doc"))
        (description
         .
         "Experimental libraries for typesetting PLT Redex models")
        (implies . ())
        (last-checked . 1557339806)
        (last-edit . 1445382797)
        (last-updated . 1520341665)
        (modules
         .
         ((lib "unstable/gui/redex.rkt")
          (lib "unstable/gui/unstable-redex.scrbl")))
        (name . "unstable-redex")
        (nix-sha256 . "0f45vjk67hc4fcjpxqmpfrmg8qlzvgsnmx801ifyg74v48dw3s2m")
        (ring . 0)
        (search-terms
         .
         #hasheq((:build-success: . #t)
                 (:docs: . #t)
                 (author:ryanc@racket-lang.org . #t)
                 (ring:0 . #t)
                 (unstable . #t)))
        (source . "git://github.com/racket/unstable-redex")
        (tags . ("unstable"))
        (versions
         .
         #hash((default
                .
                #hasheq((checksum
                         .
                         "a132a56200d99be9e3cec3928d8580559402beb6")
                        (source . "git://github.com/racket/unstable-redex")
                        (source_url
                         .
                         "http://github.com/racket/unstable-redex/tree/master")))
               ("5.3.4"
                .
                #hash((checksum . "9f098dddde7f217879070816090c1e8e74d49432")
                      (source
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")
                      (source_url
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")))
               ("5.3.5"
                .
                #hash((checksum . "9f098dddde7f217879070816090c1e8e74d49432")
                      (source
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")
                      (source_url
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")))
               ("5.3.6"
                .
                #hash((checksum . "9f098dddde7f217879070816090c1e8e74d49432")
                      (source
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")
                      (source_url
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")))))))
 ("unstable-test"
  .
  #hash((author
         .
         "jay@racket-lang.org samth@racket-lang.org cce@racket-lang.org ryanc@racket-lang.org robby@racket-lang.org")
        (authors
         .
         ("jay@racket-lang.org"
          "samth@racket-lang.org"
          "cce@racket-lang.org"
          "ryanc@racket-lang.org"
          "robby@racket-lang.org"))
        (build
         .
         #hash((conflicts-log . #f)
               (dep-failure-log . #f)
               (docs . ())
               (failure-log . #f)
               (min-failure-log . #f)
               (success-log . "server/built/install/unstable-test.txt")
               (test-failure-log . "server/built/test-fail/unstable-test.txt")
               (test-success-log . #f)))
        (checksum . "480535837da0cc72112b9edc601885620ba8a55d")
        (checksum-error . #f)
        (conflicts . ())
        (dependencies
         .
         ("base"
          "racket-index"
          "scheme-lib"
          "at-exp-lib"
          "compatibility-lib"
          "eli-tester"
          "gui-lib"
          "planet-lib"
          "racket-test"
          "rackunit-lib"
          "srfi-lib"
          "syntax-color-lib"
          "typed-racket-lib"
          "unstable-contract-lib"
          "unstable-debug-lib"
          "unstable-lib"
          "unstable-list-lib"
          "unstable-options-lib"
          "unstable-parameter-group-lib"
          "unstable-2d"))
        (dependency-names
         .
         ("base"
          "racket-index"
          "scheme-lib"
          "at-exp-lib"
          "compatibility-lib"
          "eli-tester"
          "gui-lib"
          "planet-lib"
          "racket-test"
          "rackunit-lib"
          "srfi-lib"
          "syntax-color-lib"
          "typed-racket-lib"
          "unstable-contract-lib"
          "unstable-debug-lib"
          "unstable-lib"
          "unstable-list-lib"
          "unstable-options-lib"
          "unstable-parameter-group-lib"
          "unstable-2d"))
        (description . "tests for \"unstable\"")
        (implies . ())
        (last-checked . 1557339806)
        (last-edit . 1445382797)
        (last-updated . 1536095102)
        (modules
         .
         ((lib "tests/test-docs-complete.rkt")
          (lib "tests/unstable/sequence.rkt")
          (lib "tests/unstable/debug.rkt")
          (lib "tests/unstable/planet-syntax.rkt")
          (lib "tests/unstable/logging.rkt")
          (lib "tests/unstable/match.rkt")
          (lib "tests/unstable/set.rkt")
          (lib "tests/unstable/helpers.rkt")
          (lib "tests/unstable/parameter-group.rkt")
          (lib "tests/unstable/syntax.rkt")
          (lib "tests/unstable/list.rkt")
          (lib "tests/unstable/contract.rkt")))
        (name . "unstable-test")
        (nix-sha256 . "1l133jg699d8cn4gylv279vcaanzskna40ffdzapvl3fzn8r5v5s")
        (ring . 0)
        (search-terms
         .
         #hasheq((:build-success: . #t)
                 (author:cce@racket-lang.org . #t)
                 (author:jay@racket-lang.org . #t)
                 (author:robby@racket-lang.org . #t)
                 (author:ryanc@racket-lang.org . #t)
                 (author:samth@racket-lang.org . #t)
                 (ring:0 . #t)
                 (unstable . #t)))
        (source . "git://github.com/racket/unstable/?path=unstable-test")
        (tags . ("unstable"))
        (versions
         .
         #hash((default
                .
                #hasheq((checksum
                         .
                         "480535837da0cc72112b9edc601885620ba8a55d")
                        (source
                         .
                         "git://github.com/racket/unstable/?path=unstable-test")
                        (source_url
                         .
                         "git://github.com/racket/unstable/?path=unstable-test")))
               ("5.3.4"
                .
                #hash((checksum . "9f098dddde7f217879070816090c1e8e74d49432")
                      (source
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")
                      (source_url
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")))
               ("5.3.5"
                .
                #hash((checksum . "9f098dddde7f217879070816090c1e8e74d49432")
                      (source
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")
                      (source_url
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")))
               ("5.3.6"
                .
                #hash((checksum . "9f098dddde7f217879070816090c1e8e74d49432")
                      (source
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")
                      (source_url
                       .
                       "http://racket-packages.s3-us-west-2.amazonaws.com/pkgs/empty.zip")))))))
 ("uri"
  .
  #hasheq((author . "ray.racine@gmail.com")
          (authors . ("ray.racine@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "uri" "doc/uri@uri/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/uri.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/uri.txt")))
          (checksum . "79934c1432baad34a3272c0429caa4b695c4b996")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("string-util"
            "opt"
            "typed-racket-lib"
            "base"
            "scribble-lib"
            "racket-doc"
            "rackunit-lib"))
          (dependency-names
           .
           ("string-util"
            "opt"
            "typed-racket-lib"
            "base"
            "scribble-lib"
            "racket-doc"
            "rackunit-lib"))
          (description . "URI and URL api in Typed Racket.")
          (implies . ())
          (last-checked . 1557339807)
          (last-edit . 1528474725)
          (last-updated . 1543070852)
          (modules
           .
           ((lib "uri/url/urlchar.rkt")
            (lib "uri/url/types.rkt")
            (lib "uri/url/qparams.rkt")
            (lib "uri/scribblings/uri.scrbl")
            (lib "uri/uri/parse-util.rkt")
            (lib "uri/uri/parse.rkt")
            (lib "uri/uri/types.rkt")
            (lib "uri/uri/urichar.rkt")
            (lib "uri/url.rkt")
            (lib "uri/uri/show.rkt")
            (lib "uri/url/util.rkt")
            (lib "uri/url/parse.rkt")
            (lib "uri/url/show.rkt")
            (lib "uri/uri.rkt")))
          (name . "uri")
          (nix-sha256
           .
           "1mrlb77hcw1z0k5mnchjyllpg20rjg9ffww5rjqlpwsrpng6x9hr")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:ray.racine@gmail.com . #t)
                   (ring:2 . #t)
                   (uri . #t)
                   (url . #t)))
          (source . "https://gitlab.com/RayRacine/uri.git")
          (tags . ("uri" "url"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "79934c1432baad34a3272c0429caa4b695c4b996")
                          (source . "https://gitlab.com/RayRacine/uri.git")
                          (source_url
                           .
                           "https://gitlab.com/RayRacine/uri.git")))))))
 ("uri-old"
  .
  #hasheq((author . "neil@neilvandyke.org")
          (authors . ("neil@neilvandyke.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "uri-old" "doc/uri-old@uri-old/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/uri-old.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/uri-old.txt")))
          (checksum . "27851ba27c8bf7770d2c308d403a85d179bc62b1")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base" "mcfly" "overeasy" "racket-doc" "scribble-lib"))
          (dependency-names
           .
           ("base" "mcfly" "overeasy" "racket-doc" "scribble-lib"))
          (description . "Web URI and URL")
          (implies . ())
          (last-checked . 1557339807)
          (last-edit . 1457323021)
          (last-updated . 1502816516)
          (modules . ((lib "uri-old/main.rkt") (lib "uri-old/uri-old.scrbl")))
          (name . "uri-old")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:neil@neilvandyke.org . #t)
                   (ring:1 . #t)
                   (web . #t)))
          (source . "http://www.neilvandyke.org/racket/uri-old.zip")
          (tags . ("web"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "27851ba27c8bf7770d2c308d403a85d179bc62b1")
                          (source
                           .
                           "http://www.neilvandyke.org/racket/uri-old.zip")
                          (source_url
                           .
                           "http://www.neilvandyke.org/racket/uri-old.zip")))))))
 ("uri-template"
  .
  #hasheq((author . "jesse@lisp.sh")
          (authors . ("jesse@lisp.sh"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "uri-template"
                    "doc/uri-template@uri-template/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/uri-template.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/uri-template.txt")))
          (checksum . "6fe4420e3a55da6ae02df453a142b96ef3b3b4ea")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "brag"
            "beautiful-racket-lib"
            "br-parser-tools-lib"
            "rackunit-lib"
            "scribble-lib"
            "racket-doc"))
          (dependency-names
           .
           ("base"
            "brag"
            "beautiful-racket-lib"
            "br-parser-tools-lib"
            "rackunit-lib"
            "scribble-lib"
            "racket-doc"))
          (description . "Implementation of RFC 6570 (URI Template).")
          (implies . ())
          (last-checked . 1557339808)
          (last-edit . 1514528380)
          (last-updated . 1530654369)
          (modules
           .
           ((lib "uri-template/main.rkt")
            (lib "uri-template/scribblings/library.scrbl")
            (lib "uri-template/assignment.rkt")
            (lib "uri-template/match.rkt")
            (lib "uri-template/value.rkt")
            (lib "uri-template/template.rkt")
            (lib "uri-template/variable.rkt")
            (lib "uri-template/parse.rkt")
            (lib "uri-template/util.rkt")
            (lib "uri-template/template-lexer.rkt")
            (lib "uri-template/scribblings/uri-template.scrbl")
            (lib "uri-template/expand.rkt")))
          (name . "uri-template")
          (nix-sha256
           .
           "0zigbpscb0ly1dqh9q8dv9cp4ldx744fvh1lrralj44f2yif9m3f")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:jesse@lisp.sh . #t)
                   (ring:2 . #t)
                   (template . #t)))
          (source . "https://github.com/jessealama/uri-template.git")
          (tags . ("template"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "6fe4420e3a55da6ae02df453a142b96ef3b3b4ea")
                          (source
                           .
                           "https://github.com/jessealama/uri-template.git")
                          (source_url
                           .
                           "https://github.com/jessealama/uri-template.git")))))))
 ("urlang"
  .
  #hasheq((author . "jensaxel@soegaard.net")
          (authors . ("jensaxel@soegaard.net"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/urlang.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/urlang.txt")))
          (checksum . "86d0706c73154ac8f11dd740d4906725f05de051")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "html-parsing"
            "html-writing"
            "nanopass"
            "net-lib"
            "rackunit-lib"
            "scribble-html-lib"
            "srfi-lite-lib"
            "web-server-lib"
            "base"
            "nanopass"
            "at-exp-lib"
            "rackunit-lib"
            "scribble-lib"
            "racket-doc"
            "html-writing"
            "html-parsing"))
          (dependency-names
           .
           ("base"
            "html-parsing"
            "html-writing"
            "nanopass"
            "net-lib"
            "rackunit-lib"
            "scribble-html-lib"
            "srfi-lite-lib"
            "web-server-lib"
            "base"
            "nanopass"
            "at-exp-lib"
            "rackunit-lib"
            "scribble-lib"
            "racket-doc"
            "html-writing"
            "html-parsing"))
          (description
           .
           "Write JavaScript with Racket syntax. Bonus: Use Racket to define macros for JavaScript constructs.")
          (implies . ())
          (last-checked . 1557339808)
          (last-edit . 1457827621)
          (last-updated . 1550141603)
          (modules
           .
           ((lib "urlang/tests/test-new-expressions.rkt")
            (lib "urlang/html.rkt")
            (lib "compiler-test/test-suite-compiler.rkt")
            (lib "urlang/main.rkt")
            (lib "urlang-test/urlang-tests.rkt")
            (lib "urlang/html/to-at-exp.rkt")
            (lib "urlang/tests/test-extra.rkt")
            (lib "compiler-rjs/compiler3.rkt")
            (lib "urlang-examples/ractive/ractive-original.rkt")
            (lib "compiler-rjs/htdp/colors.rkt")
            (lib "urlang-examples/space-invaders/space-invaders.rkt")
            (lib "urlang/for.rkt")
            (lib "urlang/symbol-table.rkt")
            (lib "urlang/globals.rkt")
            (lib "urlang/tests/test-for.rkt")
            (lib "urlang/tests/test-operators.rkt")
            (lib "compiler-rjs/htdp/ffi.rkt")
            (lib "compiler-rjs/runtime.rkt")
            (lib "urlang-examples/ractive/ractive-bootstrap-example.rkt")
            (lib "urlang-examples/parabola/parabola.rkt")
            (lib "urlang/html/all.rkt")
            (lib "urlang-examples/demo-fact.rkt")
            (lib "compiler-rjs/compiler2.rkt")
            (lib "urlang-examples/ractive/ractive.rkt")
            (lib "urlang-examples/quiz/quiz.rkt")
            (lib "compiler-rjs/compiler.rkt")
            (lib "urlang-test/test-extra.rkt")
            (lib "urlang/html/at-html.rkt")
            (lib "urlang-examples/raphael/browser.rkt")
            (lib "urlang/extra.rkt")
            (lib "urlang/html/tag-comparison.rkt")))
          (name . "urlang")
          (nix-sha256
           .
           "199qz6b37dj77zf93vwvpcxwzig4m322pvg8d44caylnk3jwxkk5")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:jensaxel@soegaard.net . #t)
                   (javascript . #t)
                   (ring:1 . #t)
                   (web . #t)))
          (source . "git://github.com/soegaard/urlang")
          (tags . ("javascript" "web"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "86d0706c73154ac8f11dd740d4906725f05de051")
                          (source . "git://github.com/soegaard/urlang")
                          (source_url
                           .
                           "http://github.com/soegaard/urlang/tree/master")))))))
 ("uu-cs3520"
  .
  #hasheq((author . "mflatt@cs.utah.edu")
          (authors . ("mflatt@cs.utah.edu"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/uu-cs3520.txt")
                 (test-failure-log . "server/built/test-fail/uu-cs3520.txt")
                 (test-success-log . #f)))
          (checksum . "b0dfad48eab5d41706b6016bdfc6b9acafe46093")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "drracket"
            "drracket-plugin-lib"
            "gui-lib"
            "net-lib"
            "plait"))
          (dependency-names
           .
           ("base"
            "drracket"
            "drracket-plugin-lib"
            "gui-lib"
            "net-lib"
            "plait"))
          (description
           .
           "Utah CS 3520 homework submission plugin for DrRacket")
          (implies . ())
          (last-checked . 1557339808)
          (last-edit . 1533332967)
          (last-updated . 1533411971)
          (modules
           .
           ((lib "uu-cs3520/handin-multi.rkt")
            (lib "uu-cs3520/updater.rkt")
            (lib "uu-cs3520/client-gui.rkt")
            (lib "uu-cs3520/this-collection.rkt")
            (lib "uu-cs3520/client.rkt")))
          (name . "uu-cs3520")
          (nix-sha256
           .
           "0w1yqhsrf2f94klc3dw8x07hcr17ka911nxwd5yp7zc8hf8i23a9")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:mflatt@cs.utah.edu . #t)
                   (course . #t)
                   (ring:2 . #t)))
          (source . "https://github.com/mflatt/uu-cs3520.git")
          (tags . ("course"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "b0dfad48eab5d41706b6016bdfc6b9acafe46093")
                          (source . "https://github.com/mflatt/uu-cs3520.git")
                          (source_url
                           .
                           "https://github.com/mflatt/uu-cs3520.git")))))))
 ("uu-cs5510"
  .
  #hasheq((author . "mflatt@cs.utah.edu")
          (authors . ("mflatt@cs.utah.edu"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/uu-cs5510.txt")
                 (test-failure-log . "server/built/test-fail/uu-cs5510.txt")
                 (test-success-log . #f)))
          (checksum . "d6736f807b31f637e141ae97d28d65e8e10465aa")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "drracket"
            "drracket-plugin-lib"
            "gui-lib"
            "net-lib"
            ("plai-typed" #:version "1.2")
            "plai-typed-s-exp-match"
            "plai-lazy"))
          (dependency-names
           .
           ("base"
            "drracket"
            "drracket-plugin-lib"
            "gui-lib"
            "net-lib"
            "plai-typed"
            "plai-typed-s-exp-match"
            "plai-lazy"))
          (description
           .
           "Utah CS 5510 homework submission plugin for DrRacket")
          (implies . ())
          (last-checked . 1557339808)
          (last-edit . 1438618864)
          (last-updated . 1502816517)
          (modules
           .
           ((lib "uu-cs5510/handin-multi.rkt")
            (lib "uu-cs5510/client.rkt")
            (lib "uu-cs5510/this-collection.rkt")
            (lib "uu-cs5510/updater.rkt")
            (lib "uu-cs5510/client-gui.rkt")))
          (name . "uu-cs5510")
          (nix-sha256
           .
           "1rlx1z410260pp9546j0r3q1bbngi8hjawk07ll3wqkr7yanj56b")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:no-tag: . #t)
                   (author:mflatt@cs.utah.edu . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/mflatt/uu-cs5510")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "d6736f807b31f637e141ae97d28d65e8e10465aa")
                          (source . "git://github.com/mflatt/uu-cs5510")
                          (source_url
                           .
                           "http://github.com/mflatt/uu-cs5510/tree/master")))))))
 ("uuid"
  .
  #hasheq((author . "philip@philipmcgrath.com")
          (authors . ("philip@philipmcgrath.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "uuid" "doc/uuid@uuid/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/uuid.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/uuid.txt")))
          (checksum . "d57e4899307b8711a65088a08e7dbca2fe91baa7")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           (("base" #:version "6.4")
            "scribble-lib"
            "racket-doc"
            "srfi-lite-lib"
            "rackunit-lib"))
          (dependency-names
           .
           ("base"
            "scribble-lib"
            "racket-doc"
            "srfi-lite-lib"
            "rackunit-lib"))
          (description
           .
           "Generate cryptographically-random UUIDs in pure Racket")
          (implies . ())
          (last-checked . 1557339808)
          (last-edit . 1547036879)
          (last-updated . 1547236892)
          (modules
           .
           ((lib "uuid/main.rkt") (lib "uuid/scribblings/uuid.scrbl")))
          (name . "uuid")
          (nix-sha256
           .
           "1wyqpd6qbzx1hnf6mjlzzz141wsgxcrcd1b31a8kxjwa1j19ff3q")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:philip@philipmcgrath.com . #t)
                   (ring:2 . #t)
                   (util . #t)
                   (utility . #t)))
          (source . "https://github.com/LiberalArtist/uuid.git")
          (tags . ("util" "utility"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "d57e4899307b8711a65088a08e7dbca2fe91baa7")
                          (source
                           .
                           "https://github.com/LiberalArtist/uuid.git")
                          (source_url
                           .
                           "https://github.com/LiberalArtist/uuid.git")))))))
 ("values-plus"
  .
  #hasheq((author . "mflatt@cs.utah.edu jay@racket-lang.org")
          (authors . ("mflatt@cs.utah.edu" "jay@racket-lang.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "values+" "doc/values+@values-plus/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/values-plus.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/values-plus.txt")))
          (checksum . "75df2e111928317ff61e9b82c2aaac664ddd0d6b")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base" "eli-tester" "racket-doc" "rackunit-lib" "scribble-lib"))
          (dependency-names
           .
           ("base" "eli-tester" "racket-doc" "rackunit-lib" "scribble-lib"))
          (description . "")
          (implies . ())
          (last-checked . 1557339808)
          (last-edit . 1461964065)
          (last-updated . 1502816517)
          (modules . ((lib "values+/values+.scrbl") (lib "values+/main.rkt")))
          (name . "values-plus")
          (nix-sha256
           .
           "1i0fn5bbkyl13gcim3dm9m8w5rv3fddjrkffza6lgcfrnmi8b4s8")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (:no-desc: . #t)
                   (:no-tag: . #t)
                   (author:jay@racket-lang.org . #t)
                   (author:mflatt@cs.utah.edu . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/mflatt/values-plus")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "75df2e111928317ff61e9b82c2aaac664ddd0d6b")
                          (source . "git://github.com/mflatt/values-plus")
                          (source_url
                           .
                           "http://github.com/mflatt/values-plus/tree/master")))))))
 ("vector-struct"
  .
  #hasheq((author . "lexi.lambda@gmail.com")
          (authors . ("lexi.lambda@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "vector-struct"
                    "doc/vector-struct@vector-struct/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/vector-struct.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/vector-struct.txt")))
          (checksum . "f5137a445b567a213f20d9c35c60cea88f61c7b1")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base" "typed-racket-lib" "racket-doc" "scribble-lib"))
          (dependency-names
           .
           ("base" "typed-racket-lib" "racket-doc" "scribble-lib"))
          (description
           .
           "A simple abstraction to use vectors like structs for performance")
          (implies . ())
          (last-checked . 1557339808)
          (last-edit . 1421217111)
          (last-updated . 1502816518)
          (modules
           .
           ((lib "vector-struct/scribblings/vector-struct.scrbl")
            (lib "typed/scribblings/vector-struct.scrbl")
            (lib "typed/vector-struct.rkt")
            (lib "vector-struct/main.rkt")))
          (name . "vector-struct")
          (nix-sha256
           .
           "09bxjnv0722zpxny0mxi0w02m0kdyarqg5sxsrpjvmw2zzra88y4")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:lexi.lambda@gmail.com . #t)
                   (deprecated . #t)
                   (performance . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/lexi-lambda/racket-vector-struct")
          (tags . ("deprecated" "performance"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "f5137a445b567a213f20d9c35c60cea88f61c7b1")
                          (source
                           .
                           "git://github.com/lexi-lambda/racket-vector-struct")
                          (source_url
                           .
                           "http://github.com/lexi-lambda/racket-vector-struct/tree/master")))))))
 ("vela"
  .
  #hasheq((author . "heizai3@gmail.com")
          (authors . ("heizai3@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . "server/built/deps/vela.txt")
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/vela.txt")
                 (test-failure-log . "server/built/test-fail/vela.txt")
                 (test-success-log . #f)))
          (checksum . "c1219d44f4333014632f43b86a6ba9fb7b44f081")
          (checksum-error . #f)
          (conflicts . ())
          (date-added . 1556548516)
          (dependencies . ("web-server"))
          (dependency-names . ("web-server"))
          (description
           .
           "Simple web framework to build RESTful app in Racket. ")
          (implies . ())
          (last-checked . 1557339808)
          (last-edit . 1556550749)
          (last-updated . 1557311002)
          (modules
           .
           ((lib "vela/demos/helloworld/helloworld.rkt")
            (lib "vela/main.rkt")
            (lib "vela/demos/book-api/handlers.rkt")
            (lib "vela/demos/book-api/app.rkt")
            (lib "vela/demos/book-api/data.rkt")))
          (name . "vela")
          (nix-sha256
           .
           "05dzghh6dm1ikkin2f65mm1kgiv6zk7b0ivssi8zjixj28r02wkl")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-dep-fail: . #t)
                   (:build-success: . #t)
                   (author:heizai3@gmail.com . #t)
                   (framework . #t)
                   (restful . #t)
                   (ring:2 . #t)
                   (web . #t)))
          (source . "https://github.com/nuty/vela.git")
          (tags . ("framework" "restful" "web"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "c1219d44f4333014632f43b86a6ba9fb7b44f081")
                          (source . "https://github.com/nuty/vela.git")
                          (source_url
                           .
                           "https://github.com/nuty/vela.git")))))))
 ("version-case"
  .
  #hasheq((author . "samth@racket-lang.org dyoo@hashcollision.org")
          (authors . ("samth@racket-lang.org" "dyoo@hashcollision.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "version-case"
                    "doc/version-case@version-case/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/version-case.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/version-case.txt")))
          (checksum . "da496dc183325d9dd3bebcdf2e2813d7ee5e87c9")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "compatibility-lib"
            "drracket-plugin-lib"
            "gui-lib"
            "scheme-lib"
            "srfi-lib"
            "srfi-lite-lib"
            "racket-doc"
            "scribble-lib"))
          (dependency-names
           .
           ("base"
            "compatibility-lib"
            "drracket-plugin-lib"
            "gui-lib"
            "scheme-lib"
            "srfi-lib"
            "srfi-lite-lib"
            "racket-doc"
            "scribble-lib"))
          (description
           .
           "Conditional behavior based on the version of Racket")
          (implies . ())
          (last-checked . 1557339808)
          (last-edit . 1456936264)
          (last-updated . 1502816518)
          (modules
           .
           ((lib "version-case/version-case.scrbl")
            (lib "version-case/main.rkt")
            (lib "version-case/version-case.rkt")
            (lib "version-case/private/new-version-case.rkt")
            (lib "version-case/private/old-version-case.rkt")
            (lib "version-case/test-version-case.rkt")
            (lib "version-case/version-misc.rkt")))
          (name . "version-case")
          (nix-sha256
           .
           "037acnpqljcbhij3nkhabf67as94sfnmf6sk69g8nw1bn8a1qb9y")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (:no-tag: . #t)
                   (author:dyoo@hashcollision.org . #t)
                   (author:samth@racket-lang.org . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/samth/version-case")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "da496dc183325d9dd3bebcdf2e2813d7ee5e87c9")
                          (source . "git://github.com/samth/version-case")
                          (source_url
                           .
                           "http://github.com/samth/version-case/tree/master")))))))
 ("video"
  .
  #hasheq((author . "leif@leifandersen.net")
          (authors . ("leif@leifandersen.net"))
          (build
           .
           #hash((conflicts-log . ("indirect" "conflicts.txt"))
                 (dep-failure-log . #f)
                 (docs . (("extract" "video" "doc/video@video/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/video.txt")
                 (test-failure-log . "server/built/test-fail/video.txt")
                 (test-success-log . #f)))
          (checksum . "aa958b5ab250c8a202b24444935255d773608ea6")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           (("base" "7.0")
            "rackunit-lib"
            "gui-lib"
            "draw-lib"
            "images-lib"
            "drracket-plugin-lib"
            "data-lib"
            "pict-lib"
            "wxme-lib"
            "sandbox-lib"
            "at-exp-lib"
            "scribble-lib"
            "bitsyntax"
            "opengl"
            "portaudio"
            "net-lib"
            "syntax-color-lib"
            "parser-tools-lib"
            ("graph" "0.3.1")
            ("libvid-x86_64-macosx" #:platform "x86_64-macosx")
            ("libvid-x86_64-win32" #:platform "win32\\x86_64")
            ("libvid-i386-win32" #:platform "win32\\i386")
            ("libvid-x86_64-linux" #:platform "x86_64-linux")
            ("libvid-i386-linux" #:platform "i386-linux")
            ("ffmpeg-x86_64-macosx-3-4" #:platform "x86_64-macosx")
            ("ffmpeg-x86_64-win32-3-4" #:platform "win32\\x86_64")
            ("ffmpeg-i386-win32-3-4" #:platform "win32\\i386")
            "scribble-lib"
            "racket-doc"
            "gui-doc"
            "draw-doc"
            "ppict"
            "reprovide-lang"))
          (dependency-names
           .
           ("base"
            "rackunit-lib"
            "gui-lib"
            "draw-lib"
            "images-lib"
            "drracket-plugin-lib"
            "data-lib"
            "pict-lib"
            "wxme-lib"
            "sandbox-lib"
            "at-exp-lib"
            "scribble-lib"
            "bitsyntax"
            "opengl"
            "portaudio"
            "net-lib"
            "syntax-color-lib"
            "parser-tools-lib"
            "graph"
            "libvid-x86_64-macosx"
            "libvid-x86_64-win32"
            "libvid-i386-win32"
            "libvid-x86_64-linux"
            "libvid-i386-linux"
            "ffmpeg-x86_64-macosx-3-4"
            "ffmpeg-x86_64-win32-3-4"
            "ffmpeg-i386-win32-3-4"
            "scribble-lib"
            "racket-doc"
            "gui-doc"
            "draw-doc"
            "ppict"
            "reprovide-lang"))
          (description . "The latest version of #lang video")
          (implies . ())
          (last-checked . 1557339808)
          (last-edit . 1503003269)
          (last-updated . 1556662472)
          (modules
           .
           ((lib "video/private/utils.rkt")
            (lib "video/private/ffmpeg-pipeline.rkt")
            (lib "video/render.rkt")
            (lib "video/scribblings/core.scrbl")
            (lib "video/scribblings/installing.scrbl")
            (lib "video/tests/video.rkt")
            (lib "video/player.rkt")
            (lib "video/scribblings/player.scrbl")
            (lib "video/scribblings/video.scrbl")
            (lib "video/examples/3-clips.rkt")
            (lib "video/private/devices.rkt")
            (lib "video/units.rkt")
            (lib "video/private/video.rkt")
            (lib "video/scribblings/api.scrbl")
            (lib "video/private/surface.rkt")
            (lib "video/private/ffmpeg/lib.rkt")
            (lib "video/scribblings/viddoclang.rkt")
            (lib "video/examples/2-colorfade.rkt")
            (lib "video/private/camera-icon.rkt")
            (lib "video/examples/7-watermark.rkt")
            (lib "video/private/ffmpeg/data.rkt")
            (lib "video/examples/11-include.rkt")
            (lib "video/raco.rkt")
            (lib "video/core.rkt")
            (lib "video/version.rkt")
            (lib "video/private/render-settings.rkt")
            (lib "video/tests/unit-tests.rkt")
            (lib "video/tests/ffmpeg.rkt")
            (lib "video/private/ffmpeg/main.rkt")
            (lib "video/examples/8-image.rkt")
            (lib "video/tests/devices.rkt")
            (lib "video/private/ffmpeg/ffmpeg.rkt")
            (lib "video/examples/5-project.rkt")
            (lib "video/private/silence.rkt")
            (lib "video/scribblings/graphical.scrbl")
            (lib "video/tests/test-utils.rkt")
            (lib "video/convert.rkt")
            (lib "video/private/init.rkt")
            (lib "video/surface.rkt")
            (lib "video/examples/9-doubletransition.rkt")
            (lib "video/private/opengl.rkt")
            (lib "video/private/installer.rkt")
            (lib "video/private/debug-mixin.rkt")
            (lib "video/private/lang.rkt")
            (lib "video/private/video-canvas.rkt")
            (lib "video/private/ffmpeg/constants.rkt")
            (lib "video/main.rkt")
            (lib "video/examples/10-properties.rkt")
            (lib "video/devices.rkt")
            (lib "video/tests/player.rkt")
            (lib "video/examples/6-multitrack.rkt")
            (lib "video/private/log.rkt")
            (lib "video/scribblings/utils.rkt")
            (lib "video/scribblings/render.scrbl")
            (lib "video/scribblings/extend.scrbl")
            (lib "video/private/tool.rkt")
            (lib "video/scribblings/templates.rkt")
            (lib "video/init.rkt")
            (lib "video/examples/1-hellocolor.rkt")
            (lib "video/private/units.rkt")
            (lib "video/private/ffmpeg/libvid.rkt")
            (lib "video/base.rkt")
            (lib "video/lib/lang/reader.rkt")
            (lib "video/lang/reader.rkt")
            (lib "video/scribblings/intro.scrbl")
            (lib "video/tests/editor.rkt")
            (lib "video/private/editor.rkt")
            (lib "video/tests/render.rkt")
            (lib "video/examples/12-cut.rkt")
            (lib "video/lib.rkt")
            (lib "video/examples/4-filters.rkt")))
          (name . "video")
          (nix-sha256
           .
           "0gp86xk7wrcvb96fl2lsi3r1x9i18kqnvn3cygsnpdqfpq0g0hbc")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-conflicts: . #t)
                   (:build-success: . #t)
                   (:docs-error: . #t)
                   (:docs: . #t)
                   (author:leif@leifandersen.net . #t)
                   (ring:1 . #t)
                   (video . #t)
                   (vidlang . #t)))
          (source . "git://github.com/videolang/video#stable")
          (tags . ("video" "vidlang"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "aa958b5ab250c8a202b24444935255d773608ea6")
                          (source . "git://github.com/videolang/video#stable")
                          (source_url
                           .
                           "http://github.com/videolang/video/tree/master#stable")))))))
 ("video-samples"
  .
  #hasheq((author . "leif@leifandersen.net")
          (authors . ("leif@leifandersen.net"))
          (build
           .
           #hash((conflicts-log . ("indirect" "conflicts.txt"))
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/video-samples.txt")
                 (test-failure-log
                  .
                  "server/built/test-fail/video-samples.txt")
                 (test-success-log . #f)))
          (checksum . "6ac1cfc77152350d1ce55738447350ae0d43cf5d")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base" "rackunit-lib" "draw-lib" "gui-lib" "pict-lib" "video"))
          (dependency-names
           .
           ("base" "rackunit-lib" "draw-lib" "gui-lib" "pict-lib" "video"))
          (description
           .
           "A package containing sample videos (with a license to use and redistribute), as well as video scripts to use them.")
          (implies . ())
          (last-checked . 1557339809)
          (last-edit . 1507818372)
          (last-updated . 1533897807)
          (modules
           .
           ((lib "video-samples/bbb/mosaic.rkt")
            (lib "video-samples/bbb/chirping.rkt")
            (lib "video-samples/bbb/running.rkt")
            (lib "video-samples/bbb/jumpflytrans.rkt")
            (lib "video-samples/bbb/jumping.rkt")
            (lib "video-samples/bbb/mos2.rkt")
            (lib "video-samples/bbb/flying.rkt")))
          (name . "video-samples")
          (nix-sha256
           .
           "09szmqpbi4daiwwp9jqa0sjj636hgn61lddpiil47542wz23m8ys")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-conflicts: . #t)
                   (:build-success: . #t)
                   (author:leif@leifandersen.net . #t)
                   (ring:2 . #t)
                   (samples . #t)
                   (video . #t)))
          (source . "git://github.com/videolang/test-samples")
          (tags . ("samples" "video"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "6ac1cfc77152350d1ce55738447350ae0d43cf5d")
                          (source . "git://github.com/videolang/test-samples")
                          (source_url
                           .
                           "http://github.com/videolang/test-samples/tree/master")))))))
 ("video-testing"
  .
  #hasheq((author . "leif@leifandersen.net")
          (authors . ("leif@leifandersen.net"))
          (build
           .
           #hash((conflicts-log . "conflicts.txt")
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("extract" "video" "doc/video@video-testing/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/video-testing.txt")
                 (test-failure-log
                  .
                  "server/built/test-fail/video-testing.txt")
                 (test-success-log . #f)))
          (checksum . "aa958b5ab250c8a202b24444935255d773608ea6")
          (checksum-error . #f)
          (conflicts . ("video"))
          (dependencies
           .
           (("base" "7.0")
            "rackunit-lib"
            "gui-lib"
            "draw-lib"
            "images-lib"
            "drracket-plugin-lib"
            "data-lib"
            "pict-lib"
            "wxme-lib"
            "sandbox-lib"
            "at-exp-lib"
            "scribble-lib"
            "bitsyntax"
            "opengl"
            "portaudio"
            "net-lib"
            "syntax-color-lib"
            "parser-tools-lib"
            ("graph" "0.3.1")
            ("libvid-x86_64-macosx" #:platform "x86_64-macosx")
            ("libvid-x86_64-win32" #:platform "win32\\x86_64")
            ("libvid-i386-win32" #:platform "win32\\i386")
            ("libvid-x86_64-linux" #:platform "x86_64-linux")
            ("libvid-i386-linux" #:platform "i386-linux")
            ("ffmpeg-x86_64-macosx-3-4" #:platform "x86_64-macosx")
            ("ffmpeg-x86_64-win32-3-4" #:platform "win32\\x86_64")
            ("ffmpeg-i386-win32-3-4" #:platform "win32\\i386")
            "scribble-lib"
            "racket-doc"
            "gui-doc"
            "draw-doc"
            "ppict"
            "reprovide-lang"))
          (dependency-names
           .
           ("base"
            "rackunit-lib"
            "gui-lib"
            "draw-lib"
            "images-lib"
            "drracket-plugin-lib"
            "data-lib"
            "pict-lib"
            "wxme-lib"
            "sandbox-lib"
            "at-exp-lib"
            "scribble-lib"
            "bitsyntax"
            "opengl"
            "portaudio"
            "net-lib"
            "syntax-color-lib"
            "parser-tools-lib"
            "graph"
            "libvid-x86_64-macosx"
            "libvid-x86_64-win32"
            "libvid-i386-win32"
            "libvid-x86_64-linux"
            "libvid-i386-linux"
            "ffmpeg-x86_64-macosx-3-4"
            "ffmpeg-x86_64-win32-3-4"
            "ffmpeg-i386-win32-3-4"
            "scribble-lib"
            "racket-doc"
            "gui-doc"
            "draw-doc"
            "ppict"
            "reprovide-lang"))
          (description
           .
           "More stable than video-unstable, but updated less frequently.\r\nLess stable than video(-stable), but updated more frequently")
          (implies . ())
          (last-checked . 1557339809)
          (last-edit . 1503003170)
          (last-updated . 1556662473)
          (modules
           .
           ((lib "video/private/utils.rkt")
            (lib "video/private/ffmpeg-pipeline.rkt")
            (lib "video/render.rkt")
            (lib "video/scribblings/core.scrbl")
            (lib "video/scribblings/installing.scrbl")
            (lib "video/tests/video.rkt")
            (lib "video/player.rkt")
            (lib "video/scribblings/player.scrbl")
            (lib "video/scribblings/video.scrbl")
            (lib "video/examples/3-clips.rkt")
            (lib "video/private/devices.rkt")
            (lib "video/units.rkt")
            (lib "video/private/video.rkt")
            (lib "video/scribblings/api.scrbl")
            (lib "video/private/surface.rkt")
            (lib "video/private/ffmpeg/lib.rkt")
            (lib "video/scribblings/viddoclang.rkt")
            (lib "video/examples/2-colorfade.rkt")
            (lib "video/private/camera-icon.rkt")
            (lib "video/examples/7-watermark.rkt")
            (lib "video/private/ffmpeg/data.rkt")
            (lib "video/examples/11-include.rkt")
            (lib "video/raco.rkt")
            (lib "video/core.rkt")
            (lib "video/version.rkt")
            (lib "video/private/render-settings.rkt")
            (lib "video/tests/unit-tests.rkt")
            (lib "video/tests/ffmpeg.rkt")
            (lib "video/private/ffmpeg/main.rkt")
            (lib "video/examples/8-image.rkt")
            (lib "video/tests/devices.rkt")
            (lib "video/private/ffmpeg/ffmpeg.rkt")
            (lib "video/examples/5-project.rkt")
            (lib "video/private/silence.rkt")
            (lib "video/scribblings/graphical.scrbl")
            (lib "video/tests/test-utils.rkt")
            (lib "video/convert.rkt")
            (lib "video/private/init.rkt")
            (lib "video/surface.rkt")
            (lib "video/examples/9-doubletransition.rkt")
            (lib "video/private/opengl.rkt")
            (lib "video/private/installer.rkt")
            (lib "video/private/debug-mixin.rkt")
            (lib "video/private/lang.rkt")
            (lib "video/private/video-canvas.rkt")
            (lib "video/private/ffmpeg/constants.rkt")
            (lib "video/main.rkt")
            (lib "video/examples/10-properties.rkt")
            (lib "video/devices.rkt")
            (lib "video/tests/player.rkt")
            (lib "video/examples/6-multitrack.rkt")
            (lib "video/private/log.rkt")
            (lib "video/scribblings/utils.rkt")
            (lib "video/scribblings/render.scrbl")
            (lib "video/scribblings/extend.scrbl")
            (lib "video/private/tool.rkt")
            (lib "video/scribblings/templates.rkt")
            (lib "video/init.rkt")
            (lib "video/examples/1-hellocolor.rkt")
            (lib "video/private/units.rkt")
            (lib "video/private/ffmpeg/libvid.rkt")
            (lib "video/base.rkt")
            (lib "video/lib/lang/reader.rkt")
            (lib "video/lang/reader.rkt")
            (lib "video/scribblings/intro.scrbl")
            (lib "video/tests/editor.rkt")
            (lib "video/private/editor.rkt")
            (lib "video/tests/render.rkt")
            (lib "video/examples/12-cut.rkt")
            (lib "video/lib.rkt")
            (lib "video/examples/4-filters.rkt")))
          (name . "video-testing")
          (nix-sha256
           .
           "0gp86xk7wrcvb96fl2lsi3r1x9i18kqnvn3cygsnpdqfpq0g0hbc")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-conflicts: . #t)
                   (:build-success: . #t)
                   (:conflicts: . #t)
                   (:docs-error: . #t)
                   (:docs: . #t)
                   (author:leif@leifandersen.net . #t)
                   (ring:2 . #t)
                   (testing . #t)
                   (video . #t)
                   (vidlang . #t)))
          (source . "git://github.com/videolang/video#testing")
          (tags . ("testing" "video" "vidlang"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "aa958b5ab250c8a202b24444935255d773608ea6")
                          (source
                           .
                           "git://github.com/videolang/video#testing")
                          (source_url
                           .
                           "http://github.com/videolang/video/tree/master#testing")))))))
 ("video-unstable"
  .
  #hasheq((author . "leif@leifandersen.net")
          (authors . ("leif@leifandersen.net"))
          (build
           .
           #hash((conflicts-log . "conflicts.txt")
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("extract" "video" "doc/video@video-unstable/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/video-unstable.txt")
                 (test-failure-log
                  .
                  "server/built/test-fail/video-unstable.txt")
                 (test-success-log . #f)))
          (checksum . "676b15fe2af85c25a6dffe5a500f572246b0f4df")
          (checksum-error . #f)
          (conflicts . ("video"))
          (dependencies
           .
           (("base" "7.0")
            "rackunit-lib"
            "gui-lib"
            "draw-lib"
            "images-lib"
            "drracket-plugin-lib"
            "data-lib"
            "pict-lib"
            "wxme-lib"
            "sandbox-lib"
            "at-exp-lib"
            "scribble-lib"
            "bitsyntax"
            "opengl"
            "portaudio"
            "net-lib"
            "syntax-color-lib"
            "parser-tools-lib"
            ("graph" "0.3.1")
            ("libvid-x86_64-macosx" #:platform "x86_64-macosx")
            ("libvid-x86_64-win32" #:platform "win32\\x86_64")
            ("libvid-i386-win32" #:platform "win32\\i386")
            ("libvid-x86_64-linux" #:platform "x86_64-linux")
            ("libvid-i386-linux" #:platform "i386-linux")
            ("ffmpeg-x86_64-macosx-3-4" #:platform "x86_64-macosx")
            ("ffmpeg-x86_64-win32-3-4" #:platform "win32\\x86_64")
            ("ffmpeg-i386-win32-3-4" #:platform "win32\\i386")
            "scribble-lib"
            "racket-doc"
            "gui-doc"
            "draw-doc"
            "ppict"
            "reprovide-lang"))
          (dependency-names
           .
           ("base"
            "rackunit-lib"
            "gui-lib"
            "draw-lib"
            "images-lib"
            "drracket-plugin-lib"
            "data-lib"
            "pict-lib"
            "wxme-lib"
            "sandbox-lib"
            "at-exp-lib"
            "scribble-lib"
            "bitsyntax"
            "opengl"
            "portaudio"
            "net-lib"
            "syntax-color-lib"
            "parser-tools-lib"
            "graph"
            "libvid-x86_64-macosx"
            "libvid-x86_64-win32"
            "libvid-i386-win32"
            "libvid-x86_64-linux"
            "libvid-i386-linux"
            "ffmpeg-x86_64-macosx-3-4"
            "ffmpeg-x86_64-win32-3-4"
            "ffmpeg-i386-win32-3-4"
            "scribble-lib"
            "racket-doc"
            "gui-doc"
            "draw-doc"
            "ppict"
            "reprovide-lang"))
          (description
           .
           "The latest and greatest build of Video. This build will occasionally fail.")
          (implies . ())
          (last-checked . 1557339809)
          (last-edit . 1503854656)
          (last-updated . 1556655273)
          (modules
           .
           ((lib "video/private/utils.rkt")
            (lib "video/private/ffmpeg-pipeline.rkt")
            (lib "video/render.rkt")
            (lib "video/scribblings/core.scrbl")
            (lib "video/scribblings/installing.scrbl")
            (lib "video/tests/video.rkt")
            (lib "video/player.rkt")
            (lib "video/scribblings/player.scrbl")
            (lib "video/scribblings/video.scrbl")
            (lib "video/examples/3-clips.rkt")
            (lib "video/private/devices.rkt")
            (lib "video/units.rkt")
            (lib "video/private/video.rkt")
            (lib "video/scribblings/api.scrbl")
            (lib "video/private/surface.rkt")
            (lib "video/private/ffmpeg/lib.rkt")
            (lib "video/scribblings/viddoclang.rkt")
            (lib "video/examples/2-colorfade.rkt")
            (lib "video/private/camera-icon.rkt")
            (lib "video/examples/7-watermark.rkt")
            (lib "video/private/ffmpeg/data.rkt")
            (lib "video/examples/11-include.rkt")
            (lib "video/raco.rkt")
            (lib "video/core.rkt")
            (lib "video/version.rkt")
            (lib "video/private/render-settings.rkt")
            (lib "video/tests/unit-tests.rkt")
            (lib "video/tests/ffmpeg.rkt")
            (lib "video/private/ffmpeg/main.rkt")
            (lib "video/examples/8-image.rkt")
            (lib "video/tests/devices.rkt")
            (lib "video/private/ffmpeg/ffmpeg.rkt")
            (lib "video/examples/5-project.rkt")
            (lib "video/private/silence.rkt")
            (lib "video/scribblings/graphical.scrbl")
            (lib "video/tests/test-utils.rkt")
            (lib "video/convert.rkt")
            (lib "video/private/init.rkt")
            (lib "video/surface.rkt")
            (lib "video/examples/9-doubletransition.rkt")
            (lib "video/private/opengl.rkt")
            (lib "video/private/installer.rkt")
            (lib "video/private/debug-mixin.rkt")
            (lib "video/private/lang.rkt")
            (lib "video/private/video-canvas.rkt")
            (lib "video/private/ffmpeg/constants.rkt")
            (lib "video/main.rkt")
            (lib "video/examples/10-properties.rkt")
            (lib "video/devices.rkt")
            (lib "video/tests/player.rkt")
            (lib "video/examples/6-multitrack.rkt")
            (lib "video/private/log.rkt")
            (lib "video/scribblings/utils.rkt")
            (lib "video/scribblings/render.scrbl")
            (lib "video/scribblings/extend.scrbl")
            (lib "video/private/tool.rkt")
            (lib "video/scribblings/templates.rkt")
            (lib "video/init.rkt")
            (lib "video/examples/1-hellocolor.rkt")
            (lib "video/private/units.rkt")
            (lib "video/private/ffmpeg/libvid.rkt")
            (lib "video/base.rkt")
            (lib "video/lib/lang/reader.rkt")
            (lib "video/lang/reader.rkt")
            (lib "video/scribblings/intro.scrbl")
            (lib "video/tests/editor.rkt")
            (lib "video/private/editor.rkt")
            (lib "video/tests/render.rkt")
            (lib "video/examples/12-cut.rkt")
            (lib "video/lib.rkt")
            (lib "video/examples/4-filters.rkt")))
          (name . "video-unstable")
          (nix-sha256
           .
           "1wy70h6jcnsmmc312zwcvm3x45a7hmgf53vsf7ilja17lpjxp8ci")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-conflicts: . #t)
                   (:build-success: . #t)
                   (:conflicts: . #t)
                   (:docs-error: . #t)
                   (:docs: . #t)
                   (author:leif@leifandersen.net . #t)
                   (ring:2 . #t)
                   (unstable . #t)
                   (video . #t)
                   (vidlang . #t)))
          (source . "git://github.com/videolang/video")
          (tags . ("unstable" "video" "vidlang"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "676b15fe2af85c25a6dffe5a500f572246b0f4df")
                          (source . "git://github.com/videolang/video")
                          (source_url
                           .
                           "http://github.com/videolang/video/tree/master")))))))
 ("video-v0-0"
  .
  #hasheq((author . "leif@leifandersen.net")
          (authors . ("leif@leifandersen.net"))
          (build
           .
           #hash((conflicts-log . "conflicts.txt")
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("extract" "video" "doc/video@video-v0-0/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/video-v0-0.txt")
                 (test-failure-log . "server/built/test-fail/video-v0-0.txt")
                 (test-success-log . #f)))
          (checksum . "39112ec3b7fbc6b611a67cc5f9ac3c988c50f16d")
          (checksum-error . #f)
          (conflicts . ("video"))
          (dependencies
           .
           ("base"
            "rackunit-lib"
            "gui-lib"
            "images-lib"
            "scribble-lib"
            "racket-doc"))
          (dependency-names
           .
           ("base"
            "rackunit-lib"
            "gui-lib"
            "images-lib"
            "scribble-lib"
            "racket-doc"))
          (description . "v0.0 of #lang video")
          (implies . ())
          (last-checked . 1557339809)
          (last-edit . 1503001736)
          (last-updated . 1502816519)
          (modules
           .
           ((lib "video/render.rkt")
            (lib "video/core.rkt")
            (lib "video/private/init-mlt.rkt")
            (lib "video/private/mlt.rkt")
            (lib "video/private/examples.rkt")
            (lib "video/player.rkt")
            (lib "video/tag.rkt")
            (lib "video/scribblings/video.scrbl")
            (lib "video/init.rkt")
            (lib "video/private/once.rkt")
            (lib "video/private/video.rkt")
            (lib "video/lib.rkt")))
          (name . "video-v0-0")
          (nix-sha256
           .
           "1rnx43r7acx10395843dja64kvx1hd42y5s4qvvkhinsr8jb8558")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-conflicts: . #t)
                   (:build-success: . #t)
                   (:conflicts: . #t)
                   (:docs-error: . #t)
                   (:docs: . #t)
                   (author:leif@leifandersen.net . #t)
                   (ring:2 . #t)
                   (video . #t)
                   (vidlang . #t)))
          (source . "git://github.com/videolang/video#v0.0")
          (tags . ("video" "vidlang"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "39112ec3b7fbc6b611a67cc5f9ac3c988c50f16d")
                          (source . "git://github.com/videolang/video#v0.0")
                          (source_url
                           .
                           "http://github.com/videolang/video/tree/master#v0.0")))))))
 ("video-v0-1"
  .
  #hasheq((author . "leif@leifandersen.net")
          (authors . ("leif@leifandersen.net"))
          (build
           .
           #hash((conflicts-log . "conflicts.txt")
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("extract" "video" "doc/video@video-v0-1/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/video-v0-1.txt")
                 (test-failure-log . "server/built/test-fail/video-v0-1.txt")
                 (test-success-log . #f)))
          (checksum . "ca7db7f85ab7f19f91e1f63907c275fecdc39349")
          (checksum-error . #f)
          (conflicts . ("video"))
          (dependencies
           .
           (("base" "6.9")
            "rackunit-lib"
            "gui-lib"
            "draw-lib"
            "images-lib"
            "drracket-plugin-lib"
            "data-lib"
            "pict-lib"
            "wxme-lib"
            "sandbox-lib"
            "at-exp-lib"
            "scribble-lib"
            "bitsyntax"
            "opengl"
            "portaudio"
            "ffi-definer-convention"
            "scribble-lib"
            "racket-doc"
            "gui-doc"
            "draw-doc"
            "ppict"))
          (dependency-names
           .
           ("base"
            "rackunit-lib"
            "gui-lib"
            "draw-lib"
            "images-lib"
            "drracket-plugin-lib"
            "data-lib"
            "pict-lib"
            "wxme-lib"
            "sandbox-lib"
            "at-exp-lib"
            "scribble-lib"
            "bitsyntax"
            "opengl"
            "portaudio"
            "ffi-definer-convention"
            "scribble-lib"
            "racket-doc"
            "gui-doc"
            "draw-doc"
            "ppict"))
          (description . "v0.1 of #lang video")
          (implies . ())
          (last-checked . 1557339809)
          (last-edit . 1503001716)
          (last-updated . 1502816520)
          (modules
           .
           ((lib "video/render/xml.rkt")
            (lib "video/private/camera-icon.rkt")
            (lib "video/render.rkt")
            (lib "video/private/packetqueue.rkt")
            (lib "video/private/ffmpeg-stream.rkt")
            (lib "video/raco.rkt")
            (lib "video/core.rkt")
            (lib "video/private/init-mlt.rkt")
            (lib "video/private/mlt.rkt")
            (lib "video/tests/render.rkt")
            (lib "video/examples/11-include.rkt")
            (lib "video/private/surface.rkt")
            (lib "video/tests/video.rkt")
            (lib "video/examples/2-colorfade.rkt")
            (lib "video/render/jpg.rkt")
            (lib "video/lang/reader.rkt")
            (lib "video/examples/5-project.rkt")
            (lib "video/examples/4-filters.rkt")
            (lib "video/player.rkt")
            (lib "video/scribblings/intro.scrbl")
            (lib "video/examples/7-watermark.rkt")
            (lib "video/scribblings/video.scrbl")
            (lib "video/init.rkt")
            (lib "video/private/ffmpeg.rkt")
            (lib "video/tests/editor.rkt")
            (lib "video/examples/12-cut.rkt")
            (lib "video/scribblings/api.scrbl")
            (lib "video/main.rkt")
            (lib "video/examples/8-image.rkt")
            (lib "video/private/video-canvas.rkt")
            (lib "video/scribblings/render.scrbl")
            (lib "video/tests/mlt.rkt")
            (lib "video/private/tool.rkt")
            (lib "video/scribblings/utils.rkt")
            (lib "video/examples/1-hellocolor.rkt")
            (lib "video/examples/10-properties.rkt")
            (lib "video/tests/player.rkt")
            (lib "video/units.rkt")
            (lib "video/render/list.rkt")
            (lib "video/render/mp4.rkt")
            (lib "video/examples/9-doubletransition.rkt")
            (lib "video/private/editor.rkt")
            (lib "video/private/threading.rkt")
            (lib "video/surface.rkt")
            (lib "video/examples/3-clips.rkt")
            (lib "video/render/png.rkt")
            (lib "video/examples/6-multitrack.rkt")
            (lib "video/base.rkt")
            (lib "video/private/video.rkt")
            (lib "video/tests/test-utils.rkt")
            (lib "video/lib.rkt")
            (lib "video/private/utils.rkt")
            (lib "video/tests/unit-tests.rkt")))
          (name . "video-v0-1")
          (nix-sha256
           .
           "1l21ydyjdzvbn96329l7nvd8iv3iv6nmpbz9nqipp0q44s1g7g54")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-conflicts: . #t)
                   (:build-success: . #t)
                   (:conflicts: . #t)
                   (:docs-error: . #t)
                   (:docs: . #t)
                   (author:leif@leifandersen.net . #t)
                   (ring:2 . #t)
                   (video . #t)
                   (vidlang . #t)))
          (source . "git://github.com/videolang/video#v0.1.1")
          (tags . ("video" "vidlang"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "ca7db7f85ab7f19f91e1f63907c275fecdc39349")
                          (source . "git://github.com/videolang/video#v0.1.1")
                          (source_url
                           .
                           "http://github.com/videolang/video/tree/master#v0.1.1")))))))
 ("video-v0-2"
  .
  #hasheq((author . "leif@leifandersen.net")
          (authors . ("leif@leifandersen.net"))
          (build
           .
           #hash((conflicts-log . "conflicts.txt")
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("extract" "video" "doc/video@video-v0-2/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/video-v0-2.txt")
                 (test-failure-log . "server/built/test-fail/video-v0-2.txt")
                 (test-success-log . #f)))
          (checksum . "8828d1c287030691cbc12f75fb803265fc3d97bb")
          (checksum-error . #f)
          (conflicts . ("video"))
          (dependencies
           .
           (("base" "7.0")
            "rackunit-lib"
            "gui-lib"
            "draw-lib"
            "images-lib"
            "drracket-plugin-lib"
            "data-lib"
            "pict-lib"
            "wxme-lib"
            "sandbox-lib"
            "at-exp-lib"
            "scribble-lib"
            "bitsyntax"
            "opengl"
            "portaudio"
            "net-lib"
            "syntax-color-lib"
            "parser-tools-lib"
            ("graph" "0.3.1")
            ("libvid-x86_64-macosx-0-2" #:platform "x86_64-macosx")
            ("libvid-x86_64-win32-0-2" #:platform "win32\\x86_64")
            ("libvid-i386-win32-0-2" #:platform "win32\\i386")
            ("libvid-x86_64-linux-0-2" #:platform "x86_64-linux")
            ("libvid-i386-linux-0-2" #:platform "i386-linux")
            ("ffmpeg-x86_64-macosx-3-4" #:platform "x86_64-macosx")
            ("ffmpeg-x86_64-win32-3-4" #:platform "win32\\x86_64")
            ("ffmpeg-i386-win32-3-4" #:platform "win32\\i386")
            "scribble-lib"
            "racket-doc"
            "gui-doc"
            "draw-doc"
            "ppict"
            "reprovide-lang"))
          (dependency-names
           .
           ("base"
            "rackunit-lib"
            "gui-lib"
            "draw-lib"
            "images-lib"
            "drracket-plugin-lib"
            "data-lib"
            "pict-lib"
            "wxme-lib"
            "sandbox-lib"
            "at-exp-lib"
            "scribble-lib"
            "bitsyntax"
            "opengl"
            "portaudio"
            "net-lib"
            "syntax-color-lib"
            "parser-tools-lib"
            "graph"
            "libvid-x86_64-macosx-0-2"
            "libvid-x86_64-win32-0-2"
            "libvid-i386-win32-0-2"
            "libvid-x86_64-linux-0-2"
            "libvid-i386-linux-0-2"
            "ffmpeg-x86_64-macosx-3-4"
            "ffmpeg-x86_64-win32-3-4"
            "ffmpeg-i386-win32-3-4"
            "scribble-lib"
            "racket-doc"
            "gui-doc"
            "draw-doc"
            "ppict"
            "reprovide-lang"))
          (description . "v0.2 of #lang video")
          (implies . ())
          (last-checked . 1557339809)
          (last-edit . 1535930322)
          (last-updated . 1535925551)
          (modules
           .
           ((lib "video/private/utils.rkt")
            (lib "video/private/ffmpeg-pipeline.rkt")
            (lib "video/render.rkt")
            (lib "video/scribblings/core.scrbl")
            (lib "video/scribblings/installing.scrbl")
            (lib "video/tests/video.rkt")
            (lib "video/player.rkt")
            (lib "video/scribblings/player.scrbl")
            (lib "video/scribblings/video.scrbl")
            (lib "video/examples/3-clips.rkt")
            (lib "video/private/devices.rkt")
            (lib "video/units.rkt")
            (lib "video/private/video.rkt")
            (lib "video/scribblings/api.scrbl")
            (lib "video/private/surface.rkt")
            (lib "video/private/ffmpeg/lib.rkt")
            (lib "video/scribblings/viddoclang.rkt")
            (lib "video/examples/2-colorfade.rkt")
            (lib "video/private/camera-icon.rkt")
            (lib "video/examples/7-watermark.rkt")
            (lib "video/private/ffmpeg/data.rkt")
            (lib "video/examples/11-include.rkt")
            (lib "video/raco.rkt")
            (lib "video/core.rkt")
            (lib "video/version.rkt")
            (lib "video/private/render-settings.rkt")
            (lib "video/tests/unit-tests.rkt")
            (lib "video/tests/ffmpeg.rkt")
            (lib "video/private/ffmpeg/main.rkt")
            (lib "video/examples/8-image.rkt")
            (lib "video/tests/devices.rkt")
            (lib "video/private/ffmpeg/ffmpeg.rkt")
            (lib "video/examples/5-project.rkt")
            (lib "video/private/silence.rkt")
            (lib "video/scribblings/graphical.scrbl")
            (lib "video/tests/test-utils.rkt")
            (lib "video/convert.rkt")
            (lib "video/private/init.rkt")
            (lib "video/surface.rkt")
            (lib "video/examples/9-doubletransition.rkt")
            (lib "video/private/opengl.rkt")
            (lib "video/private/installer.rkt")
            (lib "video/private/debug-mixin.rkt")
            (lib "video/private/lang.rkt")
            (lib "video/private/video-canvas.rkt")
            (lib "video/private/ffmpeg/constants.rkt")
            (lib "video/main.rkt")
            (lib "video/examples/10-properties.rkt")
            (lib "video/devices.rkt")
            (lib "video/tests/player.rkt")
            (lib "video/examples/6-multitrack.rkt")
            (lib "video/private/log.rkt")
            (lib "video/scribblings/utils.rkt")
            (lib "video/scribblings/render.scrbl")
            (lib "video/scribblings/extend.scrbl")
            (lib "video/private/tool.rkt")
            (lib "video/scribblings/templates.rkt")
            (lib "video/init.rkt")
            (lib "video/examples/1-hellocolor.rkt")
            (lib "video/private/units.rkt")
            (lib "video/private/ffmpeg/libvid.rkt")
            (lib "video/base.rkt")
            (lib "video/lib/lang/reader.rkt")
            (lib "video/lang/reader.rkt")
            (lib "video/scribblings/intro.scrbl")
            (lib "video/tests/editor.rkt")
            (lib "video/private/editor.rkt")
            (lib "video/tests/render.rkt")
            (lib "video/examples/12-cut.rkt")
            (lib "video/lib.rkt")
            (lib "video/examples/4-filters.rkt")))
          (name . "video-v0-2")
          (nix-sha256
           .
           "061mhyx65g67713k106h9n5ih9galdfzl9kxxx2r38pyj5qsb99n")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-conflicts: . #t)
                   (:build-success: . #t)
                   (:conflicts: . #t)
                   (:docs-error: . #t)
                   (:docs: . #t)
                   (author:leif@leifandersen.net . #t)
                   (ffmpeg . #t)
                   (ring:2 . #t)
                   (video . #t)))
          (source . "https://github.com/videolang/video.git#v0.2")
          (tags . ("ffmpeg" "video"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "8828d1c287030691cbc12f75fb803265fc3d97bb")
                          (source
                           .
                           "https://github.com/videolang/video.git#v0.2")
                          (source_url
                           .
                           "https://github.com/videolang/video.git#v0.2")))))))
 ("virtual-mpu"
  .
  #hasheq((author . "jerome.martin.dev@gmail.com")
          (authors . ("jerome.martin.dev@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/virtual-mpu.txt")
                 (test-failure-log . "server/built/test-fail/virtual-mpu.txt")
                 (test-success-log . #f)))
          (checksum . "d8056f928a646bb9ac96fdb78cde794efc82d144")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "brag"
            "br-parser-tools-lib"
            "anaphoric"
            "reprovide-lang"
            "command-tree"
            "rackunit-lib"
            "charterm"))
          (dependency-names
           .
           ("base"
            "brag"
            "br-parser-tools-lib"
            "anaphoric"
            "reprovide-lang"
            "command-tree"
            "rackunit-lib"
            "charterm"))
          (description
           .
           "Universal Emulator & Assembler for Old Microprocessors")
          (implies . ())
          (last-checked . 1557339809)
          (last-edit . 1529697209)
          (last-updated . 1536595166)
          (modules
           .
           ((lib "virtual-mpu/emulate.rkt")
            (lib "virtual-mpu/private/emulator/gui/screen.rkt")
            (lib "virtual-mpu/private/asm-lang/expander.rkt")
            (lib "virtual-mpu/private/emulator/gui/display.rkt")
            (lib "virtual-mpu/private/emulator/gui/element.rkt")
            (lib "virtual-mpu/private/emulator/gui/base.rkt")
            (lib "virtual-mpu/private/emulator/gui/box.rkt")
            (lib "virtual-mpu/private/emulator/gui/input.rkt")
            (lib "virtual-mpu/private/mpu-lang/lang.rkt")
            (lib "virtual-mpu/private/mpu-lang/test-lang.rkt")
            (lib "virtual-mpu/asm.rkt")
            (lib "virtual-mpu/op-table.rkt")
            (lib "virtual-mpu/private/emulator/gui/area.rkt")
            (lib "virtual-mpu/private/mpu-lang/structs.rkt")
            (lib "virtual-mpu/test.rkt")
            (lib "virtual-mpu/private/emulator/gui/grid.rkt")
            (lib "virtual-mpu/s-record.rkt")
            (lib "virtual-mpu/private/emulator/terminal.rkt")
            (lib "virtual-mpu/assemble.rkt")
            (lib "virtual-mpu/private/asm-lang/s-record.rkt")
            (lib "virtual-mpu/main.rkt")
            (lib "virtual-mpu/private/asm-lang/parser.rkt")
            (lib "virtual-mpu/utils.rkt")
            (lib "virtual-mpu/private/emulator/emulator.rkt")
            (lib "virtual-mpu/machines/ril011w.rkt")
            (lib "virtual-mpu/private/asm-lang/reader.rkt")
            (lib "virtual-mpu/private/emulator/gui/label.rkt")
            (lib "virtual-mpu/private/mpu-lang/op-table.rkt")
            (lib "virtual-mpu/private/asm-lang/assembler.rkt")
            (lib "virtual-mpu/cli.rkt")
            (lib "virtual-mpu/mpu.rkt")
            (lib "virtual-mpu/private/emulator/gui/buffer.rkt")))
          (name . "virtual-mpu")
          (nix-sha256
           .
           "09gf2s5mf084j19dbfyz87vm0162nbhqfx92whw0wnbc8vwbis12")
          (ring . 2)
          (search-terms
           .
           #hasheq((|6800| . #t)
                   (:build-success: . #t)
                   (assembler . #t)
                   (author:jerome.martin.dev@gmail.com . #t)
                   (emulator . #t)
                   (motorola . #t)
                   (ring:2 . #t)))
          (source . "https://github.com/euhmeuh/virtual-mpu.git")
          (tags . ("6800" "assembler" "emulator" "motorola"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "d8056f928a646bb9ac96fdb78cde794efc82d144")
                          (source
                           .
                           "https://github.com/euhmeuh/virtual-mpu.git")
                          (source_url
                           .
                           "https://github.com/euhmeuh/virtual-mpu.git")))))))
 ("vlc"
  .
  #hasheq((author . "neil@neilvandyke.org")
          (authors . ("neil@neilvandyke.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "vlc" "doc/vlc@vlc/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/vlc.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/vlc.txt")))
          (checksum . "e485bb6cef1936e0587f2115dd7d2c1cffd4c832")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base" "mcfly" "overeasy" "racket-doc" "scribble-lib"))
          (dependency-names
           .
           ("base" "mcfly" "overeasy" "racket-doc" "scribble-lib"))
          (description . "VideoLAN VLC Media Player Control")
          (implies . ())
          (last-checked . 1557339809)
          (last-edit . 1456645661)
          (last-updated . 1502816520)
          (modules . ((lib "vlc/main.rkt") (lib "vlc/vlc.scrbl")))
          (name . "vlc")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:neil@neilvandyke.org . #t)
                   (media . #t)
                   (ring:1 . #t)
                   (video . #t)))
          (source . "http://www.neilvandyke.org/racket/vlc.zip")
          (tags . ("media" "video"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "e485bb6cef1936e0587f2115dd7d2c1cffd4c832")
                          (source
                           .
                           "http://www.neilvandyke.org/racket/vlc.zip")
                          (source_url
                           .
                           "http://www.neilvandyke.org/racket/vlc.zip")))))))
 ("vr-lang"
  .
  #hasheq((author . "stephen@thoughtstem.com")
          (authors . ("stephen@thoughtstem.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("salvage" "vr-lang" "doc/vr-lang@vr-lang/index.html")))
                 (failure-log . "server/built/fail/vr-lang.txt")
                 (min-failure-log . #f)
                 (success-log . #f)
                 (test-failure-log . #f)
                 (test-success-log . #f)))
          (checksum . "132e088fbcd1903a3ac1c6cdebe18eda64395566")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("hostname" "simple-qr" "urlang"))
          (dependency-names . ("hostname" "simple-qr" "urlang"))
          (description
           .
           "Racket for Virtual Reality.  Compiles to A-frame.io.\r\n\r\nWe made this for educational purposes at ThoughtSTEM.  However, you could probably use this in production in some scenarios. ")
          (implies . ())
          (last-checked . 1557339810)
          (last-edit . 1521245956)
          (last-updated . 1531957594)
          (modules
           .
           ((lib
             "vr-lang/demos/remote-component-demo4/vr-star-system-demo4.rkt")
            (lib "vr-lang/attribute-definer-test.rkt")
            (lib "vr-lang/demos/hello-world/vr-hello-world.rkt")
            (lib "vr-lang/vr.rkt")
            (lib "vr-lang/demos/hello-world2/vr-hello-world2.rkt")
            (lib
             "vr-lang/demos/remote-component-demo5/vr-star-system-demo.rkt")
            (lib "vr-lang/test.rkt")
            (lib "vr-lang/component-definer.rkt")
            (lib "vr-lang/demos/hello-world3/vr-hello-world3.rkt")
            (lib "vr-lang/main.rkt")
            (lib
             "vr-lang/demos/remote-component-demo3/remote-component-demo3.rkt")
            (lib "vr-lang/aframe-component-test.rkt")
            (lib "vr-lang/vr-lang.rkt")
            (lib
             "vr-lang/demos/remote-component-demo/vr-star-system-demo.rkt")
            (lib "vr-lang/demos/demo1/testvr.rkt")
            (lib "vr-lang/attribute-definer.rkt")
            (lib "vr-lang/my-ip-qr.rkt")
            (lib
             "vr-lang/demos/remote-component-demo2/vr-star-system-demo2.rkt")
            (lib "vr-lang/vr-lang.scrbl")
            (lib "vr-lang/advanced-components.rkt")))
          (name . "vr-lang")
          (nix-sha256
           .
           "0m2mk1lsi9n3zagfqi0v8pzihxfqafjh915kg7n5asw39dszlzl9")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-fail: . #t)
                   (:docs-error: . #t)
                   (:docs: . #t)
                   (author:stephen@thoughtstem.com . #t)
                   (education . #t)
                   (games . #t)
                   (ring:2 . #t)
                   (vr . #t)))
          (source . "https://github.com/thoughtstem/vr-lang.git")
          (tags . ("education" "games" "vr"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "132e088fbcd1903a3ac1c6cdebe18eda64395566")
                          (source
                           .
                           "https://github.com/thoughtstem/vr-lang.git")
                          (source_url
                           .
                           "https://github.com/thoughtstem/vr-lang.git")))))))
 ("w3s"
  .
  #hasheq((author . "juzhenliang@gmail.com")
          (authors . ("juzhenliang@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "css" "doc/css@w3s/index.html")
                   ("main" "svg" "doc/svg@w3s/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/w3s.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/w3s.txt")))
          (checksum . "ec2556f76d4ce41b2ffc6edb690d9ded32bffbec")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "graphics"
            "typed-racket-lib"
            "typed-racket-more"
            "scribble-lib"
            "racket-doc"))
          (dependency-names
           .
           ("base"
            "graphics"
            "typed-racket-lib"
            "typed-racket-more"
            "scribble-lib"
            "racket-doc"))
          (description . "W3 Standards Implemented in Typed Racket")
          (implies . ())
          (last-checked . 1557339810)
          (last-edit . 1537885223)
          (last-updated . 1537405151)
          (modules
           .
           ((lib "css/tamer/syntax.rkt")
            (lib "css/digitama/text-decor.rkt")
            (lib "css/tamer/specificity.rkt")
            (lib "css/digitama/syntax/condition.rkt")
            (lib "css/sugar.rkt")
            (lib "css/digitama/background.rkt")
            (lib "css/village/hashlang/indentation.rkt")
            (lib "sgml/digitama/tokenizer.rkt")
            (lib "css/village/cascade.rkt")
            (lib "svg/main.rkt")
            (lib "css/village/hashlang/highlight.rkt")
            (lib "css/digitama/syntax/digicore.rkt")
            (lib "css/digitama/syntax/stdin.rkt")
            (lib "css/color.rkt")
            (lib "sgml/village/xmllang/indentation.rkt")
            (lib "css/digitama/syntax/grammar.rkt")
            (lib "css/digitama/syntax/cascade.rkt")
            (lib "css/values.rkt")
            (lib "css/tamer/configure.rkt")
            (lib "css/digitama/color.rkt")
            (lib "css/bonus.rkt")
            (lib "svg/tamer/svg.scrbl")
            (lib "css/image.rkt")
            (lib "css/digitama/syntax/tokenizer.rkt")
            (lib "css/digitama/syntax/misc.rkt")
            (lib "sgml/digitama/digicore.rkt")
            (lib "css/racket.rkt")
            (lib "css/main.rkt")
            (lib "css/tamer/media.rkt")
            (lib "css/digitama/syntax/parser.rkt")
            (lib "css/digitama/syntax/variables.rkt")
            (lib "sgml/digitama/stdin.rkt")
            (lib "css/digitama/syntax/selector.rkt")
            (lib "css/recognizer.rkt")
            (lib "css/village/hashlang/reader.rkt")
            (lib "css/syntax.rkt")
            (lib "css/font.rkt")
            (lib "sgml/village/xmllang/reader.rkt")
            (lib "css/digitama/font.rkt")
            (lib "sgml/digitama/misc.rkt")
            (lib "sgml/village/xmllang/highlight.rkt")
            (lib "css/tamer/bitmap.rkt")
            (lib "css/digitama/image.rkt")
            (lib "css/tamer/css.scrbl")
            (lib "css/digitama/syntax/unsafe/cascade.rkt")
            (lib "css/digitama/syntax/dimension.rkt")
            (lib "css/digitama/device-adapt.rkt")
            (lib "css/background.rkt")
            (lib "sgml/digitama/document.rkt")
            (lib "sgml/xml.rkt")
            (lib "css/text-decor.rkt")))
          (name . "w3s")
          (nix-sha256
           .
           "17jxlzqyghis1ry8skbwxw1hx3mfajyw9gc7n99j178yqk9x21b2")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:juzhenliang@gmail.com . #t)
                   (css . #t)
                   (parser . #t)
                   (ring:1 . #t)
                   (svg . #t)
                   (typed-racket . #t)
                   (unstable . #t)
                   (w3 . #t)
                   (xml . #t)))
          (source . "https://github.com/wargrey/w3s.git")
          (tags . ("css" "parser" "svg" "typed-racket" "unstable" "w3" "xml"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "ec2556f76d4ce41b2ffc6edb690d9ded32bffbec")
                          (source . "https://github.com/wargrey/w3s.git")
                          (source_url
                           .
                           "https://github.com/wargrey/w3s.git")))))))
 ("warp"
  .
  #hasheq((author . "david.vanderson@gmail.com")
          (authors . ("david.vanderson@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/warp.txt")
                 (test-failure-log . "server/built/test-fail/warp.txt")
                 (test-success-log . #f)))
          (checksum . "cdc1d0bd942780fb5360dc6a34a2a06cf9518408")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base" "draw-lib" "gui-lib" "pict-lib" "mode-lambda"))
          (dependency-names
           .
           ("base" "draw-lib" "gui-lib" "pict-lib" "mode-lambda"))
          (description
           .
           "Light multiplayer space themed game for LAN parties.")
          (implies . ())
          (last-checked . 1557339810)
          (last-edit . 1533929642)
          (last-updated . 1538279947)
          (modules
           .
           ((lib "warp/utils.rkt")
            (lib "warp/dmg.rkt")
            (lib "warp/explosion.rkt")
            (lib "warp/effect.rkt")
            (lib "warp/draw-utils.rkt")
            (lib "warp/warp.rkt")
            (lib "warp/change.rkt")
            (lib "warp/ml.rkt")
            (lib "warp/ships.rkt")
            (lib "warp/probe.rkt")
            (lib "warp/scenarios/base-defense.rkt")
            (lib "warp/main.rkt")
            (lib "warp/scenarios/pilot-training.rkt")
            (lib "warp/draw.rkt")
            (lib "warp/scenarios/all-ships.rkt")
            (lib "warp/shield.rkt")
            (lib "warp/scenario.rkt")
            (lib "warp/plasma.rkt")
            (lib "warp/timing-test.rkt")
            (lib "warp/sandbox.rkt")
            (lib "warp/server.rkt")
            (lib "warp/cannon.rkt")
            (lib "warp/scenarios/asteroid-search.rkt")
            (lib "warp/defs.rkt")
            (lib "warp/scenarios/racketcon2018.rkt")
            (lib "warp/missile.rkt")
            (lib "warp/mine.rkt")
            (lib "warp/quadtree.rkt")
            (lib "warp/scenarios/testing.rkt")
            (lib "warp/client.rkt")
            (lib "warp/order.rkt")
            (lib "warp/physics.rkt")
            (lib "warp/upgrade.rkt")
            (lib "warp/pilot.rkt")
            (lib "warp/pbolt.rkt")
            (lib "warp/combined.rkt")))
          (name . "warp")
          (nix-sha256
           .
           "0la0cl1114sjdpahgkyjjn6waih582xy51arjc48rr99fsdhpg4l")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:david.vanderson@gmail.com . #t)
                   (games . #t)
                   (ring:2 . #t)))
          (source . "https://github.com/david-vanderson/warp.git")
          (tags . ("games"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "cdc1d0bd942780fb5360dc6a34a2a06cf9518408")
                          (source
                           .
                           "https://github.com/david-vanderson/warp.git")
                          (source_url
                           .
                           "https://github.com/david-vanderson/warp.git")))))))
 ("wavelet-transform-haar-1d"
  .
  #hasheq((author . "clements@racket-lang.org")
          (authors . ("clements@racket-lang.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "wavelet"
                    "doc/wavelet@wavelet-transform-haar-1d/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log
                  .
                  "server/built/install/wavelet-transform-haar-1d.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/wavelet-transform-haar-1d.txt")))
          (checksum . "a24d96252701f80dbd382fb4a0dccaf2d19160b1")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "math-lib"
            "plot-gui-lib"
            "typed-racket-lib"
            "typed-racket-more"
            "rackunit-lib"
            "racket-doc"
            "scribble-lib"))
          (dependency-names
           .
           ("base"
            "math-lib"
            "plot-gui-lib"
            "typed-racket-lib"
            "typed-racket-more"
            "rackunit-lib"
            "racket-doc"
            "scribble-lib"))
          (description
           .
           "A library to perform forward and reverse 1-d Haar Wavelet transforms")
          (implies . ())
          (last-checked . 1557339810)
          (last-edit . 1450500903)
          (last-updated . 1502816521)
          (modules
           .
           ((lib "wavelet/haar-1d.rkt")
            (lib "wavelet/wavelet.scrbl")
            (lib "wavelet/tests.rkt")
            (lib "wavelet/main.rkt")))
          (name . "wavelet-transform-haar-1d")
          (nix-sha256
           .
           "130gs0z7ibcd02dbrzvy0n5l4z8jl8ql8fbfvapvyqxkk4q1ww2h")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (audio . #t)
                   (author:clements@racket-lang.org . #t)
                   (math . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/jbclements/wavelet-transform-haar-1d")
          (tags . ("audio" "math"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "a24d96252701f80dbd382fb4a0dccaf2d19160b1")
                          (source
                           .
                           "git://github.com/jbclements/wavelet-transform-haar-1d")
                          (source_url
                           .
                           "http://github.com/jbclements/wavelet-transform-haar-1d/tree/master")))))))
 ("web-galaxy"
  .
  #hasheq((author . "jerome.martin.dev@gmail.com")
          (authors . ("jerome.martin.dev@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . "server/built/deps/web-galaxy.txt")
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/web-galaxy.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/web-galaxy.txt")))
          (checksum . "0b71f59f461c85304d99da57e2cc94645cad9c60")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("web-galaxy-lib" "web-galaxy-doc"))
          (dependency-names . ("web-galaxy-lib" "web-galaxy-doc"))
          (description
           .
           "A minimalist web framework for the Racket web-server")
          (implies . ("web-galaxy-lib" "web-galaxy-doc"))
          (last-checked . 1557339810)
          (last-edit . 1529915260)
          (last-updated . 1556885261)
          (modules . ())
          (name . "web-galaxy")
          (nix-sha256
           .
           "0klvxnlfinv0j4h7jv3rsk5kgj0nq365pvy5zh8sd55q9xa2j7kv")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-dep-fail: . #t)
                   (:build-success: . #t)
                   (author:jerome.martin.dev@gmail.com . #t)
                   (framework . #t)
                   (html . #t)
                   (minimalist . #t)
                   (ring:2 . #t)
                   (server . #t)
                   (web . #t)))
          (source
           .
           "https://github.com/euhmeuh/web-galaxy.git?path=web-galaxy")
          (tags . ("framework" "html" "minimalist" "server" "web"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "0b71f59f461c85304d99da57e2cc94645cad9c60")
                          (source
                           .
                           "https://github.com/euhmeuh/web-galaxy.git?path=web-galaxy")
                          (source_url
                           .
                           "https://github.com/euhmeuh/web-galaxy.git?path=web-galaxy")))))))
 ("web-galaxy-doc"
  .
  #hasheq((author . "jerome.martin.dev@gmail.com")
          (authors . ("jerome.martin.dev@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/web-galaxy-doc.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/web-galaxy-doc.txt")))
          (checksum . "0b71f59f461c85304d99da57e2cc94645cad9c60")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ())
          (dependency-names . ())
          (description . "Documentation for web-galaxy.")
          (implies . ())
          (last-checked . 1557339810)
          (last-edit . 1529916686)
          (last-updated . 1556885261)
          (modules . ())
          (name . "web-galaxy-doc")
          (nix-sha256
           .
           "0klvxnlfinv0j4h7jv3rsk5kgj0nq365pvy5zh8sd55q9xa2j7kv")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:jerome.martin.dev@gmail.com . #t)
                   (documentation . #t)
                   (framework . #t)
                   (html . #t)
                   (minimalist . #t)
                   (ring:2 . #t)
                   (server . #t)
                   (web . #t)))
          (source
           .
           "https://github.com/euhmeuh/web-galaxy.git?path=web-galaxy-doc")
          (tags
           .
           ("documentation" "framework" "html" "minimalist" "server" "web"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "0b71f59f461c85304d99da57e2cc94645cad9c60")
                          (source
                           .
                           "https://github.com/euhmeuh/web-galaxy.git?path=web-galaxy-doc")
                          (source_url
                           .
                           "https://github.com/euhmeuh/web-galaxy.git?path=web-galaxy-doc")))))))
 ("web-galaxy-lib"
  .
  #hasheq((author . "jerome.martin.dev@gmail.com")
          (authors . ("jerome.martin.dev@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . "server/built/deps/web-galaxy-lib.txt")
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/web-galaxy-lib.txt")
                 (test-failure-log
                  .
                  "server/built/test-fail/web-galaxy-lib.txt")
                 (test-success-log . #f)))
          (checksum . "0b71f59f461c85304d99da57e2cc94645cad9c60")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "anaphoric" "web-server-lib" "urlang"))
          (dependency-names . ("base" "anaphoric" "web-server-lib" "urlang"))
          (description . "Implementation of web-galaxy.")
          (implies . ())
          (last-checked . 1557339810)
          (last-edit . 1529916532)
          (last-updated . 1556885261)
          (modules
           .
           ((lib "web-galaxy/response.rkt")
            (lib "web-galaxy/site-mode.rkt")
            (lib "web-galaxy/utils.rkt")
            (lib "web-galaxy/serve.rkt")
            (lib "web-galaxy/renderer.rkt")
            (lib "web-galaxy/translate.rkt")
            (lib "web-galaxy/javascript.rkt")
            (lib "web-galaxy/js/request.rkt")
            (lib "web-galaxy/entities.rkt")))
          (name . "web-galaxy-lib")
          (nix-sha256
           .
           "0klvxnlfinv0j4h7jv3rsk5kgj0nq365pvy5zh8sd55q9xa2j7kv")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-dep-fail: . #t)
                   (:build-success: . #t)
                   (author:jerome.martin.dev@gmail.com . #t)
                   (framework . #t)
                   (html . #t)
                   (minimalist . #t)
                   (ring:2 . #t)
                   (server . #t)
                   (web . #t)))
          (source
           .
           "https://github.com/euhmeuh/web-galaxy.git?path=web-galaxy-lib")
          (tags . ("framework" "html" "minimalist" "server" "web"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "0b71f59f461c85304d99da57e2cc94645cad9c60")
                          (source
                           .
                           "https://github.com/euhmeuh/web-galaxy.git?path=web-galaxy-lib")
                          (source_url
                           .
                           "https://github.com/euhmeuh/web-galaxy.git?path=web-galaxy-lib")))))))
 ("web-galaxy-test"
  .
  #hasheq((author . "jerome.martin.dev@gmail.com")
          (authors . ("jerome.martin.dev@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/web-galaxy-test.txt")
                 (test-failure-log
                  .
                  "server/built/test-fail/web-galaxy-test.txt")
                 (test-success-log . #f)))
          (checksum . "0b71f59f461c85304d99da57e2cc94645cad9c60")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "rackunit-lib" "web-galaxy-lib"))
          (dependency-names . ("base" "rackunit-lib" "web-galaxy-lib"))
          (description . "Tests for web-galaxy.")
          (implies . ())
          (last-checked . 1557339810)
          (last-edit . 1529916706)
          (last-updated . 1556885262)
          (modules
           .
           ((lib "tests/web-galaxy/pony-blog/pages/article.rkt")
            (lib "tests/web-galaxy/pony-blog/pages/index.rkt")
            (lib "tests/web-galaxy/pony-blog/run.rkt")
            (lib "tests/web-galaxy/pony-blog/pages/_base.rkt")
            (lib "tests/web-galaxy/pony-blog/models/article.rkt")))
          (name . "web-galaxy-test")
          (nix-sha256
           .
           "0klvxnlfinv0j4h7jv3rsk5kgj0nq365pvy5zh8sd55q9xa2j7kv")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:jerome.martin.dev@gmail.com . #t)
                   (framework . #t)
                   (html . #t)
                   (minimalist . #t)
                   (ring:2 . #t)
                   (server . #t)
                   (tests . #t)
                   (web . #t)))
          (source
           .
           "https://github.com/euhmeuh/web-galaxy.git?path=web-galaxy-test")
          (tags . ("framework" "html" "minimalist" "server" "tests" "web"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "0b71f59f461c85304d99da57e2cc94645cad9c60")
                          (source
                           .
                           "https://github.com/euhmeuh/web-galaxy.git?path=web-galaxy-test")
                          (source_url
                           .
                           "https://github.com/euhmeuh/web-galaxy.git?path=web-galaxy-test")))))))
 ("web-io"
  .
  #hasheq((author . "matthias@ccs.neu.edu")
          (authors . ("matthias@ccs.neu.edu"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . "server/built/deps/web-io.txt")
                 (docs . (("main" "web-io" "doc/web-io@web-io/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/web-io.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/web-io.txt")))
          (checksum . "2225941f8ff49e1aa113c8dcacacfcf2b4a49b8a")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("racket"
            "net-lib"
            "htdp-lib"
            "rackunit-lib"
            "scribble-lib"
            "racket-doc"))
          (dependency-names
           .
           ("net-lib" "htdp-lib" "rackunit-lib" "scribble-lib" "racket-doc"))
          (description . "a replacement teach pack for F I at NEU (2016)")
          (implies . ())
          (last-checked . 1557339810)
          (last-edit . 1476806439)
          (last-updated . 1502816521)
          (modules
           .
           ((lib "web-io/scribblings/web-io.scrbl") (lib "web-io/main.rkt")))
          (name . "web-io")
          (nix-sha256
           .
           "1civ4mirhli08qncl8khg8gxxgq1wlv61nhhjybpl98sh39ig115")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-dep-fail: . #t)
                   (:build-success: . #t)
                   (:docs: . #t)
                   (:no-tag: . #t)
                   (author:matthias@ccs.neu.edu . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/mfelleisen/web-io.git")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "2225941f8ff49e1aa113c8dcacacfcf2b4a49b8a")
                          (source . "git://github.com/mfelleisen/web-io.git")
                          (source_url
                           .
                           "http://github.com/mfelleisen/web-io.git/tree/master")))))))
 ("web-server"
  .
  #hash((author . "jay@racket-lang.org")
        (checksum . "21c4b915b19ea0233de8f13bacd22637c5aa00ab")
        (dependencies . ("web-server-lib" "web-server-doc"))
        (dependency-names . ("web-server-lib" "web-server-doc"))
        (description . "jay@racket-lang.org")
        (modules . ())
        (name . "web-server")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/web-server.zip")
        (tags . ())))
 ("web-server-doc"
  .
  #hash((author . "jay@racket-lang.org")
        (checksum . "23fd20ddd44f5a8b57cc0535cab12c8f163146f4")
        (dependencies
         .
         ("base"
          "net-doc"
          "net-cookies-doc"
          "rackunit-doc"
          "compatibility-doc"
          "db-doc"
          "scribble-doc"
          "compatibility-lib"
          "db-lib"
          "net-lib"
          "net-cookies-lib"
          "rackunit-lib"
          "sandbox-lib"
          "scribble-lib"
          "web-server-lib"
          "racket-doc"))
        (dependency-names
         .
         ("base"
          "net-doc"
          "net-cookies-doc"
          "rackunit-doc"
          "compatibility-doc"
          "db-doc"
          "scribble-doc"
          "compatibility-lib"
          "db-lib"
          "net-lib"
          "net-cookies-lib"
          "rackunit-lib"
          "sandbox-lib"
          "scribble-lib"
          "web-server-lib"
          "racket-doc"))
        (description . "jay@racket-lang.org")
        (modules . ())
        (name . "web-server-doc")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/web-server-doc.zip")
        (tags . ())))
 ("web-server-lib"
  .
  #hash((author . "jay@racket-lang.org")
        (checksum . "002063b1609ea4b0da3746241eaaa2c33c6d5181")
        (dependencies
         .
         ("srfi-lite-lib"
          ("base" #:version "6.2.900.15")
          "net-lib"
          "net-cookies-lib"
          "compatibility-lib"
          "scribble-text-lib"
          "parser-tools-lib"
          "rackunit-lib"))
        (dependency-names
         .
         ("srfi-lite-lib"
          "base"
          "net-lib"
          "net-cookies-lib"
          "compatibility-lib"
          "scribble-text-lib"
          "parser-tools-lib"
          "rackunit-lib"))
        (description . "jay@racket-lang.org")
        (modules . ())
        (name . "web-server-lib")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/web-server-lib.zip")
        (tags . ())))
 ("web-server-test"
  .
  #hash((author . "jay@racket-lang.org")
        (checksum . "62c9a6a6adfa075b20f6a581c1120eca764af106")
        (dependencies
         .
         ("base"
          "compatibility-lib"
          "eli-tester"
          "htdp-lib"
          "rackunit-lib"
          "web-server-lib"
          "net-cookies"))
        (dependency-names
         .
         ("base"
          "compatibility-lib"
          "eli-tester"
          "htdp-lib"
          "rackunit-lib"
          "web-server-lib"
          "net-cookies"))
        (description . "jay@racket-lang.org")
        (modules . ())
        (name . "web-server-test")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/web-server-test.zip")
        (tags . ())))
 ("web-sessions"
  .
  #hasheq((author . "nadeem@acm.org")
          (authors . ("nadeem@acm.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . "server/built/deps/web-sessions.txt")
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/web-sessions.txt")
                 (test-failure-log
                  .
                  "server/built/test-fail/web-sessions.txt")
                 (test-success-log . #f)))
          (checksum . "ba973ee46a41a81536ddf5d6a8ea8f928385b217")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ())
          (dependency-names . ())
          (description . "Simple web sessions")
          (implies . ())
          (last-checked . 1557339811)
          (last-edit . 1545797809)
          (last-updated . 1545843534)
          (modules
           .
           ((lib "web-sessions/example.rkt") (lib "web-sessions/main.rkt")))
          (name . "web-sessions")
          (nix-sha256
           .
           "1nf9k7dlh1da840880lanivqmk12n5idxsxl9940hg5dawysi6g8")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-dep-fail: . #t)
                   (:build-success: . #t)
                   (author:nadeem@acm.org . #t)
                   (ring:2 . #t)
                   (web . #t)))
          (source . "https://bitbucket.org/nadeemabdulhamid/web-sessions.git")
          (tags . ("web"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "ba973ee46a41a81536ddf5d6a8ea8f928385b217")
                          (source
                           .
                           "https://bitbucket.org/nadeemabdulhamid/web-sessions.git")
                          (source_url
                           .
                           "https://bitbucket.org/nadeemabdulhamid/web-sessions.git")))))))
 ("webapi"
  .
  #hasheq((author . "ryanc@racket-lang.org")
          (authors . ("ryanc@racket-lang.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "webapi" "doc/webapi@webapi/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/webapi.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/webapi.txt")))
          (checksum . "c1a172e360db667be49dcd81eba85f4a35b73a94")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "sxml"
            "html-writing"
            "compatibility-lib"
            "web-server-lib"
            "racket-doc"
            "scribble-lib"))
          (dependency-names
           .
           ("base"
            "sxml"
            "html-writing"
            "compatibility-lib"
            "web-server-lib"
            "racket-doc"
            "scribble-lib"))
          (description
           .
           "Implementations of a few web APIs, including OAuth2, PicasaWeb, and Blogger.")
          (implies . ())
          (last-checked . 1557339811)
          (last-edit . 1382383606)
          (last-updated . 1502816524)
          (modules
           .
           ((lib "webapi/picasa.rkt")
            (lib "webapi/private/sxml.rkt")
            (lib "webapi/private/oauth2-web.rkt")
            (lib "webapi/atom-resource.rkt")
            (lib "webapi/blogger.rkt")
            (lib "webapi/atom.rkt")
            (lib "webapi/private/has-atom.rkt")
            (lib "webapi/scribblings/blogger.scrbl")
            (lib "webapi/scribblings/oauth2.scrbl")
            (lib "webapi/private/unstable-lazy-require.rkt")
            (lib "webapi/scribblings/picasa.scrbl")
            (lib "webapi/scribblings/config.rkt")
            (lib "webapi/oauth2.rkt")
            (lib "webapi/scribblings/atom.scrbl")
            (lib "webapi/private/net.rkt")
            (lib "webapi/private/oauth2.rkt")
            (lib "webapi/scribblings/webapi.scrbl")
            (lib "webapi/main.rkt")))
          (name . "webapi")
          (nix-sha256
           .
           "0sxib8fpahn8is4p121a0mwm4dkk6qy8w11fw5wvxfbywll46hcq")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:ryanc@racket-lang.org . #t)
                   (net . #t)
                   (oauth . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/rmculpepper/webapi#pkg")
          (tags . ("net" "oauth"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "c1a172e360db667be49dcd81eba85f4a35b73a94")
                          (source . "git://github.com/rmculpepper/webapi#pkg")
                          (source_url
                           .
                           "http://github.com/rmculpepper/webapi/tree/master#pkg")))))))
 ("webscraperhelper"
  .
  #hasheq((author . "neil@neilvandyke.org")
          (authors . ("neil@neilvandyke.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "webscraperhelper"
                    "doc/webscraperhelper@webscraperhelper/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/webscraperhelper.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/webscraperhelper.txt")))
          (checksum . "0cc7cf1c6ea962ad03fcf18f9b3230090725f175")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "mcfly" "racket-doc" "scribble-lib"))
          (dependency-names . ("base" "mcfly" "racket-doc" "scribble-lib"))
          (description . "Generating SXPath Queries from SXML Examples")
          (implies . ())
          (last-checked . 1557339811)
          (last-edit . 1456658158)
          (last-updated . 1502816525)
          (modules
           .
           ((lib "webscraperhelper/main.rkt")
            (lib "webscraperhelper/webscraperhelper.scrbl")))
          (name . "webscraperhelper")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:neil@neilvandyke.org . #t)
                   (html . #t)
                   (ring:1 . #t)
                   (sxml . #t)))
          (source . "http://www.neilvandyke.org/racket/webscraperhelper.zip")
          (tags . ("html" "sxml"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "0cc7cf1c6ea962ad03fcf18f9b3230090725f175")
                          (source
                           .
                           "http://www.neilvandyke.org/racket/webscraperhelper.zip")
                          (source_url
                           .
                           "http://www.neilvandyke.org/racket/webscraperhelper.zip")))))))
 ("wffi"
  .
  #hasheq((author . "greghendershott@gmail.com")
          (authors . ("greghendershott@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/wffi.txt")
                 (test-failure-log . "server/built/test-fail/wffi.txt")
                 (test-success-log . #f)))
          (checksum . "03bd59bea2aa6e0a855de28fb5bb18769ed04b3b")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "http" "parser-tools-lib" "rackunit-lib"))
          (dependency-names
           .
           ("base" "http" "parser-tools-lib" "rackunit-lib"))
          (description
           .
           "Wrap web APIs using a \"literate programming\" style where documentation-is-specification.")
          (implies . ())
          (last-checked . 1557339812)
          (last-edit . 1396443586)
          (last-updated . 1502816526)
          (modules
           .
           ((lib "wffi/split.rkt")
            (lib "wffi/examples/app.net.rkt")
            (lib "wffi/json.rkt")
            (lib "wffi/server.rkt")
            (lib "wffi/api.rkt")
            (lib "wffi/key-value.rkt")
            (lib "wffi/client.rkt")
            (lib "wffi/examples/last.fm.rkt")
            (lib "wffi/markdown.rkt")
            (lib "wffi/main.rkt")
            (lib "wffi/parse-response.rkt")
            (lib "wffi/examples/server-example.rkt")
            (lib "wffi/examples/horseebooks.rkt")
            (lib "wffi/examples/google-plus.rkt")
            (lib "wffi/parse-markdown.rkt")
            (lib "wffi/parse-request.rkt")
            (lib "wffi/dict-merge.rkt")
            (lib "wffi/examples/imgur.rkt")))
          (name . "wffi")
          (nix-sha256
           .
           "0rblpn1q74znb0a17danjjb7j6zqyx13ql4qljhmb5qga7mh0wl2")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:greghendershott@gmail.com . #t)
                   (ring:1 . #t)
                   (web . #t)))
          (source . "github://github.com/greghendershott/wffi/master")
          (tags . ("web"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "03bd59bea2aa6e0a855de28fb5bb18769ed04b3b")
                          (source
                           .
                           "github://github.com/greghendershott/wffi/master")
                          (source_url
                           .
                           "http://github.com/greghendershott/wffi/tree/master")))))))
 ("whalesong"
  .
  #hasheq((author . "jensaxel@soegaard.net")
          (authors . ("jensaxel@soegaard.net"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("none" "manual")))
                 (failure-log . "server/built/fail/whalesong.txt")
                 (min-failure-log . #f)
                 (success-log . #f)
                 (test-failure-log . #f)
                 (test-success-log . #f)))
          (checksum . "03c99841a3c4b40220ed5f05a2a772ed5d527b20")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ())
          (dependency-names . ())
          (description . "")
          (implies . ())
          (last-checked . 1557339812)
          (last-edit . 1426409933)
          (last-updated . 1502816526)
          (modules
           .
           ((lib "whalesong/tests/more-tests/isolating-bug.rkt")
            (lib "whalesong/resource.rkt")
            (lib "whalesong/selfhost/js-assembler/assemble-helpers.rkt")
            (lib "whalesong/lang/private/match/define-forms.rkt")
            (lib "whalesong/make/make-structs.rkt")
            (lib "whalesong/call-with-timeout.rkt")
            (lib "whalesong/resource/racket-impl.rkt")
            (lib "whalesong/examples/snip.rkt")
            (lib "whalesong/tests/more-tests/map.rkt")
            (lib "whalesong/web-world/event.rkt")
            (lib "whalesong/tests/more-tests/printing.rkt")
            (lib "whalesong/tests/more-tests/exn-1.rkt")
            (lib "whalesong/tests/more-tests/cont-marks-1.rkt")
            (lib "whalesong/world.rkt")
            (lib
             "whalesong/tests/older-tests/moby-programs/continuation-marks.rkt")
            (lib "whalesong/repl-prototype/sandboxed-server.rkt")
            (lib "whalesong/tests/test-parse.rkt")
            (lib "whalesong/parser/parse-bytecode-5.1.2.rkt")
            (lib "whalesong/tests/module-test/m2.rkt")
            (lib "whalesong/lang/private/match/legacy-match.rkt")
            (lib "whalesong/js-assembler/assemble-structs.rkt")
            (lib "whalesong/lang/base.rkt")
            (lib "whalesong/tests/more-tests/nqueens.rkt")
            (lib "whalesong/tests/more-tests/simple-functions.rkt")
            (lib "whalesong/tests/more-tests/nestedloop.rkt")
            (lib "whalesong/world/racket-impl.rkt")
            (lib "whalesong/tests/older-tests/moby-programs/more-jsworld.rkt")
            (lib "whalesong/tests/test-images.rkt")
            (lib
             "whalesong/web-world/examples/forward-backward/forward-backward.rkt")
            (lib "whalesong/tests/older-tests/require-test/m.rkt")
            (lib "whalesong/tests/more-tests/booleans.rkt")
            (lib
             "whalesong/tests/older-tests/moby-programs/double-client.rkt")
            (lib
             "whalesong/tests/older-tests/moby-programs/display-and-write.rkt")
            (lib "whalesong/tests/more-tests/fft.rkt")
            (lib
             "whalesong/web-world/examples/dwarves-with-remove/dwarves-with-remove.rkt")
            (lib "whalesong/lang/posn.rkt")
            (lib "whalesong/sandbox/cloth-simulation.rkt")
            (lib "whalesong/tests/older-tests/benchmarks/conform.rkt")
            (lib "whalesong/tests/more-tests/hello-bf.rkt")
            (lib "whalesong/resource/compile-time.rkt")
            (lib "whalesong/resource/query.rkt")
            (lib "whalesong/examples/cs019/hello.rkt")
            (lib
             "whalesong/tests/older-tests/moby-programs/continuation-prompts-3.rkt")
            (lib "whalesong/lang/whalesong.rkt")
            (lib "whalesong/tests/older-tests/moby-programs/permissions.rkt")
            (lib "whalesong/storage.rkt")
            (lib "whalesong/tests/more-tests/weird-cc.rkt")
            (lib "whalesong/tests/more-tests/earley.rkt")
            (lib
             "whalesong/tests/older-tests/moby-programs/repeating-decimals.rkt")
            (lib "whalesong/tests/older-tests/moby-programs/seconds.rkt")
            (lib "whalesong/resource/coerse-content-bytes.rkt")
            (lib "whalesong/bf/language.rkt")
            (lib "whalesong/selfhost/base64.rkt")
            (lib "whalesong/tool/tool-ui.rkt")
            (lib
             "whalesong/tests/older-tests/moby-programs/with-handlers-2.rkt")
            (lib "whalesong/tests/more-tests/cont-marks-2.rkt")
            (lib "whalesong/examples/mathjax.rkt")
            (lib
             "whalesong/selfhost/js-assembler/find-primitive-implemented.rkt")
            (lib "whalesong/js-assembler/package.rkt")
            (lib "whalesong/compiler/expression-structs.rkt")
            (lib "whalesong/make/get-dependencies.rkt")
            (lib "whalesong/js-assembler/check-valid-module-source.rkt")
            (lib "whalesong/tests/test-assemble.rkt")
            (lib "whalesong/web-world.rkt")
            (lib "whalesong/lang/match.rkt")
            (lib "whalesong/tests/more-tests/chars.rkt")
            (lib "whalesong/js/racket-impl.rkt")
            (lib "whalesong/tests/older-tests/moby-programs/list.rkt")
            (lib "whalesong/sandbox/monty-hall/monty-hall.rkt")
            (lib "whalesong/tests/older-tests/moby-programs/sleep.rkt")
            (lib "whalesong/tests/older-tests/moby-programs/random.rkt")
            (lib "whalesong/js-assembler/assemble-helpers.rkt")
            (lib
             "whalesong/selfhost/js-assembler/get-js-vm-implemented-primitives.rkt")
            (lib "whalesong/private/command.rkt")
            (lib "whalesong/tests/older-tests/mz-tests/testing.rkt")
            (lib "whalesong/web-world/examples/dwarves/dwarves.rkt")
            (lib "whalesong/lang/private/match/stxtime.rkt")
            (lib "whalesong/lang/private/match/split-rows.rkt")
            (lib "whalesong/tests/older-tests/benchmarks/nucleic2.rkt")
            (lib "whalesong/tests/more-tests/simple-loop.rkt")
            (lib "whalesong/examples/alert.rkt")
            (lib "whalesong/tests/more-tests/exn-3.rkt")
            (lib "whalesong/parser/parse-bytecode-5.2.1.rkt")
            (lib
             "whalesong/tests/older-tests/moby-programs/define-struct.rkt")
            (lib "whalesong/tests/test-parse-bytecode-on-collects.rkt")
            (lib "whalesong/world/types.rkt")
            (lib "whalesong/simply-scheme/lang/reader.rkt")
            (lib "whalesong/tests/more-tests/gauss-sum-with-prompts.rkt")
            (lib "whalesong/tests/older-tests/benchmarks/tak.rkt")
            (lib "whalesong/compiler/bootstrapped-primitives.rkt")
            (lib "whalesong/tests/older-tests/benchmarks/graphs.rkt")
            (lib "whalesong/tests/older-tests/moby-programs/arity.rkt")
            (lib "whalesong/tests/more-tests/sharing-cs019.rkt")
            (lib "whalesong/tests/more-tests/hello.rkt")
            (lib "whalesong/examples/google-maps/test-maps.rkt")
            (lib "whalesong/parser/baby-parser.rkt")
            (lib "whalesong/compiler/compiler-structs.rkt")
            (lib "whalesong/web-world/examples/phases/phases.rkt")
            (lib "whalesong/js-assembler/collect-jump-targets.rkt")
            (lib "whalesong/selfhost/selfhost-lang.rkt")
            (lib "whalesong/tests/more-tests/sk-generator-2.rkt")
            (lib "whalesong/web-world/examples/where-am-i/where-am-i.rkt")
            (lib "whalesong/examples/drag-and-drop/drag-and-drop-2.rkt")
            (lib "whalesong/web-world/impl.rkt")
            (lib "whalesong/lang/private/match/match.rkt")
            (lib "whalesong/tests/older-tests/benchmarks/run-benchmark.rkt")
            (lib "whalesong/cs019/teach-runtime.rkt")
            (lib "whalesong/tests/older-tests/moby-programs/exn.rkt")
            (lib "whalesong/lang/bool.rkt")
            (lib "whalesong/tests/older-tests/moby-programs/apply.rkt")
            (lib "whalesong/storage/storage.rkt")
            (lib "whalesong/cs019/lang/reader.rkt")
            (lib "whalesong/image/private/racket-impl.rkt")
            (lib "whalesong/tests/older-tests/mz-tests/list.rkt")
            (lib "whalesong/tests/older-tests/moby-programs/and-or.rkt")
            (lib "whalesong/cs019/cs019.rkt")
            (lib "whalesong/compiler/compiler-helper.rkt")
            (lib "whalesong/expand-out-images.rkt")
            (lib "whalesong/compiler/il-structs.rkt")
            (lib "whalesong/scribblings/manual.scrbl")
            (lib "whalesong/selfhost/js-assembler/hash-cache.rkt")
            (lib "whalesong/lang/private/match/compiler.rkt")
            (lib "whalesong/tests/older-tests/benchmarks/nboyer.rkt")
            (lib "whalesong/logger.rkt")
            (lib "whalesong/selfhost/compiler/expression-structs.rkt")
            (lib "whalesong/experiments/gauss/gauss.rkt")
            (lib "whalesong/lang/check-expect/check-expect.rkt")
            (lib "whalesong/tests/older-tests/moby-programs/require.rkt")
            (lib "whalesong/lang/private/match/parameters.rkt")
            (lib "whalesong/get-module-bytecode.rkt")
            (lib "whalesong/web-world/examples/tick-tock-2/tick-tock-2.rkt")
            (lib "whalesong/scribblings/internals.scrbl")
            (lib "whalesong/tests/test-compiler-2.rkt")
            (lib "whalesong/union-find.rkt")
            (lib "whalesong/tests/older-tests/moby-programs/atan.rkt")
            (lib "whalesong/js/world/test-geo.rkt")
            (lib "whalesong/repl-prototype/write-runtime.rkt")
            (lib "whalesong/lang/private/call-ec.rkt")
            (lib "whalesong/tests/browser-harness.rkt")
            (lib "whalesong/tests/older-tests/moby-programs/falling-ball.rkt")
            (lib "whalesong/make-launcher.rkt")
            (lib "whalesong/compiler/optimize-il.rkt")
            (lib "whalesong/selfhost/compiler/il-structs.rkt")
            (lib "whalesong/tests/more-tests/quasi.rkt")
            (lib "whalesong/tests/more-tests/lists-cs019.rkt")
            (lib
             "whalesong/tests/older-tests/moby-programs/exercise-control.rkt")
            (lib "whalesong/js/world/racket-impl.rkt")
            (lib "whalesong/lang/unsafe/racket-impl.rkt")
            (lib "whalesong/tests/more-tests/ramanujan-pi.rkt")
            (lib "whalesong/examples/js-get-message/js-get-message-child.rkt")
            (lib "whalesong/tests/older-tests/benchmarks/run-do-measures.rkt")
            (lib "whalesong/js.rkt")
            (lib "whalesong/js-assembler/hash-cache.rkt")
            (lib "whalesong/compiler/compiler.rkt")
            (lib "whalesong/selfhost/js-assembler/assemble-structs.rkt")
            (lib "whalesong/lang/js/query.rkt")
            (lib "whalesong/korean/lang/reader.rkt")
            (lib "whalesong/selfhost/compiler/compiler-helper.rkt")
            (lib "whalesong/tests/more-tests/sk-generator.rkt")
            (lib "whalesong/parser/modprovide.rkt")
            (lib "whalesong/simply-scheme/semantics.rkt")
            (lib "whalesong/lang/for.rkt")
            (lib "whalesong/js-assembler/get-runtime.rkt")
            (lib "whalesong/lang/private/traced-app.rkt")
            (lib "whalesong/tests/more-tests/simple-apply.rkt")
            (lib "whalesong/image/private/color.rkt")
            (lib "whalesong/tests/test-parse-bytecode.rkt")
            (lib "whalesong/tests/clipart-test/clipart.rkt")
            (lib "whalesong/lang/private/match/struct.rkt")
            (lib "whalesong/tests/older-tests/require-test/test.rkt")
            (lib "whalesong/world/main.rkt")
            (lib "whalesong/web-world/examples/field/field.rkt")
            (lib "whalesong/tests/older-tests/moby-programs/local.rkt")
            (lib
             "whalesong/tests/older-tests/moby-programs/continuation-prompts-2.rkt")
            (lib "whalesong/examples/mouse.rkt")
            (lib "whalesong/resource/structs.rkt")
            (lib "whalesong/tests/older-tests/moby-programs/case-lambda.rkt")
            (lib "whalesong/js/world/world-event-handler.rkt")
            (lib "whalesong/web-world/examples/hello2/hello2.rkt")
            (lib "whalesong/selfhost/compiler/bootstrapped-primitives.rkt")
            (lib "whalesong/lang/list.rkt")
            (lib "whalesong/image/main.rkt")
            (lib "whalesong/resource/main.rkt")
            (lib "whalesong/tests/more-tests/js-binding.rkt")
            (lib "whalesong/tests/older-tests/moby-programs/misc.rkt")
            (lib "whalesong/tests/test-compiler.rkt")
            (lib "whalesong/tests/more-tests/module-scoping.rkt")
            (lib "whalesong/tests/more-tests/simple-structs.rkt")
            (lib "whalesong/tests/older-tests/moby-programs/raise.rkt")
            (lib "whalesong/lang/private/list.rkt")
            (lib "whalesong/lang/private/match/gen-match.rkt")
            (lib "whalesong/tests/module-test/m1.rkt")
            (lib "whalesong/tests/older-tests/moby-programs/recur.rkt")
            (lib "whalesong/tests/more-tests/fringe.rkt")
            (lib "whalesong/tests/older-tests/run-all-tests.rkt")
            (lib "whalesong/selfhost/compiler/compiler-structs.rkt")
            (lib "whalesong/sandbox/todo-storage/todo.rkt")
            (lib "whalesong/web-world/examples/todo/todo.rkt")
            (lib "whalesong/whalesong-gui.rkt")
            (lib "whalesong/tests/older-tests/moby-programs/vararity.rkt")
            (lib "whalesong/js-assembler/assemble-open-coded.rkt")
            (lib "whalesong/lang/reader.rkt")
            (lib "whalesong/tests/older-tests/mz-tests/basic.rkt")
            (lib "whalesong/lang/private/stx.rkt")
            (lib "whalesong/selfhost/js-assembler/quote-cdata.rkt")
            (lib "whalesong/lang/kernel.rkt")
            (lib "whalesong/js-assembler/cache.rkt")
            (lib "whalesong/parser/parse-bytecode-5.3.rkt")
            (lib "whalesong/selfhost/js-assembler/package.rkt")
            (lib "whalesong/examples/pacman.rkt")
            (lib "whalesong/scribblings/scribble-helpers.rkt")
            (lib "whalesong/tests/more-tests/dots-should-be-syntax-error.rkt")
            (lib "whalesong/tests/older-tests/moby-programs/location.rkt")
            (lib "whalesong/web-world/helpers.rkt")
            (lib "whalesong/selfhost/js-assembler/collect-jump-targets.rkt")
            (lib "whalesong/tests/more-tests/colors.rkt")
            (lib "whalesong/selfhost/compiler/analyzer.rkt")
            (lib "whalesong/tests/older-tests/moby-programs/42.rkt")
            (lib "whalesong/lang/private/match/parse-quasi.rkt")
            (lib "whalesong/tests/coersing/fact.rkt")
            (lib "whalesong/tests/more-tests/scheme-whalesong.rkt")
            (lib "whalesong/examples/expanding-circle.rkt")
            (lib "whalesong/selfhost/js-assembler/get-runtime.rkt")
            (lib "whalesong/selfhost/parameters.rkt")
            (lib "whalesong/tests/older-tests/moby-programs/required-4.rkt")
            (lib "whalesong/examples/list-length.rkt")
            (lib "whalesong/cs019/teachhelp.rkt")
            (lib "whalesong/resource/record.rkt")
            (lib "whalesong/selfhost/js-assembler/assemble-expression.rkt")
            (lib "whalesong/tests/more-tests/numbers.rkt")
            (lib "whalesong/lang/private/shared-body.rkt")
            (lib "whalesong/selfhost/compiler/optimize-il.rkt")
            (lib "whalesong/examples/cs019/where-am-i/where-am-i.rkt")
            (lib "whalesong/wescheme/lang/reader.rkt")
            (lib
             "whalesong/tests/older-tests/moby-programs/image-equality.rkt")
            (lib "whalesong/tests/older-tests/moby-programs/images.rkt")
            (lib "whalesong/parser/where-is-collects.rkt")
            (lib "whalesong/repl-prototype/repl-compile.rkt")
            (lib "whalesong/js-assembler/module-knowledge.rkt")
            (lib
             "whalesong/tests/older-tests/moby-programs/jsworld-effects.rkt")
            (lib "whalesong/examples/hello-css.rkt")
            (lib "whalesong/tests/older-tests/moby-programs/compose.rkt")
            (lib "whalesong/cs019/teach.rkt")
            (lib "whalesong/tests/more-tests/view.rkt")
            (lib "whalesong/examples/shuffling.rkt")
            (lib "whalesong/examples/read-bytes.rkt")
            (lib "whalesong/wescheme/lang/semantics.rkt")
            (lib "whalesong/selfhost/compiler/analyzer-structs.rkt")
            (lib "whalesong/tests/older-tests/moby-programs/values.rkt")
            (lib "whalesong/parser/parse-bytecode-5.1.1.rkt")
            (lib "whalesong/js-assembler/quote-cdata.rkt")
            (lib "whalesong/lang/parameters.rkt")
            (lib "whalesong/tests/test-all.rkt")
            (lib "whalesong/tests/more-tests/simple.rkt")
            (lib "whalesong/js/world/geo.rkt")
            (lib "whalesong/tests/older-tests/require-test/m3.rkt")
            (lib "whalesong/lang/private/match/runtime.rkt")
            (lib "whalesong/tests/more-tests/module-scoping-helper.rkt")
            (lib "whalesong/parser/parse-bytecode-5.3.3.7.rkt")
            (lib "whalesong/examples/google-maps/maps.rkt")
            (lib "whalesong/compiler/analyzer.rkt")
            (lib "whalesong/tests/older-tests/moby-programs/rotate.rkt")
            (lib "whalesong/resource/runtime.rkt")
            (lib "whalesong/scribblings/cs019.scrbl")
            (lib "whalesong/tests/older-tests/moby-programs/vector.rkt")
            (lib "whalesong/examples/using-resources.rkt")
            (lib "whalesong/make/make.rkt")
            (lib "whalesong/tests/older-tests/mz-tests/number.rkt")
            (lib "whalesong/cs019/rewrite-error-message.rkt")
            (lib "whalesong/web-world/examples/tick-tock/tick-tock.rkt")
            (lib "whalesong/web-world/main.rkt")
            (lib "whalesong/lang/base/reader.rkt")
            (lib "whalesong/js-assembler/fracture.rkt")
            (lib "whalesong/helpers.rkt")
            (lib "whalesong/tests/older-tests/moby-programs/math.rkt")
            (lib "whalesong/lang/private/match/patterns.rkt")
            (lib "whalesong/lang/private/match/reorder.rkt")
            (lib "whalesong/lang/private/match/parse-helper.rkt")
            (lib "whalesong/tests/older-tests/moby-programs/required-3.rkt")
            (lib "whalesong/examples/rain-world-program.rkt")
            (lib "whalesong/tests/older-tests/moby-programs/required-5.rkt")
            (lib
             "whalesong/js-assembler/get-js-vm-implemented-primitives.rkt")
            (lib "whalesong/web-world/examples/boid/boid.rkt")
            (lib "whalesong/tests/older-tests/moby-programs/when-unless.rkt")
            (lib "whalesong/type-helpers.rkt")
            (lib "whalesong/examples/sierpinski-carpet.rkt")
            (lib "whalesong/lang/private/match/match-expander.rkt")
            (lib "whalesong/resource/munge-path.rkt")
            (lib "whalesong/parameters.rkt")
            (lib "whalesong/generate-c-star-d.rkt")
            (lib "whalesong/selfhost/selfhost-parameters.rkt")
            (lib "whalesong/sandbox/sample-run.rkt")
            (lib "whalesong/tests/older-tests/mz-tests/all-tests.rkt")
            (lib "whalesong/tests/more-tests/exn-2.rkt")
            (lib "whalesong/tests/test-get-dependencies.rkt")
            (lib "whalesong/tests/older-tests/benchmarks/do-measures.rkt")
            (lib "whalesong/parser/path-rewriter.rkt")
            (lib "whalesong/selfhost/compiler/lexical-structs.rkt")
            (lib "whalesong/world/impl.rkt")
            (lib "whalesong/tests/older-tests/moby-programs/for-each.rkt")
            (lib "whalesong/tests/test-browser-evaluate.rkt")
            (lib "whalesong/whalesong-helpers.rkt")
            (lib "whalesong/tests/more-tests/fact.rkt")
            (lib "whalesong/parser/parse-bytecode-5.2.rkt")
            (lib
             "whalesong/tests/more-tests/divide-by-zero-with-handlers.rkt")
            (lib "whalesong/tests/older-tests/mz-tests/numstrs.rkt")
            (lib "whalesong/examples/image-library-example.rkt")
            (lib "whalesong/tests/more-tests/conform.rkt")
            (lib "whalesong/compiler/kernel-primitives.rkt")
            (lib "whalesong/lang/private/qq-and-or.rkt")
            (lib "whalesong/tests/more-tests/booleans-cs019.rkt")
            (lib "whalesong/web-world/racket-impl.rkt")
            (lib "whalesong/selfhost/js-assembler/assemble-open-coded.rkt")
            (lib "whalesong/tests/older-tests/moby-programs/eof.rkt")
            (lib "whalesong/image/private/main.rkt")
            (lib "whalesong/examples/raphael-demo.rkt")
            (lib "whalesong/examples/hello-kr.rkt")
            (lib "whalesong/examples/window-size.rkt")
            (lib "whalesong/tests/run-more-tests.rkt")
            (lib "whalesong/tests/more-tests/hash-code.rkt")
            (lib "whalesong/examples/logo.rkt")
            (lib "whalesong/compiler/lexical-structs.rkt")
            (lib "whalesong/selfhost/compiler/arity-structs.rkt")
            (lib
             "whalesong/web-world/examples/color-buttons/color-buttons.rkt")
            (lib "whalesong/tests/older-tests/benchmarks/run-nboyer.rkt")
            (lib "whalesong/tests/more-tests/checking.rkt")
            (lib "whalesong/lang/js/record.rkt")
            (lib
             "whalesong/tests/older-tests/moby-programs/continuation-prompts.rkt")
            (lib "whalesong/bump-version.rkt")
            (lib "whalesong/js/main.rkt")
            (lib
             "whalesong/tests/older-tests/moby-programs/run-all-tests.rkt")
            (lib "whalesong/tests/more-tests/sigs-cs019.rkt")
            (lib "whalesong/selfhost/js-assembler/cache.rkt")
            (lib "whalesong/lang/korean.rkt")
            (lib "whalesong/resource/specialize/racket-impl.rkt")
            (lib "whalesong/selfhost/compiler/compiler.rkt")
            (lib "whalesong/cs019/lists.rkt")
            (lib "whalesong/tests/older-tests/require-test/m1.rkt")
            (lib "whalesong/tests/older-tests/benchmarks/sboyer.rkt")
            (lib "whalesong/tests/more-tests/man-vs-boy.rkt")
            (lib "whalesong/js-assembler/assemble-expression.rkt")
            (lib "whalesong/selfhost/parser/modprovide.rkt")
            (lib "whalesong/js/world.rkt")
            (lib "whalesong/lang/private/match/parse-legacy.rkt")
            (lib "whalesong/lang/private/hash.rkt")
            (lib "whalesong/tests/older-tests/moby-programs/identity.rkt")
            (lib "whalesong/examples/cs019/tick-tock/tick-tock.rkt")
            (lib "whalesong/selfhost/helpers.rkt")
            (lib "whalesong/language-namespace.rkt")
            (lib "whalesong/tool/button-with-alternatives.rkt")
            (lib "whalesong/tests/more-tests/nucleic2.rkt")
            (lib
             "whalesong/tests/older-tests/moby-programs/with-handlers-1.rkt")
            (lib "whalesong/tests/older-tests/mz-tests/run-all-tests.rkt")
            (lib "whalesong/examples/drag-and-drop/drag-and-drop-1.rkt")
            (lib "whalesong/resource/specialize/impl.rkt")
            (lib
             "whalesong/web-world/examples/hot-cross-buns/hot-cross-buns.rkt")
            (lib "whalesong/repl-prototype/server.rkt")
            (lib "whalesong/selfhost/sets.rkt")
            (lib "whalesong/tests/older-tests/moby-programs/ffi-2.rkt")
            (lib "whalesong/tests/older-tests/moby-programs/cycles.rkt")
            (lib "whalesong/examples/dom-play.rkt")
            (lib "whalesong/examples/hello.rkt")
            (lib "whalesong/tests/older-tests/all-tests.rkt")
            (lib
             "whalesong/selfhost/js-assembler/assemble-perform-statement.rkt")
            (lib "whalesong/selfhost/selfhost-strings.rkt")
            (lib "whalesong/tests/more-tests/sharing.rkt")
            (lib "whalesong/image.rkt")
            (lib "whalesong/bf/semantics.rkt")
            (lib "whalesong/js/world/main.rkt")
            (lib "whalesong/image/private/image.rkt")
            (lib "whalesong/tests/test-earley.rkt")
            (lib "whalesong/tests/more-tests/images.rkt")
            (lib "whalesong/tests/more-tests/lists.rkt")
            (lib
             "whalesong/selfhost/js-assembler/check-valid-module-source.rkt")
            (lib "whalesong/selfhost/union-find.rkt")
            (lib "whalesong/tests/older-tests/moby-programs/ffi.rkt")
            (lib "whalesong/tests/older-tests/require-test/m2.rkt")
            (lib "whalesong/experiments/racket-expander.rkt")
            (lib "whalesong/js/world/test.rkt")
            (lib "whalesong/lang/private/match/parse.rkt")
            (lib "whalesong/lang/js/js.rkt")
            (lib "whalesong/tests/more-tests/basics-cs019.rkt")
            (lib "whalesong/tests/more-tests/graphs.rkt")
            (lib "whalesong/selfhost/js-assembler/module-knowledge.rkt")
            (lib "whalesong/examples/hello-bf.rkt")
            (lib "whalesong/tests/test-package.rkt")
            (lib "whalesong/cs019/cs019-pre-base.rkt")
            (lib "whalesong/selfhost/js-assembler/assemble.rkt")
            (lib "whalesong/examples/eli-number-puzzle.rkt")
            (lib "whalesong/tests/test-helpers.rkt")
            (lib
             "whalesong/web-world/examples/attr-animation/attr-animation.rkt")
            (lib "whalesong/whalesong-cmd.rkt")
            (lib
             "whalesong/tests/older-tests/moby-programs/js-big-bang-timer.rkt")
            (lib "whalesong/tests/older-tests/moby-programs/double.rkt")
            (lib "whalesong/tests/older-tests/moby-programs/required-2.rkt")
            (lib "whalesong/examples/select.rkt")
            (lib "whalesong/compiler/analyzer-structs.rkt")
            (lib "whalesong/web-world/examples/redirected/redirected.rkt")
            (lib "whalesong/tests/older-tests/benchmarks/nfa.rkt")
            (lib "whalesong/tests/older-tests/moby-programs/js-input.rkt")
            (lib "whalesong/cs019/get-cs019-names.rkt")
            (lib "whalesong/tests/more-tests/checking-cs019.rkt")
            (lib "whalesong/tests/older-tests/moby-programs/jsworld.rkt")
            (lib "whalesong/tests/older-tests/check-coverage.rkt")
            (lib "whalesong/compiler/arity-structs.rkt")
            (lib "whalesong/tests/older-tests/moby-programs/begin.rkt")
            (lib "whalesong/lang/private/map.rkt")
            (lib "whalesong/lang/unsafe/ops.rkt")
            (lib "whalesong/selfhost/compiler/kernel-primitives.rkt")
            (lib "whalesong/tests/older-tests/moby-programs/quasiquote.rkt")
            (lib "whalesong/repl-prototype/modularize-input-port.rkt")
            (lib "whalesong/lang/private/shared.rkt")
            (lib "whalesong/tests/older-tests/moby-programs/required.rkt")
            (lib "whalesong/examples/whale.rkt")
            (lib "whalesong/parser/parse-bytecode.rkt")
            (lib "whalesong/examples/iron-puzzle/iron-puzzle.rkt")
            (lib "whalesong/bf/lang/reader.rkt")
            (lib "whalesong/version.rkt")
            (lib "whalesong/version-case/version-case.rkt")
            (lib "whalesong/private/prefix-dispatcher.rkt")
            (lib "whalesong/compiler/lexical-env.rkt")
            (lib "whalesong/tests/older-tests/moby-programs/letrec.rkt")
            (lib "whalesong/js-assembler/assemble-perform-statement.rkt")
            (lib "whalesong/tests/older-tests/moby-programs/setbang.rkt")
            (lib "whalesong/whalesong.rkt")
            (lib "whalesong/tests/older-tests/moby-programs/all-tests.rkt")
            (lib "whalesong/tests/test-simulator.rkt")
            (lib "whalesong/bf/parser.rkt")
            (lib "whalesong/tests/older-tests/moby-programs/struct.rkt")
            (lib "whalesong/tests/more-tests/hashes.rkt")
            (lib "whalesong/sandbox/test-storage.rkt")
            (lib "whalesong/selfhost/js-assembler/fracture.rkt")
            (lib "whalesong/cs019/firstorder.rkt")
            (lib "whalesong/tests/older-tests/moby-programs/check-error.rkt")
            (lib "whalesong/sets.rkt")
            (lib "whalesong/promise.rkt")
            (lib "whalesong/tests/more-tests/string-tests.rkt")
            (lib "whalesong/web-world/examples/field2/field2.rkt")
            (lib "whalesong/lang/private/with-handlers.rkt")
            (lib "whalesong/examples/fact.rkt")
            (lib "whalesong/tests/test-conform.rkt")
            (lib "whalesong/selfhost/compiler/lexical-env.rkt")
            (lib "whalesong/web-world/examples/hello/hello.rkt")
            (lib "whalesong/js-assembler/find-primitive-implemented.rkt")
            (lib "whalesong/cs019/private/sigs-patched.rkt")
            (lib "whalesong/base/lang/reader.rkt")
            (lib "whalesong/js-assembler/assemble.rkt")))
          (name . "whalesong")
          (nix-sha256
           .
           "0907d2ilsz5ljhqc0l426y7p33164nysll5vj4nrz9hrwj0nc6zg")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-fail: . #t)
                   (:docs-error: . #t)
                   (:no-desc: . #t)
                   (:no-tag: . #t)
                   (author:jensaxel@soegaard.net . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/soegaard/whalesong")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "03c99841a3c4b40220ed5f05a2a772ed5d527b20")
                          (source . "git://github.com/soegaard/whalesong")
                          (source_url
                           .
                           "http://github.com/soegaard/whalesong/tree/master")))))))
 ("whalesong-tools"
  .
  #hasheq((author . "stchang@racket-lang.org vyadav@ccs.neu.edu")
          (authors . ("stchang@racket-lang.org" "vyadav@ccs.neu.edu"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . "server/built/fail/whalesong-tools.txt")
                 (min-failure-log . #f)
                 (success-log . #f)
                 (test-failure-log . #f)
                 (test-success-log . #f)))
          (checksum . "980bd29cdb77749627f21edeeb6aa76a3f80750a")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base" "gui-lib" "drracket-plugin-lib" "whalesong"))
          (dependency-names
           .
           ("base" "gui-lib" "drracket-plugin-lib" "whalesong"))
          (description . "DrRacket tool for compiling with Whalesong")
          (implies . ())
          (last-checked . 1557339812)
          (last-edit . 1441723478)
          (last-updated . 1502816528)
          (modules . ((lib "whalesong-tools/tool.rkt")))
          (name . "whalesong-tools")
          (nix-sha256
           .
           "18nxrdv1yw9p54zbbfm88am2q8n0x3m3znc0srg6g0lg861p9wg0")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-fail: . #t)
                   (author:stchang@racket-lang.org . #t)
                   (author:vyadav@ccs.neu.edu . #t)
                   (javascript . #t)
                   (ring:1 . #t)
                   (whalesong . #t)))
          (source . "git://github.com/vishesh/drracket-whalesong")
          (tags . ("javascript" "whalesong"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "980bd29cdb77749627f21edeeb6aa76a3f80750a")
                          (source
                           .
                           "git://github.com/vishesh/drracket-whalesong")
                          (source_url
                           .
                           "http://github.com/vishesh/drracket-whalesong/tree/master")))))))
 ("while-loop"
  .
  #hasheq((author . "clements@racket-lang.org dyoo@hashcollision.org")
          (authors . ("clements@racket-lang.org" "dyoo@hashcollision.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "dyoo-while-loop"
                    "doc/dyoo-while-loop@while-loop/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/while-loop.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/while-loop.txt")))
          (checksum . "69e33eef851c8db79536dcdb86bbfe113f7dcdda")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base" "parser-tools-doc" "racket-doc" "scribble-lib"))
          (dependency-names
           .
           ("base" "parser-tools-doc" "racket-doc" "scribble-lib"))
          (description . "Danny Yoo's while-loop package")
          (implies . ())
          (last-checked . 1557339812)
          (last-edit . 1399596155)
          (last-updated . 1502816528)
          (modules
           .
           ((lib "dyoo-while-loop/dyoo-while-loop.scrbl")
            (lib "dyoo-while-loop/main.rkt")))
          (name . "while-loop")
          (nix-sha256
           .
           "0ski4r26brlxjfz7pr68822p7bamm6xa6vz7rdv77h5scnq6jh1p")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (:no-tag: . #t)
                   (author:clements@racket-lang.org . #t)
                   (author:dyoo@hashcollision.org . #t)
                   (ring:1 . #t)))
          (source . "github://github.com/jbclements/while-loop/master/")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "69e33eef851c8db79536dcdb86bbfe113f7dcdda")
                          (source
                           .
                           "github://github.com/jbclements/while-loop/master/")
                          (source_url
                           .
                           "http://github.com/jbclements/while-loop/tree/master/")))))))
 ("with-cache"
  .
  #hasheq((author . "types@ccs.neu.edu")
          (authors . ("types@ccs.neu.edu"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "with-cache"
                    "doc/with-cache@with-cache/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/with-cache.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/with-cache.txt")))
          (checksum . "25126eb9ae80f5ee8c7e9edef6d1276332c3425c")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "typed-racket-lib"
            "basedir"
            "scribble-lib"
            "racket-doc"
            "rackunit-lib"
            "pict-lib"))
          (dependency-names
           .
           ("base"
            "typed-racket-lib"
            "basedir"
            "scribble-lib"
            "racket-doc"
            "rackunit-lib"
            "pict-lib"))
          (description . "Filesystem-based caching")
          (implies . ())
          (last-checked . 1557339812)
          (last-edit . 1470291210)
          (last-updated . 1552756033)
          (modules
           .
           ((lib "with-cache/scribblings/with-cache.scrbl")
            (lib "with-cache/test/main.rkt")
            (lib "with-cache/main.rkt")
            (lib "with-cache/private/with-cache.rkt")))
          (name . "with-cache")
          (nix-sha256
           .
           "0cya4jrn87pf16lcwz55njs56y15wzw5d12wwjmvqjkgw2kdqypr")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:types@ccs.neu.edu . #t)
                   (cache . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/bennn/with-cache")
          (tags . ("cache"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "25126eb9ae80f5ee8c7e9edef6d1276332c3425c")
                          (source . "git://github.com/bennn/with-cache")
                          (source_url
                           .
                           "http://github.com/bennn/with-cache/tree/master")))))))
 ("wn"
  .
  #hasheq((author . "anurag@mendhekar.com")
          (authors . ("anurag@mendhekar.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . "server/built/deps/wn.txt")
                 (docs . (("main" "wn" "doc/wn@wn/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/wn.txt")
                 (test-failure-log . "server/built/test-fail/wn.txt")
                 (test-success-log . #f)))
          (checksum . "2f4f7658125efc2422590f3cd40e342246b25653")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ())
          (dependency-names . ())
          (description
           .
           "An FFI interface to WordNet 3.0 -- A Lexical Database for English")
          (implies . ())
          (last-checked . 1557339812)
          (last-edit . 1442875832)
          (last-updated . 1502816529)
          (modules . ((lib "wn/wn.rkt") (lib "wn/wn.scrbl")))
          (name . "wn")
          (nix-sha256
           .
           "02q898879065i8nvr3q0y1rkm5jqjf56xy9w6kqmx97fkzxxajp2")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-dep-fail: . #t)
                   (:build-success: . #t)
                   (:docs: . #t)
                   (author:anurag@mendhekar.com . #t)
                   (ffi . #t)
                   (nlp . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/themetaschemer/wn")
          (tags . ("ffi" "nlp"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "2f4f7658125efc2422590f3cd40e342246b25653")
                          (source . "git://github.com/themetaschemer/wn")
                          (source_url
                           .
                           "http://github.com/themetaschemer/wn/tree/master")))))))
 ("word"
  .
  #hasheq((author . "ray.racine@gmail.com")
          (authors . ("ray.racine@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "word" "doc/word@word/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/word.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/word.txt")))
          (checksum . "280659a27d2e3581fe64e8d406435cbcbadf3182")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("typed-racket-more"
            "typed-racket-lib"
            "base"
            "scribble-lib"
            "racket-doc"
            "rackunit-lib"
            "typed-racket-doc"))
          (dependency-names
           .
           ("typed-racket-more"
            "typed-racket-lib"
            "base"
            "scribble-lib"
            "racket-doc"
            "rackunit-lib"
            "typed-racket-doc"))
          (description
           .
           "Signed and Unsigned Word datatype for Racket using refinement types.\r\n")
          (implies . ())
          (last-checked . 1557339812)
          (last-edit . 1528377052)
          (last-updated . 1546290048)
          (modules
           .
           ((lib "word/main.rkt") (lib "word/scribblings/word.scrbl")))
          (name . "word")
          (nix-sha256
           .
           "1zi95nwvbp5c9zg1r3h8qr758mzk079124qi7a9b42c3kwz3zvv0")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:ray.racine@gmail.com . #t)
                   (binary . #t)
                   (refinement . #t)
                   (ring:2 . #t)))
          (source . "https://gitlab.com/RayRacine/word.git")
          (tags . ("binary" "refinement"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "280659a27d2e3581fe64e8d406435cbcbadf3182")
                          (source . "https://gitlab.com/RayRacine/word.git")
                          (source_url
                           .
                           "https://gitlab.com/RayRacine/word.git")))))))
 ("wort"
  .
  #hasheq((author . "gamecodeshark@gmail.com")
          (authors . ("gamecodeshark@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "wort" "doc/wort@wort/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/wort.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/wort.txt")))
          (checksum . "d959ea32dcd1158af20db32c8e996149fa056820")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "rackunit-lib"
            "brag"
            "beautiful-racket"
            "beautiful-racket-lib"
            "br-parser-tools-lib"
            "scribble-lib"
            "racket-doc"))
          (dependency-names
           .
           ("base"
            "rackunit-lib"
            "brag"
            "beautiful-racket"
            "beautiful-racket-lib"
            "br-parser-tools-lib"
            "scribble-lib"
            "racket-doc"))
          (description
           .
           "A tiny concatenative language with polymorphic type inference")
          (implies . ())
          (last-checked . 1557339813)
          (last-edit . 1492475159)
          (last-updated . 1502816529)
          (modules
           .
           ((lib "wort/eval.rkt")
            (lib "wort/scribblings/wort.scrbl")
            (lib "wort/examples/sum.rkt")
            (lib "wort/main.rkt")
            (lib "wort/examples/scope.rkt")
            (lib "wort/examples/shuffles.rkt")
            (lib "wort/tokenizer.rkt")
            (lib "wort/examples/higher-order.rkt")
            (lib "wort/examples/simple.rkt")
            (lib "wort/lexer.rkt")
            (lib "wort/expander.rkt")
            (lib "wort/parser.rkt")
            (lib "wort/ast.rkt")
            (lib "wort/infer.rkt")))
          (name . "wort")
          (nix-sha256
           .
           "0qm54gh3asnnrhsk8sc12hj23c0a3rajm94f1b8lwgcy70z3bp28")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:gamecodeshark@gmail.com . #t)
                   (inference . #t)
                   (lang . #t)
                   (ring:1 . #t)
                   (types . #t)
                   (unification . #t)))
          (source . "git://github.com/robertkleffner/wort")
          (tags . ("inference" "lang" "types" "unification"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "d959ea32dcd1158af20db32c8e996149fa056820")
                          (source . "git://github.com/robertkleffner/wort")
                          (source_url
                           .
                           "http://github.com/robertkleffner/wort/tree/master")))))))
 ("wxme"
  .
  #hash((author . "mflatt@racket-lang.org")
        (checksum . "1e2f7aadc54188445684d5ec668d1a8b8feee2d1")
        (dependencies . ("wxme-lib" "gui-doc"))
        (dependency-names . ("wxme-lib" "gui-doc"))
        (description . "mflatt@racket-lang.org")
        (modules . ())
        (name . "wxme")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/wxme.zip")
        (tags . ())))
 ("wxme-lib"
  .
  #hash((author . "mflatt@racket-lang.org")
        (checksum . "01b3ca68df92d39739fcb18eb5a0f947fad61f79")
        (dependencies . ("scheme-lib" "base" "compatibility-lib" "snip-lib"))
        (dependency-names
         .
         ("scheme-lib" "base" "compatibility-lib" "snip-lib"))
        (description . "mflatt@racket-lang.org")
        (modules . ())
        (name . "wxme-lib")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/wxme-lib.zip")
        (tags . ())))
 ("wxme-test"
  .
  #hash((author . "mflatt@racket-lang.org")
        (authors . ("mflatt@racket-lang.org"))
        (build
         .
         #hash((conflicts-log . #f)
               (dep-failure-log . #f)
               (docs . ())
               (failure-log . #f)
               (min-failure-log . #f)
               (success-log . "server/built/install/wxme-test.txt")
               (test-failure-log . #f)
               (test-success-log
                .
                "server/built/test-success/wxme-test.txt")))
        (checksum . "93ed84203f918c8d44cb9879b2498d4844589ced")
        (checksum-error . #f)
        (conflicts . ())
        (dependencies . ("rackunit" "wxme-lib" "base" "snip-lib"))
        (dependency-names . ("rackunit" "wxme-lib" "base" "snip-lib"))
        (description . "tests for \"wxme\"")
        (implies . ())
        (last-checked . 1557339813)
        (last-edit . 1485612096)
        (last-updated . 1502816531)
        (modules . ((lib "wxme/test/image.rkt") (lib "wxme/test/wxme.rkt")))
        (name . "wxme-test")
        (nix-sha256 . "1xfz53v77d7mxbsc5m8ma2487s94nipgxc3db70kn92r0l25f3qw")
        (ring . 1)
        (search-terms
         .
         #hasheq((:build-success: . #t)
                 (author:mflatt@racket-lang.org . #t)
                 (main-tests . #t)
                 (ring:1 . #t)))
        (source . "git://github.com/racket/wxme?path=wxme-test")
        (tags . ("main-tests"))
        (versions
         .
         #hash((default
                .
                #hasheq((checksum
                         .
                         "93ed84203f918c8d44cb9879b2498d4844589ced")
                        (source
                         .
                         "git://github.com/racket/wxme?path=wxme-test")
                        (source_url
                         .
                         "http://github.com/racket/wxme/tree/master?path=wxme-test")))))))
 ("x11"
  .
  #hasheq((author . "laurent.orseau@gmail.com")
          (authors . ("laurent.orseau@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/x11.txt")
                 (test-failure-log . "server/built/test-fail/x11.txt")
                 (test-success-log . #f)))
          (checksum . "b90ad3fd0eeafd617a6eb362e2edd9891c2876bd")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base" "rackunit-lib" "compatibility-lib" "scheme-lib"))
          (dependency-names
           .
           ("base" "rackunit-lib" "compatibility-lib" "scheme-lib"))
          (description
           .
           "X11 bindings for Racket. Initially Jon Rafkind's work.")
          (implies . ())
          (last-checked . 1557339813)
          (last-edit . 1385373872)
          (last-updated . 1516442403)
          (modules
           .
           ((lib "x11/xinerama.rkt")
            (lib "x11/xinput.rkt")
            (lib "xlambda/screenstack.rkt")
            (lib "xlambda/xlambda.rkt")
            (lib "x11/test/device.rkt")
            (lib "x11/fd.rkt")
            (lib "x11/x11.rkt")
            (lib "xlambda/rect.rkt")
            (lib "x11/keysym-util.rkt")
            (lib "x11/keysymdef.rkt")
            (lib "x11/utils.rkt")
            (lib "x11/test/xsnow.rkt")
            (lib "x11/x11-xpm.rkt")
            (lib "x11/test/wormhole.rkt")
            (lib "x11/test/test-x11.rkt")))
          (name . "x11")
          (nix-sha256
           .
           "059q9cvf85p442d8xiigi3kkdjkdfpj599h70a80jmzpnvsdxlz2")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:laurent.orseau@gmail.com . #t)
                   (ffi . #t)
                   (linux . #t)
                   (ring:1 . #t)))
          (source . "github://github.com/kazzmir/x11-racket/master/")
          (tags . ("ffi" "linux"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "b90ad3fd0eeafd617a6eb362e2edd9891c2876bd")
                          (source
                           .
                           "github://github.com/kazzmir/x11-racket/master/")
                          (source_url
                           .
                           "http://github.com/kazzmir/x11-racket/tree/master/")))))))
 ("xdgbasedir0"
  .
  #hasheq((author . "lwoodman@vlifesystems.com")
          (authors . ("lwoodman@vlifesystems.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("none" "xdgbasedir")))
                 (failure-log . "server/built/fail/xdgbasedir0.txt")
                 (min-failure-log . #f)
                 (success-log . #f)
                 (test-failure-log . #f)
                 (test-success-log . #f)))
          (checksum . "ab6df3c5307b776547a9904625b2081a760e3045")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ())
          (dependency-names . ())
          (description
           .
           "Functions to simplify access to the XDG Base Directory Specification.")
          (implies . ())
          (last-checked . 1557339813)
          (last-edit . 1380522697)
          (last-updated . 1502816532)
          (modules
           .
           ((lib "xdgbasedir0/xdgbasedir/xdgbasedir.rkt")
            (lib "xdgbasedir0/xdgbasedir/main.rkt")
            (lib "xdgbasedir0/xdgbasedir/scribblings/licence.scrbl")
            (lib "xdgbasedir0/xdgbasedir/scribblings/development.scrbl")
            (lib "xdgbasedir0/xdgbasedir/tests/xdgbasedir-test.rkt")
            (lib "xdgbasedir0/xdgbasedir/scribblings/xdgbasedir.scrbl")
            (lib "xdgbasedir0/xdgbasedir/scribblings/changelog.scrbl")
            (lib "xdgbasedir0/xdgbasedir/tests/test-helpers.rkt")
            (lib
             "xdgbasedir0/xdgbasedir/scribblings/exported-functions.scrbl")))
          (name . "xdgbasedir0")
          (nix-sha256
           .
           "08h8h3ii6cc9pqssj5sn101n8f5v48rksj7km9h5n0bl1bavd30b")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-fail: . #t)
                   (:docs-error: . #t)
                   (author:lwoodman@vlifesystems.com . #t)
                   (ring:1 . #t)
                   (unix . #t)))
          (source . "github://github.com/lawrencewoodman/xdgbasedir_rkt/v0.3")
          (tags . ("unix"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "ab6df3c5307b776547a9904625b2081a760e3045")
                          (source
                           .
                           "github://github.com/lawrencewoodman/xdgbasedir_rkt/v0.3")
                          (source_url
                           .
                           "http://github.com/lawrencewoodman/xdgbasedir_rkt/tree/v0.3")))))))
 ("xe"
  .
  #hasheq((author . "tonygarnockjones@gmail.com")
          (authors . ("tonygarnockjones@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . "server/built/deps/xe.txt")
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/xe.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/xe.txt")))
          (checksum . "279efa337ba9cdc4e477dd057915009d366fe3c5")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ())
          (dependency-names . ())
          (description . "xexpr XML utilities, plus traversal and filtering")
          (implies . ())
          (last-checked . 1557339813)
          (last-edit . 1522120283)
          (last-updated . 1522120283)
          (modules . ((lib "xe/main.rkt")))
          (name . "xe")
          (nix-sha256
           .
           "023w7mpch40k4n4gh2n2l7m8hgbdfk2sz63rcnk4y56s5538hvzc")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-dep-fail: . #t)
                   (:build-success: . #t)
                   (author:tonygarnockjones@gmail.com . #t)
                   (ring:2 . #t)
                   (xexpr . #t)
                   (xml . #t)))
          (source . "https://github.com/tonyg/racket-xe.git")
          (tags . ("xexpr" "xml"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "279efa337ba9cdc4e477dd057915009d366fe3c5")
                          (source . "https://github.com/tonyg/racket-xe.git")
                          (source_url
                           .
                           "https://github.com/tonyg/racket-xe.git")))))))
 ("xenomorph"
  .
  #hasheq((author . "mb@mbtype.com")
          (authors . ("mb@mbtype.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "xenomorph" "doc/xenomorph@xenomorph/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/xenomorph.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/xenomorph.txt")))
          (checksum . "a240db538021864f58c2cb9b50d228c59b600873")
          (checksum-error . #f)
          (conflicts . ())
          (date-added . 1556661158)
          (dependencies
           .
           ("base"
            "beautiful-racket-lib"
            "rackunit-lib"
            "sugar"
            "debug"
            "racket-doc"
            "scribble-lib"))
          (dependency-names
           .
           ("base"
            "beautiful-racket-lib"
            "rackunit-lib"
            "sugar"
            "debug"
            "racket-doc"
            "scribble-lib"))
          (description . "binary encoder [in development]")
          (implies . ())
          (last-checked . 1557339814)
          (last-edit . 1556661158)
          (last-updated . 1556806415)
          (modules
           .
           ((lib "xenomorph/pointer.rkt")
            (lib "xenomorph/util.rkt")
            (lib "xenomorph/bytes.rkt")
            (lib "xenomorph/test/number-test.rkt")
            (lib "xenomorph/test/bytes-test.rkt")
            (lib "xenomorph/vector.rkt")
            (lib "xenomorph/test/string-test.rkt")
            (lib "xenomorph/test/bitfield-test.rkt")
            (lib "xenomorph/string.rkt")
            (lib "xenomorph/stream.rkt")
            (lib "xenomorph/symbol.rkt")
            (lib "xenomorph/base.rkt")
            (lib "xenomorph/enum.rkt")
            (lib "xenomorph/test/optional-test.rkt")
            (lib "xenomorph/dict.rkt")
            (lib "xenomorph/test/symbol-test.rkt")
            (lib "xenomorph/reserved.rkt")
            (lib "xenomorph/scribblings/xenomorph.scrbl")
            (lib "xenomorph/test/pointer-test.rkt")
            (lib "xenomorph/test/list-test.rkt")
            (lib "xenomorph/test/main.rkt")
            (lib "xenomorph/test/vector-test.rkt")
            (lib "xenomorph/number.rkt")
            (lib "xenomorph/main.rkt")
            (lib "xenomorph/versioned-dict.rkt")
            (lib "xenomorph/test/enum-test.rkt")
            (lib "xenomorph/bitfield.rkt")
            (lib "xenomorph/test/reserved-test.rkt")
            (lib "xenomorph/int.rkt")
            (lib "xenomorph/list.rkt")
            (lib "xenomorph/test/versioned-dict-test.rkt")
            (lib "xenomorph/optional.rkt")
            (lib "xenomorph/test/dict-test.rkt")
            (lib "xenomorph/test/stream-test.rkt")))
          (name . "xenomorph")
          (nix-sha256
           .
           "1vj5s917ywqzy3xsigxdp2b879zka1ppn23xrr7bx0glsp2jw9mg")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:mb@mbtype.com . #t)
                   (binary . #t)
                   (ring:2 . #t)))
          (source . "https://github.com/mbutterick/xenomorph.git")
          (tags . ("binary"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "a240db538021864f58c2cb9b50d228c59b600873")
                          (source
                           .
                           "https://github.com/mbutterick/xenomorph.git")
                          (source_url
                           .
                           "https://github.com/mbutterick/xenomorph.git")))))))
 ("xexpr-path"
  .
  #hasheq((author . "mordae@anilinux.org")
          (authors . ("mordae@anilinux.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main"
                    "xexpr-path"
                    "doc/xexpr-path@xexpr-path/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/xexpr-path.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/xexpr-path.txt")))
          (checksum . "59f07164a5735441953c411a78d7dbe2f8ebcdc0")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "scribble-lib" "racket-doc"))
          (dependency-names . ("base" "scribble-lib" "racket-doc"))
          (description . "XML Expression Path Lookup")
          (implies . ())
          (last-checked . 1557339814)
          (last-edit . 1385537382)
          (last-updated . 1502816532)
          (modules
           .
           ((lib "xexpr-path/xexpr-path.scrbl") (lib "xexpr-path/main.rkt")))
          (name . "xexpr-path")
          (nix-sha256
           .
           "02z1clh91fhmfbfdc4d689b24jb88292685kixwy89b2j03fihjp")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:mordae@anilinux.org . #t)
                   (ring:1 . #t)
                   (xml . #t)))
          (source . "github://github.com/mordae/racket-xexpr-path/master")
          (tags . ("xml"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "59f07164a5735441953c411a78d7dbe2f8ebcdc0")
                          (source
                           .
                           "github://github.com/mordae/racket-xexpr-path/master")
                          (source_url
                           .
                           "http://github.com/mordae/racket-xexpr-path/tree/master")))))))
 ("xfunctions"
  .
  #hasheq((author . "wesley.bitomski@gmail.com")
          (authors . ("wesley.bitomski@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . "server/built/deps/xfunctions.txt")
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/xfunctions.txt")
                 (test-failure-log . "server/built/test-fail/xfunctions.txt")
                 (test-success-log . #f)))
          (checksum . "a8c545d55ee1d9df715ccc44fb22eec463e0f206")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           (("base") ("racket") ("xfunctions-lib") ("xfunctions-doc")))
          (dependency-names . ("base" "xfunctions-lib" "xfunctions-doc"))
          (description . "Extended Functional Combinators")
          (implies . ())
          (last-checked . 1557339814)
          (last-edit . 1515413167)
          (last-updated . 1515417539)
          (modules
           .
           ((lib "xfunctions/xfunctions-lib/xfunctions.rkt")
            (lib "xfunctions/main.rkt")
            (lib "xfunctions/xfunctions-doc/xfunctions.scrbl")))
          (name . "xfunctions")
          (nix-sha256
           .
           "03h570a9dzlz0hb0vhlqhbr6lbgcjq3v4s9ydk53ba7wgxw3jyz3")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-dep-fail: . #t)
                   (:build-success: . #t)
                   (author:wesley.bitomski@gmail.com . #t)
                   (other . #t)
                   (ring:2 . #t)))
          (source . "https://github.com/wesleybits/xfunctions.git")
          (tags . ("other"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "a8c545d55ee1d9df715ccc44fb22eec463e0f206")
                          (source
                           .
                           "https://github.com/wesleybits/xfunctions.git")
                          (source_url
                           .
                           "https://github.com/wesleybits/xfunctions.git")))))))
 ("xfunctions-doc"
  .
  #hasheq((author . "wesley.bitomski@gmail.com")
          (authors . ("wesley.bitomski@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/xfunctions-doc.txt")
                 (test-failure-log
                  .
                  "server/built/test-fail/xfunctions-doc.txt")
                 (test-success-log . #f)))
          (checksum . "a8c545d55ee1d9df715ccc44fb22eec463e0f206")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           (("base")
            ("racket")
            ("sandbox-lib")
            ("scribble-lib")
            ("racket-doc")
            ("xfunctions-lib")))
          (dependency-names
           .
           ("base"
            "sandbox-lib"
            "scribble-lib"
            "racket-doc"
            "xfunctions-lib"))
          (description . "Documentation for xfunctions")
          (implies . ())
          (last-checked . 1557339814)
          (last-edit . 1515107616)
          (last-updated . 1515417539)
          (modules . ((lib "xfunctions-doc/xfunctions.scrbl")))
          (name . "xfunctions-doc")
          (nix-sha256
           .
           "03h570a9dzlz0hb0vhlqhbr6lbgcjq3v4s9ydk53ba7wgxw3jyz3")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:no-tag: . #t)
                   (author:wesley.bitomski@gmail.com . #t)
                   (ring:2 . #t)))
          (source
           .
           "https://github.com/wesleybits/xfunctions.git?path=xfunctions-doc")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "a8c545d55ee1d9df715ccc44fb22eec463e0f206")
                          (source
                           .
                           "https://github.com/wesleybits/xfunctions.git?path=xfunctions-doc")
                          (source_url
                           .
                           "https://github.com/wesleybits/xfunctions.git?path=xfunctions-doc")))))))
 ("xfunctions-lib"
  .
  #hasheq((author . "wesley.bitomski@gmail.com")
          (authors . ("wesley.bitomski@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/xfunctions-lib.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/xfunctions-lib.txt")))
          (checksum . "a8c545d55ee1d9df715ccc44fb22eec463e0f206")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . (("base") ("racket") ("rackunit-lib")))
          (dependency-names . ("base" "rackunit-lib"))
          (description . "Functional bits of XFunctions")
          (implies . ())
          (last-checked . 1557339814)
          (last-edit . 1515107554)
          (last-updated . 1515417539)
          (modules . ((lib "xfunctions-lib/xfunctions.rkt")))
          (name . "xfunctions-lib")
          (nix-sha256
           .
           "03h570a9dzlz0hb0vhlqhbr6lbgcjq3v4s9ydk53ba7wgxw3jyz3")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:no-tag: . #t)
                   (author:wesley.bitomski@gmail.com . #t)
                   (ring:2 . #t)))
          (source
           .
           "https://github.com/wesleybits/xfunctions.git?path=xfunctions-lib")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "a8c545d55ee1d9df715ccc44fb22eec463e0f206")
                          (source
                           .
                           "https://github.com/wesleybits/xfunctions.git?path=xfunctions-lib")
                          (source_url
                           .
                           "https://github.com/wesleybits/xfunctions.git?path=xfunctions-lib")))))))
 ("xlang"
  .
  #hasheq((author . "samth@ccs.neu.edu")
          (authors . ("samth@ccs.neu.edu"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/xlang.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/xlang.txt")))
          (checksum . "6672450a99cdf9aed7dcbcde2ab8e76063966973")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base"))
          (dependency-names . ("base"))
          (description
           .
           "A minimal combinator language, created for PLT Game #1")
          (implies . ())
          (last-checked . 1557339814)
          (last-edit . 1354727298)
          (last-updated . 1502816532)
          (modules . ((lib "xlang/example.rkt") (lib "xlang/main.rkt")))
          (name . "xlang")
          (nix-sha256
           .
           "15zlpkavhk5hmd121g3ivhds17ax5kppgw6hz2sfc3lqq5sc6cds")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:samth@ccs.neu.edu . #t)
                   (language . #t)
                   (ring:1 . #t)))
          (source . "github://github.com/samth/xlang/master")
          (tags . ("language"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "6672450a99cdf9aed7dcbcde2ab8e76063966973")
                          (source . "github://github.com/samth/xlang/master")
                          (source_url
                           .
                           "http://github.com/samth/xlang/tree/master")))))))
 ("xlist"
  .
  #hasheq((author . "georges.duperon@gmail.com")
          (authors . ("georges.duperon@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "xlist" "doc/xlist@xlist/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/xlist.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/xlist.txt")))
          (checksum . "6455747fc6374bcb289f25e3ec0c5b3306e3a7f4")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "rackunit-lib"
            "mutable-match-lambda"
            "scribble-enhanced"
            "multi-id"
            "type-expander"
            "typed-racket-lib"
            "typed-racket-more"
            "phc-toolkit"
            "reprovide-lang"
            "match-string"
            "scribble-lib"
            "racket-doc"
            "typed-racket-doc"
            "scribble-math"))
          (dependency-names
           .
           ("base"
            "rackunit-lib"
            "mutable-match-lambda"
            "scribble-enhanced"
            "multi-id"
            "type-expander"
            "typed-racket-lib"
            "typed-racket-more"
            "phc-toolkit"
            "reprovide-lang"
            "match-string"
            "scribble-lib"
            "racket-doc"
            "typed-racket-doc"
            "scribble-math"))
          (description
           .
           "Fancy lists, with bounded or unbounded repetition of elements. Can be used as a type or match pattern.")
          (implies . ())
          (last-checked . 1557339814)
          (last-edit . 1474481869)
          (last-updated . 1555924065)
          (modules
           .
           ((lib "xlist/test/test-match-typed.rkt")
            (lib "xlist/main.rkt")
            (lib "xlist/scribblings/split-xlist.scrbl")
            (lib "xlist/once-identifier.rkt")
            (lib "xlist/implementation.rkt")
            (lib "xlist/test/test-type-superscripts.rkt")
            (lib "xlist/scribblings/identifiers.scrbl")
            (lib "xlist/infinity-identifier.rkt")
            (lib "xlist/split-xlist.rkt")
            (lib "xlist/scribble-enhanced.rkt")
            (lib "xlist/test/test-split-xlist.rkt")
            (lib "xlist/untyped.rkt")
            (lib "xlist/test/test-match.rkt")
            (lib "xlist/test/test-type.rkt")
            (lib "xlist/test/test-split-xlist-ann.rkt")
            (lib "xlist/caret-identifier.rkt")
            (lib "xlist/between.rkt")
            (lib "xlist/scribblings/xlist-untyped.scrbl")
            (lib "xlist/scribblings/xlist.scrbl")))
          (name . "xlist")
          (nix-sha256
           .
           "1arfr5clp5g261qz1gybm9lb99wkas30nihg6hqxqmirksbwrfji")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:georges.duperon@gmail.com . #t)
                   (match . #t)
                   (ring:1 . #t)
                   (typed-racket . #t)))
          (source . "https://github.com/jsmaniac/xlist.git")
          (tags . ("match" "typed-racket"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "6455747fc6374bcb289f25e3ec0c5b3306e3a7f4")
                          (source . "https://github.com/jsmaniac/xlist.git")
                          (source_url
                           .
                           "https://github.com/jsmaniac/xlist.git")))))))
 ("xml-html"
  .
  #hasheq((author . "zaomir@outlook.com")
          (authors . ("zaomir@outlook.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/xml-html.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/xml-html.txt")))
          (checksum . "b4d38ef693d5dc1397c0a7dd822153617c41ea16")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ())
          (dependency-names . ())
          (description . "none")
          (implies . ())
          (last-checked . 1557339814)
          (last-edit . 1529233013)
          (last-updated . 1529233013)
          (modules . ())
          (name . "xml-html")
          (nix-sha256
           .
           "0iaamhlpxdqn3sadp5lldp2z0sdawmyp5lnr2c1cdvz4sirkk9bm")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:no-tag: . #t)
                   (author:zaomir@outlook.com . #t)
                   (ring:2 . #t)))
          (source . "https://github.com/zaoqi/xml-html.git")
          (tags . ())
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "b4d38ef693d5dc1397c0a7dd822153617c41ea16")
                          (source . "https://github.com/zaoqi/xml-html.git")
                          (source_url
                           .
                           "https://github.com/zaoqi/xml-html.git")))))))
 ("xml-rpc"
  .
  #hasheq((author . "jay.mccarthy@gmail.com")
          (authors . ("jay.mccarthy@gmail.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "xml-rpc" "doc/xml-rpc@xml-rpc/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/xml-rpc.txt")
                 (test-failure-log . "server/built/test-fail/xml-rpc.txt")
                 (test-success-log . #f)))
          (checksum . "1af3dab86c85b708914ab86acf6eecf4dd99c115")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "web-server-lib"
            "racket-doc"
            "rackunit-lib"
            "scribble-lib"
            "web-server-doc"
            "net-doc"))
          (dependency-names
           .
           ("base"
            "web-server-lib"
            "racket-doc"
            "rackunit-lib"
            "scribble-lib"
            "web-server-doc"
            "net-doc"))
          (description . "A native Racket XML-RPC client and server library")
          (implies . ())
          (last-checked . 1557339814)
          (last-edit . 1372734358)
          (last-updated . 1502816533)
          (modules
           .
           ((lib "tests/net/xml-rpc/serialise-test.rkt")
            (lib "tests/net/xml-rpc/core-test.rkt")
            (lib "net/xml-rpc/base.rkt")
            (lib "tests/net/xml-rpc/util.rkt")
            (lib "tests/net/xml-rpc/run-tests.rkt")
            (lib "net/xml-rpc/protocol.rkt")
            (lib "net/xml-rpc/xml-rpc.scrbl")
            (lib "net/xml-rpc/xml-rpc.rkt")
            (lib "tests/net/xml-rpc/all-xml-rpc-tests.rkt")
            (lib "tests/net/xml-rpc/server-test.rkt")
            (lib "tests/net/xml-rpc/protocol-test.rkt")
            (lib "net/xml-rpc/serialise.rkt")
            (lib "net/xml-rpc/server.rkt")
            (lib "net/xml-rpc/core.rkt")
            (lib "net/xml-rpc/client.rkt")
            (lib "net/xml-rpc/server-core.rkt")
            (lib "net/xml-rpc.rkt")))
          (name . "xml-rpc")
          (nix-sha256
           .
           "14hpgv2m7ifimm70gjknmqjm85hf8c03g8qln0b82l5j1ycmwdy9")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:jay.mccarthy@gmail.com . #t)
                   (net . #t)
                   (ring:1 . #t)))
          (source . "github://github.com/jeapostrophe/xml-rpc/master")
          (tags . ("net"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "1af3dab86c85b708914ab86acf6eecf4dd99c115")
                          (source
                           .
                           "github://github.com/jeapostrophe/xml-rpc/master")
                          (source_url
                           .
                           "http://github.com/jeapostrophe/xml-rpc/tree/master")))))))
 ("xmllint-win32-x86_64"
  .
  #hasheq((author . "philip@philipmcgrath.com")
          (authors . ("philip@philipmcgrath.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log
                  .
                  "server/built/install/xmllint-win32-x86_64.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/xmllint-win32-x86_64.txt")))
          (checksum . "b604c3d0aab4d6b4417238db4fc54d6419d8f176")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base"))
          (dependency-names . ("base"))
          (description
           .
           "A platform-specific Racket package providing xmllint.exe for Windows")
          (implies . ())
          (last-checked . 1557339814)
          (last-edit . 1535930965)
          (last-updated . 1517055558)
          (modules . ((lib "xmllint-win32-x86_64/main.rkt")))
          (name . "xmllint-win32-x86_64")
          (nix-sha256
           .
           "0bh50cznisvyavrsdyaxpm7bxj8k94kyxayy4v7y6p3aci4bih4r")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:philip@philipmcgrath.com . #t)
                   (ffi . #t)
                   (ring:2 . #t)
                   (xml . #t)))
          (source
           .
           "https://github.com/LiberalArtist/xmllint-win32-x86_64.git")
          (tags . ("ffi" "xml"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "b604c3d0aab4d6b4417238db4fc54d6419d8f176")
                          (source
                           .
                           "https://github.com/LiberalArtist/xmllint-win32-x86_64.git")
                          (source_url
                           .
                           "https://github.com/LiberalArtist/xmllint-win32-x86_64.git")))))))
 ("xmlns"
  .
  #hasheq((author . "leo@lwh.jp")
          (authors . ("leo@lwh.jp"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "xml-ns" "doc/xml-ns@xmlns/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/xmlns.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/xmlns.txt")))
          (checksum . "b11d0010ceac1dac55b22d5eab51e24025593638")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "racket-doc" "rackunit-lib" "scribble-lib"))
          (dependency-names
           .
           ("base" "racket-doc" "rackunit-lib" "scribble-lib"))
          (description . "XML namespace support")
          (implies . ())
          (last-checked . 1557339814)
          (last-edit . 1508578700)
          (last-updated . 1508584231)
          (modules . ((lib "xml/ns.rkt") (lib "xml/xml-ns.scrbl")))
          (name . "xmlns")
          (nix-sha256
           .
           "1pk2ninnyr2l3nc2q57xqn83rsdd0xj6kx8nai2ygsx3v232vjh1")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:leo@lwh.jp . #t)
                   (ring:1 . #t)
                   (xml . #t)))
          (source . "git://github.com/lwhjp/racket-xmlns")
          (tags . ("xml"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "b11d0010ceac1dac55b22d5eab51e24025593638")
                          (source . "git://github.com/lwhjp/racket-xmlns")
                          (source_url
                           .
                           "http://github.com/lwhjp/racket-xmlns/tree/master")))))))
 ("xrepl"
  .
  #hash((author . "eli@racket-lang.org")
        (checksum . "8749484d6cedecbfb33b70fb66b8993fa019954e")
        (dependencies . ("xrepl-lib" "xrepl-doc"))
        (dependency-names . ("xrepl-lib" "xrepl-doc"))
        (description . "eli@racket-lang.org")
        (modules . ())
        (name . "xrepl")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/xrepl.zip")
        (tags . ())))
 ("xrepl-doc"
  .
  #hash((author . "eli@racket-lang.org")
        (checksum . "f2eb9a2642c9b5214944ccb9fbb339630025d2f9")
        (dependencies
         .
         ("base"
          "sandbox-lib"
          "scribble-lib"
          "errortrace-doc"
          "macro-debugger"
          "profile-doc"
          "readline-doc"
          "macro-debugger-text-lib"
          "profile-lib"
          "readline-lib"
          "xrepl-lib"
          "racket-doc"))
        (dependency-names
         .
         ("base"
          "sandbox-lib"
          "scribble-lib"
          "errortrace-doc"
          "macro-debugger"
          "profile-doc"
          "readline-doc"
          "macro-debugger-text-lib"
          "profile-lib"
          "readline-lib"
          "xrepl-lib"
          "racket-doc"))
        (description . "eli@racket-lang.org")
        (modules . ())
        (name . "xrepl-doc")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/xrepl-doc.zip")
        (tags . ())))
 ("xrepl-lib"
  .
  #hash((author . "eli@racket-lang.org")
        (checksum . "e6d3de63ebcbf1ed1d09981779a6d36d0041daa4")
        (dependencies . ("base" "readline-lib" "scribble-text-lib"))
        (dependency-names . ("base" "readline-lib" "scribble-text-lib"))
        (description . "eli@racket-lang.org")
        (modules . ())
        (name . "xrepl-lib")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/xrepl-lib.zip")
        (tags . ())))
 ("xrepl-test"
  .
  #hash((author . "eli@racket-lang.org")
        (checksum . "61e4cb0e7ac2b5fb3fd5a4bdf7b70a7882077747")
        (dependencies . ("at-exp-lib" "base" "eli-tester" "xrepl-lib"))
        (dependency-names . ("at-exp-lib" "base" "eli-tester" "xrepl-lib"))
        (description . "eli@racket-lang.org")
        (modules . ())
        (name . "xrepl-test")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/xrepl-test.zip")
        (tags . ())))
 ("yaml"
  .
  #hasheq((author . "ejs@ccs.neu.edu")
          (authors . ("ejs@ccs.neu.edu"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "yaml" "doc/yaml@yaml/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/yaml.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/yaml.txt")))
          (checksum . "9fe9fc170b5208b98e8ee559cc0001f904ed8004")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "srfi-lite-lib"
            "typed-racket-lib"
            "rackunit-lib"
            "scribble-lib"
            "racket-doc"
            "sandbox-lib"))
          (dependency-names
           .
           ("base"
            "srfi-lite-lib"
            "typed-racket-lib"
            "rackunit-lib"
            "scribble-lib"
            "racket-doc"
            "sandbox-lib"))
          (description . "A library for parsing and emitting YAML.")
          (implies . ())
          (last-checked . 1557339815)
          (last-edit . 1393674229)
          (last-updated . 1543657699)
          (modules
           .
           ((lib "yaml/scanner.rkt")
            (lib "yaml/constructor.rkt")
            (lib "yaml/parser.rkt")
            (lib "yaml/composer.rkt")
            (lib "yaml/emitter.rkt")
            (lib "yaml/resolver.rkt")
            (lib "yaml/tests/utils.rkt")
            (lib "yaml/serializer.rkt")
            (lib "yaml/main.rkt")
            (lib "yaml/struct.rkt")
            (lib "yaml/errors.rkt")
            (lib "yaml/scribblings/yaml.scrbl")
            (lib "yaml/nodes.rkt")
            (lib "yaml/events.rkt")
            (lib "yaml/representer.rkt")
            (lib "yaml/utils.rkt")
            (lib "yaml/yaml-expr.rkt")
            (lib "yaml/tokens.rkt")
            (lib "yaml/tests/test-nodes.rkt")))
          (name . "yaml")
          (nix-sha256
           .
           "0j8vg8xv8cys2956r4map0s204gaq1qsr8svvl9yy8f329xwdsdc")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:ejs@ccs.neu.edu . #t)
                   (parsing . #t)
                   (ring:1 . #t)
                   (yaml . #t)))
          (source . "github://github.com/esilkensen/yaml/master")
          (tags . ("parsing" "yaml"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "9fe9fc170b5208b98e8ee559cc0001f904ed8004")
                          (source
                           .
                           "github://github.com/esilkensen/yaml/master")
                          (source_url
                           .
                           "http://github.com/esilkensen/yaml/tree/master")))))))
 ("yotsubAPI"
  .
  #hasheq((author . "gg@tfwno.gf")
          (authors . ("gg@tfwno.gf"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "yotsubAPI" "doc/yotsubAPI@yotsubAPI/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/yotsubAPI.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/yotsubAPI.txt")))
          (checksum . "cbf312862fc4e94deb74790a2756d5745e5463fc")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "scribble-lib" "racket-doc"))
          (dependency-names . ("base" "scribble-lib" "racket-doc"))
          (description . "A Racket Client for the 4chan API")
          (implies . ())
          (last-checked . 1557339815)
          (last-edit . 1415302292)
          (last-updated . 1502816535)
          (modules
           .
           ((lib "yotsubAPI/main.rkt") (lib "yotsubAPI/yotsubAPI.scrbl")))
          (name . "yotsubAPI")
          (nix-sha256
           .
           "15h6g6sd0kiadg7kvdrxhg4bd0a142ink5h8fhdcgzq6hgsx7i04")
          (ring . 1)
          (search-terms
           .
           #hasheq((4chan . #t)
                   (:build-success: . #t)
                   (:docs: . #t)
                   (api . #t)
                   (author:gg@tfwno.gf . #t)
                   (client . #t)
                   (http . #t)
                   (ring:1 . #t)))
          (source . "git://github.com/g-gundam/yotsubAPI")
          (tags . ("4chan" "api" "client" "http"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "cbf312862fc4e94deb74790a2756d5745e5463fc")
                          (source . "git://github.com/g-gundam/yotsubAPI")
                          (source_url
                           .
                           "http://github.com/g-gundam/yotsubAPI/tree/master")))))))
 ("z3"
  .
  #hasheq((author . "pcn@cs.umd.edu")
          (authors . ("pcn@cs.umd.edu"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/z3.txt")
                 (test-failure-log . "server/built/test-fail/z3.txt")
                 (test-success-log . #f)))
          (checksum . "84059a4428454cc6edd57865befaedb1d29dedce")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base" "html-lib" "typed-racket-lib" "typed-racket-more"))
          (dependency-names
           .
           ("base" "html-lib" "typed-racket-lib" "typed-racket-more"))
          (description . "Z3 bindings for Racket")
          (implies . ())
          (last-checked . 1557339815)
          (last-edit . 1472838610)
          (last-updated . 1502816536)
          (modules
           .
           ((lib "z3/smt/primitives.rkt")
            (lib "z3/smt.rkt")
            (lib "z3/ffi/ffi.rkt")
            (lib "z3/tests/guide.rkt")
            (lib "z3/ffi/ffi-typed.rkt")
            (lib "z3/smt/commands.rkt")
            (lib "z3/main.rkt")
            (lib "z3/ffi/define-ffi.rkt")
            (lib "z3/ffi/main.rkt")
            (lib "z3/ffi.rkt")
            (lib "z3/smt/main.rkt")
            (lib "z3/smt/private.rkt")))
          (name . "z3")
          (nix-sha256
           .
           "1gy3sir81l2khxm27rn8ira88ymh66f5zqlnbbnqdc9583pxx83p")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:pcn@cs.umd.edu . #t)
                   (ring:1 . #t)
                   (smt . #t)
                   (solver . #t)
                   (z3 . #t)))
          (source . "https://github.com/philnguyen/z3-rkt.git?path=z3/")
          (tags . ("smt" "solver" "z3"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "84059a4428454cc6edd57865befaedb1d29dedce")
                          (source
                           .
                           "https://github.com/philnguyen/z3-rkt.git?path=z3/")
                          (source_url
                           .
                           "https://github.com/philnguyen/z3-rkt.git?path=z3/")))))))
 ("zKanren"
  .
  #hasheq((author . "zaomir@outlook.com")
          (authors . ("zaomir@outlook.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . "server/built/deps/zKanren.txt")
                 (docs
                  .
                  (("main" "zKanren" "doc/zKanren@zKanren/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/zKanren.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/zKanren.txt")))
          (checksum . "82c936ed11fa703b3b26895b3a2d7b7f379a8c35")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base" "scribble-lib" "racket-doc" "rackunit-lib" "typed-racket"))
          (dependency-names
           .
           ("base" "scribble-lib" "racket-doc" "rackunit-lib" "typed-racket"))
          (description . "-")
          (implies . ())
          (last-checked . 1557339816)
          (last-edit . 1521200061)
          (last-updated . 1521803934)
          (modules
           .
           ((lib "zKanren/scribblings/zKanren.scrbl")
            (lib "zKanren/main.rkt")
            (lib "zKanren/zk.rkt")))
          (name . "zKanren")
          (nix-sha256
           .
           "0506aa0l7v95my9dncxblmnp1jdf2d16xbyyvdh8x28r6aimr4m6")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-dep-fail: . #t)
                   (:build-success: . #t)
                   (:docs: . #t)
                   (author:zaomir@outlook.com . #t)
                   (logic . #t)
                   (miniKanren . #t)
                   (ring:2 . #t)))
          (source . "https://github.com/the-language/zKanren2.git")
          (tags . ("logic" "miniKanren"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "82c936ed11fa703b3b26895b3a2d7b7f379a8c35")
                          (source
                           .
                           "https://github.com/the-language/zKanren2.git")
                          (source_url
                           .
                           "https://github.com/the-language/zKanren2.git")))))))
 ("zeromq"
  .
  #hasheq((author . "jay.mccarthy@gmail.com")
          (authors . ("jay.mccarthy@gmail.com"))
          (build
           .
           #hash((conflicts-log . "conflicts.txt")
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("extract" "zeromq" "doc/zeromq@zeromq/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/zeromq.txt")
                 (test-failure-log . "server/built/test-fail/zeromq.txt")
                 (test-success-log . #f)))
          (checksum . "cff2ce12fd39e5830628a48f479b917b290c5036")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "scribble-lib"
            "at-exp-lib"
            "racket-doc"
            "math-lib"
            "rackunit-lib"))
          (dependency-names
           .
           ("base"
            "scribble-lib"
            "at-exp-lib"
            "racket-doc"
            "math-lib"
            "rackunit-lib"))
          (description . "A Racket interface to zeromq based on an FFI")
          (implies . ())
          (last-checked . 1557339815)
          (last-edit . 1353603845)
          (last-updated . 1502816536)
          (modules . ((lib "net/zmq/zeromq.scrbl") (lib "net/zmq.rkt")))
          (name . "zeromq")
          (nix-sha256
           .
           "1lzf13mnnwq589320qx7a6nir37rwysalbkvh0xzz1bbxx8v328d")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-conflicts: . #t)
                   (:build-success: . #t)
                   (:docs-error: . #t)
                   (:docs: . #t)
                   (author:jay.mccarthy@gmail.com . #t)
                   (concurrency . #t)
                   (ffi . #t)
                   (net . #t)
                   (parallel . #t)
                   (ring:1 . #t)))
          (source . "github://github.com/jeapostrophe/zeromq/master")
          (tags . ("concurrency" "ffi" "net" "parallel"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "cff2ce12fd39e5830628a48f479b917b290c5036")
                          (source
                           .
                           "github://github.com/jeapostrophe/zeromq/master")
                          (source_url
                           .
                           "http://github.com/jeapostrophe/zeromq/tree/master")))))))
 ("zeromq-r"
  .
  #hasheq((author . "ryanc@racket-lang.org")
          (authors . ("ryanc@racket-lang.org"))
          (build
           .
           #hash((conflicts-log . "conflicts.txt")
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("extract" "zeromq" "doc/zeromq@zeromq-r/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/zeromq-r.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/zeromq-r.txt")))
          (checksum . "dfb6fd893f7842319f6d509705f09c4032c19e94")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           (("base" #:version "6.10")
            "zeromq-r-lib"
            "rackunit-lib"
            "racket-doc"
            "scribble-lib"))
          (dependency-names
           .
           ("base" "zeromq-r-lib" "rackunit-lib" "racket-doc" "scribble-lib"))
          (description . "Bindings for ZeroMQ")
          (implies . ("zeromq-r-lib"))
          (last-checked . 1557339815)
          (last-edit . 1501792411)
          (last-updated . 1550671192)
          (modules
           .
           ((lib "zeromq/tests/pub-sub.rkt")
            (lib "zeromq/zeromq.scrbl")
            (lib "zeromq/tests/hello.rkt")
            (lib "zeromq/tests/rep-req.rkt")))
          (name . "zeromq-r")
          (nix-sha256
           .
           "0l64lv9b58rg7adwn4yh0gqcf5bmnx4jlpsayymkf2j2cnnf8mh4")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-conflicts: . #t)
                   (:build-success: . #t)
                   (:docs-error: . #t)
                   (:docs: . #t)
                   (author:ryanc@racket-lang.org . #t)
                   (net . #t)
                   (ring:1 . #t)))
          (source
           .
           "git://github.com/rmculpepper/racket-zeromq?path=zeromq-r")
          (tags . ("net"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "dfb6fd893f7842319f6d509705f09c4032c19e94")
                          (source
                           .
                           "git://github.com/rmculpepper/racket-zeromq?path=zeromq-r")
                          (source_url
                           .
                           "http://github.com/rmculpepper/racket-zeromq/tree/master?path=zeromq-r")))))))
 ("zeromq-r-lib"
  .
  #hasheq((author . "ryanc@racket-lang.org")
          (authors . ("ryanc@racket-lang.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/zeromq-r-lib.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/zeromq-r-lib.txt")))
          (checksum . "8b1e25f4a7c8de2338d0b2b62bbdc7d5ae2575ca")
          (checksum-error . #f)
          (conflicts . ())
          (date-added . 1553104502)
          (dependencies
           .
           (("base" #:version "7.2.0.6")
            ("zeromq-x86_64-linux-natipkg"
             #:platform
             "x86_64-linux-natipkg")))
          (dependency-names . ("base" "zeromq-x86_64-linux-natipkg"))
          (description . "Bindings for ZeroMQ")
          (implies . ())
          (last-checked . 1557339815)
          (last-edit . 1553104502)
          (last-updated . 1550671193)
          (modules
           .
           ((lib "zeromq/private/ffi.rkt")
            (lib "zeromq/main.rkt")
            (lib "zeromq/unsafe.rkt")
            (lib "zeromq/private/addr.rkt")
            (lib "zeromq/private/install.rkt")))
          (name . "zeromq-r-lib")
          (nix-sha256
           .
           "0s1qf547i8h3x1q77psdi2akb2nm12mbq45c4s9d0hh97cjnnanc")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:ryanc@racket-lang.org . #t)
                   (net . #t)
                   (ring:1 . #t)))
          (source
           .
           "https://github.com/rmculpepper/racket-zeromq.git?path=zeromq-r-lib#v7.2")
          (tags . ("net"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "dfb6fd893f7842319f6d509705f09c4032c19e94")
                          (source
                           .
                           "https://github.com/rmculpepper/racket-zeromq.git?path=zeromq-r-lib")
                          (source_url
                           .
                           "https://github.com/rmculpepper/racket-zeromq.git?path=zeromq-r-lib")))
                 ("7.2"
                  .
                  #hasheq((checksum
                           .
                           "8b1e25f4a7c8de2338d0b2b62bbdc7d5ae2575ca")
                          (source
                           .
                           "https://github.com/rmculpepper/racket-zeromq.git?path=zeromq-r-lib#v7.2")
                          (source_url
                           .
                           "https://github.com/rmculpepper/racket-zeromq.git?path=zeromq-r-lib#v7.2")))))))
 ("zeromq-x86_64-linux-natipkg"
  .
  #hasheq((author . "ryanc@racket-lang.org")
          (authors . ("ryanc@racket-lang.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . ())
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log
                  .
                  "server/built/install/zeromq-x86_64-linux-natipkg.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/zeromq-x86_64-linux-natipkg.txt")))
          (checksum . "b1c7229ca8e31dd2356ca304ed21ef031a3a5e4e")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base"))
          (dependency-names . ("base"))
          (description . "native libraries for zeromq-r-lib package")
          (implies . ())
          (last-checked . 1557339815)
          (last-edit . 1536165084)
          (last-updated . 1536433178)
          (modules . ())
          (name . "zeromq-x86_64-linux-natipkg")
          (nix-sha256
           .
           "0rai071b6ymkf3kkmw5xsnijy2zv5n2n9pxn7xldsxvp5mq465vr")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (author:ryanc@racket-lang.org . #t)
                   (ffi . #t)
                   (natipkg . #t)
                   (ring:2 . #t)))
          (source
           .
           "https://github.com/rmculpepper/racket-natipkg-zeromq.git?path=zeromq-x86_64-linux-natipkg")
          (tags . ("ffi" "natipkg"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "b1c7229ca8e31dd2356ca304ed21ef031a3a5e4e")
                          (source
                           .
                           "https://github.com/rmculpepper/racket-natipkg-zeromq.git?path=zeromq-x86_64-linux-natipkg")
                          (source_url
                           .
                           "https://github.com/rmculpepper/racket-natipkg-zeromq.git?path=zeromq-x86_64-linux-natipkg")))))))
 ("zippers"
  .
  #hasheq((author . "david@davidchristiansen.dk")
          (authors . ("david@davidchristiansen.dk"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs
                  .
                  (("main" "zippers" "doc/zippers@zippers/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/zippers.txt")
                 (test-failure-log . #f)
                 (test-success-log
                  .
                  "server/built/test-success/zippers.txt")))
          (checksum . "ab11342e1359b0844f8f19f801cdd02d697f7ec3")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies . ("base" "rackunit-lib" "scribble-lib" "racket-doc"))
          (dependency-names
           .
           ("base" "rackunit-lib" "scribble-lib" "racket-doc"))
          (description
           .
           "Utilities for working with and deriving Huet-style zippers")
          (implies . ())
          (last-checked . 1557339816)
          (last-edit . 1461432559)
          (last-updated . 1502816536)
          (modules
           .
           ((lib "zippers/scribblings/zippers.scrbl")
            (lib "zippers/main.rkt")))
          (name . "zippers")
          (nix-sha256
           .
           "1z5cb0jrspxjhbj18dxsqjs3r8a6kry5qvz55l7s7w9gzzrwy191")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:david@davidchristiansen.dk . #t)
                   (ring:1 . #t)
                   (utility . #t)))
          (source . "git://github.com/david-christiansen/racket-zippers")
          (tags . ("utility"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "ab11342e1359b0844f8f19f801cdd02d697f7ec3")
                          (source
                           .
                           "git://github.com/david-christiansen/racket-zippers")
                          (source_url
                           .
                           "http://github.com/david-christiansen/racket-zippers/tree/master")))))))
 ("zmq"
  .
  #hasheq((author . "mordae@anilinux.org")
          (authors . ("mordae@anilinux.org"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "zmq" "doc/zmq@zmq/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/zmq.txt")
                 (test-failure-log . "server/built/test-fail/zmq.txt")
                 (test-success-log . #f)))
          (checksum . "5d936df13adce486ac23c5e921099de10ad9bf61")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "scribble-lib"
            "misc1"
            "mordae"
            "typed-racket-lib"
            "racket-doc"
            "typed-racket-lib"
            "typed-racket-doc"))
          (dependency-names
           .
           ("base"
            "scribble-lib"
            "misc1"
            "mordae"
            "typed-racket-lib"
            "racket-doc"
            "typed-racket-lib"
            "typed-racket-doc"))
          (description . "Minimal Racket ZeroMQ Bindings")
          (implies . ())
          (last-checked . 1557339816)
          (last-edit . 1397821983)
          (last-updated . 1502816537)
          (modules
           .
           ((lib "zmq/main.rkt")
            (lib "zmq/private/ffi.rkt")
            (lib "zmq/zmq.scrbl")))
          (name . "zmq")
          (nix-sha256
           .
           "1bzzv0gmlb6insqq3cnjam90r2vkaa3mh6ndndn0b40zp7frkzaf")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:mordae@anilinux.org . #t)
                   (ffi . #t)
                   (ipc . #t)
                   (linux . #t)
                   (ring:1 . #t)))
          (source . "github://github.com/mordae/racket-zmq/master")
          (tags . ("ffi" "ipc" "linux"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "5d936df13adce486ac23c5e921099de10ad9bf61")
                          (source
                           .
                           "github://github.com/mordae/racket-zmq/master")
                          (source_url
                           .
                           "http://github.com/mordae/racket-zmq/tree/master")))))))
 ("zo-lib"
  .
  #hash((author . "mflatt@racket-lang.org jay@racket-lang.org")
        (checksum . "7fc95552ca466bf7354b78ec3a1904c4f00c7c1b")
        (dependencies . ("base"))
        (dependency-names . ("base"))
        (description . "mflatt@racket-lang.org jay@racket-lang.org")
        (modules . ())
        (name . "zo-lib")
        (source
         .
         "https://download.racket-lang.org/releases/7.2/pkgs/zo-lib.zip")
        (tags . ())))
 ("zordoz"
  .
  #hasheq((author . "types@ccs.neu.edu")
          (authors . ("types@ccs.neu.edu"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . #f)
                 (docs . (("main" "zordoz" "doc/zordoz@zordoz/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/zordoz.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/zordoz.txt")))
          (checksum . "b18f761ab8cd0adf6360e6829bd0d6f1dc6eb354")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "compiler-lib"
            "zo-lib"
            "typed-racket-lib"
            "typed-racket-more"
            "readline-lib"
            "dynext-lib"
            "rackunit-lib"
            "scribble-lib"
            "racket-doc"))
          (dependency-names
           .
           ("base"
            "compiler-lib"
            "zo-lib"
            "typed-racket-lib"
            "typed-racket-more"
            "readline-lib"
            "dynext-lib"
            "rackunit-lib"
            "scribble-lib"
            "racket-doc"))
          (description . "Explorer for .zo bytecode files")
          (implies . ())
          (last-checked . 1557339816)
          (last-edit . 1521422098)
          (last-updated . 1552756036)
          (modules
           .
           ((lib "zordoz/main.rkt")
            (lib "zordoz/scribblings/typed-api.scrbl")
            (lib "zordoz/scribblings/overview.scrbl")
            (lib "zordoz/typed/zo-structs.rkt")
            (lib "zordoz/zordoz.rkt")
            (lib "zordoz/private/zo-compile.rkt")
            (lib "zordoz/private/dispatch-table.rkt")
            (lib "zordoz/scribblings/api.scrbl")
            (lib "zordoz/private/zo-string.rkt")
            (lib "zordoz/private/zo-syntax.rkt")
            (lib "zordoz/private/zo-find.rkt")
            (lib "zordoz/scribblings/future-work.scrbl")
            (lib "zordoz/private/zo-shell.rkt")
            (lib "zordoz/private/zo-transition.rkt")
            (lib "zordoz/test.rkt")
            (lib "zordoz/scribblings/repl.scrbl")
            (lib "zordoz/private/if-windows.rkt")
            (lib "zordoz/private/windows-readline.rkt")
            (lib "zordoz/typed.rkt")
            (lib "zordoz/scribblings/zordoz.scrbl")))
          (name . "zordoz")
          (nix-sha256
           .
           "01z4acpzj00805cmh4lr695d25grs6j84rrrl3a79ady0jp4z7ys")
          (ring . 1)
          (search-terms
           .
           #hasheq((:build-success: . #t)
                   (:docs: . #t)
                   (author:types@ccs.neu.edu . #t)
                   (compiler . #t)
                   (repl . #t)
                   (ring:1 . #t)
                   (zo . #t)))
          (source . "https://github.com/bennn/zordoz.git")
          (tags . ("compiler" "repl" "zo"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "b18f761ab8cd0adf6360e6829bd0d6f1dc6eb354")
                          (source . "https://github.com/bennn/zordoz.git")
                          (source_url
                           .
                           "https://github.com/bennn/zordoz.git")))
                 ("6.1"
                  .
                  #hasheq((checksum
                           .
                           "2f098c8b8877075d87b1f7c7c29ff2f69649990f")
                          (source
                           .
                           "https://github.com/bennn/zordoz.git#v6.1")
                          (source_url
                           .
                           "https://github.com/bennn/zordoz.git#v6.1")))
                 ("6.1.1"
                  .
                  #hasheq((checksum
                           .
                           "2f098c8b8877075d87b1f7c7c29ff2f69649990f")
                          (source
                           .
                           "https://github.com/bennn/zordoz.git#v6.1")
                          (source_url
                           .
                           "https://github.com/bennn/zordoz.git#v6.1")))
                 ("6.10"
                  .
                  #hasheq((checksum
                           .
                           "65a01ee5f99b08d71b3ff4c0fb9de8b53ba08bf1")
                          (source
                           .
                           "https://github.com/bennn/zordoz.git#v6.5")
                          (source_url
                           .
                           "https://github.com/bennn/zordoz.git#v6.5")))
                 ("6.10.1"
                  .
                  #hasheq((checksum
                           .
                           "65a01ee5f99b08d71b3ff4c0fb9de8b53ba08bf1")
                          (source
                           .
                           "https://github.com/bennn/zordoz.git#v6.5")
                          (source_url
                           .
                           "https://github.com/bennn/zordoz.git#v6.5")))
                 ("6.11"
                  .
                  #hasheq((checksum
                           .
                           "65a01ee5f99b08d71b3ff4c0fb9de8b53ba08bf1")
                          (source
                           .
                           "https://github.com/bennn/zordoz.git#v6.5")
                          (source_url
                           .
                           "https://github.com/bennn/zordoz.git#v6.5")))
                 ("6.12"
                  .
                  #hasheq((checksum
                           .
                           "65a01ee5f99b08d71b3ff4c0fb9de8b53ba08bf1")
                          (source
                           .
                           "https://github.com/bennn/zordoz.git#v6.5")
                          (source_url
                           .
                           "https://github.com/bennn/zordoz.git#v6.5")))
                 ("6.2"
                  .
                  #hasheq((checksum
                           .
                           "2c7d2a7716754fb653379771830b2bd22dc4f5af")
                          (source
                           .
                           "https://github.com/bennn/zordoz.git#v6.2")
                          (source_url
                           .
                           "https://github.com/bennn/zordoz.git#v6.2")))
                 ("6.2.1"
                  .
                  #hasheq((checksum
                           .
                           "2c7d2a7716754fb653379771830b2bd22dc4f5af")
                          (source
                           .
                           "https://github.com/bennn/zordoz.git#v6.2")
                          (source_url
                           .
                           "https://github.com/bennn/zordoz.git#v6.2")))
                 ("6.3"
                  .
                  #hasheq((checksum
                           .
                           "86819d0d66d537657cbc2d83ee3d4a41465a0eea")
                          (source
                           .
                           "https://github.com/bennn/zordoz.git#v6.3")
                          (source_url
                           .
                           "https://github.com/bennn/zordoz.git#v6.3")))
                 ("6.4"
                  .
                  #hasheq((checksum
                           .
                           "86819d0d66d537657cbc2d83ee3d4a41465a0eea")
                          (source
                           .
                           "https://github.com/bennn/zordoz.git#v6.3")
                          (source_url
                           .
                           "https://github.com/bennn/zordoz.git#v6.3")))
                 ("6.5"
                  .
                  #hasheq((checksum
                           .
                           "65a01ee5f99b08d71b3ff4c0fb9de8b53ba08bf1")
                          (source
                           .
                           "https://github.com/bennn/zordoz.git#v6.5")
                          (source_url
                           .
                           "https://github.com/bennn/zordoz.git#v6.5")))
                 ("6.6"
                  .
                  #hasheq((checksum
                           .
                           "65a01ee5f99b08d71b3ff4c0fb9de8b53ba08bf1")
                          (source
                           .
                           "https://github.com/bennn/zordoz.git#v6.5")
                          (source_url
                           .
                           "https://github.com/bennn/zordoz.git#v6.5")))
                 ("6.7"
                  .
                  #hasheq((checksum
                           .
                           "65a01ee5f99b08d71b3ff4c0fb9de8b53ba08bf1")
                          (source
                           .
                           "https://github.com/bennn/zordoz.git#v6.5")
                          (source_url
                           .
                           "https://github.com/bennn/zordoz.git#v6.5")))
                 ("6.8"
                  .
                  #hasheq((checksum
                           .
                           "65a01ee5f99b08d71b3ff4c0fb9de8b53ba08bf1")
                          (source
                           .
                           "https://github.com/bennn/zordoz.git#v6.5")
                          (source_url
                           .
                           "https://github.com/bennn/zordoz.git#v6.5")))
                 ("6.9"
                  .
                  #hasheq((checksum
                           .
                           "65a01ee5f99b08d71b3ff4c0fb9de8b53ba08bf1")
                          (source
                           .
                           "https://github.com/bennn/zordoz.git#v6.5")
                          (source_url
                           .
                           "https://github.com/bennn/zordoz.git#v6.5")))))))
 ("zubat"
  .
  #hasheq((author . "kalxd@126.com")
          (authors . ("kalxd@126.com"))
          (build
           .
           #hash((conflicts-log . #f)
                 (dep-failure-log . "server/built/deps/zubat.txt")
                 (docs . (("main" "zubat" "doc/zubat@zubat/index.html")))
                 (failure-log . #f)
                 (min-failure-log . #f)
                 (success-log . "server/built/install/zubat.txt")
                 (test-failure-log . #f)
                 (test-success-log . "server/built/test-success/zubat.txt")))
          (checksum . "1c37513c74045aa6352d5eff722518f140fc4a5a")
          (checksum-error . #f)
          (conflicts . ())
          (dependencies
           .
           ("base"
            "html-parsing"
            "sxml"
            "scribble-lib"
            "racket-doc"
            "rackunit-lib"))
          (dependency-names
           .
           ("base"
            "html-parsing"
            "sxml"
            "scribble-lib"
            "racket-doc"
            "rackunit-lib"))
          (description . "parse html5 element easily.")
          (implies . ())
          (last-checked . 1557339817)
          (last-edit . 1526793443)
          (last-updated . 1546949684)
          (modules
           .
           ((lib "zubat/lib/parse.rkt")
            (lib "zubat/main.rkt")
            (lib "zubat/scribblings/element.scrbl")
            (lib "zubat/scribblings/zubat.scrbl")
            (lib "zubat/scribblings/type.scrbl")
            (lib "zubat/scribblings/parse.scrbl")
            (lib "zubat/lib/nodeset.rkt")
            (lib "zubat/lib/type.rkt")
            (lib "zubat/lib/test-kit.rkt")
            (lib "zubat/lib/node.rkt")))
          (name . "zubat")
          (nix-sha256
           .
           "0d829kwzwi8bgc5pnjf7axy5jgxrlnfxylmd9y7ba774mwhkwsr2")
          (ring . 2)
          (search-terms
           .
           #hasheq((:build-dep-fail: . #t)
                   (:build-success: . #t)
                   (:docs: . #t)
                   (author:kalxd@126.com . #t)
                   (html . #t)
                   (ring:2 . #t)))
          (source . "https://github.com/kalxd/zubat.git")
          (tags . ("html"))
          (versions
           .
           #hash((default
                  .
                  #hasheq((checksum
                           .
                           "1c37513c74045aa6352d5eff722518f140fc4a5a")
                          (source . "https://github.com/kalxd/zubat.git")
                          (source_url
                           .
                           "https://github.com/kalxd/zubat.git"))))))))
